

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Dec 19 01:31:20 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=4,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=4,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=4,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=4,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=4,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=4,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=4,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=4,class=CODE,delta=1
   194                           	psect	text170,global,reloc=4,class=CODE,delta=1
   195                           	psect	text171,global,reloc=4,class=CODE,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,delta=1
   197                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   198                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   199                           	psect	text173,global,reloc=4,class=CODE,delta=1
   200                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   201                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   202  0000                     
   203                           ; Version 2.10
   204                           ; Generated 31/07/2019 GMT
   205                           ; 
   206                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   207                           ; All rights reserved.
   208                           ; 
   209                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   210                           ; 
   211                           ; Redistribution and use in source and binary forms, with or without modification, are
   212                           ; permitted provided that the following conditions are met:
   213                           ; 
   214                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   215                           ;        conditions and the following disclaimer.
   216                           ; 
   217                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   218                           ;        of conditions and the following disclaimer in the documentation and/or other
   219                           ;        materials provided with the distribution.
   220                           ; 
   221                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   222                           ;        software without specific prior written permission.
   223                           ; 
   224                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   225                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   226                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   227                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   228                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   229                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   230                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   231                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   232                           ; 
   233                           ; 
   234                           ; Code-generator required, PIC18F57K42 Definitions
   235                           ; 
   236                           ; SFR Addresses
   237  0000                     
   238 ;;_esr_temp	offset	0
   239 ;;_i_esr	offset	4
   240 ;;_shape	offset	6
   241 ;;_k	offset	7
   242 ;;_j	offset	8
   243 ;;_i	offset	9
   244 ;;_inp_index	offset	10
   245 ;;_mode	offset	11
   246 ;;_i_ror	offset	12
   247 ;;_s	offset=-2 (param)
   248 ;;_c	offset	0
   249 ;;_shape	offset=-1 (param)
   250 ;;_reset	offset=-2 (param)
   251 ;;_cmd	offset=-1 (param)
   252 ;;_cmd	offset=-1 (param)
   253 ;;_data	offset=-1 (param)
   254 ;;__this	offset=-2 (param)
   255 ;;_cvoltage	offset=-4 (param)
   256 ;;_h	offset=-1 (param)
   257 ;;_h	offset=-1 (param)
   258 ;;_i	offset=-1 (param)
   259 ;;_fsm	offset=-1 (param)
   260 ;;_channel	offset=-1 (param)
   261 ;;_mode	offset=-1 (param)
   262 ;;_mode	offset=-1 (param)
   263 ;;_cmd	offset=-1 (param)
   264 ;;_i	offset	0
   265 ;;_h	offset=-1 (param)
   266 ;;_flipper	offset=-1 (param)
   267 ;;_f	offset	0
   268 ;;_ap	offset	6
   269 ;;_s	offset=-3 (param)
   270 ;;_fmt	offset=-5 (param)
   271 ;;_line	offset=-1 (param)
   272 ;;_vterm	offset=-2 (param)
   273 ;;_numMilliseconds	offset=-2 (param)
   274 ;;_vterm	offset=-1 (param)
   275 ;;_r	offset=-1 (param)
   276 ;;_c	offset=-2 (param)
   277 ;;_strPtr	offset=-4 (param)
   278 ;;_strPtr	offset=-1 (param)
   279 ;;_delay	offset=-4 (param)
   280 ;;_strPtr	offset=-2 (param)
   281 ;;__this	offset=-2 (param)
   282 ;;_clearBuffer	offset=-3 (param)
   283 ;;_s	offset	0
   284 ;;_k	offset	2
   285 ;;_dest	offset=-2 (param)
   286 ;;_c	offset=-4 (param)
   287 ;;_n	offset=-6 (param)
   288 ;;_ap	offset	0
   289 ;;_fmt	offset=-3 (param)
   290 ;;_cfmt	offset	0
   291 ;;_fp	offset=-2 (param)
   292 ;;_fmt	offset=-4 (param)
   293 ;;_ap	offset=-6 (param)
   294 ;;_vfpfcnvrt$5442	offset	0
   295 ;;_vfpfcnvrt$5453	offset	2
   296 ;;_vfpfcnvrt$5441	offset	4
   297 ;;_llu	offset	6
   298 ;;_ll	offset	14
   299 ;;_f	offset	22
   300 ;;_ct	offset	26
   301 ;;_cp	offset	29
   302 ;;_c	offset	31
   303 ;;_fp	offset=-2 (param)
   304 ;;_fmt	offset=-4 (param)
   305 ;;_ap	offset=-6 (param)
   306 ;;_xtoa$5427	offset	0
   307 ;;_xtoa$5426	offset	2
   308 ;;_n	offset	4
   309 ;;_c	offset	12
   310 ;;_i	offset	14
   311 ;;_w	offset	16
   312 ;;_p	offset	18
   313 ;;_fp	offset=-2 (param)
   314 ;;_d	offset=-10 (param)
   315 ;;_x	offset=-11 (param)
   316 ;;_toupper$6233	offset	0
   317 ;;_c	offset=-2 (param)
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_n	offset	0
   321 ;;_i	offset	8
   322 ;;_w	offset	10
   323 ;;_p	offset	12
   324 ;;_fp	offset=-2 (param)
   325 ;;_d	offset=-10 (param)
   326 ;;_counter	offset	0
   327 ;;_dividend	offset=-8 (param)
   328 ;;_divisor	offset=-16 (param)
   329 ;;_quotient	offset	0
   330 ;;_counter	offset	8
   331 ;;_dividend	offset=-8 (param)
   332 ;;_divisor	offset=-16 (param)
   333 ;;_r	offset	0
   334 ;;_l	offset	2
   335 ;;__l	offset=-2 (param)
   336 ;;__r	offset=-4 (param)
   337 ;;_n	offset=-6 (param)
   338 ;;_nuls	offset	0
   339 ;;_l	offset	7
   340 ;;_p	offset	9
   341 ;;_cp	offset	11
   342 ;;_w	offset	13
   343 ;;_i	offset	15
   344 ;;_fp	offset=-2 (param)
   345 ;;_s	offset=-4 (param)
   346 ;;_efgtoa$5399	offset	0
   347 ;;_efgtoa$5398	offset	2
   348 ;;_efgtoa$5397	offset	4
   349 ;;_efgtoa$5393	offset	6
   350 ;;_efgtoa$5389	offset	8
   351 ;;_efgtoa$5388	offset	10
   352 ;;_u	offset	12
   353 ;;_g	offset	16
   354 ;;_l	offset	20
   355 ;;_h	offset	24
   356 ;;_ou	offset	28
   357 ;;_n	offset	32
   358 ;;_e	offset	34
   359 ;;_i	offset	36
   360 ;;_w	offset	38
   361 ;;_p	offset	40
   362 ;;_sign	offset	42
   363 ;;_d	offset	44
   364 ;;_ne	offset	46
   365 ;;_m	offset	48
   366 ;;_pp	offset	50
   367 ;;_t	offset	52
   368 ;;_mode	offset	54
   369 ;;_nmode	offset	55
   370 ;;_fp	offset=-2 (param)
   371 ;;_f	offset=-6 (param)
   372 ;;_c	offset=-7 (param)
   373 ;;_tolower$6218	offset	0
   374 ;;_c	offset=-2 (param)
   375 ;;_c	offset=-2 (param)
   376 ;;_d	offset	0
   377 ;;_s	offset	2
   378 ;;_dest	offset=-2 (param)
   379 ;;_src	offset=-4 (param)
   380 ;;_u	offset	0
   381 ;;_m	offset	4
   382 ;;_e	offset	8
   383 ;;_x	offset=-4 (param)
   384 ;;_u	offset	0
   385 ;;_e	offset	4
   386 ;;_x	offset=-4 (param)
   387 ;;_exp1	offset	0
   388 ;;_sign1	offset	1
   389 ;;_f1	offset=-4 (param)
   390 ;;_f1	offset=-4 (param)
   391 ;;_ff1	offset=-4 (param)
   392 ;;_ff2	offset=-8 (param)
   393 ;;_sign	offset	0
   394 ;;_counter	offset	1
   395 ;;_dividend	offset=-2 (param)
   396 ;;_divisor	offset=-4 (param)
   397 ;;_quotient	offset	0
   398 ;;_sign	offset	2
   399 ;;_counter	offset	3
   400 ;;_dividend	offset=-2 (param)
   401 ;;_divisor	offset=-4 (param)
   402 ;;_dtoa$5365	offset	0
   403 ;;_n	offset	2
   404 ;;_i	offset	10
   405 ;;_s	offset	12
   406 ;;_w	offset	14
   407 ;;_p	offset	16
   408 ;;_fp	offset=-2 (param)
   409 ;;_d	offset=-10 (param)
   410 ;;_a	offset=-2 (param)
   411 ;;_sign	offset	0
   412 ;;_counter	offset	1
   413 ;;_dividend	offset=-8 (param)
   414 ;;_divisor	offset=-16 (param)
   415 ;;_quotient	offset	0
   416 ;;_sign	offset	8
   417 ;;_counter	offset	9
   418 ;;_dividend	offset=-8 (param)
   419 ;;_divisor	offset=-16 (param)
   420 ;;_w	offset	0
   421 ;;_fp	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_w	offset	0
   424 ;;_i	offset	2
   425 ;;_fp	offset=-2 (param)
   426 ;;_buf	offset=-4 (param)
   427 ;;_p	offset=-6 (param)
   428 ;;_a	offset	0
   429 ;;_s	offset=-2 (param)
   430 ;;_i	offset	0
   431 ;;_c	offset	2
   432 ;;_s	offset=-2 (param)
   433 ;;_fp	offset=-4 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_fp	offset=-4 (param)
   436 ;;_c	offset=-1 (param)
   437 ;;__this	offset=-2 (param)
   438 ;;_c	offset=-3 (param)
   439 ;;_atoi$5949	offset	0
   440 ;;_atoi$5947	offset	2
   441 ;;_atoi$5948	offset	4
   442 ;;_n	offset	5
   443 ;;_neg	offset	7
   444 ;;_s	offset=-2 (param)
   445 ;;_isspace$5998	offset	0
   446 ;;_c	offset=-2 (param)
   447 ;;_c	offset=-2 (param)
   448 ;;_vterm	offset=-1 (param)
   449 ;;_new_response_info	offset=-1 (param)
   450 ;;_new_response_info	offset=-1 (param)
   451 ;;_level	offset=-2 (param)
   452 ;;_dutyValue	offset=-2 (param)
   453 ;;_timer	offset=-1 (param)
   454 ;;_timer	offset=-1 (param)
   455 ;;_count	offset=-3 (param)
   456 ;;_h	offset=-1 (param)
   457 ;;_u	offset	0
   458 ;;_x	offset=-4 (param)
   459 ;;_chan	offset=-1 (param)
   460 ;;_to_what	offset=-2 (param)
   461 ;;_u	offset	0
   462 ;;_s	offset=-2 (param)
   463 ;;_index	offset=-1 (param)
   464 ;;_arg	offset	0
   465 ;;_exp	offset	4
   466 ;;_sign	offset=-1 (param)
   467 ;;_val	offset=-5 (param)
   468 ;;_grs	offset	0
   469 ;;_rem	offset	4
   470 ;;_new_exp	offset	8
   471 ;;_aexp	offset	10
   472 ;;_bexp	offset	11
   473 ;;_sign	offset	12
   474 ;;_b	offset=-4 (param)
   475 ;;_a	offset=-8 (param)
   476 ;;_ff1	offset=-4 (param)
   477 ;;_ff2	offset=-8 (param)
   478 ;;_lp_speed	offset	0
   479 ;;_new	offset=-4 (param)
   480 ;;_bn	offset=-5 (param)
   481 ;;_slow	offset=-6 (param)
   482 ;;_b	offset=-4 (param)
   483 ;;_a	offset=-8 (param)
   484 ;;_grs	offset	0
   485 ;;_bexp	offset	1
   486 ;;_aexp	offset	2
   487 ;;_signs	offset	3
   488 ;;_b	offset=-4 (param)
   489 ;;_a	offset=-8 (param)
   490 ;;_prod	offset	0
   491 ;;_grs	offset	4
   492 ;;_temp	offset	8
   493 ;;_bexp	offset	10
   494 ;;_aexp	offset	11
   495 ;;_sign	offset	12
   496 ;;_b	offset=-4 (param)
   497 ;;_a	offset=-8 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_state	offset	0
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_i	offset	0
   510 ;;_sw_value	offset	1
   511 ;;_timerVal	offset=-2 (param)
   512 ;;_timerVal	offset=-2 (param)
   513 ;;_log_ptr	offset	0
   514 ;;_f	offset	0
   515 ;;_ap	offset	6
   516 ;;_s	offset=-3 (param)
   517 ;;_fmt	offset=-5 (param)
   518 ;;_cfmt	offset	0
   519 ;;_fp	offset=-2 (param)
   520 ;;_fmt	offset=-4 (param)
   521 ;;_ap	offset=-6 (param)
   522 ;;_vfpfcnvrt$5442	offset	0
   523 ;;_vfpfcnvrt$5453	offset	2
   524 ;;_vfpfcnvrt$5441	offset	4
   525 ;;_llu	offset	6
   526 ;;_ll	offset	14
   527 ;;_f	offset	22
   528 ;;_ct	offset	26
   529 ;;_cp	offset	29
   530 ;;_c	offset	31
   531 ;;_fp	offset=-2 (param)
   532 ;;_fmt	offset=-4 (param)
   533 ;;_ap	offset=-6 (param)
   534 ;;_xtoa$5427	offset	0
   535 ;;_xtoa$5426	offset	2
   536 ;;_n	offset	4
   537 ;;_c	offset	12
   538 ;;_i	offset	14
   539 ;;_w	offset	16
   540 ;;_p	offset	18
   541 ;;_fp	offset=-2 (param)
   542 ;;_d	offset=-10 (param)
   543 ;;_x	offset=-11 (param)
   544 ;;_toupper$6233	offset	0
   545 ;;_c	offset=-2 (param)
   546 ;;_c	offset=-2 (param)
   547 ;;_c	offset=-2 (param)
   548 ;;_n	offset	0
   549 ;;_i	offset	8
   550 ;;_w	offset	10
   551 ;;_p	offset	12
   552 ;;_fp	offset=-2 (param)
   553 ;;_d	offset=-10 (param)
   554 ;;_counter	offset	0
   555 ;;_dividend	offset=-8 (param)
   556 ;;_divisor	offset=-16 (param)
   557 ;;_quotient	offset	0
   558 ;;_counter	offset	8
   559 ;;_dividend	offset=-8 (param)
   560 ;;_divisor	offset=-16 (param)
   561 ;;_r	offset	0
   562 ;;_l	offset	2
   563 ;;__l	offset=-2 (param)
   564 ;;__r	offset=-4 (param)
   565 ;;_n	offset=-6 (param)
   566 ;;_nuls	offset	0
   567 ;;_l	offset	7
   568 ;;_p	offset	9
   569 ;;_cp	offset	11
   570 ;;_w	offset	13
   571 ;;_i	offset	15
   572 ;;_fp	offset=-2 (param)
   573 ;;_s	offset=-4 (param)
   574 ;;_efgtoa$5399	offset	0
   575 ;;_efgtoa$5398	offset	2
   576 ;;_efgtoa$5397	offset	4
   577 ;;_efgtoa$5393	offset	6
   578 ;;_efgtoa$5389	offset	8
   579 ;;_efgtoa$5388	offset	10
   580 ;;_u	offset	12
   581 ;;_g	offset	16
   582 ;;_l	offset	20
   583 ;;_h	offset	24
   584 ;;_ou	offset	28
   585 ;;_n	offset	32
   586 ;;_e	offset	34
   587 ;;_i	offset	36
   588 ;;_w	offset	38
   589 ;;_p	offset	40
   590 ;;_sign	offset	42
   591 ;;_d	offset	44
   592 ;;_ne	offset	46
   593 ;;_m	offset	48
   594 ;;_pp	offset	50
   595 ;;_t	offset	52
   596 ;;_mode	offset	54
   597 ;;_nmode	offset	55
   598 ;;_fp	offset=-2 (param)
   599 ;;_f	offset=-6 (param)
   600 ;;_c	offset=-7 (param)
   601 ;;_tolower$6218	offset	0
   602 ;;_c	offset=-2 (param)
   603 ;;_c	offset=-2 (param)
   604 ;;_d	offset	0
   605 ;;_s	offset	2
   606 ;;_dest	offset=-2 (param)
   607 ;;_src	offset=-4 (param)
   608 ;;_u	offset	0
   609 ;;_m	offset	4
   610 ;;_e	offset	8
   611 ;;_x	offset=-4 (param)
   612 ;;_u	offset	0
   613 ;;_e	offset	4
   614 ;;_x	offset=-4 (param)
   615 ;;_exp1	offset	0
   616 ;;_sign1	offset	1
   617 ;;_f1	offset=-4 (param)
   618 ;;_b	offset=-4 (param)
   619 ;;_a	offset=-8 (param)
   620 ;;_grs	offset	0
   621 ;;_bexp	offset	1
   622 ;;_aexp	offset	2
   623 ;;_signs	offset	3
   624 ;;_b	offset=-4 (param)
   625 ;;_a	offset=-8 (param)
   626 ;;_f1	offset=-4 (param)
   627 ;;_prod	offset	0
   628 ;;_grs	offset	4
   629 ;;_temp	offset	8
   630 ;;_bexp	offset	10
   631 ;;_aexp	offset	11
   632 ;;_sign	offset	12
   633 ;;_b	offset=-4 (param)
   634 ;;_a	offset=-8 (param)
   635 ;;_ff1	offset=-4 (param)
   636 ;;_ff2	offset=-8 (param)
   637 ;;_ff1	offset=-4 (param)
   638 ;;_ff2	offset=-8 (param)
   639 ;;_grs	offset	0
   640 ;;_rem	offset	4
   641 ;;_new_exp	offset	8
   642 ;;_aexp	offset	10
   643 ;;_bexp	offset	11
   644 ;;_sign	offset	12
   645 ;;_b	offset=-4 (param)
   646 ;;_a	offset=-8 (param)
   647 ;;_sign	offset	0
   648 ;;_counter	offset	1
   649 ;;_dividend	offset=-2 (param)
   650 ;;_divisor	offset=-4 (param)
   651 ;;_quotient	offset	0
   652 ;;_sign	offset	2
   653 ;;_counter	offset	3
   654 ;;_dividend	offset=-2 (param)
   655 ;;_divisor	offset=-4 (param)
   656 ;;_dtoa$5365	offset	0
   657 ;;_n	offset	2
   658 ;;_i	offset	10
   659 ;;_s	offset	12
   660 ;;_w	offset	14
   661 ;;_p	offset	16
   662 ;;_fp	offset=-2 (param)
   663 ;;_d	offset=-10 (param)
   664 ;;_a	offset=-2 (param)
   665 ;;_sign	offset	0
   666 ;;_counter	offset	1
   667 ;;_dividend	offset=-8 (param)
   668 ;;_divisor	offset=-16 (param)
   669 ;;_quotient	offset	0
   670 ;;_sign	offset	8
   671 ;;_counter	offset	9
   672 ;;_dividend	offset=-8 (param)
   673 ;;_divisor	offset=-16 (param)
   674 ;;_w	offset	0
   675 ;;_fp	offset=-2 (param)
   676 ;;_c	offset=-3 (param)
   677 ;;_w	offset	0
   678 ;;_i	offset	2
   679 ;;_fp	offset=-2 (param)
   680 ;;_buf	offset=-4 (param)
   681 ;;_p	offset=-6 (param)
   682 ;;_a	offset	0
   683 ;;_s	offset=-2 (param)
   684 ;;_i	offset	0
   685 ;;_c	offset	2
   686 ;;_s	offset=-2 (param)
   687 ;;_fp	offset=-4 (param)
   688 ;;_c	offset=-2 (param)
   689 ;;_fp	offset=-4 (param)
   690 ;;_c	offset=-1 (param)
   691 ;;__this	offset=-2 (param)
   692 ;;_c	offset=-3 (param)
   693 ;;_atoi$5949	offset	0
   694 ;;_atoi$5947	offset	2
   695 ;;_atoi$5948	offset	4
   696 ;;_n	offset	5
   697 ;;_neg	offset	7
   698 ;;_s	offset=-2 (param)
   699 ;;_isspace$5998	offset	0
   700 ;;_c	offset=-2 (param)
   701 ;;_c	offset=-2 (param)
   702 ;;_dsize	offset=-2 (param)
   703 ;;_u	offset	0
   704 ;;_x	offset=-4 (param)
   705 ;;_timer	offset=-1 (param)
   706 ;;_count	offset=-3 (param)
   707 ;;_channel	offset=-1 (param)
   708 ;;_i	offset	0
   709                           
   710                           	psect	idataBIGRAM
   711  017BB8                     __pidataBIGRAM:
   712                           	opt callstack 0
   713                           
   714                           ;initializer for _port_data
   715  017BB8  FF                 	db	255
   716  017BB9  00                 	db	0
   717  017BBA  FF                 	db	255
   718  017BBB  00                 	db	0
   719  017BBC  FF                 	db	255
   720  017BBD  00                 	db	0
   721  017BBE  FF                 	db	255
   722  017BBF  00                 	db	0
   723  017BC0  FF                 	db	255
   724  017BC1  00                 	db	0
   725  017BC2  FF                 	db	255
   726  017BC3  00                 	db	0
   727  017BC4  FF                 	db	255
   728  017BC5  00                 	db	0
   729  017BC6  FF                 	db	255
   730  017BC7  00                 	db	0
   731  017BC8  00                 	db	0
   732  017BC9  00                 	db	0
   733  017BCA  00                 	db	0
   734  017BCB  00                 	db	0
   735  017BCC  00                 	db	0
   736  017BCD  00                 	db	0
   737  017BCE  00                 	db	0
   738  017BCF  00                 	db	0
   739  017BD0  00                 	db	0
   740  017BD1  00                 	db	0
   741  017BD2  00                 	db	0
   742  017BD3  00                 	db	0
   743  017BD4  00                 	db	0
   744  017BD5  00                 	db	0
   745  017BD6  00                 	db	0
   746  017BD7  00                 	db	0
   747  017BD8  00                 	db	0
   748  017BD9  00                 	db	0
   749  017BDA  00                 	db	0
   750  017BDB  00                 	db	0
   751  017BDC  00                 	db	0
   752  017BDD  00                 	db	0
   753  017BDE  00                 	db	0
   754  017BDF  00                 	db	0
   755  017BE0  00                 	db	0
   756  017BE1  00                 	db	0
   757  017BE2  00                 	db	0
   758  017BE3  00                 	db	0
   759  017BE4  00                 	db	0
   760  017BE5  00                 	db	0
   761  017BE6  00                 	db	0
   762  017BE7  00                 	db	0
   763  017BE8  00                 	db	0
   764  017BE9  00                 	db	0
   765  017BEA  00                 	db	0
   766  017BEB  00                 	db	0
   767  017BEC  00                 	db	0
   768  017BED  00                 	db	0
   769  017BEE  00                 	db	0
   770  017BEF  00                 	db	0
   771  017BF0  00                 	db	0
   772  017BF1  00                 	db	0
   773  017BF2  00                 	db	0
   774  017BF3  00                 	db	0
   775  017BF4  00                 	db	0
   776  017BF5  00                 	db	0
   777  017BF6  00                 	db	0
   778  017BF7  00                 	db	0
   779  017BF8  00                 	db	0
   780  017BF9  00                 	db	0
   781  017BFA  00                 	db	0
   782  017BFB  00                 	db	0
   783  017BFC  00                 	db	0
   784  017BFD  00                 	db	0
   785  017BFE  00                 	db	0
   786  017BFF  00                 	db	0
   787  017C00  00                 	db	0
   788  017C01  00                 	db	0
   789  017C02  00                 	db	0
   790  017C03  00                 	db	0
   791  017C04  00                 	db	0
   792  017C05  00                 	db	0
   793  017C06  00                 	db	0
   794  017C07  00                 	db	0
   795  017C08  00                 	db	0
   796  017C09  00                 	db	0
   797  017C0A  00                 	db	0
   798  017C0B  00                 	db	0
   799  017C0C  00                 	db	0
   800  017C0D  00                 	db	0
   801  017C0E  00                 	db	0
   802  017C0F  00                 	db	0
   803  017C10  00                 	db	0
   804  017C11  00                 	db	0
   805  017C12  00                 	db	0
   806  017C13  00                 	db	0
   807  017C14  00                 	db	0
   808  017C15  00                 	db	0
   809  017C16  00                 	db	0
   810  017C17  00                 	db	0
   811  017C18  00                 	db	0
   812  017C19  00                 	db	0
   813  017C1A  00                 	db	0
   814  017C1B  00                 	db	0
   815  017C1C  00                 	db	0
   816  017C1D  00                 	db	0
   817  017C1E  00                 	db	0
   818  017C1F  00                 	db	0
   819  017C20  00                 	db	0
   820  017C21  00                 	db	0
   821  017C22  00                 	db	0
   822  017C23  00                 	db	0
   823  017C24  00                 	db	0
   824  017C25  00                 	db	0
   825  017C26  00                 	db	0
   826  017C27  00                 	db	0
   827  017C28  00                 	db	0
   828  017C29  00                 	db	0
   829  017C2A  00                 	db	0
   830  017C2B  00                 	db	0
   831  017C2C  00                 	db	0
   832  017C2D  00                 	db	0
   833  017C2E  00                 	db	0
   834  017C2F  00                 	db	0
   835  017C30  00                 	db	0
   836  017C31  00                 	db	0
   837  017C32  00                 	db	0
   838  017C33  00                 	db	0
   839  017C34  00                 	db	0
   840  017C35  00                 	db	0
   841  017C36  00                 	db	0
   842  017C37  00                 	db	0
   843  017C38  00                 	db	0
   844  017C39  00                 	db	0
   845  017C3A  00                 	db	0
   846  017C3B  00                 	db	0
   847  017C3C  00                 	db	0
   848  017C3D  00                 	db	0
   849  017C3E  00                 	db	0
   850  017C3F  00                 	db	0
   851  017C40  00                 	db	0
   852  017C41  00                 	db	0
   853  017C42  00                 	db	0
   854  017C43  00                 	db	0
   855  017C44  00                 	db	0
   856  017C45  00                 	db	0
   857  017C46  00                 	db	0
   858  017C47  00                 	db	0
   859  017C48  00                 	db	0
   860  017C49  00                 	db	0
   861  017C4A  00                 	db	0
   862  017C4B  00                 	db	0
   863  017C4C  00                 	db	0
   864  017C4D  00                 	db	0
   865  017C4E  00                 	db	0
   866  017C4F  00                 	db	0
   867  017C50  00                 	db	0
   868  017C51  00                 	db	0
   869  017C52  00                 	db	0
   870  017C53  00                 	db	0
   871  017C54  00                 	db	0
   872  017C55  00                 	db	0
   873  017C56  00                 	db	0
   874  017C57  00                 	db	0
   875  017C58  00                 	db	0
   876  017C59  00                 	db	0
   877  017C5A  00                 	db	0
   878  017C5B  00                 	db	0
   879  017C5C  00                 	db	0
   880  017C5D  00                 	db	0
   881  017C5E  00                 	db	0
   882  017C5F  00                 	db	0
   883  017C60  00                 	db	0
   884  017C61  00                 	db	0
   885  017C62  00                 	db	0
   886  017C63  00                 	db	0
   887  017C64  00                 	db	0
   888  017C65  00                 	db	0
   889  017C66  00                 	db	0
   890  017C67  00                 	db	0
   891  017C68  00                 	db	0
   892  017C69  00                 	db	0
   893  017C6A  00                 	db	0
   894  017C6B  00                 	db	0
   895  017C6C  00                 	db	0
   896  017C6D  00                 	db	0
   897  017C6E  00                 	db	0
   898  017C6F  00                 	db	0
   899  017C70  00                 	db	0
   900  017C71  00                 	db	0
   901  017C72  00                 	db	0
   902  017C73  00                 	db	0
   903  017C74  00                 	db	0
   904  017C75  00                 	db	0
   905  017C76  00                 	db	0
   906  017C77  00                 	db	0
   907  017C78  00                 	db	0
   908  017C79  00                 	db	0
   909  017C7A  00                 	db	0
   910  017C7B  00                 	db	0
   911  017C7C  00                 	db	0
   912  017C7D  00                 	db	0
   913  017C7E  00                 	db	0
   914  017C7F  00                 	db	0
   915  017C80  00                 	db	0
   916  017C81  00                 	db	0
   917  017C82  00                 	db	0
   918  017C83  00                 	db	0
   919  017C84  00                 	db	0
   920  017C85  00                 	db	0
   921  017C86  00                 	db	0
   922  017C87  00                 	db	0
   923  017C88  00                 	db	0
   924  017C89  00                 	db	0
   925  017C8A  00                 	db	0
   926  017C8B  00                 	db	0
   927  017C8C  00                 	db	0
   928  017C8D  00                 	db	0
   929  017C8E  00                 	db	0
   930  017C8F  00                 	db	0
   931  017C90  00                 	db	0
   932  017C91  00                 	db	0
   933  017C92  00                 	db	0
   934  017C93  00                 	db	0
   935  017C94  00                 	db	0
   936  017C95  00                 	db	0
   937  017C96  00                 	db	0
   938  017C97  00                 	db	0
   939  017C98  00                 	db	0
   940  017C99  00                 	db	0
   941  017C9A  00                 	db	0
   942  017C9B  00                 	db	0
   943  017C9C  00                 	db	0
   944  017C9D  00                 	db	0
   945  017C9E  00                 	db	0
   946  017C9F  00                 	db	0
   947  017CA0  00                 	db	0
   948  017CA1  00                 	db	0
   949  017CA2  00                 	db	0
   950  017CA3  00                 	db	0
   951  017CA4  00                 	db	0
   952  017CA5  00                 	db	0
   953  017CA6  00                 	db	0
   954  017CA7  00                 	db	0
   955  017CA8  00                 	db	0
   956  017CA9  00                 	db	0
   957  017CAA  00                 	db	0
   958  017CAB  00                 	db	0
   959  017CAC  00                 	db	0
   960  017CAD  00                 	db	0
   961  017CAE  00                 	db	0
   962  017CAF  00                 	db	0
   963  017CB0  00                 	db	0
   964  017CB1  00                 	db	0
   965  017CB2  00                 	db	0
   966  017CB3  00                 	db	0
   967  017CB4  00                 	db	0
   968  017CB5  00                 	db	0
   969  017CB6  00                 	db	0
   970  017CB7  00                 	db	0
   971  017CB8  00                 	db	0
   972  017CB9  00                 	db	0
   973  017CBA  00                 	db	0
   974  017CBB  00                 	db	0
   975  017CBC  00                 	db	0
   976  017CBD  00                 	db	0
   977  017CBE  00                 	db	0
   978  017CBF  00                 	db	0
   979  017CC0  00                 	db	0
   980  017CC1  00                 	db	0
   981  017CC2  00                 	db	0
   982  017CC3  00                 	db	0
   983  017CC4  00                 	db	0
   984  017CC5  00                 	db	0
   985  017CC6  00                 	db	0
   986  017CC7  00                 	db	0
   987  017CC8  00                 	db	0
   988  017CC9  00                 	db	0
   989  017CCA  00                 	db	0
   990  017CCB  00                 	db	0
   991  017CCC  00                 	db	0
   992  017CCD  00                 	db	0
   993  017CCE  00                 	db	0
   994  017CCF  00                 	db	0
   995  017CD0  00                 	db	0
   996  017CD1  00                 	db	0
   997  017CD2  00                 	db	0
   998  017CD3  00                 	db	0
   999  017CD4  00                 	db	0
  1000  017CD5  00                 	db	0
  1001  017CD6  00                 	db	0
  1002  017CD7  00                 	db	0
  1003  017CD8  00                 	db	0
  1004  017CD9  00                 	db	0
  1005  017CDA  00                 	db	0
  1006  017CDB  00                 	db	0
  1007  017CDC  00                 	db	0
  1008  017CDD  00                 	db	0
  1009  017CDE  00                 	db	0
  1010  017CDF  00                 	db	0
  1011  017CE0  00                 	db	0
  1012  017CE1  00                 	db	0
  1013  017CE2  00                 	db	0
  1014  017CE3  00                 	db	0
  1015  017CE4  00                 	db	0
  1016  017CE5  00                 	db	0
  1017  017CE6  00                 	db	0
  1018  017CE7  00                 	db	0
  1019  017CE8  00                 	db	0
  1020  017CE9  00                 	db	0
  1021  017CEA  00                 	db	0
  1022  017CEB  00                 	db	0
  1023  017CEC  00                 	db	0
  1024  017CED  00                 	db	0
  1025  017CEE  00                 	db	0
  1026  017CEF  00                 	db	0
  1027  017CF0  00                 	db	0
  1028  017CF1  00                 	db	0
  1029  017CF2  00                 	db	0
  1030  017CF3  00                 	db	0
  1031  017CF4  00                 	db	0
  1032  017CF5  00                 	db	0
  1033  017CF6  00                 	db	0
  1034  017CF7  00                 	db	0
  1035  017CF8  00                 	db	0
  1036  017CF9  00                 	db	0
  1037  017CFA  00                 	db	0
  1038  017CFB  00                 	db	0
  1039  017CFC  00                 	db	0
  1040  017CFD  00                 	db	0
  1041  017CFE  00                 	db	0
  1042  017CFF  00                 	db	0
  1043  017D00  00                 	db	0
  1044  017D01  00                 	db	0
  1045  017D02  00                 	db	0
  1046  017D03  00                 	db	0
  1047  017D04  00                 	db	0
  1048  017D05  00                 	db	0
  1049  017D06  00                 	db	0
  1050  017D07  00                 	db	0
  1051  017D08  00                 	db	0
  1052  017D09  00                 	db	0
  1053  017D0A  00                 	db	0
  1054  017D0B  00                 	db	0
  1055  017D0C  00                 	db	0
  1056  017D0D  00                 	db	0
  1057  017D0E  00                 	db	0
  1058  017D0F  00                 	db	0
  1059  017D10  00                 	db	0
  1060  017D11  00                 	db	0
  1061  017D12  00                 	db	0
  1062  017D13  00                 	db	0
  1063  017D14  00                 	db	0
  1064  017D15  00                 	db	0
  1065  017D16  00                 	db	0
  1066  017D17  00                 	db	0
  1067  017D18  00                 	db	0
  1068  017D19  00                 	db	0
  1069  017D1A  00                 	db	0
  1070  017D1B  00                 	db	0
  1071  017D1C  00                 	db	0
  1072  017D1D  00                 	db	0
  1073  017D1E  00                 	db	0
  1074  017D1F  00                 	db	0
  1075  017D20  00                 	db	0
  1076  017D21  00                 	db	0
  1077  017D22  00                 	db	0
  1078  017D23  00                 	db	0
  1079  017D24  00                 	db	0
  1080  017D25  00                 	db	0
  1081  017D26  00                 	db	0
  1082  017D27  00                 	db	0
  1083  017D28  00                 	db	0
  1084  017D29  00                 	db	0
  1085  017D2A  00                 	db	0
  1086  017D2B  00                 	db	0
  1087  017D2C  00                 	db	0
  1088  017D2D  00                 	db	0
  1089  017D2E  00                 	db	0
  1090  017D2F  00                 	db	0
  1091  017D30  00                 	db	0
  1092  017D31  00                 	db	0
  1093  017D32  00                 	db	0
  1094  017D33  00                 	db	0
  1095  017D34  00                 	db	0
  1096  017D35  00                 	db	0
  1097  017D36  00                 	db	0
  1098  017D37  00                 	db	0
  1099  017D38  00                 	db	0
  1100  017D39  00                 	db	0
  1101  017D3A  00                 	db	0
  1102  017D3B  00                 	db	0
  1103  017D3C  00                 	db	0
  1104  017D3D  00                 	db	0
  1105  017D3E  00                 	db	0
  1106  017D3F  00                 	db	0
  1107  017D40  00                 	db	0
  1108  017D41  00                 	db	0
  1109  017D42  00                 	db	0
  1110  017D43  00                 	db	0
  1111  017D44  00                 	db	0
  1112  017D45  00                 	db	0
  1113  017D46  00                 	db	0
  1114  017D47  00                 	db	0
  1115  017D48  00                 	db	0
  1116  017D49  00                 	db	0
  1117  017D4A  00                 	db	0
  1118  017D4B  00                 	db	0
  1119  017D4C  00                 	db	0
  1120  017D4D  00                 	db	0
  1121  017D4E  00                 	db	0
  1122  017D4F  00                 	db	0
  1123  017D50  00                 	db	0
  1124  017D51  00                 	db	0
  1125  017D52  00                 	db	0
  1126  017D53  00                 	db	0
  1127  017D54  00                 	db	0
  1128  017D55  00                 	db	0
  1129  017D56  00                 	db	0
  1130  017D57  00                 	db	0
  1131  017D58  00                 	db	0
  1132  017D59  00                 	db	0
  1133  017D5A  00                 	db	0
  1134  017D5B  00                 	db	0
  1135  017D5C  00                 	db	0
  1136  017D5D  00                 	db	0
  1137  017D5E  00                 	db	0
  1138  017D5F  00                 	db	0
  1139  017D60  00                 	db	0
  1140  017D61  00                 	db	0
  1141  017D62  00                 	db	0
  1142  017D63  00                 	db	0
  1143  017D64  00                 	db	0
  1144  017D65  00                 	db	0
  1145  017D66  00                 	db	0
  1146  017D67  00                 	db	0
  1147  017D68  00                 	db	0
  1148  017D69  00                 	db	0
  1149  017D6A  00                 	db	0
  1150  017D6B  00                 	db	0
  1151  017D6C  00                 	db	0
  1152  017D6D  00                 	db	0
  1153  017D6E  00                 	db	0
  1154  017D6F  00                 	db	0
  1155  017D70  00                 	db	0
  1156  017D71  00                 	db	0
  1157  017D72  00                 	db	0
  1158  017D73  00                 	db	0
  1159  017D74  00                 	db	0
  1160  017D75  00                 	db	0
  1161  017D76  00                 	db	0
  1162  017D77  00                 	db	0
  1163  017D78  00                 	db	0
  1164  017D79  00                 	db	0
  1165  017D7A  00                 	db	0
  1166  017D7B  00                 	db	0
  1167  017D7C  00                 	db	0
  1168  017D7D  00                 	db	0
  1169  017D7E  00                 	db	0
  1170  017D7F  00                 	db	0
  1171  017D80  00                 	db	0
  1172  017D81  00                 	db	0
  1173  017D82  00                 	db	0
  1174  017D83  00                 	db	0
  1175  017D84  00                 	db	0
  1176  017D85  00                 	db	0
  1177  017D86  00                 	db	0
  1178  017D87  00                 	db	0
  1179  017D88  00                 	db	0
  1180  017D89  00                 	db	0
  1181  017D8A  00                 	db	0
  1182  017D8B  00                 	db	0
  1183  017D8C  00                 	db	0
  1184  017D8D  00                 	db	0
  1185  017D8E  00                 	db	0
  1186  017D8F  00                 	db	0
  1187  017D90  00                 	db	0
  1188  017D91  00                 	db	0
  1189  017D92  00                 	db	0
  1190  017D93  00                 	db	0
  1191  017D94  00                 	db	0
  1192  017D95  00                 	db	0
  1193  017D96  00                 	db	0
  1194  017D97  00                 	db	0
  1195  017D98  00                 	db	0
  1196  017D99  00                 	db	0
  1197  017D9A  00                 	db	0
  1198  017D9B  00                 	db	0
  1199  017D9C  00                 	db	0
  1200  017D9D  00                 	db	0
  1201  017D9E  00                 	db	0
  1202  017D9F  00                 	db	0
  1203  017DA0  00                 	db	0
  1204  017DA1  00                 	db	0
  1205  017DA2  00                 	db	0
  1206  017DA3  00                 	db	0
  1207  017DA4  00                 	db	0
  1208  017DA5  00                 	db	0
  1209  017DA6  00                 	db	0
  1210  017DA7  00                 	db	0
  1211  017DA8  00                 	db	0
  1212  017DA9  00                 	db	0
  1213  017DAA  00                 	db	0
  1214  017DAB  00                 	db	0
  1215  017DAC  00                 	db	0
  1216  017DAD  00                 	db	0
  1217  017DAE  00                 	db	0
  1218  017DAF  00                 	db	0
  1219  017DB0  00                 	db	0
  1220  017DB1  00                 	db	0
  1221  017DB2  00                 	db	0
  1222  017DB3  00                 	db	0
  1223  017DB4  00                 	db	0
  1224  017DB5  00                 	db	0
  1225  017DB6  00                 	db	0
  1226  017DB7  00                 	db	0
  1227                           
  1228                           	psect	idataBANK0
  1229  01ADD0                     __pidataBANK0:
  1230                           	opt callstack 0
  1231                           
  1232                           ;initializer for _R
  1233  01ADD0  0000               	dw	0
  1234  01ADD2  0000               	dw	0
  1235  01ADD4  0000               	dw	0
  1236  01ADD6  0000               	dw	0
  1237  01ADD8  0000               	dw	0
  1238  01ADDA  0000               	dw	0
  1239  01ADDC  0000               	dw	0
  1240  01ADDE  0000               	dw	0
  1241  01ADE0  0000               	dw	0
  1242  01ADE2  0000               	dw	0
  1243  01ADE4  0000               	dw	0
  1244  01ADE6  0000               	dw	0
  1245  01ADE8  0000               	dw	0
  1246  01ADEA  0000               	dw	0
  1247  01ADEC  0000               	dw	0
  1248  01ADEE  0000               	dw	0
  1249  01ADF0  0F67               	dw	3943
  1250  01ADF2  0F8F               	dw	3983
  1251  01ADF4  00                 	db	0
  1252  01ADF5  0000               	dw	0
  1253  01ADF7  00                 	db	0
  1254                           
  1255                           ;initializer for stoa@F1166
  1256  01ADF8  28                 	db	40
  1257  01ADF9  6E                 	db	110
  1258  01ADFA  75                 	db	117
  1259  01ADFB  6C                 	db	108
  1260  01ADFC  6C                 	db	108
  1261  01ADFD  29                 	db	41
  1262  01ADFE  00                 	db	0
  1263                           
  1264                           ;initializer for _H
  1265  01ADFF  00                 	db	0
  1266  01AE00  00                 	db	0
  1267  01AE01  01                 	db	1
  1268  01AE02  00                 	db	0
  1269  01AE03  01                 	db	1
  1270  01AE04  00                 	db	0
  1271  01AE05  00                 	db	0
  1272                           
  1273                           	psect	idataBANK1
  1274  01961C                     __pidataBANK1:
  1275                           	opt callstack 0
  1276                           
  1277                           ;initializer for _C
  1278  01961C  0000               	dw	0
  1279  01961E  0000               	dw	0
  1280  019620  0000               	dw	0
  1281  019622  0000               	dw	0
  1282  019624  0000               	dw	0
  1283  019626  0000               	dw	0
  1284  019628  0000               	dw	0
  1285  01962A  0000               	dw	0
  1286  01962C  0000               	dw	0
  1287  01962E  0000               	dw	0
  1288  019630  0000               	dw	0
  1289  019632  0000               	dw	0
  1290  019634  0000               	dw	0
  1291  019636  0000               	dw	0
  1292  019638  0000               	dw	0
  1293  01963A  0000               	dw	0
  1294  01963C  0000               	dw	0
  1295  01963E  0000               	dw	0
  1296  019640  0000               	dw	0
  1297  019642  0000               	dw	0
  1298  019644  0000               	dw	0
  1299  019646  0000               	dw	0
  1300  019648  0000               	dw	0
  1301  01964A  0000               	dw	0
  1302  01964C  0000               	dw	0
  1303  01964E  0000               	dw	0
  1304  019650  0000               	dw	0
  1305  019652  0000               	dw	0
  1306  019654  0000               	dw	0
  1307  019656  0000               	dw	0
  1308  019658  0000               	dw	0
  1309  01965A  0000               	dw	0
  1310  01965C  0000               	dw	0
  1311  01965E  0000               	dw	0
  1312  019660  0000               	dw	0
  1313  019662  0000               	dw	0
  1314  019664  0000               	dw	0
  1315  019666  0000               	dw	0
  1316  019668  0000               	dw	0
  1317  01966A  0000               	dw	0
  1318  01966C  0000               	dw	0
  1319  01966E  0000               	dw	0
  1320  019670  0000               	dw	0
  1321  019672  0000               	dw	0
  1322  019674  0000               	dw	0
  1323  019676  0000               	dw	0
  1324  019678  0000               	dw	0
  1325  01967A  0000               	dw	0
  1326  01967C  0000               	dw	0
  1327  01967E  0000               	dw	0
  1328  019680  0000               	dw	0
  1329  019682  0000               	dw	0
  1330  019684  0000               	dw	0
  1331  019686  0000               	dw	0
  1332  019688  0000               	dw	0
  1333  01968A  0000               	dw	0
  1334  01968C  0000               	dw	0
  1335  01968E  0000               	dw	0
  1336  019690  0000               	dw	0
  1337  019692  0000               	dw	0
  1338  019694  0000               	dw	0
  1339  019696  0000               	dw	0
  1340  019698  0000               	dw	0
  1341  01969A  0000               	dw	0
  1342  01969C  0000               	dw	0
  1343  01969E  0000               	dw	0
  1344  0196A0  0000               	dw	0
  1345  0196A2  0000               	dw	0
  1346  0196A4  0000               	dw	0
  1347  0196A6  42FA               	dw	17146
  1348  0196A8  00                 	db	0
  1349  0196A9  00                 	db	0
  1350  0196AA  00                 	db	0
  1351  0196AB  00                 	db	0
  1352  0196AC  00                 	db	0
  1353  0196AD  00                 	db	0
  1354  0196AE  00                 	db	0
  1355  0196AF  00                 	db	0
  1356  0196B0  00                 	db	0
  1357  0196B1  00                 	db	0
  1358  0196B2  00                 	db	0
  1359  0196B3  00                 	db	0
  1360  0196B4  00                 	db	0
  1361  0196B5  00                 	db	0
  1362  0196B6  00                 	db	0
  1363  0196B7  00                 	db	0
  1364  0196B8  00                 	db	0
  1365  0196B9  00                 	db	0
  1366  0196BA  00                 	db	0
  1367  0196BB  00                 	db	0
  1368  0196BC  00                 	db	0
  1369  0196BD  00                 	db	0
  1370  0196BE  00                 	db	0
  1371  0196BF  00                 	db	0
  1372  0196C0  00                 	db	0
  1373  0196C1  00                 	db	0
  1374  0196C2  00                 	db	0
  1375  0196C3  00                 	db	0
  1376  0196C4  00                 	db	0
  1377  0196C5  00                 	db	0
  1378  0196C6  00                 	db	0
  1379  0196C7  00                 	db	0
  1380  0196C8  00                 	db	0
  1381  0196C9  00                 	db	0
  1382  0196CA  00                 	db	0
  1383  0196CB  00                 	db	0
  1384  0196CC  00                 	db	0
  1385  0196CD  00                 	db	0
  1386  0196CE  00                 	db	0
  1387  0196CF  00                 	db	0
  1388  0196D0  00                 	db	0
  1389  0196D1  00                 	db	0
  1390  0196D2  00                 	db	0
  1391  0196D3  00                 	db	0
  1392  0196D4  00                 	db	0
  1393  0196D5  00                 	db	0
  1394  0196D6  00                 	db	0
  1395  0196D7  00                 	db	0
  1396  0196D8  00                 	db	0
  1397  0196D9  00                 	db	0
  1398  0196DA  00                 	db	0
  1399  0196DB  00                 	db	0
  1400  0196DC  00                 	db	0
  1401  0196DD  00                 	db	0
  1402  0196DE  00                 	db	0
  1403  0196DF  00                 	db	0
  1404  0196E0  00                 	db	0
  1405  0196E1  00                 	db	0
  1406  0196E2  00                 	db	0
  1407  0196E3  00                 	db	0
  1408  0196E4  00                 	db	0
  1409  0196E5  00                 	db	0
  1410  0196E6  00                 	db	0
  1411  0196E7  00                 	db	0
  1412  0196E8  00                 	db	0
  1413  0196E9  00                 	db	0
  1414  0196EA  00                 	db	0
  1415  0196EB  00                 	db	0
  1416  0196EC  00                 	db	0
  1417  0196ED  00                 	db	0
  1418  0196EE  00                 	db	0
  1419  0196EF  00                 	db	0
  1420  0196F0  00                 	db	0
  1421  0196F1  00                 	db	0
  1422  0196F2  00                 	db	0
  1423  0196F3  00                 	db	0
  1424  0196F4  00                 	db	0
  1425  0196F5  00                 	db	0
  1426  0196F6  00                 	db	0
  1427  0196F7  00                 	db	0
  1428  0196F8  00                 	db	0
  1429  0196F9  00                 	db	0
  1430  0196FA  00                 	db	0
  1431  0196FB  00                 	db	0
  1432  0196FC  00                 	db	0
  1433  0196FD  00                 	db	0
  1434  0196FE  00                 	db	0
  1435  0196FF  00                 	db	0
  1436  019700  00                 	db	0
  1437  019701  00                 	db	0
  1438  019702  00                 	db	0
  1439  019703  00                 	db	0
  1440  019704  00                 	db	0
  1441  019705  00                 	db	0
  1442  019706  00                 	db	0
  1443  019707  00                 	db	0
  1444  019708  00                 	db	0
  1445  019709  00                 	db	0
  1446  01970A  00                 	db	0
  1447  01970B  00                 	db	0
  1448  01970C  00                 	db	0
  1449  01970D  00                 	db	0
  1450  01970E  00                 	db	0
  1451  01970F  00                 	db	0
  1452  019710  00                 	db	0
  1453  019711  00                 	db	0
  1454  019712  00                 	db	0
  1455                           
  1456                           	psect	idataBANK2
  1457  019A7C                     __pidataBANK2:
  1458                           	opt callstack 0
  1459                           
  1460                           ;initializer for _V
  1461  019A7C  00                 	db	0
  1462  019A7D  00                 	db	0
  1463  019A7E  00                 	db	0
  1464  019A7F  00                 	db	0
  1465  019A80  00                 	db	0
  1466  019A81  00                 	db	0
  1467  019A82  00                 	db	0
  1468  019A83  00                 	db	0
  1469  019A84  00                 	db	0
  1470  019A85  00                 	db	0
  1471  019A86  00                 	db	0
  1472  019A87  00                 	db	0
  1473  019A88  00                 	db	0
  1474  019A89  00                 	db	0
  1475  019A8A  00                 	db	0
  1476  019A8B  00                 	db	0
  1477  019A8C  00                 	db	0
  1478  019A8D  00                 	db	0
  1479  019A8E  00                 	db	0
  1480  019A8F  00                 	db	0
  1481  019A90  00                 	db	0
  1482  019A91  00                 	db	0
  1483  019A92  00                 	db	0
  1484  019A93  00                 	db	0
  1485  019A94  00                 	db	0
  1486  019A95  00                 	db	0
  1487  019A96  00                 	db	0
  1488  019A97  00                 	db	0
  1489  019A98  00                 	db	0
  1490  019A99  00                 	db	0
  1491  019A9A  00                 	db	0
  1492  019A9B  00                 	db	0
  1493  019A9C  00                 	db	0
  1494  019A9D  00                 	db	0
  1495  019A9E  00                 	db	0
  1496  019A9F  00                 	db	0
  1497  019AA0  00                 	db	0
  1498  019AA1  00                 	db	0
  1499  019AA2  00                 	db	0
  1500  019AA3  00                 	db	0
  1501  019AA4  00                 	db	0
  1502  019AA5  00                 	db	0
  1503  019AA6  00                 	db	0
  1504  019AA7  00                 	db	0
  1505  019AA8  00                 	db	0
  1506  019AA9  00                 	db	0
  1507  019AAA  00                 	db	0
  1508  019AAB  00                 	db	0
  1509  019AAC  00                 	db	0
  1510  019AAD  00                 	db	0
  1511  019AAE  00                 	db	0
  1512  019AAF  00                 	db	0
  1513  019AB0  00                 	db	0
  1514  019AB1  00                 	db	0
  1515  019AB2  00                 	db	0
  1516  019AB3  00                 	db	0
  1517  019AB4  00                 	db	0
  1518  019AB5  00                 	db	0
  1519  019AB6  00                 	db	0
  1520  019AB7  00                 	db	0
  1521  019AB8  00                 	db	0
  1522  019AB9  00                 	db	0
  1523  019ABA  00                 	db	0
  1524  019ABB  00                 	db	0
  1525  019ABC  00                 	db	0
  1526  019ABD  00                 	db	0
  1527  019ABE  00                 	db	0
  1528  019ABF  00                 	db	0
  1529  019AC0  00                 	db	0
  1530  019AC1  00                 	db	0
  1531  019AC2  00                 	db	0
  1532  019AC3  00                 	db	0
  1533  019AC4  00                 	db	0
  1534  019AC5  00                 	db	0
  1535  019AC6  00                 	db	0
  1536  019AC7  00                 	db	0
  1537  019AC8  00                 	db	0
  1538  019AC9  00                 	db	0
  1539  019ACA  00                 	db	0
  1540  019ACB  00                 	db	0
  1541  019ACC  00                 	db	0
  1542  019ACD  00                 	db	0
  1543  019ACE  00                 	db	0
  1544  019ACF  00                 	db	0
  1545  019AD0  00                 	db	0
  1546  019AD1  00                 	db	0
  1547  019AD2  00                 	db	0
  1548  019AD3  00                 	db	0
  1549  019AD4  00                 	db	0
  1550  019AD5  00                 	db	0
  1551  019AD6  00                 	db	0
  1552  019AD7  00                 	db	0
  1553  019AD8  00                 	db	0
  1554  019AD9  00                 	db	0
  1555  019ADA  00                 	db	0
  1556  019ADB  00                 	db	0
  1557  019ADC  00                 	db	0
  1558  019ADD  00                 	db	0
  1559  019ADE  00                 	db	0
  1560  019ADF  00                 	db	0
  1561  019AE0  00                 	db	0
  1562  019AE1  00                 	db	0
  1563  019AE2  00                 	db	0
  1564  019AE3  00                 	db	0
  1565  019AE4  00                 	db	0
  1566  019AE5  00                 	db	0
  1567  019AE6  00                 	db	0
  1568  019AE7  00                 	db	0
  1569  019AE8  00                 	db	0
  1570  019AE9  00                 	db	0
  1571  019AEA  00                 	db	0
  1572  019AEB  00                 	db	0
  1573  019AEC  00                 	db	0
  1574  019AED  00                 	db	0
  1575  019AEE  00                 	db	0
  1576  019AEF  00                 	db	0
  1577  019AF0  00                 	db	0
  1578  019AF1  00                 	db	0
  1579  019AF2  00                 	db	0
  1580  019AF3  00                 	db	0
  1581  019AF4  00                 	db	0
  1582  019AF5  00                 	db	0
  1583  019AF6  00                 	db	0
  1584  019AF7  00                 	db	0
  1585  019AF8  00                 	db	0
  1586  019AF9  00                 	db	0
  1587  019AFA  00                 	db	0
  1588  019AFB  00                 	db	0
  1589  019AFC  00                 	db	0
  1590  019AFD  0000               	dw	0
  1591  019AFF  0000               	dw	0
  1592  019B01  0000               	dw	0
  1593  019B03  0000               	dw	0
  1594  019B05  00                 	db	0
  1595  019B06  00                 	db	0
  1596  019B07  00                 	db	0
  1597  019B08  00                 	db	0
  1598  019B09  00                 	db	0
  1599  019B0A  00                 	db	0
  1600  019B0B  0000               	dw	0
  1601  019B0D  0000               	dw	0
  1602  019B0F  0000               	dw	0
  1603  019B11  0000               	dw	0
  1604  019B13  0000               	dw	0
  1605  019B15  0000               	dw	0
  1606  019B17  00                 	db	0
  1607  019B18  00                 	db	0
  1608  019B19  00                 	db	0
  1609  019B1A  00                 	db	0
  1610  019B1B  00                 	db	0
  1611  019B1C  00                 	db	0
  1612  019B1D  00                 	db	0
  1613  019B1E  00                 	db	0
  1614  019B1F  00                 	db	0
  1615  019B20  00                 	db	0
  1616  019B21  00                 	db	0
  1617  019B22  0000               	dw	0
  1618  019B24  0000               	dw	0
  1619  019B26  2D                 	db	45
  1620  019B27  00                 	db	0
  1621  019B28  00                 	db	0
  1622  019B29  00                 	db	0
  1623  019B2A  0000               	dw	0
  1624  019B2C  0000               	dw	0
  1625  019B2E  0000               	dw	0
  1626  019B30  0000               	dw	0
  1627  019B32  0000               	dw	0
  1628  019B34  0000               	dw	0
  1629  019B36  0000               	dw	0
  1630  019B38  0000               	dw	0
  1631                           
  1632                           	psect	mediumconst
  1633  00FA7A                     __pmediumconst:
  1634                           	opt callstack 0
  1635  00FA7A  00                 	db	0
  1636  00FA7B                     _BVSOC_TABLE:
  1637                           	opt callstack 0
  1638  00FA7B  59D8               	dw	23000
  1639  00FA7D  0000               	dw	0
  1640  00FA7F  0005               	dw	5
  1641  00FA81  0000               	dw	0
  1642  00FA83  5B68               	dw	23400
  1643  00FA85  0000               	dw	0
  1644  00FA87  000A               	dw	10
  1645  00FA89  0000               	dw	0
  1646  00FA8B  5C30               	dw	23600
  1647  00FA8D  0000               	dw	0
  1648  00FA8F  0014               	dw	20
  1649  00FA91  0000               	dw	0
  1650  00FA93  5E38               	dw	24120
  1651  00FA95  0000               	dw	0
  1652  00FA97  0019               	dw	25
  1653  00FA99  0000               	dw	0
  1654  00FA9B  5E88               	dw	24200
  1655  00FA9D  0000               	dw	0
  1656  00FA9F  001E               	dw	30
  1657  00FAA1  0000               	dw	0
  1658  00FAA3  5F78               	dw	24440
  1659  00FAA5  0000               	dw	0
  1660  00FAA7  0028               	dw	40
  1661  00FAA9  0000               	dw	0
  1662  00FAAB  5FDC               	dw	24540
  1663  00FAAD  0000               	dw	0
  1664  00FAAF  002D               	dw	45
  1665  00FAB1  0000               	dw	0
  1666  00FAB3  6018               	dw	24600
  1667  00FAB5  0000               	dw	0
  1668  00FAB7  0032               	dw	50
  1669  00FAB9  0000               	dw	0
  1670  00FABB  6046               	dw	24646
  1671  00FABD  0000               	dw	0
  1672  00FABF  0035               	dw	53
  1673  00FAC1  0000               	dw	0
  1674  00FAC3  607C               	dw	24700
  1675  00FAC5  0000               	dw	0
  1676  00FAC7  0037               	dw	55
  1677  00FAC9  0000               	dw	0
  1678  00FACB  60AE               	dw	24750
  1679  00FACD  0000               	dw	0
  1680  00FACF  0039               	dw	57
  1681  00FAD1  0000               	dw	0
  1682  00FAD3  60E0               	dw	24800
  1683  00FAD5  0000               	dw	0
  1684  00FAD7  003C               	dw	60
  1685  00FAD9  0000               	dw	0
  1686  00FADB  6112               	dw	24850
  1687  00FADD  0000               	dw	0
  1688  00FADF  003F               	dw	63
  1689  00FAE1  0000               	dw	0
  1690  00FAE3  615D               	dw	24925
  1691  00FAE5  0000               	dw	0
  1692  00FAE7  0043               	dw	67
  1693  00FAE9  0000               	dw	0
  1694  00FAEB  61A8               	dw	25000
  1695  00FAED  0000               	dw	0
  1696  00FAEF  0046               	dw	70
  1697  00FAF1  0000               	dw	0
  1698  00FAF3  61BC               	dw	25020
  1699  00FAF5  0000               	dw	0
  1700  00FAF7  0048               	dw	72
  1701  00FAF9  0000               	dw	0
  1702  00FAFB  61D0               	dw	25040
  1703  00FAFD  0000               	dw	0
  1704  00FAFF  004B               	dw	75
  1705  00FB01  0000               	dw	0
  1706  00FB03  61DA               	dw	25050
  1707  00FB05  0000               	dw	0
  1708  00FB07  0050               	dw	80
  1709  00FB09  0000               	dw	0
  1710  00FB0B  61E4               	dw	25060
  1711  00FB0D  0000               	dw	0
  1712  00FB0F  0055               	dw	85
  1713  00FB11  0000               	dw	0
  1714  00FB13  61F8               	dw	25080
  1715  00FB15  0000               	dw	0
  1716  00FB17  005A               	dw	90
  1717  00FB19  0000               	dw	0
  1718  00FB1B  6208               	dw	25096
  1719  00FB1D  0000               	dw	0
  1720  00FB1F  005C               	dw	92
  1721  00FB21  0000               	dw	0
  1722  00FB23  6222               	dw	25122
  1723  00FB25  0000               	dw	0
  1724  00FB27  005D               	dw	93
  1725  00FB29  0000               	dw	0
  1726  00FB2B  6234               	dw	25140
  1727  00FB2D  0000               	dw	0
  1728  00FB2F  005F               	dw	95
  1729  00FB31  0000               	dw	0
  1730  00FB33  6248               	dw	25160
  1731  00FB35  0000               	dw	0
  1732  00FB37  0061               	dw	97
  1733  00FB39  0000               	dw	0
  1734  00FB3B  625C               	dw	25180
  1735  00FB3D  0000               	dw	0
  1736  00FB3F  0064               	dw	100
  1737  00FB41  0000               	dw	0
  1738  00FB43  6784               	dw	26500
  1739  00FB45  0000               	dw	0
  1740  00FB47  0062               	dw	98
  1741  00FB49  0000               	dw	0
  1742  00FB4B                     __end_of_BVSOC_TABLE:
  1743                           	opt callstack 0
  1744  00FB4B                     _T:
  1745                           	opt callstack 0
  1746  00FB4B  63                 	db	99
  1747  00FB4C  6F                 	db	111
  1748  00FB4D  6D                 	db	109
  1749  00FB4E  6D                 	db	109
  1750  00FB4F  61                 	db	97
  1751  00FB50  6E                 	db	110
  1752  00FB51  64                 	db	100
  1753  00FB52  73                 	db	115
  1754  00FB53  20                 	db	32
  1755  00FB54  31                 	db	49
  1756  00FB55  00                 	db	0
  1757  00FB56  00                 	db	0
  1758  00FB57  00                 	db	0
  1759  00FB58  00                 	db	0
  1760  00FB59  00                 	db	0
  1761  00FB5A  00                 	db	0
  1762  00FB5B  00                 	db	0
  1763  00FB5C  00                 	db	0
  1764  00FB5D  64                 	db	100
  1765  00FB5E  69                 	db	105
  1766  00FB5F  73                 	db	115
  1767  00FB60  70                 	db	112
  1768  00FB61  6C                 	db	108
  1769  00FB62  61                 	db	97
  1770  00FB63  79                 	db	121
  1771  00FB64  73                 	db	115
  1772  00FB65  20                 	db	32
  1773  00FB66  31                 	db	49
  1774  00FB67  00                 	db	0
  1775  00FB68  00                 	db	0
  1776  00FB69  00                 	db	0
  1777  00FB6A  00                 	db	0
  1778  00FB6B  00                 	db	0
  1779  00FB6C  00                 	db	0
  1780  00FB6D  00                 	db	0
  1781  00FB6E  00                 	db	0
  1782  00FB6F  63                 	db	99
  1783  00FB70  6F                 	db	111
  1784  00FB71  6D                 	db	109
  1785  00FB72  6D                 	db	109
  1786  00FB73  61                 	db	97
  1787  00FB74  6E                 	db	110
  1788  00FB75  64                 	db	100
  1789  00FB76  73                 	db	115
  1790  00FB77  20                 	db	32
  1791  00FB78  32                 	db	50
  1792  00FB79  00                 	db	0
  1793  00FB7A  00                 	db	0
  1794  00FB7B  00                 	db	0
  1795  00FB7C  00                 	db	0
  1796  00FB7D  00                 	db	0
  1797  00FB7E  00                 	db	0
  1798  00FB7F  00                 	db	0
  1799  00FB80  00                 	db	0
  1800  00FB81  64                 	db	100
  1801  00FB82  69                 	db	105
  1802  00FB83  73                 	db	115
  1803  00FB84  70                 	db	112
  1804  00FB85  6C                 	db	108
  1805  00FB86  61                 	db	97
  1806  00FB87  79                 	db	121
  1807  00FB88  73                 	db	115
  1808  00FB89  20                 	db	32
  1809  00FB8A  32                 	db	50
  1810  00FB8B  00                 	db	0
  1811  00FB8C  00                 	db	0
  1812  00FB8D  00                 	db	0
  1813  00FB8E  00                 	db	0
  1814  00FB8F  00                 	db	0
  1815  00FB90  00                 	db	0
  1816  00FB91  00                 	db	0
  1817  00FB92  00                 	db	0
  1818  00FB93  63                 	db	99
  1819  00FB94  6F                 	db	111
  1820  00FB95  6D                 	db	109
  1821  00FB96  6D                 	db	109
  1822  00FB97  61                 	db	97
  1823  00FB98  6E                 	db	110
  1824  00FB99  64                 	db	100
  1825  00FB9A  73                 	db	115
  1826  00FB9B  20                 	db	32
  1827  00FB9C  33                 	db	51
  1828  00FB9D  00                 	db	0
  1829  00FB9E  00                 	db	0
  1830  00FB9F  00                 	db	0
  1831  00FBA0  00                 	db	0
  1832  00FBA1  00                 	db	0
  1833  00FBA2  00                 	db	0
  1834  00FBA3  00                 	db	0
  1835  00FBA4  00                 	db	0
  1836  00FBA5  64                 	db	100
  1837  00FBA6  69                 	db	105
  1838  00FBA7  73                 	db	115
  1839  00FBA8  70                 	db	112
  1840  00FBA9  6C                 	db	108
  1841  00FBAA  61                 	db	97
  1842  00FBAB  79                 	db	121
  1843  00FBAC  73                 	db	115
  1844  00FBAD  20                 	db	32
  1845  00FBAE  33                 	db	51
  1846  00FBAF  00                 	db	0
  1847  00FBB0  00                 	db	0
  1848  00FBB1  00                 	db	0
  1849  00FBB2  00                 	db	0
  1850  00FBB3  00                 	db	0
  1851  00FBB4  00                 	db	0
  1852  00FBB5  00                 	db	0
  1853  00FBB6  00                 	db	0
  1854  00FBB7  63                 	db	99
  1855  00FBB8  6F                 	db	111
  1856  00FBB9  6D                 	db	109
  1857  00FBBA  6D                 	db	109
  1858  00FBBB  61                 	db	97
  1859  00FBBC  6E                 	db	110
  1860  00FBBD  64                 	db	100
  1861  00FBBE  73                 	db	115
  1862  00FBBF  20                 	db	32
  1863  00FBC0  34                 	db	52
  1864  00FBC1  00                 	db	0
  1865  00FBC2  00                 	db	0
  1866  00FBC3  00                 	db	0
  1867  00FBC4  00                 	db	0
  1868  00FBC5  00                 	db	0
  1869  00FBC6  00                 	db	0
  1870  00FBC7  00                 	db	0
  1871  00FBC8  00                 	db	0
  1872  00FBC9  64                 	db	100
  1873  00FBCA  69                 	db	105
  1874  00FBCB  73                 	db	115
  1875  00FBCC  70                 	db	112
  1876  00FBCD  6C                 	db	108
  1877  00FBCE  61                 	db	97
  1878  00FBCF  79                 	db	121
  1879  00FBD0  73                 	db	115
  1880  00FBD1  20                 	db	32
  1881  00FBD2  34                 	db	52
  1882  00FBD3  00                 	db	0
  1883  00FBD4  00                 	db	0
  1884  00FBD5  00                 	db	0
  1885  00FBD6  00                 	db	0
  1886  00FBD7  00                 	db	0
  1887  00FBD8  00                 	db	0
  1888  00FBD9  00                 	db	0
  1889  00FBDA  00                 	db	0
  1890  00FBDB                     __end_of_T:
  1891                           	opt callstack 0
  1892  00FBDB                     _spin:
  1893                           	opt callstack 0
  1894  00FBDB  7C                 	db	124
  1895  00FBDC  7C                 	db	124
  1896  00FBDD  2F                 	db	47
  1897  00FBDE  2F                 	db	47
  1898  00FBDF  2D                 	db	45
  1899  00FBE0  2D                 	db	45
  1900  00FBE1  00                 	db	0
  1901  00FBE2  00                 	db	0
  1902  00FBE3  00                 	db	0
  1903  00FBE4  00                 	db	0
  1904  00FBE5  00                 	db	0
  1905  00FBE6  00                 	db	0
  1906  00FBE7  00                 	db	0
  1907  00FBE8  00                 	db	0
  1908  00FBE9  00                 	db	0
  1909  00FBEA  00                 	db	0
  1910  00FBEB  00                 	db	0
  1911  00FBEC  00                 	db	0
  1912  00FBED  00                 	db	0
  1913  00FBEE  00                 	db	0
  1914  00FBEF  7C                 	db	124
  1915  00FBF0  7C                 	db	124
  1916  00FBF1  2F                 	db	47
  1917  00FBF2  2F                 	db	47
  1918  00FBF3  2D                 	db	45
  1919  00FBF4  2D                 	db	45
  1920  00FBF5  5C                 	db	92
  1921  00FBF6  5C                 	db	92
  1922  00FBF7  00                 	db	0
  1923  00FBF8  00                 	db	0
  1924  00FBF9  00                 	db	0
  1925  00FBFA  00                 	db	0
  1926  00FBFB  00                 	db	0
  1927  00FBFC  00                 	db	0
  1928  00FBFD  00                 	db	0
  1929  00FBFE  00                 	db	0
  1930  00FBFF  00                 	db	0
  1931  00FC00  00                 	db	0
  1932  00FC01  00                 	db	0
  1933  00FC02  00                 	db	0
  1934  00FC03  4F                 	db	79
  1935  00FC04  4F                 	db	79
  1936  00FC05  4F                 	db	79
  1937  00FC06  4F                 	db	79
  1938  00FC07  4F                 	db	79
  1939  00FC08  4F                 	db	79
  1940  00FC09  2D                 	db	45
  1941  00FC0A  2D                 	db	45
  1942  00FC0B  5F                 	db	95
  1943  00FC0C  5F                 	db	95
  1944  00FC0D  2D                 	db	45
  1945  00FC0E  00                 	db	0
  1946  00FC0F  00                 	db	0
  1947  00FC10  00                 	db	0
  1948  00FC11  00                 	db	0
  1949  00FC12  00                 	db	0
  1950  00FC13  00                 	db	0
  1951  00FC14  00                 	db	0
  1952  00FC15  00                 	db	0
  1953  00FC16  00                 	db	0
  1954  00FC17  76                 	db	118
  1955  00FC18  76                 	db	118
  1956  00FC19  3C                 	db	60
  1957  00FC1A  3C                 	db	60
  1958  00FC1B  5E                 	db	94
  1959  00FC1C  5E                 	db	94
  1960  00FC1D  3E                 	db	62
  1961  00FC1E  3E                 	db	62
  1962  00FC1F  00                 	db	0
  1963  00FC20  00                 	db	0
  1964  00FC21  00                 	db	0
  1965  00FC22  00                 	db	0
  1966  00FC23  00                 	db	0
  1967  00FC24  00                 	db	0
  1968  00FC25  00                 	db	0
  1969  00FC26  00                 	db	0
  1970  00FC27  00                 	db	0
  1971  00FC28  00                 	db	0
  1972  00FC29  00                 	db	0
  1973  00FC2A  00                 	db	0
  1974  00FC2B  2E                 	db	46
  1975  00FC2C  2E                 	db	46
  1976  00FC2D  2A                 	db	42
  1977  00FC2E  2A                 	db	42
  1978  00FC2F  78                 	db	120
  1979  00FC30  23                 	db	35
  1980  00FC31  78                 	db	120
  1981  00FC32  23                 	db	35
  1982  00FC33  58                 	db	88
  1983  00FC34  58                 	db	88
  1984  00FC35  7C                 	db	124
  1985  00FC36  7C                 	db	124
  1986  00FC37  2D                 	db	45
  1987  00FC38  2D                 	db	45
  1988  00FC39  00                 	db	0
  1989  00FC3A  00                 	db	0
  1990  00FC3B  00                 	db	0
  1991  00FC3C  00                 	db	0
  1992  00FC3D  00                 	db	0
  1993  00FC3E  00                 	db	0
  1994  00FC3F  2E                 	db	46
  1995  00FC40  2E                 	db	46
  1996  00FC41  6F                 	db	111
  1997  00FC42  6F                 	db	111
  1998  00FC43  4F                 	db	79
  1999  00FC44  4F                 	db	79
  2000  00FC45  6F                 	db	111
  2001  00FC46  6F                 	db	111
  2002  00FC47  00                 	db	0
  2003  00FC48  00                 	db	0
  2004  00FC49  00                 	db	0
  2005  00FC4A  00                 	db	0
  2006  00FC4B  00                 	db	0
  2007  00FC4C  00                 	db	0
  2008  00FC4D  00                 	db	0
  2009  00FC4E  00                 	db	0
  2010  00FC4F  00                 	db	0
  2011  00FC50  00                 	db	0
  2012  00FC51  00                 	db	0
  2013  00FC52  00                 	db	0
  2014  00FC53                     __end_of_spin:
  2015                           	opt callstack 0
  2016  00FC53  0000               	dw	0
  2017  00FC55  3F80               	dw	16256
  2018  00FC57  0000               	dw	0
  2019  00FC59  3FC0               	dw	16320
  2020  00FC5B                     __end_of_bp:
  2021                           	opt callstack 0
  2022  00FC5B  AA00               	dw	43520
  2023  00FC5D  3FB8               	dw	16312
  2024  00FC5F                     __end_of_ivln2_h:
  2025                           	opt callstack 0
  2026  00FC5F  23C6               	dw	9158
  2027  00FC61  B8F6               	dw	47350
  2028  00FC63                     __end_of_cp_l:
  2029                           	opt callstack 0
  2030  00FC63  4000               	dw	16384
  2031  00FC65  3F76               	dw	16246
  2032  00FC67                     __end_of_cp_h:
  2033                           	opt callstack 0
  2034  0000                     _IVTADL	set	14493
  2035  0000                     _IVTADH	set	14494
  2036  0000                     _IVTADU	set	14495
  2037  0000                     _PIR6bits	set	14758
  2038  0000                     _PIR4bits	set	14756
  2039  0000                     _PIE8bits	set	14744
  2040  0000                     _PIR8bits	set	14760
  2041  0000                     _SCANPR	set	14839
  2042  0000                     _DMA2PR	set	14836
  2043  0000                     _DMA1PR	set	14835
  2044  0000                     _MAINPR	set	14834
  2045  0000                     _ISRPR	set	14833
  2046  0000                     _PIE2bits	set	14738
  2047  0000                     _PIR2bits	set	14754
  2048  0000                     _PIE9bits	set	14745
  2049  0000                     _PIR9bits	set	14761
  2050  0000                     _PIE6bits	set	14742
  2051  0000                     _PIE3bits	set	14739
  2052  0000                     _PMD7	set	14791
  2053  0000                     _PMD6	set	14790
  2054  0000                     _PMD5	set	14789
  2055  0000                     _PMD4	set	14788
  2056  0000                     _PMD3	set	14787
  2057  0000                     _PMD2	set	14786
  2058  0000                     _PMD1	set	14785
  2059  0000                     _PMD0	set	14784
  2060  0000                     _OSCTUNE	set	14814
  2061  0000                     _OSCFRQ	set	14815
  2062  0000                     _OSCEN	set	14813
  2063  0000                     _OSCCON3	set	14811
  2064  0000                     _OSCCON1	set	14809
  2065  0000                     _IPR8bits	set	14728
  2066  0000                     _IPR9bits	set	14729
  2067  0000                     _IPR5bits	set	14725
  2068  0000                     _IPR1bits	set	14721
  2069  0000                     _IPR3bits	set	14723
  2070  0000                     _IPR6bits	set	14726
  2071  0000                     _IPR2bits	set	14722
  2072  0000                     _PIE5bits	set	14741
  2073  0000                     _PIE1bits	set	14737
  2074  0000                     _PIR5bits	set	14757
  2075  0000                     _PIR1bits	set	14753
  2076  0000                     _PLLR	set	118496
  2077  0000                     _SPI1SDIPPS	set	15071
  2078  0000                     _U1RXPPS	set	15077
  2079  0000                     _RC6PPS	set	14870
  2080  0000                     _RC5PPS	set	14869
  2081  0000                     _INT1PPS	set	15041
  2082  0000                     _RD1PPS	set	14873
  2083  0000                     _INT0PPS	set	15040
  2084  0000                     _RC3PPS	set	14867
  2085  0000                     _RB6PPS	set	14862
  2086  0000                     _SPI1SCKPPS	set	15070
  2087  0000                     _U2RXPPS	set	15080
  2088  0000                     _SLRCONF	set	14995
  2089  0000                     _SLRCONE	set	14979
  2090  0000                     _SLRCOND	set	14963
  2091  0000                     _SLRCONC	set	14947
  2092  0000                     _SLRCONB	set	14931
  2093  0000                     _SLRCONA	set	14915
  2094  0000                     _ODCOND	set	14962
  2095  0000                     _ODCONC	set	14946
  2096  0000                     _ODCONB	set	14930
  2097  0000                     _ODCONA	set	14914
  2098  0000                     _ODCONF	set	14994
  2099  0000                     _ODCONE	set	14978
  2100  0000                     _WPUC	set	14945
  2101  0000                     _WPUA	set	14913
  2102  0000                     _WPUB	set	14929
  2103  0000                     _WPUE	set	14977
  2104  0000                     _WPUF	set	14993
  2105  0000                     _WPUD	set	14961
  2106  0000                     _ANSELA	set	14912
  2107  0000                     _ANSELF	set	14992
  2108  0000                     _ANSELE	set	14976
  2109  0000                     _ANSELB	set	14928
  2110  0000                     _ANSELC	set	14944
  2111  0000                     _ANSELD	set	14960
  2112  0000                     _DMA2SSA	set	15321
  2113  0000                     _DMA1SSA	set	15353
  2114  0000                     _DMA2DSZ	set	15310
  2115  0000                     _DMA2SSZ	set	15319
  2116  0000                     _DMA2DSA	set	15312
  2117  0000                     _DMA1DSZ	set	15342
  2118  0000                     _DMA1SSZ	set	15351
  2119  0000                     _DMA1DSA	set	15344
  2120  0000                     _DMA2CON0bits	set	15324
  2121  0000                     _DMA2CON1bits	set	15325
  2122  0000                     _DMA1CON0bits	set	15356
  2123  0000                     _DMA1CON1bits	set	15357
  2124  0000                     _DMA2CON0	set	15324
  2125  0000                     _DMA2AIRQ	set	15326
  2126  0000                     _DMA2SIRQ	set	15327
  2127  0000                     _DMA2CON1	set	15325
  2128  0000                     _DMA1CON0	set	15356
  2129  0000                     _DMA1AIRQ	set	15358
  2130  0000                     _DMA1SIRQ	set	15359
  2131  0000                     _DMA1CON1	set	15357
  2132  0000                     _CLKRCON	set	15589
  2133  0000                     _CLKRCLK	set	15590
  2134  0000                     _SPI1INTFbits	set	15642
  2135  0000                     _SPI1RXB	set	15632
  2136  0000                     _SPI1TXB	set	15633
  2137  0000                     _SPI1TCNTL	set	15634
  2138  0000                     _SPI1CON0	set	15636
  2139  0000                     _SPI1CLK	set	15644
  2140  0000                     _SPI1BAUD	set	15641
  2141  0000                     _SPI1CON2	set	15638
  2142  0000                     _SPI1CON1	set	15637
  2143  0000                     _U2RXB	set	15824
  2144  0000                     _U2TXB	set	15826
  2145  0000                     _U2ERRIE	set	15842
  2146  0000                     _U2ERRIR	set	15841
  2147  0000                     _U2UIR	set	15840
  2148  0000                     _U2FIFO	set	15839
  2149  0000                     _U2BRGH	set	15838
  2150  0000                     _U2BRGL	set	15837
  2151  0000                     _U2CON2	set	15836
  2152  0000                     _U2CON1	set	15835
  2153  0000                     _U2CON0	set	15834
  2154  0000                     _U2P3L	set	15832
  2155  0000                     _U2P2L	set	15830
  2156  0000                     _U2P1L	set	15828
  2157  0000                     _U1RXB	set	15848
  2158  0000                     _U1ERRIE	set	15866
  2159  0000                     _U1ERRIR	set	15865
  2160  0000                     _U1UIR	set	15864
  2161  0000                     _U1FIFO	set	15863
  2162  0000                     _U1BRGH	set	15862
  2163  0000                     _U1BRGL	set	15861
  2164  0000                     _U1CON2	set	15860
  2165  0000                     _U1CON1	set	15859
  2166  0000                     _U1CON0	set	15858
  2167  0000                     _U1P3H	set	15857
  2168  0000                     _U1P3L	set	15856
  2169  0000                     _U1P2H	set	15855
  2170  0000                     _U1P2L	set	15854
  2171  0000                     _U1P1H	set	15853
  2172  0000                     _U1P1L	set	15852
  2173  0000                     _FVRCON	set	16065
  2174  0000                     _ADFLTRL	set	16102
  2175  0000                     _ADFLTRH	set	16103
  2176  0000                     _ADCON0bits	set	16120
  2177  0000                     _ADCON0	set	16120
  2178  0000                     _ADCLK	set	16127
  2179  0000                     _ADACT	set	16126
  2180  0000                     _ADREF	set	16125
  2181  0000                     _ADSTAT	set	16124
  2182  0000                     _ADCON3	set	16123
  2183  0000                     _ADCON2	set	16122
  2184  0000                     _ADCON1	set	16121
  2185  0000                     _ADPREH	set	16119
  2186  0000                     _ADPREL	set	16118
  2187  0000                     _ADCAP	set	16117
  2188  0000                     _ADACQH	set	16116
  2189  0000                     _ADACQL	set	16115
  2190  0000                     _ADPCH	set	16113
  2191  0000                     _ADRPT	set	16108
  2192  0000                     _ADACCU	set	16106
  2193  0000                     _ADSTPTH	set	16101
  2194  0000                     _ADSTPTL	set	16100
  2195  0000                     _ADUTHH	set	16097
  2196  0000                     _ADUTHL	set	16096
  2197  0000                     _ADLTHH	set	16095
  2198  0000                     _ADLTHL	set	16094
  2199  0000                     _CCPTMRS1bits	set	16223
  2200  0000                     _PORTFbits	set	16335
  2201  0000                     _LATFbits	set	16319
  2202  0000                     _LATCbits	set	16316
  2203  0000                     _LATDbits	set	16317
  2204  0000                     _PORTBbits	set	16331
  2205  0000                     _T3CONbits	set	16294
  2206  0000                     _T3CON	set	16294
  2207  0000                     _TMR3L	set	16292
  2208  0000                     _TMR3H	set	16293
  2209  0000                     _T3CLK	set	16297
  2210  0000                     _T3GATE	set	16296
  2211  0000                     _T3GCON	set	16295
  2212  0000                     _T2CON	set	16300
  2213  0000                     _T2TMR	set	16298
  2214  0000                     _T2PR	set	16299
  2215  0000                     _T2RST	set	16303
  2216  0000                     _T2HLT	set	16301
  2217  0000                     _T2CLKCON	set	16302
  2218  0000                     _PWM8DCL	set	16224
  2219  0000                     _PWM8DCH	set	16225
  2220  0000                     _PWM8CON	set	16226
  2221  0000                     _LATEbits	set	16318
  2222  0000                     _T5CONbits	set	16282
  2223  0000                     _T5CON	set	16282
  2224  0000                     _TMR5L	set	16280
  2225  0000                     _TMR5H	set	16281
  2226  0000                     _T5CLK	set	16285
  2227  0000                     _T5GATE	set	16284
  2228  0000                     _T5GCON	set	16283
  2229  0000                     _T6CON	set	16276
  2230  0000                     _T6TMR	set	16274
  2231  0000                     _T6PR	set	16275
  2232  0000                     _T6RST	set	16279
  2233  0000                     _T6HLT	set	16277
  2234  0000                     _T6CLKCON	set	16278
  2235  0000                     _TRISD	set	16325
  2236  0000                     _TRISC	set	16324
  2237  0000                     _TRISB	set	16323
  2238  0000                     _TRISA	set	16322
  2239  0000                     _TRISF	set	16327
  2240  0000                     _TRISE	set	16326
  2241  0000                     _LATC	set	16316
  2242  0000                     _LATB	set	16315
  2243  0000                     _LATF	set	16319
  2244  0000                     _LATA	set	16314
  2245  0000                     _LATD	set	16317
  2246  0000                     _LATE	set	16318
  2247  0000                     _IVTLOCKbits	set	16340
  2248  0000                     _IVTLOCK	set	16340
  2249  0000                     _INTCON0bits	set	16338
  2250  0000                     _GIE	set	130711
  2251  00FC67                     STR_65:
  2252                           
  2253                           ; BSR set to: 57
  2254  00FC67  20                 	db	32
  2255  00FC68  25                 	db	37
  2256  00FC69  6C                 	db	108	;'l'
  2257  00FC6A  75                 	db	117	;'u'
  2258  00FC6B  2C                 	db	44
  2259  00FC6C  25                 	db	37
  2260  00FC6D  34                 	db	52	;'4'
  2261  00FC6E  2E                 	db	46
  2262  00FC6F  34                 	db	52	;'4'
  2263  00FC70  66                 	db	102	;'f'
  2264  00FC71  2C                 	db	44
  2265  00FC72  25                 	db	37
  2266  00FC73  34                 	db	52	;'4'
  2267  00FC74  2E                 	db	46
  2268  00FC75  34                 	db	52	;'4'
  2269  00FC76  66                 	db	102	;'f'
  2270  00FC77  2C                 	db	44
  2271  00FC78  25                 	db	37
  2272  00FC79  34                 	db	52	;'4'
  2273  00FC7A  2E                 	db	46
  2274  00FC7B  34                 	db	52	;'4'
  2275  00FC7C  66                 	db	102	;'f'
  2276  00FC7D  2C                 	db	44
  2277  00FC7E  25                 	db	37
  2278  00FC7F  34                 	db	52	;'4'
  2279  00FC80  2E                 	db	46
  2280  00FC81  34                 	db	52	;'4'
  2281  00FC82  66                 	db	102	;'f'
  2282  00FC83  2C                 	db	44
  2283  00FC84  25                 	db	37
  2284  00FC85  34                 	db	52	;'4'
  2285  00FC86  2E                 	db	46
  2286  00FC87  33                 	db	51	;'3'
  2287  00FC88  66                 	db	102	;'f'
  2288  00FC89  2C                 	db	44
  2289  00FC8A  25                 	db	37
  2290  00FC8B  34                 	db	52	;'4'
  2291  00FC8C  2E                 	db	46
  2292  00FC8D  33                 	db	51	;'3'
  2293  00FC8E  66                 	db	102	;'f'
  2294  00FC8F  2C                 	db	44
  2295  00FC90  25                 	db	37
  2296  00FC91  34                 	db	52	;'4'
  2297  00FC92  2E                 	db	46
  2298  00FC93  33                 	db	51	;'3'
  2299  00FC94  66                 	db	102	;'f'
  2300  00FC95  2C                 	db	44
  2301  00FC96  25                 	db	37
  2302  00FC97  34                 	db	52	;'4'
  2303  00FC98  2E                 	db	46
  2304  00FC99  33                 	db	51	;'3'
  2305  00FC9A  66                 	db	102	;'f'
  2306  00FC9B  2C                 	db	44
  2307  00FC9C  25                 	db	37
  2308  00FC9D  34                 	db	52	;'4'
  2309  00FC9E  2E                 	db	46
  2310  00FC9F  33                 	db	51	;'3'
  2311  00FCA0  66                 	db	102	;'f'
  2312  00FCA1  2C                 	db	44
  2313  00FCA2  25                 	db	37
  2314  00FCA3  34                 	db	52	;'4'
  2315  00FCA4  2E                 	db	46
  2316  00FCA5  33                 	db	51	;'3'
  2317  00FCA6  66                 	db	102	;'f'
  2318  00FCA7  2C                 	db	44
  2319  00FCA8  25                 	db	37
  2320  00FCA9  34                 	db	52	;'4'
  2321  00FCAA  2E                 	db	46
  2322  00FCAB  33                 	db	51	;'3'
  2323  00FCAC  64                 	db	100	;'d'
  2324  00FCAD  2C                 	db	44
  2325  00FCAE  25                 	db	37
  2326  00FCAF  34                 	db	52	;'4'
  2327  00FCB0  2E                 	db	46
  2328  00FCB1  33                 	db	51	;'3'
  2329  00FCB2  64                 	db	100	;'d'
  2330  00FCB3  2C                 	db	44
  2331  00FCB4  25                 	db	37
  2332  00FCB5  32                 	db	50	;'2'
  2333  00FCB6  2E                 	db	46
  2334  00FCB7  36                 	db	54	;'6'
  2335  00FCB8  66                 	db	102	;'f'
  2336  00FCB9  0D                 	db	13
  2337  00FCBA  0A                 	db	10
  2338  00FCBB  00                 	db	0
  2339  00FCBC                     STR_17:
  2340                           
  2341                           ; BSR set to: 57
  2342  00FCBC  52                 	db	82	;'R'
  2343  00FCBD  31                 	db	49	;'1'
  2344  00FCBE  20                 	db	32
  2345  00FCBF  25                 	db	37
  2346  00FCC0  32                 	db	50	;'2'
  2347  00FCC1  2E                 	db	46
  2348  00FCC2  33                 	db	51	;'3'
  2349  00FCC3  66                 	db	102	;'f'
  2350  00FCC4  20                 	db	32
  2351  00FCC5  25                 	db	37
  2352  00FCC6  33                 	db	51	;'3'
  2353  00FCC7  2E                 	db	46
  2354  00FCC8  34                 	db	52	;'4'
  2355  00FCC9  66                 	db	102	;'f'
  2356  00FCCA  20                 	db	32
  2357  00FCCB  20                 	db	32
  2358  00FCCC  20                 	db	32
  2359  00FCCD  20                 	db	32
  2360  00FCCE  20                 	db	32
  2361  00FCCF  20                 	db	32
  2362  00FCD0  20                 	db	32
  2363  00FCD1  20                 	db	32
  2364  00FCD2  20                 	db	32
  2365  00FCD3  20                 	db	32
  2366  00FCD4  20                 	db	32
  2367  00FCD5  00                 	db	0
  2368  00FCD6                     STR_18:
  2369                           
  2370                           ; BSR set to: 57
  2371  00FCD6  52                 	db	82	;'R'
  2372  00FCD7  32                 	db	50	;'2'
  2373  00FCD8  20                 	db	32
  2374  00FCD9  25                 	db	37
  2375  00FCDA  32                 	db	50	;'2'
  2376  00FCDB  2E                 	db	46
  2377  00FCDC  33                 	db	51	;'3'
  2378  00FCDD  66                 	db	102	;'f'
  2379  00FCDE  20                 	db	32
  2380  00FCDF  25                 	db	37
  2381  00FCE0  33                 	db	51	;'3'
  2382  00FCE1  2E                 	db	46
  2383  00FCE2  34                 	db	52	;'4'
  2384  00FCE3  66                 	db	102	;'f'
  2385  00FCE4  20                 	db	32
  2386  00FCE5  20                 	db	32
  2387  00FCE6  20                 	db	32
  2388  00FCE7  20                 	db	32
  2389  00FCE8  20                 	db	32
  2390  00FCE9  20                 	db	32
  2391  00FCEA  20                 	db	32
  2392  00FCEB  20                 	db	32
  2393  00FCEC  20                 	db	32
  2394  00FCED  20                 	db	32
  2395  00FCEE  20                 	db	32
  2396  00FCEF  00                 	db	0
  2397  00FCF0                     
  2398                           ; BSR set to: 57
  2399  00FCF0  20                 	db	32
  2400  00FCF1  4D                 	db	77	;'M'
  2401  00FCF2  65                 	db	101	;'e'
  2402  00FCF3  73                 	db	115	;'s'
  2403  00FCF4  67                 	db	103	;'g'
  2404  00FCF5  20                 	db	32
  2405  00FCF6  25                 	db	37
  2406  00FCF7  64                 	db	100	;'d'
  2407  00FCF8  20                 	db	32
  2408  00FCF9  53                 	db	83	;'S'
  2409  00FCFA  74                 	db	116	;'t'
  2410  00FCFB  61                 	db	97	;'a'
  2411  00FCFC  63                 	db	99	;'c'
  2412  00FCFD  6B                 	db	107	;'k'
  2413  00FCFE  20                 	db	32
  2414  00FCFF  25                 	db	37
  2415  00FD00  64                 	db	100	;'d'
  2416  00FD01  20                 	db	32
  2417  00FD02  20                 	db	32
  2418  00FD03  20                 	db	32
  2419  00FD04  20                 	db	32
  2420  00FD05  20                 	db	32
  2421  00FD06  20                 	db	32
  2422  00FD07  00                 	db	0
  2423  00FD08                     STR_9:
  2424                           
  2425                           ; BSR set to: 57
  2426  00FD08  53                 	db	83	;'S'
  2427  00FD09  20                 	db	32
  2428  00FD0A  53                 	db	83	;'S'
  2429  00FD0B  25                 	db	37
  2430  00FD0C  63                 	db	99	;'c'
  2431  00FD0D  43                 	db	67	;'C'
  2432  00FD0E  20                 	db	32
  2433  00FD0F  25                 	db	37
  2434  00FD10  64                 	db	100	;'d'
  2435  00FD11  20                 	db	32
  2436  00FD12  25                 	db	37
  2437  00FD13  32                 	db	50	;'2'
  2438  00FD14  2E                 	db	46
  2439  00FD15  34                 	db	52	;'4'
  2440  00FD16  66                 	db	102	;'f'
  2441  00FD17  20                 	db	32
  2442  00FD18  20                 	db	32
  2443  00FD19  20                 	db	32
  2444  00FD1A  20                 	db	32
  2445  00FD1B  20                 	db	32
  2446  00FD1C  20                 	db	32
  2447  00FD1D  20                 	db	32
  2448  00FD1E  00                 	db	0
  2449  00FD1F                     STR_16:
  2450                           
  2451                           ; BSR set to: 57
  2452  00FD1F  45                 	db	69	;'E'
  2453  00FD20  53                 	db	83	;'S'
  2454  00FD21  52                 	db	82	;'R'
  2455  00FD22  20                 	db	32
  2456  00FD23  20                 	db	32
  2457  00FD24  25                 	db	37
  2458  00FD25  32                 	db	50	;'2'
  2459  00FD26  2E                 	db	46
  2460  00FD27  36                 	db	54	;'6'
  2461  00FD28  66                 	db	102	;'f'
  2462  00FD29  20                 	db	32
  2463  00FD2A  20                 	db	32
  2464  00FD2B  20                 	db	32
  2465  00FD2C  20                 	db	32
  2466  00FD2D  20                 	db	32
  2467  00FD2E  20                 	db	32
  2468  00FD2F  20                 	db	32
  2469  00FD30  20                 	db	32
  2470  00FD31  20                 	db	32
  2471  00FD32  20                 	db	32
  2472  00FD33  20                 	db	32
  2473  00FD34  00                 	db	0
  2474  00FD35                     STR_10:
  2475                           
  2476                           ; BSR set to: 57
  2477  00FD35  53                 	db	83	;'S'
  2478  00FD36  74                 	db	116	;'t'
  2479  00FD37  61                 	db	97	;'a'
  2480  00FD38  74                 	db	116	;'t'
  2481  00FD39  69                 	db	105	;'i'
  2482  00FD3A  63                 	db	99	;'c'
  2483  00FD3B  20                 	db	32
  2484  00FD3C  53                 	db	83	;'S'
  2485  00FD3D  4F                 	db	79	;'O'
  2486  00FD3E  43                 	db	67	;'C'
  2487  00FD3F  20                 	db	32
  2488  00FD40  25                 	db	37
  2489  00FD41  64                 	db	100	;'d'
  2490  00FD42  20                 	db	32
  2491  00FD43  20                 	db	32
  2492  00FD44  20                 	db	32
  2493  00FD45  20                 	db	32
  2494  00FD46  20                 	db	32
  2495  00FD47  20                 	db	32
  2496  00FD48  20                 	db	32
  2497  00FD49  20                 	db	32
  2498  00FD4A  00                 	db	0
  2499  00FD4B                     STR_11:
  2500                           
  2501                           ; BSR set to: 57
  2502  00FD4B  42                 	db	66	;'B'
  2503  00FD4C  61                 	db	97	;'a'
  2504  00FD4D  74                 	db	116	;'t'
  2505  00FD4E  74                 	db	116	;'t'
  2506  00FD4F  65                 	db	101	;'e'
  2507  00FD50  72                 	db	114	;'r'
  2508  00FD51  79                 	db	121	;'y'
  2509  00FD52  20                 	db	32
  2510  00FD53  41                 	db	65	;'A'
  2511  00FD54  68                 	db	104	;'h'
  2512  00FD55  20                 	db	32
  2513  00FD56  25                 	db	37
  2514  00FD57  33                 	db	51	;'3'
  2515  00FD58  2E                 	db	46
  2516  00FD59  32                 	db	50	;'2'
  2517  00FD5A  66                 	db	102	;'f'
  2518  00FD5B  20                 	db	32
  2519  00FD5C  20                 	db	32
  2520  00FD5D  20                 	db	32
  2521  00FD5E  20                 	db	32
  2522  00FD5F  20                 	db	32
  2523  00FD60  00                 	db	0
  2524  00FD61                     STR_15:
  2525                           
  2526                           ; BSR set to: 57
  2527  00FD61  43                 	db	67	;'C'
  2528  00FD62  68                 	db	104	;'h'
  2529  00FD63  65                 	db	101	;'e'
  2530  00FD64  63                 	db	99	;'c'
  2531  00FD65  6B                 	db	107	;'k'
  2532  00FD66  69                 	db	105	;'i'
  2533  00FD67  6E                 	db	110	;'n'
  2534  00FD68  67                 	db	103	;'g'
  2535  00FD69  20                 	db	32
  2536  00FD6A  25                 	db	37
  2537  00FD6B  63                 	db	99	;'c'
  2538  00FD6C  20                 	db	32
  2539  00FD6D  25                 	db	37
  2540  00FD6E  63                 	db	99	;'c'
  2541  00FD6F  20                 	db	32
  2542  00FD70  20                 	db	32
  2543  00FD71  20                 	db	32
  2544  00FD72  20                 	db	32
  2545  00FD73  20                 	db	32
  2546  00FD74  20                 	db	32
  2547  00FD75  00                 	db	0
  2548  00FD76                     STR_37:
  2549                           
  2550                           ; BSR set to: 57
  2551  00FD76  45                 	db	69	;'E'
  2552  00FD77  53                 	db	83	;'S'
  2553  00FD78  52                 	db	82	;'R'
  2554  00FD79  20                 	db	32
  2555  00FD7A  20                 	db	32
  2556  00FD7B  25                 	db	37
  2557  00FD7C  32                 	db	50	;'2'
  2558  00FD7D  2E                 	db	46
  2559  00FD7E  36                 	db	54	;'6'
  2560  00FD7F  66                 	db	102	;'f'
  2561  00FD80  20                 	db	32
  2562  00FD81  20                 	db	32
  2563  00FD82  20                 	db	32
  2564  00FD83  20                 	db	32
  2565  00FD84  20                 	db	32
  2566  00FD85  20                 	db	32
  2567  00FD86  20                 	db	32
  2568  00FD87  20                 	db	32
  2569  00FD88  20                 	db	32
  2570  00FD89  00                 	db	0
  2571  00FD8A                     STR_36:
  2572                           
  2573                           ; BSR set to: 57
  2574  00FD8A  53                 	db	83	;'S'
  2575  00FD8B  25                 	db	37
  2576  00FD8C  63                 	db	99	;'c'
  2577  00FD8D  43                 	db	67	;'C'
  2578  00FD8E  20                 	db	32
  2579  00FD8F  25                 	db	37
  2580  00FD90  64                 	db	100	;'d'
  2581  00FD91  20                 	db	32
  2582  00FD92  52                 	db	82	;'R'
  2583  00FD93  55                 	db	85	;'U'
  2584  00FD94  4E                 	db	78	;'N'
  2585  00FD95  20                 	db	32
  2586  00FD96  25                 	db	37
  2587  00FD97  64                 	db	100	;'d'
  2588  00FD98  20                 	db	32
  2589  00FD99  20                 	db	32
  2590  00FD9A  20                 	db	32
  2591  00FD9B  20                 	db	32
  2592  00FD9C  20                 	db	32
  2593  00FD9D  00                 	db	0
  2594  00FD9E                     STR_34:
  2595                           
  2596                           ; BSR set to: 57
  2597  00FD9E  42                 	db	66	;'B'
  2598  00FD9F  41                 	db	65	;'A'
  2599  00FDA0  54                 	db	84	;'T'
  2600  00FDA1  54                 	db	84	;'T'
  2601  00FDA2  20                 	db	32
  2602  00FDA3  50                 	db	80	;'P'
  2603  00FDA4  57                 	db	87	;'W'
  2604  00FDA5  52                 	db	82	;'R'
  2605  00FDA6  20                 	db	32
  2606  00FDA7  25                 	db	37
  2607  00FDA8  33                 	db	51	;'3'
  2608  00FDA9  2E                 	db	46
  2609  00FDAA  32                 	db	50	;'2'
  2610  00FDAB  66                 	db	102	;'f'
  2611  00FDAC  20                 	db	32
  2612  00FDAD  20                 	db	32
  2613  00FDAE  20                 	db	32
  2614  00FDAF  20                 	db	32
  2615  00FDB0  20                 	db	32
  2616  00FDB1  00                 	db	0
  2617  00FDB2                     STR_38:
  2618                           
  2619                           ; BSR set to: 57
  2620  00FDB2  52                 	db	82	;'R'
  2621  00FDB3  31                 	db	49	;'1'
  2622  00FDB4  20                 	db	32
  2623  00FDB5  25                 	db	37
  2624  00FDB6  32                 	db	50	;'2'
  2625  00FDB7  2E                 	db	46
  2626  00FDB8  33                 	db	51	;'3'
  2627  00FDB9  66                 	db	102	;'f'
  2628  00FDBA  20                 	db	32
  2629  00FDBB  25                 	db	37
  2630  00FDBC  33                 	db	51	;'3'
  2631  00FDBD  2E                 	db	46
  2632  00FDBE  34                 	db	52	;'4'
  2633  00FDBF  66                 	db	102	;'f'
  2634  00FDC0  20                 	db	32
  2635  00FDC1  20                 	db	32
  2636  00FDC2  20                 	db	32
  2637  00FDC3  20                 	db	32
  2638  00FDC4  20                 	db	32
  2639  00FDC5  00                 	db	0
  2640  00FDC6                     STR_39:
  2641                           
  2642                           ; BSR set to: 57
  2643  00FDC6  52                 	db	82	;'R'
  2644  00FDC7  32                 	db	50	;'2'
  2645  00FDC8  20                 	db	32
  2646  00FDC9  25                 	db	37
  2647  00FDCA  32                 	db	50	;'2'
  2648  00FDCB  2E                 	db	46
  2649  00FDCC  33                 	db	51	;'3'
  2650  00FDCD  66                 	db	102	;'f'
  2651  00FDCE  20                 	db	32
  2652  00FDCF  25                 	db	37
  2653  00FDD0  33                 	db	51	;'3'
  2654  00FDD1  2E                 	db	46
  2655  00FDD2  34                 	db	52	;'4'
  2656  00FDD3  66                 	db	102	;'f'
  2657  00FDD4  20                 	db	32
  2658  00FDD5  20                 	db	32
  2659  00FDD6  20                 	db	32
  2660  00FDD7  20                 	db	32
  2661  00FDD8  20                 	db	32
  2662  00FDD9  00                 	db	0
  2663  00FDDA                     STR_35:
  2664                           
  2665                           ; BSR set to: 57
  2666  00FDDA  42                 	db	66	;'B'
  2667  00FDDB  41                 	db	65	;'A'
  2668  00FDDC  48                 	db	72	;'H'
  2669  00FDDD  20                 	db	32
  2670  00FDDE  25                 	db	37
  2671  00FDDF  33                 	db	51	;'3'
  2672  00FDE0  2E                 	db	46
  2673  00FDE1  32                 	db	50	;'2'
  2674  00FDE2  66                 	db	102	;'f'
  2675  00FDE3  20                 	db	32
  2676  00FDE4  50                 	db	80	;'P'
  2677  00FDE5  25                 	db	37
  2678  00FDE6  33                 	db	51	;'3'
  2679  00FDE7  2E                 	db	46
  2680  00FDE8  32                 	db	50	;'2'
  2681  00FDE9  66                 	db	102	;'f'
  2682  00FDEA  20                 	db	32
  2683  00FDEB  20                 	db	32
  2684  00FDEC  20                 	db	32
  2685  00FDED  00                 	db	0
  2686  00FDEE                     STR_58:
  2687                           
  2688                           ; BSR set to: 57
  2689  00FDEE  20                 	db	32
  2690  00FDEF  20                 	db	32
  2691  00FDF0  20                 	db	32
  2692  00FDF1  20                 	db	32
  2693  00FDF2  20                 	db	32
  2694  00FDF3  20                 	db	32
  2695  00FDF4  20                 	db	32
  2696  00FDF5  20                 	db	32
  2697  00FDF6  20                 	db	32
  2698  00FDF7  20                 	db	32
  2699  00FDF8  20                 	db	32
  2700  00FDF9  20                 	db	32
  2701  00FDFA  20                 	db	32
  2702  00FDFB  20                 	db	32
  2703  00FDFC  20                 	db	32
  2704  00FDFD  20                 	db	32
  2705  00FDFE  20                 	db	32
  2706  00FDFF  20                 	db	32
  2707  00FE00  00                 	db	0
  2708  00FE01                     STR_48:
  2709                           
  2710                           ; BSR set to: 57
  2711  00FE01  48                 	db	72	;'H'
  2712  00FE02  45                 	db	69	;'E'
  2713  00FE03  4C                 	db	76	;'L'
  2714  00FE04  50                 	db	80	;'P'
  2715  00FE05  20                 	db	32
  2716  00FE06  25                 	db	37
  2717  00FE07  73                 	db	115	;'s'
  2718  00FE08  20                 	db	32
  2719  00FE09  20                 	db	32
  2720  00FE0A  20                 	db	32
  2721  00FE0B  20                 	db	32
  2722  00FE0C  20                 	db	32
  2723  00FE0D  20                 	db	32
  2724  00FE0E  20                 	db	32
  2725  00FE0F  20                 	db	32
  2726  00FE10  20                 	db	32
  2727  00FE11  20                 	db	32
  2728  00FE12  20                 	db	32
  2729  00FE13  00                 	db	0
  2730  00FE14                     
  2731                           ; BSR set to: 57
  2732  00FE14  44                 	db	68	;'D'
  2733  00FE15  49                 	db	73	;'I'
  2734  00FE16  53                 	db	83	;'S'
  2735  00FE17  50                 	db	80	;'P'
  2736  00FE18  4C                 	db	76	;'L'
  2737  00FE19  41                 	db	65	;'A'
  2738  00FE1A  59                 	db	89	;'Y'
  2739  00FE1B  20                 	db	32
  2740  00FE1C  25                 	db	37
  2741  00FE1D  73                 	db	115	;'s'
  2742  00FE1E  20                 	db	32
  2743  00FE1F  20                 	db	32
  2744  00FE20  20                 	db	32
  2745  00FE21  20                 	db	32
  2746  00FE22  20                 	db	32
  2747  00FE23  20                 	db	32
  2748  00FE24  20                 	db	32
  2749  00FE25  20                 	db	32
  2750  00FE26  00                 	db	0
  2751  00FE27                     STR_31:
  2752                           
  2753                           ; BSR set to: 57
  2754  00FE27  42                 	db	66	;'B'
  2755  00FE28  41                 	db	65	;'A'
  2756  00FE29  54                 	db	84	;'T'
  2757  00FE2A  20                 	db	32
  2758  00FE2B  49                 	db	73	;'I'
  2759  00FE2C  57                 	db	87	;'W'
  2760  00FE2D  48                 	db	72	;'H'
  2761  00FE2E  20                 	db	32
  2762  00FE2F  25                 	db	37
  2763  00FE30  34                 	db	52	;'4'
  2764  00FE31  2E                 	db	46
  2765  00FE32  31                 	db	49	;'1'
  2766  00FE33  66                 	db	102	;'f'
  2767  00FE34  20                 	db	32
  2768  00FE35  20                 	db	32
  2769  00FE36  20                 	db	32
  2770  00FE37  20                 	db	32
  2771  00FE38  20                 	db	32
  2772  00FE39  00                 	db	0
  2773  00FE3A                     STR_32:
  2774                           
  2775                           ; BSR set to: 57
  2776  00FE3A  42                 	db	66	;'B'
  2777  00FE3B  41                 	db	65	;'A'
  2778  00FE3C  54                 	db	84	;'T'
  2779  00FE3D  20                 	db	32
  2780  00FE3E  4F                 	db	79	;'O'
  2781  00FE3F  57                 	db	87	;'W'
  2782  00FE40  48                 	db	72	;'H'
  2783  00FE41  20                 	db	32
  2784  00FE42  25                 	db	37
  2785  00FE43  34                 	db	52	;'4'
  2786  00FE44  2E                 	db	46
  2787  00FE45  31                 	db	49	;'1'
  2788  00FE46  66                 	db	102	;'f'
  2789  00FE47  20                 	db	32
  2790  00FE48  20                 	db	32
  2791  00FE49  20                 	db	32
  2792  00FE4A  20                 	db	32
  2793  00FE4B  20                 	db	32
  2794  00FE4C  00                 	db	0
  2795  00FE4D                     STR_33:
  2796                           
  2797                           ; BSR set to: 57
  2798  00FE4D  42                 	db	66	;'B'
  2799  00FE4E  41                 	db	65	;'A'
  2800  00FE4F  54                 	db	84	;'T'
  2801  00FE50  20                 	db	32
  2802  00FE51  54                 	db	84	;'T'
  2803  00FE52  57                 	db	87	;'W'
  2804  00FE53  48                 	db	72	;'H'
  2805  00FE54  20                 	db	32
  2806  00FE55  25                 	db	37
  2807  00FE56  34                 	db	52	;'4'
  2808  00FE57  2E                 	db	46
  2809  00FE58  31                 	db	49	;'1'
  2810  00FE59  66                 	db	102	;'f'
  2811  00FE5A  20                 	db	32
  2812  00FE5B  20                 	db	32
  2813  00FE5C  20                 	db	32
  2814  00FE5D  20                 	db	32
  2815  00FE5E  20                 	db	32
  2816  00FE5F  00                 	db	0
  2817  00FE60                     STR_25:
  2818                           
  2819                           ; BSR set to: 57
  2820  00FE60  50                 	db	80	;'P'
  2821  00FE61  56                 	db	86	;'V'
  2822  00FE62  20                 	db	32
  2823  00FE63  20                 	db	32
  2824  00FE64  20                 	db	32
  2825  00FE65  57                 	db	87	;'W'
  2826  00FE66  48                 	db	72	;'H'
  2827  00FE67  20                 	db	32
  2828  00FE68  25                 	db	37
  2829  00FE69  33                 	db	51	;'3'
  2830  00FE6A  2E                 	db	46
  2831  00FE6B  32                 	db	50	;'2'
  2832  00FE6C  66                 	db	102	;'f'
  2833  00FE6D  20                 	db	32
  2834  00FE6E  20                 	db	32
  2835  00FE6F  20                 	db	32
  2836  00FE70  20                 	db	32
  2837  00FE71  20                 	db	32
  2838  00FE72  00                 	db	0
  2839  00FE73                     STR_27:
  2840                           
  2841                           ; BSR set to: 57
  2842  00FE73  49                 	db	73	;'I'
  2843  00FE74  4E                 	db	78	;'N'
  2844  00FE75  56                 	db	86	;'V'
  2845  00FE76  20                 	db	32
  2846  00FE77  20                 	db	32
  2847  00FE78  57                 	db	87	;'W'
  2848  00FE79  48                 	db	72	;'H'
  2849  00FE7A  20                 	db	32
  2850  00FE7B  25                 	db	37
  2851  00FE7C  33                 	db	51	;'3'
  2852  00FE7D  2E                 	db	46
  2853  00FE7E  32                 	db	50	;'2'
  2854  00FE7F  66                 	db	102	;'f'
  2855  00FE80  20                 	db	32
  2856  00FE81  20                 	db	32
  2857  00FE82  20                 	db	32
  2858  00FE83  20                 	db	32
  2859  00FE84  20                 	db	32
  2860  00FE85  00                 	db	0
  2861  00FE86                     STR_26:
  2862                           
  2863                           ; BSR set to: 57
  2864  00FE86  4C                 	db	76	;'L'
  2865  00FE87  4F                 	db	79	;'O'
  2866  00FE88  41                 	db	65	;'A'
  2867  00FE89  44                 	db	68	;'D'
  2868  00FE8A  20                 	db	32
  2869  00FE8B  57                 	db	87	;'W'
  2870  00FE8C  48                 	db	72	;'H'
  2871  00FE8D  20                 	db	32
  2872  00FE8E  25                 	db	37
  2873  00FE8F  33                 	db	51	;'3'
  2874  00FE90  2E                 	db	46
  2875  00FE91  32                 	db	50	;'2'
  2876  00FE92  66                 	db	102	;'f'
  2877  00FE93  20                 	db	32
  2878  00FE94  20                 	db	32
  2879  00FE95  20                 	db	32
  2880  00FE96  20                 	db	32
  2881  00FE97  20                 	db	32
  2882  00FE98  00                 	db	0
  2883  00FE99                     STR_22:
  2884                           
  2885                           ; BSR set to: 57
  2886  00FE99  50                 	db	80	;'P'
  2887  00FE9A  56                 	db	86	;'V'
  2888  00FE9B  20                 	db	32
  2889  00FE9C  20                 	db	32
  2890  00FE9D  20                 	db	32
  2891  00FE9E  50                 	db	80	;'P'
  2892  00FE9F  57                 	db	87	;'W'
  2893  00FEA0  52                 	db	82	;'R'
  2894  00FEA1  20                 	db	32
  2895  00FEA2  25                 	db	37
  2896  00FEA3  33                 	db	51	;'3'
  2897  00FEA4  2E                 	db	46
  2898  00FEA5  32                 	db	50	;'2'
  2899  00FEA6  66                 	db	102	;'f'
  2900  00FEA7  20                 	db	32
  2901  00FEA8  20                 	db	32
  2902  00FEA9  20                 	db	32
  2903  00FEAA  20                 	db	32
  2904  00FEAB  00                 	db	0
  2905  00FEAC                     STR_24:
  2906                           
  2907                           ; BSR set to: 57
  2908  00FEAC  49                 	db	73	;'I'
  2909  00FEAD  4E                 	db	78	;'N'
  2910  00FEAE  56                 	db	86	;'V'
  2911  00FEAF  20                 	db	32
  2912  00FEB0  20                 	db	32
  2913  00FEB1  50                 	db	80	;'P'
  2914  00FEB2  57                 	db	87	;'W'
  2915  00FEB3  52                 	db	82	;'R'
  2916  00FEB4  20                 	db	32
  2917  00FEB5  25                 	db	37
  2918  00FEB6  33                 	db	51	;'3'
  2919  00FEB7  2E                 	db	46
  2920  00FEB8  32                 	db	50	;'2'
  2921  00FEB9  66                 	db	102	;'f'
  2922  00FEBA  20                 	db	32
  2923  00FEBB  20                 	db	32
  2924  00FEBC  20                 	db	32
  2925  00FEBD  20                 	db	32
  2926  00FEBE  00                 	db	0
  2927  00FEBF                     STR_23:
  2928                           
  2929                           ; BSR set to: 57
  2930  00FEBF  4C                 	db	76	;'L'
  2931  00FEC0  4F                 	db	79	;'O'
  2932  00FEC1  41                 	db	65	;'A'
  2933  00FEC2  44                 	db	68	;'D'
  2934  00FEC3  20                 	db	32
  2935  00FEC4  50                 	db	80	;'P'
  2936  00FEC5  57                 	db	87	;'W'
  2937  00FEC6  52                 	db	82	;'R'
  2938  00FEC7  20                 	db	32
  2939  00FEC8  25                 	db	37
  2940  00FEC9  33                 	db	51	;'3'
  2941  00FECA  2E                 	db	46
  2942  00FECB  32                 	db	50	;'2'
  2943  00FECC  66                 	db	102	;'f'
  2944  00FECD  20                 	db	32
  2945  00FECE  20                 	db	32
  2946  00FECF  20                 	db	32
  2947  00FED0  20                 	db	32
  2948  00FED1  00                 	db	0
  2949  00FED2                     STR_29:
  2950                           
  2951                           ; BSR set to: 57
  2952  00FED2  42                 	db	66	;'B'
  2953  00FED3  56                 	db	86	;'V'
  2954  00FED4  20                 	db	32
  2955  00FED5  25                 	db	37
  2956  00FED6  32                 	db	50	;'2'
  2957  00FED7  2E                 	db	46
  2958  00FED8  32                 	db	50	;'2'
  2959  00FED9  66                 	db	102	;'f'
  2960  00FEDA  20                 	db	32
  2961  00FEDB  42                 	db	66	;'B'
  2962  00FEDC  41                 	db	65	;'A'
  2963  00FEDD  20                 	db	32
  2964  00FEDE  25                 	db	37
  2965  00FEDF  32                 	db	50	;'2'
  2966  00FEE0  2E                 	db	46
  2967  00FEE1  32                 	db	50	;'2'
  2968  00FEE2  66                 	db	102	;'f'
  2969  00FEE3  20                 	db	32
  2970  00FEE4  00                 	db	0
  2971  00FEE5                     STR_30:
  2972                           
  2973                           ; BSR set to: 57
  2974  00FEE5  43                 	db	67	;'C'
  2975  00FEE6  56                 	db	86	;'V'
  2976  00FEE7  20                 	db	32
  2977  00FEE8  25                 	db	37
  2978  00FEE9  32                 	db	50	;'2'
  2979  00FEEA  2E                 	db	46
  2980  00FEEB  32                 	db	50	;'2'
  2981  00FEEC  66                 	db	102	;'f'
  2982  00FEED  20                 	db	32
  2983  00FEEE  4C                 	db	76	;'L'
  2984  00FEEF  41                 	db	65	;'A'
  2985  00FEF0  20                 	db	32
  2986  00FEF1  25                 	db	37
  2987  00FEF2  32                 	db	50	;'2'
  2988  00FEF3  2E                 	db	46
  2989  00FEF4  32                 	db	50	;'2'
  2990  00FEF5  66                 	db	102	;'f'
  2991  00FEF6  20                 	db	32
  2992  00FEF7  00                 	db	0
  2993  00FEF8                     STR_28:
  2994                           
  2995                           ; BSR set to: 57
  2996  00FEF8  50                 	db	80	;'P'
  2997  00FEF9  56                 	db	86	;'V'
  2998  00FEFA  20                 	db	32
  2999  00FEFB  25                 	db	37
  3000  00FEFC  32                 	db	50	;'2'
  3001  00FEFD  2E                 	db	46
  3002  00FEFE  32                 	db	50	;'2'
  3003  00FEFF  66                 	db	102	;'f'
  3004  00FF00  20                 	db	32
  3005  00FF01  50                 	db	80	;'P'
  3006  00FF02  41                 	db	65	;'A'
  3007  00FF03  20                 	db	32
  3008  00FF04  25                 	db	37
  3009  00FF05  32                 	db	50	;'2'
  3010  00FF06  2E                 	db	46
  3011  00FF07  32                 	db	50	;'2'
  3012  00FF08  66                 	db	102	;'f'
  3013  00FF09  20                 	db	32
  3014  00FF0A  00                 	db	0
  3015  00FF0B                     STR_8:
  3016                           
  3017                           ; BSR set to: 57
  3018  00FF0B  42                 	db	66	;'B'
  3019  00FF0C  56                 	db	86	;'V'
  3020  00FF0D  20                 	db	32
  3021  00FF0E  25                 	db	37
  3022  00FF0F  32                 	db	50	;'2'
  3023  00FF10  2E                 	db	46
  3024  00FF11  34                 	db	52	;'4'
  3025  00FF12  66                 	db	102	;'f'
  3026  00FF13  20                 	db	32
  3027  00FF14  20                 	db	32
  3028  00FF15  20                 	db	32
  3029  00FF16  20                 	db	32
  3030  00FF17  20                 	db	32
  3031  00FF18  20                 	db	32
  3032  00FF19  20                 	db	32
  3033  00FF1A  20                 	db	32
  3034  00FF1B  20                 	db	32
  3035  00FF1C  00                 	db	0
  3036  00FF1D                     STR_4:
  3037                           
  3038                           ; BSR set to: 57
  3039  00FF1D  20                 	db	32
  3040  00FF1E  4E                 	db	78	;'N'
  3041  00FF1F  53                 	db	83	;'S'
  3042  00FF20  41                 	db	65	;'A'
  3043  00FF21  53                 	db	83	;'S'
  3044  00FF22  50                 	db	80	;'P'
  3045  00FF23  4F                 	db	79	;'O'
  3046  00FF24  4F                 	db	79	;'O'
  3047  00FF25  4B                 	db	75	;'K'
  3048  00FF26  20                 	db	32
  3049  00FF27  20                 	db	32
  3050  00FF28  20                 	db	32
  3051  00FF29  20                 	db	32
  3052  00FF2A  20                 	db	32
  3053  00FF2B  20                 	db	32
  3054  00FF2C  20                 	db	32
  3055  00FF2D  00                 	db	0
  3056  00FF2E                     STR_12:
  3057                           
  3058                           ; BSR set to: 57
  3059  00FF2E  42                 	db	66	;'B'
  3060  00FF2F  61                 	db	97	;'a'
  3061  00FF30  74                 	db	116	;'t'
  3062  00FF31  74                 	db	116	;'t'
  3063  00FF32  65                 	db	101	;'e'
  3064  00FF33  72                 	db	114	;'r'
  3065  00FF34  79                 	db	121	;'y'
  3066  00FF35  20                 	db	32
  3067  00FF36  45                 	db	69	;'E'
  3068  00FF37  53                 	db	83	;'S'
  3069  00FF38  52                 	db	82	;'R'
  3070  00FF39  20                 	db	32
  3071  00FF3A  20                 	db	32
  3072  00FF3B  20                 	db	32
  3073  00FF3C  20                 	db	32
  3074  00FF3D  20                 	db	32
  3075  00FF3E  00                 	db	0
  3076  00FF3F                     STR_13:
  3077                           
  3078                           ; BSR set to: 57
  3079  00FF3F  43                 	db	67	;'C'
  3080  00FF40  61                 	db	97	;'a'
  3081  00FF41  6C                 	db	108	;'l'
  3082  00FF42  63                 	db	99	;'c'
  3083  00FF43  75                 	db	117	;'u'
  3084  00FF44  6C                 	db	108	;'l'
  3085  00FF45  61                 	db	97	;'a'
  3086  00FF46  74                 	db	116	;'t'
  3087  00FF47  69                 	db	105	;'i'
  3088  00FF48  6F                 	db	111	;'o'
  3089  00FF49  6E                 	db	110	;'n'
  3090  00FF4A  20                 	db	32
  3091  00FF4B  20                 	db	32
  3092  00FF4C  20                 	db	32
  3093  00FF4D  20                 	db	32
  3094  00FF4E  20                 	db	32
  3095  00FF4F  00                 	db	0
  3096  00FF50                     STR_1:
  3097                           
  3098                           ; BSR set to: 57
  3099  00FF50  20                 	db	32
  3100  00FF51  4D                 	db	77	;'M'
  3101  00FF52  42                 	db	66	;'B'
  3102  00FF53  4D                 	db	77	;'M'
  3103  00FF54  43                 	db	67	;'C'
  3104  00FF55  20                 	db	32
  3105  00FF56  53                 	db	83	;'S'
  3106  00FF57  4F                 	db	79	;'O'
  3107  00FF58  4C                 	db	76	;'L'
  3108  00FF59  41                 	db	65	;'A'
  3109  00FF5A  52                 	db	82	;'R'
  3110  00FF5B  4D                 	db	77	;'M'
  3111  00FF5C  4F                 	db	79	;'O'
  3112  00FF5D  4E                 	db	78	;'N'
  3113  00FF5E  20                 	db	32
  3114  00FF5F  20                 	db	32
  3115  00FF60  00                 	db	0
  3116  00FF61                     STR_21:
  3117                           
  3118                           ; BSR set to: 57
  3119  00FF61  25                 	db	37
  3120  00FF62  64                 	db	100	;'d'
  3121  00FF63  20                 	db	32
  3122  00FF64  25                 	db	37
  3123  00FF65  32                 	db	50	;'2'
  3124  00FF66  2E                 	db	46
  3125  00FF67  34                 	db	52	;'4'
  3126  00FF68  66                 	db	102	;'f'
  3127  00FF69  2C                 	db	44
  3128  00FF6A  20                 	db	32
  3129  00FF6B  25                 	db	37
  3130  00FF6C  64                 	db	100	;'d'
  3131  00FF6D  20                 	db	32
  3132  00FF6E  20                 	db	32
  3133  00FF6F  20                 	db	32
  3134  00FF70  23                 	db	35
  3135  00FF71  00                 	db	0
  3136  00FF72                     STR_14:
  3137                           
  3138                           ; BSR set to: 57
  3139  00FF72  43                 	db	67	;'C'
  3140  00FF73  68                 	db	104	;'h'
  3141  00FF74  65                 	db	101	;'e'
  3142  00FF75  63                 	db	99	;'c'
  3143  00FF76  6B                 	db	107	;'k'
  3144  00FF77  20                 	db	32
  3145  00FF78  33                 	db	51	;'3'
  3146  00FF79  30                 	db	48	;'0'
  3147  00FF7A  20                 	db	32
  3148  00FF7B  73                 	db	115	;'s'
  3149  00FF7C  65                 	db	101	;'e'
  3150  00FF7D  63                 	db	99	;'c'
  3151  00FF7E  6F                 	db	111	;'o'
  3152  00FF7F  6E                 	db	110	;'n'
  3153  00FF80  64                 	db	100	;'d'
  3154  00FF81  73                 	db	115	;'s'
  3155  00FF82  00                 	db	0
  3156  00FF83                     STR_19:
  3157                           
  3158                           ; BSR set to: 57
  3159  00FF83  25                 	db	37
  3160  00FF84  64                 	db	100	;'d'
  3161  00FF85  20                 	db	32
  3162  00FF86  25                 	db	37
  3163  00FF87  32                 	db	50	;'2'
  3164  00FF88  2E                 	db	46
  3165  00FF89  34                 	db	52	;'4'
  3166  00FF8A  66                 	db	102	;'f'
  3167  00FF8B  20                 	db	32
  3168  00FF8C  20                 	db	32
  3169  00FF8D  20                 	db	32
  3170  00FF8E  25                 	db	37
  3171  00FF8F  64                 	db	100	;'d'
  3172  00FF90  20                 	db	32
  3173  00FF91  20                 	db	32
  3174  00FF92  00                 	db	0
  3175  00FF93                     STR_52:
  3176                           
  3177                           ; BSR set to: 57
  3178  00FF93  76                 	db	118	;'v'
  3179  00FF94  74                 	db	116	;'t'
  3180  00FF95  65                 	db	101	;'e'
  3181  00FF96  72                 	db	114	;'r'
  3182  00FF97  6D                 	db	109	;'m'
  3183  00FF98  20                 	db	32
  3184  00FF99  25                 	db	37
  3185  00FF9A  78                 	db	120	;'x'
  3186  00FF9B  3A                 	db	58	;':'
  3187  00FF9C  25                 	db	37
  3188  00FF9D  78                 	db	120	;'x'
  3189  00FF9E  20                 	db	32
  3190  00FF9F  20                 	db	32
  3191  00FFA0  20                 	db	32
  3192  00FFA1  00                 	db	0
  3193  00FFA2                     STR_2:
  3194                           
  3195                           ; BSR set to: 57
  3196  00FFA2  20                 	db	32
  3197  00FFA3  56                 	db	86	;'V'
  3198  00FFA4  65                 	db	101	;'e'
  3199  00FFA5  72                 	db	114	;'r'
  3200  00FFA6  73                 	db	115	;'s'
  3201  00FFA7  69                 	db	105	;'i'
  3202  00FFA8  6F                 	db	111	;'o'
  3203  00FFA9  6E                 	db	110	;'n'
  3204  00FFAA  20                 	db	32
  3205  00FFAB  25                 	db	37
  3206  00FFAC  73                 	db	115	;'s'
  3207  00FFAD  20                 	db	32
  3208  00FFAE  20                 	db	32
  3209  00FFAF  20                 	db	32
  3210  00FFB0  00                 	db	0
  3211  00FFB1                     STR_46:
  3212                           
  3213                           ; BSR set to: 57
  3214  00FFB1  44                 	db	68	;'D'
  3215  00FFB2  65                 	db	101	;'e'
  3216  00FFB3  63                 	db	99	;'c'
  3217  00FFB4  20                 	db	32
  3218  00FFB5  31                 	db	49	;'1'
  3219  00FFB6  38                 	db	56	;'8'
  3220  00FFB7  20                 	db	32
  3221  00FFB8  32                 	db	50	;'2'
  3222  00FFB9  30                 	db	48	;'0'
  3223  00FFBA  31                 	db	49	;'1'
  3224  00FFBB  39                 	db	57	;'9'
  3225  00FFBC  00                 	db	0
  3226  00FFBD                     STR_50:
  3227                           
  3228                           ; BSR set to: 57
  3229  00FFBD  25                 	db	37
  3230  00FFBE  73                 	db	115	;'s'
  3231  00FFBF  20                 	db	32
  3232  00FFC0  20                 	db	32
  3233  00FFC1  20                 	db	32
  3234  00FFC2  20                 	db	32
  3235  00FFC3  20                 	db	32
  3236  00FFC4  20                 	db	32
  3237  00FFC5  20                 	db	32
  3238  00FFC6  00                 	db	0
  3239  00FFC7                     STR_47:
  3240                           
  3241                           ; BSR set to: 57
  3242  00FFC7  31                 	db	49	;'1'
  3243  00FFC8  37                 	db	55	;'7'
  3244  00FFC9  3A                 	db	58	;':'
  3245  00FFCA  33                 	db	51	;'3'
  3246  00FFCB  31                 	db	49	;'1'
  3247  00FFCC  3A                 	db	58	;':'
  3248  00FFCD  31                 	db	49	;'1'
  3249  00FFCE  30                 	db	48	;'0'
  3250  00FFCF  00                 	db	0
  3251  00FFD0                     STR_3:
  3252                           
  3253                           ; BSR set to: 57
  3254  00FFD0  31                 	db	49	;'1'
  3255  00FFD1  2E                 	db	46
  3256  00FFD2  30                 	db	48	;'0'
  3257  00FFD3  30                 	db	48	;'0'
  3258  00FFD4  36                 	db	54	;'6'
  3259  00FFD5  00                 	db	0
  3260  00FFD6                     STR_66:
  3261                           
  3262                           ; BSR set to: 57
  3263  00FFD6  49                 	db	73	;'I'
  3264  00FFD7  4E                 	db	78	;'N'
  3265  00FFD8  46                 	db	70	;'F'
  3266  00FFD9  00                 	db	0
  3267  00FFDA                     STR_70:
  3268                           
  3269                           ; BSR set to: 57
  3270  00FFDA  4E                 	db	78	;'N'
  3271  00FFDB  41                 	db	65	;'A'
  3272  00FFDC  4E                 	db	78	;'N'
  3273  00FFDD  00                 	db	0
  3274  00FFDE                     STR_67:
  3275                           
  3276                           ; BSR set to: 57
  3277  00FFDE  69                 	db	105	;'i'
  3278  00FFDF  6E                 	db	110	;'n'
  3279  00FFE0  66                 	db	102	;'f'
  3280  00FFE1  00                 	db	0
  3281  00FFE2                     STR_71:
  3282                           
  3283                           ; BSR set to: 57
  3284  00FFE2  6E                 	db	110	;'n'
  3285  00FFE3  61                 	db	97	;'a'
  3286  00FFE4  6E                 	db	110	;'n'
  3287  00FFE5  00                 	db	0
  3288  00FFE6                     STR_97:
  3289                           
  3290                           ; BSR set to: 57
  3291  00FFE6  6C                 	db	108	;'l'
  3292  00FFE7  58                 	db	88	;'X'
  3293  00FFE8  00                 	db	0
  3294  00FFE9                     STR_74:
  3295                           
  3296                           ; BSR set to: 57
  3297  00FFE9  6C                 	db	108	;'l'
  3298  00FFEA  64                 	db	100	;'d'
  3299  00FFEB  00                 	db	0
  3300  00FFEC                     STR_83:
  3301                           
  3302                           ; BSR set to: 57
  3303  00FFEC  6C                 	db	108	;'l'
  3304  00FFED  66                 	db	102	;'f'
  3305  00FFEE  00                 	db	0
  3306  00FFEF                     STR_78:
  3307                           
  3308                           ; BSR set to: 57
  3309  00FFEF  6C                 	db	108	;'l'
  3310  00FFF0  69                 	db	105	;'i'
  3311  00FFF1  00                 	db	0
  3312  00FFF2                     STR_88:
  3313                           
  3314                           ; BSR set to: 57
  3315  00FFF2  6C                 	db	108	;'l'
  3316  00FFF3  75                 	db	117	;'u'
  3317  00FFF4  00                 	db	0
  3318  00FFF5                     STR_93:
  3319                           
  3320                           ; BSR set to: 57
  3321  00FFF5  6C                 	db	108	;'l'
  3322  00FFF6  78                 	db	120	;'x'
  3323  00FFF7  00                 	db	0
  3324  00FFF8                     STR_44:
  3325                           
  3326                           ; BSR set to: 57
  3327  00FFF8  25                 	db	37
  3328  00FFF9  63                 	db	99	;'c'
  3329  00FFFA  00                 	db	0
  3330  00FFFB                     STR_43:
  3331                           
  3332                           ; BSR set to: 57
  3333  00FFFB  25                 	db	37
  3334  00FFFC  73                 	db	115	;'s'
  3335  00FFFD  00                 	db	0
  3336  0000                     
  3337                           ; #config settings
  3338  00FFFE  00                 	db	0	; dummy byte at the end
  3339  0000                     
  3340                           	psect	cinit
  3341  019302                     __pcinit:
  3342                           	opt callstack 0
  3343  019302                     start_initialization:
  3344                           	opt callstack 0
  3345  019302                     __initialization:
  3346                           	opt callstack 0
  3347                           
  3348                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3349                           ; load TBLPTR registers with __pidataBIGRAM
  3350  019302  0EB8               	movlw	low __pidataBIGRAM
  3351  019304  6EF6               	movwf	tblptrl,c
  3352  019306  0E7B               	movlw	high __pidataBIGRAM
  3353  019308  6EF7               	movwf	tblptrh,c
  3354  01930A  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3355  01930C  6EF8               	movwf	tblptru,c
  3356  01930E  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3357  019312  EE20 F200          	lfsr	2,512
  3358  019316                     copy_data0:
  3359  019316  0009               	tblrd		*+
  3360  019318  006F FFD7 FFEE     	movff	tablat,postinc0
  3361  01931E  50DD               	movf	postdec2,w,c
  3362  019320  50D9               	movf	fsr2l,w,c
  3363  019322  E1F9               	bnz	copy_data0
  3364  019324  50DA               	movf	fsr2h,w,c
  3365  019326  E1F7               	bnz	copy_data0
  3366                           
  3367                           ; Initialize objects allocated to BANK2 (190 bytes)
  3368                           ; load TBLPTR registers with __pidataBANK2
  3369  019328  0E7C               	movlw	low __pidataBANK2
  3370  01932A  6EF6               	movwf	tblptrl,c
  3371  01932C  0E9A               	movlw	high __pidataBANK2
  3372  01932E  6EF7               	movwf	tblptrh,c
  3373  019330  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3374  019332  6EF8               	movwf	tblptru,c
  3375  019334  EE00  F200         	lfsr	0,__pdataBANK2
  3376  019338  EE20 F0BE          	lfsr	2,190
  3377  01933C                     copy_data1:
  3378  01933C  0009               	tblrd		*+
  3379  01933E  006F FFD7 FFEE     	movff	tablat,postinc0
  3380  019344  50DD               	movf	postdec2,w,c
  3381  019346  50D9               	movf	fsr2l,w,c
  3382  019348  E1F9               	bnz	copy_data1
  3383                           
  3384                           ; Initialize objects allocated to BANK1 (247 bytes)
  3385                           ; load TBLPTR registers with __pidataBANK1
  3386  01934A  0E1C               	movlw	low __pidataBANK1
  3387  01934C  6EF6               	movwf	tblptrl,c
  3388  01934E  0E96               	movlw	high __pidataBANK1
  3389  019350  6EF7               	movwf	tblptrh,c
  3390  019352  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3391  019354  6EF8               	movwf	tblptru,c
  3392  019356  EE00  F100         	lfsr	0,__pdataBANK1
  3393  01935A  EE20 F0F7          	lfsr	2,247
  3394  01935E                     copy_data2:
  3395  01935E  0009               	tblrd		*+
  3396  019360  006F FFD7 FFEE     	movff	tablat,postinc0
  3397  019366  50DD               	movf	postdec2,w,c
  3398  019368  50D9               	movf	fsr2l,w,c
  3399  01936A  E1F9               	bnz	copy_data2
  3400                           
  3401                           ; Initialize objects allocated to BANK0 (54 bytes)
  3402                           ; load TBLPTR registers with __pidataBANK0
  3403  01936C  0ED0               	movlw	low __pidataBANK0
  3404  01936E  6EF6               	movwf	tblptrl,c
  3405  019370  0EAD               	movlw	high __pidataBANK0
  3406  019372  6EF7               	movwf	tblptrh,c
  3407  019374  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3408  019376  6EF8               	movwf	tblptru,c
  3409  019378  EE00  F0C4         	lfsr	0,__pdataBANK0
  3410  01937C  EE20 F036          	lfsr	2,54
  3411  019380                     copy_data3:
  3412  019380  0009               	tblrd		*+
  3413  019382  006F FFD7 FFEE     	movff	tablat,postinc0
  3414  019388  50DD               	movf	postdec2,w,c
  3415  01938A  50D9               	movf	fsr2l,w,c
  3416  01938C  E1F9               	bnz	copy_data3
  3417                           
  3418                           ; Clear objects allocated to BIGRAM (482 bytes)
  3419  01938E  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3420  019392  EE20 F1E2          	lfsr	2,482
  3421  019396                     clear_0:
  3422  019396  6AEE               	clrf	postinc0,c
  3423  019398  50DD               	movf	postdec2,w,c
  3424  01939A  50D9               	movf	fsr2l,w,c
  3425  01939C  E1FC               	bnz	clear_0
  3426  01939E  50DA               	movf	fsr2h,w,c
  3427  0193A0  E1FA               	bnz	clear_0
  3428                           
  3429                           ; Clear objects allocated to BANK5 (255 bytes)
  3430  0193A2  EE01  F100         	lfsr	0,__pbssBANK5
  3431  0193A6  EE20 F0FF          	lfsr	2,255
  3432  0193AA                     clear_1:
  3433  0193AA  6AEE               	clrf	postinc0,c
  3434  0193AC  50DD               	movf	postdec2,w,c
  3435  0193AE  50D9               	movf	fsr2l,w,c
  3436  0193B0  E1FC               	bnz	clear_1
  3437  0193B2  50DA               	movf	fsr2h,w,c
  3438  0193B4  E1FA               	bnz	clear_1
  3439                           
  3440                           ; Clear objects allocated to BANK4 (134 bytes)
  3441  0193B6  EE01  F000         	lfsr	0,__pbssBANK4
  3442  0193BA  0E86               	movlw	134
  3443  0193BC                     clear_2:
  3444  0193BC  6AEE               	clrf	postinc0,c
  3445  0193BE  06E8               	decf	wreg,f,c
  3446  0193C0  E1FD               	bnz	clear_2
  3447                           
  3448                           ; Clear objects allocated to BANK3 (254 bytes)
  3449  0193C2  EE00  F300         	lfsr	0,__pbssBANK3
  3450  0193C6  0EFE               	movlw	254
  3451  0193C8                     clear_3:
  3452  0193C8  6AEE               	clrf	postinc0,c
  3453  0193CA  06E8               	decf	wreg,f,c
  3454  0193CC  E1FD               	bnz	clear_3
  3455                           
  3456                           ; Clear objects allocated to BANK2 (41 bytes)
  3457  0193CE  EE00  F2BE         	lfsr	0,__pbssBANK2
  3458  0193D2  0E29               	movlw	41
  3459  0193D4                     clear_4:
  3460  0193D4  6AEE               	clrf	postinc0,c
  3461  0193D6  06E8               	decf	wreg,f,c
  3462  0193D8  E1FD               	bnz	clear_4
  3463                           
  3464                           ; Clear objects allocated to BANK1 (8 bytes)
  3465  0193DA  EE00  F1F7         	lfsr	0,__pbssBANK1
  3466  0193DE  0E08               	movlw	8
  3467  0193E0                     clear_5:
  3468  0193E0  6AEE               	clrf	postinc0,c
  3469  0193E2  06E8               	decf	wreg,f,c
  3470  0193E4  E1FD               	bnz	clear_5
  3471                           
  3472                           ; Clear objects allocated to BANK0 (100 bytes)
  3473  0193E6  EE00  F060         	lfsr	0,__pbssBANK0
  3474  0193EA  0E64               	movlw	100
  3475  0193EC                     clear_6:
  3476  0193EC  6AEE               	clrf	postinc0,c
  3477  0193EE  06E8               	decf	wreg,f,c
  3478  0193F0  E1FD               	bnz	clear_6
  3479                           
  3480                           ; Clear objects allocated to COMRAM (24 bytes)
  3481  0193F2  EE00  F048         	lfsr	0,__pbssCOMRAM
  3482  0193F6  0E18               	movlw	24
  3483  0193F8                     clear_7:
  3484  0193F8  6AEE               	clrf	postinc0,c
  3485  0193FA  06E8               	decf	wreg,f,c
  3486  0193FC  E1FD               	bnz	clear_7
  3487                           
  3488                           ;
  3489                           ; Setup IVTBASE
  3490                           ;
  3491  0193FE  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3492  019400  6ED5               	movwf	213,c
  3493  019402  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3494  019404  6ED6               	movwf	214,c
  3495  019406  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3496  019408  6ED7               	movwf	215,c
  3497  01940A                     end_of_initialization:
  3498                           	opt callstack 0
  3499  01940A                     __end_of__initialization:
  3500                           	opt callstack 0
  3501  01940A  0100               	movlb	0
  3502  01940C  EF22  F089         	goto	_main	;jump to C main() function
  3503                           
  3504                           	psect	bssCOMRAM
  3505  000048                     __pbssCOMRAM:
  3506                           	opt callstack 0
  3507  000048                     _width:
  3508                           	opt callstack 0
  3509  000048                     	ds	2
  3510  00004A                     _prec:
  3511                           	opt callstack 0
  3512  00004A                     	ds	2
  3513  00004C                     _flags:
  3514                           	opt callstack 0
  3515  00004C                     	ds	2
  3516  00004E                     _timer3ReloadVal:
  3517                           	opt callstack 0
  3518  00004E                     	ds	2
  3519  000050                     TMR5_ISR@CountCallBack:
  3520                           	opt callstack 0
  3521  000050                     	ds	2
  3522  000052                     _timer5ReloadVal:
  3523                           	opt callstack 0
  3524  000052                     	ds	2
  3525  000054                     esr_check@esr_state:
  3526                           	opt callstack 0
  3527  000054                     	ds	1
  3528  000055                     Volts_to_SOC@slot:
  3529                           	opt callstack 0
  3530  000055                     	ds	1
  3531  000056                     _mode_sw:
  3532                           	opt callstack 0
  3533  000056                     	ds	1
  3534  000057                     _uart2RxCount:
  3535                           	opt callstack 0
  3536  000057                     	ds	1
  3537  000058                     _uart2RxTail:
  3538                           	opt callstack 0
  3539  000058                     	ds	1
  3540  000059                     _uart2RxHead:
  3541                           	opt callstack 0
  3542  000059                     	ds	1
  3543  00005A                     _uart2TxBufferRemaining:
  3544                           	opt callstack 0
  3545  00005A                     	ds	1
  3546  00005B                     _uart2TxTail:
  3547                           	opt callstack 0
  3548  00005B                     	ds	1
  3549  00005C                     _uart2TxHead:
  3550                           	opt callstack 0
  3551  00005C                     	ds	1
  3552  00005D                     _uart1RxCount:
  3553                           	opt callstack 0
  3554  00005D                     	ds	1
  3555  00005E                     _uart1RxTail:
  3556                           	opt callstack 0
  3557  00005E                     	ds	1
  3558  00005F                     _uart1RxHead:
  3559                           	opt callstack 0
  3560  00005F                     	ds	1
  3561                           
  3562                           	psect	bssBANK0
  3563  000060                     __pbssBANK0:
  3564                           	opt callstack 0
  3565  000060                     _spi_link:
  3566                           	opt callstack 0
  3567  000060                     	ds	12
  3568  00006C                     _uart1RxBuffer:
  3569                           	opt callstack 0
  3570  00006C                     	ds	8
  3571  000074                     spinners@s:
  3572                           	opt callstack 0
  3573  000074                     	ds	6
  3574  00007A                     floorf@F524:
  3575                           	opt callstack 0
  3576  00007A                     	ds	4
  3577  00007E                     fabsf@F463:
  3578                           	opt callstack 0
  3579  00007E                     	ds	4
  3580  000082                     ___fpclassifyf@F463:
  3581                           	opt callstack 0
  3582  000082                     	ds	4
  3583  000086                     calc_ror_data@bcror:
  3584                           	opt callstack 0
  3585  000086                     	ds	4
  3586  00008A                     calc_ror_data@bvror:
  3587                           	opt callstack 0
  3588  00008A                     	ds	4
  3589  00008E                     calc_model_data@bcror:
  3590                           	opt callstack 0
  3591  00008E                     	ds	4
  3592  000092                     calc_model_data@bvror:
  3593                           	opt callstack 0
  3594  000092                     	ds	4
  3595  000096                     _utctime:
  3596                           	opt callstack 0
  3597  000096                     	ds	4
  3598  00009A                     wdtdelay@dcount:
  3599                           	opt callstack 0
  3600  00009A                     	ds	4
  3601  00009E                     _P:
  3602                           	opt callstack 0
  3603  00009E                     	ds	4
  3604  0000A2                     _TMR3_InterruptHandler:
  3605                           	opt callstack 0
  3606  0000A2                     	ds	3
  3607  0000A5                     _TMR5_InterruptHandler:
  3608                           	opt callstack 0
  3609  0000A5                     	ds	3
  3610  0000A8                     _TMR6_InterruptHandler:
  3611                           	opt callstack 0
  3612  0000A8                     	ds	3
  3613  0000AB                     _ADCC_ADTI_InterruptHandler:
  3614                           	opt callstack 0
  3615  0000AB                     	ds	3
  3616  0000AE                     _ADCC_ADI_InterruptHandler:
  3617                           	opt callstack 0
  3618  0000AE                     	ds	3
  3619  0000B1                     _UART1_RxInterruptHandler:
  3620                           	opt callstack 0
  3621  0000B1                     	ds	3
  3622  0000B4                     _UART2_TxInterruptHandler:
  3623                           	opt callstack 0
  3624  0000B4                     	ds	3
  3625  0000B7                     _UART2_RxInterruptHandler:
  3626                           	opt callstack 0
  3627  0000B7                     	ds	3
  3628  0000BA                     _INT1_InterruptHandler:
  3629                           	opt callstack 0
  3630  0000BA                     	ds	3
  3631  0000BD                     _INT0_InterruptHandler:
  3632                           	opt callstack 0
  3633  0000BD                     	ds	3
  3634  0000C0                     _nout:
  3635                           	opt callstack 0
  3636  0000C0                     	ds	2
  3637  0000C2                     TMR3_ISR@CountCallBack:
  3638                           	opt callstack 0
  3639  0000C2                     	ds	2
  3640                           
  3641                           	psect	dataBANK0
  3642  0000C4                     __pdataBANK0:
  3643                           	opt callstack 0
  3644  0000C4                     _R:
  3645                           	opt callstack 0
  3646  0000C4                     	ds	40
  3647  0000EC                     stoa@F1166:
  3648                           	opt callstack 0
  3649  0000EC                     	ds	7
  3650  0000F3                     _H:
  3651                           	opt callstack 0
  3652  0000F3                     	ds	7
  3653                           
  3654                           	psect	bssBANK1
  3655  0001F7                     __pbssBANK1:
  3656                           	opt callstack 0
  3657  0001F7                     _seed:
  3658                           	opt callstack 0
  3659  0001F7                     	ds	8
  3660                           
  3661                           	psect	dataBANK1
  3662  000100                     __pdataBANK1:
  3663                           	opt callstack 0
  3664  000100                     _C:
  3665                           	opt callstack 0
  3666  000100                     	ds	247
  3667                           
  3668                           	psect	bssBANK2
  3669  0002BE                     __pbssBANK2:
  3670                           	opt callstack 0
  3671  0002BE                     _S:
  3672                           	opt callstack 0
  3673  0002BE                     	ds	41
  3674                           
  3675                           	psect	dataBANK2
  3676  000200                     __pdataBANK2:
  3677                           	opt callstack 0
  3678  000200                     _V:
  3679                           	opt callstack 0
  3680  000200                     	ds	190
  3681                           
  3682                           	psect	bssBANK3
  3683  000300                     __pbssBANK3:
  3684                           	opt callstack 0
  3685  000300                     lp_filter@smooth:
  3686                           	opt callstack 0
  3687  000300                     	ds	84
  3688  000354                     _uart2TxBuffer:
  3689                           	opt callstack 0
  3690  000354                     	ds	64
  3691  000394                     _tickCount:
  3692                           	opt callstack 0
  3693  000394                     	ds	26
  3694  0003AE                     _dbuf:
  3695                           	opt callstack 0
  3696  0003AE                     	ds	80
  3697                           
  3698                           	psect	bssBANK4
  3699  000400                     __pbssBANK4:
  3700                           	opt callstack 0
  3701  000400                     _ring_buf2:
  3702                           	opt callstack 0
  3703  000400                     	ds	67
  3704  000443                     _ring_buf1:
  3705                           	opt callstack 0
  3706  000443                     	ds	67
  3707                           
  3708                           	psect	bssBANK5
  3709  000500                     __pbssBANK5:
  3710                           	opt callstack 0
  3711  000500                     _uart2RxBuffer:
  3712                           	opt callstack 0
  3713  000500                     	ds	255
  3714                           
  3715                           	psect	bssBIGRAM
  3716  0007FF                     __pbssBIGRAM:
  3717                           	opt callstack 0
  3718  0007FF                     _D:
  3719                           	opt callstack 0
  3720  0007FF                     	ds	482
  3721                           
  3722                           	psect	dataBIGRAM
  3723  0005FF                     __pdataBIGRAM:
  3724                           	opt callstack 0
  3725  0005FF                     _port_data:
  3726                           	opt callstack 0
  3727  0005FF                     	ds	512
  3728                           
  3729                           	psect	cstackCOMRAM
  3730  000001                     __pcstackCOMRAM:
  3731                           	opt callstack 0
  3732  000001                     ??_ADCC_ThresholdISR:
  3733  000001                     
  3734                           ; 1 bytes @ 0x0
  3735  000001                     	ds	5
  3736  000006                     ??_TMR6_ISR:
  3737                           
  3738                           ; 1 bytes @ 0x5
  3739  000006                     	ds	1
  3740  000007                     ??_INT1_ISR:
  3741  000007                     
  3742                           ; 1 bytes @ 0x6
  3743  000007                     	ds	4
  3744  00000B                     ??_TMR5_ISR:
  3745                           
  3746                           ; 1 bytes @ 0xA
  3747  00000B                     	ds	4
  3748  00000F                     ??_TMR3_ISR:
  3749                           
  3750                           ; 1 bytes @ 0xE
  3751  00000F                     	ds	25
  3752                           
  3753 ;;
  3754 ;;Main: autosize = 13, tempsize = 0, incstack = 0, save=0
  3755 ;;
  3756 ;; *************** function _main *****************
  3757 ;; Defined at:
  3758 ;;		line 175 in file "main.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;  esr_temp        4  [STACK] float 
  3763 ;;  i_esr           2  [STACK] unsigned short 
  3764 ;;  shape           1  [STACK] unsigned char 
  3765 ;;  k               1  [STACK] unsigned char 
  3766 ;;  j               1  [STACK] unsigned char 
  3767 ;;  i               1  [STACK] unsigned char 
  3768 ;;  inp_index       1  [STACK] unsigned char 
  3769 ;;  mode            1  [STACK] enum E17013
  3770 ;;  i_ror           1  [STACK] unsigned char 
  3771 ;; Return value:  Size  Location     Type
  3772 ;;                  1  [STACK] void 
  3773 ;; Registers used:
  3774 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3775 ;; Tracked objects:
  3776 ;;		On entry : 0/0
  3777 ;;		On exit  : 0/0
  3778 ;;		Unchanged: 0/0
  3779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3780 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3781 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3782 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3783 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3784 ;;Total ram usage:        0 bytes
  3785 ;; Hardware stack levels required when called:   28
  3786 ;; This function calls:
  3787 ;;		_SYSTEM_Initialize
  3788 ;;		_StartTimer
  3789 ;;		_TimerDone
  3790 ;;		_WaitMs
  3791 ;;		___fladd
  3792 ;;		___flge
  3793 ;;		___fltol
  3794 ;;		_calc_model_data
  3795 ;;		_calc_ror_data
  3796 ;;		_check_adc_scan
  3797 ;;		_check_enter_button
  3798 ;;		_check_help
  3799 ;;		_clear_adc_scan
  3800 ;;		_clear_hid_pflags
  3801 ;;		_conv_raw_result
  3802 ;;		_convert_adc_data
  3803 ;;		_eaDogM_WriteCommand
  3804 ;;		_esr_check
  3805 ;;		_fabsf
  3806 ;;		_get_raw_result
  3807 ;;		_get_switch
  3808 ;;		_get_vterm_ptr
  3809 ;;		_hid_display
  3810 ;;		_init_bsoc
  3811 ;;		_init_display
  3812 ;;		_init_port_dma
  3813 ;;		_lp_filter
  3814 ;;		_mode_lamp_dim
  3815 ;;		_set_display_info
  3816 ;;		_set_load_relay_one
  3817 ;;		_set_load_relay_two
  3818 ;;		_set_vterm
  3819 ;;		_spinners
  3820 ;;		_sprintf
  3821 ;;		_srand
  3822 ;;		_start_adc_scan
  3823 ;;		_start_switch_handler
  3824 ;;		_static_soc
  3825 ;;		_update_lcd
  3826 ;; This function is called by:
  3827 ;;		Startup code after reset
  3828 ;; This function uses a reentrant model
  3829 ;;
  3830                           
  3831                           	psect	text0
  3832  011244                     __ptext0:
  3833                           	opt callstack 0
  3834  011244                     _main:
  3835                           	opt callstack 0
  3836                           
  3837                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3838  011244  0E0D               	movlw	13
  3839  011246  26E1               	addwf	fsr1l,f,c
  3840  011248  0E00               	movlw	0
  3841  01124A  22E2               	addwfc	fsr1h,f,c
  3842                           
  3843                           ;main.c: 177:  UI_STATES mode;;main.c: 178:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3844                           ;stkvar	_inp_index @ sp[(-13)+10]
  3845                           
  3846                           ;incstack = 0
  3847  01124C  0EFD               	movlw	-3
  3848  01124E  6AE3               	clrf	plusw1,c
  3849                           
  3850                           ;stkvar	_i @ sp[(-13)+9]
  3851  011250  0EFC               	movlw	-4
  3852  011252  6AE3               	clrf	plusw1,c
  3853                           
  3854                           ;stkvar	_j @ sp[(-13)+8]
  3855  011254  0EFB               	movlw	-5
  3856  011256  6AE3               	clrf	plusw1,c
  3857  011258  2AE3               	incf	plusw1,f,c
  3858                           
  3859                           ;stkvar	_k @ sp[(-13)+7]
  3860  01125A  0EFA               	movlw	-6
  3861  01125C  6AE3               	clrf	plusw1,c
  3862  01125E  82E3               	bsf	plusw1,1,c
  3863                           
  3864                           ;main.c: 181:  SYSTEM_Initialize();
  3865  011260  ECD5  F0D4         	call	_SYSTEM_Initialize	;wreg free
  3866                           
  3867                           ; BSR set to: 60
  3868                           ;main.c: 184:  (INTCON0bits.GIEH = 1);
  3869  011264  8ED2               	bsf	210,7,c	;volatile
  3870                           
  3871                           ; BSR set to: 60
  3872                           ;main.c: 187:  (INTCON0bits.GIEL = 1);
  3873  011266  8CD2               	bsf	210,6,c	;volatile
  3874                           
  3875                           ; BSR set to: 60
  3876                           ;main.c: 189:  V.ui_state = UI_STATE_INIT;
  3877  011268  0102               	movlb	2	; () banked
  3878  01126A  6B00               	clrf	_V& (0+255),b	;volatile
  3879                           
  3880                           ; BSR set to: 2
  3881                           ;main.c: 194:  WaitMs(300);
  3882  01126C  0E2C               	movlw	44
  3883  01126E  6EE6               	movwf	postinc1,c
  3884  011270  0E01               	movlw	1
  3885  011272  6EE6               	movwf	postinc1,c
  3886  011274  EC03  F0D7         	call	_WaitMs	;wreg free
  3887                           
  3888                           ;main.c: 195:  if (PORTBbits.RB0) {
  3889  011278  A0CB               	btfss	203,0,c	;volatile
  3890  01127A  D004               	goto	l12578
  3891                           
  3892                           ;main.c: 196:   mode = UI_STATE_HOST;
  3893                           ;stkvar	_mode @ sp[(-13)+11]
  3894  01127C  0EFE               	movlw	-2
  3895  01127E  6AE3               	clrf	plusw1,c
  3896  011280  2AE3               	incf	plusw1,f,c
  3897                           
  3898                           ;main.c: 197:  } else {
  3899  011282  D004               	goto	l12580
  3900  011284                     l12578:
  3901                           
  3902                           ;main.c: 198:   mode = UI_STATE_LOG;
  3903                           ;stkvar	_mode @ sp[(-13)+11]
  3904  011284  0EFE               	movlw	-2
  3905  011286  6AE3               	clrf	plusw1,c
  3906  011288  80E3               	bsf	plusw1,0,c
  3907  01128A  82E3               	bsf	plusw1,1,c	;indir
  3908  01128C                     l12580:
  3909                           
  3910                           ;main.c: 201:  if (mode == UI_STATE_HOST) {
  3911                           ;stkvar	_mode @ sp[(-13)+11]
  3912  01128C  0EFE               	movlw	-2
  3913  01128E  04E3               	decf	plusw1,w,c
  3914  011290  A4D8               	btfss	status,2,c
  3915  011292  D007               	goto	l1322
  3916                           
  3917                           ;main.c: 202:   do { LATDbits.LATD0 = 1; } while(0);
  3918  011294  80BD               	bsf	189,0,c	;volatile
  3919                           
  3920                           ;main.c: 203:   V.mode_pwm = 70;
  3921  011296  0E00               	movlw	0
  3922  011298  0102               	movlb	2	; () banked
  3923  01129A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3924  01129C  0E46               	movlw	70
  3925  01129E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3926                           
  3927                           ;main.c: 204:  } else {
  3928  0112A0  D004               	goto	l12584
  3929  0112A2                     l1322:
  3930  0112A2  90BD               	bcf	189,0,c	;volatile
  3931                           
  3932                           ;main.c: 206:   V.mode_pwm = 0;
  3933  0112A4  0102               	movlb	2	; () banked
  3934  0112A6  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3935  0112A8  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3936  0112AA                     l12584:
  3937                           
  3938                           ; BSR set to: 2
  3939                           ;main.c: 208:  mode_lamp_dim(V.mode_pwm);
  3940  0112AA  0060  FA57  FFE6   	movff	_V+149,postinc1
  3941  0112B0  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3942  0112B6  ECCB  F0DA         	call	_mode_lamp_dim	;wreg free
  3943  0112BA  D311               	goto	l12704
  3944  0112BC                     l12586:
  3945                           
  3946                           ; BSR set to: 2
  3947                           ;main.c: 216:    init_port_dma();
  3948  0112BC  EC87  F0D7         	call	_init_port_dma	;wreg free
  3949                           
  3950                           ; BSR set to: 59
  3951                           ;main.c: 218:    init_display();
  3952  0112C0  EC8A  F0CB         	call	_init_display	;wreg free
  3953                           
  3954                           ; BSR set to: 61
  3955                           ;main.c: 219:    eaDogM_WriteCommand(0b00001100);
  3956  0112C4  0E0C               	movlw	12
  3957  0112C6  6EE6               	movwf	postinc1,c
  3958  0112C8  EC2F  F0DB         	call	_eaDogM_WriteCommand	;wreg free
  3959                           
  3960                           ; BSR set to: 0
  3961                           ;main.c: 223:    set_load_relay_one(1);
  3962  0112CC  0E01               	movlw	1
  3963  0112CE  6EE6               	movwf	postinc1,c
  3964  0112D0  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  3965                           
  3966                           ;main.c: 224:    set_load_relay_two(1);
  3967  0112D4  0E01               	movlw	1
  3968  0112D6  6EE6               	movwf	postinc1,c
  3969  0112D8  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  3970                           
  3971                           ;main.c: 226:    V.ui_state = mode;
  3972                           ;stkvar	_mode @ sp[(-13)+11]
  3973  0112DC  0EFE               	movlw	-2
  3974  0112DE  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3975                           
  3976                           ;main.c: 227:    srand(1957);
  3977  0112E4  0EA5               	movlw	165
  3978  0112E6  6EE6               	movwf	postinc1,c
  3979  0112E8  0E07               	movlw	7
  3980  0112EA  6EE6               	movwf	postinc1,c
  3981  0112EC  EC39  F0D7         	call	_srand	;wreg free
  3982                           
  3983                           ; BSR set to: 1
  3984                           ;main.c: 228:    set_vterm(0);
  3985  0112F0  0E00               	movlw	0
  3986  0112F2  6EE6               	movwf	postinc1,c
  3987  0112F4  EC58  F0DA         	call	_set_vterm	;wreg free
  3988                           
  3989                           ;main.c: 229:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3990  0112F8  0E50               	movlw	low STR_1
  3991  0112FA  6EE6               	movwf	postinc1,c
  3992  0112FC  0EFF               	movlw	high STR_1
  3993  0112FE  6EE6               	movwf	postinc1,c
  3994  011300  0E00               	movlw	0
  3995  011302  6EE6               	movwf	postinc1,c
  3996  011304  0E00               	movlw	0
  3997  011306  6EE6               	movwf	postinc1,c
  3998  011308  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  3999  01130C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4000  011312  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4001  011318  0E04               	movlw	4
  4002  01131A  6EE6               	movwf	postinc1,c
  4003  01131C  EC08  F0CA         	call	_sprintf	;wreg free
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;main.c: 230:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.006");
  4007  011320  0ED0               	movlw	low STR_3
  4008  011322  6EE6               	movwf	postinc1,c
  4009  011324  0EFF               	movlw	high STR_3
  4010  011326  6EE6               	movwf	postinc1,c
  4011  011328  0EA2               	movlw	low STR_2
  4012  01132A  6EE6               	movwf	postinc1,c
  4013  01132C  0EFF               	movlw	high STR_2
  4014  01132E  6EE6               	movwf	postinc1,c
  4015  011330  0E00               	movlw	0
  4016  011332  6EE6               	movwf	postinc1,c
  4017  011334  0E01               	movlw	1
  4018  011336  6EE6               	movwf	postinc1,c
  4019  011338  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4020  01133C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4021  011342  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4022  011348  0E06               	movlw	6
  4023  01134A  6EE6               	movwf	postinc1,c
  4024  01134C  EC08  F0CA         	call	_sprintf	;wreg free
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;main.c: 231:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4028  011350  0E1D               	movlw	low STR_4
  4029  011352  6EE6               	movwf	postinc1,c
  4030  011354  0EFF               	movlw	high STR_4
  4031  011356  6EE6               	movwf	postinc1,c
  4032  011358  0E00               	movlw	0
  4033  01135A  6EE6               	movwf	postinc1,c
  4034  01135C  0E02               	movlw	2
  4035  01135E  6EE6               	movwf	postinc1,c
  4036  011360  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4037  011364  0060  F0A3  FFE6   	movff	btemp,postinc1
  4038  01136A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4039  011370  0E04               	movlw	4
  4040  011372  6EE6               	movwf	postinc1,c
  4041  011374  EC08  F0CA         	call	_sprintf	;wreg free
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;main.c: 232:    sprintf(get_vterm_ptr(0, 2), "                ");
  4045  011378  0EF0               	movlw	low (STR_58+2)
  4046  01137A  6EE6               	movwf	postinc1,c
  4047  01137C  0EFD               	movlw	high (STR_58+2)
  4048  01137E  6EE6               	movwf	postinc1,c
  4049  011380  0E02               	movlw	2
  4050  011382  6EE6               	movwf	postinc1,c
  4051  011384  0E00               	movlw	0
  4052  011386  6EE6               	movwf	postinc1,c
  4053  011388  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4054  01138C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4055  011392  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4056  011398  0E04               	movlw	4
  4057  01139A  6EE6               	movwf	postinc1,c
  4058  01139C  EC08  F0CA         	call	_sprintf	;wreg free
  4059                           
  4060                           ; BSR set to: 0
  4061                           ;main.c: 233:    sprintf(get_vterm_ptr(1, 2), "                ");
  4062  0113A0  0EF0               	movlw	low (STR_58+2)
  4063  0113A2  6EE6               	movwf	postinc1,c
  4064  0113A4  0EFD               	movlw	high (STR_58+2)
  4065  0113A6  6EE6               	movwf	postinc1,c
  4066  0113A8  0E02               	movlw	2
  4067  0113AA  6EE6               	movwf	postinc1,c
  4068  0113AC  0E01               	movlw	1
  4069  0113AE  6EE6               	movwf	postinc1,c
  4070  0113B0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4071  0113B4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4072  0113BA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4073  0113C0  0E04               	movlw	4
  4074  0113C2  6EE6               	movwf	postinc1,c
  4075  0113C4  EC08  F0CA         	call	_sprintf	;wreg free
  4076                           
  4077                           ; BSR set to: 0
  4078                           ;main.c: 234:    sprintf(get_vterm_ptr(2, 2), "                ");
  4079  0113C8  0EF0               	movlw	low (STR_58+2)
  4080  0113CA  6EE6               	movwf	postinc1,c
  4081  0113CC  0EFD               	movlw	high (STR_58+2)
  4082  0113CE  6EE6               	movwf	postinc1,c
  4083  0113D0  0E02               	movlw	2
  4084  0113D2  6EE6               	movwf	postinc1,c
  4085  0113D4  0E02               	movlw	2
  4086  0113D6  6EE6               	movwf	postinc1,c
  4087  0113D8  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4088  0113DC  0060  F0A3  FFE6   	movff	btemp,postinc1
  4089  0113E2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4090  0113E8  0E04               	movlw	4
  4091  0113EA  6EE6               	movwf	postinc1,c
  4092  0113EC  EC08  F0CA         	call	_sprintf	;wreg free
  4093                           
  4094                           ; BSR set to: 0
  4095                           ;main.c: 235:    update_lcd(0);
  4096  0113F0  0E00               	movlw	0
  4097  0113F2  6EE6               	movwf	postinc1,c
  4098  0113F4  ECF9  F0C8         	call	_update_lcd	;wreg free
  4099                           
  4100                           ;main.c: 236:    WaitMs(1000);
  4101  0113F8  0EE8               	movlw	232
  4102  0113FA  6EE6               	movwf	postinc1,c
  4103  0113FC  0E03               	movlw	3
  4104  0113FE  6EE6               	movwf	postinc1,c
  4105  011400  EC03  F0D7         	call	_WaitMs	;wreg free
  4106                           
  4107                           ;main.c: 237:    StartTimer(TMR_DISPLAY, 250);
  4108  011404  0EFA               	movlw	250
  4109  011406  6EE6               	movwf	postinc1,c
  4110  011408  0E00               	movlw	0
  4111  01140A  6EE6               	movwf	postinc1,c
  4112  01140C  0E0A               	movlw	10
  4113  01140E  6EE6               	movwf	postinc1,c
  4114  011410  EC10  F0D6         	call	_StartTimer	;wreg free
  4115                           
  4116                           ;main.c: 238:    StartTimer(TMR_ADC, 200);
  4117  011414  0EC8               	movlw	200
  4118  011416  6EE6               	movwf	postinc1,c
  4119  011418  0E00               	movlw	0
  4120  01141A  6EE6               	movwf	postinc1,c
  4121  01141C  0E01               	movlw	1
  4122  01141E  6EE6               	movwf	postinc1,c
  4123  011420  EC10  F0D6         	call	_StartTimer	;wreg free
  4124                           
  4125                           ;main.c: 239:    StartTimer(TMR_INFO, 3000);
  4126  011424  0EB8               	movlw	184
  4127  011426  6EE6               	movwf	postinc1,c
  4128  011428  0E0B               	movlw	11
  4129  01142A  6EE6               	movwf	postinc1,c
  4130  01142C  0E07               	movlw	7
  4131  01142E  6EE6               	movwf	postinc1,c
  4132  011430  EC10  F0D6         	call	_StartTimer	;wreg free
  4133                           
  4134                           ;main.c: 240:    StartTimer(TMR_FLIPPER, 1500);
  4135  011434  0EDC               	movlw	220
  4136  011436  6EE6               	movwf	postinc1,c
  4137  011438  0E05               	movlw	5
  4138  01143A  6EE6               	movwf	postinc1,c
  4139  01143C  0E0B               	movlw	11
  4140  01143E  6EE6               	movwf	postinc1,c
  4141  011440  EC10  F0D6         	call	_StartTimer	;wreg free
  4142                           
  4143                           ;main.c: 241:    StartTimer(TMR_HELPDIS, 3000);
  4144  011444  0EB8               	movlw	184
  4145  011446  6EE6               	movwf	postinc1,c
  4146  011448  0E0B               	movlw	11
  4147  01144A  6EE6               	movwf	postinc1,c
  4148  01144C  0E09               	movlw	9
  4149  01144E  6EE6               	movwf	postinc1,c
  4150  011450  EC10  F0D6         	call	_StartTimer	;wreg free
  4151                           
  4152                           ;main.c: 243:    start_adc_scan();
  4153  011454  ECE8  F0D2         	call	_start_adc_scan	;wreg free
  4154                           
  4155                           ;main.c: 244:    start_switch_handler();
  4156  011458  EC39  F0DA         	call	_start_switch_handler	;wreg free
  4157                           
  4158                           ; BSR set to: 57
  4159                           ;main.c: 245:    WaitMs(1000);
  4160  01145C  0EE8               	movlw	232
  4161  01145E  6EE6               	movwf	postinc1,c
  4162  011460  0E03               	movlw	3
  4163  011462  6EE6               	movwf	postinc1,c
  4164  011464  EC03  F0D7         	call	_WaitMs	;wreg free
  4165                           
  4166                           ;main.c: 250:    i_ror = 1;
  4167                           ;stkvar	_i_ror @ sp[(-13)+12]
  4168  011468  0EFF               	movlw	-1
  4169  01146A  6AE3               	clrf	plusw1,c
  4170  01146C  2AE3               	incf	plusw1,f,c
  4171  01146E                     l12636:
  4172                           
  4173                           ;main.c: 252:     calc_ror_data();
  4174  01146E  EC45  F0C1         	call	_calc_ror_data	;wreg free
  4175                           
  4176                           ;main.c: 253:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4177  011472  0E00               	movlw	0
  4178  011474  6EE6               	movwf	postinc1,c
  4179  011476  0E04               	movlw	4
  4180  011478  6EE6               	movwf	postinc1,c
  4181  01147A  EC58  F0A7         	call	_conv_raw_result	;wreg free
  4182  01147E  0060  F0A3  FFE6   	movff	btemp,postinc1
  4183  011484  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4184  01148A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  4185  011490  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  4186  011496  0E0B               	movlw	low STR_8
  4187  011498  6EE6               	movwf	postinc1,c
  4188  01149A  0EFF               	movlw	high STR_8
  4189  01149C  6EE6               	movwf	postinc1,c
  4190  01149E  0E00               	movlw	0
  4191  0114A0  6EE6               	movwf	postinc1,c
  4192  0114A2  0E01               	movlw	1
  4193  0114A4  6EE6               	movwf	postinc1,c
  4194  0114A6  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4195  0114AA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4196  0114B0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4197  0114B6  0E08               	movlw	8
  4198  0114B8  6EE6               	movwf	postinc1,c
  4199  0114BA  EC08  F0CA         	call	_sprintf	;wreg free
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;main.c: 254:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4203  0114BE  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4204  0114C4  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4205  0114CA  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4206  0114D0  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4207                           
  4208                           ;stkvar	_i_ror @ sp[(-17)+12]
  4209  0114D6  0EFB               	movlw	-5
  4210  0114D8  50E3               	movf	plusw1,w,c
  4211  0114DA  6EE6               	movwf	postinc1,c
  4212  0114DC  0E00               	movlw	0
  4213  0114DE  6EE6               	movwf	postinc1,c
  4214  0114E0  0E00               	movlw	0
  4215  0114E2  6EE6               	movwf	postinc1,c
  4216  0114E4  0E05               	movlw	5
  4217  0114E6  6EE6               	movwf	postinc1,c
  4218  0114E8  ECFF  F0CB         	call	_spinners	;wreg free
  4219  0114EC  5028               	movf	btemp^0,w,c
  4220  0114EE  6EE6               	movwf	postinc1,c
  4221  0114F0  0E00               	movlw	0
  4222  0114F2  6EE6               	movwf	postinc1,c
  4223  0114F4  0E08               	movlw	low STR_9
  4224  0114F6  6EE6               	movwf	postinc1,c
  4225  0114F8  0EFD               	movlw	high STR_9
  4226  0114FA  6EE6               	movwf	postinc1,c
  4227  0114FC  0E00               	movlw	0
  4228  0114FE  6EE6               	movwf	postinc1,c
  4229  011500  0E02               	movlw	2
  4230  011502  6EE6               	movwf	postinc1,c
  4231  011504  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4232  011508  0060  F0A3  FFE6   	movff	btemp,postinc1
  4233  01150E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4234  011514  0E0C               	movlw	12
  4235  011516  6EE6               	movwf	postinc1,c
  4236  011518  EC08  F0CA         	call	_sprintf	;wreg free
  4237                           
  4238                           ; BSR set to: 0
  4239                           ;main.c: 255:     update_lcd(0);
  4240  01151C  0E00               	movlw	0
  4241  01151E  6EE6               	movwf	postinc1,c
  4242  011520  ECF9  F0C8         	call	_update_lcd	;wreg free
  4243                           
  4244                           ;main.c: 256:     WaitMs(2000);
  4245  011524  0ED0               	movlw	208
  4246  011526  6EE6               	movwf	postinc1,c
  4247  011528  0E07               	movlw	7
  4248  01152A  6EE6               	movwf	postinc1,c
  4249  01152C  EC03  F0D7         	call	_WaitMs	;wreg free
  4250                           
  4251                           ;main.c: 257:     clear_adc_scan();
  4252  011530  EC7D  F0DB         	call	_clear_adc_scan	;wreg free
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;main.c: 258:     start_adc_scan();
  4256  011534  ECE8  F0D2         	call	_start_adc_scan	;wreg free
  4257                           
  4258                           ;main.c: 259:     WaitMs(500);
  4259  011538  0EF4               	movlw	244
  4260  01153A  6EE6               	movwf	postinc1,c
  4261  01153C  0E01               	movlw	1
  4262  01153E  6EE6               	movwf	postinc1,c
  4263  011540  EC03  F0D7         	call	_WaitMs	;wreg free
  4264                           
  4265                           ;main.c: 260:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4266                           ;stkvar	_i_ror @ sp[(-13)+12]
  4267  011544  0EFF               	movlw	-1
  4268  011546  006F FF8C  F033    	movff	plusw1,btemp+11
  4269  01154C  2A33               	incf	(btemp+11)^0,f,c
  4270  01154E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4271  011554  0633               	decf	(btemp+11)^0,f,c
  4272  011556  0E1E               	movlw	30
  4273  011558  6033               	cpfslt	(btemp+11)^0,c
  4274  01155A  D018               	goto	u12090
  4275  01155C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4276  011562  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4277  011568  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4278  01156E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4279  011574  0E42               	movlw	66
  4280  011576  6EE6               	movwf	postinc1,c
  4281  011578  0E60               	movlw	96
  4282  01157A  6EE6               	movwf	postinc1,c
  4283  01157C  0E65               	movlw	101
  4284  01157E  6EE6               	movwf	postinc1,c
  4285  011580  0E3C               	movlw	60
  4286  011582  6EE6               	movwf	postinc1,c
  4287  011584  EC70  F0C3         	call	___flge	;wreg free
  4288  011588  A028               	btfss	btemp& (0+255),0,c
  4289  01158A  D771               	goto	l12636
  4290  01158C                     u12090:
  4291                           
  4292                           ;main.c: 262:    static_soc();
  4293  01158C  ECAA  F0D9         	call	_static_soc	;wreg free
  4294                           
  4295                           ; BSR set to: 1
  4296                           ;main.c: 263:    init_bsoc();
  4297  011590  ECB8  F0C2         	call	_init_bsoc	;wreg free
  4298                           
  4299                           ;main.c: 264:    set_load_relay_one(0);
  4300  011594  0E00               	movlw	0
  4301  011596  6EE6               	movwf	postinc1,c
  4302  011598  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  4303                           
  4304                           ;main.c: 265:    set_load_relay_two(0);
  4305  01159C  0E00               	movlw	0
  4306  01159E  6EE6               	movwf	postinc1,c
  4307  0115A0  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  4308                           
  4309                           ;main.c: 266:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4310  0115A4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  4311  0115AA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  4312  0115B0  0E35               	movlw	low STR_10
  4313  0115B2  6EE6               	movwf	postinc1,c
  4314  0115B4  0EFD               	movlw	high STR_10
  4315  0115B6  6EE6               	movwf	postinc1,c
  4316  0115B8  0E00               	movlw	0
  4317  0115BA  6EE6               	movwf	postinc1,c
  4318  0115BC  0E00               	movlw	0
  4319  0115BE  6EE6               	movwf	postinc1,c
  4320  0115C0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4321  0115C4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4322  0115CA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4323  0115D0  0E06               	movlw	6
  4324  0115D2  6EE6               	movwf	postinc1,c
  4325  0115D4  EC08  F0CA         	call	_sprintf	;wreg free
  4326                           
  4327                           ; BSR set to: 0
  4328                           ;main.c: 267:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4329  0115D8  0060  F633  FFE6   	movff	_C+140,postinc1
  4330  0115DE  0060  F637  FFE6   	movff	_C+141,postinc1
  4331  0115E4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4332  0115EA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4333  0115F0  0E4B               	movlw	low STR_11
  4334  0115F2  6EE6               	movwf	postinc1,c
  4335  0115F4  0EFD               	movlw	high STR_11
  4336  0115F6  6EE6               	movwf	postinc1,c
  4337  0115F8  0E00               	movlw	0
  4338  0115FA  6EE6               	movwf	postinc1,c
  4339  0115FC  0E01               	movlw	1
  4340  0115FE  6EE6               	movwf	postinc1,c
  4341  011600  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4342  011604  0060  F0A3  FFE6   	movff	btemp,postinc1
  4343  01160A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4344  011610  0E08               	movlw	8
  4345  011612  6EE6               	movwf	postinc1,c
  4346  011614  EC08  F0CA         	call	_sprintf	;wreg free
  4347                           
  4348                           ; BSR set to: 0
  4349                           ;main.c: 268:    update_lcd(0);
  4350  011618  0E00               	movlw	0
  4351  01161A  6EE6               	movwf	postinc1,c
  4352  01161C  ECF9  F0C8         	call	_update_lcd	;wreg free
  4353                           
  4354                           ;main.c: 269:    WaitMs(2000);
  4355  011620  0ED0               	movlw	208
  4356  011622  6EE6               	movwf	postinc1,c
  4357  011624  0E07               	movlw	7
  4358  011626  6EE6               	movwf	postinc1,c
  4359  011628  EC03  F0D7         	call	_WaitMs	;wreg free
  4360                           
  4361                           ;main.c: 270:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4362  01162C  0E2E               	movlw	low STR_12
  4363  01162E  6EE6               	movwf	postinc1,c
  4364  011630  0EFF               	movlw	high STR_12
  4365  011632  6EE6               	movwf	postinc1,c
  4366  011634  0E00               	movlw	0
  4367  011636  6EE6               	movwf	postinc1,c
  4368  011638  0E00               	movlw	0
  4369  01163A  6EE6               	movwf	postinc1,c
  4370  01163C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4371  011640  0060  F0A3  FFE6   	movff	btemp,postinc1
  4372  011646  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4373  01164C  0E04               	movlw	4
  4374  01164E  6EE6               	movwf	postinc1,c
  4375  011650  EC08  F0CA         	call	_sprintf	;wreg free
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;main.c: 271:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4379  011654  0E3F               	movlw	low STR_13
  4380  011656  6EE6               	movwf	postinc1,c
  4381  011658  0EFF               	movlw	high STR_13
  4382  01165A  6EE6               	movwf	postinc1,c
  4383  01165C  0E00               	movlw	0
  4384  01165E  6EE6               	movwf	postinc1,c
  4385  011660  0E01               	movlw	1
  4386  011662  6EE6               	movwf	postinc1,c
  4387  011664  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4388  011668  0060  F0A3  FFE6   	movff	btemp,postinc1
  4389  01166E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4390  011674  0E04               	movlw	4
  4391  011676  6EE6               	movwf	postinc1,c
  4392  011678  EC08  F0CA         	call	_sprintf	;wreg free
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;main.c: 272:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4396  01167C  0E72               	movlw	low STR_14
  4397  01167E  6EE6               	movwf	postinc1,c
  4398  011680  0EFF               	movlw	high STR_14
  4399  011682  6EE6               	movwf	postinc1,c
  4400  011684  0E00               	movlw	0
  4401  011686  6EE6               	movwf	postinc1,c
  4402  011688  0E02               	movlw	2
  4403  01168A  6EE6               	movwf	postinc1,c
  4404  01168C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4405  011690  0060  F0A3  FFE6   	movff	btemp,postinc1
  4406  011696  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4407  01169C  0E04               	movlw	4
  4408  01169E  6EE6               	movwf	postinc1,c
  4409  0116A0  EC08  F0CA         	call	_sprintf	;wreg free
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;main.c: 273:    update_lcd(0);
  4413  0116A4  0E00               	movlw	0
  4414  0116A6  6EE6               	movwf	postinc1,c
  4415  0116A8  ECF9  F0C8         	call	_update_lcd	;wreg free
  4416                           
  4417                           ;main.c: 274:    uint16_t i_esr = 1;
  4418  0116AC  0E01               	movlw	1
  4419  0116AE  6E32               	movwf	(btemp+10)^0,c
  4420  0116B0  0E00               	movlw	0
  4421  0116B2  6E33               	movwf	(btemp+11)^0,c
  4422                           
  4423                           ;stkvar	_i_esr @ sp[(-13)+4]
  4424  0116B4  0EF7               	movlw	-9
  4425  0116B6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
  4426  0116BC  0EF8               	movlw	-8
  4427  0116BE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4428                           
  4429                           ;main.c: 276:    float esr_temp;;main.c: 277:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4430  0116C4  D06D               	goto	l12696
  4431  0116C6                     l12684:
  4432                           
  4433                           ;main.c: 278:     WaitMs(110);
  4434  0116C6  0E6E               	movlw	110
  4435  0116C8  6EE6               	movwf	postinc1,c
  4436  0116CA  0E00               	movlw	0
  4437  0116CC  6EE6               	movwf	postinc1,c
  4438  0116CE  EC03  F0D7         	call	_WaitMs	;wreg free
  4439                           
  4440                           ;main.c: 279:     shape = (uint8_t) fabsf(esr_temp);
  4441                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4442  0116D2  0EF3               	movlw	-13
  4443  0116D4  006F FF8F FFE6     	movff	plusw1,postinc1
  4444  0116DA  006F FF8F FFE6     	movff	plusw1,postinc1
  4445  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  4446  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  4447  0116EC  ECF9  F0CD         	call	_fabsf	;wreg free
  4448  0116F0  0060  F0A3  FFE6   	movff	btemp,postinc1
  4449  0116F6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4450  0116FC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  4451  011702  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  4452  011708  ECFF  F0C1         	call	___fltol	;wreg free
  4453  01170C  0060  F0A0  F033   	movff	btemp,btemp+11
  4454                           
  4455                           ;stkvar	_shape @ sp[(-13)+6]
  4456  011712  0EF9               	movlw	-7
  4457  011714  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4458                           
  4459                           ;main.c: 280:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4460  01171A  0E00               	movlw	0
  4461  01171C  6EE6               	movwf	postinc1,c
  4462                           
  4463                           ;stkvar	_shape @ sp[(-14)+6]
  4464  01171E  0EF8               	movlw	-8
  4465  011720  50E3               	movf	plusw1,w,c
  4466  011722  6EE6               	movwf	postinc1,c
  4467  011724  ECFF  F0CB         	call	_spinners	;wreg free
  4468  011728  5028               	movf	btemp^0,w,c
  4469  01172A  6EE6               	movwf	postinc1,c
  4470  01172C  0E00               	movlw	0
  4471  01172E  6EE6               	movwf	postinc1,c
  4472  011730  0E00               	movlw	0
  4473  011732  6EE6               	movwf	postinc1,c
  4474  011734  0E00               	movlw	0
  4475  011736  6EE6               	movwf	postinc1,c
  4476  011738  ECFF  F0CB         	call	_spinners	;wreg free
  4477  01173C  5028               	movf	btemp^0,w,c
  4478  01173E  6EE6               	movwf	postinc1,c
  4479  011740  0E00               	movlw	0
  4480  011742  6EE6               	movwf	postinc1,c
  4481  011744  0E61               	movlw	low STR_15
  4482  011746  6EE6               	movwf	postinc1,c
  4483  011748  0EFD               	movlw	high STR_15
  4484  01174A  6EE6               	movwf	postinc1,c
  4485  01174C  0E00               	movlw	0
  4486  01174E  6EE6               	movwf	postinc1,c
  4487  011750  0E02               	movlw	2
  4488  011752  6EE6               	movwf	postinc1,c
  4489  011754  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4490  011758  0060  F0A3  FFE6   	movff	btemp,postinc1
  4491  01175E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4492  011764  0E08               	movlw	8
  4493  011766  6EE6               	movwf	postinc1,c
  4494  011768  EC08  F0CA         	call	_sprintf	;wreg free
  4495                           
  4496                           ; BSR set to: 0
  4497                           ;main.c: 281:     update_lcd(0);
  4498  01176C  0E00               	movlw	0
  4499  01176E  6EE6               	movwf	postinc1,c
  4500  011770  ECF9  F0C8         	call	_update_lcd	;wreg free
  4501                           
  4502                           ;main.c: 283:     if (i_esr++ > 512)
  4503                           ;stkvar	_i_esr @ sp[(-13)+4]
  4504  011774  50E1               	movf	fsr1l,w,c
  4505  011776  0FF7               	addlw	-9
  4506  011778  6ED9               	movwf	fsr2l,c
  4507  01177A  50E2               	movf	fsr1h,w,c
  4508  01177C  6EDA               	movwf	fsr2h,c
  4509  01177E  0EFF               	movlw	255
  4510  011780  22DA               	addwfc	fsr2h,f,c
  4511  011782  006F FF7C  F032    	movff	indf2,btemp+10
  4512  011788  0E01               	movlw	1
  4513  01178A  26DE               	addwf	postinc2,f,c
  4514  01178C  006F FF7C  F033    	movff	indf2,btemp+11
  4515  011792  0E00               	movlw	0
  4516  011794  22DD               	addwfc	postdec2,f,c
  4517  011796  0432               	decf	(btemp+10)^0,w,c
  4518  011798  0E02               	movlw	2
  4519  01179A  5833               	subwfb	(btemp+11)^0,w,c
  4520  01179C  B0D8               	btfsc	status,0,c
  4521  01179E  D017               	goto	u12110
  4522  0117A0                     l12696:
  4523                           
  4524                           ;main.c: 277:    while ((esr_temp = esr_check(0)) < 0.0) {
  4525  0117A0  0E00               	movlw	0
  4526  0117A2  6EE6               	movwf	postinc1,c
  4527  0117A4  EC68  F0B4         	call	_esr_check	;wreg free
  4528                           
  4529                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4530  0117A8  0EF3               	movlw	-13
  4531  0117AA  0060  F0A3  FFE3   	movff	btemp,plusw1
  4532  0117B0  0EF4               	movlw	-12
  4533  0117B2  0060  F0A7  FFE3   	movff	btemp+1,plusw1
  4534  0117B8  0EF5               	movlw	-11
  4535  0117BA  0060  F0AB  FFE3   	movff	btemp+2,plusw1
  4536  0117C0  0EF6               	movlw	-10
  4537  0117C2  0060  F0AF  FFE3   	movff	btemp+3,plusw1
  4538  0117C8  0EF6               	movlw	-10
  4539  0117CA  BEE3               	btfsc	plusw1,7,c
  4540  0117CC  D77C               	goto	l12684
  4541  0117CE                     u12110:
  4542                           
  4543                           ;main.c: 286:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4544  0117CE  0060  F613  FFE6   	movff	_C+132,postinc1
  4545  0117D4  0060  F617  FFE6   	movff	_C+133,postinc1
  4546  0117DA  0060  F61B  FFE6   	movff	_C+134,postinc1
  4547  0117E0  0060  F61F  FFE6   	movff	_C+135,postinc1
  4548  0117E6  0E1F               	movlw	low STR_16
  4549  0117E8  6EE6               	movwf	postinc1,c
  4550  0117EA  0EFD               	movlw	high STR_16
  4551  0117EC  6EE6               	movwf	postinc1,c
  4552  0117EE  0E00               	movlw	0
  4553  0117F0  6EE6               	movwf	postinc1,c
  4554  0117F2  0E00               	movlw	0
  4555  0117F4  6EE6               	movwf	postinc1,c
  4556  0117F6  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4557  0117FA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4558  011800  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4559  011806  0E08               	movlw	8
  4560  011808  6EE6               	movwf	postinc1,c
  4561  01180A  EC08  F0CA         	call	_sprintf	;wreg free
  4562                           
  4563                           ;main.c: 287:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4564  01180E  0060  F78F  FFE6   	movff	_C+227,postinc1
  4565  011814  0060  F793  FFE6   	movff	_C+228,postinc1
  4566  01181A  0060  F797  FFE6   	movff	_C+229,postinc1
  4567  011820  0060  F79B  FFE6   	movff	_C+230,postinc1
  4568  011826  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4569  01182C  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4570  011832  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4571  011838  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4572  01183E  0EBC               	movlw	low STR_17
  4573  011840  6EE6               	movwf	postinc1,c
  4574  011842  0EFC               	movlw	high STR_17
  4575  011844  6EE6               	movwf	postinc1,c
  4576  011846  0E00               	movlw	0
  4577  011848  6EE6               	movwf	postinc1,c
  4578  01184A  0E01               	movlw	1
  4579  01184C  6EE6               	movwf	postinc1,c
  4580  01184E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4581  011852  0060  F0A3  FFE6   	movff	btemp,postinc1
  4582  011858  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4583  01185E  0E0C               	movlw	12
  4584  011860  6EE6               	movwf	postinc1,c
  4585  011862  EC08  F0CA         	call	_sprintf	;wreg free
  4586                           
  4587                           ;main.c: 288:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4588  011866  0060  F79F  FFE6   	movff	_C+231,postinc1
  4589  01186C  0060  F7A3  FFE6   	movff	_C+232,postinc1
  4590  011872  0060  F7A7  FFE6   	movff	_C+233,postinc1
  4591  011878  0060  F7AB  FFE6   	movff	_C+234,postinc1
  4592  01187E  0060  F7CF  FFE6   	movff	_C+243,postinc1
  4593  011884  0060  F7D3  FFE6   	movff	_C+244,postinc1
  4594  01188A  0060  F7D7  FFE6   	movff	_C+245,postinc1
  4595  011890  0060  F7DB  FFE6   	movff	_C+246,postinc1
  4596  011896  0ED6               	movlw	low STR_18
  4597  011898  6EE6               	movwf	postinc1,c
  4598  01189A  0EFC               	movlw	high STR_18
  4599  01189C  6EE6               	movwf	postinc1,c
  4600  01189E  0E00               	movlw	0
  4601  0118A0  6EE6               	movwf	postinc1,c
  4602  0118A2  0E02               	movlw	2
  4603  0118A4  6EE6               	movwf	postinc1,c
  4604  0118A6  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4605  0118AA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4606  0118B0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4607  0118B6  0E0C               	movlw	12
  4608  0118B8  6EE6               	movwf	postinc1,c
  4609  0118BA  EC08  F0CA         	call	_sprintf	;wreg free
  4610                           
  4611                           ;main.c: 289:    update_lcd(0);
  4612  0118BE  0E00               	movlw	0
  4613  0118C0  6EE6               	movwf	postinc1,c
  4614  0118C2  ECF9  F0C8         	call	_update_lcd	;wreg free
  4615                           
  4616                           ;main.c: 290:    WaitMs(5000);
  4617  0118C6  0E88               	movlw	136
  4618  0118C8  6EE6               	movwf	postinc1,c
  4619  0118CA  0E13               	movlw	19
  4620  0118CC  6EE6               	movwf	postinc1,c
  4621  0118CE  EC03  F0D7         	call	_WaitMs	;wreg free
  4622                           
  4623                           ;main.c: 291:    break;
  4624  0118D2  D01C               	goto	l12706
  4625  0118D4                     l1338:
  4626                           
  4627                           ; BSR set to: 2
  4628                           ;main.c: 297:    P.SYSTEM_STABLE = 1;
  4629  0118D4  0100               	movlb	0	; () banked
  4630  0118D6  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4631                           
  4632                           ;main.c: 298:    break;
  4633  0118D8  D019               	goto	l12706
  4634  0118DA                     l1340:
  4635                           
  4636                           ; BSR set to: 2
  4637                           ;main.c: 301:    V.ui_state = UI_STATE_INIT;
  4638  0118DA  6B00               	clrf	_V& (0+255),b	;volatile
  4639                           
  4640                           ;main.c: 302:    break;
  4641  0118DC  D017               	goto	l12706
  4642  0118DE                     l12704:
  4643  0118DE  0102               	movlb	2	; () banked
  4644  0118E0  5100               	movf	_V& (0+255),w,b	;volatile
  4645  0118E2  6E32               	movwf	(btemp+10)^0,c
  4646  0118E4  6A33               	clrf	(btemp+11)^0,c
  4647                           
  4648                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4649                           ; Switch size 1, requested type "simple"
  4650                           ; Number of cases is 1, Range of values is 0 to 0
  4651                           ; switch strategies available:
  4652                           ; Name         Instructions Cycles
  4653                           ; simple_byte            4     3 (average)
  4654                           ;	Chosen strategy is simple_byte
  4655  0118E6  5033               	movf	(btemp+11)^0,w,c
  4656  0118E8  0A00               	xorlw	0	; case 0
  4657  0118EA  A4D8               	btfss	status,2,c
  4658  0118EC  D7F6               	goto	l1340
  4659                           
  4660                           ; BSR set to: 2
  4661                           ; Switch size 1, requested type "simple"
  4662                           ; Number of cases is 5, Range of values is 0 to 5
  4663                           ; switch strategies available:
  4664                           ; Name         Instructions Cycles
  4665                           ; simple_byte           16     9 (average)
  4666                           ;	Chosen strategy is simple_byte
  4667  0118EE  5032               	movf	(btemp+10)^0,w,c
  4668  0118F0  0A00               	xorlw	0	; case 0
  4669  0118F2  B4D8               	btfsc	status,2,c
  4670  0118F4  D4E3               	goto	l12586
  4671  0118F6  0A01               	xorlw	1	; case 1
  4672  0118F8  B4D8               	btfsc	status,2,c
  4673  0118FA  D008               	goto	l12706
  4674  0118FC  0A02               	xorlw	2	; case 3
  4675  0118FE  B4D8               	btfsc	status,2,c
  4676  011900  D005               	goto	l12706
  4677  011902  0A07               	xorlw	7	; case 4
  4678  011904  B4D8               	btfsc	status,2,c
  4679  011906  D7E6               	goto	l1338
  4680  011908  0A01               	xorlw	1	; case 5
  4681  01190A  D7E7               	goto	l1340
  4682  01190C                     l12706:
  4683                           
  4684                           ;main.c: 305:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4685  01190C  0E01               	movlw	1
  4686  01190E  6EE6               	movwf	postinc1,c
  4687  011910  EC91  F0D8         	call	_TimerDone	;wreg free
  4688  011914  5028               	movf	btemp^0,w,c
  4689  011916  B4D8               	btfsc	status,2,c
  4690  011918  D013               	goto	l12718
  4691  01191A  EC6D  F0DB         	call	_check_adc_scan	;wreg free
  4692  01191E  5028               	movf	btemp^0,w,c
  4693  011920  B4D8               	btfsc	status,2,c
  4694  011922  D00E               	goto	l12718
  4695                           
  4696                           ;main.c: 309:    convert_adc_data();
  4697  011924  EC9D  F0CD         	call	_convert_adc_data	;wreg free
  4698                           
  4699                           ;main.c: 313:    clear_adc_scan();
  4700  011928  EC7D  F0DB         	call	_clear_adc_scan	;wreg free
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;main.c: 314:    start_adc_scan();
  4704  01192C  ECE8  F0D2         	call	_start_adc_scan	;wreg free
  4705                           
  4706                           ;main.c: 315:    StartTimer(TMR_ADC, 200);
  4707  011930  0EC8               	movlw	200
  4708  011932  6EE6               	movwf	postinc1,c
  4709  011934  0E00               	movlw	0
  4710  011936  6EE6               	movwf	postinc1,c
  4711  011938  0E01               	movlw	1
  4712  01193A  6EE6               	movwf	postinc1,c
  4713  01193C  EC10  F0D6         	call	_StartTimer	;wreg free
  4714  011940                     l12718:
  4715                           
  4716                           ;main.c: 322:   if (TimerDone(TMR_DISPLAY)) {
  4717                           
  4718                           ;main.c: 318:   if (V.ticks) {
  4719  011940  0E0A               	movlw	10
  4720  011942  6EE6               	movwf	postinc1,c
  4721  011944  EC91  F0D8         	call	_TimerDone	;wreg free
  4722  011948  5028               	movf	btemp^0,w,c
  4723  01194A  B4D8               	btfsc	status,2,c
  4724  01194C  EFAE  F090         	goto	l12772
  4725                           
  4726                           ;main.c: 323:    if (TimerDone(TMR_HELPDIS)) {
  4727  011950  0E09               	movlw	9
  4728  011952  6EE6               	movwf	postinc1,c
  4729  011954  EC91  F0D8         	call	_TimerDone	;wreg free
  4730  011958  5028               	movf	btemp^0,w,c
  4731  01195A  B4D8               	btfsc	status,2,c
  4732  01195C  D004               	goto	l12726
  4733                           
  4734                           ;main.c: 324:     set_display_info(DIS_STR);
  4735  01195E  0E00               	movlw	0
  4736  011960  6EE6               	movwf	postinc1,c
  4737  011962  EC67  F0DA         	call	_set_display_info	;wreg free
  4738  011966                     l12726:
  4739                           
  4740                           ;main.c: 326:    calc_model_data();
  4741  011966  ECCB  F0AD         	call	_calc_model_data	;wreg free
  4742                           
  4743                           ; BSR set to: 1
  4744                           ;main.c: 333:     hid_display(&H);
  4745                           
  4746                           ;main.c: 328:    if (0) {
  4747  01196A  0EF3               	movlw	_H& (0+255)
  4748  01196C  6EE6               	movwf	postinc1,c
  4749  01196E  EC8D  F0CA         	call	_hid_display	;wreg free
  4750                           
  4751                           ;main.c: 334:     switch (H.hid_display) {
  4752  011972  D3A4               	goto	l12752
  4753  011974                     l1348:
  4754                           
  4755                           ; BSR set to: 0
  4756                           ;main.c: 336:      V.calib = 0;
  4757  011974  0102               	movlb	2	; () banked
  4758  011976  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4759                           
  4760                           ; BSR set to: 2
  4761                           ;main.c: 337:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4762  011978  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4763  01197E  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4764  011984  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4765  01198A  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4766  011990  0E99               	movlw	low STR_22
  4767  011992  6EE6               	movwf	postinc1,c
  4768  011994  0EFE               	movlw	high STR_22
  4769  011996  6EE6               	movwf	postinc1,c
  4770  011998  0E00               	movlw	0
  4771  01199A  6EE6               	movwf	postinc1,c
  4772  01199C  0E00               	movlw	0
  4773  01199E  6EE6               	movwf	postinc1,c
  4774  0119A0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4775  0119A4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4776  0119AA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4777  0119B0  0E08               	movlw	8
  4778  0119B2  6EE6               	movwf	postinc1,c
  4779  0119B4  EC08  F0CA         	call	_sprintf	;wreg free
  4780                           
  4781                           ;main.c: 338:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4782  0119B8  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4783  0119BE  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4784  0119C4  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4785  0119CA  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4786  0119D0  0EBF               	movlw	low STR_23
  4787  0119D2  6EE6               	movwf	postinc1,c
  4788  0119D4  0EFE               	movlw	high STR_23
  4789  0119D6  6EE6               	movwf	postinc1,c
  4790  0119D8  0E00               	movlw	0
  4791  0119DA  6EE6               	movwf	postinc1,c
  4792  0119DC  0E01               	movlw	1
  4793  0119DE  6EE6               	movwf	postinc1,c
  4794  0119E0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4795  0119E4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4796  0119EA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4797  0119F0  0E08               	movlw	8
  4798  0119F2  6EE6               	movwf	postinc1,c
  4799  0119F4  EC08  F0CA         	call	_sprintf	;wreg free
  4800                           
  4801                           ;main.c: 339:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4802  0119F8  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4803  0119FE  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4804  011A04  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4805  011A0A  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4806  011A10  0EAC               	movlw	low STR_24
  4807  011A12  6EE6               	movwf	postinc1,c
  4808  011A14  0EFE               	movlw	high STR_24
  4809  011A16  6EE6               	movwf	postinc1,c
  4810  011A18  0E00               	movlw	0
  4811  011A1A  6EE6               	movwf	postinc1,c
  4812  011A1C  0E02               	movlw	2
  4813  011A1E  6EE6               	movwf	postinc1,c
  4814  011A20  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4815  011A24  0060  F0A3  FFE6   	movff	btemp,postinc1
  4816  011A2A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4817  011A30  0E08               	movlw	8
  4818  011A32  6EE6               	movwf	postinc1,c
  4819  011A34  EC08  F0CA         	call	_sprintf	;wreg free
  4820                           
  4821                           ;main.c: 341:      sprintf(get_vterm_ptr(0, 1), "PV   WH %3.2f     ", C.pvkw);
  4822  011A38  0060  F683  FFE6   	movff	_C+160,postinc1
  4823  011A3E  0060  F687  FFE6   	movff	_C+161,postinc1
  4824  011A44  0060  F68B  FFE6   	movff	_C+162,postinc1
  4825  011A4A  0060  F68F  FFE6   	movff	_C+163,postinc1
  4826  011A50  0E60               	movlw	low STR_25
  4827  011A52  6EE6               	movwf	postinc1,c
  4828  011A54  0EFE               	movlw	high STR_25
  4829  011A56  6EE6               	movwf	postinc1,c
  4830  011A58  0E01               	movlw	1
  4831  011A5A  6EE6               	movwf	postinc1,c
  4832  011A5C  0E00               	movlw	0
  4833  011A5E  6EE6               	movwf	postinc1,c
  4834  011A60  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4835  011A64  0060  F0A3  FFE6   	movff	btemp,postinc1
  4836  011A6A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4837  011A70  0E08               	movlw	8
  4838  011A72  6EE6               	movwf	postinc1,c
  4839  011A74  EC08  F0CA         	call	_sprintf	;wreg free
  4840                           
  4841                           ;main.c: 342:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4842  011A78  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4843  011A7E  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4844  011A84  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4845  011A8A  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4846  011A90  0E86               	movlw	low STR_26
  4847  011A92  6EE6               	movwf	postinc1,c
  4848  011A94  0EFE               	movlw	high STR_26
  4849  011A96  6EE6               	movwf	postinc1,c
  4850  011A98  0E01               	movlw	1
  4851  011A9A  6EE6               	movwf	postinc1,c
  4852  011A9C  0E01               	movlw	1
  4853  011A9E  6EE6               	movwf	postinc1,c
  4854  011AA0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4855  011AA4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4856  011AAA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4857  011AB0  0E08               	movlw	8
  4858  011AB2  6EE6               	movwf	postinc1,c
  4859  011AB4  EC08  F0CA         	call	_sprintf	;wreg free
  4860                           
  4861                           ;main.c: 343:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4862  011AB8  0060  F693  FFE6   	movff	_C+164,postinc1
  4863  011ABE  0060  F697  FFE6   	movff	_C+165,postinc1
  4864  011AC4  0060  F69B  FFE6   	movff	_C+166,postinc1
  4865  011ACA  0060  F69F  FFE6   	movff	_C+167,postinc1
  4866  011AD0  0E73               	movlw	low STR_27
  4867  011AD2  6EE6               	movwf	postinc1,c
  4868  011AD4  0EFE               	movlw	high STR_27
  4869  011AD6  6EE6               	movwf	postinc1,c
  4870  011AD8  0E01               	movlw	1
  4871  011ADA  6EE6               	movwf	postinc1,c
  4872  011ADC  0E02               	movlw	2
  4873  011ADE  6EE6               	movwf	postinc1,c
  4874  011AE0  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4875  011AE4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4876  011AEA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4877  011AF0  0E08               	movlw	8
  4878  011AF2  6EE6               	movwf	postinc1,c
  4879  011AF4  EC08  F0CA         	call	_sprintf	;wreg free
  4880                           
  4881                           ;main.c: 344:      break;
  4882  011AF8  D2F6               	goto	l12754
  4883  011AFA                     l1350:
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;main.c: 346:      V.calib = 0;
  4887  011AFA  0102               	movlb	2	; () banked
  4888  011AFC  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4889                           
  4890                           ; BSR set to: 2
  4891                           ;main.c: 347:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4892  011AFE  0060  F413  FFE6   	movff	_C+4,postinc1
  4893  011B04  0060  F417  FFE6   	movff	_C+5,postinc1
  4894  011B0A  0060  F41B  FFE6   	movff	_C+6,postinc1
  4895  011B10  0060  F41F  FFE6   	movff	_C+7,postinc1
  4896  011B16  0060  F453  FFE6   	movff	_C+20,postinc1
  4897  011B1C  0060  F457  FFE6   	movff	_C+21,postinc1
  4898  011B22  0060  F45B  FFE6   	movff	_C+22,postinc1
  4899  011B28  0060  F45F  FFE6   	movff	_C+23,postinc1
  4900  011B2E  0EF8               	movlw	low STR_28
  4901  011B30  6EE6               	movwf	postinc1,c
  4902  011B32  0EFE               	movlw	high STR_28
  4903  011B34  6EE6               	movwf	postinc1,c
  4904  011B36  0E00               	movlw	0
  4905  011B38  6EE6               	movwf	postinc1,c
  4906  011B3A  0E00               	movlw	0
  4907  011B3C  6EE6               	movwf	postinc1,c
  4908  011B3E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4909  011B42  0060  F0A3  FFE6   	movff	btemp,postinc1
  4910  011B48  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4911  011B4E  0E0C               	movlw	12
  4912  011B50  6EE6               	movwf	postinc1,c
  4913  011B52  EC08  F0CA         	call	_sprintf	;wreg free
  4914                           
  4915                           ;main.c: 348:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4916  011B56  0060  F403  FFE6   	movff	_C,postinc1
  4917  011B5C  0060  F407  FFE6   	movff	_C+1,postinc1
  4918  011B62  0060  F40B  FFE6   	movff	_C+2,postinc1
  4919  011B68  0060  F40F  FFE6   	movff	_C+3,postinc1
  4920  011B6E  0060  F443  FFE6   	movff	_C+16,postinc1
  4921  011B74  0060  F447  FFE6   	movff	_C+17,postinc1
  4922  011B7A  0060  F44B  FFE6   	movff	_C+18,postinc1
  4923  011B80  0060  F44F  FFE6   	movff	_C+19,postinc1
  4924  011B86  0ED2               	movlw	low STR_29
  4925  011B88  6EE6               	movwf	postinc1,c
  4926  011B8A  0EFE               	movlw	high STR_29
  4927  011B8C  6EE6               	movwf	postinc1,c
  4928  011B8E  0E00               	movlw	0
  4929  011B90  6EE6               	movwf	postinc1,c
  4930  011B92  0E01               	movlw	1
  4931  011B94  6EE6               	movwf	postinc1,c
  4932  011B96  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4933  011B9A  0060  F0A3  FFE6   	movff	btemp,postinc1
  4934  011BA0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4935  011BA6  0E0C               	movlw	12
  4936  011BA8  6EE6               	movwf	postinc1,c
  4937  011BAA  EC08  F0CA         	call	_sprintf	;wreg free
  4938                           
  4939                           ;main.c: 349:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4940  011BAE  0060  F503  FFE6   	movff	_C+64,postinc1
  4941  011BB4  0060  F507  FFE6   	movff	_C+65,postinc1
  4942  011BBA  0060  F50B  FFE6   	movff	_C+66,postinc1
  4943  011BC0  0060  F50F  FFE6   	movff	_C+67,postinc1
  4944  011BC6  0060  F423  FFE6   	movff	_C+8,postinc1
  4945  011BCC  0060  F427  FFE6   	movff	_C+9,postinc1
  4946  011BD2  0060  F42B  FFE6   	movff	_C+10,postinc1
  4947  011BD8  0060  F42F  FFE6   	movff	_C+11,postinc1
  4948  011BDE  0EE5               	movlw	low STR_30
  4949  011BE0  6EE6               	movwf	postinc1,c
  4950  011BE2  0EFE               	movlw	high STR_30
  4951  011BE4  6EE6               	movwf	postinc1,c
  4952  011BE6  0E00               	movlw	0
  4953  011BE8  6EE6               	movwf	postinc1,c
  4954  011BEA  0E02               	movlw	2
  4955  011BEC  6EE6               	movwf	postinc1,c
  4956  011BEE  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4957  011BF2  0060  F0A3  FFE6   	movff	btemp,postinc1
  4958  011BF8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4959  011BFE  0E0C               	movlw	12
  4960  011C00  6EE6               	movwf	postinc1,c
  4961  011C02  EC08  F0CA         	call	_sprintf	;wreg free
  4962                           
  4963                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  4964  011C06  0060  F663  FFE6   	movff	_C+152,postinc1
  4965  011C0C  0060  F667  FFE6   	movff	_C+153,postinc1
  4966  011C12  0060  F66B  FFE6   	movff	_C+154,postinc1
  4967  011C18  0060  F66F  FFE6   	movff	_C+155,postinc1
  4968  011C1E  0E27               	movlw	low STR_31
  4969  011C20  6EE6               	movwf	postinc1,c
  4970  011C22  0EFE               	movlw	high STR_31
  4971  011C24  6EE6               	movwf	postinc1,c
  4972  011C26  0E01               	movlw	1
  4973  011C28  6EE6               	movwf	postinc1,c
  4974  011C2A  0E00               	movlw	0
  4975  011C2C  6EE6               	movwf	postinc1,c
  4976  011C2E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4977  011C32  0060  F0A3  FFE6   	movff	btemp,postinc1
  4978  011C38  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4979  011C3E  0E08               	movlw	8
  4980  011C40  6EE6               	movwf	postinc1,c
  4981  011C42  EC08  F0CA         	call	_sprintf	;wreg free
  4982                           
  4983                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  4984  011C46  0060  F673  FFE6   	movff	_C+156,postinc1
  4985  011C4C  0060  F677  FFE6   	movff	_C+157,postinc1
  4986  011C52  0060  F67B  FFE6   	movff	_C+158,postinc1
  4987  011C58  0060  F67F  FFE6   	movff	_C+159,postinc1
  4988  011C5E  0E3A               	movlw	low STR_32
  4989  011C60  6EE6               	movwf	postinc1,c
  4990  011C62  0EFE               	movlw	high STR_32
  4991  011C64  6EE6               	movwf	postinc1,c
  4992  011C66  0E01               	movlw	1
  4993  011C68  6EE6               	movwf	postinc1,c
  4994  011C6A  0E01               	movlw	1
  4995  011C6C  6EE6               	movwf	postinc1,c
  4996  011C6E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  4997  011C72  0060  F0A3  FFE6   	movff	btemp,postinc1
  4998  011C78  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4999  011C7E  0E08               	movlw	8
  5000  011C80  6EE6               	movwf	postinc1,c
  5001  011C82  EC08  F0CA         	call	_sprintf	;wreg free
  5002                           
  5003                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5004  011C86  0060  F673  FFE6   	movff	_C+156,postinc1
  5005  011C8C  0060  F677  FFE6   	movff	_C+157,postinc1
  5006  011C92  0060  F67B  FFE6   	movff	_C+158,postinc1
  5007  011C98  0060  F67F  FFE6   	movff	_C+159,postinc1
  5008  011C9E  0060  F663  FFE6   	movff	_C+152,postinc1
  5009  011CA4  0060  F667  FFE6   	movff	_C+153,postinc1
  5010  011CAA  0060  F66B  FFE6   	movff	_C+154,postinc1
  5011  011CB0  0060  F66F  FFE6   	movff	_C+155,postinc1
  5012  011CB6  EC24  F09D         	call	___fladd	;wreg free
  5013  011CBA  0060  F0A3  FFE6   	movff	btemp,postinc1
  5014  011CC0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5015  011CC6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  5016  011CCC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  5017  011CD2  0E4D               	movlw	low STR_33
  5018  011CD4  6EE6               	movwf	postinc1,c
  5019  011CD6  0EFE               	movlw	high STR_33
  5020  011CD8  6EE6               	movwf	postinc1,c
  5021  011CDA  0E01               	movlw	1
  5022  011CDC  6EE6               	movwf	postinc1,c
  5023  011CDE  0E02               	movlw	2
  5024  011CE0  6EE6               	movwf	postinc1,c
  5025  011CE2  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5026  011CE6  0060  F0A3  FFE6   	movff	btemp,postinc1
  5027  011CEC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5028  011CF2  0E08               	movlw	8
  5029  011CF4  6EE6               	movwf	postinc1,c
  5030  011CF6  EC08  F0CA         	call	_sprintf	;wreg free
  5031                           
  5032                           ;main.c: 354:      break;
  5033  011CFA  D1F5               	goto	l12754
  5034  011CFC                     l1351:
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;main.c: 356:      V.calib = 0;
  5038  011CFC  0102               	movlb	2	; () banked
  5039  011CFE  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5040                           
  5041                           ; BSR set to: 2
  5042                           ;main.c: 357:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5043  011D00  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5044  011D06  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5045  011D0C  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5046  011D12  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5047  011D18  0E9E               	movlw	low STR_34
  5048  011D1A  6EE6               	movwf	postinc1,c
  5049  011D1C  0EFD               	movlw	high STR_34
  5050  011D1E  6EE6               	movwf	postinc1,c
  5051  011D20  0E00               	movlw	0
  5052  011D22  6EE6               	movwf	postinc1,c
  5053  011D24  0E00               	movlw	0
  5054  011D26  6EE6               	movwf	postinc1,c
  5055  011D28  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5056  011D2C  0060  F0A3  FFE6   	movff	btemp,postinc1
  5057  011D32  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5058  011D38  0E08               	movlw	8
  5059  011D3A  6EE6               	movwf	postinc1,c
  5060  011D3C  EC08  F0CA         	call	_sprintf	;wreg free
  5061                           
  5062                           ;main.c: 358:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5063  011D40  0060  F643  FFE6   	movff	_C+144,postinc1
  5064  011D46  0060  F647  FFE6   	movff	_C+145,postinc1
  5065  011D4C  0060  F64B  FFE6   	movff	_C+146,postinc1
  5066  011D52  0060  F64F  FFE6   	movff	_C+147,postinc1
  5067  011D58  0060  F633  FFE6   	movff	_C+140,postinc1
  5068  011D5E  0060  F637  FFE6   	movff	_C+141,postinc1
  5069  011D64  0060  F63B  FFE6   	movff	_C+142,postinc1
  5070  011D6A  0060  F63F  FFE6   	movff	_C+143,postinc1
  5071  011D70  0EDA               	movlw	low STR_35
  5072  011D72  6EE6               	movwf	postinc1,c
  5073  011D74  0EFD               	movlw	high STR_35
  5074  011D76  6EE6               	movwf	postinc1,c
  5075  011D78  0E00               	movlw	0
  5076  011D7A  6EE6               	movwf	postinc1,c
  5077  011D7C  0E01               	movlw	1
  5078  011D7E  6EE6               	movwf	postinc1,c
  5079  011D80  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5080  011D84  0060  F0A3  FFE6   	movff	btemp,postinc1
  5081  011D8A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5082  011D90  0E0C               	movlw	12
  5083  011D92  6EE6               	movwf	postinc1,c
  5084  011D94  EC08  F0CA         	call	_sprintf	;wreg free
  5085                           
  5086                           ;main.c: 359:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5087  011D98  0060  F6B3  FFE6   	movff	_C+172,postinc1
  5088  011D9E  0060  F6B7  FFE6   	movff	_C+173,postinc1
  5089  011DA4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  5090  011DAA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  5091  011DB0  0E00               	movlw	0
  5092  011DB2  6EE6               	movwf	postinc1,c
  5093  011DB4  0E05               	movlw	5
  5094  011DB6  6EE6               	movwf	postinc1,c
  5095  011DB8  ECFF  F0CB         	call	_spinners	;wreg free
  5096  011DBC  5028               	movf	btemp^0,w,c
  5097  011DBE  6EE6               	movwf	postinc1,c
  5098  011DC0  0E00               	movlw	0
  5099  011DC2  6EE6               	movwf	postinc1,c
  5100  011DC4  0E8A               	movlw	low STR_36
  5101  011DC6  6EE6               	movwf	postinc1,c
  5102  011DC8  0EFD               	movlw	high STR_36
  5103  011DCA  6EE6               	movwf	postinc1,c
  5104  011DCC  0E00               	movlw	0
  5105  011DCE  6EE6               	movwf	postinc1,c
  5106  011DD0  0E02               	movlw	2
  5107  011DD2  6EE6               	movwf	postinc1,c
  5108  011DD4  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5109  011DD8  0060  F0A3  FFE6   	movff	btemp,postinc1
  5110  011DDE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5111  011DE4  0E0A               	movlw	10
  5112  011DE6  6EE6               	movwf	postinc1,c
  5113  011DE8  EC08  F0CA         	call	_sprintf	;wreg free
  5114                           
  5115                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5116  011DEC  0060  F613  FFE6   	movff	_C+132,postinc1
  5117  011DF2  0060  F617  FFE6   	movff	_C+133,postinc1
  5118  011DF8  0060  F61B  FFE6   	movff	_C+134,postinc1
  5119  011DFE  0060  F61F  FFE6   	movff	_C+135,postinc1
  5120  011E04  0E76               	movlw	low STR_37
  5121  011E06  6EE6               	movwf	postinc1,c
  5122  011E08  0EFD               	movlw	high STR_37
  5123  011E0A  6EE6               	movwf	postinc1,c
  5124  011E0C  0E01               	movlw	1
  5125  011E0E  6EE6               	movwf	postinc1,c
  5126  011E10  0E00               	movlw	0
  5127  011E12  6EE6               	movwf	postinc1,c
  5128  011E14  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5129  011E18  0060  F0A3  FFE6   	movff	btemp,postinc1
  5130  011E1E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5131  011E24  0E08               	movlw	8
  5132  011E26  6EE6               	movwf	postinc1,c
  5133  011E28  EC08  F0CA         	call	_sprintf	;wreg free
  5134                           
  5135                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5136  011E2C  0060  F78F  FFE6   	movff	_C+227,postinc1
  5137  011E32  0060  F793  FFE6   	movff	_C+228,postinc1
  5138  011E38  0060  F797  FFE6   	movff	_C+229,postinc1
  5139  011E3E  0060  F79B  FFE6   	movff	_C+230,postinc1
  5140  011E44  0060  F7BF  FFE6   	movff	_C+239,postinc1
  5141  011E4A  0060  F7C3  FFE6   	movff	_C+240,postinc1
  5142  011E50  0060  F7C7  FFE6   	movff	_C+241,postinc1
  5143  011E56  0060  F7CB  FFE6   	movff	_C+242,postinc1
  5144  011E5C  0EB2               	movlw	low STR_38
  5145  011E5E  6EE6               	movwf	postinc1,c
  5146  011E60  0EFD               	movlw	high STR_38
  5147  011E62  6EE6               	movwf	postinc1,c
  5148  011E64  0E01               	movlw	1
  5149  011E66  6EE6               	movwf	postinc1,c
  5150  011E68  0E01               	movlw	1
  5151  011E6A  6EE6               	movwf	postinc1,c
  5152  011E6C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5153  011E70  0060  F0A3  FFE6   	movff	btemp,postinc1
  5154  011E76  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5155  011E7C  0E0C               	movlw	12
  5156  011E7E  6EE6               	movwf	postinc1,c
  5157  011E80  EC08  F0CA         	call	_sprintf	;wreg free
  5158                           
  5159                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5160  011E84  0060  F79F  FFE6   	movff	_C+231,postinc1
  5161  011E8A  0060  F7A3  FFE6   	movff	_C+232,postinc1
  5162  011E90  0060  F7A7  FFE6   	movff	_C+233,postinc1
  5163  011E96  0060  F7AB  FFE6   	movff	_C+234,postinc1
  5164  011E9C  0060  F7CF  FFE6   	movff	_C+243,postinc1
  5165  011EA2  0060  F7D3  FFE6   	movff	_C+244,postinc1
  5166  011EA8  0060  F7D7  FFE6   	movff	_C+245,postinc1
  5167  011EAE  0060  F7DB  FFE6   	movff	_C+246,postinc1
  5168  011EB4  0EC6               	movlw	low STR_39
  5169  011EB6  6EE6               	movwf	postinc1,c
  5170  011EB8  0EFD               	movlw	high STR_39
  5171  011EBA  6EE6               	movwf	postinc1,c
  5172  011EBC  0E01               	movlw	1
  5173  011EBE  6EE6               	movwf	postinc1,c
  5174  011EC0  0E02               	movlw	2
  5175  011EC2  6EE6               	movwf	postinc1,c
  5176  011EC4  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5177  011EC8  0060  F0A3  FFE6   	movff	btemp,postinc1
  5178  011ECE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5179  011ED4  0E0C               	movlw	12
  5180  011ED6  6EE6               	movwf	postinc1,c
  5181  011ED8  EC08  F0CA         	call	_sprintf	;wreg free
  5182                           
  5183                           ;main.c: 364:      break;
  5184  011EDC  D104               	goto	l12754
  5185  011EDE                     l12738:
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;main.c: 366:      if (!V.calib) {
  5189  011EDE  0102               	movlb	2	; () banked
  5190  011EE0  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  5191  011EE2  A4D8               	btfss	status,2,c
  5192  011EE4  D02D               	goto	l12742
  5193                           
  5194                           ; BSR set to: 2
  5195                           ;main.c: 367:       lp_filter(0.0, i, -1);
  5196  011EE6  0EFF               	movlw	255
  5197  011EE8  6EE6               	movwf	postinc1,c
  5198                           
  5199                           ;stkvar	_i @ sp[(-14)+9]
  5200  011EEA  0EFB               	movlw	-5
  5201  011EEC  50E3               	movf	plusw1,w,c
  5202  011EEE  6EE6               	movwf	postinc1,c
  5203  011EF0  0E00               	movlw	0
  5204  011EF2  6EE6               	movwf	postinc1,c
  5205  011EF4  0E00               	movlw	0
  5206  011EF6  6EE6               	movwf	postinc1,c
  5207  011EF8  0E00               	movlw	0
  5208  011EFA  6EE6               	movwf	postinc1,c
  5209  011EFC  0E00               	movlw	0
  5210  011EFE  6EE6               	movwf	postinc1,c
  5211  011F00  ECDC  F0BE         	call	_lp_filter	;wreg free
  5212                           
  5213                           ;main.c: 368:       lp_filter(0.0, j, -1);
  5214  011F04  0EFF               	movlw	255
  5215  011F06  6EE6               	movwf	postinc1,c
  5216                           
  5217                           ;stkvar	_j @ sp[(-14)+8]
  5218  011F08  0EFA               	movlw	-6
  5219  011F0A  50E3               	movf	plusw1,w,c
  5220  011F0C  6EE6               	movwf	postinc1,c
  5221  011F0E  0E00               	movlw	0
  5222  011F10  6EE6               	movwf	postinc1,c
  5223  011F12  0E00               	movlw	0
  5224  011F14  6EE6               	movwf	postinc1,c
  5225  011F16  0E00               	movlw	0
  5226  011F18  6EE6               	movwf	postinc1,c
  5227  011F1A  0E00               	movlw	0
  5228  011F1C  6EE6               	movwf	postinc1,c
  5229  011F1E  ECDC  F0BE         	call	_lp_filter	;wreg free
  5230                           
  5231                           ;main.c: 369:       lp_filter(0.0, k, -1);
  5232  011F22  0EFF               	movlw	255
  5233  011F24  6EE6               	movwf	postinc1,c
  5234                           
  5235                           ;stkvar	_k @ sp[(-14)+7]
  5236  011F26  0EF9               	movlw	-7
  5237  011F28  50E3               	movf	plusw1,w,c
  5238  011F2A  6EE6               	movwf	postinc1,c
  5239  011F2C  0E00               	movlw	0
  5240  011F2E  6EE6               	movwf	postinc1,c
  5241  011F30  0E00               	movlw	0
  5242  011F32  6EE6               	movwf	postinc1,c
  5243  011F34  0E00               	movlw	0
  5244  011F36  6EE6               	movwf	postinc1,c
  5245  011F38  0E00               	movlw	0
  5246  011F3A  6EE6               	movwf	postinc1,c
  5247  011F3C  ECDC  F0BE         	call	_lp_filter	;wreg free
  5248  011F40                     l12742:
  5249                           
  5250                           ;main.c: 371:      V.calib = 1;
  5251  011F40  0E01               	movlw	1
  5252  011F42  0102               	movlb	2	; () banked
  5253  011F44  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  5254                           
  5255                           ; BSR set to: 2
  5256                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5257  011F46  0E02               	movlw	2
  5258  011F48  6EE6               	movwf	postinc1,c
  5259  011F4A  ECFE  F0D7         	call	_get_switch	;wreg free
  5260  011F4E  5028               	movf	btemp^0,w,c
  5261  011F50  6EE6               	movwf	postinc1,c
  5262  011F52  0E00               	movlw	0
  5263  011F54  6EE6               	movwf	postinc1,c
  5264                           
  5265                           ;stkvar	_i @ sp[(-15)+9]
  5266  011F56  0EFA               	movlw	-6
  5267  011F58  50E3               	movf	plusw1,w,c
  5268  011F5A  0D04               	mullw	4
  5269  011F5C  0E00               	movlw	low _C
  5270  011F5E  24F3               	addwf	243,w,c
  5271  011F60  6ED9               	movwf	fsr2l,c
  5272  011F62  0E01               	movlw	high _C
  5273  011F64  20F4               	addwfc	prodh,w,c
  5274  011F66  6EDA               	movwf	fsr2h,c
  5275  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5277  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5278  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5279                           
  5280                           ;stkvar	_i @ sp[(-19)+9]
  5281  011F80  0EF6               	movlw	-10
  5282  011F82  50E3               	movf	plusw1,w,c
  5283  011F84  6EE6               	movwf	postinc1,c
  5284  011F86  EC76  F0DA         	call	_get_raw_result	;wreg free
  5285  011F8A  0060  F0A3  FFE6   	movff	btemp,postinc1
  5286  011F90  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5287  011F96  0E83               	movlw	low STR_19
  5288  011F98  6EE6               	movwf	postinc1,c
  5289  011F9A  0EFF               	movlw	high STR_19
  5290  011F9C  6EE6               	movwf	postinc1,c
  5291  011F9E  0E00               	movlw	0
  5292  011FA0  6EE6               	movwf	postinc1,c
  5293  011FA2  0E00               	movlw	0
  5294  011FA4  6EE6               	movwf	postinc1,c
  5295  011FA6  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5296  011FAA  0060  F0A3  FFE6   	movff	btemp,postinc1
  5297  011FB0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5298  011FB6  0E0C               	movlw	12
  5299  011FB8  6EE6               	movwf	postinc1,c
  5300  011FBA  EC08  F0CA         	call	_sprintf	;wreg free
  5301                           
  5302                           ; BSR set to: 0
  5303                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5304  011FBE  0E03               	movlw	3
  5305  011FC0  6EE6               	movwf	postinc1,c
  5306  011FC2  ECFE  F0D7         	call	_get_switch	;wreg free
  5307  011FC6  5028               	movf	btemp^0,w,c
  5308  011FC8  6EE6               	movwf	postinc1,c
  5309  011FCA  0E00               	movlw	0
  5310  011FCC  6EE6               	movwf	postinc1,c
  5311                           
  5312                           ;stkvar	_j @ sp[(-15)+8]
  5313  011FCE  0EF9               	movlw	-7
  5314  011FD0  50E3               	movf	plusw1,w,c
  5315  011FD2  0D04               	mullw	4
  5316  011FD4  0E00               	movlw	low _C
  5317  011FD6  24F3               	addwf	243,w,c
  5318  011FD8  6ED9               	movwf	fsr2l,c
  5319  011FDA  0E01               	movlw	high _C
  5320  011FDC  20F4               	addwfc	prodh,w,c
  5321  011FDE  6EDA               	movwf	fsr2h,c
  5322  011FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5323  011FE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5324  011FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5325  011FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  5326                           
  5327                           ;stkvar	_j @ sp[(-19)+8]
  5328  011FF8  0EF5               	movlw	-11
  5329  011FFA  50E3               	movf	plusw1,w,c
  5330  011FFC  6EE6               	movwf	postinc1,c
  5331  011FFE  EC76  F0DA         	call	_get_raw_result	;wreg free
  5332  012002  0060  F0A3  FFE6   	movff	btemp,postinc1
  5333  012008  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5334  01200E  0E83               	movlw	low STR_19
  5335  012010  6EE6               	movwf	postinc1,c
  5336  012012  0EFF               	movlw	high STR_19
  5337  012014  6EE6               	movwf	postinc1,c
  5338  012016  0E00               	movlw	0
  5339  012018  6EE6               	movwf	postinc1,c
  5340  01201A  0E01               	movlw	1
  5341  01201C  6EE6               	movwf	postinc1,c
  5342  01201E  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5343  012022  0060  F0A3  FFE6   	movff	btemp,postinc1
  5344  012028  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5345  01202E  0E0C               	movlw	12
  5346  012030  6EE6               	movwf	postinc1,c
  5347  012032  EC08  F0CA         	call	_sprintf	;wreg free
  5348                           
  5349                           ; BSR set to: 0
  5350                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5351                           ;stkvar	_inp_index @ sp[(-13)+10]
  5352  012036  0EFD               	movlw	-3
  5353  012038  50E3               	movf	plusw1,w,c
  5354  01203A  6E32               	movwf	(btemp+10)^0,c
  5355  01203C  6A33               	clrf	(btemp+11)^0,c
  5356  01203E  0E01               	movlw	1
  5357  012040  2632               	addwf	(btemp+10)^0,f,c
  5358  012042  0E00               	movlw	0
  5359  012044  2233               	addwfc	(btemp+11)^0,f,c
  5360  012046  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  5361  01204C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  5362                           
  5363                           ;stkvar	_k @ sp[(-15)+7]
  5364  012052  0EF8               	movlw	-8
  5365  012054  50E3               	movf	plusw1,w,c
  5366  012056  0D04               	mullw	4
  5367  012058  0E00               	movlw	low _C
  5368  01205A  24F3               	addwf	243,w,c
  5369  01205C  6ED9               	movwf	fsr2l,c
  5370  01205E  0E01               	movlw	high _C
  5371  012060  20F4               	addwfc	prodh,w,c
  5372  012062  6EDA               	movwf	fsr2h,c
  5373  012064  006F FF7B FFE6     	movff	postinc2,postinc1
  5374  01206A  006F FF7B FFE6     	movff	postinc2,postinc1
  5375  012070  006F FF7B FFE6     	movff	postinc2,postinc1
  5376  012076  006F FF7B FFE6     	movff	postinc2,postinc1
  5377                           
  5378                           ;stkvar	_k @ sp[(-19)+7]
  5379  01207C  0EF4               	movlw	-12
  5380  01207E  50E3               	movf	plusw1,w,c
  5381  012080  6EE6               	movwf	postinc1,c
  5382  012082  EC76  F0DA         	call	_get_raw_result	;wreg free
  5383  012086  0060  F0A3  FFE6   	movff	btemp,postinc1
  5384  01208C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5385  012092  0E61               	movlw	low STR_21
  5386  012094  6EE6               	movwf	postinc1,c
  5387  012096  0EFF               	movlw	high STR_21
  5388  012098  6EE6               	movwf	postinc1,c
  5389  01209A  0E00               	movlw	0
  5390  01209C  6EE6               	movwf	postinc1,c
  5391  01209E  0E02               	movlw	2
  5392  0120A0  6EE6               	movwf	postinc1,c
  5393  0120A2  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  5394  0120A6  0060  F0A3  FFE6   	movff	btemp,postinc1
  5395  0120AC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5396  0120B2  0E0C               	movlw	12
  5397  0120B4  6EE6               	movwf	postinc1,c
  5398  0120B6  EC08  F0CA         	call	_sprintf	;wreg free
  5399                           
  5400                           ;main.c: 375:      break;
  5401  0120BA  D015               	goto	l12754
  5402  0120BC                     l12752:
  5403  0120BC  0100               	movlb	0	; () banked
  5404  0120BE  51F3               	movf	_H& (0+255),w,b
  5405  0120C0  6E32               	movwf	(btemp+10)^0,c
  5406  0120C2  6A33               	clrf	(btemp+11)^0,c
  5407                           
  5408                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5409                           ; Switch size 1, requested type "simple"
  5410                           ; Number of cases is 1, Range of values is 0 to 0
  5411                           ; switch strategies available:
  5412                           ; Name         Instructions Cycles
  5413                           ; simple_byte            4     3 (average)
  5414                           ;	Chosen strategy is simple_byte
  5415  0120C4  5033               	movf	(btemp+11)^0,w,c
  5416  0120C6  0A00               	xorlw	0	; case 0
  5417  0120C8  A4D8               	btfss	status,2,c
  5418  0120CA  D00D               	goto	l12754
  5419                           
  5420                           ; BSR set to: 0
  5421                           ; Switch size 1, requested type "simple"
  5422                           ; Number of cases is 4, Range of values is 0 to 3
  5423                           ; switch strategies available:
  5424                           ; Name         Instructions Cycles
  5425                           ; simple_byte           13     7 (average)
  5426                           ;	Chosen strategy is simple_byte
  5427  0120CC  5032               	movf	(btemp+10)^0,w,c
  5428  0120CE  0A00               	xorlw	0	; case 0
  5429  0120D0  B4D8               	btfsc	status,2,c
  5430  0120D2  D513               	goto	l1350
  5431  0120D4  0A01               	xorlw	1	; case 1
  5432  0120D6  B4D8               	btfsc	status,2,c
  5433  0120D8  D44D               	goto	l1348
  5434  0120DA  0A03               	xorlw	3	; case 2
  5435  0120DC  B4D8               	btfsc	status,2,c
  5436  0120DE  D60E               	goto	l1351
  5437  0120E0  0A01               	xorlw	1	; case 3
  5438  0120E2  B4D8               	btfsc	status,2,c
  5439  0120E4  D6FC               	goto	l12738
  5440  0120E6                     l12754:
  5441                           
  5442                           ; BSR set to: 0
  5443                           ;main.c: 379:     clear_hid_pflags(&H);
  5444  0120E6  0EF3               	movlw	_H& (0+255)
  5445  0120E8  6EE6               	movwf	postinc1,c
  5446  0120EA  ECBC  F0D9         	call	_clear_hid_pflags	;wreg free
  5447                           
  5448                           ;main.c: 381:    StartTimer(TMR_DISPLAY, 250);
  5449  0120EE  0EFA               	movlw	250
  5450  0120F0  6EE6               	movwf	postinc1,c
  5451  0120F2  0E00               	movlw	0
  5452  0120F4  6EE6               	movwf	postinc1,c
  5453  0120F6  0E0A               	movlw	10
  5454  0120F8  6EE6               	movwf	postinc1,c
  5455  0120FA  EC10  F0D6         	call	_StartTimer	;wreg free
  5456                           
  5457                           ;main.c: 382:    V.enter = check_enter_button(&H);
  5458  0120FE  0EF3               	movlw	_H& (0+255)
  5459  012100  6EE6               	movwf	postinc1,c
  5460  012102  EC30  F0D6         	call	_check_enter_button	;wreg free
  5461  012106  5028               	movf	btemp^0,w,c
  5462  012108  0102               	movlb	2	; () banked
  5463  01210A  6FAD               	movwf	(_V+173)& (0+255),b	;volatile
  5464                           
  5465                           ; BSR set to: 2
  5466                           ;main.c: 383:    if (V.enter && (H.hid_display != HID_AUX)) {
  5467  01210C  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  5468  01210E  B4D8               	btfsc	status,2,c
  5469  012110  D013               	goto	l12768
  5470                           
  5471                           ; BSR set to: 2
  5472  012112  0E03               	movlw	3
  5473  012114  0100               	movlb	0	; () banked
  5474  012116  19F3               	xorwf	_H& (0+255),w,b
  5475  012118  B4D8               	btfsc	status,2,c
  5476  01211A  D00E               	goto	l12768
  5477                           
  5478                           ; BSR set to: 0
  5479                           ;main.c: 384:     V.enter = 0;
  5480  01211C  0102               	movlb	2	; () banked
  5481  01211E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  5482                           
  5483                           ; BSR set to: 2
  5484                           ;main.c: 385:     V.screen = ~V.screen;
  5485  012120  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5486  012122  D002               	goto	u12190
  5487  012124  0E01               	movlw	1
  5488  012126  D001               	goto	u12196
  5489  012128                     u12190:
  5490  012128  0E00               	movlw	0
  5491  01212A                     u12196:
  5492  01212A  0AFF               	xorlw	255
  5493  01212C  6E33               	movwf	(btemp+11)^0,c
  5494  01212E  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  5495  012130  1833               	xorwf	(btemp+11)^0,w,c
  5496  012132  0BFE               	andlw	-2
  5497  012134  1833               	xorwf	(btemp+11)^0,w,c
  5498  012136  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  5499  012138                     l12768:
  5500                           
  5501                           ;main.c: 387:    set_vterm(V.screen);
  5502  012138  0102               	movlb	2	; () banked
  5503  01213A  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5504  01213C  D002               	goto	u12200
  5505  01213E  0E01               	movlw	1
  5506  012140  D001               	goto	u12206
  5507  012142                     u12200:
  5508  012142  0E00               	movlw	0
  5509  012144                     u12206:
  5510  012144  6EE6               	movwf	postinc1,c
  5511  012146  EC58  F0DA         	call	_set_vterm	;wreg free
  5512                           
  5513                           ;main.c: 388:    update_lcd(V.screen);
  5514  01214A  0102               	movlb	2	; () banked
  5515  01214C  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5516  01214E  D002               	goto	u12210
  5517  012150  0E01               	movlw	1
  5518  012152  D001               	goto	u12216
  5519  012154                     u12210:
  5520  012154  0E00               	movlw	0
  5521  012156                     u12216:
  5522  012156  6EE6               	movwf	postinc1,c
  5523  012158  ECF9  F0C8         	call	_update_lcd	;wreg free
  5524  01215C                     l12772:
  5525                           
  5526                           ;main.c: 394:   check_help(V.flipper);
  5527  01215C  0102               	movlb	2	; () banked
  5528  01215E  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5529  012160  6EE6               	movwf	postinc1,c
  5530  012162  ECD1  F0BB         	call	_check_help	;wreg free
  5531                           
  5532                           ;main.c: 396:   if (V.enter) {
  5533  012166  0102               	movlb	2	; () banked
  5534  012168  51AD               	movf	(_V+173)& (0+255),w,b	;volatile
  5535  01216A  B4D8               	btfsc	status,2,c
  5536  01216C  D062               	goto	l1356
  5537                           
  5538                           ; BSR set to: 2
  5539                           ;main.c: 397:    V.enter = 0;
  5540  01216E  6BAD               	clrf	(_V+173)& (0+255),b	;volatile
  5541                           
  5542                           ;main.c: 398:    V.calib = 0;
  5543  012170  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5544                           
  5545                           ; BSR set to: 2
  5546                           ;main.c: 399:    inp_index += 3;
  5547                           ;stkvar	_inp_index @ sp[(-13)+10]
  5548  012172  0EFD               	movlw	-3
  5549  012174  006F FF8C  F028    	movff	plusw1,btemp
  5550  01217A  0E03               	movlw	3
  5551  01217C  2628               	addwf	btemp^0,f,c
  5552  01217E  0EFD               	movlw	-3
  5553  012180  0060  F0A3  FFE3   	movff	btemp,plusw1
  5554                           
  5555                           ;main.c: 400:    if (inp_index > 9)
  5556                           ;stkvar	_inp_index @ sp[(-13)+10]
  5557  012186  0EFD               	movlw	-3
  5558  012188  006F FF8C  F028    	movff	plusw1,btemp
  5559  01218E  0E09               	movlw	9
  5560  012190  6428               	cpfsgt	btemp^0,c
  5561  012192  D03A               	goto	l12800
  5562                           
  5563                           ; BSR set to: 2
  5564                           ;main.c: 401:     inp_index = 0;
  5565                           ;stkvar	_inp_index @ sp[(-13)+10]
  5566  012194  0EFD               	movlw	-3
  5567  012196  6AE3               	clrf	plusw1,c
  5568  012198  D037               	goto	l12800
  5569  01219A                     l12782:
  5570                           
  5571                           ; BSR set to: 2
  5572                           ;main.c: 404:     i = C_BATT;
  5573                           ;stkvar	_i @ sp[(-13)+9]
  5574  01219A  0EFC               	movlw	-4
  5575  01219C  6AE3               	clrf	plusw1,c
  5576                           
  5577                           ; BSR set to: 2
  5578                           ;main.c: 405:     j = C_PV;
  5579                           ;stkvar	_j @ sp[(-13)+8]
  5580  01219E  0EFB               	movlw	-5
  5581  0121A0  6AE3               	clrf	plusw1,c
  5582  0121A2  2AE3               	incf	plusw1,f,c
  5583                           
  5584                           ; BSR set to: 2
  5585                           ;main.c: 406:     k = V_CC;
  5586                           ;stkvar	_k @ sp[(-13)+7]
  5587  0121A4  0EFA               	movlw	-6
  5588  0121A6  6AE3               	clrf	plusw1,c
  5589  0121A8  82E3               	bsf	plusw1,1,c
  5590                           
  5591                           ;main.c: 407:     break;
  5592  0121AA  D043               	goto	l1356
  5593  0121AC                     l12788:
  5594                           
  5595                           ; BSR set to: 2
  5596                           ;main.c: 409:     i = V_BAT;
  5597                           ;stkvar	_i @ sp[(-13)+9]
  5598  0121AC  0EFC               	movlw	-4
  5599  0121AE  6AE3               	clrf	plusw1,c
  5600  0121B0  84E3               	bsf	plusw1,2,c
  5601                           
  5602                           ;main.c: 410:     j = V_PV;
  5603                           ;stkvar	_j @ sp[(-13)+8]
  5604  0121B2  0EFB               	movlw	-5
  5605  0121B4  6AE3               	clrf	plusw1,c
  5606  0121B6  80E3               	bsf	plusw1,0,c
  5607  0121B8  84E3               	bsf	plusw1,2,c	;indir
  5608                           
  5609                           ;main.c: 411:     k = V_CBUS;
  5610                           ;stkvar	_k @ sp[(-13)+7]
  5611  0121BA  0EFA               	movlw	-6
  5612  0121BC  6AE3               	clrf	plusw1,c
  5613  0121BE  82E3               	bsf	plusw1,1,c
  5614  0121C0  84E3               	bsf	plusw1,2,c	;indir
  5615                           
  5616                           ;main.c: 412:     break;
  5617  0121C2  D037               	goto	l1356
  5618  0121C4                     l12790:
  5619                           
  5620                           ; BSR set to: 2
  5621                           ;main.c: 414:     i = V_BBAT;
  5622                           ;stkvar	_i @ sp[(-13)+9]
  5623  0121C4  0EFC               	movlw	-4
  5624  0121C6  6AE3               	clrf	plusw1,c
  5625  0121C8  82E3               	bsf	plusw1,1,c
  5626  0121CA  86E3               	bsf	plusw1,3,c	;indir
  5627                           
  5628                           ; BSR set to: 2
  5629                           ;main.c: 415:     j = V_TEMP;
  5630  0121CC  0E0B               	movlw	11
  5631  0121CE  6E33               	movwf	(btemp+11)^0,c
  5632                           
  5633                           ;stkvar	_j @ sp[(-13)+8]
  5634  0121D0  0EFB               	movlw	-5
  5635  0121D2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5636                           
  5637                           ; BSR set to: 2
  5638                           ;main.c: 416:     k = V_INVERTER;
  5639                           ;stkvar	_k @ sp[(-13)+7]
  5640  0121D8  0EFA               	movlw	-6
  5641  0121DA  6AE3               	clrf	plusw1,c
  5642  0121DC  84E3               	bsf	plusw1,2,c
  5643  0121DE  86E3               	bsf	plusw1,3,c	;indir
  5644                           
  5645                           ;main.c: 417:     break;
  5646  0121E0  D028               	goto	l1356
  5647  0121E2                     l12796:
  5648                           
  5649                           ; BSR set to: 2
  5650                           ;main.c: 419:     i = channel_ANB5;
  5651  0121E2  0E0D               	movlw	13
  5652  0121E4  6E33               	movwf	(btemp+11)^0,c
  5653                           
  5654                           ;stkvar	_i @ sp[(-13)+9]
  5655  0121E6  0EFC               	movlw	-4
  5656  0121E8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5657                           
  5658                           ;main.c: 420:     j = channel_ANB5;
  5659  0121EE  0E0D               	movlw	13
  5660  0121F0  6E33               	movwf	(btemp+11)^0,c
  5661                           
  5662                           ;stkvar	_j @ sp[(-13)+8]
  5663  0121F2  0EFB               	movlw	-5
  5664  0121F4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5665                           
  5666                           ;main.c: 421:     k = channel_ANB5;
  5667  0121FA  0E0D               	movlw	13
  5668  0121FC  6E33               	movwf	(btemp+11)^0,c
  5669                           
  5670                           ;stkvar	_k @ sp[(-13)+7]
  5671  0121FE  0EFA               	movlw	-6
  5672  012200  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5673                           
  5674                           ;main.c: 422:     break;
  5675  012206  D015               	goto	l1356
  5676  012208                     l12800:
  5677                           
  5678                           ; BSR set to: 2
  5679                           ;stkvar	_inp_index @ sp[(-13)+10]
  5680  012208  0EFD               	movlw	-3
  5681  01220A  50E3               	movf	plusw1,w,c
  5682  01220C  6E32               	movwf	(btemp+10)^0,c
  5683  01220E  6A33               	clrf	(btemp+11)^0,c
  5684                           
  5685                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5686                           ; Switch size 1, requested type "simple"
  5687                           ; Number of cases is 1, Range of values is 0 to 0
  5688                           ; switch strategies available:
  5689                           ; Name         Instructions Cycles
  5690                           ; simple_byte            4     3 (average)
  5691                           ;	Chosen strategy is simple_byte
  5692  012210  5033               	movf	(btemp+11)^0,w,c
  5693  012212  0A00               	xorlw	0	; case 0
  5694  012214  A4D8               	btfss	status,2,c
  5695  012216  D00D               	goto	l1356
  5696                           
  5697                           ; BSR set to: 2
  5698                           ; Switch size 1, requested type "simple"
  5699                           ; Number of cases is 4, Range of values is 0 to 9
  5700                           ; switch strategies available:
  5701                           ; Name         Instructions Cycles
  5702                           ; simple_byte           13     7 (average)
  5703                           ;	Chosen strategy is simple_byte
  5704  012218  5032               	movf	(btemp+10)^0,w,c
  5705  01221A  0A00               	xorlw	0	; case 0
  5706  01221C  B4D8               	btfsc	status,2,c
  5707  01221E  D7BD               	goto	l12782
  5708  012220  0A03               	xorlw	3	; case 3
  5709  012222  B4D8               	btfsc	status,2,c
  5710  012224  D7C3               	goto	l12788
  5711  012226  0A05               	xorlw	5	; case 6
  5712  012228  B4D8               	btfsc	status,2,c
  5713  01222A  D7CC               	goto	l12790
  5714  01222C  0A0F               	xorlw	15	; case 9
  5715  01222E  B4D8               	btfsc	status,2,c
  5716  012230  D7D8               	goto	l12796
  5717  012232                     l1356:
  5718                           
  5719                           ; BSR set to: 2
  5720                           ;main.c: 431:   if (V.set_sequ) {
  5721  012232  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5722  012234  EF6F  F08C         	goto	l12704
  5723                           
  5724                           ; BSR set to: 2
  5725                           ;main.c: 432:    if (TimerDone(TMR_INFO)) {
  5726  012238  0E07               	movlw	7
  5727  01223A  6EE6               	movwf	postinc1,c
  5728  01223C  EC91  F0D8         	call	_TimerDone	;wreg free
  5729  012240  5028               	movf	btemp^0,w,c
  5730  012242  B4D8               	btfsc	status,2,c
  5731  012244  D00C               	goto	l12810
  5732                           
  5733                           ;main.c: 433:     V.set_sequ = 0;
  5734  012246  0102               	movlb	2	; () banked
  5735  012248  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5736                           
  5737                           ; BSR set to: 2
  5738                           ;main.c: 434:     set_vterm(0);
  5739  01224A  0E00               	movlw	0
  5740  01224C  6EE6               	movwf	postinc1,c
  5741  01224E  EC58  F0DA         	call	_set_vterm	;wreg free
  5742                           
  5743                           ;main.c: 435:     update_lcd(0);
  5744  012252  0E00               	movlw	0
  5745  012254  6EE6               	movwf	postinc1,c
  5746  012256  ECF9  F0C8         	call	_update_lcd	;wreg free
  5747                           
  5748                           ;main.c: 436:    } else {
  5749  01225A  EF6F  F08C         	goto	l12704
  5750  01225E                     l12810:
  5751                           
  5752                           ;main.c: 437:     set_vterm(2);
  5753  01225E  0E02               	movlw	2
  5754  012260  6EE6               	movwf	postinc1,c
  5755  012262  EC58  F0DA         	call	_set_vterm	;wreg free
  5756                           
  5757                           ;main.c: 438:     update_lcd(2);
  5758  012266  0E02               	movlw	2
  5759  012268  6EE6               	movwf	postinc1,c
  5760  01226A  ECF9  F0C8         	call	_update_lcd	;wreg free
  5761  01226E  EF6F  F08C         	goto	l12704
  5762  012272                     __end_of_main:
  5763                           	opt callstack 0
  5764                           
  5765 ;; *************** function _static_soc *****************
  5766 ;; Defined at:
  5767 ;;		line 116 in file "mbmc.c"
  5768 ;; Parameters:    Size  Location     Type
  5769 ;;		None
  5770 ;; Auto vars:     Size  Location     Type
  5771 ;;		None
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  1  [STACK] void 
  5774 ;; Registers used:
  5775 ;;		wreg, status,2
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 3F/1
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5785 ;;Total ram usage:        0 bytes
  5786 ;; Hardware stack levels used:    1
  5787 ;; Hardware stack levels required when called:   15
  5788 ;; This function calls:
  5789 ;;		Nothing
  5790 ;; This function is called by:
  5791 ;;		_main
  5792 ;; This function uses a reentrant model
  5793 ;;
  5794                           
  5795                           	psect	text1
  5796  01B354                     __ptext1:
  5797                           	opt callstack 0
  5798  01B354                     _static_soc:
  5799                           	opt callstack 15
  5800                           
  5801                           ;mbmc.c: 118:  C.runtime = 120;
  5802                           
  5803                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5804                           ;incstack = 0
  5805  01B354  0E00               	movlw	0
  5806  01B356  0101               	movlb	1	; () banked
  5807  01B358  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
  5808  01B35A  0E78               	movlw	120
  5809  01B35C  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
  5810                           
  5811                           ;mbmc.c: 119:  C.soc = 100;
  5812  01B35E  0E00               	movlw	0
  5813  01B360  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
  5814  01B362  0E64               	movlw	100
  5815  01B364  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
  5816                           
  5817                           ; BSR set to: 1
  5818                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5819  01B366  C188  F18C         	movff	_C+136,_C+140	;volatile
  5820  01B36A  C189  F18D         	movff	_C+137,_C+141	;volatile
  5821  01B36E  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5822  01B372  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5823                           
  5824                           ; BSR set to: 1
  5825                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5826  01B376  0012               	return		;funcret
  5827  01B378                     __end_of_static_soc:
  5828                           	opt callstack 0
  5829                           
  5830 ;; *************** function _start_switch_handler *****************
  5831 ;; Defined at:
  5832 ;;		line 121 in file "dio.c"
  5833 ;; Parameters:    Size  Location     Type
  5834 ;;		None
  5835 ;; Auto vars:     Size  Location     Type
  5836 ;;		None
  5837 ;; Return value:  Size  Location     Type
  5838 ;;                  1  [STACK] void 
  5839 ;; Registers used:
  5840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5841 ;; Tracked objects:
  5842 ;;		On entry : 1/0
  5843 ;;		On exit  : 3F/39
  5844 ;;		Unchanged: 0/0
  5845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5846 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5847 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5849 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5850 ;;Total ram usage:        0 bytes
  5851 ;; Hardware stack levels used:    1
  5852 ;; Hardware stack levels required when called:   16
  5853 ;; This function calls:
  5854 ;;		_INT1_SetInterruptHandler
  5855 ;; This function is called by:
  5856 ;;		_main
  5857 ;; This function uses a reentrant model
  5858 ;;
  5859                           
  5860                           	psect	text2
  5861  01B472                     __ptext2:
  5862                           	opt callstack 0
  5863  01B472                     _start_switch_handler:
  5864                           	opt callstack 14
  5865                           
  5866                           ;dio.c: 123:  (PIE5bits.INT1IE = 0);
  5867                           
  5868                           ; BSR set to: 1
  5869                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5870                           ;incstack = 0
  5871  01B472  0139               	movlb	57	; () banked
  5872  01B474  9195               	bcf	149,0,b	;volatile
  5873                           
  5874                           ; BSR set to: 57
  5875                           ;dio.c: 124:  INT1_SetInterruptHandler(switch_handler);
  5876  01B476  0E34               	movlw	low _switch_handler
  5877  01B478  6EE6               	movwf	postinc1,c
  5878  01B47A  0E8C               	movlw	high _switch_handler
  5879  01B47C  6EE6               	movwf	postinc1,c
  5880  01B47E  0E01               	movlw	low (_switch_handler shr (0+16))
  5881  01B480  6EE6               	movwf	postinc1,c
  5882  01B482  EC1D  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
  5883                           
  5884                           ;dio.c: 125:  S.button[SNULL].sw = SW_INVALID;
  5885  01B486  0E02               	movlw	2
  5886  01B488  0102               	movlb	2	; () banked
  5887  01B48A  6FE1               	movwf	(_S+35)& (0+255),b	;volatile
  5888                           
  5889                           ; BSR set to: 2
  5890                           ;dio.c: 126:  (PIE5bits.INT1IE = 1);
  5891  01B48C  0139               	movlb	57	; () banked
  5892  01B48E  8195               	bsf	149,0,b	;volatile
  5893                           
  5894                           ; BSR set to: 57
  5895                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5896  01B490  0012               	return		;funcret
  5897  01B492                     __end_of_start_switch_handler:
  5898                           	opt callstack 0
  5899                           
  5900 ;; *************** function _srand *****************
  5901 ;; Defined at:
  5902 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5903 ;; Parameters:    Size  Location     Type
  5904 ;;  s               2  [STACK] unsigned int 
  5905 ;; Auto vars:     Size  Location     Type
  5906 ;;		None
  5907 ;; Return value:  Size  Location     Type
  5908 ;;                  1  [STACK] void 
  5909 ;; Registers used:
  5910 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5911 ;; Tracked objects:
  5912 ;;		On entry : 0/0
  5913 ;;		On exit  : 3F/1
  5914 ;;		Unchanged: 0/0
  5915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5920 ;;Total ram usage:        0 bytes
  5921 ;; Hardware stack levels used:    1
  5922 ;; Hardware stack levels required when called:   15
  5923 ;; This function calls:
  5924 ;;		Nothing
  5925 ;; This function is called by:
  5926 ;;		_main
  5927 ;; This function uses a reentrant model
  5928 ;;
  5929                           
  5930                           	psect	text3
  5931  01AE72                     __ptext3:
  5932                           	opt callstack 0
  5933  01AE72                     _srand:
  5934                           	opt callstack 15
  5935                           
  5936                           ;stkvar	_s @ sp[(0)+-2]
  5937                           
  5938                           ; BSR set to: 57
  5939                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5940                           ;incstack = 0
  5941  01AE72  0EFE               	movlw	-2
  5942  01AE74  50E3               	movf	plusw1,w,c
  5943  01AE76  0FFF               	addlw	255
  5944  01AE78  6E32               	movwf	(btemp+10)^0,c
  5945  01AE7A  0EFF               	movlw	-1
  5946  01AE7C  006F FF8C  F033    	movff	plusw1,btemp+11
  5947  01AE82  0EFF               	movlw	255
  5948  01AE84  2233               	addwfc	(btemp+11)^0,f,c
  5949  01AE86  0060  F0C8  F1F7   	movff	btemp+10,_seed
  5950  01AE8C  0060  F0CC  F1F8   	movff	btemp+11,_seed+1
  5951  01AE92  0101               	movlb	1	; () banked
  5952  01AE94  6BF9               	clrf	(_seed+2)& (0+255),b
  5953  01AE96  6BFA               	clrf	(_seed+3)& (0+255),b
  5954  01AE98  6BFB               	clrf	(_seed+4)& (0+255),b
  5955  01AE9A  6BFC               	clrf	(_seed+5)& (0+255),b
  5956  01AE9C  6BFD               	clrf	(_seed+6)& (0+255),b
  5957  01AE9E  6BFE               	clrf	(_seed+7)& (0+255),b
  5958                           
  5959                           ; BSR set to: 1
  5960                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5961  01AEA0  52E5               	movf	postdec1,f,c
  5962  01AEA2  52E5               	movf	postdec1,f,c
  5963  01AEA4  0012               	return		;funcret
  5964  01AEA6                     __end_of_srand:
  5965                           	opt callstack 0
  5966                           
  5967 ;; *************** function _spinners *****************
  5968 ;; Defined at:
  5969 ;;		line 134 in file "mbmc.c"
  5970 ;; Parameters:    Size  Location     Type
  5971 ;;  shape           1  [STACK] unsigned char 
  5972 ;;  reset           1  [STACK] unsigned char 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  c               1  [STACK] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1  [STACK] unsigned char 
  5977 ;; Registers used:
  5978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5984 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5985 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5987 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5988 ;;Total ram usage:        0 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:   16
  5991 ;; This function calls:
  5992 ;;		_strlen
  5993 ;; This function is called by:
  5994 ;;		_main
  5995 ;; This function uses a reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text4
  5999  0197FE                     __ptext4:
  6000                           	opt callstack 0
  6001  0197FE                     _spinners:
  6002                           	opt callstack 0
  6003                           
  6004                           ; BSR set to: 1
  6005                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6006  0197FE  52E6               	movf	postinc1,f,c
  6007                           
  6008                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1))
  6009                           ;stkvar	_shape @ sp[(-1)+-1]
  6010                           
  6011                           ;incstack = 0
  6012  019800  0EFE               	movlw	-2
  6013  019802  006F FF8C  F028    	movff	plusw1,btemp
  6014  019808  0E05               	movlw	5
  6015  01980A  6428               	cpfsgt	btemp^0,c
  6016  01980C  D002               	goto	l1866
  6017                           
  6018                           ;mbmc.c: 140:   shape = 0;
  6019                           ;stkvar	_shape @ sp[(-1)+-1]
  6020  01980E  0EFE               	movlw	-2
  6021  019810  6AE3               	clrf	plusw1,c
  6022  019812                     l1866:
  6023                           
  6024                           ;mbmc.c: 141:  if (reset)
  6025                           ;stkvar	_reset @ sp[(-1)+-2]
  6026  019812  0EFD               	movlw	-3
  6027  019814  50E3               	movf	plusw1,w,c
  6028  019816  B4D8               	btfsc	status,2,c
  6029  019818  D00A               	goto	l10560
  6030                           
  6031                           ;mbmc.c: 142:   s[shape] = 0;
  6032                           ;stkvar	_shape @ sp[(-1)+-1]
  6033  01981A  0EFE               	movlw	-2
  6034  01981C  006F FF8C  F033    	movff	plusw1,btemp+11
  6035  019822  5033               	movf	(btemp+11)^0,w,c
  6036  019824  0F74               	addlw	low spinners@s
  6037  019826  6ED9               	movwf	fsr2l,c
  6038  019828  6ADA               	clrf	fsr2h,c
  6039  01982A  0E00               	movlw	0
  6040  01982C  6EDF               	movwf	indf2,c
  6041  01982E                     l10560:
  6042                           
  6043                           ;mbmc.c: 143:  c = spin[shape][s[shape]];
  6044                           ;stkvar	_shape @ sp[(-1)+-1]
  6045  01982E  0EFE               	movlw	-2
  6046  019830  50E3               	movf	plusw1,w,c
  6047  019832  0D14               	mullw	20
  6048  019834  0EDB               	movlw	low _spin
  6049  019836  6E32               	movwf	(btemp+10)^0,c
  6050  019838  0EFB               	movlw	high _spin
  6051  01983A  6E33               	movwf	(btemp+11)^0,c
  6052  01983C  50F3               	movf	243,w,c
  6053  01983E  2632               	addwf	(btemp+10)^0,f,c
  6054  019840  50F4               	movf	244,w,c
  6055  019842  2233               	addwfc	(btemp+11)^0,f,c
  6056                           
  6057                           ;stkvar	_shape @ sp[(-1)+-1]
  6058  019844  0EFE               	movlw	-2
  6059  019846  006F FF8C  F031    	movff	plusw1,btemp+9
  6060  01984C  5031               	movf	(btemp+9)^0,w,c
  6061  01984E  0F74               	addlw	low spinners@s
  6062  019850  6ED9               	movwf	fsr2l,c
  6063  019852  6ADA               	clrf	fsr2h,c
  6064  019854  50DF               	movf	indf2,w,c
  6065  019856  2632               	addwf	(btemp+10)^0,f,c
  6066  019858  0E00               	movlw	0
  6067  01985A  2233               	addwfc	(btemp+11)^0,f,c
  6068  01985C  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
  6069  019862  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
  6070  019868                     	if	0	;tblptru may be non-zero
  6071  019868                     	endif
  6072  019868                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6073  019868  0E00               	movlw	low (__mediumconst shr (0+16))
  6074  01986A  6EF8               	movwf	tblptru,c
  6075  01986C                     	endif
  6076                           
  6077                           ;stkvar	_c @ sp[(-1)+0]
  6078  01986C  0008               	tblrd		*
  6079  01986E  0EFF               	movlw	-1
  6080  019870  006F FFD7 FFE3     	movff	tablat,plusw1
  6081                           
  6082                           ;mbmc.c: 144:  if (++s[shape] >= strlen(spin[shape]))
  6083                           ;stkvar	_shape @ sp[(-1)+-1]
  6084  019876  0EFE               	movlw	-2
  6085  019878  50E3               	movf	plusw1,w,c
  6086  01987A  0D14               	mullw	20
  6087  01987C  0EDB               	movlw	low _spin
  6088  01987E  6E32               	movwf	(btemp+10)^0,c
  6089  019880  0EFB               	movlw	high _spin
  6090  019882  6E33               	movwf	(btemp+11)^0,c
  6091  019884  50F3               	movf	243,w,c
  6092  019886  2632               	addwf	(btemp+10)^0,f,c
  6093  019888  50F4               	movf	244,w,c
  6094  01988A  2233               	addwfc	(btemp+11)^0,f,c
  6095  01988C  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  6096  019892  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  6097  019898  EC4E  F0CF         	call	_strlen	;wreg free
  6098                           
  6099                           ;stkvar	_shape @ sp[(-1)+-1]
  6100  01989C  0EFE               	movlw	-2
  6101  01989E  006F FF8C  F033    	movff	plusw1,btemp+11
  6102  0198A4  5033               	movf	(btemp+11)^0,w,c
  6103  0198A6  0F74               	addlw	low spinners@s
  6104  0198A8  6ED9               	movwf	fsr2l,c
  6105  0198AA  6ADA               	clrf	fsr2h,c
  6106  0198AC  2ADF               	incf	indf2,f,c
  6107  0198AE  50DF               	movf	indf2,w,c
  6108  0198B0  6E32               	movwf	(btemp+10)^0,c
  6109  0198B2  6A33               	clrf	(btemp+11)^0,c
  6110  0198B4  5028               	movf	btemp^0,w,c
  6111  0198B6  5C32               	subwf	(btemp+10)^0,w,c
  6112  0198B8  5029               	movf	(btemp+1)^0,w,c
  6113  0198BA  5833               	subwfb	(btemp+11)^0,w,c
  6114  0198BC  A0D8               	btfss	status,0,c
  6115  0198BE  D00A               	goto	l10566
  6116                           
  6117                           ;mbmc.c: 145:   s[shape] = 0;
  6118                           ;stkvar	_shape @ sp[(-1)+-1]
  6119  0198C0  0EFE               	movlw	-2
  6120  0198C2  006F FF8C  F033    	movff	plusw1,btemp+11
  6121  0198C8  5033               	movf	(btemp+11)^0,w,c
  6122  0198CA  0F74               	addlw	low spinners@s
  6123  0198CC  6ED9               	movwf	fsr2l,c
  6124  0198CE  6ADA               	clrf	fsr2h,c
  6125  0198D0  0E00               	movlw	0
  6126  0198D2  6EDF               	movwf	indf2,c
  6127  0198D4                     l10566:
  6128                           
  6129                           ;mbmc.c: 146:  return c;
  6130                           ;stkvar	_c @ sp[(-1)+0]
  6131  0198D4  0EFF               	movlw	-1
  6132  0198D6  006F FF8C  F028    	movff	plusw1,btemp
  6133                           
  6134                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6135  0198DC  52E5               	movf	postdec1,f,c
  6136  0198DE  52E5               	movf	postdec1,f,c
  6137  0198E0  52E5               	movf	postdec1,f,c
  6138  0198E2  0012               	return		;funcret
  6139  0198E4                     __end_of_spinners:
  6140                           	opt callstack 0
  6141                           
  6142 ;; *************** function _init_port_dma *****************
  6143 ;; Defined at:
  6144 ;;		line 90 in file "eadog.c"
  6145 ;; Parameters:    Size  Location     Type
  6146 ;;		None
  6147 ;; Auto vars:     Size  Location     Type
  6148 ;;		None
  6149 ;; Return value:  Size  Location     Type
  6150 ;;                  1  [STACK] void 
  6151 ;; Registers used:
  6152 ;;		wreg, status,2
  6153 ;; Tracked objects:
  6154 ;;		On entry : 0/2
  6155 ;;		On exit  : 3F/3B
  6156 ;;		Unchanged: 0/0
  6157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6161 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6162 ;;Total ram usage:        0 bytes
  6163 ;; Hardware stack levels used:    1
  6164 ;; Hardware stack levels required when called:   15
  6165 ;; This function calls:
  6166 ;;		Nothing
  6167 ;; This function is called by:
  6168 ;;		_main
  6169 ;; This function uses a reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text5
  6173  01AF0E                     __ptext5:
  6174                           	opt callstack 0
  6175  01AF0E                     _init_port_dma:
  6176                           	opt callstack 15
  6177                           
  6178                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6179                           
  6180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6181                           ;incstack = 0
  6182  01AF0E  0E3F               	movlw	-193
  6183  01AF10  013B               	movlb	59	; () banked
  6184  01AF12  17DD               	andwf	221,f,b	;volatile
  6185                           
  6186                           ; BSR set to: 59
  6187                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6188  01AF14  9BDD               	bcf	221,5,b	;volatile
  6189                           
  6190                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6191  01AF16  51DD               	movf	221,w,b	;volatile
  6192  01AF18  0BF9               	andlw	-7
  6193  01AF1A  0902               	iorlw	2
  6194  01AF1C  6FDD               	movwf	221,b	;volatile
  6195                           
  6196                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6197  01AF1E  0EE7               	movlw	-25
  6198  01AF20  17DD               	andwf	221,f,b	;volatile
  6199                           
  6200                           ; BSR set to: 59
  6201                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6202  01AF22  81DD               	bsf	221,0,b	;volatile
  6203                           
  6204                           ; BSR set to: 59
  6205                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6206  01AF24  9DDC               	bcf	220,6,b	;volatile
  6207                           
  6208                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6209  01AF26  0E3D               	movlw	61
  6210  01AF28  6FD1               	movwf	209,b	;volatile
  6211  01AF2A  0EEA               	movlw	234
  6212  01AF2C  6FD0               	movwf	208,b	;volatile
  6213                           
  6214                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6215  01AF2E  0EFF               	movlw	low _port_data
  6216  01AF30  6FD9               	movwf	217,b	;volatile
  6217  01AF32  0E05               	movlw	high _port_data
  6218  01AF34  6FDA               	movwf	218,b	;volatile
  6219  01AF36  0E00               	movlw	low (_port_data shr (0+16))
  6220  01AF38  6FDB               	movwf	219,b	;volatile
  6221                           
  6222                           ; BSR set to: 59
  6223                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6224  01AF3A  9BDC               	bcf	220,5,b	;volatile
  6225                           
  6226                           ; BSR set to: 59
  6227                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6228  01AF3C  0012               	return		;funcret
  6229  01AF3E                     __end_of_init_port_dma:
  6230                           	opt callstack 0
  6231                           
  6232 ;; *************** function _init_display *****************
  6233 ;; Defined at:
  6234 ;;		line 38 in file "eadog.c"
  6235 ;; Parameters:    Size  Location     Type
  6236 ;;		None
  6237 ;; Auto vars:     Size  Location     Type
  6238 ;;		None
  6239 ;; Return value:  Size  Location     Type
  6240 ;;                  1  [STACK] void 
  6241 ;; Registers used:
  6242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6243 ;; Tracked objects:
  6244 ;;		On entry : 3F/3B
  6245 ;;		On exit  : 3F/3D
  6246 ;;		Unchanged: 0/0
  6247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6252 ;;Total ram usage:        0 bytes
  6253 ;; Hardware stack levels used:    1
  6254 ;; Hardware stack levels required when called:   17
  6255 ;; This function calls:
  6256 ;;		_ringBufS_init
  6257 ;;		_send_lcd_cmd
  6258 ;;		_send_lcd_cmd_long
  6259 ;;		_wdtdelay
  6260 ;; This function is called by:
  6261 ;;		_main
  6262 ;; This function uses a reentrant model
  6263 ;;
  6264                           
  6265                           	psect	text6
  6266  019714                     __ptext6:
  6267                           	opt callstack 0
  6268  019714                     _init_display:
  6269                           	opt callstack 13
  6270                           
  6271                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6272                           
  6273                           ; BSR set to: 59
  6274                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6275                           ;incstack = 0
  6276  019714  0E43               	movlw	low _ring_buf1
  6277  019716  0100               	movlb	0	; () banked
  6278  019718  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6279  01971A  0E04               	movlw	high _ring_buf1
  6280  01971C  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6281                           
  6282                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6283  01971E  0E00               	movlw	low _ring_buf2
  6284  019720  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6285  019722  0E04               	movlw	high _ring_buf2
  6286  019724  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6290  019726  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6291  01972C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6292  019732  EC7D  F0D8         	call	_ringBufS_init	;wreg free
  6293                           
  6294                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6295  019736  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6296  01973C  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6297  019742  EC7D  F0D8         	call	_ringBufS_init	;wreg free
  6298                           
  6299                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6300  019746  84BE               	bsf	190,2,c	;volatile
  6301  019748  84BC               	bsf	188,2,c	;volatile
  6302                           
  6303                           ;eadog.c: 59:  wdtdelay(350000);
  6304  01974A  0E30               	movlw	48
  6305  01974C  6EE6               	movwf	postinc1,c
  6306  01974E  0E57               	movlw	87
  6307  019750  6EE6               	movwf	postinc1,c
  6308  019752  0E05               	movlw	5
  6309  019754  6EE6               	movwf	postinc1,c
  6310  019756  0E00               	movlw	0
  6311  019758  6EE6               	movwf	postinc1,c
  6312  01975A  ECAB  F0D3         	call	_wdtdelay	;wreg free
  6313                           
  6314                           ; BSR set to: 0
  6315                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6316  01975E  0E39               	movlw	57
  6317  019760  6EE6               	movwf	postinc1,c
  6318  019762  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6322  019766  0E1D               	movlw	29
  6323  019768  6EE6               	movwf	postinc1,c
  6324  01976A  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6325                           
  6326                           ; BSR set to: 0
  6327                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6328  01976E  0E50               	movlw	80
  6329  019770  6EE6               	movwf	postinc1,c
  6330  019772  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6331                           
  6332                           ; BSR set to: 0
  6333                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6334  019776  0E6C               	movlw	108
  6335  019778  6EE6               	movwf	postinc1,c
  6336  01977A  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6337                           
  6338                           ; BSR set to: 0
  6339                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6340  01977E  0E76               	movlw	118
  6341  019780  6EE6               	movwf	postinc1,c
  6342  019782  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6343                           
  6344                           ; BSR set to: 0
  6345                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6346  019786  0E38               	movlw	56
  6347  019788  6EE6               	movwf	postinc1,c
  6348  01978A  EC55  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6349                           
  6350                           ; BSR set to: 0
  6351                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6352  01978E  0E0F               	movlw	15
  6353  019790  6EE6               	movwf	postinc1,c
  6354  019792  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6355                           
  6356                           ; BSR set to: 0
  6357                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6358  019796  0E01               	movlw	1
  6359  019798  6EE6               	movwf	postinc1,c
  6360  01979A  EC55  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6361                           
  6362                           ; BSR set to: 0
  6363                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6364  01979E  0E02               	movlw	2
  6365  0197A0  6EE6               	movwf	postinc1,c
  6366  0197A2  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6367                           
  6368                           ; BSR set to: 0
  6369                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6370  0197A6  0E06               	movlw	6
  6371  0197A8  6EE6               	movwf	postinc1,c
  6372  0197AA  EC69  F0D8         	call	_send_lcd_cmd	;wreg free
  6373                           
  6374                           ; BSR set to: 0
  6375                           ;eadog.c: 70:  wdtdelay(30);
  6376  0197AE  0E1E               	movlw	30
  6377  0197B0  6EE6               	movwf	postinc1,c
  6378  0197B2  0E00               	movlw	0
  6379  0197B4  6EE6               	movwf	postinc1,c
  6380  0197B6  0E00               	movlw	0
  6381  0197B8  6EE6               	movwf	postinc1,c
  6382  0197BA  0E00               	movlw	0
  6383  0197BC  6EE6               	movwf	postinc1,c
  6384  0197BE  ECAB  F0D3         	call	_wdtdelay	;wreg free
  6385                           
  6386                           ; BSR set to: 0
  6387                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6388  0197C2  0E02               	movlw	2
  6389  0197C4  013D               	movlb	61	; () banked
  6390  0197C6  6F16               	movwf	22,b	;volatile
  6391                           
  6392                           ; BSR set to: 61
  6393                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6394  0197C8  0E40               	movlw	64
  6395  0197CA  6F15               	movwf	21,b	;volatile
  6396                           
  6397                           ; BSR set to: 61
  6398                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6399  0197CC  0E83               	movlw	131
  6400  0197CE  6F14               	movwf	20,b	;volatile
  6401                           
  6402                           ; BSR set to: 61
  6403                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6404  0197D0  931A               	bcf	26,1,b	;volatile
  6405                           
  6406                           ; BSR set to: 61
  6407                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6408  0197D2  0E3F               	movlw	-193
  6409  0197D4  013B               	movlb	59	; () banked
  6410  0197D6  17FD               	andwf	253,f,b	;volatile
  6411                           
  6412                           ; BSR set to: 59
  6413                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6414  0197D8  9BFD               	bcf	253,5,b	;volatile
  6415                           
  6416                           ; BSR set to: 59
  6417                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6418  0197DA  51FD               	movf	253,w,b	;volatile
  6419  0197DC  0BF9               	andlw	-7
  6420  0197DE  0902               	iorlw	2
  6421  0197E0  6FFD               	movwf	253,b	;volatile
  6422                           
  6423                           ; BSR set to: 59
  6424                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6425  0197E2  0EE7               	movlw	-25
  6426  0197E4  17FD               	andwf	253,f,b	;volatile
  6427                           
  6428                           ; BSR set to: 59
  6429                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6430  0197E6  81FD               	bsf	253,0,b	;volatile
  6431                           
  6432                           ; BSR set to: 59
  6433                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6434  0197E8  0E43               	movlw	low _ring_buf1
  6435  0197EA  6FF9               	movwf	249,b	;volatile
  6436  0197EC  0E04               	movlw	high _ring_buf1
  6437  0197EE  6FFA               	movwf	250,b	;volatile
  6438  0197F0  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6439  0197F2  6FFB               	movwf	251,b	;volatile
  6440                           
  6441                           ; BSR set to: 59
  6442                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6443  0197F4  9BFC               	bcf	252,5,b	;volatile
  6444                           
  6445                           ; BSR set to: 59
  6446                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6447  0197F6  013D               	movlb	61	; () banked
  6448  0197F8  831A               	bsf	26,1,b	;volatile
  6449                           
  6450                           ; BSR set to: 61
  6451                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6452  0197FA  94BE               	bcf	190,2,c	;volatile
  6453                           
  6454                           ; BSR set to: 61
  6455                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6456  0197FC  0012               	return		;funcret
  6457  0197FE                     __end_of_init_display:
  6458                           	opt callstack 0
  6459                           
  6460 ;; *************** function _send_lcd_cmd_long *****************
  6461 ;; Defined at:
  6462 ;;		line 129 in file "eadog.c"
  6463 ;; Parameters:    Size  Location     Type
  6464 ;;  cmd             1  [STACK] const unsigned char 
  6465 ;; Auto vars:     Size  Location     Type
  6466 ;;		None
  6467 ;; Return value:  Size  Location     Type
  6468 ;;                  1  [STACK] void 
  6469 ;; Registers used:
  6470 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6471 ;; Tracked objects:
  6472 ;;		On entry : 3F/0
  6473 ;;		On exit  : 3F/0
  6474 ;;		Unchanged: 0/0
  6475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6480 ;;Total ram usage:        0 bytes
  6481 ;; Hardware stack levels used:    1
  6482 ;; Hardware stack levels required when called:   16
  6483 ;; This function calls:
  6484 ;;		_SPI1_Exchange8bit
  6485 ;;		_wdtdelay
  6486 ;; This function is called by:
  6487 ;;		_init_display
  6488 ;; This function uses a reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text7
  6492  01B0AA                     __ptext7:
  6493                           	opt callstack 0
  6494  01B0AA                     _send_lcd_cmd_long:
  6495                           	opt callstack 13
  6496                           
  6497                           ; BSR set to: 61
  6498                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6499                           ;incstack = 0
  6500                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6501  01B0AA  92BC               	bcf	188,1,c	;volatile
  6502                           
  6503                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6504  01B0AC  94BC               	bcf	188,2,c	;volatile
  6505                           
  6506                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6507                           ;stkvar	_cmd @ sp[(0)+-1]
  6508  01B0AE  0EFF               	movlw	-1
  6509  01B0B0  50E3               	movf	plusw1,w,c
  6510  01B0B2  6EE6               	movwf	postinc1,c
  6511  01B0B4  EC49  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6512                           
  6513                           ; BSR set to: 57
  6514                           ;eadog.c: 134:  wdtdelay(800);
  6515  01B0B8  0E20               	movlw	32
  6516  01B0BA  6EE6               	movwf	postinc1,c
  6517  01B0BC  0E03               	movlw	3
  6518  01B0BE  6EE6               	movwf	postinc1,c
  6519  01B0C0  0E00               	movlw	0
  6520  01B0C2  6EE6               	movwf	postinc1,c
  6521  01B0C4  0E00               	movlw	0
  6522  01B0C6  6EE6               	movwf	postinc1,c
  6523  01B0C8  ECAB  F0D3         	call	_wdtdelay	;wreg free
  6524                           
  6525                           ; BSR set to: 0
  6526  01B0CC  82BC               	bsf	188,1,c	;volatile
  6527                           
  6528                           ; BSR set to: 0
  6529                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6530  01B0CE  52E5               	movf	postdec1,f,c
  6531  01B0D0  0012               	return		;funcret
  6532  01B0D2                     __end_of_send_lcd_cmd_long:
  6533                           	opt callstack 0
  6534                           
  6535 ;; *************** function _send_lcd_cmd *****************
  6536 ;; Defined at:
  6537 ;;		line 117 in file "eadog.c"
  6538 ;; Parameters:    Size  Location     Type
  6539 ;;  cmd             1  [STACK] const unsigned char 
  6540 ;; Auto vars:     Size  Location     Type
  6541 ;;		None
  6542 ;; Return value:  Size  Location     Type
  6543 ;;                  1  [STACK] void 
  6544 ;; Registers used:
  6545 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6546 ;; Tracked objects:
  6547 ;;		On entry : 3F/0
  6548 ;;		On exit  : 3F/0
  6549 ;;		Unchanged: 0/0
  6550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6555 ;;Total ram usage:        0 bytes
  6556 ;; Hardware stack levels used:    1
  6557 ;; Hardware stack levels required when called:   16
  6558 ;; This function calls:
  6559 ;;		_SPI1_Exchange8bit
  6560 ;;		_wdtdelay
  6561 ;; This function is called by:
  6562 ;;		_init_display
  6563 ;; This function uses a reentrant model
  6564 ;;
  6565                           
  6566                           	psect	text8
  6567  01B0D2                     __ptext8:
  6568                           	opt callstack 0
  6569  01B0D2                     _send_lcd_cmd:
  6570                           	opt callstack 13
  6571                           
  6572                           ; BSR set to: 0
  6573                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6574                           ;incstack = 0
  6575                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6576  01B0D2  92BC               	bcf	188,1,c	;volatile
  6577                           
  6578                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6579  01B0D4  94BC               	bcf	188,2,c	;volatile
  6580                           
  6581                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6582                           ;stkvar	_cmd @ sp[(0)+-1]
  6583  01B0D6  0EFF               	movlw	-1
  6584  01B0D8  50E3               	movf	plusw1,w,c
  6585  01B0DA  6EE6               	movwf	postinc1,c
  6586  01B0DC  EC49  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6587                           
  6588                           ; BSR set to: 57
  6589                           ;eadog.c: 122:  wdtdelay(30);
  6590  01B0E0  0E1E               	movlw	30
  6591  01B0E2  6EE6               	movwf	postinc1,c
  6592  01B0E4  0E00               	movlw	0
  6593  01B0E6  6EE6               	movwf	postinc1,c
  6594  01B0E8  0E00               	movlw	0
  6595  01B0EA  6EE6               	movwf	postinc1,c
  6596  01B0EC  0E00               	movlw	0
  6597  01B0EE  6EE6               	movwf	postinc1,c
  6598  01B0F0  ECAB  F0D3         	call	_wdtdelay	;wreg free
  6599                           
  6600                           ; BSR set to: 0
  6601  01B0F4  82BC               	bsf	188,1,c	;volatile
  6602                           
  6603                           ; BSR set to: 0
  6604                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6605  01B0F6  52E5               	movf	postdec1,f,c
  6606  01B0F8  0012               	return		;funcret
  6607  01B0FA                     __end_of_send_lcd_cmd:
  6608                           	opt callstack 0
  6609                           
  6610 ;; *************** function _SPI1_Exchange8bit *****************
  6611 ;; Defined at:
  6612 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  data            1  [STACK] unsigned char 
  6615 ;; Auto vars:     Size  Location     Type
  6616 ;;		None
  6617 ;; Return value:  Size  Location     Type
  6618 ;;                  1  [STACK] unsigned char 
  6619 ;; Registers used:
  6620 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6621 ;; Tracked objects:
  6622 ;;		On entry : 0/0
  6623 ;;		On exit  : 3F/39
  6624 ;;		Unchanged: 0/0
  6625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6628 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6629 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6630 ;;Total ram usage:        0 bytes
  6631 ;; Hardware stack levels used:    1
  6632 ;; Hardware stack levels required when called:   15
  6633 ;; This function calls:
  6634 ;;		Nothing
  6635 ;; This function is called by:
  6636 ;;		_send_lcd_cmd
  6637 ;;		_send_lcd_cmd_long
  6638 ;; This function uses a reentrant model
  6639 ;;
  6640                           
  6641                           	psect	text9
  6642  01B492                     __ptext9:
  6643                           	opt callstack 0
  6644  01B492                     _SPI1_Exchange8bit:
  6645                           	opt callstack 13
  6646                           
  6647                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6648                           
  6649                           ; BSR set to: 0
  6650                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6651                           ;incstack = 0
  6652  01B492  0E01               	movlw	1
  6653  01B494  013D               	movlb	61	; () banked
  6654  01B496  6F12               	movwf	18,b	;volatile
  6655                           
  6656                           ; BSR set to: 61
  6657                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6658                           ;stkvar	_data @ sp[(0)+-1]
  6659  01B498  0EFF               	movlw	-1
  6660  01B49A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6661  01B4A0                     l807:
  6662                           
  6663                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6664  01B4A0  0139               	movlb	57	; () banked
  6665  01B4A2  A9A2               	btfss	162,4,b	;volatile
  6666  01B4A4  D7FD               	goto	l807
  6667                           
  6668                           ; BSR set to: 57
  6669                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6670  01B4A6  006F F440  F028    	movff	15632,btemp	;volatile
  6671                           
  6672                           ; BSR set to: 57
  6673                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6674  01B4AC  52E5               	movf	postdec1,f,c
  6675  01B4AE  0012               	return		;funcret
  6676  01B4B0                     __end_of_SPI1_Exchange8bit:
  6677                           	opt callstack 0
  6678                           
  6679 ;; *************** function _ringBufS_init *****************
  6680 ;; Defined at:
  6681 ;;		line 22 in file "ringbufs.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  _this           2  [STACK] PTR volatile struct ring
  6684 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  1  [STACK] void 
  6689 ;; Registers used:
  6690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6700 ;;Total ram usage:        0 bytes
  6701 ;; Hardware stack levels used:    1
  6702 ;; Hardware stack levels required when called:   16
  6703 ;; This function calls:
  6704 ;;		_memset
  6705 ;; This function is called by:
  6706 ;;		_init_display
  6707 ;; This function uses a reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text10
  6711  01B0FA                     __ptext10:
  6712                           	opt callstack 0
  6713  01B0FA                     _ringBufS_init:
  6714                           	opt callstack 13
  6715                           
  6716                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6717                           
  6718                           ; BSR set to: 57
  6719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6720                           ;incstack = 0
  6721  01B0FA  0E43               	movlw	67
  6722  01B0FC  6EE6               	movwf	postinc1,c
  6723  01B0FE  0E00               	movlw	0
  6724  01B100  6EE6               	movwf	postinc1,c
  6725  01B102  0E00               	movlw	0
  6726  01B104  6EE6               	movwf	postinc1,c
  6727  01B106  0E00               	movlw	0
  6728  01B108  6EE6               	movwf	postinc1,c
  6729                           
  6730                           ;stkvar	__this @ sp[(-4)+-2]
  6731  01B10A  0EFA               	movlw	-6
  6732  01B10C  006F FF8F FFE6     	movff	plusw1,postinc1
  6733  01B112  006F FF8F FFE6     	movff	plusw1,postinc1
  6734  01B118  ECF2  F0B2         	call	_memset	;wreg free
  6735                           
  6736                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6737  01B11C  52E5               	movf	postdec1,f,c
  6738  01B11E  52E5               	movf	postdec1,f,c
  6739  01B120  0012               	return		;funcret
  6740  01B122                     __end_of_ringBufS_init:
  6741                           	opt callstack 0
  6742                           
  6743 ;; *************** function _init_bsoc *****************
  6744 ;; Defined at:
  6745 ;;		line 89 in file "bsoc.c"
  6746 ;; Parameters:    Size  Location     Type
  6747 ;;		None
  6748 ;; Auto vars:     Size  Location     Type
  6749 ;;		None
  6750 ;; Return value:  Size  Location     Type
  6751 ;;                  1  [STACK] void 
  6752 ;; Registers used:
  6753 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6754 ;; Tracked objects:
  6755 ;;		On entry : 3F/1
  6756 ;;		On exit  : 0/0
  6757 ;;		Unchanged: 0/0
  6758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6763 ;;Total ram usage:        0 bytes
  6764 ;; Hardware stack levels used:    1
  6765 ;; Hardware stack levels required when called:   18
  6766 ;; This function calls:
  6767 ;;		_TMR3_SetInterruptHandler
  6768 ;;		_Volts_to_SOC
  6769 ;;		___fldiv
  6770 ;;		___flmul
  6771 ;;		___fltol
  6772 ;;		___xxtofl
  6773 ;;		_conv_raw_result
  6774 ;; This function is called by:
  6775 ;;		_main
  6776 ;; This function uses a reentrant model
  6777 ;;
  6778                           
  6779                           	psect	text11
  6780  018570                     __ptext11:
  6781                           	opt callstack 0
  6782  018570                     _init_bsoc:
  6783                           	opt callstack 12
  6784                           
  6785                           ;bsoc.c: 94:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6786                           
  6787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6788                           ;incstack = 0
  6789  018570  0E00               	movlw	0
  6790  018572  6EE6               	movwf	postinc1,c
  6791  018574  0E00               	movlw	0
  6792  018576  6EE6               	movwf	postinc1,c
  6793  018578  0E7A               	movlw	122
  6794  01857A  6EE6               	movwf	postinc1,c
  6795  01857C  0E44               	movlw	68
  6796  01857E  6EE6               	movwf	postinc1,c
  6797  018580  0E00               	movlw	0
  6798  018582  6EE6               	movwf	postinc1,c
  6799  018584  0E04               	movlw	4
  6800  018586  6EE6               	movwf	postinc1,c
  6801  018588  EC58  F0A7         	call	_conv_raw_result	;wreg free
  6802  01858C  0060  F0A3  FFE6   	movff	btemp,postinc1
  6803  018592  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6804  018598  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6805  01859E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6806  0185A4  ECFF  F0C1         	call	___fltol	;wreg free
  6807  0185A8  0060  F0A3  FFE6   	movff	btemp,postinc1
  6808  0185AE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6809  0185B4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6810  0185BA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6811  0185C0  0E00               	movlw	0
  6812  0185C2  6EE6               	movwf	postinc1,c
  6813  0185C4  ECDA  F0BC         	call	___xxtofl	;wreg free
  6814  0185C8  0060  F0A3  FFE6   	movff	btemp,postinc1
  6815  0185CE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6816  0185D4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6817  0185DA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6818  0185E0  EC0F  F099         	call	___flmul	;wreg free
  6819  0185E4  0060  F0A3  FFE6   	movff	btemp,postinc1
  6820  0185EA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6821  0185F0  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6822  0185F6  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6823  0185FC  ECFF  F0C1         	call	___fltol	;wreg free
  6824  018600  0060  F0A3  FFE6   	movff	btemp,postinc1
  6825  018606  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6826  01860C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6827  018612  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6828  018618  EC35  F0D0         	call	_Volts_to_SOC	;wreg free
  6829  01861C  0060  F0A0  F1AE   	movff	btemp,_C+174	;volatile
  6830  018622  0060  F0A4  F1AF   	movff	btemp+1,_C+175	;volatile
  6831                           
  6832                           ;bsoc.c: 95:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6833  018628  0060  F623  FFE6   	movff	_C+136,postinc1
  6834  01862E  0060  F627  FFE6   	movff	_C+137,postinc1
  6835  018634  0060  F62B  FFE6   	movff	_C+138,postinc1
  6836  01863A  0060  F62F  FFE6   	movff	_C+139,postinc1
  6837  018640  0E00               	movlw	0
  6838  018642  6EE6               	movwf	postinc1,c
  6839  018644  0E00               	movlw	0
  6840  018646  6EE6               	movwf	postinc1,c
  6841  018648  0EC8               	movlw	200
  6842  01864A  6EE6               	movwf	postinc1,c
  6843  01864C  0E42               	movlw	66
  6844  01864E  6EE6               	movwf	postinc1,c
  6845  018650  0101               	movlb	1	; () banked
  6846  018652  51AE               	movf	(_C+174)& (0+255),w,b	;volatile
  6847  018654  6E30               	movwf	(btemp+8)^0,c
  6848  018656  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
  6849  018658  6E31               	movwf	(btemp+9)^0,c
  6850  01865A  6A32               	clrf	(btemp+10)^0,c
  6851  01865C  6A33               	clrf	(btemp+11)^0,c
  6852  01865E  0060  F0C3  FFE6   	movff	btemp+8,postinc1
  6853  018664  0060  F0C7  FFE6   	movff	btemp+9,postinc1
  6854  01866A  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  6855  018670  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  6856  018676  0E00               	movlw	0
  6857  018678  6EE6               	movwf	postinc1,c
  6858  01867A  ECDA  F0BC         	call	___xxtofl	;wreg free
  6859  01867E  0060  F0A3  FFE6   	movff	btemp,postinc1
  6860  018684  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6861  01868A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6862  018690  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6863  018696  EC9B  F0A4         	call	___fldiv	;wreg free
  6864  01869A  0060  F0A3  FFE6   	movff	btemp,postinc1
  6865  0186A0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6866  0186A6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6867  0186AC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6868  0186B2  EC0F  F099         	call	___flmul	;wreg free
  6869  0186B6  0060  F0A0  F18C   	movff	btemp,_C+140	;volatile
  6870  0186BC  0060  F0A4  F18D   	movff	btemp+1,_C+141	;volatile
  6871  0186C2  0060  F0A8  F18E   	movff	btemp+2,_C+142	;volatile
  6872  0186C8  0060  F0AC  F18F   	movff	btemp+3,_C+143	;volatile
  6873                           
  6874                           ;bsoc.c: 96:  TMR3_SetInterruptHandler(calc_bsoc);
  6875  0186CE  0E04               	movlw	low _calc_bsoc
  6876  0186D0  6EE6               	movwf	postinc1,c
  6877  0186D2  0E42               	movlw	high _calc_bsoc
  6878  0186D4  6EE6               	movwf	postinc1,c
  6879  0186D6  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6880  0186D8  6EE6               	movwf	postinc1,c
  6881  0186DA  EC09  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
  6882                           
  6883                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6884  0186DE  0012               	return		;funcret
  6885  0186E0                     __end_of_init_bsoc:
  6886                           	opt callstack 0
  6887                           
  6888 ;; *************** function _Volts_to_SOC *****************
  6889 ;; Defined at:
  6890 ;;		line 153 in file "bsoc.c"
  6891 ;; Parameters:    Size  Location     Type
  6892 ;;  cvoltage        4  [STACK] unsigned long 
  6893 ;; Auto vars:     Size  Location     Type
  6894 ;;		None
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  2  [STACK] unsigned short 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/1
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6908 ;;Total ram usage:        0 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:   15
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		_init_bsoc
  6915 ;; This function uses a reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text12
  6919  01A06A                     __ptext12:
  6920                           	opt callstack 0
  6921  01A06A                     _Volts_to_SOC:
  6922                           	opt callstack 14
  6923                           
  6924                           ;bsoc.c: 153: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 154: {;bsoc.c: 155:  stat
      +                          ic uint8_t slot;;bsoc.c: 157:  C.soc = 0;
  6925                           
  6926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6927                           ;incstack = 0
  6928  01A06A  0101               	movlb	1	; () banked
  6929  01A06C  6BAE               	clrf	(_C+174)& (0+255),b	;volatile
  6930  01A06E  6BAF               	clrf	(_C+175)& (0+255),b	;volatile
  6931                           
  6932                           ;bsoc.c: 158:  for (slot = 0; slot < 26; slot++) {
  6933  01A070  6A55               	clrf	Volts_to_SOC@slot^0,c
  6934  01A072                     l10336:
  6935                           
  6936                           ;bsoc.c: 159:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6937                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6938  01A072  5055               	movf	Volts_to_SOC@slot^0,w,c
  6939  01A074  0D08               	mullw	8
  6940  01A076  0E7B               	movlw	low _BVSOC_TABLE
  6941  01A078  24F3               	addwf	243,w,c
  6942  01A07A  6EF6               	movwf	tblptrl,c
  6943  01A07C  0EFA               	movlw	high _BVSOC_TABLE
  6944  01A07E  20F4               	addwfc	244,w,c
  6945  01A080  6EF7               	movwf	tblptrh,c
  6946  01A082                     	if	1	;There are 3 active tblptr bytes
  6947  01A082  6AF8               	clrf	tblptru,c
  6948  01A084  0E00               	movlw	low (__mediumconst shr (0+16))
  6949  01A086  22F8               	addwfc	tblptru,f,c
  6950  01A088                     	endif
  6951  01A088  0EFC               	movlw	-4
  6952  01A08A  50E3               	movf	plusw1,w,c
  6953  01A08C  0009               	tblrd		*+
  6954  01A08E  5CF5               	subwf	tablat,w,c
  6955  01A090  0EFD               	movlw	-3
  6956  01A092  50E3               	movf	plusw1,w,c
  6957  01A094  0009               	tblrd		*+
  6958  01A096  58F5               	subwfb	tablat,w,c
  6959  01A098  0EFE               	movlw	-2
  6960  01A09A  50E3               	movf	plusw1,w,c
  6961  01A09C  0009               	tblrd		*+
  6962  01A09E  58F5               	subwfb	tablat,w,c
  6963  01A0A0  0EFF               	movlw	-1
  6964  01A0A2  50E3               	movf	plusw1,w,c
  6965  01A0A4  0009               	tblrd		*+
  6966  01A0A6  58F5               	subwfb	tablat,w,c
  6967  01A0A8  B0D8               	btfsc	status,0,c
  6968  01A0AA  D017               	goto	l10340
  6969                           
  6970                           ;bsoc.c: 160:    C.soc = BVSOC_TABLE[slot][1];
  6971  01A0AC  5055               	movf	Volts_to_SOC@slot^0,w,c
  6972  01A0AE  0D08               	mullw	8
  6973  01A0B0  0E04               	movlw	4
  6974  01A0B2  26F3               	addwf	243,f,c
  6975  01A0B4  0E00               	movlw	0
  6976  01A0B6  22F4               	addwfc	244,f,c
  6977  01A0B8  0E7B               	movlw	low _BVSOC_TABLE
  6978  01A0BA  24F3               	addwf	243,w,c
  6979  01A0BC  6EF6               	movwf	tblptrl,c
  6980  01A0BE  0EFA               	movlw	high _BVSOC_TABLE
  6981  01A0C0  20F4               	addwfc	244,w,c
  6982  01A0C2  6EF7               	movwf	tblptrh,c
  6983  01A0C4                     	if	1	;There are 3 active tblptr bytes
  6984  01A0C4  6AF8               	clrf	tblptru,c
  6985  01A0C6  0E00               	movlw	low (__mediumconst shr (0+16))
  6986  01A0C8  22F8               	addwfc	tblptru,f,c
  6987  01A0CA                     	endif
  6988  01A0CA  0009               	tblrd		*+
  6989  01A0CC  006F FFD4  F1AE    	movff	tablat,_C+174	;volatile
  6990  01A0D2  000A               	tblrd		*-
  6991  01A0D4  006F FFD4  F1AF    	movff	tablat,_C+175	;volatile
  6992  01A0DA                     l10340:
  6993                           
  6994                           ;bsoc.c: 162:  }
  6995  01A0DA  2A55               	incf	Volts_to_SOC@slot^0,f,c
  6996  01A0DC  0E19               	movlw	25
  6997  01A0DE  6455               	cpfsgt	Volts_to_SOC@slot^0,c
  6998  01A0E0  D7C8               	goto	l10336
  6999                           
  7000                           ;bsoc.c: 164:  return C.soc;
  7001  01A0E2  EE20  F1AE         	lfsr	2,_C+174	;volatile
  7002  01A0E6  006F FF78  F028    	movff	postinc2,btemp
  7003  01A0EC  006F FF74  F029    	movff	postdec2,btemp+1
  7004                           
  7005                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  7006  01A0F2  52E5               	movf	postdec1,f,c
  7007  01A0F4  52E5               	movf	postdec1,f,c
  7008  01A0F6  52E5               	movf	postdec1,f,c
  7009  01A0F8  52E5               	movf	postdec1,f,c
  7010  01A0FA  0012               	return		;funcret
  7011  01A0FC                     __end_of_Volts_to_SOC:
  7012                           	opt callstack 0
  7013                           
  7014 ;; *************** function _hid_display *****************
  7015 ;; Defined at:
  7016 ;;		line 17 in file "hid.c"
  7017 ;; Parameters:    Size  Location     Type
  7018 ;;  h               1  [STACK] PTR struct H_data
  7019 ;;		 -> H(7), 
  7020 ;; Auto vars:     Size  Location     Type
  7021 ;;		None
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  1  [STACK] PTR struct H_data
  7024 ;; Registers used:
  7025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7026 ;; Tracked objects:
  7027 ;;		On entry : 3F/1
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7035 ;;Total ram usage:        0 bytes
  7036 ;; Hardware stack levels used:    1
  7037 ;; Hardware stack levels required when called:   17
  7038 ;; This function calls:
  7039 ;;		_hid_input
  7040 ;; This function is called by:
  7041 ;;		_main
  7042 ;; This function uses a reentrant model
  7043 ;;
  7044                           
  7045                           	psect	text13
  7046  01951A                     __ptext13:
  7047                           	opt callstack 0
  7048  01951A                     _hid_display:
  7049                           	opt callstack 13
  7050                           
  7051                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7052                           ;stkvar	_h @ sp[(0)+-1]
  7053                           
  7054                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7055                           ;incstack = 0
  7056  01951A  0EFF               	movlw	-1
  7057  01951C  50E3               	movf	plusw1,w,c
  7058  01951E  6EE6               	movwf	postinc1,c
  7059  019520  ECC7  F0D0         	call	_hid_input	;wreg free
  7060                           
  7061                           ;hid.c: 21:  switch (h->h_state) {
  7062  019524  D066               	goto	l10740
  7063  019526                     l10718:
  7064                           
  7065                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7066                           ;stkvar	_h @ sp[(0)+-1]
  7067  019526  0EFF               	movlw	-1
  7068  019528  50E3               	movf	plusw1,w,c
  7069  01952A  6ED9               	movwf	fsr2l,c
  7070  01952C  6ADA               	clrf	fsr2h,c
  7071  01952E  0E01               	movlw	1
  7072  019530  26D9               	addwf	fsr2l,f,c
  7073  019532  0E01               	movlw	1
  7074  019534  6EDF               	movwf	indf2,c
  7075                           
  7076                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7077                           ;stkvar	_h @ sp[(0)+-1]
  7078  019536  0EFF               	movlw	-1
  7079  019538  50E3               	movf	plusw1,w,c
  7080  01953A  6ED9               	movwf	fsr2l,c
  7081  01953C  6ADA               	clrf	fsr2h,c
  7082  01953E  0E00               	movlw	0
  7083  019540  6EDF               	movwf	indf2,c
  7084                           
  7085                           ;hid.c: 25:   h->wait_enter = 1;
  7086                           ;stkvar	_h @ sp[(0)+-1]
  7087  019542  0EFF               	movlw	-1
  7088  019544  50E3               	movf	plusw1,w,c
  7089  019546  6ED9               	movwf	fsr2l,c
  7090  019548  6ADA               	clrf	fsr2h,c
  7091  01954A  0E04               	movlw	4
  7092  01954C  26D9               	addwf	fsr2l,f,c
  7093  01954E  0E01               	movlw	1
  7094  019550  6EDF               	movwf	indf2,c
  7095                           
  7096                           ;hid.c: 26:   h->wait_select = 1;
  7097                           ;stkvar	_h @ sp[(0)+-1]
  7098  019552  0EFF               	movlw	-1
  7099  019554  50E3               	movf	plusw1,w,c
  7100  019556  6ED9               	movwf	fsr2l,c
  7101  019558  6ADA               	clrf	fsr2h,c
  7102  01955A  0E02               	movlw	2
  7103  01955C  26D9               	addwf	fsr2l,f,c
  7104  01955E  0E01               	movlw	1
  7105  019560  6EDF               	movwf	indf2,c
  7106                           
  7107                           ;hid.c: 27:   h->select_p = SW_OFF;
  7108                           ;stkvar	_h @ sp[(0)+-1]
  7109  019562  0EFF               	movlw	-1
  7110  019564  50E3               	movf	plusw1,w,c
  7111  019566  6ED9               	movwf	fsr2l,c
  7112  019568  6ADA               	clrf	fsr2h,c
  7113  01956A  0E03               	movlw	3
  7114  01956C  26D9               	addwf	fsr2l,f,c
  7115  01956E  0E00               	movlw	0
  7116  019570  6EDF               	movwf	indf2,c
  7117                           
  7118                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7119                           ;stkvar	_h @ sp[(0)+-1]
  7120  019572  0EFF               	movlw	-1
  7121  019574  50E3               	movf	plusw1,w,c
  7122  019576  6ED9               	movwf	fsr2l,c
  7123  019578  6ADA               	clrf	fsr2h,c
  7124  01957A  0E05               	movlw	5
  7125  01957C  26D9               	addwf	fsr2l,f,c
  7126  01957E  0E00               	movlw	0
  7127  019580  D036               	goto	L1
  7128  019582                     l10730:
  7129                           
  7130                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7131                           ;stkvar	_h @ sp[(0)+-1]
  7132  019582  0EFF               	movlw	-1
  7133  019584  50E3               	movf	plusw1,w,c
  7134  019586  6ED9               	movwf	fsr2l,c
  7135  019588  6ADA               	clrf	fsr2h,c
  7136  01958A  0E02               	movlw	2
  7137  01958C  26D9               	addwf	fsr2l,f,c
  7138  01958E  50DF               	movf	indf2,w,c
  7139  019590  A4D8               	btfss	status,2,c
  7140  019592  D042               	goto	l1943
  7141                           
  7142                           ;stkvar	_h @ sp[(0)+-1]
  7143  019594  0EFF               	movlw	-1
  7144  019596  50E3               	movf	plusw1,w,c
  7145  019598  6ED9               	movwf	fsr2l,c
  7146  01959A  6ADA               	clrf	fsr2h,c
  7147  01959C  0E03               	movlw	3
  7148  01959E  26D9               	addwf	fsr2l,f,c
  7149  0195A0  50DF               	movf	indf2,w,c
  7150  0195A2  A4D8               	btfss	status,2,c
  7151  0195A4  D039               	goto	l1943
  7152                           
  7153                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7154                           ;stkvar	_h @ sp[(0)+-1]
  7155  0195A6  0EFF               	movlw	-1
  7156  0195A8  50E3               	movf	plusw1,w,c
  7157  0195AA  6ED9               	movwf	fsr2l,c
  7158  0195AC  6ADA               	clrf	fsr2h,c
  7159  0195AE  0E06               	movlw	6
  7160  0195B0  26D9               	addwf	fsr2l,f,c
  7161                           
  7162                           ;stkvar	_h @ sp[(0)+-1]
  7163  0195B2  0EFF               	movlw	-1
  7164  0195B4  50E3               	movf	plusw1,w,c
  7165  0195B6  6EE9               	movwf	fsr0l,c
  7166  0195B8  6AEA               	clrf	fsr0h,c
  7167  0195BA  0E06               	movlw	6
  7168  0195BC  26E9               	addwf	fsr0l,f,c
  7169  0195BE  2AEF               	incf	indf0,f,c
  7170  0195C0  50EF               	movf	indf0,w,c
  7171  0195C2  0B03               	andlw	3
  7172  0195C4  6EDF               	movwf	indf2,c
  7173                           
  7174                           ;hid.c: 34:    h->hid_display = h->sequence;
  7175                           ;stkvar	_h @ sp[(0)+-1]
  7176  0195C6  0EFF               	movlw	-1
  7177  0195C8  50E3               	movf	plusw1,w,c
  7178  0195CA  6ED9               	movwf	fsr2l,c
  7179  0195CC  6ADA               	clrf	fsr2h,c
  7180  0195CE  0E06               	movlw	6
  7181  0195D0  26D9               	addwf	fsr2l,f,c
  7182                           
  7183                           ;stkvar	_h @ sp[(0)+-1]
  7184  0195D2  0EFF               	movlw	-1
  7185  0195D4  50E3               	movf	plusw1,w,c
  7186  0195D6  6EE9               	movwf	fsr0l,c
  7187  0195D8  6AEA               	clrf	fsr0h,c
  7188  0195DA  006F FF7F FFEF     	movff	indf2,indf0
  7189                           
  7190                           ;hid.c: 35:    h->wait_select = 1;
  7191                           ;stkvar	_h @ sp[(0)+-1]
  7192  0195E0  0EFF               	movlw	-1
  7193  0195E2  50E3               	movf	plusw1,w,c
  7194  0195E4  6ED9               	movwf	fsr2l,c
  7195  0195E6  6ADA               	clrf	fsr2h,c
  7196  0195E8  0E02               	movlw	2
  7197  0195EA  26D9               	addwf	fsr2l,f,c
  7198  0195EC  0E01               	movlw	1
  7199  0195EE                     L1:
  7200  0195EE  6EDF               	movwf	indf2,c
  7201  0195F0  D013               	goto	l1943
  7202  0195F2                     l10740:
  7203                           
  7204                           ;stkvar	_h @ sp[(0)+-1]
  7205  0195F2  0EFF               	movlw	-1
  7206  0195F4  50E3               	movf	plusw1,w,c
  7207  0195F6  6ED9               	movwf	fsr2l,c
  7208  0195F8  6ADA               	clrf	fsr2h,c
  7209  0195FA  0E01               	movlw	1
  7210  0195FC  26D9               	addwf	fsr2l,f,c
  7211  0195FE  50DF               	movf	indf2,w,c
  7212  019600  6E32               	movwf	(btemp+10)^0,c
  7213  019602  6A33               	clrf	(btemp+11)^0,c
  7214                           
  7215                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7216                           ; Switch size 1, requested type "simple"
  7217                           ; Number of cases is 1, Range of values is 0 to 0
  7218                           ; switch strategies available:
  7219                           ; Name         Instructions Cycles
  7220                           ; simple_byte            4     3 (average)
  7221                           ;	Chosen strategy is simple_byte
  7222  019604  5033               	movf	(btemp+11)^0,w,c
  7223  019606  0A00               	xorlw	0	; case 0
  7224  019608  A4D8               	btfss	status,2,c
  7225  01960A  D7BB               	goto	l10730
  7226                           
  7227                           ; Switch size 1, requested type "simple"
  7228                           ; Number of cases is 2, Range of values is 0 to 1
  7229                           ; switch strategies available:
  7230                           ; Name         Instructions Cycles
  7231                           ; simple_byte            7     4 (average)
  7232                           ;	Chosen strategy is simple_byte
  7233  01960C  5032               	movf	(btemp+10)^0,w,c
  7234  01960E  0A00               	xorlw	0	; case 0
  7235  019610  B4D8               	btfsc	status,2,c
  7236  019612  D789               	goto	l10718
  7237  019614  0A01               	xorlw	1	; case 1
  7238  019616  D7B5               	goto	l10730
  7239  019618                     l1943:
  7240                           
  7241                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7242  019618  52E5               	movf	postdec1,f,c
  7243  01961A  0012               	return		;funcret
  7244  01961C                     __end_of_hid_display:
  7245                           	opt callstack 0
  7246                           
  7247 ;; *************** function _hid_input *****************
  7248 ;; Defined at:
  7249 ;;		line 3 in file "hid.c"
  7250 ;; Parameters:    Size  Location     Type
  7251 ;;  h               1  [STACK] PTR struct H_data
  7252 ;;		 -> H(7), 
  7253 ;; Auto vars:     Size  Location     Type
  7254 ;;		None
  7255 ;; Return value:  Size  Location     Type
  7256 ;;                  1  [STACK] PTR struct H_data
  7257 ;; Registers used:
  7258 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7259 ;; Tracked objects:
  7260 ;;		On entry : 0/1
  7261 ;;		On exit  : 0/0
  7262 ;;		Unchanged: 0/0
  7263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7265 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7267 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7268 ;;Total ram usage:        0 bytes
  7269 ;; Hardware stack levels used:    1
  7270 ;; Hardware stack levels required when called:   16
  7271 ;; This function calls:
  7272 ;;		_get_switch
  7273 ;; This function is called by:
  7274 ;;		_hid_display
  7275 ;; This function uses a reentrant model
  7276 ;;
  7277                           
  7278                           	psect	text14
  7279  01A18E                     __ptext14:
  7280                           	opt callstack 0
  7281  01A18E                     _hid_input:
  7282                           	opt callstack 13
  7283                           
  7284                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7285                           
  7286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7287                           ;incstack = 0
  7288  01A18E  0E02               	movlw	2
  7289  01A190  6EE6               	movwf	postinc1,c
  7290  01A192  ECFE  F0D7         	call	_get_switch	;wreg free
  7291  01A196  5028               	movf	btemp^0,w,c
  7292  01A198  B4D8               	btfsc	status,2,c
  7293  01A19A  D01C               	goto	l10266
  7294                           
  7295                           ;hid.c: 6:   h->wait_select = 0;
  7296                           ;stkvar	_h @ sp[(0)+-1]
  7297  01A19C  0EFF               	movlw	-1
  7298  01A19E  50E3               	movf	plusw1,w,c
  7299  01A1A0  6ED9               	movwf	fsr2l,c
  7300  01A1A2  6ADA               	clrf	fsr2h,c
  7301  01A1A4  0E02               	movlw	2
  7302  01A1A6  26D9               	addwf	fsr2l,f,c
  7303  01A1A8  0E00               	movlw	0
  7304  01A1AA  6EDF               	movwf	indf2,c
  7305                           
  7306                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7307  01A1AC  0E02               	movlw	2
  7308  01A1AE  6EE6               	movwf	postinc1,c
  7309  01A1B0  ECFE  F0D7         	call	_get_switch	;wreg free
  7310  01A1B4  5028               	movf	btemp^0,w,c
  7311  01A1B6  B4D8               	btfsc	status,2,c
  7312  01A1B8  D003               	goto	u9400
  7313  01A1BA  6A33               	clrf	(btemp+11)^0,c
  7314  01A1BC  2A33               	incf	(btemp+11)^0,f,c
  7315  01A1BE  D001               	goto	u9418
  7316  01A1C0                     u9400:
  7317  01A1C0  6A33               	clrf	(btemp+11)^0,c
  7318  01A1C2                     u9418:
  7319                           
  7320                           ;stkvar	_h @ sp[(0)+-1]
  7321  01A1C2  0EFF               	movlw	-1
  7322  01A1C4  50E3               	movf	plusw1,w,c
  7323  01A1C6  6ED9               	movwf	fsr2l,c
  7324  01A1C8  6ADA               	clrf	fsr2h,c
  7325  01A1CA  0E03               	movlw	3
  7326  01A1CC  26D9               	addwf	fsr2l,f,c
  7327  01A1CE  0060  F0CF  FFDF   	movff	btemp+11,indf2
  7328  01A1D4                     l10266:
  7329                           
  7330                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7331  01A1D4  0E03               	movlw	3
  7332  01A1D6  6EE6               	movwf	postinc1,c
  7333  01A1D8  ECFE  F0D7         	call	_get_switch	;wreg free
  7334  01A1DC  5028               	movf	btemp^0,w,c
  7335  01A1DE  B4D8               	btfsc	status,2,c
  7336  01A1E0  D01C               	goto	l1934
  7337                           
  7338                           ;hid.c: 11:   h->wait_enter = 0;
  7339                           ;stkvar	_h @ sp[(0)+-1]
  7340  01A1E2  0EFF               	movlw	-1
  7341  01A1E4  50E3               	movf	plusw1,w,c
  7342  01A1E6  6ED9               	movwf	fsr2l,c
  7343  01A1E8  6ADA               	clrf	fsr2h,c
  7344  01A1EA  0E04               	movlw	4
  7345  01A1EC  26D9               	addwf	fsr2l,f,c
  7346  01A1EE  0E00               	movlw	0
  7347  01A1F0  6EDF               	movwf	indf2,c
  7348                           
  7349                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7350  01A1F2  0E03               	movlw	3
  7351  01A1F4  6EE6               	movwf	postinc1,c
  7352  01A1F6  ECFE  F0D7         	call	_get_switch	;wreg free
  7353  01A1FA  5028               	movf	btemp^0,w,c
  7354  01A1FC  B4D8               	btfsc	status,2,c
  7355  01A1FE  D003               	goto	u9430
  7356  01A200  6A33               	clrf	(btemp+11)^0,c
  7357  01A202  2A33               	incf	(btemp+11)^0,f,c
  7358  01A204  D001               	goto	u9448
  7359  01A206                     u9430:
  7360  01A206  6A33               	clrf	(btemp+11)^0,c
  7361  01A208                     u9448:
  7362                           
  7363                           ;stkvar	_h @ sp[(0)+-1]
  7364  01A208  0EFF               	movlw	-1
  7365  01A20A  50E3               	movf	plusw1,w,c
  7366  01A20C  6ED9               	movwf	fsr2l,c
  7367  01A20E  6ADA               	clrf	fsr2h,c
  7368  01A210  0E05               	movlw	5
  7369  01A212  26D9               	addwf	fsr2l,f,c
  7370  01A214  0060  F0CF  FFDF   	movff	btemp+11,indf2
  7371  01A21A                     l1934:
  7372                           
  7373                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7374  01A21A  52E5               	movf	postdec1,f,c
  7375  01A21C  0012               	return		;funcret
  7376  01A21E                     __end_of_hid_input:
  7377                           	opt callstack 0
  7378                           
  7379 ;; *************** function _get_switch *****************
  7380 ;; Defined at:
  7381 ;;		line 18 in file "dio.c"
  7382 ;; Parameters:    Size  Location     Type
  7383 ;;  i               1  [STACK] unsigned char 
  7384 ;; Auto vars:     Size  Location     Type
  7385 ;;		None
  7386 ;; Return value:  Size  Location     Type
  7387 ;;                  1  [STACK] enum E17021
  7388 ;; Registers used:
  7389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7390 ;; Tracked objects:
  7391 ;;		On entry : 0/2
  7392 ;;		On exit  : 0/0
  7393 ;;		Unchanged: 0/0
  7394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7399 ;;Total ram usage:        0 bytes
  7400 ;; Hardware stack levels used:    1
  7401 ;; Hardware stack levels required when called:   15
  7402 ;; This function calls:
  7403 ;;		Nothing
  7404 ;; This function is called by:
  7405 ;;		_main
  7406 ;;		_hid_input
  7407 ;; This function uses a reentrant model
  7408 ;;
  7409                           
  7410                           	psect	text15
  7411  01AFFC                     __ptext15:
  7412                           	opt callstack 0
  7413  01AFFC                     _get_switch:
  7414                           	opt callstack 13
  7415                           
  7416                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7417                           ;stkvar	_i @ sp[(0)+-1]
  7418                           
  7419                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7420                           ;incstack = 0
  7421  01AFFC  0EFF               	movlw	-1
  7422  01AFFE  006F FF8C  F028    	movff	plusw1,btemp
  7423  01B004  0E03               	movlw	3
  7424  01B006  6428               	cpfsgt	btemp^0,c
  7425  01B008  D002               	goto	l9538
  7426                           
  7427                           ;dio.c: 21:   return SW_OFF;
  7428  01B00A  0E00               	movlw	0
  7429  01B00C  D00A               	goto	L2
  7430  01B00E                     l9538:
  7431                           
  7432                           ;dio.c: 23:  return S.button[i].sw;
  7433                           ;stkvar	_i @ sp[(0)+-1]
  7434  01B00E  0EFF               	movlw	-1
  7435  01B010  50E3               	movf	plusw1,w,c
  7436  01B012  0D05               	mullw	5
  7437  01B014  0EBE               	movlw	low _S
  7438  01B016  24F3               	addwf	243,w,c
  7439  01B018  6ED9               	movwf	fsr2l,c
  7440  01B01A  0E02               	movlw	high _S
  7441  01B01C  20F4               	addwfc	prodh,w,c
  7442  01B01E  6EDA               	movwf	fsr2h,c
  7443  01B020  50DF               	movf	indf2,w,c
  7444  01B022                     L2:
  7445  01B022  6E28               	movwf	btemp^0,c
  7446                           
  7447                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7448  01B024  52E5               	movf	postdec1,f,c
  7449  01B026  0012               	return		;funcret
  7450  01B028                     __end_of_get_switch:
  7451                           	opt callstack 0
  7452                           
  7453 ;; *************** function _esr_check *****************
  7454 ;; Defined at:
  7455 ;;		line 173 in file "bsoc.c"
  7456 ;; Parameters:    Size  Location     Type
  7457 ;;  fsm             1  [STACK] unsigned char 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;		None
  7460 ;; Return value:  Size  Location     Type
  7461 ;;                  4  [STACK] float 
  7462 ;; Registers used:
  7463 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7464 ;; Tracked objects:
  7465 ;;		On entry : 0/0
  7466 ;;		On exit  : 0/0
  7467 ;;		Unchanged: 0/0
  7468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7470 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7472 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7473 ;;Total ram usage:        0 bytes
  7474 ;; Hardware stack levels used:    1
  7475 ;; Hardware stack levels required when called:   18
  7476 ;; This function calls:
  7477 ;;		_StartTimer
  7478 ;;		_TimerDone
  7479 ;;		___fldiv
  7480 ;;		___flsub
  7481 ;;		_conv_raw_result
  7482 ;;		_fabsf
  7483 ;;		_set_load_relay_one
  7484 ;;		_set_load_relay_two
  7485 ;;		_update_adc_result
  7486 ;; This function is called by:
  7487 ;;		_main
  7488 ;; This function uses a reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text16
  7492  0168D0                     __ptext16:
  7493                           	opt callstack 0
  7494  0168D0                     _esr_check:
  7495                           	opt callstack 12
  7496                           
  7497                           ;bsoc.c: 173: float esr_check(uint8_t fsm);bsoc.c: 174: {;bsoc.c: 175:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 177:  if (fsm) {
  7498                           ;stkvar	_fsm @ sp[(0)+-1]
  7499                           
  7500                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7501                           ;incstack = 0
  7502  0168D0  0EFF               	movlw	-1
  7503  0168D2  50E3               	movf	plusw1,w,c
  7504  0168D4  B4D8               	btfsc	status,2,c
  7505  0168D6  D13E               	goto	l10656
  7506                           
  7507                           ;bsoc.c: 178:   esr_state = 0;
  7508  0168D8  6A54               	clrf	esr_check@esr_state^0,c
  7509                           
  7510                           ;bsoc.c: 179:   return -10.0;
  7511  0168DA  0E00               	movlw	0
  7512  0168DC  6E28               	movwf	btemp^0,c
  7513  0168DE  0E00               	movlw	0
  7514  0168E0  6E29               	movwf	(btemp+1)^0,c
  7515  0168E2  0E20               	movlw	32
  7516  0168E4  6E2A               	movwf	(btemp+2)^0,c
  7517  0168E6  0EC1               	movlw	193
  7518  0168E8  D150               	goto	L3
  7519  0168EA                     l10588:
  7520                           
  7521                           ;bsoc.c: 184:   StartTimer(TMR_ESR, 10000);
  7522  0168EA  0E10               	movlw	16
  7523  0168EC  6EE6               	movwf	postinc1,c
  7524  0168EE  0E27               	movlw	39
  7525  0168F0  6EE6               	movwf	postinc1,c
  7526  0168F2  0E0C               	movlw	12
  7527  0168F4  6EE6               	movwf	postinc1,c
  7528  0168F6  EC10  F0D6         	call	_StartTimer	;wreg free
  7529  0168FA                     l10590:
  7530                           
  7531                           ;bsoc.c: 185:   esr_state++;
  7532  0168FA  2A54               	incf	esr_check@esr_state^0,f,c
  7533                           
  7534                           ;bsoc.c: 186:   break;
  7535  0168FC  D13F               	goto	l10658
  7536  0168FE                     l10592:
  7537                           
  7538                           ;bsoc.c: 191:   set_load_relay_one(0);
  7539  0168FE  0E00               	movlw	0
  7540  016900  6EE6               	movwf	postinc1,c
  7541  016902  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  7542                           
  7543                           ;bsoc.c: 192:   set_load_relay_two(0);
  7544  016906  0E00               	movlw	0
  7545  016908  6EE6               	movwf	postinc1,c
  7546  01690A  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  7547                           
  7548                           ;bsoc.c: 193:   if (TimerDone(TMR_ESR)) {
  7549  01690E  0E0C               	movlw	12
  7550  016910  6EE6               	movwf	postinc1,c
  7551  016912  EC91  F0D8         	call	_TimerDone	;wreg free
  7552  016916  5028               	movf	btemp^0,w,c
  7553  016918  B4D8               	btfsc	status,2,c
  7554  01691A  D009               	goto	l10598
  7555                           
  7556                           ;bsoc.c: 194:    StartTimer(TMR_ESR, 10000);
  7557  01691C  0E10               	movlw	16
  7558  01691E  6EE6               	movwf	postinc1,c
  7559  016920  0E27               	movlw	39
  7560  016922  6EE6               	movwf	postinc1,c
  7561  016924  0E0C               	movlw	12
  7562  016926  6EE6               	movwf	postinc1,c
  7563  016928  EC10  F0D6         	call	_StartTimer	;wreg free
  7564                           
  7565                           ;bsoc.c: 195:   } else {
  7566  01692C  D006               	goto	l10602
  7567  01692E                     l10598:
  7568                           
  7569                           ;bsoc.c: 196:    return -2.0;
  7570  01692E  0E00               	movlw	0
  7571  016930  6E28               	movwf	btemp^0,c
  7572  016932  0E00               	movlw	0
  7573  016934  6E29               	movwf	(btemp+1)^0,c
  7574  016936  0E00               	movlw	0
  7575  016938  D066               	goto	L5
  7576  01693A                     l10602:
  7577                           
  7578                           ;bsoc.c: 201:   update_adc_result();
  7579  01693A  ECAF  F0D6         	call	_update_adc_result	;wreg free
  7580                           
  7581                           ;bsoc.c: 202:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7582  01693E  0E00               	movlw	0
  7583  016940  6EE6               	movwf	postinc1,c
  7584  016942  0E04               	movlw	4
  7585  016944  6EE6               	movwf	postinc1,c
  7586  016946  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7587  01694A  0060  F0A0  F1EB   	movff	btemp,_C+235	;volatile
  7588  016950  0060  F0A4  F1EC   	movff	btemp+1,_C+236	;volatile
  7589  016956  0060  F0A8  F1ED   	movff	btemp+2,_C+237	;volatile
  7590  01695C  0060  F0AC  F1EE   	movff	btemp+3,_C+238	;volatile
  7591  016962  D7CB               	goto	l10590
  7592  016964                     l10608:
  7593                           
  7594                           ;bsoc.c: 206:   set_load_relay_one(1);
  7595  016964  0E01               	movlw	1
  7596  016966  6EE6               	movwf	postinc1,c
  7597  016968  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  7598                           
  7599                           ;bsoc.c: 207:   if (TimerDone(TMR_ESR)) {
  7600  01696C  0E0C               	movlw	12
  7601  01696E  6EE6               	movwf	postinc1,c
  7602  016970  EC91  F0D8         	call	_TimerDone	;wreg free
  7603  016974  5028               	movf	btemp^0,w,c
  7604  016976  B4D8               	btfsc	status,2,c
  7605  016978  D009               	goto	l10614
  7606                           
  7607                           ;bsoc.c: 208:    StartTimer(TMR_ESR, 10000);
  7608  01697A  0E10               	movlw	16
  7609  01697C  6EE6               	movwf	postinc1,c
  7610  01697E  0E27               	movlw	39
  7611  016980  6EE6               	movwf	postinc1,c
  7612  016982  0E0C               	movlw	12
  7613  016984  6EE6               	movwf	postinc1,c
  7614  016986  EC10  F0D6         	call	_StartTimer	;wreg free
  7615                           
  7616                           ;bsoc.c: 209:   } else {
  7617  01698A  D006               	goto	l10618
  7618  01698C                     l10614:
  7619                           
  7620                           ;bsoc.c: 210:    return -3.0;
  7621  01698C  0E00               	movlw	0
  7622  01698E  6E28               	movwf	btemp^0,c
  7623  016990  0E00               	movlw	0
  7624  016992  6E29               	movwf	(btemp+1)^0,c
  7625  016994  0E40               	movlw	64
  7626  016996  D037               	goto	L5
  7627  016998                     l10618:
  7628                           
  7629                           ;bsoc.c: 213:   update_adc_result();
  7630  016998  ECAF  F0D6         	call	_update_adc_result	;wreg free
  7631                           
  7632                           ;bsoc.c: 214:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7633  01699C  0E00               	movlw	0
  7634  01699E  6EE6               	movwf	postinc1,c
  7635  0169A0  0E04               	movlw	4
  7636  0169A2  6EE6               	movwf	postinc1,c
  7637  0169A4  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7638  0169A8  0060  F0A0  F1EF   	movff	btemp,_C+239	;volatile
  7639  0169AE  0060  F0A4  F1F0   	movff	btemp+1,_C+240	;volatile
  7640  0169B4  0060  F0A8  F1F1   	movff	btemp+2,_C+241	;volatile
  7641  0169BA  0060  F0AC  F1F2   	movff	btemp+3,_C+242	;volatile
  7642                           
  7643                           ;bsoc.c: 215:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7644  0169C0  0E00               	movlw	0
  7645  0169C2  6EE6               	movwf	postinc1,c
  7646  0169C4  0E00               	movlw	0
  7647  0169C6  6EE6               	movwf	postinc1,c
  7648  0169C8  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7649  0169CC  0060  F0A0  F1E3   	movff	btemp,_C+227	;volatile
  7650  0169D2  0060  F0A4  F1E4   	movff	btemp+1,_C+228	;volatile
  7651  0169D8  0060  F0A8  F1E5   	movff	btemp+2,_C+229	;volatile
  7652  0169DE  0060  F0AC  F1E6   	movff	btemp+3,_C+230	;volatile
  7653  0169E4  D78A               	goto	l10590
  7654  0169E6                     l10626:
  7655                           
  7656                           ;bsoc.c: 219:   set_load_relay_two(1);
  7657  0169E6  0E01               	movlw	1
  7658  0169E8  6EE6               	movwf	postinc1,c
  7659  0169EA  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  7660                           
  7661                           ;bsoc.c: 220:   if (!TimerDone(TMR_ESR))
  7662  0169EE  0E0C               	movlw	12
  7663  0169F0  6EE6               	movwf	postinc1,c
  7664  0169F2  EC91  F0D8         	call	_TimerDone	;wreg free
  7665  0169F6  5028               	movf	btemp^0,w,c
  7666  0169F8  A4D8               	btfss	status,2,c
  7667  0169FA  D008               	goto	l10634
  7668                           
  7669                           ;bsoc.c: 221:    return -4.0;
  7670  0169FC  0E00               	movlw	0
  7671  0169FE  6E28               	movwf	btemp^0,c
  7672  016A00  0E00               	movlw	0
  7673  016A02  6E29               	movwf	(btemp+1)^0,c
  7674  016A04  0E80               	movlw	128
  7675  016A06                     L5:
  7676  016A06  6E2A               	movwf	(btemp+2)^0,c
  7677  016A08  0EC0               	movlw	192
  7678  016A0A  D0BF               	goto	L3
  7679  016A0C                     l10634:
  7680                           
  7681                           ;bsoc.c: 223:   update_adc_result();
  7682  016A0C  ECAF  F0D6         	call	_update_adc_result	;wreg free
  7683                           
  7684                           ;bsoc.c: 224:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7685  016A10  0E00               	movlw	0
  7686  016A12  6EE6               	movwf	postinc1,c
  7687  016A14  0E04               	movlw	4
  7688  016A16  6EE6               	movwf	postinc1,c
  7689  016A18  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7690  016A1C  0060  F0A0  F1F3   	movff	btemp,_C+243	;volatile
  7691  016A22  0060  F0A4  F1F4   	movff	btemp+1,_C+244	;volatile
  7692  016A28  0060  F0A8  F1F5   	movff	btemp+2,_C+245	;volatile
  7693  016A2E  0060  F0AC  F1F6   	movff	btemp+3,_C+246	;volatile
  7694                           
  7695                           ;bsoc.c: 225:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7696  016A34  0E00               	movlw	0
  7697  016A36  6EE6               	movwf	postinc1,c
  7698  016A38  0E00               	movlw	0
  7699  016A3A  6EE6               	movwf	postinc1,c
  7700  016A3C  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7701  016A40  0060  F0A0  F1E7   	movff	btemp,_C+231	;volatile
  7702  016A46  0060  F0A4  F1E8   	movff	btemp+1,_C+232	;volatile
  7703  016A4C  0060  F0A8  F1E9   	movff	btemp+2,_C+233	;volatile
  7704  016A52  0060  F0AC  F1EA   	movff	btemp+3,_C+234	;volatile
  7705                           
  7706                           ;bsoc.c: 227:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7707  016A58  0060  F79F  FFE6   	movff	_C+231,postinc1
  7708  016A5E  0060  F7A3  FFE6   	movff	_C+232,postinc1
  7709  016A64  0060  F7A7  FFE6   	movff	_C+233,postinc1
  7710  016A6A  0060  F7AB  FFE6   	movff	_C+234,postinc1
  7711  016A70  0060  F78F  FFE6   	movff	_C+227,postinc1
  7712  016A76  0060  F793  FFE6   	movff	_C+228,postinc1
  7713  016A7C  0060  F797  FFE6   	movff	_C+229,postinc1
  7714  016A82  0060  F79B  FFE6   	movff	_C+230,postinc1
  7715  016A88  EC41  F0D5         	call	___flsub	;wreg free
  7716  016A8C  0060  F0A3  FFE6   	movff	btemp,postinc1
  7717  016A92  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7718  016A98  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7719  016A9E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7720  016AA4  0060  F7CF  FFE6   	movff	_C+243,postinc1
  7721  016AAA  0060  F7D3  FFE6   	movff	_C+244,postinc1
  7722  016AB0  0060  F7D7  FFE6   	movff	_C+245,postinc1
  7723  016AB6  0060  F7DB  FFE6   	movff	_C+246,postinc1
  7724  016ABC  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7725  016AC2  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7726  016AC8  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7727  016ACE  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7728  016AD4  EC41  F0D5         	call	___flsub	;wreg free
  7729  016AD8  0060  F0A3  FFE6   	movff	btemp,postinc1
  7730  016ADE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7731  016AE4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7732  016AEA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7733  016AF0  EC9B  F0A4         	call	___fldiv	;wreg free
  7734  016AF4  0060  F0A3  FFE6   	movff	btemp,postinc1
  7735  016AFA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7736  016B00  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7737  016B06  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7738  016B0C  ECF9  F0CD         	call	_fabsf	;wreg free
  7739  016B10  0060  F0A0  F184   	movff	btemp,_C+132	;volatile
  7740  016B16  0060  F0A4  F185   	movff	btemp+1,_C+133	;volatile
  7741  016B1C  0060  F0A8  F186   	movff	btemp+2,_C+134	;volatile
  7742  016B22  0060  F0AC  F187   	movff	btemp+3,_C+135	;volatile
  7743                           
  7744                           ;bsoc.c: 228:   set_load_relay_one(0);
  7745  016B28  0E00               	movlw	0
  7746  016B2A  6EE6               	movwf	postinc1,c
  7747  016B2C  EC1F  F0DB         	call	_set_load_relay_one	;wreg free
  7748                           
  7749                           ;bsoc.c: 229:   set_load_relay_two(0);
  7750  016B30  0E00               	movlw	0
  7751  016B32  6EE6               	movwf	postinc1,c
  7752  016B34  EC17  F0DB         	call	_set_load_relay_two	;wreg free
  7753                           
  7754                           ;bsoc.c: 230:   esr_state = 0;
  7755  016B38  6A54               	clrf	esr_check@esr_state^0,c
  7756                           
  7757                           ;bsoc.c: 231:   return C.esr;
  7758  016B3A  0060  F610  F028   	movff	_C+132,btemp	;volatile
  7759  016B40  0060  F614  F029   	movff	_C+133,btemp+1	;volatile
  7760  016B46  0060  F618  F02A   	movff	_C+134,btemp+2	;volatile
  7761  016B4C  0060  F61C  F02B   	movff	_C+135,btemp+3	;volatile
  7762  016B52  D01C               	goto	l2047
  7763  016B54                     l10656:
  7764  016B54  5054               	movf	esr_check@esr_state^0,w,c
  7765  016B56  6E32               	movwf	(btemp+10)^0,c
  7766  016B58  6A33               	clrf	(btemp+11)^0,c
  7767                           
  7768                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7769                           ; Switch size 1, requested type "simple"
  7770                           ; Number of cases is 1, Range of values is 0 to 0
  7771                           ; switch strategies available:
  7772                           ; Name         Instructions Cycles
  7773                           ; simple_byte            4     3 (average)
  7774                           ;	Chosen strategy is simple_byte
  7775  016B5A  5033               	movf	(btemp+11)^0,w,c
  7776  016B5C  0A00               	xorlw	0	; case 0
  7777  016B5E  A4D8               	btfss	status,2,c
  7778  016B60  D00D               	goto	l10658
  7779                           
  7780                           ; Switch size 1, requested type "simple"
  7781                           ; Number of cases is 4, Range of values is 0 to 3
  7782                           ; switch strategies available:
  7783                           ; Name         Instructions Cycles
  7784                           ; simple_byte           13     7 (average)
  7785                           ;	Chosen strategy is simple_byte
  7786  016B62  5032               	movf	(btemp+10)^0,w,c
  7787  016B64  0A00               	xorlw	0	; case 0
  7788  016B66  B4D8               	btfsc	status,2,c
  7789  016B68  D6C0               	goto	l10588
  7790  016B6A  0A01               	xorlw	1	; case 1
  7791  016B6C  B4D8               	btfsc	status,2,c
  7792  016B6E  D6C7               	goto	l10592
  7793  016B70  0A03               	xorlw	3	; case 2
  7794  016B72  B4D8               	btfsc	status,2,c
  7795  016B74  D6F7               	goto	l10608
  7796  016B76  0A01               	xorlw	1	; case 3
  7797  016B78  B4D8               	btfsc	status,2,c
  7798  016B7A  D735               	goto	l10626
  7799  016B7C                     l10658:
  7800                           
  7801                           ;bsoc.c: 236:  return -1.0;
  7802  016B7C  0E00               	movlw	0
  7803  016B7E  6E28               	movwf	btemp^0,c
  7804  016B80  0E00               	movlw	0
  7805  016B82  6E29               	movwf	(btemp+1)^0,c
  7806  016B84  0E80               	movlw	128
  7807  016B86  6E2A               	movwf	(btemp+2)^0,c
  7808  016B88  0EBF               	movlw	191
  7809  016B8A                     L3:
  7810  016B8A  6E2B               	movwf	(btemp+3)^0,c
  7811  016B8C                     l2047:
  7812                           
  7813                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7814  016B8C  52E5               	movf	postdec1,f,c
  7815  016B8E  0012               	return		;funcret
  7816  016B90                     __end_of_esr_check:
  7817                           	opt callstack 0
  7818                           
  7819 ;; *************** function _update_adc_result *****************
  7820 ;; Defined at:
  7821 ;;		line 71 in file "daq.c"
  7822 ;; Parameters:    Size  Location     Type
  7823 ;;		None
  7824 ;; Auto vars:     Size  Location     Type
  7825 ;;		None
  7826 ;; Return value:  Size  Location     Type
  7827 ;;                  1  [STACK] _Bool 
  7828 ;; Registers used:
  7829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7830 ;; Tracked objects:
  7831 ;;		On entry : 0/0
  7832 ;;		On exit  : 0/0
  7833 ;;		Unchanged: 0/0
  7834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7839 ;;Total ram usage:        0 bytes
  7840 ;; Hardware stack levels used:    1
  7841 ;; Hardware stack levels required when called:   17
  7842 ;; This function calls:
  7843 ;;		_StartTimer
  7844 ;;		_TimerDone
  7845 ;;		_check_adc_scan
  7846 ;;		_clear_adc_scan
  7847 ;;		_start_adc_scan
  7848 ;; This function is called by:
  7849 ;;		_esr_check
  7850 ;; This function uses a reentrant model
  7851 ;;
  7852                           
  7853                           	psect	text17
  7854  01AD5E                     __ptext17:
  7855                           	opt callstack 0
  7856  01AD5E                     _update_adc_result:
  7857                           	opt callstack 12
  7858                           
  7859                           ;daq.c: 73:  if (R.done) {
  7860                           
  7861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7862                           ;incstack = 0
  7863  01AD5E  0100               	movlb	0	; () banked
  7864  01AD60  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7865  01AD62  B4D8               	btfsc	status,2,c
  7866  01AD64  0012               	return	
  7867                           
  7868                           ; BSR set to: 0
  7869                           ;daq.c: 74:   clear_adc_scan();
  7870  01AD66  EC7D  F0DB         	call	_clear_adc_scan	;wreg free
  7871                           
  7872                           ; BSR set to: 0
  7873                           ;daq.c: 75:   start_adc_scan();
  7874  01AD6A  ECE8  F0D2         	call	_start_adc_scan	;wreg free
  7875                           
  7876                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7877  01AD6E  0EC8               	movlw	200
  7878  01AD70  6EE6               	movwf	postinc1,c
  7879  01AD72  0E00               	movlw	0
  7880  01AD74  6EE6               	movwf	postinc1,c
  7881  01AD76  0E01               	movlw	1
  7882  01AD78  6EE6               	movwf	postinc1,c
  7883  01AD7A  EC10  F0D6         	call	_StartTimer	;wreg free
  7884  01AD7E                     l10202:
  7885  01AD7E  0E01               	movlw	1
  7886  01AD80  6EE6               	movwf	postinc1,c
  7887  01AD82  EC91  F0D8         	call	_TimerDone	;wreg free
  7888  01AD86  5028               	movf	btemp^0,w,c
  7889  01AD88  A4D8               	btfss	status,2,c
  7890  01AD8A  0012               	return	
  7891  01AD8C  EC6D  F0DB         	call	_check_adc_scan	;wreg free
  7892  01AD90  5028               	movf	btemp^0,w,c
  7893  01AD92  A4D8               	btfss	status,2,c
  7894  01AD94  0012               	return	
  7895  01AD96  D7F3               	goto	l10202
  7896  01AD98                     __end_of_update_adc_result:
  7897                           	opt callstack 0
  7898                           
  7899 ;; *************** function _start_adc_scan *****************
  7900 ;; Defined at:
  7901 ;;		line 32 in file "daq.c"
  7902 ;; Parameters:    Size  Location     Type
  7903 ;;		None
  7904 ;; Auto vars:     Size  Location     Type
  7905 ;;		None
  7906 ;; Return value:  Size  Location     Type
  7907 ;;                  1  [STACK] _Bool 
  7908 ;; Registers used:
  7909 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7910 ;; Tracked objects:
  7911 ;;		On entry : 0/0
  7912 ;;		On exit  : 1/0
  7913 ;;		Unchanged: 0/0
  7914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7919 ;;Total ram usage:        0 bytes
  7920 ;; Hardware stack levels used:    1
  7921 ;; Hardware stack levels required when called:   16
  7922 ;; This function calls:
  7923 ;;		_ADCC_DischargeSampleCapacitor
  7924 ;;		_ADCC_SetADIInterruptHandler
  7925 ;;		_ADCC_SetADTIInterruptHandler
  7926 ;;		_ADCC_StartConversion
  7927 ;; This function is called by:
  7928 ;;		_main
  7929 ;;		_update_adc_result
  7930 ;; This function uses a reentrant model
  7931 ;;
  7932                           
  7933                           	psect	text18
  7934  01A5D0                     __ptext18:
  7935                           	opt callstack 0
  7936  01A5D0                     _start_adc_scan:
  7937                           	opt callstack 14
  7938                           
  7939                           ;daq.c: 34:  if (R.done)
  7940                           
  7941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7942                           ;incstack = 0
  7943  01A5D0  0100               	movlb	0	; () banked
  7944  01A5D2  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7945  01A5D4  A4D8               	btfss	status,2,c
  7946  01A5D6  0012               	return	
  7947                           
  7948                           ; BSR set to: 0
  7949                           ;daq.c: 37:  R.scan_index = 0;
  7950  01A5D8  6BE8               	clrf	(_R+36)& (0+255),b	;volatile
  7951                           
  7952                           ; BSR set to: 0
  7953                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7954  01A5DA  013A               	movlb	58	; () banked
  7955  01A5DC  5140               	movf	64,w,b	;volatile
  7956  01A5DE  006E F940  F028    	movff	14928,btemp	;volatile
  7957  01A5E4  6A29               	clrf	(btemp+1)^0,c
  7958  01A5E6  0060  F0A0  F029   	movff	btemp,btemp+1
  7959  01A5EC  6A28               	clrf	btemp^0,c
  7960  01A5EE  2628               	addwf	btemp^0,f,c
  7961  01A5F0  0E00               	movlw	0
  7962  01A5F2  2229               	addwfc	(btemp+1)^0,f,c
  7963  01A5F4  0E77               	movlw	119
  7964  01A5F6  1428               	andwf	btemp^0,w,c
  7965  01A5F8  0100               	movlb	0	; () banked
  7966  01A5FA  6FE9               	movwf	(_R+37)& (0+255),b	;volatile
  7967  01A5FC  0E3C               	movlw	60
  7968  01A5FE  1429               	andwf	(btemp+1)^0,w,c
  7969  01A600  6FEA               	movwf	(_R+38)& (0+255),b	;volatile
  7970                           
  7971                           ; BSR set to: 0
  7972                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7973  01A602  0E22               	movlw	low _adc_int_handler
  7974  01A604  6EE6               	movwf	postinc1,c
  7975  01A606  0EB7               	movlw	high _adc_int_handler
  7976  01A608  6EE6               	movwf	postinc1,c
  7977  01A60A  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7978  01A60C  6EE6               	movwf	postinc1,c
  7979  01A60E  EC59  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7980                           
  7981                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7982  01A612  0EAE               	movlw	low _adc_int_t_handler
  7983  01A614  6EE6               	movwf	postinc1,c
  7984  01A616  0EA3               	movlw	high _adc_int_t_handler
  7985  01A618  6EE6               	movwf	postinc1,c
  7986  01A61A  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7987  01A61C  6EE6               	movwf	postinc1,c
  7988  01A61E  EC45  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7989                           
  7990                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7991  01A622  EC69  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7992                           
  7993                           ; BSR set to: 62
  7994                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7995  01A626  0100               	movlb	0	; () banked
  7996  01A628  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
  7997  01A62A  0B0F               	andlw	15
  7998  01A62C  6EE6               	movwf	postinc1,c
  7999  01A62E  EC0E  F0DB         	call	_ADCC_StartConversion	;wreg free
  8000                           
  8001                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8002  01A632  0012               	return		;funcret
  8003  01A634                     __end_of_start_adc_scan:
  8004                           	opt callstack 0
  8005                           
  8006 ;; *************** function _ADCC_StartConversion *****************
  8007 ;; Defined at:
  8008 ;;		line 128 in file "mcc_generated_files/adcc.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  channel         1  [STACK] enum E16136
  8011 ;; Auto vars:     Size  Location     Type
  8012 ;;		None
  8013 ;; Return value:  Size  Location     Type
  8014 ;;                  1  [STACK] void 
  8015 ;; Registers used:
  8016 ;;		fsr1l, fsr1h
  8017 ;; Tracked objects:
  8018 ;;		On entry : 3F/0
  8019 ;;		On exit  : 3F/3E
  8020 ;;		Unchanged: 0/0
  8021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8022 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8023 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8024 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8025 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8026 ;;Total ram usage:        0 bytes
  8027 ;; Hardware stack levels used:    1
  8028 ;; Hardware stack levels required when called:   15
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_start_adc_scan
  8033 ;;		_adc_int_t_handler
  8034 ;; This function uses a reentrant model
  8035 ;;
  8036                           
  8037                           	psect	text19
  8038  01B61C                     __ptext19:
  8039                           	opt callstack 0
  8040  01B61C                     _ADCC_StartConversion:
  8041                           	opt callstack 0
  8042                           
  8043                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8044                           ;stkvar	_channel @ sp[(0)+-1]
  8045                           
  8046                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8047                           ;incstack = 0
  8048 ;; hardware stack exceeded
  8049  01B61C  0EFF               	movlw	-1
  8050  01B61E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8051                           
  8052                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8053  01B624  013E               	movlb	62	; () banked
  8054  01B626  8FF8               	bsf	248,7,b	;volatile
  8055                           
  8056                           ; BSR set to: 62
  8057                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8058  01B628  81F8               	bsf	248,0,b	;volatile
  8059                           
  8060                           ; BSR set to: 62
  8061                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8062  01B62A  52E5               	movf	postdec1,f,c
  8063  01B62C  0012               	return		;funcret
  8064  01B62E                     __end_of_ADCC_StartConversion:
  8065                           	opt callstack 0
  8066                           
  8067 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8068 ;; Defined at:
  8069 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8070 ;; Parameters:    Size  Location     Type
  8071 ;;		None
  8072 ;; Auto vars:     Size  Location     Type
  8073 ;;		None
  8074 ;; Return value:  Size  Location     Type
  8075 ;;                  1  [STACK] void 
  8076 ;; Registers used:
  8077 ;;		wreg, status,2
  8078 ;; Tracked objects:
  8079 ;;		On entry : 0/0
  8080 ;;		On exit  : 3F/3E
  8081 ;;		Unchanged: 0/0
  8082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8087 ;;Total ram usage:        0 bytes
  8088 ;; Hardware stack levels used:    1
  8089 ;; Hardware stack levels required when called:   15
  8090 ;; This function calls:
  8091 ;;		Nothing
  8092 ;; This function is called by:
  8093 ;;		_start_adc_scan
  8094 ;;		_adc_int_t_handler
  8095 ;; This function uses a reentrant model
  8096 ;;
  8097                           
  8098                           	psect	text20
  8099  01B6D2                     __ptext20:
  8100                           	opt callstack 0
  8101  01B6D2                     _ADCC_DischargeSampleCapacitor:
  8102                           	opt callstack 0
  8103                           
  8104                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8105                           
  8106                           ; BSR set to: 62
  8107                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8108                           ;incstack = 0
  8109 ;; hardware stack exceeded
  8110  01B6D2  0E3B               	movlw	59
  8111  01B6D4  013E               	movlb	62	; () banked
  8112  01B6D6  6FF1               	movwf	241,b	;volatile
  8113                           
  8114                           ; BSR set to: 62
  8115                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8116  01B6D8  0012               	return		;funcret
  8117  01B6DA                     __end_of_ADCC_DischargeSampleCapacitor:
  8118                           	opt callstack 0
  8119                           
  8120 ;; *************** function _clear_adc_scan *****************
  8121 ;; Defined at:
  8122 ;;		line 63 in file "daq.c"
  8123 ;; Parameters:    Size  Location     Type
  8124 ;;		None
  8125 ;; Auto vars:     Size  Location     Type
  8126 ;;		None
  8127 ;; Return value:  Size  Location     Type
  8128 ;;                  1  [STACK] void 
  8129 ;; Registers used:
  8130 ;;		None
  8131 ;; Tracked objects:
  8132 ;;		On entry : 0/0
  8133 ;;		On exit  : 3F/0
  8134 ;;		Unchanged: 0/0
  8135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8140 ;;Total ram usage:        0 bytes
  8141 ;; Hardware stack levels used:    1
  8142 ;; Hardware stack levels required when called:   15
  8143 ;; This function calls:
  8144 ;;		Nothing
  8145 ;; This function is called by:
  8146 ;;		_main
  8147 ;;		_update_adc_result
  8148 ;; This function uses a reentrant model
  8149 ;;
  8150                           
  8151                           	psect	text21
  8152  01B6FA                     __ptext21:
  8153                           	opt callstack 0
  8154  01B6FA                     _clear_adc_scan:
  8155                           	opt callstack 13
  8156                           
  8157                           ;daq.c: 65:  R.done = 0;
  8158                           
  8159                           ; BSR set to: 62
  8160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8161                           ;incstack = 0
  8162  01B6FA  0100               	movlb	0	; () banked
  8163  01B6FC  6BEB               	clrf	(_R+39)& (0+255),b	;volatile
  8164                           
  8165                           ; BSR set to: 0
  8166                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8167  01B6FE  0012               	return		;funcret
  8168  01B700                     __end_of_clear_adc_scan:
  8169                           	opt callstack 0
  8170                           
  8171 ;; *************** function _check_adc_scan *****************
  8172 ;; Defined at:
  8173 ;;		line 55 in file "daq.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;		None
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;		None
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  1  [STACK] _Bool 
  8180 ;; Registers used:
  8181 ;;		btemp
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8191 ;;Total ram usage:        0 bytes
  8192 ;; Hardware stack levels used:    1
  8193 ;; Hardware stack levels required when called:   15
  8194 ;; This function calls:
  8195 ;;		Nothing
  8196 ;; This function is called by:
  8197 ;;		_main
  8198 ;;		_update_adc_result
  8199 ;; This function uses a reentrant model
  8200 ;;
  8201                           
  8202                           	psect	text22
  8203  01B6DA                     __ptext22:
  8204                           	opt callstack 0
  8205  01B6DA                     _check_adc_scan:
  8206                           	opt callstack 13
  8207                           
  8208                           ;daq.c: 57:  return R.done;
  8209                           
  8210                           ; BSR set to: 0
  8211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8212                           ;incstack = 0
  8213  01B6DA  0060  F3AC  F028   	movff	_R+39,btemp	;volatile
  8214                           
  8215                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8216  01B6E0  0012               	return		;funcret
  8217  01B6E2                     __end_of_check_adc_scan:
  8218                           	opt callstack 0
  8219                           
  8220 ;; *************** function _set_load_relay_two *****************
  8221 ;; Defined at:
  8222 ;;		line 128 in file "mbmc.c"
  8223 ;; Parameters:    Size  Location     Type
  8224 ;;  mode            1  [STACK] _Bool 
  8225 ;; Auto vars:     Size  Location     Type
  8226 ;;		None
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  1  [STACK] void 
  8229 ;; Registers used:
  8230 ;;		wreg, fsr1l, fsr1h
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8240 ;;Total ram usage:        0 bytes
  8241 ;; Hardware stack levels used:    1
  8242 ;; Hardware stack levels required when called:   15
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_main
  8247 ;;		_esr_check
  8248 ;; This function uses a reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text23
  8252  01B62E                     __ptext23:
  8253                           	opt callstack 0
  8254  01B62E                     _set_load_relay_two:
  8255                           	opt callstack 15
  8256                           
  8257                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  8258                           ;stkvar	_mode @ sp[(0)+-1]
  8259                           
  8260                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8261                           ;incstack = 0
  8262  01B62E  0EFF               	movlw	-1
  8263  01B630  B0E3               	btfsc	plusw1,0,c
  8264  01B632  D002               	bra	u9045
  8265  01B634  9ABD               	bcf	189,5,c	;volatile
  8266  01B636  D001               	bra	u9046
  8267  01B638                     u9045:
  8268  01B638  8ABD               	bsf	189,5,c	;volatile
  8269  01B63A                     u9046:
  8270                           
  8271                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8272  01B63A  52E5               	movf	postdec1,f,c
  8273  01B63C  0012               	return		;funcret
  8274  01B63E                     __end_of_set_load_relay_two:
  8275                           	opt callstack 0
  8276                           
  8277 ;; *************** function _set_load_relay_one *****************
  8278 ;; Defined at:
  8279 ;;		line 123 in file "mbmc.c"
  8280 ;; Parameters:    Size  Location     Type
  8281 ;;  mode            1  [STACK] _Bool 
  8282 ;; Auto vars:     Size  Location     Type
  8283 ;;		None
  8284 ;; Return value:  Size  Location     Type
  8285 ;;                  1  [STACK] void 
  8286 ;; Registers used:
  8287 ;;		wreg, fsr1l, fsr1h
  8288 ;; Tracked objects:
  8289 ;;		On entry : 0/0
  8290 ;;		On exit  : 0/0
  8291 ;;		Unchanged: 0/0
  8292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8293 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8296 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8297 ;;Total ram usage:        0 bytes
  8298 ;; Hardware stack levels used:    1
  8299 ;; Hardware stack levels required when called:   15
  8300 ;; This function calls:
  8301 ;;		Nothing
  8302 ;; This function is called by:
  8303 ;;		_main
  8304 ;;		_esr_check
  8305 ;; This function uses a reentrant model
  8306 ;;
  8307                           
  8308                           	psect	text24
  8309  01B63E                     __ptext24:
  8310                           	opt callstack 0
  8311  01B63E                     _set_load_relay_one:
  8312                           	opt callstack 15
  8313                           
  8314                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  8315                           ;stkvar	_mode @ sp[(0)+-1]
  8316                           
  8317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8318                           ;incstack = 0
  8319  01B63E  0EFF               	movlw	-1
  8320  01B640  B0E3               	btfsc	plusw1,0,c
  8321  01B642  D002               	bra	u9035
  8322  01B644  98BD               	bcf	189,4,c	;volatile
  8323  01B646  D001               	bra	u9036
  8324  01B648                     u9035:
  8325  01B648  88BD               	bsf	189,4,c	;volatile
  8326  01B64A                     u9036:
  8327                           
  8328                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8329  01B64A  52E5               	movf	postdec1,f,c
  8330  01B64C  0012               	return		;funcret
  8331  01B64E                     __end_of_set_load_relay_one:
  8332                           	opt callstack 0
  8333                           
  8334 ;; *************** function _eaDogM_WriteCommand *****************
  8335 ;; Defined at:
  8336 ;;		line 175 in file "eadog.c"
  8337 ;; Parameters:    Size  Location     Type
  8338 ;;  cmd             1  [STACK] const unsigned char 
  8339 ;; Auto vars:     Size  Location     Type
  8340 ;;		None
  8341 ;; Return value:  Size  Location     Type
  8342 ;;                  1  [STACK] void 
  8343 ;; Registers used:
  8344 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8345 ;; Tracked objects:
  8346 ;;		On entry : 3F/3D
  8347 ;;		On exit  : 3F/0
  8348 ;;		Unchanged: 0/0
  8349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8350 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8351 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8353 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8354 ;;Total ram usage:        0 bytes
  8355 ;; Hardware stack levels used:    1
  8356 ;; Hardware stack levels required when called:   25
  8357 ;; This function calls:
  8358 ;;		_send_lcd_cmd_dma
  8359 ;; This function is called by:
  8360 ;;		_main
  8361 ;; This function uses a reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text25
  8365  01B65E                     __ptext25:
  8366                           	opt callstack 0
  8367  01B65E                     _eaDogM_WriteCommand:
  8368                           	opt callstack 5
  8369                           
  8370                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8371                           ;stkvar	_cmd @ sp[(0)+-1]
  8372                           
  8373                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8374                           ;incstack = 0
  8375  01B65E  0EFF               	movlw	-1
  8376  01B660  50E3               	movf	plusw1,w,c
  8377  01B662  6EE6               	movwf	postinc1,c
  8378  01B664  EC33  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  8379                           
  8380                           ; BSR set to: 0
  8381                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8382  01B668  52E5               	movf	postdec1,f,c
  8383  01B66A  0012               	return		;funcret
  8384  01B66C                     __end_of_eaDogM_WriteCommand:
  8385                           	opt callstack 0
  8386                           
  8387 ;; *************** function _convert_adc_data *****************
  8388 ;; Defined at:
  8389 ;;		line 51 in file "mbmc.c"
  8390 ;; Parameters:    Size  Location     Type
  8391 ;;		None
  8392 ;; Auto vars:     Size  Location     Type
  8393 ;;  i               1  [STACK] unsigned char 
  8394 ;; Return value:  Size  Location     Type
  8395 ;;                  1  [STACK] void 
  8396 ;; Registers used:
  8397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8398 ;; Tracked objects:
  8399 ;;		On entry : 0/0
  8400 ;;		On exit  : 0/0
  8401 ;;		Unchanged: 0/0
  8402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8407 ;;Total ram usage:        0 bytes
  8408 ;; Hardware stack levels used:    1
  8409 ;; Hardware stack levels required when called:   18
  8410 ;; This function calls:
  8411 ;;		_conv_raw_result
  8412 ;;		_lp_filter
  8413 ;; This function is called by:
  8414 ;;		_main
  8415 ;; This function uses a reentrant model
  8416 ;;
  8417                           
  8418                           	psect	text26
  8419  019B3A                     __ptext26:
  8420                           	opt callstack 0
  8421  019B3A                     _convert_adc_data:
  8422                           	opt callstack 0
  8423                           
  8424                           ; BSR set to: 0
  8425                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8426  019B3A  52E6               	movf	postinc1,f,c
  8427                           
  8428                           ;mbmc.c: 53:  uint8_t i = 0;
  8429                           ;stkvar	_i @ sp[(-1)+0]
  8430                           
  8431                           ;incstack = 0
  8432  019B3C  0EFF               	movlw	-1
  8433  019B3E  6AE3               	clrf	plusw1,c
  8434  019B40                     l10668:
  8435                           
  8436                           ;mbmc.c: 56:   if (V.calib) {
  8437  019B40  0102               	movlb	2	; () banked
  8438  019B42  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  8439  019B44  B4D8               	btfsc	status,2,c
  8440  019B46  D01B               	goto	l10672
  8441                           
  8442                           ; BSR set to: 2
  8443                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8444  019B48  0E01               	movlw	1
  8445  019B4A  6EE6               	movwf	postinc1,c
  8446                           
  8447                           ;stkvar	_i @ sp[(-2)+0]
  8448  019B4C  0EFE               	movlw	-2
  8449  019B4E  50E3               	movf	plusw1,w,c
  8450  019B50  6EE6               	movwf	postinc1,c
  8451  019B52  0E01               	movlw	1
  8452  019B54  6EE6               	movwf	postinc1,c
  8453                           
  8454                           ;stkvar	_i @ sp[(-4)+0]
  8455  019B56  0EFC               	movlw	-4
  8456  019B58  50E3               	movf	plusw1,w,c
  8457  019B5A  6EE6               	movwf	postinc1,c
  8458  019B5C  EC58  F0A7         	call	_conv_raw_result	;wreg free
  8459  019B60  0060  F0A3  FFE6   	movff	btemp,postinc1
  8460  019B66  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8461  019B6C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  8462  019B72  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  8463  019B78  ECDC  F0BE         	call	_lp_filter	;wreg free
  8464  019B7C  D01A               	goto	L6
  8465  019B7E                     l10672:
  8466                           
  8467                           ; BSR set to: 2
  8468                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8469  019B7E  0E00               	movlw	0
  8470  019B80  6EE6               	movwf	postinc1,c
  8471                           
  8472                           ;stkvar	_i @ sp[(-2)+0]
  8473  019B82  0EFE               	movlw	-2
  8474  019B84  50E3               	movf	plusw1,w,c
  8475  019B86  6EE6               	movwf	postinc1,c
  8476  019B88  0E00               	movlw	0
  8477  019B8A  6EE6               	movwf	postinc1,c
  8478                           
  8479                           ;stkvar	_i @ sp[(-4)+0]
  8480  019B8C  0EFC               	movlw	-4
  8481  019B8E  50E3               	movf	plusw1,w,c
  8482  019B90  6EE6               	movwf	postinc1,c
  8483  019B92  EC58  F0A7         	call	_conv_raw_result	;wreg free
  8484  019B96  0060  F0A3  FFE6   	movff	btemp,postinc1
  8485  019B9C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8486  019BA2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  8487  019BA8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  8488  019BAE  ECDC  F0BE         	call	_lp_filter	;wreg free
  8489  019BB2                     L6:
  8490                           
  8491                           ;stkvar	_i @ sp[(-1)+0]
  8492  019BB2  0EFF               	movlw	-1
  8493  019BB4  50E3               	movf	plusw1,w,c
  8494  019BB6  0D04               	mullw	4
  8495  019BB8  0E00               	movlw	low _C
  8496  019BBA  24F3               	addwf	243,w,c
  8497  019BBC  6ED9               	movwf	fsr2l,c
  8498  019BBE  0E01               	movlw	high _C
  8499  019BC0  20F4               	addwfc	prodh,w,c
  8500  019BC2  6EDA               	movwf	fsr2h,c
  8501  019BC4  0060  F0A3  FFDE   	movff	btemp,postinc2
  8502  019BCA  0060  F0A7  FFDE   	movff	btemp+1,postinc2
  8503  019BD0  0060  F0AB  FFDE   	movff	btemp+2,postinc2
  8504  019BD6  0060  F0AF  FFDE   	movff	btemp+3,postinc2
  8505                           
  8506                           ;mbmc.c: 61:  } while (++i < 16);
  8507                           ;stkvar	_i @ sp[(-1)+0]
  8508  019BDC  0EFF               	movlw	-1
  8509  019BDE  2AE3               	incf	plusw1,f,c
  8510  019BE0  0EFF               	movlw	-1
  8511  019BE2  006F FF8C  F028    	movff	plusw1,btemp
  8512  019BE8  0E0F               	movlw	15
  8513  019BEA  6428               	cpfsgt	btemp^0,c
  8514  019BEC  D7A9               	goto	l10668
  8515                           
  8516                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8517  019BEE  52E5               	movf	postdec1,f,c
  8518  019BF0  0012               	return		;funcret
  8519  019BF2                     __end_of_convert_adc_data:
  8520                           	opt callstack 0
  8521                           
  8522 ;; *************** function _clear_hid_pflags *****************
  8523 ;; Defined at:
  8524 ;;		line 51 in file "hid.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  h               1  [STACK] PTR struct H_data
  8527 ;;		 -> H(7), 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1  [STACK] void 
  8532 ;; Registers used:
  8533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8534 ;; Tracked objects:
  8535 ;;		On entry : 3F/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8543 ;;Total ram usage:        0 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; Hardware stack levels required when called:   15
  8546 ;; This function calls:
  8547 ;;		Nothing
  8548 ;; This function is called by:
  8549 ;;		_main
  8550 ;; This function uses a reentrant model
  8551 ;;
  8552                           
  8553                           	psect	text27
  8554  01B378                     __ptext27:
  8555                           	opt callstack 0
  8556  01B378                     _clear_hid_pflags:
  8557                           	opt callstack 15
  8558                           
  8559                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8560                           ;stkvar	_h @ sp[(0)+-1]
  8561                           
  8562                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8563                           ;incstack = 0
  8564  01B378  0EFF               	movlw	-1
  8565  01B37A  50E3               	movf	plusw1,w,c
  8566  01B37C  6ED9               	movwf	fsr2l,c
  8567  01B37E  6ADA               	clrf	fsr2h,c
  8568  01B380  0E03               	movlw	3
  8569  01B382  26D9               	addwf	fsr2l,f,c
  8570  01B384  0E00               	movlw	0
  8571  01B386  6EDF               	movwf	indf2,c
  8572                           
  8573                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8574                           ;stkvar	_h @ sp[(0)+-1]
  8575  01B388  0EFF               	movlw	-1
  8576  01B38A  50E3               	movf	plusw1,w,c
  8577  01B38C  6ED9               	movwf	fsr2l,c
  8578  01B38E  6ADA               	clrf	fsr2h,c
  8579  01B390  0E05               	movlw	5
  8580  01B392  26D9               	addwf	fsr2l,f,c
  8581  01B394  0E00               	movlw	0
  8582  01B396  6EDF               	movwf	indf2,c
  8583                           
  8584                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8585  01B398  52E5               	movf	postdec1,f,c
  8586  01B39A  0012               	return		;funcret
  8587  01B39C                     __end_of_clear_hid_pflags:
  8588                           	opt callstack 0
  8589                           
  8590 ;; *************** function _check_help *****************
  8591 ;; Defined at:
  8592 ;;		line 40 in file "mconfig.c"
  8593 ;; Parameters:    Size  Location     Type
  8594 ;;  flipper         1  [STACK] const _Bool 
  8595 ;; Auto vars:     Size  Location     Type
  8596 ;;  estatus         1    0        _Bool 
  8597 ;; Return value:  Size  Location     Type
  8598 ;;                  1  [STACK] _Bool 
  8599 ;; Registers used:
  8600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8601 ;; Tracked objects:
  8602 ;;		On entry : 3F/2
  8603 ;;		On exit  : 0/0
  8604 ;;		Unchanged: 0/0
  8605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8606 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8609 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8610 ;;Total ram usage:        0 bytes
  8611 ;; Hardware stack levels used:    1
  8612 ;; Hardware stack levels required when called:   27
  8613 ;; This function calls:
  8614 ;;		_StartTimer
  8615 ;;		_TimerDone
  8616 ;;		_display_help
  8617 ;;		_display_info
  8618 ;;		_get_vterm_ptr
  8619 ;;		_help_button
  8620 ;;		_mode_lamp_bright
  8621 ;;		_mode_lamp_dim
  8622 ;;		_set_display_info
  8623 ;;		_set_temp_display_help
  8624 ;;		_set_vterm
  8625 ;;		_sprintf
  8626 ;;		_update_lcd
  8627 ;;		_vterm_dump
  8628 ;; This function is called by:
  8629 ;;		_main
  8630 ;; This function uses a reentrant model
  8631 ;;
  8632                           
  8633                           	psect	text28
  8634  0177A2                     __ptext28:
  8635                           	opt callstack 0
  8636  0177A2                     _check_help:
  8637                           	opt callstack 3
  8638                           
  8639                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8640                           
  8641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8642                           ;incstack = 0
  8643  0177A2  ECCC  F0D6         	call	_help_button	;wreg free
  8644  0177A6  5028               	movf	btemp^0,w,c
  8645  0177A8  B4D8               	btfsc	status,2,c
  8646  0177AA  D0D0               	goto	l12530
  8647  0177AC  EC71  F0DB         	call	_display_info	;wreg free
  8648  0177B0  0428               	decf	btemp^0,w,c
  8649  0177B2  B4D8               	btfsc	status,2,c
  8650  0177B4  D0CB               	goto	l12530
  8651                           
  8652                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8653  0177B6  0EDC               	movlw	220
  8654  0177B8  6EE6               	movwf	postinc1,c
  8655  0177BA  0E05               	movlw	5
  8656  0177BC  6EE6               	movwf	postinc1,c
  8657  0177BE  0E0B               	movlw	11
  8658  0177C0  6EE6               	movwf	postinc1,c
  8659  0177C2  EC10  F0D6         	call	_StartTimer	;wreg free
  8660                           
  8661                           ;mconfig.c: 48:   if (V.debug)
  8662  0177C6  0102               	movlb	2	; () banked
  8663  0177C8  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8664                           
  8665                           ; BSR set to: 2
  8666                           ;mconfig.c: 49:    vterm_dump();
  8667  0177CA  ECBA  F0C6         	call	_vterm_dump	;wreg free
  8668                           
  8669                           ;mconfig.c: 51:   set_vterm(1);
  8670  0177CE  0E01               	movlw	1
  8671  0177D0  6EE6               	movwf	postinc1,c
  8672  0177D2  EC58  F0DA         	call	_set_vterm	;wreg free
  8673                           
  8674                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8675  0177D6  EC71  F0DB         	call	_display_info	;wreg free
  8676  0177DA  5028               	movf	btemp^0,w,c
  8677  0177DC  6EE6               	movwf	postinc1,c
  8678  0177DE  EC27  F0DB         	call	_set_temp_display_help	;wreg free
  8679                           
  8680                           ; BSR set to: 2
  8681                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8682  0177E2  0E01               	movlw	1
  8683  0177E4  6EE6               	movwf	postinc1,c
  8684  0177E6  EC67  F0DA         	call	_set_display_info	;wreg free
  8685                           
  8686                           ;mconfig.c: 54:   if (flipper) {
  8687                           ;stkvar	_flipper @ sp[(0)+-1]
  8688  0177EA  0EFF               	movlw	-1
  8689  0177EC  50E3               	movf	plusw1,w,c
  8690  0177EE  B4D8               	btfsc	status,2,c
  8691  0177F0  D019               	goto	l12516
  8692                           
  8693                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8694  0177F2  0EB1               	movlw	low STR_46
  8695  0177F4  6EE6               	movwf	postinc1,c
  8696  0177F6  0EFF               	movlw	high STR_46
  8697  0177F8  6EE6               	movwf	postinc1,c
  8698  0177FA  0E01               	movlw	low STR_48
  8699  0177FC  6EE6               	movwf	postinc1,c
  8700  0177FE  0EFE               	movlw	high STR_48
  8701  017800  6EE6               	movwf	postinc1,c
  8702  017802  0E01               	movlw	1
  8703  017804  6EE6               	movwf	postinc1,c
  8704  017806  0E00               	movlw	0
  8705  017808  6EE6               	movwf	postinc1,c
  8706  01780A  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8707  01780E  0060  F0A3  FFE6   	movff	btemp,postinc1
  8708  017814  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8709  01781A  0E06               	movlw	6
  8710  01781C  6EE6               	movwf	postinc1,c
  8711  01781E  EC08  F0CA         	call	_sprintf	;wreg free
  8712                           
  8713                           ;mconfig.c: 56:   } else {
  8714  017822  D018               	goto	l1664
  8715  017824                     l12516:
  8716                           
  8717                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8718  017824  0EC7               	movlw	low STR_47
  8719  017826  6EE6               	movwf	postinc1,c
  8720  017828  0EFF               	movlw	high STR_47
  8721  01782A  6EE6               	movwf	postinc1,c
  8722  01782C  0E01               	movlw	low STR_48
  8723  01782E  6EE6               	movwf	postinc1,c
  8724  017830  0EFE               	movlw	high STR_48
  8725  017832  6EE6               	movwf	postinc1,c
  8726  017834  0E01               	movlw	1
  8727  017836  6EE6               	movwf	postinc1,c
  8728  017838  0E00               	movlw	0
  8729  01783A  6EE6               	movwf	postinc1,c
  8730  01783C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8731  017840  0060  F0A3  FFE6   	movff	btemp,postinc1
  8732  017846  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8733  01784C  0E06               	movlw	6
  8734  01784E  6EE6               	movwf	postinc1,c
  8735  017850  EC08  F0CA         	call	_sprintf	;wreg free
  8736  017854                     l1664:
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8740  017854  0102               	movlb	2	; () banked
  8741  017856  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8742  017858  32E8               	rrcf	wreg,f,c
  8743  01785A  32E8               	rrcf	wreg,f,c
  8744  01785C  0B03               	andlw	3
  8745  01785E  0D24               	mullw	36
  8746  017860  0E12               	movlw	18
  8747  017862  26F3               	addwf	243,f,c
  8748  017864  0E00               	movlw	0
  8749  017866  22F4               	addwfc	244,f,c
  8750  017868  0E4B               	movlw	low _T
  8751  01786A  6E32               	movwf	(btemp+10)^0,c
  8752  01786C  0EFB               	movlw	high _T
  8753  01786E  6E33               	movwf	(btemp+11)^0,c
  8754  017870  50F3               	movf	243,w,c
  8755  017872  2632               	addwf	(btemp+10)^0,f,c
  8756  017874  50F4               	movf	244,w,c
  8757  017876  2233               	addwfc	(btemp+11)^0,f,c
  8758  017878  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  8759  01787E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  8760  017884  0EBD               	movlw	low STR_50
  8761  017886  6EE6               	movwf	postinc1,c
  8762  017888  0EFF               	movlw	high STR_50
  8763  01788A  6EE6               	movwf	postinc1,c
  8764  01788C  0E01               	movlw	1
  8765  01788E  6EE6               	movwf	postinc1,c
  8766  017890  0E01               	movlw	1
  8767  017892  6EE6               	movwf	postinc1,c
  8768  017894  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8769  017898  0060  F0A3  FFE6   	movff	btemp,postinc1
  8770  01789E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8771  0178A4  0E06               	movlw	6
  8772  0178A6  6EE6               	movwf	postinc1,c
  8773  0178A8  EC08  F0CA         	call	_sprintf	;wreg free
  8774                           
  8775                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8776  0178AC  0102               	movlb	2	; () banked
  8777  0178AE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8778  0178B0  32E8               	rrcf	wreg,f,c
  8779  0178B2  32E8               	rrcf	wreg,f,c
  8780  0178B4  0B03               	andlw	3
  8781  0178B6  0D24               	mullw	36
  8782  0178B8  0E4B               	movlw	low _T
  8783  0178BA  6E32               	movwf	(btemp+10)^0,c
  8784  0178BC  0EFB               	movlw	high _T
  8785  0178BE  6E33               	movwf	(btemp+11)^0,c
  8786  0178C0  50F3               	movf	243,w,c
  8787  0178C2  2632               	addwf	(btemp+10)^0,f,c
  8788  0178C4  50F4               	movf	244,w,c
  8789  0178C6  2233               	addwfc	(btemp+11)^0,f,c
  8790  0178C8  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  8791  0178CE  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  8792  0178D4  0EBD               	movlw	low STR_50
  8793  0178D6  6EE6               	movwf	postinc1,c
  8794  0178D8  0EFF               	movlw	high STR_50
  8795  0178DA  6EE6               	movwf	postinc1,c
  8796  0178DC  0E01               	movlw	1
  8797  0178DE  6EE6               	movwf	postinc1,c
  8798  0178E0  0E02               	movlw	2
  8799  0178E2  6EE6               	movwf	postinc1,c
  8800  0178E4  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8801  0178E8  0060  F0A3  FFE6   	movff	btemp,postinc1
  8802  0178EE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8803  0178F4  0E06               	movlw	6
  8804  0178F6  6EE6               	movwf	postinc1,c
  8805  0178F8  EC08  F0CA         	call	_sprintf	;wreg free
  8806                           
  8807                           ; BSR set to: 0
  8808                           ;mconfig.c: 61:   V.help_id++;
  8809  0178FC  EE20  F29B         	lfsr	2,_V+155	;volatile
  8810  017900  38DF               	swapf	223,w,c
  8811  017902  6E33               	movwf	(btemp+11)^0,c
  8812  017904  3233               	rrcf	(btemp+11)^0,f,c
  8813  017906  3033               	rrcf	(btemp+11)^0,w,c
  8814  017908  0B03               	andlw	3
  8815  01790A  6E33               	movwf	(btemp+11)^0,c
  8816  01790C  2A33               	incf	(btemp+11)^0,f,c
  8817  01790E  3A33               	swapf	(btemp+11)^0,f,c
  8818  017910  3633               	rlcf	(btemp+11)^0,f,c
  8819  017912  3633               	rlcf	(btemp+11)^0,f,c
  8820  017914  50DF               	movf	223,w,c
  8821  017916  1833               	xorwf	(btemp+11)^0,w,c
  8822  017918  0B3F               	andlw	-193
  8823  01791A  1833               	xorwf	(btemp+11)^0,w,c
  8824  01791C  6EDF               	movwf	223,c
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8828  01791E  0EB8               	movlw	184
  8829  017920  6EE6               	movwf	postinc1,c
  8830  017922  0E0B               	movlw	11
  8831  017924  6EE6               	movwf	postinc1,c
  8832  017926  0E09               	movlw	9
  8833  017928  6EE6               	movwf	postinc1,c
  8834  01792A  EC10  F0D6         	call	_StartTimer	;wreg free
  8835                           
  8836                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8837  01792E  0EB8               	movlw	184
  8838  017930  6EE6               	movwf	postinc1,c
  8839  017932  0E0B               	movlw	11
  8840  017934  6EE6               	movwf	postinc1,c
  8841  017936  0E07               	movlw	7
  8842  017938  6EE6               	movwf	postinc1,c
  8843  01793A  EC10  F0D6         	call	_StartTimer	;wreg free
  8844                           
  8845                           ;mconfig.c: 64:   mode_lamp_bright();
  8846  01793E  EC36  F0DB         	call	_mode_lamp_bright	;wreg free
  8847                           
  8848                           ;mconfig.c: 65:   update_lcd(1);
  8849  017942  0E01               	movlw	1
  8850  017944  6EE6               	movwf	postinc1,c
  8851  017946  ECF9  F0C8         	call	_update_lcd	;wreg free
  8852                           
  8853                           ;mconfig.c: 67:  } else {
  8854  01794A  D032               	goto	l1665
  8855  01794C                     l12530:
  8856                           
  8857                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8858  01794C  0E09               	movlw	9
  8859  01794E  6EE6               	movwf	postinc1,c
  8860  017950  EC91  F0D8         	call	_TimerDone	;wreg free
  8861  017954  5028               	movf	btemp^0,w,c
  8862  017956  B4D8               	btfsc	status,2,c
  8863  017958  D02B               	goto	l1665
  8864                           
  8865                           ;mconfig.c: 69:    set_vterm(0);
  8866  01795A  0E00               	movlw	0
  8867  01795C  6EE6               	movwf	postinc1,c
  8868  01795E  EC58  F0DA         	call	_set_vterm	;wreg free
  8869                           
  8870                           ;mconfig.c: 70:    V.help = 0;
  8871  017962  0102               	movlb	2	; () banked
  8872  017964  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8873                           
  8874                           ; BSR set to: 2
  8875                           ;mconfig.c: 71:    set_display_info(display_help());
  8876  017966  EC75  F0DB         	call	_display_help	;wreg free
  8877  01796A  5028               	movf	btemp^0,w,c
  8878  01796C  6EE6               	movwf	postinc1,c
  8879  01796E  EC67  F0DA         	call	_set_display_info	;wreg free
  8880                           
  8881                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8882  017972  0060  FA57  FFE6   	movff	_V+149,postinc1
  8883  017978  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8884  01797E  ECCB  F0DA         	call	_mode_lamp_dim	;wreg free
  8885                           
  8886                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8887  017982  0E0B               	movlw	11
  8888  017984  6EE6               	movwf	postinc1,c
  8889  017986  EC91  F0D8         	call	_TimerDone	;wreg free
  8890  01798A  5028               	movf	btemp^0,w,c
  8891  01798C  B4D8               	btfsc	status,2,c
  8892  01798E  D010               	goto	l1665
  8893                           
  8894                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8895  017990  0102               	movlb	2	; () banked
  8896  017992  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  8897  017994  A4D8               	btfss	status,2,c
  8898  017996  D002               	goto	u12030
  8899  017998  0E01               	movlw	1
  8900  01799A  D001               	goto	u12040
  8901  01799C                     u12030:
  8902  01799C  0E00               	movlw	0
  8903  01799E                     u12040:
  8904  01799E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  8905                           
  8906                           ; BSR set to: 2
  8907                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8908  0179A0  0EDC               	movlw	220
  8909  0179A2  6EE6               	movwf	postinc1,c
  8910  0179A4  0E05               	movlw	5
  8911  0179A6  6EE6               	movwf	postinc1,c
  8912  0179A8  0E0B               	movlw	11
  8913  0179AA  6EE6               	movwf	postinc1,c
  8914  0179AC  EC10  F0D6         	call	_StartTimer	;wreg free
  8915  0179B0                     l1665:
  8916                           
  8917                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8918  0179B0  52E5               	movf	postdec1,f,c
  8919  0179B2  0012               	return		;funcret
  8920  0179B4                     __end_of_check_help:
  8921                           	opt callstack 0
  8922                           
  8923 ;; *************** function _vterm_dump *****************
  8924 ;; Defined at:
  8925 ;;		line 121 in file "mconfig.c"
  8926 ;; Parameters:    Size  Location     Type
  8927 ;;		None
  8928 ;; Auto vars:     Size  Location     Type
  8929 ;;		None
  8930 ;; Return value:  Size  Location     Type
  8931 ;;                  1  [STACK] void 
  8932 ;; Registers used:
  8933 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8934 ;; Tracked objects:
  8935 ;;		On entry : 3F/2
  8936 ;;		On exit  : 0/0
  8937 ;;		Unchanged: 0/0
  8938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8943 ;;Total ram usage:        0 bytes
  8944 ;; Hardware stack levels used:    1
  8945 ;; Hardware stack levels required when called:   26
  8946 ;; This function calls:
  8947 ;;		_WaitMs
  8948 ;;		_eaDogM_WriteStringAtPos
  8949 ;;		_get_vterm_ptr
  8950 ;;		_sprintf
  8951 ;;		_wait_lcd_done
  8952 ;; This function is called by:
  8953 ;;		_check_help
  8954 ;; This function uses a reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text29
  8958  018D74                     __ptext29:
  8959                           	opt callstack 0
  8960  018D74                     _vterm_dump:
  8961                           	opt callstack 3
  8962                           
  8963                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8964                           
  8965                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8966                           ;incstack = 0
  8967  018D74  0E01               	movlw	1
  8968  018D76  6EE6               	movwf	postinc1,c
  8969  018D78  0E00               	movlw	0
  8970  018D7A  6EE6               	movwf	postinc1,c
  8971  018D7C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8972  018D80  0060  F0A3  FFE6   	movff	btemp,postinc1
  8973  018D86  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8974  018D8C  0E00               	movlw	0
  8975  018D8E  6EE6               	movwf	postinc1,c
  8976  018D90  0E00               	movlw	0
  8977  018D92  6EE6               	movwf	postinc1,c
  8978  018D94  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  8979  018D98  0060  F0A3  FFE6   	movff	btemp,postinc1
  8980  018D9E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8981  018DA4  0E93               	movlw	low STR_52
  8982  018DA6  6EE6               	movwf	postinc1,c
  8983  018DA8  0EFF               	movlw	high STR_52
  8984  018DAA  6EE6               	movwf	postinc1,c
  8985  018DAC  0E01               	movlw	low (_V+1)
  8986  018DAE  6EE6               	movwf	postinc1,c
  8987  018DB0  0E02               	movlw	high (_V+1)
  8988  018DB2  6EE6               	movwf	postinc1,c
  8989  018DB4  0E08               	movlw	8
  8990  018DB6  6EE6               	movwf	postinc1,c
  8991  018DB8  EC08  F0CA         	call	_sprintf	;wreg free
  8992                           
  8993                           ; BSR set to: 0
  8994                           ;mconfig.c: 124:  wait_lcd_done();
  8995  018DBC  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  8996                           
  8997                           ; BSR set to: 0
  8998                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8999  018DC0  0E01               	movlw	low (_V+1)
  9000  018DC2  6EE6               	movwf	postinc1,c
  9001  018DC4  0E02               	movlw	high (_V+1)
  9002  018DC6  6EE6               	movwf	postinc1,c
  9003  018DC8  0E00               	movlw	0
  9004  018DCA  6EE6               	movwf	postinc1,c
  9005  018DCC  0E00               	movlw	0
  9006  018DCE  6EE6               	movwf	postinc1,c
  9007  018DD0  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9008                           
  9009                           ; BSR set to: 59
  9010                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  9011  018DD4  0E01               	movlw	1
  9012  018DD6  6EE6               	movwf	postinc1,c
  9013  018DD8  0E01               	movlw	1
  9014  018DDA  6EE6               	movwf	postinc1,c
  9015  018DDC  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  9016  018DE0  0060  F0A3  FFE6   	movff	btemp,postinc1
  9017  018DE6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9018  018DEC  0E00               	movlw	0
  9019  018DEE  6EE6               	movwf	postinc1,c
  9020  018DF0  0E01               	movlw	1
  9021  018DF2  6EE6               	movwf	postinc1,c
  9022  018DF4  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  9023  018DF8  0060  F0A3  FFE6   	movff	btemp,postinc1
  9024  018DFE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9025  018E04  0E93               	movlw	low STR_52
  9026  018E06  6EE6               	movwf	postinc1,c
  9027  018E08  0EFF               	movlw	high STR_52
  9028  018E0A  6EE6               	movwf	postinc1,c
  9029  018E0C  0E01               	movlw	low (_V+1)
  9030  018E0E  6EE6               	movwf	postinc1,c
  9031  018E10  0E02               	movlw	high (_V+1)
  9032  018E12  6EE6               	movwf	postinc1,c
  9033  018E14  0E08               	movlw	8
  9034  018E16  6EE6               	movwf	postinc1,c
  9035  018E18  EC08  F0CA         	call	_sprintf	;wreg free
  9036                           
  9037                           ; BSR set to: 0
  9038                           ;mconfig.c: 127:  wait_lcd_done();
  9039  018E1C  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9040                           
  9041                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9042  018E20  0E01               	movlw	low (_V+1)
  9043  018E22  6EE6               	movwf	postinc1,c
  9044  018E24  0E02               	movlw	high (_V+1)
  9045  018E26  6EE6               	movwf	postinc1,c
  9046  018E28  0E00               	movlw	0
  9047  018E2A  6EE6               	movwf	postinc1,c
  9048  018E2C  0E01               	movlw	1
  9049  018E2E  6EE6               	movwf	postinc1,c
  9050  018E30  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9051                           
  9052                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9053  018E34  0E01               	movlw	1
  9054  018E36  6EE6               	movwf	postinc1,c
  9055  018E38  0E02               	movlw	2
  9056  018E3A  6EE6               	movwf	postinc1,c
  9057  018E3C  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  9058  018E40  0060  F0A3  FFE6   	movff	btemp,postinc1
  9059  018E46  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9060  018E4C  0E00               	movlw	0
  9061  018E4E  6EE6               	movwf	postinc1,c
  9062  018E50  0E02               	movlw	2
  9063  018E52  6EE6               	movwf	postinc1,c
  9064  018E54  ECE7  F0D7         	call	_get_vterm_ptr	;wreg free
  9065  018E58  0060  F0A3  FFE6   	movff	btemp,postinc1
  9066  018E5E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9067  018E64  0E93               	movlw	low STR_52
  9068  018E66  6EE6               	movwf	postinc1,c
  9069  018E68  0EFF               	movlw	high STR_52
  9070  018E6A  6EE6               	movwf	postinc1,c
  9071  018E6C  0E01               	movlw	low (_V+1)
  9072  018E6E  6EE6               	movwf	postinc1,c
  9073  018E70  0E02               	movlw	high (_V+1)
  9074  018E72  6EE6               	movwf	postinc1,c
  9075  018E74  0E08               	movlw	8
  9076  018E76  6EE6               	movwf	postinc1,c
  9077  018E78  EC08  F0CA         	call	_sprintf	;wreg free
  9078                           
  9079                           ; BSR set to: 0
  9080                           ;mconfig.c: 130:  wait_lcd_done();
  9081  018E7C  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9082                           
  9083                           ; BSR set to: 0
  9084                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9085  018E80  0E01               	movlw	low (_V+1)
  9086  018E82  6EE6               	movwf	postinc1,c
  9087  018E84  0E02               	movlw	high (_V+1)
  9088  018E86  6EE6               	movwf	postinc1,c
  9089  018E88  0E00               	movlw	0
  9090  018E8A  6EE6               	movwf	postinc1,c
  9091  018E8C  0E02               	movlw	2
  9092  018E8E  6EE6               	movwf	postinc1,c
  9093  018E90  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9094                           
  9095                           ; BSR set to: 59
  9096                           ;mconfig.c: 132:  WaitMs(3000);
  9097  018E94  0EB8               	movlw	184
  9098  018E96  6EE6               	movwf	postinc1,c
  9099  018E98  0E0B               	movlw	11
  9100  018E9A  6EE6               	movwf	postinc1,c
  9101  018E9C  EC03  F0D7         	call	_WaitMs	;wreg free
  9102                           
  9103                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9104  018EA0  0012               	return		;funcret
  9105  018EA2                     __end_of_vterm_dump:
  9106                           	opt callstack 0
  9107                           
  9108 ;; *************** function _sprintf *****************
  9109 ;; Defined at:
  9110 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9111 ;; Parameters:    Size  Location     Type
  9112 ;;  s               2  [STACK] PTR unsigned char 
  9113 ;;		 -> D.lcd(480), D(482), port_data(512), V(190), 
  9114 ;;  fmt             2  [STACK] PTR const unsigned char 
  9115 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
  9116 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9117 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9118 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9119 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9120 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9121 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9122 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9123 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  9124 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
  9125 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9126 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9127 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9128 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9129 ;;		 -> STR_2(15), STR_1(17), 
  9130 ;; Auto vars:     Size  Location     Type
  9131 ;;  f               6  [STACK] struct _IO_FILE
  9132 ;;  ap              2  [STACK] PTR void [1]
  9133 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9134 ;;  ret             2    0        int 
  9135 ;; Return value:  Size  Location     Type
  9136 ;;                  2  [STACK] int 
  9137 ;; Registers used:
  9138 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9139 ;; Tracked objects:
  9140 ;;		On entry : 0/1
  9141 ;;		On exit  : 3F/0
  9142 ;;		Unchanged: 0/0
  9143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9148 ;;Total ram usage:        0 bytes
  9149 ;; Hardware stack levels used:    1
  9150 ;; Hardware stack levels required when called:   23
  9151 ;; This function calls:
  9152 ;;		_vfprintf
  9153 ;; This function is called by:
  9154 ;;		_main
  9155 ;;		_check_help
  9156 ;;		_vterm_dump
  9157 ;;		_calc_bsoc
  9158 ;; This function uses a reentrant model
  9159 ;;
  9160                           
  9161                           	psect	text30
  9162  019410                     __ptext30:
  9163                           	opt callstack 0
  9164  019410                     _sprintf:
  9165                           	opt callstack 0
  9166                           
  9167                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9168  019410  0E08               	movlw	8
  9169  019412  26E1               	addwf	fsr1l,f,c
  9170  019414  0E00               	movlw	0
  9171  019416  22E2               	addwfc	fsr1h,f,c
  9172                           
  9173                           ;incstack = 0
  9174 ;; hardware stack exceeded
  9175  019418  0EFE               	movlw	254
  9176  01941A  6E32               	movwf	(btemp+10)^0,c
  9177  01941C  0EFF               	movlw	255
  9178  01941E  6E33               	movwf	(btemp+11)^0,c
  9179                           
  9180                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9181  019420  0EF5               	movlw	245
  9182  019422  24E1               	addwf	fsr1l,w,c
  9183  019424  6E30               	movwf	(btemp+8)^0,c
  9184  019426  0EFF               	movlw	255
  9185  019428  20E2               	addwfc	fsr1h,w,c
  9186  01942A  6E31               	movwf	(btemp+9)^0,c
  9187  01942C  5032               	movf	(btemp+10)^0,w,c
  9188  01942E  2630               	addwf	(btemp+8)^0,f,c
  9189  019430  5033               	movf	(btemp+11)^0,w,c
  9190  019432  2231               	addwfc	(btemp+9)^0,f,c
  9191                           
  9192                           ;stkvar	_ap @ sp[(-8)+6]
  9193  019434  0EFF               	movlw	-1
  9194  019436  0060  F0C7  FFE3   	movff	btemp+9,plusw1
  9195  01943C  0EFE               	movlw	-2
  9196  01943E  0060  F0C3  FFE3   	movff	btemp+8,plusw1
  9197                           
  9198                           ;stkvar	_s @ sp[(-8)+-3]
  9199  019444  0EF5               	movlw	-11
  9200  019446  006F FF8C  F032    	movff	plusw1,btemp+10
  9201  01944C  0EF6               	movlw	-10
  9202  01944E  006F FF8C  F033    	movff	plusw1,btemp+11
  9203                           
  9204                           ;stkvar	_f @ sp[(-8)+0]
  9205  019454  0EF9               	movlw	-7
  9206  019456  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  9207  01945C  0EF8               	movlw	-8
  9208  01945E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
  9209                           
  9210                           ;stkvar	_f @ sp[(-8)+0]
  9211  019464  0EFA               	movlw	250
  9212  019466  24E1               	addwf	fsr1l,w,c
  9213  019468  6ED9               	movwf	fsr2l,c
  9214  01946A  0EFF               	movlw	255
  9215  01946C  20E2               	addwfc	fsr1h,w,c
  9216  01946E  6EDA               	movwf	fsr2h,c
  9217  019470  0E00               	movlw	0
  9218  019472  6EDE               	movwf	postinc2,c
  9219  019474  0E00               	movlw	0
  9220  019476  6EDD               	movwf	postdec2,c
  9221                           
  9222                           ;stkvar	_f @ sp[(-8)+0]
  9223  019478  0EFC               	movlw	252
  9224  01947A  24E1               	addwf	fsr1l,w,c
  9225  01947C  6ED9               	movwf	fsr2l,c
  9226  01947E  0EFF               	movlw	255
  9227  019480  20E2               	addwfc	fsr1h,w,c
  9228  019482  6EDA               	movwf	fsr2h,c
  9229  019484  0E00               	movlw	0
  9230  019486  6EDE               	movwf	postinc2,c
  9231  019488  0E00               	movlw	0
  9232  01948A  6EDD               	movwf	postdec2,c
  9233                           
  9234                           ;stkvar	_ap @ sp[(-8)+6]
  9235  01948C  0EFE               	movlw	254
  9236  01948E  24E1               	addwf	fsr1l,w,c
  9237  019490  6E28               	movwf	btemp^0,c
  9238  019492  0EFF               	movlw	255
  9239  019494  20E2               	addwfc	fsr1h,w,c
  9240  019496  6E29               	movwf	(btemp+1)^0,c
  9241  019498  0060  F0A3  FFE6   	movff	btemp,postinc1
  9242  01949E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9243                           
  9244                           ;stkvar	_fmt @ sp[(-10)+-5]
  9245  0194A4  0EF1               	movlw	-15
  9246  0194A6  006F FF8F FFE6     	movff	plusw1,postinc1
  9247  0194AC  006F FF8F FFE6     	movff	plusw1,postinc1
  9248                           
  9249                           ;stkvar	_f @ sp[(-12)+0]
  9250  0194B2  0EF4               	movlw	244
  9251  0194B4  24E1               	addwf	fsr1l,w,c
  9252  0194B6  6E28               	movwf	btemp^0,c
  9253  0194B8  0EFF               	movlw	255
  9254  0194BA  20E2               	addwfc	fsr1h,w,c
  9255  0194BC  6E29               	movwf	(btemp+1)^0,c
  9256  0194BE  0060  F0A3  FFE6   	movff	btemp,postinc1
  9257  0194C4  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9258  0194CA  EC50  F0CE         	call	_vfprintf	;wreg free
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;stkvar	_f @ sp[(-8)+0]
  9262  0194CE  0EFA               	movlw	250
  9263  0194D0  24E1               	addwf	fsr1l,w,c
  9264  0194D2  6ED9               	movwf	fsr2l,c
  9265  0194D4  0EFF               	movlw	255
  9266  0194D6  20E2               	addwfc	fsr1h,w,c
  9267  0194D8  6EDA               	movwf	fsr2h,c
  9268  0194DA  006F FF78  F032    	movff	postinc2,btemp+10
  9269  0194E0  006F FF74  F033    	movff	postdec2,btemp+11
  9270                           
  9271                           ;stkvar	_s @ sp[(-8)+-3]
  9272  0194E6  0EF5               	movlw	-11
  9273  0194E8  006F FF8C  F030    	movff	plusw1,btemp+8
  9274  0194EE  0EF6               	movlw	-10
  9275  0194F0  006F FF8C  F031    	movff	plusw1,btemp+9
  9276  0194F6  5032               	movf	(btemp+10)^0,w,c
  9277  0194F8  2430               	addwf	(btemp+8)^0,w,c
  9278  0194FA  6ED9               	movwf	fsr2l,c
  9279  0194FC  5033               	movf	(btemp+11)^0,w,c
  9280  0194FE  2031               	addwfc	(btemp+9)^0,w,c
  9281  019500  6EDA               	movwf	fsr2h,c
  9282  019502  0E00               	movlw	0
  9283  019504  6EDF               	movwf	indf2,c
  9284                           
  9285                           ; BSR set to: 0
  9286                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  9287  019506  0EF8               	movlw	248
  9288  019508  26E1               	addwf	fsr1l,f,c
  9289  01950A  0EFF               	movlw	255
  9290  01950C  22E2               	addwfc	fsr1h,f,c
  9291  01950E  52E5               	movf	postdec1,f,c
  9292  019510  50E7               	movf	indf1,w,c
  9293  019512  5EE1               	subwf	fsr1l,f,c
  9294  019514  0E00               	movlw	0
  9295  019516  5AE2               	subwfb	fsr1h,f,c
  9296  019518  0012               	return		;funcret
  9297  01951A                     __end_of_sprintf:
  9298                           	opt callstack 0
  9299                           
  9300 ;; *************** function _get_vterm_ptr *****************
  9301 ;; Defined at:
  9302 ;;		line 116 in file "mconfig.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;  line            1  [STACK] const unsigned char 
  9305 ;;  vterm           1  [STACK] const unsigned char 
  9306 ;; Auto vars:     Size  Location     Type
  9307 ;;		None
  9308 ;; Return value:  Size  Location     Type
  9309 ;;                  2  [STACK] PTR unsigned char 
  9310 ;; Registers used:
  9311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9312 ;; Tracked objects:
  9313 ;;		On entry : 0/1
  9314 ;;		On exit  : 0/0
  9315 ;;		Unchanged: 0/0
  9316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9321 ;;Total ram usage:        0 bytes
  9322 ;; Hardware stack levels used:    1
  9323 ;; Hardware stack levels required when called:   15
  9324 ;; This function calls:
  9325 ;;		Nothing
  9326 ;; This function is called by:
  9327 ;;		_main
  9328 ;;		_check_help
  9329 ;;		_vterm_dump
  9330 ;; This function uses a reentrant model
  9331 ;;
  9332                           
  9333                           	psect	text31
  9334  01AFCE                     __ptext31:
  9335                           	opt callstack 0
  9336  01AFCE                     _get_vterm_ptr:
  9337                           	opt callstack 15
  9338                           
  9339                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9340                           ;stkvar	_vterm @ sp[(0)+-2]
  9341                           
  9342                           ; BSR set to: 0
  9343                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9344                           ;incstack = 0
  9345  01AFCE  0EFE               	movlw	-2
  9346  01AFD0  50E3               	movf	plusw1,w,c
  9347  01AFD2  0B03               	andlw	3
  9348  01AFD4  0D78               	mullw	120
  9349  01AFD6  0EFF               	movlw	low _D
  9350  01AFD8  6E28               	movwf	btemp^0,c
  9351  01AFDA  0E07               	movlw	high _D
  9352  01AFDC  6E29               	movwf	(btemp+1)^0,c
  9353  01AFDE  50F3               	movf	243,w,c
  9354  01AFE0  2628               	addwf	btemp^0,f,c
  9355  01AFE2  50F4               	movf	244,w,c
  9356  01AFE4  2229               	addwfc	(btemp+1)^0,f,c
  9357                           
  9358                           ;stkvar	_line @ sp[(0)+-1]
  9359  01AFE6  0EFF               	movlw	-1
  9360  01AFE8  50E3               	movf	plusw1,w,c
  9361  01AFEA  0B03               	andlw	3
  9362  01AFEC  0D28               	mullw	40
  9363  01AFEE  50F3               	movf	243,w,c
  9364  01AFF0  2628               	addwf	btemp^0,f,c
  9365  01AFF2  50F4               	movf	244,w,c
  9366  01AFF4  2229               	addwfc	(btemp+1)^0,f,c
  9367                           
  9368                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9369  01AFF6  52E5               	movf	postdec1,f,c
  9370  01AFF8  52E5               	movf	postdec1,f,c
  9371  01AFFA  0012               	return		;funcret
  9372  01AFFC                     __end_of_get_vterm_ptr:
  9373                           	opt callstack 0
  9374                           
  9375 ;; *************** function _WaitMs *****************
  9376 ;; Defined at:
  9377 ;;		line 32 in file "timers.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;  numMilliseco    2  [STACK] const unsigned short 
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;		None
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1  [STACK] void 
  9384 ;; Registers used:
  9385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/2
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9395 ;;Total ram usage:        0 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:   16
  9398 ;; This function calls:
  9399 ;;		_StartTimer
  9400 ;;		_TimerDone
  9401 ;; This function is called by:
  9402 ;;		_main
  9403 ;;		_vterm_dump
  9404 ;; This function uses a reentrant model
  9405 ;;
  9406                           
  9407                           	psect	text32
  9408  01AE06                     __ptext32:
  9409                           	opt callstack 0
  9410  01AE06                     _WaitMs:
  9411                           	opt callstack 12
  9412                           
  9413                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9414                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9415                           
  9416                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9417                           ;incstack = 0
  9418  01AE06  0EFE               	movlw	-2
  9419  01AE08  006F FF8F FFE6     	movff	plusw1,postinc1
  9420  01AE0E  006F FF8F FFE6     	movff	plusw1,postinc1
  9421  01AE14  0E00               	movlw	0
  9422  01AE16  6EE6               	movwf	postinc1,c
  9423  01AE18  EC10  F0D6         	call	_StartTimer	;wreg free
  9424                           
  9425                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9426  01AE1C  D005               	goto	l9476
  9427  01AE1E                     l1596:
  9428                           
  9429                           ;timers.c: 36:   __nop();
  9430  01AE1E  F000               	nop	
  9431                           
  9432                           ;timers.c: 37:   __nop();
  9433  01AE20  F000               	nop	
  9434                           
  9435                           ;timers.c: 38:   __nop();
  9436  01AE22  F000               	nop	
  9437                           
  9438                           ;timers.c: 39:   __nop();
  9439  01AE24  F000               	nop	
  9440  01AE26  0004               	clrwdt		;# 
  9441  01AE28                     l9476:
  9442                           
  9443                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9444  01AE28  0E00               	movlw	0
  9445  01AE2A  6EE6               	movwf	postinc1,c
  9446  01AE2C  EC91  F0D8         	call	_TimerDone	;wreg free
  9447  01AE30  5028               	movf	btemp^0,w,c
  9448  01AE32  B4D8               	btfsc	status,2,c
  9449  01AE34  D7F4               	goto	l1596
  9450                           
  9451                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9452  01AE36  52E5               	movf	postdec1,f,c
  9453  01AE38  52E5               	movf	postdec1,f,c
  9454  01AE3A  0012               	return		;funcret
  9455  01AE3C                     __end_of_WaitMs:
  9456                           	opt callstack 0
  9457                           
  9458 ;; *************** function _update_lcd *****************
  9459 ;; Defined at:
  9460 ;;		line 85 in file "mconfig.c"
  9461 ;; Parameters:    Size  Location     Type
  9462 ;;  vterm           1  [STACK] unsigned char 
  9463 ;; Auto vars:     Size  Location     Type
  9464 ;;		None
  9465 ;; Return value:  Size  Location     Type
  9466 ;;                  1  [STACK] unsigned char 
  9467 ;; Registers used:
  9468 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9469 ;; Tracked objects:
  9470 ;;		On entry : 0/0
  9471 ;;		On exit  : 0/0
  9472 ;;		Unchanged: 0/0
  9473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9478 ;;Total ram usage:        0 bytes
  9479 ;; Hardware stack levels used:    1
  9480 ;; Hardware stack levels required when called:   26
  9481 ;; This function calls:
  9482 ;;		_eaDogM_WriteStringAtPos
  9483 ;;		_wait_lcd_done
  9484 ;; This function is called by:
  9485 ;;		_main
  9486 ;;		_check_help
  9487 ;; This function uses a reentrant model
  9488 ;;
  9489                           
  9490                           	psect	text33
  9491  0191F2                     __ptext33:
  9492                           	opt callstack 0
  9493  0191F2                     _update_lcd:
  9494                           	opt callstack 4
  9495                           
  9496                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9497                           ;stkvar	_vterm @ sp[(0)+-1]
  9498                           
  9499                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9500                           ;incstack = 0
  9501  0191F2  0EFF               	movlw	-1
  9502  0191F4  006F FF8C  F028    	movff	plusw1,btemp
  9503  0191FA  0E03               	movlw	3
  9504  0191FC  1628               	andwf	btemp^0,f,c
  9505  0191FE  0EFF               	movlw	-1
  9506  019200  0060  F0A3  FFE3   	movff	btemp,plusw1
  9507                           
  9508                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9509  019206  EE22  F1DF         	lfsr	2,_D+480
  9510  01920A  A0DF               	btfss	indf2,0,c
  9511  01920C  D004               	goto	l12330
  9512                           
  9513                           ;stkvar	_vterm @ sp[(0)+-1]
  9514  01920E  0EFF               	movlw	-1
  9515  019210  50E3               	movf	plusw1,w,c
  9516  019212  B4D8               	btfsc	status,2,c
  9517  019214  D074               	goto	l1672
  9518  019216                     l12330:
  9519                           
  9520                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9521                           ;stkvar	_vterm @ sp[(0)+-1]
  9522  019216  0EFF               	movlw	-1
  9523  019218  50E3               	movf	plusw1,w,c
  9524  01921A  0D78               	mullw	120
  9525  01921C  0E0F               	movlw	low (_D+16)
  9526  01921E  24F3               	addwf	243,w,c
  9527  019220  6ED9               	movwf	fsr2l,c
  9528  019222  0E08               	movlw	high (_D+16)
  9529  019224  20F4               	addwfc	prodh,w,c
  9530  019226  6EDA               	movwf	fsr2h,c
  9531  019228  0E00               	movlw	0
  9532  01922A  6EDF               	movwf	indf2,c
  9533                           
  9534                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9535                           ;stkvar	_vterm @ sp[(0)+-1]
  9536  01922C  0EFF               	movlw	-1
  9537  01922E  50E3               	movf	plusw1,w,c
  9538  019230  0D78               	mullw	120
  9539  019232  0E37               	movlw	low (_D+56)
  9540  019234  24F3               	addwf	243,w,c
  9541  019236  6ED9               	movwf	fsr2l,c
  9542  019238  0E08               	movlw	high (_D+56)
  9543  01923A  20F4               	addwfc	prodh,w,c
  9544  01923C  6EDA               	movwf	fsr2h,c
  9545  01923E  0E00               	movlw	0
  9546  019240  6EDF               	movwf	indf2,c
  9547                           
  9548                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9549                           ;stkvar	_vterm @ sp[(0)+-1]
  9550  019242  0EFF               	movlw	-1
  9551  019244  50E3               	movf	plusw1,w,c
  9552  019246  0D78               	mullw	120
  9553  019248  0E5F               	movlw	low (_D+96)
  9554  01924A  24F3               	addwf	243,w,c
  9555  01924C  6ED9               	movwf	fsr2l,c
  9556  01924E  0E08               	movlw	high (_D+96)
  9557  019250  20F4               	addwfc	prodh,w,c
  9558  019252  6EDA               	movwf	fsr2h,c
  9559  019254  0E00               	movlw	0
  9560  019256  6EDF               	movwf	indf2,c
  9561                           
  9562                           ;mconfig.c: 95:  wait_lcd_done();
  9563  019258  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9564                           
  9565                           ; BSR set to: 0
  9566                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9567                           ;stkvar	_vterm @ sp[(0)+-1]
  9568  01925C  0EFF               	movlw	-1
  9569  01925E  50E3               	movf	plusw1,w,c
  9570  019260  0D78               	mullw	120
  9571  019262  0EFF               	movlw	low _D
  9572  019264  6E32               	movwf	(btemp+10)^0,c
  9573  019266  0E07               	movlw	high _D
  9574  019268  6E33               	movwf	(btemp+11)^0,c
  9575  01926A  50F3               	movf	243,w,c
  9576  01926C  2632               	addwf	(btemp+10)^0,f,c
  9577  01926E  50F4               	movf	244,w,c
  9578  019270  2233               	addwfc	(btemp+11)^0,f,c
  9579  019272  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9580  019278  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9581  01927E  0E00               	movlw	0
  9582  019280  6EE6               	movwf	postinc1,c
  9583  019282  0E00               	movlw	0
  9584  019284  6EE6               	movwf	postinc1,c
  9585  019286  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9586                           
  9587                           ; BSR set to: 59
  9588                           ;mconfig.c: 97:  wait_lcd_done();
  9589  01928A  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9590                           
  9591                           ; BSR set to: 0
  9592                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9593                           ;stkvar	_vterm @ sp[(0)+-1]
  9594  01928E  0EFF               	movlw	-1
  9595  019290  50E3               	movf	plusw1,w,c
  9596  019292  0D78               	mullw	120
  9597  019294  0EFF               	movlw	low _D
  9598  019296  6E32               	movwf	(btemp+10)^0,c
  9599  019298  0E07               	movlw	high _D
  9600  01929A  6E33               	movwf	(btemp+11)^0,c
  9601  01929C  0E28               	movlw	40
  9602  01929E  2632               	addwf	(btemp+10)^0,f,c
  9603  0192A0  0E00               	movlw	0
  9604  0192A2  2233               	addwfc	(btemp+11)^0,f,c
  9605  0192A4  50F3               	movf	243,w,c
  9606  0192A6  2632               	addwf	(btemp+10)^0,f,c
  9607  0192A8  50F4               	movf	244,w,c
  9608  0192AA  2233               	addwfc	(btemp+11)^0,f,c
  9609  0192AC  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9610  0192B2  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9611  0192B8  0E00               	movlw	0
  9612  0192BA  6EE6               	movwf	postinc1,c
  9613  0192BC  0E01               	movlw	1
  9614  0192BE  6EE6               	movwf	postinc1,c
  9615  0192C0  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9616                           
  9617                           ; BSR set to: 59
  9618                           ;mconfig.c: 99:  wait_lcd_done();
  9619  0192C4  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9620                           
  9621                           ; BSR set to: 0
  9622                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9623                           ;stkvar	_vterm @ sp[(0)+-1]
  9624  0192C8  0EFF               	movlw	-1
  9625  0192CA  50E3               	movf	plusw1,w,c
  9626  0192CC  0D78               	mullw	120
  9627  0192CE  0EFF               	movlw	low _D
  9628  0192D0  6E32               	movwf	(btemp+10)^0,c
  9629  0192D2  0E07               	movlw	high _D
  9630  0192D4  6E33               	movwf	(btemp+11)^0,c
  9631  0192D6  0E50               	movlw	80
  9632  0192D8  2632               	addwf	(btemp+10)^0,f,c
  9633  0192DA  0E00               	movlw	0
  9634  0192DC  2233               	addwfc	(btemp+11)^0,f,c
  9635  0192DE  50F3               	movf	243,w,c
  9636  0192E0  2632               	addwf	(btemp+10)^0,f,c
  9637  0192E2  50F4               	movf	244,w,c
  9638  0192E4  2233               	addwfc	(btemp+11)^0,f,c
  9639  0192E6  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9640  0192EC  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9641  0192F2  0E00               	movlw	0
  9642  0192F4  6EE6               	movwf	postinc1,c
  9643  0192F6  0E02               	movlw	2
  9644  0192F8  6EE6               	movwf	postinc1,c
  9645  0192FA  EC1E  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9646  0192FE                     l1672:
  9647                           
  9648                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9649  0192FE  52E5               	movf	postdec1,f,c
  9650  019300  0012               	return		;funcret
  9651  019302                     __end_of_update_lcd:
  9652                           	opt callstack 0
  9653                           
  9654 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9655 ;; Defined at:
  9656 ;;		line 278 in file "eadog.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  r               1  [STACK] const unsigned char 
  9659 ;;  c               1  [STACK] const unsigned char 
  9660 ;;  strPtr          2  [STACK] PTR unsigned char 
  9661 ;;		 -> D.lcd(480), D(482), V(190), 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;		None
  9664 ;; Return value:  Size  Location     Type
  9665 ;;                  1  [STACK] void 
  9666 ;; Registers used:
  9667 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9668 ;; Tracked objects:
  9669 ;;		On entry : 3F/0
  9670 ;;		On exit  : 3F/3B
  9671 ;;		Unchanged: 0/0
  9672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9677 ;;Total ram usage:        0 bytes
  9678 ;; Hardware stack levels used:    1
  9679 ;; Hardware stack levels required when called:   25
  9680 ;; This function calls:
  9681 ;;		_eaDogM_WriteString
  9682 ;;		_send_lcd_cmd_dma
  9683 ;; This function is called by:
  9684 ;;		_update_lcd
  9685 ;;		_vterm_dump
  9686 ;; This function uses a reentrant model
  9687 ;;
  9688                           
  9689                           	psect	text34
  9690  01AE3C                     __ptext34:
  9691                           	opt callstack 0
  9692  01AE3C                     _eaDogM_WriteStringAtPos:
  9693                           	opt callstack 4
  9694                           
  9695                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9696                           ;stkvar	_c @ sp[(0)+-2]
  9697                           
  9698                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9699                           ;incstack = 0
  9700  01AE3C  0EFE               	movlw	-2
  9701  01AE3E  006F FF8C  F033    	movff	plusw1,btemp+11
  9702                           
  9703                           ;stkvar	_r @ sp[(0)+-1]
  9704  01AE44  0EFF               	movlw	-1
  9705  01AE46  50E3               	movf	plusw1,w,c
  9706  01AE48  0D10               	mullw	16
  9707  01AE4A  50F3               	movf	243,w,c
  9708  01AE4C  2433               	addwf	(btemp+11)^0,w,c
  9709  01AE4E  0F80               	addlw	128
  9710  01AE50  6EE6               	movwf	postinc1,c
  9711  01AE52  EC33  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  9712                           
  9713                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9714                           ;stkvar	_strPtr @ sp[(0)+-4]
  9715  01AE56  0EFC               	movlw	-4
  9716  01AE58  006F FF8F FFE6     	movff	plusw1,postinc1
  9717  01AE5E  006F FF8F FFE6     	movff	plusw1,postinc1
  9718  01AE64  ECFB  F0CE         	call	_eaDogM_WriteString	;wreg free
  9719                           
  9720                           ; BSR set to: 59
  9721                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9722  01AE68  52E5               	movf	postdec1,f,c
  9723  01AE6A  52E5               	movf	postdec1,f,c
  9724  01AE6C  52E5               	movf	postdec1,f,c
  9725  01AE6E  52E5               	movf	postdec1,f,c
  9726  01AE70  0012               	return		;funcret
  9727  01AE72                     __end_of_eaDogM_WriteStringAtPos:
  9728                           	opt callstack 0
  9729                           
  9730 ;; *************** function _send_lcd_cmd_dma *****************
  9731 ;; Defined at:
  9732 ;;		line 220 in file "eadog.c"
  9733 ;; Parameters:    Size  Location     Type
  9734 ;;  strPtr          1  [STACK] unsigned char 
  9735 ;; Auto vars:     Size  Location     Type
  9736 ;;		None
  9737 ;; Return value:  Size  Location     Type
  9738 ;;                  1  [STACK] void 
  9739 ;; Registers used:
  9740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9741 ;; Tracked objects:
  9742 ;;		On entry : 0/3D
  9743 ;;		On exit  : 3F/0
  9744 ;;		Unchanged: 0/0
  9745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9750 ;;Total ram usage:        0 bytes
  9751 ;; Hardware stack levels used:    1
  9752 ;; Hardware stack levels required when called:   24
  9753 ;; This function calls:
  9754 ;;		_printf
  9755 ;;		_ringBufS_flush
  9756 ;;		_start_lcd
  9757 ;;		_wait_lcd_done
  9758 ;;		_wait_lcd_set
  9759 ;; This function is called by:
  9760 ;;		_eaDogM_WriteCommand
  9761 ;;		_eaDogM_WriteStringAtPos
  9762 ;; This function uses a reentrant model
  9763 ;;
  9764                           
  9765                           	psect	text35
  9766  01A866                     __ptext35:
  9767                           	opt callstack 0
  9768  01A866                     _send_lcd_cmd_dma:
  9769                           	opt callstack 4
  9770                           
  9771                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9772                           
  9773                           ; BSR set to: 59
  9774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9775                           ;incstack = 0
  9776  01A866  EC80  F0DB         	call	_wait_lcd_set	;wreg free
  9777                           
  9778                           ; BSR set to: 0
  9779                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9780  01A86A  0E00               	movlw	0
  9781  01A86C  6EE6               	movwf	postinc1,c
  9782  01A86E  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9783  01A874  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9784  01A87A  EC7E  F0D0         	call	_ringBufS_flush	;wreg free
  9785  01A87E  92BC               	bcf	188,1,c	;volatile
  9786  01A880  94BC               	bcf	188,2,c	;volatile
  9787                           
  9788                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9789  01A882  013B               	movlb	59	; () banked
  9790  01A884  9FFC               	bcf	252,7,b	;volatile
  9791                           
  9792                           ; BSR set to: 59
  9793                           ;eadog.c: 229:  DMA1SSZ = 1;
  9794  01A886  0E00               	movlw	0
  9795  01A888  6FF8               	movwf	248,b	;volatile
  9796  01A88A  0E01               	movlw	1
  9797  01A88C  6FF7               	movwf	247,b	;volatile
  9798                           
  9799                           ; BSR set to: 59
  9800                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9801  01A88E  8FFC               	bsf	252,7,b	;volatile
  9802                           
  9803                           ; BSR set to: 59
  9804                           ;eadog.c: 231:  printf("%c", strPtr);
  9805                           ;stkvar	_strPtr @ sp[(0)+-1]
  9806  01A890  0EFF               	movlw	-1
  9807  01A892  50E3               	movf	plusw1,w,c
  9808  01A894  6EE6               	movwf	postinc1,c
  9809  01A896  0E00               	movlw	0
  9810  01A898  6EE6               	movwf	postinc1,c
  9811  01A89A  0EF8               	movlw	low STR_44
  9812  01A89C  6EE6               	movwf	postinc1,c
  9813  01A89E  0EFF               	movlw	high STR_44
  9814  01A8A0  6EE6               	movwf	postinc1,c
  9815  01A8A2  0E04               	movlw	4
  9816  01A8A4  6EE6               	movwf	postinc1,c
  9817  01A8A6  EC1A  F0D3         	call	_printf	;wreg free
  9818                           
  9819                           ; BSR set to: 0
  9820                           ;eadog.c: 232:  start_lcd();
  9821  01A8AA  EC83  F0DB         	call	_start_lcd	;wreg free
  9822                           
  9823                           ; BSR set to: 59
  9824                           ;eadog.c: 233:  wait_lcd_done();
  9825  01A8AE  EC94  F0DA         	call	_wait_lcd_done	;wreg free
  9826                           
  9827                           ; BSR set to: 0
  9828  01A8B2  82BC               	bsf	188,1,c	;volatile
  9829                           
  9830                           ; BSR set to: 0
  9831                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9832  01A8B4  52E5               	movf	postdec1,f,c
  9833  01A8B6  0012               	return		;funcret
  9834  01A8B8                     __end_of_send_lcd_cmd_dma:
  9835                           	opt callstack 0
  9836                           
  9837 ;; *************** function _wait_lcd_done *****************
  9838 ;; Defined at:
  9839 ;;		line 156 in file "eadog.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;		None
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;		None
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  1  [STACK] void 
  9846 ;; Registers used:
  9847 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 3F/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9857 ;;Total ram usage:        0 bytes
  9858 ;; Hardware stack levels used:    1
  9859 ;; Hardware stack levels required when called:   16
  9860 ;; This function calls:
  9861 ;;		_wdtdelay
  9862 ;; This function is called by:
  9863 ;;		_send_lcd_cmd_dma
  9864 ;;		_update_lcd
  9865 ;;		_vterm_dump
  9866 ;; This function uses a reentrant model
  9867 ;;
  9868                           
  9869                           	psect	text36
  9870  01B528                     __ptext36:
  9871                           	opt callstack 0
  9872  01B528                     _wait_lcd_done:
  9873                           	opt callstack 13
  9874                           
  9875                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9876                           
  9877                           ; BSR set to: 0
  9878                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9879                           ;incstack = 0
  9880  01B528  0100               	movlb	0	; () banked
  9881  01B52A  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9882  01B52C  D7FD               	goto	_wait_lcd_done
  9883                           
  9884                           ; BSR set to: 0
  9885                           ;eadog.c: 159:  wdtdelay(50);
  9886  01B52E  0E32               	movlw	50
  9887  01B530  6EE6               	movwf	postinc1,c
  9888  01B532  0E00               	movlw	0
  9889  01B534  6EE6               	movwf	postinc1,c
  9890  01B536  0E00               	movlw	0
  9891  01B538  6EE6               	movwf	postinc1,c
  9892  01B53A  0E00               	movlw	0
  9893  01B53C  6EE6               	movwf	postinc1,c
  9894  01B53E  ECAB  F0D3         	call	_wdtdelay	;wreg free
  9895                           
  9896                           ; BSR set to: 0
  9897                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9898  01B542  0012               	return		;funcret
  9899  01B544                     __end_of_wait_lcd_done:
  9900                           	opt callstack 0
  9901                           
  9902 ;; *************** function _wdtdelay *****************
  9903 ;; Defined at:
  9904 ;;		line 23 in file "eadog.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  delay           4  [STACK] const unsigned long 
  9907 ;; Auto vars:     Size  Location     Type
  9908 ;;		None
  9909 ;; Return value:  Size  Location     Type
  9910 ;;                  1  [STACK] void 
  9911 ;; Registers used:
  9912 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9913 ;; Tracked objects:
  9914 ;;		On entry : 0/0
  9915 ;;		On exit  : 3F/0
  9916 ;;		Unchanged: 0/0
  9917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9922 ;;Total ram usage:        0 bytes
  9923 ;; Hardware stack levels used:    1
  9924 ;; Hardware stack levels required when called:   15
  9925 ;; This function calls:
  9926 ;;		Nothing
  9927 ;; This function is called by:
  9928 ;;		_init_display
  9929 ;;		_send_lcd_cmd
  9930 ;;		_send_lcd_cmd_long
  9931 ;;		_wait_lcd_done
  9932 ;; This function uses a reentrant model
  9933 ;;
  9934                           
  9935                           	psect	text37
  9936  01A756                     __ptext37:
  9937                           	opt callstack 0
  9938  01A756                     _wdtdelay:
  9939                           	opt callstack 13
  9940                           
  9941                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9942                           
  9943                           ; BSR set to: 0
  9944                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9945                           ;incstack = 0
  9946  01A756  0100               	movlb	0	; () banked
  9947  01A758  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9948  01A75A  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9949  01A75C  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9950  01A75E  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9951  01A760                     l1437:
  9952                           
  9953                           ; BSR set to: 0
  9954                           ;eadog.c: 28:   __nop();
  9955  01A760  F000               	nop	
  9956  01A762  0004               	clrwdt		;# 
  9957                           
  9958                           ;eadog.c: 30:  };
  9959  01A764  0E01               	movlw	1
  9960  01A766  0100               	movlb	0	; () banked
  9961  01A768  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9962  01A76A  0E00               	movlw	0
  9963  01A76C  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9964  01A76E  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9965  01A770  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9966                           
  9967                           ; BSR set to: 0
  9968                           ;stkvar	_delay @ sp[(0)+-4]
  9969  01A772  0EFC               	movlw	-4
  9970  01A774  006F FF8C  F028    	movff	plusw1,btemp
  9971  01A77A  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9972  01A77C  5C28               	subwf	btemp^0,w,c
  9973  01A77E  0EFD               	movlw	-3
  9974  01A780  006F FF8C  F028    	movff	plusw1,btemp
  9975  01A786  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9976  01A788  5828               	subwfb	btemp^0,w,c
  9977  01A78A  0EFE               	movlw	-2
  9978  01A78C  006F FF8C  F028    	movff	plusw1,btemp
  9979  01A792  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9980  01A794  5828               	subwfb	btemp^0,w,c
  9981  01A796  0EFF               	movlw	-1
  9982  01A798  006F FF8C  F028    	movff	plusw1,btemp
  9983  01A79E  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9984  01A7A0  5828               	subwfb	btemp^0,w,c
  9985  01A7A2  B0D8               	btfsc	status,0,c
  9986  01A7A4  D7DD               	goto	l1437
  9987                           
  9988                           ; BSR set to: 0
  9989                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9990  01A7A6  52E5               	movf	postdec1,f,c
  9991  01A7A8  52E5               	movf	postdec1,f,c
  9992  01A7AA  52E5               	movf	postdec1,f,c
  9993  01A7AC  52E5               	movf	postdec1,f,c
  9994  01A7AE  0012               	return		;funcret
  9995  01A7B0                     __end_of_wdtdelay:
  9996                           	opt callstack 0
  9997                           
  9998 ;; *************** function _eaDogM_WriteString *****************
  9999 ;; Defined at:
 10000 ;;		line 199 in file "eadog.c"
 10001 ;; Parameters:    Size  Location     Type
 10002 ;;  strPtr          2  [STACK] PTR unsigned char 
 10003 ;;		 -> D.lcd(480), D(482), V(190), 
 10004 ;; Auto vars:     Size  Location     Type
 10005 ;;		None
 10006 ;; Return value:  Size  Location     Type
 10007 ;;                  1  [STACK] void 
 10008 ;; Registers used:
 10009 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10010 ;; Tracked objects:
 10011 ;;		On entry : 3F/0
 10012 ;;		On exit  : 3F/3B
 10013 ;;		Unchanged: 0/0
 10014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10019 ;;Total ram usage:        0 bytes
 10020 ;; Hardware stack levels used:    1
 10021 ;; Hardware stack levels required when called:   24
 10022 ;; This function calls:
 10023 ;;		_printf
 10024 ;;		_ringBufS_flush
 10025 ;;		_start_lcd
 10026 ;;		_strlen
 10027 ;;		_wait_lcd_set
 10028 ;; This function is called by:
 10029 ;;		_eaDogM_WriteStringAtPos
 10030 ;; This function uses a reentrant model
 10031 ;;
 10032                           
 10033                           	psect	text38
 10034  019DF6                     __ptext38:
 10035                           	opt callstack 0
 10036  019DF6                     _eaDogM_WriteString:
 10037                           	opt callstack 4
 10038                           
 10039                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10040                           
 10041                           ; BSR set to: 0
 10042                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10043                           ;incstack = 0
 10044  019DF6  EC80  F0DB         	call	_wait_lcd_set	;wreg free
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10048  019DFA  0E00               	movlw	0
 10049  019DFC  6EE6               	movwf	postinc1,c
 10050  019DFE  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10051  019E04  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10052  019E0A  EC7E  F0D0         	call	_ringBufS_flush	;wreg free
 10053  019E0E  94BC               	bcf	188,2,c	;volatile
 10054                           
 10055                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10056                           ;stkvar	_strPtr @ sp[(0)+-2]
 10057  019E10  0EFE               	movlw	-2
 10058  019E12  006F FF8F FFE6     	movff	plusw1,postinc1
 10059  019E18  006F FF8F FFE6     	movff	plusw1,postinc1
 10060  019E1E  EC4E  F0CF         	call	_strlen	;wreg free
 10061  019E22  5029               	movf	(btemp+1)^0,w,c
 10062  019E24  E104               	bnz	u11840
 10063  019E26  0E41               	movlw	65
 10064  019E28  5C28               	subwf	btemp^0,w,c
 10065  019E2A  A0D8               	btfss	status,0,c
 10066  019E2C  D010               	goto	l12284
 10067  019E2E                     u11840:
 10068                           
 10069                           ;stkvar	_strPtr @ sp[(0)+-2]
 10070  019E2E  0EFE               	movlw	-2
 10071  019E30  006F FF8C  F032    	movff	plusw1,btemp+10
 10072  019E36  0EFF               	movlw	-1
 10073  019E38  006F FF8C  F033    	movff	plusw1,btemp+11
 10074  019E3E  0E40               	movlw	64
 10075  019E40  2432               	addwf	(btemp+10)^0,w,c
 10076  019E42  6ED9               	movwf	fsr2l,c
 10077  019E44  0E00               	movlw	0
 10078  019E46  2033               	addwfc	(btemp+11)^0,w,c
 10079  019E48  6EDA               	movwf	fsr2h,c
 10080  019E4A  0E00               	movlw	0
 10081  019E4C  6EDF               	movwf	indf2,c
 10082  019E4E                     l12284:
 10083                           
 10084                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10085  019E4E  013B               	movlb	59	; () banked
 10086  019E50  9FFC               	bcf	252,7,b	;volatile
 10087                           
 10088                           ; BSR set to: 59
 10089                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10090                           ;stkvar	_strPtr @ sp[(0)+-2]
 10091  019E52  0EFE               	movlw	-2
 10092  019E54  006F FF8F FFE6     	movff	plusw1,postinc1
 10093  019E5A  006F FF8F FFE6     	movff	plusw1,postinc1
 10094  019E60  EC4E  F0CF         	call	_strlen	;wreg free
 10095  019E64  0060  F0A3  FBF7   	movff	btemp,15351	;volatile
 10096  019E6A  0060  F0A7  FBF8   	movff	btemp+1,15352	;volatile
 10097                           
 10098                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10099  019E70  013B               	movlb	59	; () banked
 10100  019E72  8FFC               	bsf	252,7,b	;volatile
 10101                           
 10102                           ; BSR set to: 59
 10103                           ;eadog.c: 210:  printf("%s", strPtr);
 10104                           ;stkvar	_strPtr @ sp[(0)+-2]
 10105  019E74  0EFE               	movlw	-2
 10106  019E76  006F FF8F FFE6     	movff	plusw1,postinc1
 10107  019E7C  006F FF8F FFE6     	movff	plusw1,postinc1
 10108  019E82  0EFB               	movlw	low STR_43
 10109  019E84  6EE6               	movwf	postinc1,c
 10110  019E86  0EFF               	movlw	high STR_43
 10111  019E88  6EE6               	movwf	postinc1,c
 10112  019E8A  0E04               	movlw	4
 10113  019E8C  6EE6               	movwf	postinc1,c
 10114  019E8E  EC1A  F0D3         	call	_printf	;wreg free
 10115                           
 10116                           ; BSR set to: 0
 10117                           ;eadog.c: 211:  start_lcd();
 10118  019E92  EC83  F0DB         	call	_start_lcd	;wreg free
 10119                           
 10120                           ; BSR set to: 59
 10121                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10122  019E96  52E5               	movf	postdec1,f,c
 10123  019E98  52E5               	movf	postdec1,f,c
 10124  019E9A  0012               	return		;funcret
 10125  019E9C                     __end_of_eaDogM_WriteString:
 10126                           	opt callstack 0
 10127                           
 10128 ;; *************** function _wait_lcd_set *****************
 10129 ;; Defined at:
 10130 ;;		line 146 in file "eadog.c"
 10131 ;; Parameters:    Size  Location     Type
 10132 ;;		None
 10133 ;; Auto vars:     Size  Location     Type
 10134 ;;		None
 10135 ;; Return value:  Size  Location     Type
 10136 ;;                  1  [STACK] void 
 10137 ;; Registers used:
 10138 ;;		None
 10139 ;; Tracked objects:
 10140 ;;		On entry : 0/3D
 10141 ;;		On exit  : 3F/0
 10142 ;;		Unchanged: 0/0
 10143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10148 ;;Total ram usage:        0 bytes
 10149 ;; Hardware stack levels used:    1
 10150 ;; Hardware stack levels required when called:   15
 10151 ;; This function calls:
 10152 ;;		Nothing
 10153 ;; This function is called by:
 10154 ;;		_eaDogM_WriteString
 10155 ;;		_send_lcd_cmd_dma
 10156 ;; This function uses a reentrant model
 10157 ;;
 10158                           
 10159                           	psect	text39
 10160  01B700                     __ptext39:
 10161                           	opt callstack 0
 10162  01B700                     _wait_lcd_set:
 10163                           	opt callstack 12
 10164                           
 10165                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10166                           
 10167                           ; BSR set to: 59
 10168                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10169                           ;incstack = 0
 10170  01B700  0100               	movlb	0	; () banked
 10171  01B702  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10172                           
 10173                           ; BSR set to: 0
 10174                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10175  01B704  0012               	return		;funcret
 10176  01B706                     __end_of_wait_lcd_set:
 10177                           	opt callstack 0
 10178                           
 10179 ;; *************** function _start_lcd *****************
 10180 ;; Defined at:
 10181 ;;		line 141 in file "eadog.c"
 10182 ;; Parameters:    Size  Location     Type
 10183 ;;		None
 10184 ;; Auto vars:     Size  Location     Type
 10185 ;;		None
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  1  [STACK] void 
 10188 ;; Registers used:
 10189 ;;		None
 10190 ;; Tracked objects:
 10191 ;;		On entry : 3F/0
 10192 ;;		On exit  : 3F/3B
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10199 ;;Total ram usage:        0 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:   15
 10202 ;; This function calls:
 10203 ;;		Nothing
 10204 ;; This function is called by:
 10205 ;;		_eaDogM_WriteString
 10206 ;;		_send_lcd_cmd_dma
 10207 ;; This function uses a reentrant model
 10208 ;;
 10209                           
 10210                           	psect	text40
 10211  01B706                     __ptext40:
 10212                           	opt callstack 0
 10213  01B706                     _start_lcd:
 10214                           	opt callstack 12
 10215                           
 10216                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10217                           
 10218                           ; BSR set to: 0
 10219                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10220                           ;incstack = 0
 10221  01B706  013B               	movlb	59	; () banked
 10222  01B708  8DFC               	bsf	252,6,b	;volatile
 10223                           
 10224                           ; BSR set to: 59
 10225                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10226  01B70A  0012               	return		;funcret
 10227  01B70C                     __end_of_start_lcd:
 10228                           	opt callstack 0
 10229                           
 10230 ;; *************** function _ringBufS_flush *****************
 10231 ;; Defined at:
 10232 ;;		line 76 in file "ringbufs.c"
 10233 ;; Parameters:    Size  Location     Type
 10234 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10235 ;;		 -> ring_buf1(67), 
 10236 ;;  clearBuffer     1  [STACK] const char 
 10237 ;; Auto vars:     Size  Location     Type
 10238 ;;		None
 10239 ;; Return value:  Size  Location     Type
 10240 ;;                  1  [STACK] void 
 10241 ;; Registers used:
 10242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10243 ;; Tracked objects:
 10244 ;;		On entry : 3F/0
 10245 ;;		On exit  : 0/0
 10246 ;;		Unchanged: 0/0
 10247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10250 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10251 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10252 ;;Total ram usage:        0 bytes
 10253 ;; Hardware stack levels used:    1
 10254 ;; Hardware stack levels required when called:   16
 10255 ;; This function calls:
 10256 ;;		_memset
 10257 ;; This function is called by:
 10258 ;;		_eaDogM_WriteString
 10259 ;;		_send_lcd_cmd_dma
 10260 ;; This function uses a reentrant model
 10261 ;;
 10262                           
 10263                           	psect	text41
 10264  01A0FC                     __ptext41:
 10265                           	opt callstack 0
 10266  01A0FC                     _ringBufS_flush:
 10267                           	opt callstack 11
 10268                           
 10269                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10270                           ;stkvar	__this @ sp[(0)+-2]
 10271                           
 10272                           ; BSR set to: 59
 10273                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10274                           ;incstack = 0
 10275  01A0FC  0EFE               	movlw	-2
 10276  01A0FE  006F FF8C  F032    	movff	plusw1,btemp+10
 10277  01A104  0EFF               	movlw	-1
 10278  01A106  006F FF8C  F033    	movff	plusw1,btemp+11
 10279  01A10C  0E42               	movlw	66
 10280  01A10E  2432               	addwf	(btemp+10)^0,w,c
 10281  01A110  6ED9               	movwf	fsr2l,c
 10282  01A112  0E00               	movlw	0
 10283  01A114  2033               	addwfc	(btemp+11)^0,w,c
 10284  01A116  6EDA               	movwf	fsr2h,c
 10285  01A118  0E00               	movlw	0
 10286  01A11A  6EDF               	movwf	indf2,c
 10287                           
 10288                           ;ringbufs.c: 79:  _this->head = 0;
 10289                           ;stkvar	__this @ sp[(0)+-2]
 10290  01A11C  0EFE               	movlw	-2
 10291  01A11E  006F FF8C  F032    	movff	plusw1,btemp+10
 10292  01A124  0EFF               	movlw	-1
 10293  01A126  006F FF8C  F033    	movff	plusw1,btemp+11
 10294  01A12C  0E40               	movlw	64
 10295  01A12E  2432               	addwf	(btemp+10)^0,w,c
 10296  01A130  6ED9               	movwf	fsr2l,c
 10297  01A132  0E00               	movlw	0
 10298  01A134  2033               	addwfc	(btemp+11)^0,w,c
 10299  01A136  6EDA               	movwf	fsr2h,c
 10300  01A138  0E00               	movlw	0
 10301  01A13A  6EDF               	movwf	indf2,c
 10302                           
 10303                           ;ringbufs.c: 80:  _this->tail = 0;
 10304                           ;stkvar	__this @ sp[(0)+-2]
 10305  01A13C  0EFE               	movlw	-2
 10306  01A13E  006F FF8C  F032    	movff	plusw1,btemp+10
 10307  01A144  0EFF               	movlw	-1
 10308  01A146  006F FF8C  F033    	movff	plusw1,btemp+11
 10309  01A14C  0E41               	movlw	65
 10310  01A14E  2432               	addwf	(btemp+10)^0,w,c
 10311  01A150  6ED9               	movwf	fsr2l,c
 10312  01A152  0E00               	movlw	0
 10313  01A154  2033               	addwfc	(btemp+11)^0,w,c
 10314  01A156  6EDA               	movwf	fsr2h,c
 10315  01A158  0E00               	movlw	0
 10316  01A15A  6EDF               	movwf	indf2,c
 10317                           
 10318                           ;ringbufs.c: 81:  if (clearBuffer) {
 10319                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10320  01A15C  0EFD               	movlw	-3
 10321  01A15E  50E3               	movf	plusw1,w,c
 10322  01A160  B4D8               	btfsc	status,2,c
 10323  01A162  D011               	goto	l1581
 10324                           
 10325                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10326  01A164  0E40               	movlw	64
 10327  01A166  6EE6               	movwf	postinc1,c
 10328  01A168  0E00               	movlw	0
 10329  01A16A  6EE6               	movwf	postinc1,c
 10330  01A16C  0E00               	movlw	0
 10331  01A16E  6EE6               	movwf	postinc1,c
 10332  01A170  0E00               	movlw	0
 10333  01A172  6EE6               	movwf	postinc1,c
 10334                           
 10335                           ;stkvar	__this @ sp[(-4)+-2]
 10336  01A174  0EFA               	movlw	-6
 10337  01A176  006F FF8F FFE6     	movff	plusw1,postinc1
 10338  01A17C  006F FF8F FFE6     	movff	plusw1,postinc1
 10339  01A182  ECF2  F0B2         	call	_memset	;wreg free
 10340  01A186                     l1581:
 10341                           
 10342                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10343  01A186  52E5               	movf	postdec1,f,c
 10344  01A188  52E5               	movf	postdec1,f,c
 10345  01A18A  52E5               	movf	postdec1,f,c
 10346  01A18C  0012               	return		;funcret
 10347  01A18E                     __end_of_ringBufS_flush:
 10348                           	opt callstack 0
 10349                           
 10350 ;; *************** function _memset *****************
 10351 ;; Defined at:
 10352 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10353 ;; Parameters:    Size  Location     Type
 10354 ;;  dest            2  [STACK] PTR void 
 10355 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10356 ;;  c               2  [STACK] int 
 10357 ;;  n               2  [STACK] unsigned int 
 10358 ;; Auto vars:     Size  Location     Type
 10359 ;;  s               2  [STACK] PTR unsigned char 
 10360 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10361 ;;  k               2  [STACK] unsigned int 
 10362 ;; Return value:  Size  Location     Type
 10363 ;;                  2  [STACK] PTR void 
 10364 ;; Registers used:
 10365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10366 ;; Tracked objects:
 10367 ;;		On entry : 0/0
 10368 ;;		On exit  : 0/0
 10369 ;;		Unchanged: 0/0
 10370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10375 ;;Total ram usage:        0 bytes
 10376 ;; Hardware stack levels used:    1
 10377 ;; Hardware stack levels required when called:   15
 10378 ;; This function calls:
 10379 ;;		Nothing
 10380 ;; This function is called by:
 10381 ;;		_ringBufS_init
 10382 ;;		_ringBufS_flush
 10383 ;; This function uses a reentrant model
 10384 ;;
 10385                           
 10386                           	psect	text42
 10387  0165E4                     __ptext42:
 10388                           	opt callstack 0
 10389  0165E4                     _memset:
 10390                           	opt callstack 0
 10391                           
 10392                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10393  0165E4  52E6               	movf	postinc1,f,c
 10394  0165E6  52E6               	movf	postinc1,f,c
 10395  0165E8  52E6               	movf	postinc1,f,c
 10396  0165EA  52E6               	movf	postinc1,f,c
 10397                           
 10398                           ;stkvar	_dest @ sp[(-4)+-2]
 10399                           
 10400                           ;incstack = 0
 10401  0165EC  0EFA               	movlw	-6
 10402  0165EE  006F FF8C  F032    	movff	plusw1,btemp+10
 10403  0165F4  0EFB               	movlw	-5
 10404  0165F6  006F FF8C  F033    	movff	plusw1,btemp+11
 10405                           
 10406                           ;stkvar	_s @ sp[(-4)+0]
 10407  0165FC  0EFD               	movlw	-3
 10408  0165FE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10409  016604  0EFC               	movlw	-4
 10410  016606  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10411                           
 10412                           ;stkvar	_n @ sp[(-4)+-6]
 10413  01660C  0EF6               	movlw	-10
 10414  01660E  006F FF8C  F028    	movff	plusw1,btemp
 10415  016614  0EF7               	movlw	-9
 10416  016616  50E3               	movf	plusw1,w,c
 10417  016618  1028               	iorwf	btemp^0,w,c
 10418  01661A  B4D8               	btfsc	status,2,c
 10419  01661C  D154               	goto	u10450
 10420                           
 10421                           ;stkvar	_c @ sp[(-4)+-4]
 10422                           ;stkvar	_s @ sp[(-4)+0]
 10423  01661E  0EFC               	movlw	-4
 10424  016620  006F FF8F FFD9     	movff	plusw1,fsr2l
 10425  016626  0EFD               	movlw	-3
 10426  016628  006F FF8F FFDA     	movff	plusw1,fsr2h
 10427  01662E  0EF8               	movlw	-8
 10428  016630  006F FF8F FFDF     	movff	plusw1,indf2
 10429                           
 10430                           ;stkvar	_c @ sp[(-4)+-4]
 10431                           ;stkvar	_n @ sp[(-4)+-6]
 10432                           ;stkvar	_s @ sp[(-4)+0]
 10433  016636  0EFC               	movlw	-4
 10434  016638  006F FF8C  F032    	movff	plusw1,btemp+10
 10435  01663E  0EFD               	movlw	-3
 10436  016640  006F FF8C  F033    	movff	plusw1,btemp+11
 10437  016646  0EF6               	movlw	-10
 10438  016648  50E3               	movf	plusw1,w,c
 10439  01664A  2632               	addwf	(btemp+10)^0,f,c
 10440  01664C  0EF7               	movlw	-9
 10441  01664E  50E3               	movf	plusw1,w,c
 10442  016650  2233               	addwfc	(btemp+11)^0,f,c
 10443  016652  0EFF               	movlw	255
 10444  016654  2432               	addwf	(btemp+10)^0,w,c
 10445  016656  6ED9               	movwf	fsr2l,c
 10446  016658  0EFF               	movlw	255
 10447  01665A  2033               	addwfc	(btemp+11)^0,w,c
 10448  01665C  6EDA               	movwf	fsr2h,c
 10449  01665E  0EF8               	movlw	-8
 10450  016660  006F FF8F FFDF     	movff	plusw1,indf2
 10451                           
 10452                           ;stkvar	_n @ sp[(-4)+-6]
 10453  016666  0EF7               	movlw	-9
 10454  016668  50E3               	movf	plusw1,w,c
 10455  01666A  E108               	bnz	l11456
 10456  01666C  0EF6               	movlw	-10
 10457  01666E  006F FF8C  F028    	movff	plusw1,btemp
 10458  016674  0E03               	movlw	3
 10459  016676  5E28               	subwf	btemp^0,f,c
 10460  016678  A0D8               	btfss	status,0,c
 10461  01667A  D125               	goto	u10450
 10462  01667C                     l11456:
 10463                           
 10464                           ;stkvar	_c @ sp[(-4)+-4]
 10465                           ;stkvar	_s @ sp[(-4)+0]
 10466  01667C  0EFC               	movlw	-4
 10467  01667E  006F FF8C  F032    	movff	plusw1,btemp+10
 10468  016684  0EFD               	movlw	-3
 10469  016686  006F FF8C  F033    	movff	plusw1,btemp+11
 10470  01668C  0E01               	movlw	1
 10471  01668E  2432               	addwf	(btemp+10)^0,w,c
 10472  016690  6ED9               	movwf	fsr2l,c
 10473  016692  0E00               	movlw	0
 10474  016694  2033               	addwfc	(btemp+11)^0,w,c
 10475  016696  6EDA               	movwf	fsr2h,c
 10476  016698  0EF8               	movlw	-8
 10477  01669A  006F FF8F FFDF     	movff	plusw1,indf2
 10478                           
 10479                           ;stkvar	_c @ sp[(-4)+-4]
 10480                           ;stkvar	_s @ sp[(-4)+0]
 10481  0166A0  0EFC               	movlw	-4
 10482  0166A2  006F FF8C  F032    	movff	plusw1,btemp+10
 10483  0166A8  0EFD               	movlw	-3
 10484  0166AA  006F FF8C  F033    	movff	plusw1,btemp+11
 10485  0166B0  0E02               	movlw	2
 10486  0166B2  2432               	addwf	(btemp+10)^0,w,c
 10487  0166B4  6ED9               	movwf	fsr2l,c
 10488  0166B6  0E00               	movlw	0
 10489  0166B8  2033               	addwfc	(btemp+11)^0,w,c
 10490  0166BA  6EDA               	movwf	fsr2h,c
 10491  0166BC  0EF8               	movlw	-8
 10492  0166BE  006F FF8F FFDF     	movff	plusw1,indf2
 10493                           
 10494                           ;stkvar	_c @ sp[(-4)+-4]
 10495                           ;stkvar	_n @ sp[(-4)+-6]
 10496                           ;stkvar	_s @ sp[(-4)+0]
 10497  0166C4  0EFC               	movlw	-4
 10498  0166C6  006F FF8C  F032    	movff	plusw1,btemp+10
 10499  0166CC  0EFD               	movlw	-3
 10500  0166CE  006F FF8C  F033    	movff	plusw1,btemp+11
 10501  0166D4  0EF6               	movlw	-10
 10502  0166D6  50E3               	movf	plusw1,w,c
 10503  0166D8  2632               	addwf	(btemp+10)^0,f,c
 10504  0166DA  0EF7               	movlw	-9
 10505  0166DC  50E3               	movf	plusw1,w,c
 10506  0166DE  2233               	addwfc	(btemp+11)^0,f,c
 10507  0166E0  0EFE               	movlw	254
 10508  0166E2  2432               	addwf	(btemp+10)^0,w,c
 10509  0166E4  6ED9               	movwf	fsr2l,c
 10510  0166E6  0EFF               	movlw	255
 10511  0166E8  2033               	addwfc	(btemp+11)^0,w,c
 10512  0166EA  6EDA               	movwf	fsr2h,c
 10513  0166EC  0EF8               	movlw	-8
 10514  0166EE  006F FF8F FFDF     	movff	plusw1,indf2
 10515                           
 10516                           ;stkvar	_c @ sp[(-4)+-4]
 10517                           ;stkvar	_n @ sp[(-4)+-6]
 10518                           ;stkvar	_s @ sp[(-4)+0]
 10519  0166F4  0EFC               	movlw	-4
 10520  0166F6  006F FF8C  F032    	movff	plusw1,btemp+10
 10521  0166FC  0EFD               	movlw	-3
 10522  0166FE  006F FF8C  F033    	movff	plusw1,btemp+11
 10523  016704  0EF6               	movlw	-10
 10524  016706  50E3               	movf	plusw1,w,c
 10525  016708  2632               	addwf	(btemp+10)^0,f,c
 10526  01670A  0EF7               	movlw	-9
 10527  01670C  50E3               	movf	plusw1,w,c
 10528  01670E  2233               	addwfc	(btemp+11)^0,f,c
 10529  016710  0EFD               	movlw	253
 10530  016712  2432               	addwf	(btemp+10)^0,w,c
 10531  016714  6ED9               	movwf	fsr2l,c
 10532  016716  0EFF               	movlw	255
 10533  016718  2033               	addwfc	(btemp+11)^0,w,c
 10534  01671A  6EDA               	movwf	fsr2h,c
 10535  01671C  0EF8               	movlw	-8
 10536  01671E  006F FF8F FFDF     	movff	plusw1,indf2
 10537                           
 10538                           ;stkvar	_n @ sp[(-4)+-6]
 10539  016724  0EF7               	movlw	-9
 10540  016726  50E3               	movf	plusw1,w,c
 10541  016728  E108               	bnz	l11462
 10542  01672A  0EF6               	movlw	-10
 10543  01672C  006F FF8C  F028    	movff	plusw1,btemp
 10544  016732  0E07               	movlw	7
 10545  016734  5E28               	subwf	btemp^0,f,c
 10546  016736  A0D8               	btfss	status,0,c
 10547  016738  D0C6               	goto	u10450
 10548  01673A                     l11462:
 10549                           
 10550                           ;stkvar	_c @ sp[(-4)+-4]
 10551                           ;stkvar	_s @ sp[(-4)+0]
 10552  01673A  0EFC               	movlw	-4
 10553  01673C  006F FF8C  F032    	movff	plusw1,btemp+10
 10554  016742  0EFD               	movlw	-3
 10555  016744  006F FF8C  F033    	movff	plusw1,btemp+11
 10556  01674A  0E03               	movlw	3
 10557  01674C  2432               	addwf	(btemp+10)^0,w,c
 10558  01674E  6ED9               	movwf	fsr2l,c
 10559  016750  0E00               	movlw	0
 10560  016752  2033               	addwfc	(btemp+11)^0,w,c
 10561  016754  6EDA               	movwf	fsr2h,c
 10562  016756  0EF8               	movlw	-8
 10563  016758  006F FF8F FFDF     	movff	plusw1,indf2
 10564                           
 10565                           ;stkvar	_c @ sp[(-4)+-4]
 10566                           ;stkvar	_n @ sp[(-4)+-6]
 10567                           ;stkvar	_s @ sp[(-4)+0]
 10568  01675E  0EFC               	movlw	-4
 10569  016760  006F FF8C  F032    	movff	plusw1,btemp+10
 10570  016766  0EFD               	movlw	-3
 10571  016768  006F FF8C  F033    	movff	plusw1,btemp+11
 10572  01676E  0EF6               	movlw	-10
 10573  016770  50E3               	movf	plusw1,w,c
 10574  016772  2632               	addwf	(btemp+10)^0,f,c
 10575  016774  0EF7               	movlw	-9
 10576  016776  50E3               	movf	plusw1,w,c
 10577  016778  2233               	addwfc	(btemp+11)^0,f,c
 10578  01677A  0EFC               	movlw	252
 10579  01677C  2432               	addwf	(btemp+10)^0,w,c
 10580  01677E  6ED9               	movwf	fsr2l,c
 10581  016780  0EFF               	movlw	255
 10582  016782  2033               	addwfc	(btemp+11)^0,w,c
 10583  016784  6EDA               	movwf	fsr2h,c
 10584  016786  0EF8               	movlw	-8
 10585  016788  006F FF8F FFDF     	movff	plusw1,indf2
 10586                           
 10587                           ;stkvar	_n @ sp[(-4)+-6]
 10588  01678E  0EF7               	movlw	-9
 10589  016790  50E3               	movf	plusw1,w,c
 10590  016792  E108               	bnz	l11468
 10591  016794  0EF6               	movlw	-10
 10592  016796  006F FF8C  F028    	movff	plusw1,btemp
 10593  01679C  0E09               	movlw	9
 10594  01679E  5E28               	subwf	btemp^0,f,c
 10595  0167A0  A0D8               	btfss	status,0,c
 10596  0167A2  D091               	goto	u10450
 10597  0167A4                     l11468:
 10598                           
 10599                           ;stkvar	_s @ sp[(-4)+0]
 10600  0167A4  0EFC               	movlw	-4
 10601  0167A6  006F FF8C  F032    	movff	plusw1,btemp+10
 10602  0167AC  1E32               	comf	(btemp+10)^0,f,c
 10603  0167AE  0EFD               	movlw	-3
 10604  0167B0  006F FF8C  F033    	movff	plusw1,btemp+11
 10605  0167B6  1E33               	comf	(btemp+11)^0,f,c
 10606  0167B8  2A32               	incf	(btemp+10)^0,f,c
 10607  0167BA  B4D8               	btfsc	status,2,c
 10608  0167BC  2A33               	incf	(btemp+11)^0,f,c
 10609  0167BE  0E03               	movlw	3
 10610  0167C0  1632               	andwf	(btemp+10)^0,f,c
 10611  0167C2  0E00               	movlw	0
 10612  0167C4  1633               	andwf	(btemp+11)^0,f,c
 10613                           
 10614                           ;stkvar	_k @ sp[(-4)+2]
 10615  0167C6  0EFE               	movlw	-2
 10616  0167C8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10617  0167CE  0EFF               	movlw	-1
 10618  0167D0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10619                           
 10620                           ;stkvar	_k @ sp[(-4)+2]
 10621                           ;stkvar	_s @ sp[(-4)+0]
 10622  0167D6  0EFC               	movlw	-4
 10623  0167D8  50E3               	movf	plusw1,w,c
 10624  0167DA  6E28               	movwf	btemp^0,c
 10625  0167DC  0EFE               	movlw	-2
 10626  0167DE  50E3               	movf	plusw1,w,c
 10627  0167E0  2628               	addwf	btemp^0,f,c
 10628  0167E2  0EFC               	movlw	-4
 10629  0167E4  0060  F0A3  FFE3   	movff	btemp,plusw1
 10630  0167EA  0EFD               	movlw	-3
 10631  0167EC  50E3               	movf	plusw1,w,c
 10632  0167EE  6E28               	movwf	btemp^0,c
 10633  0167F0  0EFF               	movlw	-1
 10634  0167F2  50E3               	movf	plusw1,w,c
 10635  0167F4  2228               	addwfc	btemp^0,f,c
 10636  0167F6  0EFD               	movlw	-3
 10637  0167F8  0060  F0A3  FFE3   	movff	btemp,plusw1
 10638                           
 10639                           ;stkvar	_k @ sp[(-4)+2]
 10640                           ;stkvar	_n @ sp[(-4)+-6]
 10641  0167FE  0EF6               	movlw	-10
 10642  016800  50E3               	movf	plusw1,w,c
 10643  016802  6E28               	movwf	btemp^0,c
 10644  016804  0EFE               	movlw	-2
 10645  016806  50E3               	movf	plusw1,w,c
 10646  016808  5E28               	subwf	btemp^0,f,c
 10647  01680A  0EF6               	movlw	-10
 10648  01680C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10649  016812  0EF7               	movlw	-9
 10650  016814  50E3               	movf	plusw1,w,c
 10651  016816  6E28               	movwf	btemp^0,c
 10652  016818  0EFF               	movlw	-1
 10653  01681A  50E3               	movf	plusw1,w,c
 10654  01681C  5A28               	subwfb	btemp^0,f,c
 10655  01681E  0EF7               	movlw	-9
 10656  016820  0060  F0A3  FFE3   	movff	btemp,plusw1
 10657  016826  0EFC               	movlw	252
 10658  016828  6E32               	movwf	(btemp+10)^0,c
 10659  01682A  0EFF               	movlw	255
 10660  01682C  6E33               	movwf	(btemp+11)^0,c
 10661                           
 10662                           ;stkvar	_n @ sp[(-4)+-6]
 10663  01682E  0EF6               	movlw	-10
 10664  016830  006F FF8C  F028    	movff	plusw1,btemp
 10665  016836  5032               	movf	(btemp+10)^0,w,c
 10666  016838  1628               	andwf	btemp^0,f,c
 10667  01683A  0EF6               	movlw	-10
 10668  01683C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10669  016842  0EF7               	movlw	-9
 10670  016844  006F FF8C  F028    	movff	plusw1,btemp
 10671  01684A  5033               	movf	(btemp+11)^0,w,c
 10672  01684C  1628               	andwf	btemp^0,f,c
 10673  01684E  0EF7               	movlw	-9
 10674  016850  D02E               	goto	L7
 10675  016852                     l11476:
 10676                           
 10677                           ;stkvar	_c @ sp[(-4)+-4]
 10678                           ;stkvar	_s @ sp[(-4)+0]
 10679  016852  0EFC               	movlw	-4
 10680  016854  006F FF8F FFD9     	movff	plusw1,fsr2l
 10681  01685A  0EFD               	movlw	-3
 10682  01685C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10683  016862  0EF8               	movlw	-8
 10684  016864  006F FF8F FFDF     	movff	plusw1,indf2
 10685                           
 10686                           ;stkvar	_n @ sp[(-4)+-6]
 10687  01686A  0EF6               	movlw	-10
 10688  01686C  006F FF8C  F028    	movff	plusw1,btemp
 10689  016872  0E01               	movlw	1
 10690  016874  5E28               	subwf	btemp^0,f,c
 10691  016876  0EF6               	movlw	-10
 10692  016878  0060  F0A3  FFE3   	movff	btemp,plusw1
 10693  01687E  0EF7               	movlw	-9
 10694  016880  006F FF8C  F028    	movff	plusw1,btemp
 10695  016886  0E00               	movlw	0
 10696  016888  5A28               	subwfb	btemp^0,f,c
 10697  01688A  0EF7               	movlw	-9
 10698  01688C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10699                           
 10700                           ;stkvar	_s @ sp[(-4)+0]
 10701  016892  0EFC               	movlw	-4
 10702  016894  50E3               	movf	plusw1,w,c
 10703  016896  0F01               	addlw	1
 10704  016898  6E28               	movwf	btemp^0,c
 10705  01689A  0EFC               	movlw	-4
 10706  01689C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10707  0168A2  6A28               	clrf	btemp^0,c
 10708  0168A4  0EFD               	movlw	-3
 10709  0168A6  50E3               	movf	plusw1,w,c
 10710  0168A8  2028               	addwfc	btemp^0,w,c
 10711  0168AA  6E28               	movwf	btemp^0,c
 10712  0168AC  0EFD               	movlw	-3
 10713  0168AE                     L7:
 10714  0168AE  0060  F0A3  FFE3   	movff	btemp,plusw1
 10715                           
 10716                           ;stkvar	_n @ sp[(-4)+-6]
 10717  0168B4  0EF6               	movlw	-10
 10718  0168B6  006F FF8C  F028    	movff	plusw1,btemp
 10719  0168BC  0EF7               	movlw	-9
 10720  0168BE  50E3               	movf	plusw1,w,c
 10721  0168C0  1028               	iorwf	btemp^0,w,c
 10722  0168C2  A4D8               	btfss	status,2,c
 10723  0168C4  D7C6               	goto	l11476
 10724  0168C6                     u10450:
 10725                           
 10726                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10727  0168C6  0EF6               	movlw	246
 10728  0168C8  26E1               	addwf	fsr1l,f,c
 10729  0168CA  0EFF               	movlw	255
 10730  0168CC  22E2               	addwfc	fsr1h,f,c
 10731  0168CE  0012               	return		;funcret
 10732  0168D0                     __end_of_memset:
 10733                           	opt callstack 0
 10734                           
 10735 ;; *************** function _printf *****************
 10736 ;; Defined at:
 10737 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10738 ;; Parameters:    Size  Location     Type
 10739 ;;  fmt             2  [STACK] PTR const unsigned char 
 10740 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10741 ;; Auto vars:     Size  Location     Type
 10742 ;;  ap              2  [STACK] PTR void [1]
 10743 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10744 ;;  ret             2    0        int 
 10745 ;; Return value:  Size  Location     Type
 10746 ;;                  2  [STACK] int 
 10747 ;; Registers used:
 10748 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10749 ;; Tracked objects:
 10750 ;;		On entry : 3F/3B
 10751 ;;		On exit  : 3F/0
 10752 ;;		Unchanged: 0/0
 10753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10754 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10755 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10757 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10758 ;;Total ram usage:        0 bytes
 10759 ;; Hardware stack levels used:    1
 10760 ;; Hardware stack levels required when called:   23
 10761 ;; This function calls:
 10762 ;;		_vfprintf
 10763 ;; This function is called by:
 10764 ;;		_eaDogM_WriteString
 10765 ;;		_send_lcd_cmd_dma
 10766 ;; This function uses a reentrant model
 10767 ;;
 10768                           
 10769                           	psect	text43
 10770  01A634                     __ptext43:
 10771                           	opt callstack 0
 10772  01A634                     _printf:
 10773                           	opt callstack 0
 10774                           
 10775                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10776  01A634  52E6               	movf	postinc1,f,c
 10777  01A636  52E6               	movf	postinc1,f,c
 10778                           
 10779                           ;stkvar	?_printf @ sp[(-2)+-3]
 10780                           
 10781                           ;incstack = 0
 10782  01A638  0EFB               	movlw	251
 10783  01A63A  24E1               	addwf	fsr1l,w,c
 10784  01A63C  6E32               	movwf	(btemp+10)^0,c
 10785  01A63E  0EFF               	movlw	255
 10786  01A640  20E2               	addwfc	fsr1h,w,c
 10787  01A642  6E33               	movwf	(btemp+11)^0,c
 10788                           
 10789                           ;stkvar	_ap @ sp[(-2)+0]
 10790  01A644  0EFF               	movlw	-1
 10791  01A646  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10792  01A64C  0EFE               	movlw	-2
 10793  01A64E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10794                           
 10795                           ;stkvar	_ap @ sp[(-2)+0]
 10796  01A654  0EFE               	movlw	254
 10797  01A656  24E1               	addwf	fsr1l,w,c
 10798  01A658  6E28               	movwf	btemp^0,c
 10799  01A65A  0EFF               	movlw	255
 10800  01A65C  20E2               	addwfc	fsr1h,w,c
 10801  01A65E  6E29               	movwf	(btemp+1)^0,c
 10802  01A660  0060  F0A3  FFE6   	movff	btemp,postinc1
 10803  01A666  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 10804                           
 10805                           ;stkvar	_fmt @ sp[(-4)+-3]
 10806  01A66C  0EF9               	movlw	-7
 10807  01A66E  006F FF8F FFE6     	movff	plusw1,postinc1
 10808  01A674  006F FF8F FFE6     	movff	plusw1,postinc1
 10809  01A67A  0E00               	movlw	0
 10810  01A67C  6EE6               	movwf	postinc1,c
 10811  01A67E  0E00               	movlw	0
 10812  01A680  6EE6               	movwf	postinc1,c
 10813  01A682  EC50  F0CE         	call	_vfprintf	;wreg free
 10814                           
 10815                           ; BSR set to: 0
 10816                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10817  01A686  52E5               	movf	postdec1,f,c
 10818  01A688  52E5               	movf	postdec1,f,c
 10819  01A68A  52E5               	movf	postdec1,f,c
 10820  01A68C  50E7               	movf	indf1,w,c
 10821  01A68E  5EE1               	subwf	fsr1l,f,c
 10822  01A690  0E00               	movlw	0
 10823  01A692  5AE2               	subwfb	fsr1h,f,c
 10824  01A694  0012               	return		;funcret
 10825  01A696                     __end_of_printf:
 10826                           	opt callstack 0
 10827                           
 10828 ;; *************** function _vfprintf *****************
 10829 ;; Defined at:
 10830 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10831 ;; Parameters:    Size  Location     Type
 10832 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10833 ;;		 -> f(6), NULL(0), 
 10834 ;;  fmt             2  [STACK] PTR const unsigned char 
 10835 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10836 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10837 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10838 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10839 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10840 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10841 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10842 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10843 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10844 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10845 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10846 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10847 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10848 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10849 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10850 ;;		 -> STR_1(17), 
 10851 ;;  ap              2  [STACK] PTR PTR void 
 10852 ;;		 -> ap(2), ap(2), 
 10853 ;; Auto vars:     Size  Location     Type
 10854 ;;  cfmt            2  [STACK] PTR unsigned char 
 10855 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10856 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10857 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10858 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10859 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10860 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10861 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10862 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10863 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10864 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10865 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10866 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10867 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10868 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10869 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10870 ;;		 -> STR_1(17), 
 10871 ;; Return value:  Size  Location     Type
 10872 ;;                  2  [STACK] int 
 10873 ;; Registers used:
 10874 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10875 ;; Tracked objects:
 10876 ;;		On entry : 0/1
 10877 ;;		On exit  : 3F/0
 10878 ;;		Unchanged: 0/0
 10879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10884 ;;Total ram usage:        0 bytes
 10885 ;; Hardware stack levels used:    1
 10886 ;; Hardware stack levels required when called:   22
 10887 ;; This function calls:
 10888 ;;		_vfpfcnvrt
 10889 ;; This function is called by:
 10890 ;;		_sprintf
 10891 ;;		_printf
 10892 ;; This function uses a reentrant model
 10893 ;;
 10894                           
 10895                           	psect	text44
 10896  019CA0                     __ptext44:
 10897                           	opt callstack 0
 10898  019CA0                     _vfprintf:
 10899                           	opt callstack 0
 10900                           
 10901                           ; BSR set to: 0
 10902                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10903  019CA0  52E6               	movf	postinc1,f,c
 10904  019CA2  52E6               	movf	postinc1,f,c
 10905                           
 10906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10907                           ;stkvar	_fmt @ sp[(-2)+-4]
 10908                           
 10909                           ;incstack = 0
 10910 ;; hardware stack exceeded
 10911  019CA4  0EFA               	movlw	-6
 10912  019CA6  006F FF8C  F032    	movff	plusw1,btemp+10
 10913  019CAC  0EFB               	movlw	-5
 10914  019CAE  006F FF8C  F033    	movff	plusw1,btemp+11
 10915                           
 10916                           ;stkvar	_cfmt @ sp[(-2)+0]
 10917  019CB4  0EFF               	movlw	-1
 10918  019CB6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10919  019CBC  0EFE               	movlw	-2
 10920  019CBE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10921                           
 10922                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10923  019CC4  0100               	movlb	0	; () banked
 10924  019CC6  6BC0               	clrf	_nout& (0+255),b
 10925  019CC8  6BC1               	clrf	(_nout+1)& (0+255),b
 10926                           
 10927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10928  019CCA  D021               	goto	l12300
 10929  019CCC                     l12298:
 10930                           
 10931                           ; BSR set to: 0
 10932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10933                           ;stkvar	_ap @ sp[(-2)+-6]
 10934  019CCC  0EF8               	movlw	-8
 10935  019CCE  006F FF8F FFE6     	movff	plusw1,postinc1
 10936  019CD4  006F FF8F FFE6     	movff	plusw1,postinc1
 10937                           
 10938                           ;stkvar	_cfmt @ sp[(-4)+0]
 10939  019CDA  0EFC               	movlw	252
 10940  019CDC  24E1               	addwf	fsr1l,w,c
 10941  019CDE  6E28               	movwf	btemp^0,c
 10942  019CE0  0EFF               	movlw	255
 10943  019CE2  20E2               	addwfc	fsr1h,w,c
 10944  019CE4  6E29               	movwf	(btemp+1)^0,c
 10945  019CE6  0060  F0A3  FFE6   	movff	btemp,postinc1
 10946  019CEC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 10947                           
 10948                           ;stkvar	_fp @ sp[(-6)+-2]
 10949  019CF2  0EF8               	movlw	-8
 10950  019CF4  006F FF8F FFE6     	movff	plusw1,postinc1
 10951  019CFA  006F FF8F FFE6     	movff	plusw1,postinc1
 10952  019D00  EC39  F091         	call	_vfpfcnvrt	;wreg free
 10953  019D04  5028               	movf	btemp^0,w,c
 10954  019D06  0100               	movlb	0	; () banked
 10955  019D08  27C0               	addwf	_nout& (0+255),f,b
 10956  019D0A  5029               	movf	(btemp+1)^0,w,c
 10957  019D0C  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10958  019D0E                     l12300:
 10959                           
 10960                           ; BSR set to: 0
 10961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10962                           ;stkvar	_cfmt @ sp[(-2)+0]
 10963  019D0E  50E1               	movf	fsr1l,w,c
 10964  019D10  0FFE               	addlw	-2
 10965  019D12  6ED9               	movwf	fsr2l,c
 10966  019D14  50E2               	movf	fsr1h,w,c
 10967  019D16  6EDA               	movwf	fsr2h,c
 10968  019D18  0EFF               	movlw	255
 10969  019D1A  22DA               	addwfc	fsr2h,f,c
 10970  019D1C  006F FF7B FFF6     	movff	postinc2,tblptrl
 10971  019D22  006F FF77 FFF7     	movff	postdec2,tblptrh
 10972  019D28                     	if	0	;tblptru may be non-zero
 10973  019D28                     	endif
 10974  019D28                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10975  019D28  0E00               	movlw	low (__mediumconst shr (0+16))
 10976  019D2A  6EF8               	movwf	tblptru,c
 10977  019D2C                     	endif
 10978  019D2C  0008               	tblrd		*
 10979  019D2E  50F5               	movf	tablat,w,c
 10980  019D30  0900               	iorlw	0
 10981  019D32  A4D8               	btfss	status,2,c
 10982  019D34  D7CB               	goto	l12298
 10983                           
 10984                           ; BSR set to: 0
 10985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10986  019D36  0060  F300  F028   	movff	_nout,btemp
 10987  019D3C  0060  F304  F029   	movff	_nout+1,btemp+1
 10988                           
 10989                           ; BSR set to: 0
 10990                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10991  019D42  0EF8               	movlw	248
 10992  019D44  26E1               	addwf	fsr1l,f,c
 10993  019D46  0EFF               	movlw	255
 10994  019D48  22E2               	addwfc	fsr1h,f,c
 10995  019D4A  0012               	return		;funcret
 10996  019D4C                     __end_of_vfprintf:
 10997                           	opt callstack 0
 10998                           
 10999 ;; *************** function _vfpfcnvrt *****************
 11000 ;; Defined at:
 11001 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11002 ;; Parameters:    Size  Location     Type
 11003 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11004 ;;		 -> f(6), NULL(0), 
 11005 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 11006 ;;		 -> cfmt(2), 
 11007 ;;  ap              2  [STACK] PTR PTR void 
 11008 ;;		 -> ap(2), ap(2), 
 11009 ;; Auto vars:     Size  Location     Type
 11010 ;;  llu             8  [STACK] unsigned long long 
 11011 ;;  ll              8  [STACK] long long 
 11012 ;;  f               4  [STACK] long long 
 11013 ;;  ct              3  [STACK] unsigned char [3]
 11014 ;;  vp              3    0        PTR void 
 11015 ;;  cp              2  [STACK] PTR unsigned char 
 11016 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11017 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 11018 ;;		 -> V(190), 
 11019 ;;  i               2    0        int 
 11020 ;;  done            2    0        int 
 11021 ;;  c               1  [STACK] unsigned char 
 11022 ;; Return value:  Size  Location     Type
 11023 ;;                  2  [STACK] int 
 11024 ;; Registers used:
 11025 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11026 ;; Tracked objects:
 11027 ;;		On entry : 0/0
 11028 ;;		On exit  : 0/0
 11029 ;;		Unchanged: 0/0
 11030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11031 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11032 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11034 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11035 ;;Total ram usage:        0 bytes
 11036 ;; Hardware stack levels used:    1
 11037 ;; Hardware stack levels required when called:   21
 11038 ;; This function calls:
 11039 ;;		_atoi
 11040 ;;		_ctoa
 11041 ;;		_dtoa
 11042 ;;		_efgtoa
 11043 ;;		_fputc
 11044 ;;		_isdigit
 11045 ;;		_isupper
 11046 ;;		_stoa
 11047 ;;		_strncmp
 11048 ;;		_tolower
 11049 ;;		_utoa
 11050 ;;		_xtoa
 11051 ;; This function is called by:
 11052 ;;		_vfprintf
 11053 ;; This function uses a reentrant model
 11054 ;;
 11055                           
 11056                           	psect	text45
 11057  012272                     __ptext45:
 11058                           	opt callstack 0
 11059  012272                     _vfpfcnvrt:
 11060                           	opt callstack 0
 11061                           
 11062                           ; BSR set to: 0
 11063                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11064  012272  0E20               	movlw	32
 11065  012274  26E1               	addwf	fsr1l,f,c
 11066  012276  0E00               	movlw	0
 11067  012278  22E2               	addwfc	fsr1h,f,c
 11068                           
 11069                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11070                           ;stkvar	_fmt @ sp[(-32)+-4]
 11071                           
 11072                           ;incstack = 0
 11073 ;; hardware stack exceeded
 11074  01227A  0EDC               	movlw	-36
 11075  01227C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11076  012282  0EDD               	movlw	-35
 11077  012284  006F FF8F FFDA     	movff	plusw1,fsr2h
 11078  01228A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11079  012290  006F FF77 FFF7     	movff	postdec2,tblptrh
 11080  012296                     	if	0	;tblptru may be non-zero
 11081  012296                     	endif
 11082  012296                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11083  012296  0E00               	movlw	low (__mediumconst shr (0+16))
 11084  012298  6EF8               	movwf	tblptru,c
 11085  01229A                     	endif
 11086  01229A  0008               	tblrd		*
 11087  01229C  50F5               	movf	tablat,w,c
 11088  01229E  0A25               	xorlw	37
 11089  0122A0  A4D8               	btfss	status,2,c
 11090  0122A2  EFE0  F098         	goto	l12244
 11091                           
 11092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11093                           ;stkvar	_fmt @ sp[(-32)+-4]
 11094  0122A6  0EDC               	movlw	-36
 11095  0122A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11096  0122AE  0EDD               	movlw	-35
 11097  0122B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11098  0122B6  2ADE               	incf	postinc2,f,c
 11099  0122B8  0E00               	movlw	0
 11100  0122BA  22DD               	addwfc	postdec2,f,c
 11101                           
 11102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11103  0122BC  6A48               	clrf	_width^0,c
 11104  0122BE  6A49               	clrf	(_width+1)^0,c
 11105  0122C0  6A4C               	clrf	_flags^0,c
 11106  0122C2  6A4D               	clrf	(_flags+1)^0,c
 11107                           
 11108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11109  0122C4  684A               	setf	_prec^0,c
 11110  0122C6  684B               	setf	(_prec+1)^0,c
 11111                           
 11112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11113                           ;stkvar	_fmt @ sp[(-32)+-4]
 11114  0122C8  0EDC               	movlw	-36
 11115  0122CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11116  0122D0  0EDD               	movlw	-35
 11117  0122D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11118  0122D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11119  0122DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11120  0122E4                     	if	0	;tblptru may be non-zero
 11121  0122E4                     	endif
 11122  0122E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11123  0122E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11124  0122E6  6EF8               	movwf	tblptru,c
 11125  0122E8                     	endif
 11126  0122E8  0008               	tblrd		*
 11127  0122EA  50F5               	movf	tablat,w,c
 11128  0122EC  0A2A               	xorlw	42
 11129  0122EE  A4D8               	btfss	status,2,c
 11130  0122F0  D031               	goto	l12062
 11131                           
 11132                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11133                           ;stkvar	_fmt @ sp[(-32)+-4]
 11134  0122F2  0EDC               	movlw	-36
 11135  0122F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11136  0122FA  0EDD               	movlw	-35
 11137  0122FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11138  012302  2ADE               	incf	postinc2,f,c
 11139  012304  0E00               	movlw	0
 11140  012306  22DD               	addwfc	postdec2,f,c
 11141                           
 11142                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11143                           ;stkvar	_ap @ sp[(-32)+-6]
 11144  012308  0EDA               	movlw	-38
 11145  01230A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11146  012310  0EDB               	movlw	-37
 11147  012312  006F FF8F FFDA     	movff	plusw1,fsr2h
 11148  012318  0E02               	movlw	2
 11149  01231A  5EDE               	subwf	postinc2,f,c
 11150  01231C  0E00               	movlw	0
 11151  01231E  5ADD               	subwfb	postdec2,f,c
 11152  012320  006F FF78  F032    	movff	postinc2,btemp+10
 11153  012326  006F FF74  F033    	movff	postdec2,btemp+11
 11154  01232C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11155  012332  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11156  012338  006F FF78  F048    	movff	postinc2,_width
 11157  01233E  006F FF74  F049    	movff	postdec2,_width+1
 11158                           
 11159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11160  012344  AE49               	btfss	(_width+1)^0,7,c
 11161  012346  D066               	goto	u11580
 11162                           
 11163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11164  012348  804C               	bsf	_flags^0,0,c
 11165                           
 11166                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11167  01234A  6C48               	negf	_width^0,c
 11168  01234C  1E49               	comf	(_width+1)^0,f,c
 11169  01234E  B0D8               	btfsc	status,0,c
 11170  012350  2A49               	incf	(_width+1)^0,f,c
 11171  012352  D060               	goto	u11580
 11172  012354                     l12062:
 11173                           
 11174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11175                           ;stkvar	_fmt @ sp[(-32)+-4]
 11176  012354  0EDC               	movlw	-36
 11177  012356  006F FF8F FFD9     	movff	plusw1,fsr2l
 11178  01235C  0EDD               	movlw	-35
 11179  01235E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11180  012364  006F FF78  F032    	movff	postinc2,btemp+10
 11181  01236A  006F FF74  F033    	movff	postdec2,btemp+11
 11182  012370  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11183  012376  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11184  01237C  EC67  F0B8         	call	_atoi	;wreg free
 11185  012380  0060  F0A0  F048   	movff	btemp,_width
 11186  012386  0060  F0A4  F049   	movff	btemp+1,_width+1
 11187                           
 11188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11189  01238C  D00B               	goto	l12066
 11190  01238E                     l12064:
 11191                           
 11192                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11193                           ;stkvar	_fmt @ sp[(-32)+-4]
 11194  01238E  0EDC               	movlw	-36
 11195  012390  006F FF8F FFD9     	movff	plusw1,fsr2l
 11196  012396  0EDD               	movlw	-35
 11197  012398  006F FF8F FFDA     	movff	plusw1,fsr2h
 11198  01239E  2ADE               	incf	postinc2,f,c
 11199  0123A0  0E00               	movlw	0
 11200  0123A2  22DD               	addwfc	postdec2,f,c
 11201  0123A4                     l12066:
 11202  0123A4  0ED0               	movlw	208
 11203  0123A6  6E32               	movwf	(btemp+10)^0,c
 11204  0123A8  0EFF               	movlw	255
 11205  0123AA  6E33               	movwf	(btemp+11)^0,c
 11206                           
 11207                           ;stkvar	_fmt @ sp[(-32)+-4]
 11208  0123AC  0EDC               	movlw	-36
 11209  0123AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11210  0123B4  0EDD               	movlw	-35
 11211  0123B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11212  0123BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11213  0123C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11214  0123C8                     	if	0	;tblptru may be non-zero
 11215  0123C8                     	endif
 11216  0123C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11217  0123C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11218  0123CA  6EF8               	movwf	tblptru,c
 11219  0123CC                     	endif
 11220  0123CC  0008               	tblrd		*
 11221  0123CE  50F5               	movf	tablat,w,c
 11222  0123D0  6E30               	movwf	(btemp+8)^0,c
 11223  0123D2  6A31               	clrf	(btemp+9)^0,c
 11224  0123D4  5032               	movf	(btemp+10)^0,w,c
 11225  0123D6  2630               	addwf	(btemp+8)^0,f,c
 11226  0123D8  5033               	movf	(btemp+11)^0,w,c
 11227  0123DA  2231               	addwfc	(btemp+9)^0,f,c
 11228  0123DC  5031               	movf	(btemp+9)^0,w,c
 11229  0123DE  E106               	bnz	u11560
 11230  0123E0  0E0A               	movlw	10
 11231  0123E2  5C30               	subwf	(btemp+8)^0,w,c
 11232  0123E4  B0D8               	btfsc	status,0,c
 11233  0123E6  D002               	goto	u11560
 11234  0123E8  0E01               	movlw	1
 11235  0123EA  D001               	goto	u11570
 11236  0123EC                     u11560:
 11237  0123EC  0E00               	movlw	0
 11238  0123EE                     u11570:
 11239  0123EE  6E32               	movwf	(btemp+10)^0,c
 11240  0123F0  6A33               	clrf	(btemp+11)^0,c
 11241                           
 11242                           ;stkvar	_vfpfcnvrt$5441 @ sp[(-32)+4]
 11243  0123F2  0EE4               	movlw	-28
 11244  0123F4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11245  0123FA  0EE5               	movlw	-27
 11246  0123FC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11247                           
 11248                           ;stkvar	_vfpfcnvrt$5441 @ sp[(-32)+4]
 11249  012402  0EE4               	movlw	-28
 11250  012404  006F FF8C  F028    	movff	plusw1,btemp
 11251  01240A  0EE5               	movlw	-27
 11252  01240C  50E3               	movf	plusw1,w,c
 11253  01240E  1028               	iorwf	btemp^0,w,c
 11254  012410  A4D8               	btfss	status,2,c
 11255  012412  D7BD               	goto	l12064
 11256  012414                     u11580:
 11257                           
 11258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11259                           ;stkvar	_fmt @ sp[(-32)+-4]
 11260  012414  0EDC               	movlw	-36
 11261  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11262  01241C  0EDD               	movlw	-35
 11263  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11264  012424  006F FF7B FFF6     	movff	postinc2,tblptrl
 11265  01242A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11266  012430                     	if	0	;tblptru may be non-zero
 11267  012430                     	endif
 11268  012430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11269  012430  0E00               	movlw	low (__mediumconst shr (0+16))
 11270  012432  6EF8               	movwf	tblptru,c
 11271  012434                     	endif
 11272  012434  0008               	tblrd		*
 11273  012436  50F5               	movf	tablat,w,c
 11274  012438  0A2E               	xorlw	46
 11275  01243A  A4D8               	btfss	status,2,c
 11276  01243C  D0AC               	goto	u11630
 11277                           
 11278                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11279  01243E  6A4A               	clrf	_prec^0,c
 11280  012440  6A4B               	clrf	(_prec+1)^0,c
 11281                           
 11282                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11283                           ;stkvar	_fmt @ sp[(-32)+-4]
 11284  012442  0EDC               	movlw	-36
 11285  012444  006F FF8F FFD9     	movff	plusw1,fsr2l
 11286  01244A  0EDD               	movlw	-35
 11287  01244C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11288  012452  2ADE               	incf	postinc2,f,c
 11289  012454  0E00               	movlw	0
 11290  012456  22DD               	addwfc	postdec2,f,c
 11291                           
 11292                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11293                           ;stkvar	_fmt @ sp[(-32)+-4]
 11294  012458  0EDC               	movlw	-36
 11295  01245A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11296  012460  0EDD               	movlw	-35
 11297  012462  006F FF8F FFDA     	movff	plusw1,fsr2h
 11298  012468  006F FF7B FFF6     	movff	postinc2,tblptrl
 11299  01246E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11300  012474                     	if	0	;tblptru may be non-zero
 11301  012474                     	endif
 11302  012474                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11303  012474  0E00               	movlw	low (__mediumconst shr (0+16))
 11304  012476  6EF8               	movwf	tblptru,c
 11305  012478                     	endif
 11306  012478  0008               	tblrd		*
 11307  01247A  50F5               	movf	tablat,w,c
 11308  01247C  0A2A               	xorlw	42
 11309  01247E  A4D8               	btfss	status,2,c
 11310  012480  D02A               	goto	l12084
 11311                           
 11312                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11313                           ;stkvar	_fmt @ sp[(-32)+-4]
 11314  012482  0EDC               	movlw	-36
 11315  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 11316  01248A  0EDD               	movlw	-35
 11317  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11318  012492  2ADE               	incf	postinc2,f,c
 11319  012494  0E00               	movlw	0
 11320  012496  22DD               	addwfc	postdec2,f,c
 11321                           
 11322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11323                           ;stkvar	_ap @ sp[(-32)+-6]
 11324  012498  0EDA               	movlw	-38
 11325  01249A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11326  0124A0  0EDB               	movlw	-37
 11327  0124A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11328  0124A8  0E02               	movlw	2
 11329  0124AA  5EDE               	subwf	postinc2,f,c
 11330  0124AC  0E00               	movlw	0
 11331  0124AE  5ADD               	subwfb	postdec2,f,c
 11332  0124B0  006F FF78  F032    	movff	postinc2,btemp+10
 11333  0124B6  006F FF74  F033    	movff	postdec2,btemp+11
 11334  0124BC  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11335  0124C2  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11336  0124C8  006F FF78  F04A    	movff	postinc2,_prec
 11337  0124CE  006F FF74  F04B    	movff	postdec2,_prec+1
 11338                           
 11339                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11340  0124D4  D060               	goto	u11630
 11341  0124D6                     l12084:
 11342                           
 11343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11344                           ;stkvar	_fmt @ sp[(-32)+-4]
 11345  0124D6  0EDC               	movlw	-36
 11346  0124D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11347  0124DE  0EDD               	movlw	-35
 11348  0124E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11349  0124E6  006F FF78  F032    	movff	postinc2,btemp+10
 11350  0124EC  006F FF74  F033    	movff	postdec2,btemp+11
 11351  0124F2  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11352  0124F8  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11353  0124FE  EC67  F0B8         	call	_atoi	;wreg free
 11354  012502  0060  F0A0  F04A   	movff	btemp,_prec
 11355  012508  0060  F0A4  F04B   	movff	btemp+1,_prec+1
 11356                           
 11357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11358  01250E  D00B               	goto	l12088
 11359  012510                     l12086:
 11360                           
 11361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11362                           ;stkvar	_fmt @ sp[(-32)+-4]
 11363  012510  0EDC               	movlw	-36
 11364  012512  006F FF8F FFD9     	movff	plusw1,fsr2l
 11365  012518  0EDD               	movlw	-35
 11366  01251A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11367  012520  2ADE               	incf	postinc2,f,c
 11368  012522  0E00               	movlw	0
 11369  012524  22DD               	addwfc	postdec2,f,c
 11370  012526                     l12088:
 11371  012526  0ED0               	movlw	208
 11372  012528  6E32               	movwf	(btemp+10)^0,c
 11373  01252A  0EFF               	movlw	255
 11374  01252C  6E33               	movwf	(btemp+11)^0,c
 11375                           
 11376                           ;stkvar	_fmt @ sp[(-32)+-4]
 11377  01252E  0EDC               	movlw	-36
 11378  012530  006F FF8F FFD9     	movff	plusw1,fsr2l
 11379  012536  0EDD               	movlw	-35
 11380  012538  006F FF8F FFDA     	movff	plusw1,fsr2h
 11381  01253E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11382  012544  006F FF77 FFF7     	movff	postdec2,tblptrh
 11383  01254A                     	if	0	;tblptru may be non-zero
 11384  01254A                     	endif
 11385  01254A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11386  01254A  0E00               	movlw	low (__mediumconst shr (0+16))
 11387  01254C  6EF8               	movwf	tblptru,c
 11388  01254E                     	endif
 11389  01254E  0008               	tblrd		*
 11390  012550  50F5               	movf	tablat,w,c
 11391  012552  6E30               	movwf	(btemp+8)^0,c
 11392  012554  6A31               	clrf	(btemp+9)^0,c
 11393  012556  5032               	movf	(btemp+10)^0,w,c
 11394  012558  2630               	addwf	(btemp+8)^0,f,c
 11395  01255A  5033               	movf	(btemp+11)^0,w,c
 11396  01255C  2231               	addwfc	(btemp+9)^0,f,c
 11397  01255E  5031               	movf	(btemp+9)^0,w,c
 11398  012560  E106               	bnz	u11610
 11399  012562  0E0A               	movlw	10
 11400  012564  5C30               	subwf	(btemp+8)^0,w,c
 11401  012566  B0D8               	btfsc	status,0,c
 11402  012568  D002               	goto	u11610
 11403  01256A  0E01               	movlw	1
 11404  01256C  D001               	goto	u11620
 11405  01256E                     u11610:
 11406  01256E  0E00               	movlw	0
 11407  012570                     u11620:
 11408  012570  6E32               	movwf	(btemp+10)^0,c
 11409  012572  6A33               	clrf	(btemp+11)^0,c
 11410                           
 11411                           ;stkvar	_vfpfcnvrt$5442 @ sp[(-32)+0]
 11412  012574  0EE0               	movlw	-32
 11413  012576  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11414  01257C  0EE1               	movlw	-31
 11415  01257E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11416                           
 11417                           ;stkvar	_vfpfcnvrt$5442 @ sp[(-32)+0]
 11418  012584  0EE0               	movlw	-32
 11419  012586  006F FF8C  F028    	movff	plusw1,btemp
 11420  01258C  0EE1               	movlw	-31
 11421  01258E  50E3               	movf	plusw1,w,c
 11422  012590  1028               	iorwf	btemp^0,w,c
 11423  012592  A4D8               	btfss	status,2,c
 11424  012594  D7BD               	goto	l12086
 11425  012596                     u11630:
 11426                           
 11427                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11428                           ;stkvar	_fmt @ sp[(-32)+-4]
 11429  012596  0EDC               	movlw	-36
 11430  012598  006F FF8F FFD9     	movff	plusw1,fsr2l
 11431  01259E  0EDD               	movlw	-35
 11432  0125A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11433  0125A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11434  0125AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11435  0125B2                     	if	0	;tblptru may be non-zero
 11436  0125B2                     	endif
 11437  0125B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11438  0125B2  0E00               	movlw	low (__mediumconst shr (0+16))
 11439  0125B4  6EF8               	movwf	tblptru,c
 11440  0125B6                     	endif
 11441  0125B6  0008               	tblrd		*
 11442  0125B8  50F5               	movf	tablat,w,c
 11443  0125BA  6EE6               	movwf	postinc1,c
 11444  0125BC  0E00               	movlw	0
 11445  0125BE  6EE6               	movwf	postinc1,c
 11446  0125C0  EC95  F0D1         	call	_tolower	;wreg free
 11447                           
 11448                           ;stkvar	_ct @ sp[(-32)+26]
 11449  0125C4  0EFA               	movlw	-6
 11450  0125C6  0060  F0A3  FFE3   	movff	btemp,plusw1
 11451                           
 11452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11453                           ;stkvar	_ct @ sp[(-32)+26]
 11454  0125CC  0EFA               	movlw	-6
 11455  0125CE  50E3               	movf	plusw1,w,c
 11456  0125D0  B4D8               	btfsc	status,2,c
 11457  0125D2  D05B               	goto	l12104
 11458                           
 11459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11460                           ;stkvar	_ct @ sp[(-32)+26]
 11461  0125D4  0EFB               	movlw	251
 11462  0125D6  24E1               	addwf	fsr1l,w,c
 11463  0125D8  6ED9               	movwf	fsr2l,c
 11464  0125DA  0EFF               	movlw	255
 11465  0125DC  20E2               	addwfc	fsr1h,w,c
 11466  0125DE  6EDA               	movwf	fsr2h,c
 11467                           
 11468                           ;stkvar	_fmt @ sp[(-32)+-4]
 11469  0125E0  0EDC               	movlw	-36
 11470  0125E2  006F FF8F FFE9     	movff	plusw1,fsr0l
 11471  0125E8  0EDD               	movlw	-35
 11472  0125EA  006F FF8F FFEA     	movff	plusw1,fsr0h
 11473  0125F0  006F FFB8  F032    	movff	postinc0,btemp+10
 11474  0125F6  006F FFB4  F033    	movff	postdec0,btemp+11
 11475  0125FC  0E01               	movlw	1
 11476  0125FE  2632               	addwf	(btemp+10)^0,f,c
 11477  012600  0E00               	movlw	0
 11478  012602  2233               	addwfc	(btemp+11)^0,f,c
 11479  012604  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11480  01260A  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11481  012610                     	if	0	;tblptru may be non-zero
 11482  012610                     	endif
 11483  012610                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11484  012610  0E00               	movlw	low (__mediumconst shr (0+16))
 11485  012612  6EF8               	movwf	tblptru,c
 11486  012614                     	endif
 11487  012614  0008               	tblrd		*
 11488  012616  50F5               	movf	tablat,w,c
 11489  012618  6EE6               	movwf	postinc1,c
 11490  01261A  0E00               	movlw	0
 11491  01261C  6EE6               	movwf	postinc1,c
 11492  01261E  EC95  F0D1         	call	_tolower	;wreg free
 11493  012622  5028               	movf	btemp^0,w,c
 11494  012624  6EDF               	movwf	indf2,c
 11495                           
 11496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11497                           ;stkvar	_ct @ sp[(-32)+26]
 11498  012626  0EFB               	movlw	251
 11499  012628  24E1               	addwf	fsr1l,w,c
 11500  01262A  6ED9               	movwf	fsr2l,c
 11501  01262C  0EFF               	movlw	255
 11502  01262E  20E2               	addwfc	fsr1h,w,c
 11503  012630  6EDA               	movwf	fsr2h,c
 11504  012632  50DF               	movf	indf2,w,c
 11505  012634  B4D8               	btfsc	status,2,c
 11506  012636  D029               	goto	l12104
 11507                           
 11508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11509                           ;stkvar	_ct @ sp[(-32)+26]
 11510  012638  0EFC               	movlw	252
 11511  01263A  24E1               	addwf	fsr1l,w,c
 11512  01263C  6ED9               	movwf	fsr2l,c
 11513  01263E  0EFF               	movlw	255
 11514  012640  20E2               	addwfc	fsr1h,w,c
 11515  012642  6EDA               	movwf	fsr2h,c
 11516                           
 11517                           ;stkvar	_fmt @ sp[(-32)+-4]
 11518  012644  0EDC               	movlw	-36
 11519  012646  006F FF8F FFE9     	movff	plusw1,fsr0l
 11520  01264C  0EDD               	movlw	-35
 11521  01264E  006F FF8F FFEA     	movff	plusw1,fsr0h
 11522  012654  006F FFB8  F032    	movff	postinc0,btemp+10
 11523  01265A  006F FFB4  F033    	movff	postdec0,btemp+11
 11524  012660  0E02               	movlw	2
 11525  012662  2632               	addwf	(btemp+10)^0,f,c
 11526  012664  0E00               	movlw	0
 11527  012666  2233               	addwfc	(btemp+11)^0,f,c
 11528  012668  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11529  01266E  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11530  012674                     	if	0	;tblptru may be non-zero
 11531  012674                     	endif
 11532  012674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11533  012674  0E00               	movlw	low (__mediumconst shr (0+16))
 11534  012676  6EF8               	movwf	tblptru,c
 11535  012678                     	endif
 11536  012678  0008               	tblrd		*
 11537  01267A  50F5               	movf	tablat,w,c
 11538  01267C  6EE6               	movwf	postinc1,c
 11539  01267E  0E00               	movlw	0
 11540  012680  6EE6               	movwf	postinc1,c
 11541  012682  EC95  F0D1         	call	_tolower	;wreg free
 11542  012686  5028               	movf	btemp^0,w,c
 11543  012688  6EDF               	movwf	indf2,c
 11544  01268A                     l12104:
 11545                           
 11546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11547                           ;stkvar	_fmt @ sp[(-32)+-4]
 11548  01268A  0EDC               	movlw	-36
 11549  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11550  012692  0EDD               	movlw	-35
 11551  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 11552  01269A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11553  0126A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11554  0126A6                     	if	0	;tblptru may be non-zero
 11555  0126A6                     	endif
 11556  0126A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11557  0126A6  0E00               	movlw	low (__mediumconst shr (0+16))
 11558  0126A8  6EF8               	movwf	tblptru,c
 11559  0126AA                     	endif
 11560  0126AA  0008               	tblrd		*
 11561  0126AC  50F5               	movf	tablat,w,c
 11562  0126AE  0A63               	xorlw	99
 11563  0126B0  A4D8               	btfss	status,2,c
 11564  0126B2  D037               	goto	l12114
 11565                           
 11566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11567                           ;stkvar	_fmt @ sp[(-32)+-4]
 11568  0126B4  0EDC               	movlw	-36
 11569  0126B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11570  0126BC  0EDD               	movlw	-35
 11571  0126BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11572  0126C4  2ADE               	incf	postinc2,f,c
 11573  0126C6  0E00               	movlw	0
 11574  0126C8  22DD               	addwfc	postdec2,f,c
 11575                           
 11576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11577                           ;stkvar	_ap @ sp[(-32)+-6]
 11578  0126CA  0EDA               	movlw	-38
 11579  0126CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11580  0126D2  0EDB               	movlw	-37
 11581  0126D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11582  0126DA  0E02               	movlw	2
 11583  0126DC  5EDE               	subwf	postinc2,f,c
 11584  0126DE  0E00               	movlw	0
 11585  0126E0  5ADD               	subwfb	postdec2,f,c
 11586  0126E2  006F FF78  F032    	movff	postinc2,btemp+10
 11587  0126E8  006F FF74  F033    	movff	postdec2,btemp+11
 11588  0126EE  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11589  0126F4  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11590  0126FA  50DF               	movf	indf2,w,c
 11591  0126FC  6E33               	movwf	(btemp+11)^0,c
 11592                           
 11593                           ;stkvar	_c @ sp[(-32)+31]
 11594  0126FE  0EFF               	movlw	-1
 11595  012700  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11596                           
 11597                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11598                           ;stkvar	_c @ sp[(-32)+31]
 11599  012706  0EFF               	movlw	-1
 11600  012708  50E3               	movf	plusw1,w,c
 11601  01270A  6EE6               	movwf	postinc1,c
 11602                           
 11603                           ;stkvar	_fp @ sp[(-33)+-2]
 11604  01270C  0EDD               	movlw	-35
 11605  01270E  006F FF8F FFE6     	movff	plusw1,postinc1
 11606  012714  006F FF8F FFE6     	movff	plusw1,postinc1
 11607  01271A  EC0F  F0D1         	call	_ctoa	;wreg free
 11608  01271E  EF0A  F099         	goto	l2330
 11609  012722                     l12114:
 11610                           
 11611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11612                           ;stkvar	_fmt @ sp[(-32)+-4]
 11613  012722  0EDC               	movlw	-36
 11614  012724  006F FF8F FFD9     	movff	plusw1,fsr2l
 11615  01272A  0EDD               	movlw	-35
 11616  01272C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11617  012732  006F FF7B FFF6     	movff	postinc2,tblptrl
 11618  012738  006F FF77 FFF7     	movff	postdec2,tblptrh
 11619  01273E                     	if	0	;tblptru may be non-zero
 11620  01273E                     	endif
 11621  01273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11622  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 11623  012740  6EF8               	movwf	tblptru,c
 11624  012742                     	endif
 11625  012742  0008               	tblrd		*
 11626  012744  50F5               	movf	tablat,w,c
 11627  012746  0A64               	xorlw	100
 11628  012748  B4D8               	btfsc	status,2,c
 11629  01274A  D015               	goto	u11680
 11630                           
 11631                           ;stkvar	_fmt @ sp[(-32)+-4]
 11632  01274C  0EDC               	movlw	-36
 11633  01274E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11634  012754  0EDD               	movlw	-35
 11635  012756  006F FF8F FFDA     	movff	plusw1,fsr2h
 11636  01275C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11637  012762  006F FF77 FFF7     	movff	postdec2,tblptrh
 11638  012768                     	if	0	;tblptru may be non-zero
 11639  012768                     	endif
 11640  012768                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11641  012768  0E00               	movlw	low (__mediumconst shr (0+16))
 11642  01276A  6EF8               	movwf	tblptru,c
 11643  01276C                     	endif
 11644  01276C  0008               	tblrd		*
 11645  01276E  50F5               	movf	tablat,w,c
 11646  012770  0A69               	xorlw	105
 11647  012772  A4D8               	btfss	status,2,c
 11648  012774  D076               	goto	l12126
 11649  012776                     u11680:
 11650                           
 11651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11652                           ;stkvar	_fmt @ sp[(-32)+-4]
 11653  012776  0EDC               	movlw	-36
 11654  012778  006F FF8F FFD9     	movff	plusw1,fsr2l
 11655  01277E  0EDD               	movlw	-35
 11656  012780  006F FF8F FFDA     	movff	plusw1,fsr2h
 11657  012786  2ADE               	incf	postinc2,f,c
 11658  012788  0E00               	movlw	0
 11659  01278A  22DD               	addwfc	postdec2,f,c
 11660                           
 11661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11662                           ;stkvar	_ap @ sp[(-32)+-6]
 11663  01278C  0EDA               	movlw	-38
 11664  01278E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11665  012794  0EDB               	movlw	-37
 11666  012796  006F FF8F FFDA     	movff	plusw1,fsr2h
 11667  01279C  0E02               	movlw	2
 11668  01279E  5EDE               	subwf	postinc2,f,c
 11669  0127A0  0E00               	movlw	0
 11670  0127A2  5ADD               	subwfb	postdec2,f,c
 11671  0127A4  006F FF78  F032    	movff	postinc2,btemp+10
 11672  0127AA  006F FF74  F033    	movff	postdec2,btemp+11
 11673  0127B0  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11674  0127B6  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11675  0127BC  006F FF78  F032    	movff	postinc2,btemp+10
 11676  0127C2  006F FF74  F033    	movff	postdec2,btemp+11
 11677                           
 11678                           ;stkvar	_ll @ sp[(-32)+14]
 11679  0127C8  0EEE               	movlw	-18
 11680  0127CA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11681  0127D0  0EEF               	movlw	-17
 11682  0127D2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11683  0127D8  6A28               	clrf	btemp^0,c
 11684  0127DA  BEE3               	btfsc	plusw1,7,c
 11685  0127DC  6828               	setf	btemp^0,c
 11686  0127DE  0EF0               	movlw	-16
 11687  0127E0  0060  F0A3  FFE3   	movff	btemp,plusw1
 11688  0127E6  0EF1               	movlw	-15
 11689  0127E8  0060  F0A3  FFE3   	movff	btemp,plusw1
 11690  0127EE  0EF2               	movlw	-14
 11691  0127F0  0060  F0A3  FFE3   	movff	btemp,plusw1
 11692  0127F6  0EF3               	movlw	-13
 11693  0127F8  0060  F0A3  FFE3   	movff	btemp,plusw1
 11694  0127FE  0EF4               	movlw	-12
 11695  012800  0060  F0A3  FFE3   	movff	btemp,plusw1
 11696  012806  0EF5               	movlw	-11
 11697  012808  0060  F0A3  FFE3   	movff	btemp,plusw1
 11698  01280E                     l12122:
 11699                           
 11700                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11701                           ;stkvar	_ll @ sp[(-32)+14]
 11702  01280E  50E1               	movf	fsr1l,w,c
 11703  012810  0FEE               	addlw	-18
 11704  012812  6ED9               	movwf	fsr2l,c
 11705  012814  50E2               	movf	fsr1h,w,c
 11706  012816  6EDA               	movwf	fsr2h,c
 11707  012818  0EFF               	movlw	255
 11708  01281A  22DA               	addwfc	fsr2h,f,c
 11709  01281C  006F FF7B FFE6     	movff	postinc2,postinc1
 11710  012822  006F FF7B FFE6     	movff	postinc2,postinc1
 11711  012828  006F FF7B FFE6     	movff	postinc2,postinc1
 11712  01282E  006F FF7B FFE6     	movff	postinc2,postinc1
 11713  012834  006F FF7B FFE6     	movff	postinc2,postinc1
 11714  01283A  006F FF7B FFE6     	movff	postinc2,postinc1
 11715  012840  006F FF7B FFE6     	movff	postinc2,postinc1
 11716  012846  006F FF7B FFE6     	movff	postinc2,postinc1
 11717                           
 11718                           ;stkvar	_fp @ sp[(-40)+-2]
 11719  01284C  0ED6               	movlw	-42
 11720  01284E  006F FF8F FFE6     	movff	plusw1,postinc1
 11721  012854  006F FF8F FFE6     	movff	plusw1,postinc1
 11722  01285A  ECAE  F0A9         	call	_dtoa	;wreg free
 11723  01285E  EF0A  F099         	goto	l2330
 11724  012862                     l12126:
 11725                           
 11726                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11727  012862  0E02               	movlw	2
 11728  012864  6EE6               	movwf	postinc1,c
 11729  012866  0E00               	movlw	0
 11730  012868  6EE6               	movwf	postinc1,c
 11731  01286A  0EE9               	movlw	low STR_74
 11732  01286C  6EE6               	movwf	postinc1,c
 11733  01286E  0EFF               	movlw	high STR_74
 11734  012870  6EE6               	movwf	postinc1,c
 11735                           
 11736                           ;stkvar	_fmt @ sp[(-36)+-4]
 11737  012872  0ED8               	movlw	-40
 11738  012874  006F FF8F FFD9     	movff	plusw1,fsr2l
 11739  01287A  0ED9               	movlw	-39
 11740  01287C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11741  012882  006F FF78  F032    	movff	postinc2,btemp+10
 11742  012888  006F FF74  F033    	movff	postdec2,btemp+11
 11743  01288E  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11744  012894  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11745  01289A  ECC1  F0BA         	call	_strncmp	;wreg free
 11746  01289E  5028               	movf	btemp^0,w,c
 11747  0128A0  1029               	iorwf	(btemp+1)^0,w,c
 11748  0128A2  B4D8               	btfsc	status,2,c
 11749  0128A4  D022               	goto	u11700
 11750  0128A6  0E02               	movlw	2
 11751  0128A8  6EE6               	movwf	postinc1,c
 11752  0128AA  0E00               	movlw	0
 11753  0128AC  6EE6               	movwf	postinc1,c
 11754  0128AE  0EEF               	movlw	low STR_78
 11755  0128B0  6EE6               	movwf	postinc1,c
 11756  0128B2  0EFF               	movlw	high STR_78
 11757  0128B4  6EE6               	movwf	postinc1,c
 11758                           
 11759                           ;stkvar	_fmt @ sp[(-36)+-4]
 11760  0128B6  0ED8               	movlw	-40
 11761  0128B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11762  0128BE  0ED9               	movlw	-39
 11763  0128C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11764  0128C6  006F FF78  F032    	movff	postinc2,btemp+10
 11765  0128CC  006F FF74  F033    	movff	postdec2,btemp+11
 11766  0128D2  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11767  0128D8  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11768  0128DE  ECC1  F0BA         	call	_strncmp	;wreg free
 11769  0128E2  5028               	movf	btemp^0,w,c
 11770  0128E4  1029               	iorwf	(btemp+1)^0,w,c
 11771  0128E6  A4D8               	btfss	status,2,c
 11772  0128E8  D069               	goto	l12138
 11773  0128EA                     u11700:
 11774                           
 11775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11776                           ;stkvar	_fmt @ sp[(-32)+-4]
 11777  0128EA  0EDC               	movlw	-36
 11778  0128EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11779  0128F2  0EDD               	movlw	-35
 11780  0128F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11781  0128FA  0E02               	movlw	2
 11782  0128FC  26DE               	addwf	postinc2,f,c
 11783  0128FE  0E00               	movlw	0
 11784  012900  22DD               	addwfc	postdec2,f,c
 11785                           
 11786                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11787                           ;stkvar	_ap @ sp[(-32)+-6]
 11788  012902  0EDA               	movlw	-38
 11789  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 11790  01290A  0EDB               	movlw	-37
 11791  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11792  012912  0E04               	movlw	4
 11793  012914  5EDE               	subwf	postinc2,f,c
 11794  012916  0E00               	movlw	0
 11795  012918  5ADD               	subwfb	postdec2,f,c
 11796  01291A  006F FF78  F032    	movff	postinc2,btemp+10
 11797  012920  006F FF74  F033    	movff	postdec2,btemp+11
 11798  012926  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11799  01292C  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11800  012932  006F FF78  F030    	movff	postinc2,btemp+8
 11801  012938  006F FF78  F031    	movff	postinc2,btemp+9
 11802  01293E  006F FF78  F032    	movff	postinc2,btemp+10
 11803  012944  006F FF78  F033    	movff	postinc2,btemp+11
 11804  01294A  0060  F0C0  F038   	movff	btemp+8,btemp+16
 11805  012950  0060  F0C4  F039   	movff	btemp+9,btemp+17
 11806  012956  0060  F0C8  F03A   	movff	btemp+10,btemp+18
 11807  01295C  0060  F0CC  F03B   	movff	btemp+11,btemp+19
 11808  012962  6A3C               	clrf	(btemp+20)^0,c
 11809  012964  BE3B               	btfsc	(btemp+19)^0,7,c
 11810  012966  683C               	setf	(btemp+20)^0,c
 11811  012968  0060  F0F0  F03D   	movff	btemp+20,btemp+21
 11812  01296E  0060  F0F0  F03E   	movff	btemp+20,btemp+22
 11813  012974  0060  F0F0  F03F   	movff	btemp+20,btemp+23
 11814                           
 11815                           ;stkvar	_ll @ sp[(-32)+14]
 11816  01297A  0EEE               	movlw	-18
 11817  01297C  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 11818  012982  0EEF               	movlw	-17
 11819  012984  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 11820  01298A  0EF0               	movlw	-16
 11821  01298C  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 11822  012992  0EF1               	movlw	-15
 11823  012994  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 11824  01299A  0EF2               	movlw	-14
 11825  01299C  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 11826  0129A2  0EF3               	movlw	-13
 11827  0129A4  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 11828  0129AA  0EF4               	movlw	-12
 11829  0129AC  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 11830  0129B2  0EF5               	movlw	-11
 11831  0129B4  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 11832  0129BA  D729               	goto	l12122
 11833  0129BC                     l12138:
 11834                           
 11835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11836                           ;stkvar	_ct @ sp[(-32)+26]
 11837  0129BC  0EFA               	movlw	-6
 11838  0129BE  006F FF8C  F028    	movff	plusw1,btemp
 11839  0129C4  0E66               	movlw	102
 11840  0129C6  1828               	xorwf	btemp^0,w,c
 11841  0129C8  A4D8               	btfss	status,2,c
 11842  0129CA  D06E               	goto	l12150
 11843                           
 11844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11845                           ;stkvar	_fmt @ sp[(-32)+-4]
 11846  0129CC  0EDC               	movlw	-36
 11847  0129CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11848  0129D4  0EDD               	movlw	-35
 11849  0129D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11850  0129DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11851  0129E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11852  0129E8                     	if	0	;tblptru may be non-zero
 11853  0129E8                     	endif
 11854  0129E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11855  0129E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11856  0129EA  6EF8               	movwf	tblptru,c
 11857  0129EC                     	endif
 11858                           
 11859                           ;stkvar	_c @ sp[(-32)+31]
 11860  0129EC  0008               	tblrd		*
 11861  0129EE  0EFF               	movlw	-1
 11862  0129F0  006F FFD7 FFE3     	movff	tablat,plusw1
 11863                           
 11864                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11865                           ;stkvar	_fmt @ sp[(-32)+-4]
 11866  0129F6  0EDC               	movlw	-36
 11867  0129F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11868  0129FE  0EDD               	movlw	-35
 11869  012A00  006F FF8F FFDA     	movff	plusw1,fsr2h
 11870  012A06  2ADE               	incf	postinc2,f,c
 11871  012A08  0E00               	movlw	0
 11872  012A0A  22DD               	addwfc	postdec2,f,c
 11873                           
 11874                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11875                           ;stkvar	_ap @ sp[(-32)+-6]
 11876  012A0C  0EDA               	movlw	-38
 11877  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11878  012A14  0EDB               	movlw	-37
 11879  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 11880  012A1C  0E04               	movlw	4
 11881  012A1E  5EDE               	subwf	postinc2,f,c
 11882  012A20  0E00               	movlw	0
 11883  012A22  5ADD               	subwfb	postdec2,f,c
 11884  012A24  006F FF78  F032    	movff	postinc2,btemp+10
 11885  012A2A  006F FF74  F033    	movff	postdec2,btemp+11
 11886  012A30  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11887  012A36  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11888  012A3C  006F FF78  F030    	movff	postinc2,btemp+8
 11889  012A42  006F FF78  F031    	movff	postinc2,btemp+9
 11890  012A48  006F FF78  F032    	movff	postinc2,btemp+10
 11891  012A4E  006F FF78  F033    	movff	postinc2,btemp+11
 11892                           
 11893                           ;stkvar	_f @ sp[(-32)+22]
 11894  012A54  0EF6               	movlw	-10
 11895  012A56  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 11896  012A5C  0EF7               	movlw	-9
 11897  012A5E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 11898  012A64  0EF8               	movlw	-8
 11899  012A66  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11900  012A6C  0EF9               	movlw	-7
 11901  012A6E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11902  012A74                     l12146:
 11903                           
 11904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11905                           ;stkvar	_c @ sp[(-32)+31]
 11906  012A74  0EFF               	movlw	-1
 11907  012A76  50E3               	movf	plusw1,w,c
 11908  012A78  6EE6               	movwf	postinc1,c
 11909                           
 11910                           ;stkvar	_f @ sp[(-33)+22]
 11911  012A7A  0EF5               	movlw	-11
 11912  012A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11913  012A82  006F FF8F FFE6     	movff	plusw1,postinc1
 11914  012A88  006F FF8F FFE6     	movff	plusw1,postinc1
 11915  012A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 11916                           
 11917                           ;stkvar	_fp @ sp[(-37)+-2]
 11918  012A94  0ED9               	movlw	-39
 11919  012A96  006F FF8F FFE6     	movff	plusw1,postinc1
 11920  012A9C  006F FF8F FFE6     	movff	plusw1,postinc1
 11921  012AA2  EC00  F080         	call	_efgtoa	;wreg free
 11922  012AA6  D3B6               	goto	l2330
 11923  012AA8                     l12150:
 11924                           
 11925                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11926  012AA8  0E02               	movlw	2
 11927  012AAA  6EE6               	movwf	postinc1,c
 11928  012AAC  0E00               	movlw	0
 11929  012AAE  6EE6               	movwf	postinc1,c
 11930  012AB0  0EEC               	movlw	low STR_83
 11931  012AB2  6EE6               	movwf	postinc1,c
 11932  012AB4  0EFF               	movlw	high STR_83
 11933  012AB6  6EE6               	movwf	postinc1,c
 11934                           
 11935                           ;stkvar	_ct @ sp[(-36)+26]
 11936  012AB8  0EF6               	movlw	246
 11937  012ABA  24E1               	addwf	fsr1l,w,c
 11938  012ABC  6E28               	movwf	btemp^0,c
 11939  012ABE  0EFF               	movlw	255
 11940  012AC0  20E2               	addwfc	fsr1h,w,c
 11941  012AC2  6E29               	movwf	(btemp+1)^0,c
 11942  012AC4  0060  F0A3  FFE6   	movff	btemp,postinc1
 11943  012ACA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 11944  012AD0  ECC1  F0BA         	call	_strncmp	;wreg free
 11945  012AD4  5028               	movf	btemp^0,w,c
 11946  012AD6  1029               	iorwf	(btemp+1)^0,w,c
 11947  012AD8  A4D8               	btfss	status,2,c
 11948  012ADA  D096               	goto	l12170
 11949                           
 11950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11951                           ;stkvar	_fmt @ sp[(-32)+-4]
 11952  012ADC  0EDC               	movlw	-36
 11953  012ADE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11954  012AE4  0EDD               	movlw	-35
 11955  012AE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11956  012AEC  006F FF78  F032    	movff	postinc2,btemp+10
 11957  012AF2  006F FF74  F033    	movff	postdec2,btemp+11
 11958  012AF8  0E01               	movlw	1
 11959  012AFA  2632               	addwf	(btemp+10)^0,f,c
 11960  012AFC  0E00               	movlw	0
 11961  012AFE  2233               	addwfc	(btemp+11)^0,f,c
 11962  012B00  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11963  012B06  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11964  012B0C                     	if	0	;tblptru may be non-zero
 11965  012B0C                     	endif
 11966  012B0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11967  012B0C  0E00               	movlw	low (__mediumconst shr (0+16))
 11968  012B0E  6EF8               	movwf	tblptru,c
 11969  012B10                     	endif
 11970                           
 11971                           ;stkvar	_c @ sp[(-32)+31]
 11972  012B10  0008               	tblrd		*
 11973  012B12  0EFF               	movlw	-1
 11974  012B14  006F FFD7 FFE3     	movff	tablat,plusw1
 11975  012B1A  0EBF               	movlw	191
 11976  012B1C  6E32               	movwf	(btemp+10)^0,c
 11977  012B1E  0EFF               	movlw	255
 11978  012B20  6E33               	movwf	(btemp+11)^0,c
 11979                           
 11980                           ;stkvar	_fmt @ sp[(-32)+-4]
 11981  012B22  0EDC               	movlw	-36
 11982  012B24  006F FF8F FFD9     	movff	plusw1,fsr2l
 11983  012B2A  0EDD               	movlw	-35
 11984  012B2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11985  012B32  006F FF7B FFF6     	movff	postinc2,tblptrl
 11986  012B38  006F FF77 FFF7     	movff	postdec2,tblptrh
 11987  012B3E                     	if	0	;tblptru may be non-zero
 11988  012B3E                     	endif
 11989  012B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11990  012B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 11991  012B40  6EF8               	movwf	tblptru,c
 11992  012B42                     	endif
 11993  012B42  0008               	tblrd		*
 11994  012B44  50F5               	movf	tablat,w,c
 11995  012B46  6E30               	movwf	(btemp+8)^0,c
 11996  012B48  6A31               	clrf	(btemp+9)^0,c
 11997  012B4A  5032               	movf	(btemp+10)^0,w,c
 11998  012B4C  2630               	addwf	(btemp+8)^0,f,c
 11999  012B4E  5033               	movf	(btemp+11)^0,w,c
 12000  012B50  2231               	addwfc	(btemp+9)^0,f,c
 12001  012B52  5031               	movf	(btemp+9)^0,w,c
 12002  012B54  E106               	bnz	u11730
 12003  012B56  0E1A               	movlw	26
 12004  012B58  5C30               	subwf	(btemp+8)^0,w,c
 12005  012B5A  B0D8               	btfsc	status,0,c
 12006  012B5C  D002               	goto	u11730
 12007  012B5E  0E01               	movlw	1
 12008  012B60  D001               	goto	u11740
 12009  012B62                     u11730:
 12010  012B62  0E00               	movlw	0
 12011  012B64                     u11740:
 12012  012B64  6E32               	movwf	(btemp+10)^0,c
 12013  012B66  6A33               	clrf	(btemp+11)^0,c
 12014                           
 12015                           ;stkvar	_vfpfcnvrt$5453 @ sp[(-32)+2]
 12016  012B68  0EE2               	movlw	-30
 12017  012B6A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12018  012B70  0EE3               	movlw	-29
 12019  012B72  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12020                           
 12021                           ;stkvar	_vfpfcnvrt$5453 @ sp[(-32)+2]
 12022  012B78  0EE2               	movlw	-30
 12023  012B7A  006F FF8C  F028    	movff	plusw1,btemp
 12024  012B80  0EE3               	movlw	-29
 12025  012B82  50E3               	movf	plusw1,w,c
 12026  012B84  1028               	iorwf	btemp^0,w,c
 12027                           
 12028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12029                           ;stkvar	_ap @ sp[(-32)+-6]
 12030                           
 12031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12032                           
 12033                           ;stkvar	_f @ sp[(-32)+22]
 12034                           
 12035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12036                           ;stkvar	_ap @ sp[(-32)+-6]
 12037  012B86  0EDA               	movlw	-38
 12038  012B88  006F FF8F FFD9     	movff	plusw1,fsr2l
 12039  012B8E  0EDB               	movlw	-37
 12040  012B90  006F FF8F FFDA     	movff	plusw1,fsr2h
 12041  012B96  0E04               	movlw	4
 12042  012B98  5EDE               	subwf	postinc2,f,c
 12043  012B9A  0E00               	movlw	0
 12044  012B9C  5ADD               	subwfb	postdec2,f,c
 12045  012B9E  006F FF78  F032    	movff	postinc2,btemp+10
 12046  012BA4  006F FF74  F033    	movff	postdec2,btemp+11
 12047  012BAA  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12048  012BB0  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12049  012BB6  006F FF78  F030    	movff	postinc2,btemp+8
 12050  012BBC  006F FF78  F031    	movff	postinc2,btemp+9
 12051  012BC2  006F FF78  F032    	movff	postinc2,btemp+10
 12052  012BC8  006F FF78  F033    	movff	postinc2,btemp+11
 12053                           
 12054                           ;stkvar	_f @ sp[(-32)+22]
 12055  012BCE  0EF6               	movlw	-10
 12056  012BD0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 12057  012BD6  0EF7               	movlw	-9
 12058  012BD8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 12059  012BDE  0EF8               	movlw	-8
 12060  012BE0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12061  012BE6  0EF9               	movlw	-7
 12062  012BE8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12063                           
 12064                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12065                           ;stkvar	_fmt @ sp[(-32)+-4]
 12066  012BEE  0EDC               	movlw	-36
 12067  012BF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12068  012BF6  0EDD               	movlw	-35
 12069  012BF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12070  012BFE  0E02               	movlw	2
 12071  012C00  26DE               	addwf	postinc2,f,c
 12072  012C02  0E00               	movlw	0
 12073  012C04  22DD               	addwfc	postdec2,f,c
 12074  012C06  D736               	goto	l12146
 12075  012C08                     l12170:
 12076                           
 12077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12078                           ;stkvar	_fmt @ sp[(-32)+-4]
 12079  012C08  0EDC               	movlw	-36
 12080  012C0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12081  012C10  0EDD               	movlw	-35
 12082  012C12  006F FF8F FFDA     	movff	plusw1,fsr2h
 12083  012C18  006F FF7B FFF6     	movff	postinc2,tblptrl
 12084  012C1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12085  012C24                     	if	0	;tblptru may be non-zero
 12086  012C24                     	endif
 12087  012C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12088  012C24  0E00               	movlw	low (__mediumconst shr (0+16))
 12089  012C26  6EF8               	movwf	tblptru,c
 12090  012C28                     	endif
 12091  012C28  0008               	tblrd		*
 12092  012C2A  50F5               	movf	tablat,w,c
 12093  012C2C  0A73               	xorlw	115
 12094  012C2E  A4D8               	btfss	status,2,c
 12095  012C30  D042               	goto	l12180
 12096                           
 12097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12098                           ;stkvar	_fmt @ sp[(-32)+-4]
 12099  012C32  0EDC               	movlw	-36
 12100  012C34  006F FF8F FFD9     	movff	plusw1,fsr2l
 12101  012C3A  0EDD               	movlw	-35
 12102  012C3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12103  012C42  2ADE               	incf	postinc2,f,c
 12104  012C44  0E00               	movlw	0
 12105  012C46  22DD               	addwfc	postdec2,f,c
 12106                           
 12107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12108                           ;stkvar	_ap @ sp[(-32)+-6]
 12109  012C48  0EDA               	movlw	-38
 12110  012C4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12111  012C50  0EDB               	movlw	-37
 12112  012C52  006F FF8F FFDA     	movff	plusw1,fsr2h
 12113  012C58  0E02               	movlw	2
 12114  012C5A  5EDE               	subwf	postinc2,f,c
 12115  012C5C  0E00               	movlw	0
 12116  012C5E  5ADD               	subwfb	postdec2,f,c
 12117  012C60  006F FF78  F032    	movff	postinc2,btemp+10
 12118  012C66  006F FF74  F033    	movff	postdec2,btemp+11
 12119  012C6C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12120  012C72  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12121  012C78  006F FF78  F032    	movff	postinc2,btemp+10
 12122  012C7E  006F FF74  F033    	movff	postdec2,btemp+11
 12123                           
 12124                           ;stkvar	_cp @ sp[(-32)+29]
 12125  012C84  0EFE               	movlw	-2
 12126  012C86  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12127  012C8C  0EFD               	movlw	-3
 12128  012C8E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12129                           
 12130                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12131                           ;stkvar	_cp @ sp[(-32)+29]
 12132  012C94  0EFD               	movlw	-3
 12133  012C96  006F FF8F FFE6     	movff	plusw1,postinc1
 12134  012C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 12135                           
 12136                           ;stkvar	_fp @ sp[(-34)+-2]
 12137  012CA2  0EDC               	movlw	-36
 12138  012CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12139  012CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12140  012CB0  ECC8  F0B5         	call	_stoa	;wreg free
 12141  012CB4  D2AF               	goto	l2330
 12142  012CB6                     l12180:
 12143                           
 12144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12145                           ;stkvar	_fmt @ sp[(-32)+-4]
 12146  012CB6  0EDC               	movlw	-36
 12147  012CB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12148  012CBE  0EDD               	movlw	-35
 12149  012CC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12150  012CC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12151  012CCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12152  012CD2                     	if	0	;tblptru may be non-zero
 12153  012CD2                     	endif
 12154  012CD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12155  012CD2  0E00               	movlw	low (__mediumconst shr (0+16))
 12156  012CD4  6EF8               	movwf	tblptru,c
 12157  012CD6                     	endif
 12158  012CD6  0008               	tblrd		*
 12159  012CD8  50F5               	movf	tablat,w,c
 12160  012CDA  0A75               	xorlw	117
 12161  012CDC  A4D8               	btfss	status,2,c
 12162  012CDE  D07C               	goto	l12190
 12163                           
 12164                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12165                           ;stkvar	_fmt @ sp[(-32)+-4]
 12166  012CE0  0EDC               	movlw	-36
 12167  012CE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12168  012CE8  0EDD               	movlw	-35
 12169  012CEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12170  012CF0  2ADE               	incf	postinc2,f,c
 12171  012CF2  0E00               	movlw	0
 12172  012CF4  22DD               	addwfc	postdec2,f,c
 12173                           
 12174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12175                           ;stkvar	_ap @ sp[(-32)+-6]
 12176  012CF6  0EDA               	movlw	-38
 12177  012CF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12178  012CFE  0EDB               	movlw	-37
 12179  012D00  006F FF8F FFDA     	movff	plusw1,fsr2h
 12180  012D06  0E02               	movlw	2
 12181  012D08  5EDE               	subwf	postinc2,f,c
 12182  012D0A  0E00               	movlw	0
 12183  012D0C  5ADD               	subwfb	postdec2,f,c
 12184  012D0E  006F FF78  F032    	movff	postinc2,btemp+10
 12185  012D14  006F FF74  F033    	movff	postdec2,btemp+11
 12186  012D1A  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12187  012D20  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12188  012D26  006F FF78  F032    	movff	postinc2,btemp+10
 12189  012D2C  006F FF74  F033    	movff	postdec2,btemp+11
 12190  012D32  5032               	movf	(btemp+10)^0,w,c
 12191  012D34  6E38               	movwf	(btemp+16)^0,c
 12192  012D36  5033               	movf	(btemp+11)^0,w,c
 12193  012D38  6E39               	movwf	(btemp+17)^0,c
 12194  012D3A  6A3A               	clrf	(btemp+18)^0,c
 12195  012D3C  6A3B               	clrf	(btemp+19)^0,c
 12196  012D3E  6A3C               	clrf	(btemp+20)^0,c
 12197  012D40  6A3D               	clrf	(btemp+21)^0,c
 12198  012D42  6A3E               	clrf	(btemp+22)^0,c
 12199  012D44  6A3F               	clrf	(btemp+23)^0,c
 12200                           
 12201                           ;stkvar	_llu @ sp[(-32)+6]
 12202  012D46  0EE6               	movlw	-26
 12203  012D48  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 12204  012D4E  0EE7               	movlw	-25
 12205  012D50  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 12206  012D56  0EE8               	movlw	-24
 12207  012D58  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 12208  012D5E  0EE9               	movlw	-23
 12209  012D60  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 12210  012D66  0EEA               	movlw	-22
 12211  012D68  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 12212  012D6E  0EEB               	movlw	-21
 12213  012D70  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 12214  012D76  0EEC               	movlw	-20
 12215  012D78  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 12216  012D7E  0EED               	movlw	-19
 12217  012D80  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 12218                           
 12219                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12220                           ;stkvar	_llu @ sp[(-32)+6]
 12221  012D86  50E1               	movf	fsr1l,w,c
 12222  012D88  0FE6               	addlw	-26
 12223  012D8A  6ED9               	movwf	fsr2l,c
 12224  012D8C  50E2               	movf	fsr1h,w,c
 12225  012D8E  6EDA               	movwf	fsr2h,c
 12226  012D90  0EFF               	movlw	255
 12227  012D92  22DA               	addwfc	fsr2h,f,c
 12228  012D94  006F FF7B FFE6     	movff	postinc2,postinc1
 12229  012D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12230  012DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12231  012DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12232  012DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12233  012DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 12234  012DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 12235  012DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 12236                           
 12237                           ;stkvar	_fp @ sp[(-40)+-2]
 12238  012DC4  0ED6               	movlw	-42
 12239  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12240  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12241  012DD2  EC52  F0B1         	call	_utoa	;wreg free
 12242  012DD6  D21E               	goto	l2330
 12243  012DD8                     l12190:
 12244                           
 12245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12246  012DD8  0E02               	movlw	2
 12247  012DDA  6EE6               	movwf	postinc1,c
 12248  012DDC  0E00               	movlw	0
 12249  012DDE  6EE6               	movwf	postinc1,c
 12250  012DE0  0EF2               	movlw	low STR_88
 12251  012DE2  6EE6               	movwf	postinc1,c
 12252  012DE4  0EFF               	movlw	high STR_88
 12253  012DE6  6EE6               	movwf	postinc1,c
 12254                           
 12255                           ;stkvar	_fmt @ sp[(-36)+-4]
 12256  012DE8  0ED8               	movlw	-40
 12257  012DEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12258  012DF0  0ED9               	movlw	-39
 12259  012DF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12260  012DF8  006F FF78  F032    	movff	postinc2,btemp+10
 12261  012DFE  006F FF74  F033    	movff	postdec2,btemp+11
 12262  012E04  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12263  012E0A  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12264  012E10  ECC1  F0BA         	call	_strncmp	;wreg free
 12265  012E14  5028               	movf	btemp^0,w,c
 12266  012E16  1029               	iorwf	(btemp+1)^0,w,c
 12267  012E18  A4D8               	btfss	status,2,c
 12268  012E1A  D039               	goto	l12200
 12269                           
 12270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12271                           ;stkvar	_fmt @ sp[(-32)+-4]
 12272  012E1C  0EDC               	movlw	-36
 12273  012E1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12274  012E24  0EDD               	movlw	-35
 12275  012E26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12276  012E2C  0E02               	movlw	2
 12277  012E2E  26DE               	addwf	postinc2,f,c
 12278  012E30  0E00               	movlw	0
 12279  012E32  22DD               	addwfc	postdec2,f,c
 12280                           
 12281                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12282                           ;stkvar	_ap @ sp[(-32)+-6]
 12283  012E34  0EDA               	movlw	-38
 12284  012E36  006F FF8F FFD9     	movff	plusw1,fsr2l
 12285  012E3C  0EDB               	movlw	-37
 12286  012E3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12287  012E44  0E04               	movlw	4
 12288  012E46  5EDE               	subwf	postinc2,f,c
 12289  012E48  0E00               	movlw	0
 12290  012E4A  5ADD               	subwfb	postdec2,f,c
 12291  012E4C  006F FF78  F032    	movff	postinc2,btemp+10
 12292  012E52  006F FF74  F033    	movff	postdec2,btemp+11
 12293  012E58  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12294  012E5E  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12295  012E64  006F FF78  F030    	movff	postinc2,btemp+8
 12296  012E6A  006F FF78  F031    	movff	postinc2,btemp+9
 12297  012E70  006F FF78  F032    	movff	postinc2,btemp+10
 12298  012E76  006F FF78  F033    	movff	postinc2,btemp+11
 12299  012E7C  5030               	movf	(btemp+8)^0,w,c
 12300  012E7E  6E38               	movwf	(btemp+16)^0,c
 12301  012E80  5031               	movf	(btemp+9)^0,w,c
 12302  012E82  6E39               	movwf	(btemp+17)^0,c
 12303  012E84  5032               	movf	(btemp+10)^0,w,c
 12304  012E86  6E3A               	movwf	(btemp+18)^0,c
 12305  012E88  5033               	movf	(btemp+11)^0,w,c
 12306  012E8A  6E3B               	movwf	(btemp+19)^0,c
 12307  012E8C  D758               	goto	L8
 12308  012E8E                     l12200:
 12309                           
 12310                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12311                           ;stkvar	_fmt @ sp[(-32)+-4]
 12312  012E8E  0EDC               	movlw	-36
 12313  012E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 12314  012E96  0EDD               	movlw	-35
 12315  012E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 12316  012E9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12317  012EA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12318  012EAA                     	if	0	;tblptru may be non-zero
 12319  012EAA                     	endif
 12320  012EAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12321  012EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 12322  012EAC  6EF8               	movwf	tblptru,c
 12323  012EAE                     	endif
 12324  012EAE  0008               	tblrd		*
 12325  012EB0  50F5               	movf	tablat,w,c
 12326  012EB2  0A78               	xorlw	120
 12327  012EB4  B4D8               	btfsc	status,2,c
 12328  012EB6  D015               	goto	u11800
 12329                           
 12330                           ;stkvar	_fmt @ sp[(-32)+-4]
 12331  012EB8  0EDC               	movlw	-36
 12332  012EBA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12333  012EC0  0EDD               	movlw	-35
 12334  012EC2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12335  012EC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12336  012ECE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12337  012ED4                     	if	0	;tblptru may be non-zero
 12338  012ED4                     	endif
 12339  012ED4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12340  012ED4  0E00               	movlw	low (__mediumconst shr (0+16))
 12341  012ED6  6EF8               	movwf	tblptru,c
 12342  012ED8                     	endif
 12343  012ED8  0008               	tblrd		*
 12344  012EDA  50F5               	movf	tablat,w,c
 12345  012EDC  0A58               	xorlw	88
 12346  012EDE  A4D8               	btfss	status,2,c
 12347  012EE0  D094               	goto	l12214
 12348  012EE2                     u11800:
 12349                           
 12350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12351                           ;stkvar	_fmt @ sp[(-32)+-4]
 12352  012EE2  0EDC               	movlw	-36
 12353  012EE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12354  012EEA  0EDD               	movlw	-35
 12355  012EEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12356  012EF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12357  012EF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12358  012EFE                     	if	0	;tblptru may be non-zero
 12359  012EFE                     	endif
 12360  012EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12361  012EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12362  012F00  6EF8               	movwf	tblptru,c
 12363  012F02                     	endif
 12364                           
 12365                           ;stkvar	_c @ sp[(-32)+31]
 12366  012F02  0008               	tblrd		*
 12367  012F04  0EFF               	movlw	-1
 12368  012F06  006F FFD7 FFE3     	movff	tablat,plusw1
 12369                           
 12370                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12371                           ;stkvar	_fmt @ sp[(-32)+-4]
 12372  012F0C  0EDC               	movlw	-36
 12373  012F0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12374  012F14  0EDD               	movlw	-35
 12375  012F16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12376  012F1C  2ADE               	incf	postinc2,f,c
 12377  012F1E  0E00               	movlw	0
 12378  012F20  22DD               	addwfc	postdec2,f,c
 12379                           
 12380                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12381                           ;stkvar	_ap @ sp[(-32)+-6]
 12382  012F22  0EDA               	movlw	-38
 12383  012F24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12384  012F2A  0EDB               	movlw	-37
 12385  012F2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12386  012F32  0E02               	movlw	2
 12387  012F34  5EDE               	subwf	postinc2,f,c
 12388  012F36  0E00               	movlw	0
 12389  012F38  5ADD               	subwfb	postdec2,f,c
 12390  012F3A  006F FF78  F032    	movff	postinc2,btemp+10
 12391  012F40  006F FF74  F033    	movff	postdec2,btemp+11
 12392  012F46  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12393  012F4C  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12394  012F52  006F FF78  F032    	movff	postinc2,btemp+10
 12395  012F58  006F FF74  F033    	movff	postdec2,btemp+11
 12396  012F5E  5032               	movf	(btemp+10)^0,w,c
 12397  012F60  6E38               	movwf	(btemp+16)^0,c
 12398  012F62  5033               	movf	(btemp+11)^0,w,c
 12399  012F64  6E39               	movwf	(btemp+17)^0,c
 12400  012F66  6A3A               	clrf	(btemp+18)^0,c
 12401  012F68  6A3B               	clrf	(btemp+19)^0,c
 12402  012F6A  6A3C               	clrf	(btemp+20)^0,c
 12403  012F6C  6A3D               	clrf	(btemp+21)^0,c
 12404  012F6E  6A3E               	clrf	(btemp+22)^0,c
 12405  012F70  6A3F               	clrf	(btemp+23)^0,c
 12406                           
 12407                           ;stkvar	_llu @ sp[(-32)+6]
 12408  012F72  0EE6               	movlw	-26
 12409  012F74  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 12410  012F7A  0EE7               	movlw	-25
 12411  012F7C  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 12412  012F82  0EE8               	movlw	-24
 12413  012F84  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 12414  012F8A  0EE9               	movlw	-23
 12415  012F8C  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 12416  012F92  0EEA               	movlw	-22
 12417  012F94  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 12418  012F9A  0EEB               	movlw	-21
 12419  012F9C  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 12420  012FA2  0EEC               	movlw	-20
 12421  012FA4  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 12422  012FAA  0EED               	movlw	-19
 12423  012FAC  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 12424                           
 12425                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12426                           ;stkvar	_c @ sp[(-32)+31]
 12427  012FB2  0EFF               	movlw	-1
 12428  012FB4  50E3               	movf	plusw1,w,c
 12429  012FB6  6EE6               	movwf	postinc1,c
 12430                           
 12431                           ;stkvar	_llu @ sp[(-33)+6]
 12432  012FB8  50E1               	movf	fsr1l,w,c
 12433  012FBA  0FE5               	addlw	-27
 12434  012FBC  6ED9               	movwf	fsr2l,c
 12435  012FBE  50E2               	movf	fsr1h,w,c
 12436  012FC0  6EDA               	movwf	fsr2h,c
 12437  012FC2  0EFF               	movlw	255
 12438  012FC4  22DA               	addwfc	fsr2h,f,c
 12439  012FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 12440  012FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 12441  012FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 12442  012FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 12443  012FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 12444  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 12445  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 12446  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 12447                           
 12448                           ;stkvar	_fp @ sp[(-41)+-2]
 12449  012FF6  0ED5               	movlw	-43
 12450  012FF8  006F FF8F FFE6     	movff	plusw1,postinc1
 12451  012FFE  006F FF8F FFE6     	movff	plusw1,postinc1
 12452  013004  ECEE  F0AB         	call	_xtoa	;wreg free
 12453  013008  D105               	goto	l2330
 12454  01300A                     l12214:
 12455                           
 12456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12457  01300A  0E02               	movlw	2
 12458  01300C  6EE6               	movwf	postinc1,c
 12459  01300E  0E00               	movlw	0
 12460  013010  6EE6               	movwf	postinc1,c
 12461  013012  0EF5               	movlw	low STR_93
 12462  013014  6EE6               	movwf	postinc1,c
 12463  013016  0EFF               	movlw	high STR_93
 12464  013018  6EE6               	movwf	postinc1,c
 12465                           
 12466                           ;stkvar	_fmt @ sp[(-36)+-4]
 12467  01301A  0ED8               	movlw	-40
 12468  01301C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12469  013022  0ED9               	movlw	-39
 12470  013024  006F FF8F FFDA     	movff	plusw1,fsr2h
 12471  01302A  006F FF78  F032    	movff	postinc2,btemp+10
 12472  013030  006F FF74  F033    	movff	postdec2,btemp+11
 12473  013036  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12474  01303C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12475  013042  ECC1  F0BA         	call	_strncmp	;wreg free
 12476  013046  5028               	movf	btemp^0,w,c
 12477  013048  1029               	iorwf	(btemp+1)^0,w,c
 12478  01304A  B4D8               	btfsc	status,2,c
 12479  01304C  D022               	goto	u11820
 12480  01304E  0E02               	movlw	2
 12481  013050  6EE6               	movwf	postinc1,c
 12482  013052  0E00               	movlw	0
 12483  013054  6EE6               	movwf	postinc1,c
 12484  013056  0EE6               	movlw	low STR_97
 12485  013058  6EE6               	movwf	postinc1,c
 12486  01305A  0EFF               	movlw	high STR_97
 12487  01305C  6EE6               	movwf	postinc1,c
 12488                           
 12489                           ;stkvar	_fmt @ sp[(-36)+-4]
 12490  01305E  0ED8               	movlw	-40
 12491  013060  006F FF8F FFD9     	movff	plusw1,fsr2l
 12492  013066  0ED9               	movlw	-39
 12493  013068  006F FF8F FFDA     	movff	plusw1,fsr2h
 12494  01306E  006F FF78  F032    	movff	postinc2,btemp+10
 12495  013074  006F FF74  F033    	movff	postdec2,btemp+11
 12496  01307A  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12497  013080  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12498  013086  ECC1  F0BA         	call	_strncmp	;wreg free
 12499  01308A  5028               	movf	btemp^0,w,c
 12500  01308C  1029               	iorwf	(btemp+1)^0,w,c
 12501  01308E  A4D8               	btfss	status,2,c
 12502  013090  D058               	goto	l12228
 12503  013092                     u11820:
 12504                           
 12505                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12506                           ;stkvar	_fmt @ sp[(-32)+-4]
 12507  013092  0EDC               	movlw	-36
 12508  013094  006F FF8F FFD9     	movff	plusw1,fsr2l
 12509  01309A  0EDD               	movlw	-35
 12510  01309C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12511  0130A2  006F FF78  F032    	movff	postinc2,btemp+10
 12512  0130A8  006F FF74  F033    	movff	postdec2,btemp+11
 12513  0130AE  0E01               	movlw	1
 12514  0130B0  2632               	addwf	(btemp+10)^0,f,c
 12515  0130B2  0E00               	movlw	0
 12516  0130B4  2233               	addwfc	(btemp+11)^0,f,c
 12517  0130B6  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 12518  0130BC  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 12519  0130C2                     	if	0	;tblptru may be non-zero
 12520  0130C2                     	endif
 12521  0130C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12522  0130C2  0E00               	movlw	low (__mediumconst shr (0+16))
 12523  0130C4  6EF8               	movwf	tblptru,c
 12524  0130C6                     	endif
 12525                           
 12526                           ;stkvar	_c @ sp[(-32)+31]
 12527  0130C6  0008               	tblrd		*
 12528  0130C8  0EFF               	movlw	-1
 12529  0130CA  006F FFD7 FFE3     	movff	tablat,plusw1
 12530                           
 12531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12532                           ;stkvar	_fmt @ sp[(-32)+-4]
 12533  0130D0  0EDC               	movlw	-36
 12534  0130D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12535  0130D8  0EDD               	movlw	-35
 12536  0130DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12537  0130E0  0E02               	movlw	2
 12538  0130E2  26DE               	addwf	postinc2,f,c
 12539  0130E4  0E00               	movlw	0
 12540  0130E6  22DD               	addwfc	postdec2,f,c
 12541                           
 12542                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12543                           ;stkvar	_ap @ sp[(-32)+-6]
 12544  0130E8  0EDA               	movlw	-38
 12545  0130EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12546  0130F0  0EDB               	movlw	-37
 12547  0130F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12548  0130F8  0E04               	movlw	4
 12549  0130FA  5EDE               	subwf	postinc2,f,c
 12550  0130FC  0E00               	movlw	0
 12551  0130FE  5ADD               	subwfb	postdec2,f,c
 12552  013100  006F FF78  F032    	movff	postinc2,btemp+10
 12553  013106  006F FF74  F033    	movff	postdec2,btemp+11
 12554  01310C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12555  013112  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12556  013118  006F FF78  F030    	movff	postinc2,btemp+8
 12557  01311E  006F FF78  F031    	movff	postinc2,btemp+9
 12558  013124  006F FF78  F032    	movff	postinc2,btemp+10
 12559  01312A  006F FF78  F033    	movff	postinc2,btemp+11
 12560  013130  5030               	movf	(btemp+8)^0,w,c
 12561  013132  6E38               	movwf	(btemp+16)^0,c
 12562  013134  5031               	movf	(btemp+9)^0,w,c
 12563  013136  6E39               	movwf	(btemp+17)^0,c
 12564  013138  5032               	movf	(btemp+10)^0,w,c
 12565  01313A  6E3A               	movwf	(btemp+18)^0,c
 12566  01313C  5033               	movf	(btemp+11)^0,w,c
 12567  01313E  6E3B               	movwf	(btemp+19)^0,c
 12568  013140  D714               	goto	L9
 12569  013142                     l12228:
 12570                           
 12571                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12572                           ;stkvar	_fmt @ sp[(-32)+-4]
 12573  013142  0EDC               	movlw	-36
 12574  013144  006F FF8F FFD9     	movff	plusw1,fsr2l
 12575  01314A  0EDD               	movlw	-35
 12576  01314C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12577  013152  006F FF7B FFF6     	movff	postinc2,tblptrl
 12578  013158  006F FF77 FFF7     	movff	postdec2,tblptrh
 12579  01315E                     	if	0	;tblptru may be non-zero
 12580  01315E                     	endif
 12581  01315E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12582  01315E  0E00               	movlw	low (__mediumconst shr (0+16))
 12583  013160  6EF8               	movwf	tblptru,c
 12584  013162                     	endif
 12585  013162  0008               	tblrd		*
 12586  013164  50F5               	movf	tablat,w,c
 12587  013166  0A25               	xorlw	37
 12588  013168  A4D8               	btfss	status,2,c
 12589  01316A  D01A               	goto	l12238
 12590                           
 12591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12592                           ;stkvar	_fmt @ sp[(-32)+-4]
 12593  01316C  0EDC               	movlw	-36
 12594  01316E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12595  013174  0EDD               	movlw	-35
 12596  013176  006F FF8F FFDA     	movff	plusw1,fsr2h
 12597  01317C  2ADE               	incf	postinc2,f,c
 12598  01317E  0E00               	movlw	0
 12599  013180  22DD               	addwfc	postdec2,f,c
 12600                           
 12601                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12602                           ;stkvar	_fp @ sp[(-32)+-2]
 12603  013182  0EDE               	movlw	-34
 12604  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 12605  01318A  006F FF8F FFE6     	movff	plusw1,postinc1
 12606  013190  0E25               	movlw	37
 12607  013192  6EE6               	movwf	postinc1,c
 12608  013194  0E00               	movlw	0
 12609  013196  6EE6               	movwf	postinc1,c
 12610  013198  EC51  F0C7         	call	_fputc	;wreg free
 12611  01319C                     l12234:
 12612                           
 12613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12614  01319C  0E01               	movlw	1
 12615  01319E  D00C               	goto	L10
 12616  0131A0                     l12238:
 12617                           
 12618                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12619                           ;stkvar	_fmt @ sp[(-32)+-4]
 12620  0131A0  0EDC               	movlw	-36
 12621  0131A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12622  0131A8  0EDD               	movlw	-35
 12623  0131AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12624  0131B0  2ADE               	incf	postinc2,f,c
 12625  0131B2  0E00               	movlw	0
 12626  0131B4  22DD               	addwfc	postdec2,f,c
 12627                           
 12628                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12629  0131B6  0E00               	movlw	0
 12630  0131B8                     L10:
 12631  0131B8  6E28               	movwf	btemp^0,c
 12632  0131BA  0E00               	movlw	0
 12633  0131BC  6E29               	movwf	(btemp+1)^0,c
 12634  0131BE  D02A               	goto	l2330
 12635  0131C0                     l12244:
 12636                           
 12637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12638                           ;stkvar	_fp @ sp[(-32)+-2]
 12639  0131C0  0EDE               	movlw	-34
 12640  0131C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12641  0131C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12642                           
 12643                           ;stkvar	_fmt @ sp[(-34)+-4]
 12644  0131CE  0EDA               	movlw	-38
 12645  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12646  0131D6  0EDB               	movlw	-37
 12647  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12648  0131DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12649  0131E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12650  0131EA                     	if	0	;tblptru may be non-zero
 12651  0131EA                     	endif
 12652  0131EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12653  0131EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12654  0131EC  6EF8               	movwf	tblptru,c
 12655  0131EE                     	endif
 12656  0131EE  0008               	tblrd		*
 12657  0131F0  50F5               	movf	tablat,w,c
 12658  0131F2  6EE6               	movwf	postinc1,c
 12659  0131F4  0E00               	movlw	0
 12660  0131F6  6EE6               	movwf	postinc1,c
 12661  0131F8  EC51  F0C7         	call	_fputc	;wreg free
 12662                           
 12663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12664                           ;stkvar	_fmt @ sp[(-32)+-4]
 12665  0131FC  0EDC               	movlw	-36
 12666  0131FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12667  013204  0EDD               	movlw	-35
 12668  013206  006F FF8F FFDA     	movff	plusw1,fsr2h
 12669  01320C  2ADE               	incf	postinc2,f,c
 12670  01320E  0E00               	movlw	0
 12671  013210  22DD               	addwfc	postdec2,f,c
 12672  013212  D7C4               	goto	l12234
 12673  013214                     l2330:
 12674                           
 12675                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12676  013214  0EDA               	movlw	218
 12677  013216  26E1               	addwf	fsr1l,f,c
 12678  013218  0EFF               	movlw	255
 12679  01321A  22E2               	addwfc	fsr1h,f,c
 12680  01321C  0012               	return		;funcret
 12681  01321E                     __end_of_vfpfcnvrt:
 12682                           	opt callstack 0
 12683                           
 12684 ;; *************** function _xtoa *****************
 12685 ;; Defined at:
 12686 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12687 ;; Parameters:    Size  Location     Type
 12688 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12689 ;;		 -> f(6), NULL(0), 
 12690 ;;  d               8  [STACK] unsigned long long 
 12691 ;;  x               1  [STACK] unsigned char 
 12692 ;; Auto vars:     Size  Location     Type
 12693 ;;  n               8  [STACK] unsigned long long 
 12694 ;;  c               2  [STACK] int 
 12695 ;;  i               2  [STACK] int 
 12696 ;;  w               2  [STACK] int 
 12697 ;;  p               2  [STACK] int 
 12698 ;; Return value:  Size  Location     Type
 12699 ;;                  2  [STACK] int 
 12700 ;; Registers used:
 12701 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12702 ;; Tracked objects:
 12703 ;;		On entry : 0/0
 12704 ;;		On exit  : 0/0
 12705 ;;		Unchanged: 0/0
 12706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12711 ;;Total ram usage:        0 bytes
 12712 ;; Hardware stack levels used:    1
 12713 ;; Hardware stack levels required when called:   20
 12714 ;; This function calls:
 12715 ;;		_isalpha
 12716 ;;		_isupper
 12717 ;;		_pad
 12718 ;;		_toupper
 12719 ;; This function is called by:
 12720 ;;		_vfpfcnvrt
 12721 ;; This function uses a reentrant model
 12722 ;;
 12723                           
 12724                           	psect	text46
 12725  0157DC                     __ptext46:
 12726                           	opt callstack 0
 12727  0157DC                     _xtoa:
 12728                           	opt callstack 0
 12729                           
 12730                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12731  0157DC  0E14               	movlw	20
 12732  0157DE  26E1               	addwf	fsr1l,f,c
 12733  0157E0  0E00               	movlw	0
 12734  0157E2  22E2               	addwfc	fsr1h,f,c
 12735                           
 12736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12737                           
 12738                           ;incstack = 0
 12739 ;; hardware stack exceeded
 12740  0157E4  AE4B               	btfss	(_prec+1)^0,7,c
 12741                           
 12742                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12743  0157E6  924C               	bcf	_flags^0,1,c
 12744                           
 12745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12746  0157E8  BE4B               	btfsc	(_prec+1)^0,7,c
 12747  0157EA  D005               	goto	u11350
 12748  0157EC  504B               	movf	(_prec+1)^0,w,c
 12749  0157EE  E110               	bnz	l11968
 12750  0157F0  044A               	decf	_prec^0,w,c
 12751  0157F2  B0D8               	btfsc	status,0,c
 12752  0157F4  D00D               	goto	l11968
 12753  0157F6                     u11350:
 12754  0157F6  0E01               	movlw	1
 12755  0157F8  6E32               	movwf	(btemp+10)^0,c
 12756  0157FA  0E00               	movlw	0
 12757  0157FC  6E33               	movwf	(btemp+11)^0,c
 12758                           
 12759                           ;stkvar	_p @ sp[(-20)+18]
 12760  0157FE  0EFE               	movlw	-2
 12761  015800  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12762  015806  0EFF               	movlw	-1
 12763  015808  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12764  01580E  D008               	goto	l2280
 12765  015810                     l11968:
 12766                           
 12767                           ;stkvar	_p @ sp[(-20)+18]
 12768  015810  0EFE               	movlw	-2
 12769  015812  0060  F12B  FFE3   	movff	_prec,plusw1
 12770  015818  0EFF               	movlw	-1
 12771  01581A  0060  F12F  FFE3   	movff	_prec+1,plusw1
 12772  015820                     l2280:
 12773                           
 12774                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12775                           ;stkvar	_w @ sp[(-20)+16]
 12776  015820  0EFC               	movlw	-4
 12777  015822  0060  F123  FFE3   	movff	_width,plusw1
 12778  015828  0EFD               	movlw	-3
 12779  01582A  0060  F127  FFE3   	movff	_width+1,plusw1
 12780                           
 12781                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12782  015830  A84C               	btfss	_flags^0,4,c
 12783  015832  D00B               	goto	l11974
 12784                           
 12785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12786                           ;stkvar	_w @ sp[(-20)+16]
 12787  015834  50E1               	movf	fsr1l,w,c
 12788  015836  0FFC               	addlw	-4
 12789  015838  6ED9               	movwf	fsr2l,c
 12790  01583A  50E2               	movf	fsr1h,w,c
 12791  01583C  6EDA               	movwf	fsr2h,c
 12792  01583E  0EFF               	movlw	255
 12793  015840  22DA               	addwfc	fsr2h,f,c
 12794  015842  0EFE               	movlw	254
 12795  015844  26DE               	addwf	postinc2,f,c
 12796  015846  0EFF               	movlw	255
 12797  015848  22DD               	addwfc	postdec2,f,c
 12798  01584A                     l11974:
 12799                           
 12800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12801                           ;stkvar	_d @ sp[(-20)+-10]
 12802  01584A  0EE2               	movlw	226
 12803  01584C  24E1               	addwf	fsr1l,w,c
 12804  01584E  6ED9               	movwf	fsr2l,c
 12805  015850  0EFF               	movlw	255
 12806  015852  20E2               	addwfc	fsr1h,w,c
 12807  015854  6EDA               	movwf	fsr2h,c
 12808                           
 12809                           ;stkvar	_n @ sp[(-20)+4]
 12810  015856  0E08               	movlw	8
 12811  015858  6E28               	movwf	btemp^0,c
 12812  01585A  0EF0               	movlw	-16
 12813  01585C                     us1137999:
 12814  01585C  006F FF7B FFE3     	movff	postinc2,plusw1
 12815  015862  28E8               	incf	wreg,w,c
 12816  015864  2E28               	decfsz	btemp^0,f,c
 12817  015866  D7FA               	bra	us1137999
 12818                           
 12819                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12820  015868  0E4F               	movlw	79
 12821  01586A  6E32               	movwf	(btemp+10)^0,c
 12822  01586C  0E00               	movlw	0
 12823  01586E  6E33               	movwf	(btemp+11)^0,c
 12824                           
 12825                           ;stkvar	_i @ sp[(-20)+14]
 12826  015870  0EFA               	movlw	-6
 12827  015872  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12828  015878  0EFB               	movlw	-5
 12829  01587A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12830                           
 12831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12832  015880  0103               	movlb	3	; () banked
 12833  015882  6BFD               	clrf	(_dbuf+79)& (0+255),b
 12834                           
 12835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12836  015884  D0EE               	goto	l12012
 12837  015886                     l11980:
 12838                           
 12839                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12840                           ;stkvar	_i @ sp[(-20)+14]
 12841  015886  50E1               	movf	fsr1l,w,c
 12842  015888  0FFA               	addlw	-6
 12843  01588A  6ED9               	movwf	fsr2l,c
 12844  01588C  50E2               	movf	fsr1h,w,c
 12845  01588E  6EDA               	movwf	fsr2h,c
 12846  015890  0EFF               	movlw	255
 12847  015892  22DA               	addwfc	fsr2h,f,c
 12848  015894  06DE               	decf	postinc2,f,c
 12849  015896  0E00               	movlw	0
 12850  015898  5ADD               	subwfb	postdec2,f,c
 12851                           
 12852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12853                           ;stkvar	_n @ sp[(-20)+4]
 12854  01589A  0EF0               	movlw	-16
 12855  01589C  006F FF8C  F032    	movff	plusw1,btemp+10
 12856  0158A2  0EF1               	movlw	-15
 12857  0158A4  006F FF8C  F033    	movff	plusw1,btemp+11
 12858  0158AA  0E0F               	movlw	15
 12859  0158AC  1632               	andwf	(btemp+10)^0,f,c
 12860  0158AE  0E00               	movlw	0
 12861  0158B0  1633               	andwf	(btemp+11)^0,f,c
 12862                           
 12863                           ;stkvar	_c @ sp[(-20)+12]
 12864  0158B2  0EF8               	movlw	-8
 12865  0158B4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12866  0158BA  0EF9               	movlw	-7
 12867  0158BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12868                           
 12869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12870                           ;stkvar	_c @ sp[(-20)+12]
 12871  0158C2  0EF9               	movlw	-7
 12872  0158C4  BEE3               	btfsc	plusw1,7,c
 12873  0158C6  D00F               	goto	l11988
 12874  0158C8  0EF9               	movlw	-7
 12875  0158CA  50E3               	movf	plusw1,w,c
 12876  0158CC  E108               	bnz	u11380
 12877  0158CE  0EF8               	movlw	-8
 12878  0158D0  006F FF8C  F028    	movff	plusw1,btemp
 12879  0158D6  0E0A               	movlw	10
 12880  0158D8  5E28               	subwf	btemp^0,f,c
 12881  0158DA  A0D8               	btfss	status,0,c
 12882  0158DC  D004               	goto	l11988
 12883  0158DE                     u11380:
 12884                           
 12885                           ;stkvar	_c @ sp[(-20)+12]
 12886  0158DE  0EF8               	movlw	-8
 12887  0158E0  50E3               	movf	plusw1,w,c
 12888  0158E2  0F57               	addlw	87
 12889  0158E4  D003               	goto	L11
 12890  0158E6                     l11988:
 12891                           
 12892                           ;stkvar	_c @ sp[(-20)+12]
 12893  0158E6  0EF8               	movlw	-8
 12894  0158E8  50E3               	movf	plusw1,w,c
 12895  0158EA  0F30               	addlw	48
 12896  0158EC                     L11:
 12897  0158EC  6E32               	movwf	(btemp+10)^0,c
 12898  0158EE  0EF9               	movlw	-7
 12899  0158F0  006F FF8C  F033    	movff	plusw1,btemp+11
 12900  0158F6  0E00               	movlw	0
 12901  0158F8  2233               	addwfc	(btemp+11)^0,f,c
 12902                           
 12903                           ;stkvar	_c @ sp[(-20)+12]
 12904  0158FA  0EF8               	movlw	-8
 12905  0158FC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12906  015902  0EF9               	movlw	-7
 12907  015904  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12908  01590A  0EBF               	movlw	191
 12909  01590C  6E32               	movwf	(btemp+10)^0,c
 12910  01590E  0EFF               	movlw	255
 12911  015910  6E33               	movwf	(btemp+11)^0,c
 12912                           
 12913                           ;stkvar	_x @ sp[(-20)+-11]
 12914  015912  0EE1               	movlw	-31
 12915  015914  50E3               	movf	plusw1,w,c
 12916  015916  6E30               	movwf	(btemp+8)^0,c
 12917  015918  6A31               	clrf	(btemp+9)^0,c
 12918  01591A  5032               	movf	(btemp+10)^0,w,c
 12919  01591C  2630               	addwf	(btemp+8)^0,f,c
 12920  01591E  5033               	movf	(btemp+11)^0,w,c
 12921  015920  2231               	addwfc	(btemp+9)^0,f,c
 12922  015922  5031               	movf	(btemp+9)^0,w,c
 12923  015924  E106               	bnz	u11390
 12924  015926  0E1A               	movlw	26
 12925  015928  5C30               	subwf	(btemp+8)^0,w,c
 12926  01592A  B0D8               	btfsc	status,0,c
 12927  01592C  D002               	goto	u11390
 12928  01592E  0E01               	movlw	1
 12929  015930  D001               	goto	u11400
 12930  015932                     u11390:
 12931  015932  0E00               	movlw	0
 12932  015934                     u11400:
 12933  015934  6E32               	movwf	(btemp+10)^0,c
 12934  015936  6A33               	clrf	(btemp+11)^0,c
 12935                           
 12936                           ;stkvar	_xtoa$5426 @ sp[(-20)+2]
 12937  015938  0EEE               	movlw	-18
 12938  01593A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12939  015940  0EEF               	movlw	-17
 12940  015942  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12941                           
 12942                           ;stkvar	_xtoa$5426 @ sp[(-20)+2]
 12943  015948  0EEE               	movlw	-18
 12944  01594A  006F FF8C  F028    	movff	plusw1,btemp
 12945  015950  0EEF               	movlw	-17
 12946  015952  50E3               	movf	plusw1,w,c
 12947  015954  1028               	iorwf	btemp^0,w,c
 12948  015956  B4D8               	btfsc	status,2,c
 12949  015958  D041               	goto	l12004
 12950  01595A  0E9F               	movlw	159
 12951  01595C  6E32               	movwf	(btemp+10)^0,c
 12952  01595E  0EFF               	movlw	255
 12953  015960  6E33               	movwf	(btemp+11)^0,c
 12954                           
 12955                           ;stkvar	_c @ sp[(-20)+12]
 12956  015962  0EF8               	movlw	-8
 12957  015964  006F FF8C  F030    	movff	plusw1,btemp+8
 12958  01596A  0EF9               	movlw	-7
 12959  01596C  006F FF8C  F031    	movff	plusw1,btemp+9
 12960  015972  0E20               	movlw	32
 12961  015974  1230               	iorwf	(btemp+8)^0,f,c
 12962  015976  0E00               	movlw	0
 12963  015978  1231               	iorwf	(btemp+9)^0,f,c
 12964  01597A  5032               	movf	(btemp+10)^0,w,c
 12965  01597C  2630               	addwf	(btemp+8)^0,f,c
 12966  01597E  5033               	movf	(btemp+11)^0,w,c
 12967  015980  2231               	addwfc	(btemp+9)^0,f,c
 12968  015982  5031               	movf	(btemp+9)^0,w,c
 12969  015984  E106               	bnz	u11420
 12970  015986  0E1A               	movlw	26
 12971  015988  5C30               	subwf	(btemp+8)^0,w,c
 12972  01598A  B0D8               	btfsc	status,0,c
 12973  01598C  D002               	goto	u11420
 12974  01598E  0E01               	movlw	1
 12975  015990  D001               	goto	u11430
 12976  015992                     u11420:
 12977  015992  0E00               	movlw	0
 12978  015994                     u11430:
 12979  015994  6E32               	movwf	(btemp+10)^0,c
 12980  015996  6A33               	clrf	(btemp+11)^0,c
 12981                           
 12982                           ;stkvar	_xtoa$5427 @ sp[(-20)+0]
 12983  015998  0EEC               	movlw	-20
 12984  01599A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12985  0159A0  0EED               	movlw	-19
 12986  0159A2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12987                           
 12988                           ;stkvar	_xtoa$5427 @ sp[(-20)+0]
 12989  0159A8  0EEC               	movlw	-20
 12990  0159AA  006F FF8C  F028    	movff	plusw1,btemp
 12991  0159B0  0EED               	movlw	-19
 12992  0159B2  50E3               	movf	plusw1,w,c
 12993  0159B4  1028               	iorwf	btemp^0,w,c
 12994  0159B6  B4D8               	btfsc	status,2,c
 12995  0159B8  D011               	goto	l12004
 12996                           
 12997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12998                           ;stkvar	_c @ sp[(-20)+12]
 12999  0159BA  0EF8               	movlw	-8
 13000  0159BC  006F FF8F FFE6     	movff	plusw1,postinc1
 13001  0159C2  006F FF8F FFE6     	movff	plusw1,postinc1
 13002  0159C8  EC53  F0D1         	call	_toupper	;wreg free
 13003                           
 13004                           ;stkvar	_c @ sp[(-20)+12]
 13005  0159CC  0EF8               	movlw	-8
 13006  0159CE  0060  F0A3  FFE3   	movff	btemp,plusw1
 13007  0159D4  0EF9               	movlw	-7
 13008  0159D6  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 13009  0159DC                     l12004:
 13010                           
 13011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 13012                           ;stkvar	_c @ sp[(-20)+12]
 13013                           ;stkvar	_i @ sp[(-20)+14]
 13014  0159DC  0EFA               	movlw	-6
 13015  0159DE  006F FF8C  F032    	movff	plusw1,btemp+10
 13016  0159E4  0EFB               	movlw	-5
 13017  0159E6  006F FF8C  F033    	movff	plusw1,btemp+11
 13018  0159EC  0EAE               	movlw	low _dbuf
 13019  0159EE  2432               	addwf	(btemp+10)^0,w,c
 13020  0159F0  6ED9               	movwf	fsr2l,c
 13021  0159F2  0E03               	movlw	high _dbuf
 13022  0159F4  2033               	addwfc	(btemp+11)^0,w,c
 13023  0159F6  6EDA               	movwf	fsr2h,c
 13024  0159F8  0EF8               	movlw	-8
 13025  0159FA  006F FF8F FFDF     	movff	plusw1,indf2
 13026                           
 13027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13028                           ;stkvar	_p @ sp[(-20)+18]
 13029  015A00  50E1               	movf	fsr1l,w,c
 13030  015A02  0FFE               	addlw	-2
 13031  015A04  6ED9               	movwf	fsr2l,c
 13032  015A06  50E2               	movf	fsr1h,w,c
 13033  015A08  6EDA               	movwf	fsr2h,c
 13034  015A0A  0EFF               	movlw	255
 13035  015A0C  22DA               	addwfc	fsr2h,f,c
 13036  015A0E  06DE               	decf	postinc2,f,c
 13037  015A10  0E00               	movlw	0
 13038  015A12  5ADD               	subwfb	postdec2,f,c
 13039                           
 13040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13041                           ;stkvar	_w @ sp[(-20)+16]
 13042  015A14  50E1               	movf	fsr1l,w,c
 13043  015A16  0FFC               	addlw	-4
 13044  015A18  6ED9               	movwf	fsr2l,c
 13045  015A1A  50E2               	movf	fsr1h,w,c
 13046  015A1C  6EDA               	movwf	fsr2h,c
 13047  015A1E  0EFF               	movlw	255
 13048  015A20  22DA               	addwfc	fsr2h,f,c
 13049  015A22  06DE               	decf	postinc2,f,c
 13050  015A24  0E00               	movlw	0
 13051  015A26  5ADD               	subwfb	postdec2,f,c
 13052                           
 13053                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13054  015A28  0E04               	movlw	4
 13055  015A2A  6E33               	movwf	(btemp+11)^0,c
 13056                           
 13057                           ;stkvar	_n @ sp[(-20)+4]
 13058  015A2C  50E1               	movf	fsr1l,w,c
 13059  015A2E  0FF0               	addlw	-16
 13060  015A30  6ED9               	movwf	fsr2l,c
 13061  015A32  50E2               	movf	fsr1h,w,c
 13062  015A34  6EDA               	movwf	fsr2h,c
 13063  015A36  0EFF               	movlw	255
 13064  015A38  22DA               	addwfc	fsr2h,f,c
 13065  015A3A  2833               	incf	(btemp+11)^0,w,c
 13066  015A3C  52DE               	movf	postinc2,f,c
 13067  015A3E  D00F               	goto	u11450
 13068  015A40                     u11455:
 13069  015A40  52DE               	movf	postinc2,f,c
 13070  015A42  52DE               	movf	postinc2,f,c
 13071  015A44  52DE               	movf	postinc2,f,c
 13072  015A46  52DE               	movf	postinc2,f,c
 13073  015A48  52DE               	movf	postinc2,f,c
 13074  015A4A  52DE               	movf	postinc2,f,c
 13075  015A4C  90D8               	bcf	status,0,c
 13076  015A4E  32DD               	rrcf	postdec2,f,c
 13077  015A50  32DD               	rrcf	postdec2,f,c
 13078  015A52  32DD               	rrcf	postdec2,f,c
 13079  015A54  32DD               	rrcf	postdec2,f,c
 13080  015A56  32DD               	rrcf	postdec2,f,c
 13081  015A58  32DD               	rrcf	postdec2,f,c
 13082  015A5A  32DD               	rrcf	postdec2,f,c
 13083  015A5C  32DE               	rrcf	postinc2,f,c
 13084  015A5E                     u11450:
 13085  015A5E  2EE8               	decfsz	wreg,f,c
 13086  015A60  D7EF               	goto	u11455
 13087  015A62                     l12012:
 13088                           
 13089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13090                           ;stkvar	_i @ sp[(-20)+14]
 13091  015A62  0EFB               	movlw	-5
 13092  015A64  BEE3               	btfsc	plusw1,7,c
 13093  015A66  D03A               	goto	u11500
 13094  015A68  0EFB               	movlw	-5
 13095  015A6A  50E3               	movf	plusw1,w,c
 13096  015A6C  E108               	bnz	u11460
 13097  015A6E  0EFA               	movlw	-6
 13098  015A70  006F FF8C  F028    	movff	plusw1,btemp
 13099  015A76  0E02               	movlw	2
 13100  015A78  5E28               	subwf	btemp^0,f,c
 13101  015A7A  A0D8               	btfss	status,0,c
 13102  015A7C  D02F               	goto	u11500
 13103  015A7E                     u11460:
 13104                           
 13105                           ;stkvar	_n @ sp[(-20)+4]
 13106  015A7E  0EF0               	movlw	-16
 13107  015A80  50E3               	movf	plusw1,w,c
 13108  015A82  E115               	bnz	u11471
 13109  015A84  0EF1               	movlw	-15
 13110  015A86  50E3               	movf	plusw1,w,c
 13111  015A88  E112               	bnz	u11471
 13112  015A8A  0EF2               	movlw	-14
 13113  015A8C  50E3               	movf	plusw1,w,c
 13114  015A8E  E10F               	bnz	u11471
 13115  015A90  0EF3               	movlw	-13
 13116  015A92  50E3               	movf	plusw1,w,c
 13117  015A94  E10C               	bnz	u11471
 13118  015A96  0EF4               	movlw	-12
 13119  015A98  50E3               	movf	plusw1,w,c
 13120  015A9A  E109               	bnz	u11471
 13121  015A9C  0EF5               	movlw	-11
 13122  015A9E  50E3               	movf	plusw1,w,c
 13123  015AA0  E106               	bnz	u11471
 13124  015AA2  0EF6               	movlw	-10
 13125  015AA4  50E3               	movf	plusw1,w,c
 13126  015AA6  E103               	bnz	u11471
 13127  015AA8  0EF7               	movlw	-9
 13128  015AAA  50E3               	movf	plusw1,w,c
 13129  015AAC  A4D8               	btfss	status,2,c
 13130  015AAE                     u11471:
 13131  015AAE  D6EB               	goto	l11980
 13132                           
 13133                           ;stkvar	_p @ sp[(-20)+18]
 13134  015AB0  0EFF               	movlw	-1
 13135  015AB2  BEE3               	btfsc	plusw1,7,c
 13136  015AB4  D007               	goto	u11480
 13137  015AB6  0EFF               	movlw	-1
 13138  015AB8  50E3               	movf	plusw1,w,c
 13139  015ABA  E103               	bnz	u11481
 13140  015ABC  0EFE               	movlw	-2
 13141  015ABE  04E3               	decf	plusw1,w,c
 13142  015AC0  B0D8               	btfsc	status,0,c
 13143  015AC2                     u11481:
 13144  015AC2  D6E1               	goto	l11980
 13145  015AC4                     u11480:
 13146                           
 13147                           ;stkvar	_w @ sp[(-20)+16]
 13148  015AC4  0EFD               	movlw	-3
 13149  015AC6  BEE3               	btfsc	plusw1,7,c
 13150  015AC8  D009               	goto	u11500
 13151  015ACA  0EFD               	movlw	-3
 13152  015ACC  50E3               	movf	plusw1,w,c
 13153  015ACE  E104               	bnz	u11490
 13154  015AD0  0EFC               	movlw	-4
 13155  015AD2  04E3               	decf	plusw1,w,c
 13156  015AD4  A0D8               	btfss	status,0,c
 13157  015AD6  D002               	goto	u11500
 13158  015AD8                     u11490:
 13159  015AD8  B24C               	btfsc	_flags^0,1,c
 13160  015ADA  D6D5               	goto	l11980
 13161  015ADC                     u11500:
 13162                           
 13163                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13164  015ADC  A84C               	btfss	_flags^0,4,c
 13165  015ADE  D036               	goto	l12028
 13166                           
 13167                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13168                           ;stkvar	_i @ sp[(-20)+14]
 13169  015AE0  50E1               	movf	fsr1l,w,c
 13170  015AE2  0FFA               	addlw	-6
 13171  015AE4  6ED9               	movwf	fsr2l,c
 13172  015AE6  50E2               	movf	fsr1h,w,c
 13173  015AE8  6EDA               	movwf	fsr2h,c
 13174  015AEA  0EFF               	movlw	255
 13175  015AEC  22DA               	addwfc	fsr2h,f,c
 13176  015AEE  06DE               	decf	postinc2,f,c
 13177  015AF0  0E00               	movlw	0
 13178  015AF2  5ADD               	subwfb	postdec2,f,c
 13179                           
 13180                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13181                           ;stkvar	_x @ sp[(-20)+-11]
 13182                           ;stkvar	_i @ sp[(-20)+14]
 13183  015AF4  0EFA               	movlw	-6
 13184  015AF6  006F FF8C  F032    	movff	plusw1,btemp+10
 13185  015AFC  0EFB               	movlw	-5
 13186  015AFE  006F FF8C  F033    	movff	plusw1,btemp+11
 13187  015B04  0EAE               	movlw	low _dbuf
 13188  015B06  2432               	addwf	(btemp+10)^0,w,c
 13189  015B08  6ED9               	movwf	fsr2l,c
 13190  015B0A  0E03               	movlw	high _dbuf
 13191  015B0C  2033               	addwfc	(btemp+11)^0,w,c
 13192  015B0E  6EDA               	movwf	fsr2h,c
 13193  015B10  0EE1               	movlw	-31
 13194  015B12  006F FF8F FFDF     	movff	plusw1,indf2
 13195                           
 13196                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13197                           ;stkvar	_i @ sp[(-20)+14]
 13198  015B18  50E1               	movf	fsr1l,w,c
 13199  015B1A  0FFA               	addlw	-6
 13200  015B1C  6ED9               	movwf	fsr2l,c
 13201  015B1E  50E2               	movf	fsr1h,w,c
 13202  015B20  6EDA               	movwf	fsr2h,c
 13203  015B22  0EFF               	movlw	255
 13204  015B24  22DA               	addwfc	fsr2h,f,c
 13205  015B26  06DE               	decf	postinc2,f,c
 13206  015B28  0E00               	movlw	0
 13207  015B2A  5ADD               	subwfb	postdec2,f,c
 13208                           
 13209                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13210                           ;stkvar	_i @ sp[(-20)+14]
 13211  015B2C  0EFA               	movlw	-6
 13212  015B2E  006F FF8C  F032    	movff	plusw1,btemp+10
 13213  015B34  0EFB               	movlw	-5
 13214  015B36  006F FF8C  F033    	movff	plusw1,btemp+11
 13215  015B3C  0EAE               	movlw	low _dbuf
 13216  015B3E  2432               	addwf	(btemp+10)^0,w,c
 13217  015B40  6ED9               	movwf	fsr2l,c
 13218  015B42  0E03               	movlw	high _dbuf
 13219  015B44  2033               	addwfc	(btemp+11)^0,w,c
 13220  015B46  6EDA               	movwf	fsr2h,c
 13221  015B48  0E30               	movlw	48
 13222  015B4A  6EDF               	movwf	indf2,c
 13223  015B4C                     l12028:
 13224                           
 13225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13226                           ;stkvar	_w @ sp[(-20)+16]
 13227  015B4C  0EFC               	movlw	-4
 13228  015B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 13229  015B54  006F FF8F FFE6     	movff	plusw1,postinc1
 13230                           
 13231                           ;stkvar	_i @ sp[(-22)+14]
 13232  015B5A  0EAE               	movlw	low _dbuf
 13233  015B5C  6E32               	movwf	(btemp+10)^0,c
 13234  015B5E  0E03               	movlw	high _dbuf
 13235  015B60  6E33               	movwf	(btemp+11)^0,c
 13236  015B62  0EF8               	movlw	-8
 13237  015B64  50E3               	movf	plusw1,w,c
 13238  015B66  2632               	addwf	(btemp+10)^0,f,c
 13239  015B68  0EF9               	movlw	-7
 13240  015B6A  50E3               	movf	plusw1,w,c
 13241  015B6C  2233               	addwfc	(btemp+11)^0,f,c
 13242  015B6E  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 13243  015B74  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 13244                           
 13245                           ;stkvar	_fp @ sp[(-24)+-2]
 13246  015B7A  0EE6               	movlw	-26
 13247  015B7C  006F FF8F FFE6     	movff	plusw1,postinc1
 13248  015B82  006F FF8F FFE6     	movff	plusw1,postinc1
 13249  015B88  EC6F  F0C8         	call	_pad	;wreg free
 13250                           
 13251                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13252  015B8C  0EE1               	movlw	225
 13253  015B8E  26E1               	addwf	fsr1l,f,c
 13254  015B90  0EFF               	movlw	255
 13255  015B92  22E2               	addwfc	fsr1h,f,c
 13256  015B94  0012               	return		;funcret
 13257  015B96                     __end_of_xtoa:
 13258                           	opt callstack 0
 13259                           
 13260 ;; *************** function _toupper *****************
 13261 ;; Defined at:
 13262 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13263 ;; Parameters:    Size  Location     Type
 13264 ;;  c               2  [STACK] int 
 13265 ;; Auto vars:     Size  Location     Type
 13266 ;;		None
 13267 ;; Return value:  Size  Location     Type
 13268 ;;                  2  [STACK] int 
 13269 ;; Registers used:
 13270 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13271 ;; Tracked objects:
 13272 ;;		On entry : 0/3
 13273 ;;		On exit  : 0/0
 13274 ;;		Unchanged: 0/0
 13275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13280 ;;Total ram usage:        0 bytes
 13281 ;; Hardware stack levels used:    1
 13282 ;; Hardware stack levels required when called:   16
 13283 ;; This function calls:
 13284 ;;		_islower
 13285 ;; This function is called by:
 13286 ;;		_xtoa
 13287 ;; This function uses a reentrant model
 13288 ;;
 13289                           
 13290                           	psect	text47
 13291  01A2A6                     __ptext47:
 13292                           	opt callstack 0
 13293  01A2A6                     _toupper:
 13294                           	opt callstack 0
 13295                           
 13296                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13297  01A2A6  52E6               	movf	postinc1,f,c
 13298  01A2A8  52E6               	movf	postinc1,f,c
 13299                           
 13300                           ;stkvar	_c @ sp[(-2)+-2]
 13301                           
 13302                           ;incstack = 0
 13303 ;; hardware stack exceeded
 13304  01A2AA  0EFC               	movlw	-4
 13305  01A2AC  50E3               	movf	plusw1,w,c
 13306  01A2AE  0F9F               	addlw	159
 13307  01A2B0  6E32               	movwf	(btemp+10)^0,c
 13308  01A2B2  0EFD               	movlw	-3
 13309  01A2B4  006F FF8C  F033    	movff	plusw1,btemp+11
 13310  01A2BA  0EFF               	movlw	255
 13311  01A2BC  2233               	addwfc	(btemp+11)^0,f,c
 13312  01A2BE  5033               	movf	(btemp+11)^0,w,c
 13313  01A2C0  E106               	bnz	u5980
 13314  01A2C2  0E1A               	movlw	26
 13315  01A2C4  5C32               	subwf	(btemp+10)^0,w,c
 13316  01A2C6  B0D8               	btfsc	status,0,c
 13317  01A2C8  D002               	goto	u5980
 13318  01A2CA  0E01               	movlw	1
 13319  01A2CC  D001               	goto	u5990
 13320  01A2CE                     u5980:
 13321  01A2CE  0E00               	movlw	0
 13322  01A2D0                     u5990:
 13323  01A2D0  6E32               	movwf	(btemp+10)^0,c
 13324  01A2D2  6A33               	clrf	(btemp+11)^0,c
 13325                           
 13326                           ;stkvar	_toupper$6233 @ sp[(-2)+0]
 13327  01A2D4  0EFE               	movlw	-2
 13328  01A2D6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13329  01A2DC  0EFF               	movlw	-1
 13330  01A2DE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13331                           
 13332                           ;stkvar	_toupper$6233 @ sp[(-2)+0]
 13333  01A2E4  0EFE               	movlw	-2
 13334  01A2E6  006F FF8C  F028    	movff	plusw1,btemp
 13335  01A2EC  0EFF               	movlw	-1
 13336  01A2EE  50E3               	movf	plusw1,w,c
 13337  01A2F0  1028               	iorwf	btemp^0,w,c
 13338  01A2F2  B4D8               	btfsc	status,2,c
 13339  01A2F4  D00D               	goto	l7842
 13340                           
 13341                           ;stkvar	_c @ sp[(-2)+-2]
 13342  01A2F6  0EFC               	movlw	-4
 13343  01A2F8  006F FF8C  F028    	movff	plusw1,btemp
 13344  01A2FE  0EFD               	movlw	-3
 13345  01A300  006F FF8C  F029    	movff	plusw1,btemp+1
 13346  01A306  0E5F               	movlw	95
 13347  01A308  1628               	andwf	btemp^0,f,c
 13348  01A30A  0E00               	movlw	0
 13349  01A30C  1629               	andwf	(btemp+1)^0,f,c
 13350  01A30E  D008               	goto	l3447
 13351  01A310                     l7842:
 13352                           
 13353                           ;stkvar	_c @ sp[(-2)+-2]
 13354  01A310  0EFC               	movlw	-4
 13355  01A312  006F FF8C  F028    	movff	plusw1,btemp
 13356  01A318  0EFD               	movlw	-3
 13357  01A31A  006F FF8C  F029    	movff	plusw1,btemp+1
 13358  01A320                     l3447:
 13359                           
 13360                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13361  01A320  52E5               	movf	postdec1,f,c
 13362  01A322  52E5               	movf	postdec1,f,c
 13363  01A324  52E5               	movf	postdec1,f,c
 13364  01A326  52E5               	movf	postdec1,f,c
 13365  01A328  0012               	return		;funcret
 13366  01A32A                     __end_of_toupper:
 13367                           	opt callstack 0
 13368                           
 13369 ;; *************** function _islower *****************
 13370 ;; Defined at:
 13371 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13372 ;; Parameters:    Size  Location     Type
 13373 ;;  c               2  [STACK] int 
 13374 ;; Auto vars:     Size  Location     Type
 13375 ;;		None
 13376 ;; Return value:  Size  Location     Type
 13377 ;;                  2  [STACK] int 
 13378 ;; Registers used:
 13379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13380 ;; Tracked objects:
 13381 ;;		On entry : 0/0
 13382 ;;		On exit  : 0/0
 13383 ;;		Unchanged: 0/0
 13384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13389 ;;Total ram usage:        0 bytes
 13390 ;; Hardware stack levels used:    1
 13391 ;; Hardware stack levels required when called:   15
 13392 ;; This function calls:
 13393 ;;		Nothing
 13394 ;; This function is called by:
 13395 ;;		_toupper
 13396 ;; This function uses a reentrant model
 13397 ;;
 13398                           
 13399                           	psect	text48
 13400  01AF3E                     __ptext48:
 13401                           	opt callstack 0
 13402  01AF3E                     _islower:
 13403                           	opt callstack 0
 13404                           
 13405                           ;stkvar	_c @ sp[(0)+-2]
 13406                           
 13407                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13408                           ;incstack = 0
 13409 ;; hardware stack exceeded
 13410  01AF3E  0EFE               	movlw	-2
 13411  01AF40  50E3               	movf	plusw1,w,c
 13412  01AF42  0F9F               	addlw	159
 13413  01AF44  6E32               	movwf	(btemp+10)^0,c
 13414  01AF46  0EFF               	movlw	-1
 13415  01AF48  006F FF8C  F033    	movff	plusw1,btemp+11
 13416  01AF4E  0EFF               	movlw	255
 13417  01AF50  2233               	addwfc	(btemp+11)^0,f,c
 13418  01AF52  5033               	movf	(btemp+11)^0,w,c
 13419  01AF54  E106               	bnz	u5670
 13420  01AF56  0E1A               	movlw	26
 13421  01AF58  5C32               	subwf	(btemp+10)^0,w,c
 13422  01AF5A  B0D8               	btfsc	status,0,c
 13423  01AF5C  D002               	goto	u5670
 13424  01AF5E  0E01               	movlw	1
 13425  01AF60  D001               	goto	u5680
 13426  01AF62                     u5670:
 13427  01AF62  0E00               	movlw	0
 13428  01AF64                     u5680:
 13429  01AF64  6E28               	movwf	btemp^0,c
 13430  01AF66  6A29               	clrf	(btemp+1)^0,c
 13431                           
 13432                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13433  01AF68  52E5               	movf	postdec1,f,c
 13434  01AF6A  52E5               	movf	postdec1,f,c
 13435  01AF6C  0012               	return		;funcret
 13436  01AF6E                     __end_of_islower:
 13437                           	opt callstack 0
 13438                           
 13439 ;; *************** function _isalpha *****************
 13440 ;; Defined at:
 13441 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13442 ;; Parameters:    Size  Location     Type
 13443 ;;  c               2  [STACK] int 
 13444 ;; Auto vars:     Size  Location     Type
 13445 ;;		None
 13446 ;; Return value:  Size  Location     Type
 13447 ;;                  2  [STACK] int 
 13448 ;; Registers used:
 13449 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13450 ;; Tracked objects:
 13451 ;;		On entry : 0/0
 13452 ;;		On exit  : 0/0
 13453 ;;		Unchanged: 0/0
 13454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13459 ;;Total ram usage:        0 bytes
 13460 ;; Hardware stack levels used:    1
 13461 ;; Hardware stack levels required when called:   15
 13462 ;; This function calls:
 13463 ;;		Nothing
 13464 ;; This function is called by:
 13465 ;;		_xtoa
 13466 ;; This function uses a reentrant model
 13467 ;;
 13468                           
 13469                           	psect	text49
 13470  01AB9A                     __ptext49:
 13471                           	opt callstack 0
 13472  01AB9A                     _isalpha:
 13473                           	opt callstack 0
 13474                           
 13475                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13476                           ;incstack = 0
 13477 ;; hardware stack exceeded
 13478  01AB9A  0E9F               	movlw	159
 13479  01AB9C  6E32               	movwf	(btemp+10)^0,c
 13480  01AB9E  0EFF               	movlw	255
 13481  01ABA0  6E33               	movwf	(btemp+11)^0,c
 13482                           
 13483                           ;stkvar	_c @ sp[(0)+-2]
 13484  01ABA2  0EFE               	movlw	-2
 13485  01ABA4  006F FF8C  F030    	movff	plusw1,btemp+8
 13486  01ABAA  0EFF               	movlw	-1
 13487  01ABAC  006F FF8C  F031    	movff	plusw1,btemp+9
 13488  01ABB2  0E20               	movlw	32
 13489  01ABB4  1230               	iorwf	(btemp+8)^0,f,c
 13490  01ABB6  0E00               	movlw	0
 13491  01ABB8  1231               	iorwf	(btemp+9)^0,f,c
 13492  01ABBA  5032               	movf	(btemp+10)^0,w,c
 13493  01ABBC  2630               	addwf	(btemp+8)^0,f,c
 13494  01ABBE  5033               	movf	(btemp+11)^0,w,c
 13495  01ABC0  2231               	addwfc	(btemp+9)^0,f,c
 13496  01ABC2  5031               	movf	(btemp+9)^0,w,c
 13497  01ABC4  E106               	bnz	u5960
 13498  01ABC6  0E1A               	movlw	26
 13499  01ABC8  5C30               	subwf	(btemp+8)^0,w,c
 13500  01ABCA  B0D8               	btfsc	status,0,c
 13501  01ABCC  D002               	goto	u5960
 13502  01ABCE  0E01               	movlw	1
 13503  01ABD0  D001               	goto	u5970
 13504  01ABD2                     u5960:
 13505  01ABD2  0E00               	movlw	0
 13506  01ABD4                     u5970:
 13507  01ABD4  6E28               	movwf	btemp^0,c
 13508  01ABD6  6A29               	clrf	(btemp+1)^0,c
 13509                           
 13510                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13511  01ABD8  52E5               	movf	postdec1,f,c
 13512  01ABDA  52E5               	movf	postdec1,f,c
 13513  01ABDC  0012               	return		;funcret
 13514  01ABDE                     __end_of_isalpha:
 13515                           	opt callstack 0
 13516                           
 13517 ;; *************** function _utoa *****************
 13518 ;; Defined at:
 13519 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13520 ;; Parameters:    Size  Location     Type
 13521 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13522 ;;		 -> f(6), NULL(0), 
 13523 ;;  d               8  [STACK] unsigned long long 
 13524 ;; Auto vars:     Size  Location     Type
 13525 ;;  n               8  [STACK] unsigned long long 
 13526 ;;  i               2  [STACK] int 
 13527 ;;  w               2  [STACK] int 
 13528 ;;  p               2  [STACK] int 
 13529 ;; Return value:  Size  Location     Type
 13530 ;;                  2  [STACK] int 
 13531 ;; Registers used:
 13532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13533 ;; Tracked objects:
 13534 ;;		On entry : 0/0
 13535 ;;		On exit  : 0/0
 13536 ;;		Unchanged: 0/0
 13537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13542 ;;Total ram usage:        0 bytes
 13543 ;; Hardware stack levels used:    1
 13544 ;; Hardware stack levels required when called:   20
 13545 ;; This function calls:
 13546 ;;		___lodiv
 13547 ;;		___lomod
 13548 ;;		_pad
 13549 ;; This function is called by:
 13550 ;;		_vfpfcnvrt
 13551 ;; This function uses a reentrant model
 13552 ;;
 13553                           
 13554                           	psect	text50
 13555  0162A4                     __ptext50:
 13556                           	opt callstack 0
 13557  0162A4                     _utoa:
 13558                           	opt callstack 0
 13559                           
 13560                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13561  0162A4  0E0E               	movlw	14
 13562  0162A6  26E1               	addwf	fsr1l,f,c
 13563  0162A8  0E00               	movlw	0
 13564  0162AA  22E2               	addwfc	fsr1h,f,c
 13565                           
 13566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13567                           
 13568                           ;incstack = 0
 13569 ;; hardware stack exceeded
 13570  0162AC  AE4B               	btfss	(_prec+1)^0,7,c
 13571                           
 13572                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13573  0162AE  924C               	bcf	_flags^0,1,c
 13574                           
 13575                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13576  0162B0  BE4B               	btfsc	(_prec+1)^0,7,c
 13577  0162B2  D005               	goto	u11270
 13578  0162B4  504B               	movf	(_prec+1)^0,w,c
 13579  0162B6  E110               	bnz	l11928
 13580  0162B8  044A               	decf	_prec^0,w,c
 13581  0162BA  B0D8               	btfsc	status,0,c
 13582  0162BC  D00D               	goto	l11928
 13583  0162BE                     u11270:
 13584  0162BE  0E01               	movlw	1
 13585  0162C0  6E32               	movwf	(btemp+10)^0,c
 13586  0162C2  0E00               	movlw	0
 13587  0162C4  6E33               	movwf	(btemp+11)^0,c
 13588                           
 13589                           ;stkvar	_p @ sp[(-14)+12]
 13590  0162C6  0EFE               	movlw	-2
 13591  0162C8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13592  0162CE  0EFF               	movlw	-1
 13593  0162D0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13594  0162D6  D008               	goto	l2265
 13595  0162D8                     l11928:
 13596                           
 13597                           ;stkvar	_p @ sp[(-14)+12]
 13598  0162D8  0EFE               	movlw	-2
 13599  0162DA  0060  F12B  FFE3   	movff	_prec,plusw1
 13600  0162E0  0EFF               	movlw	-1
 13601  0162E2  0060  F12F  FFE3   	movff	_prec+1,plusw1
 13602  0162E8                     l2265:
 13603                           
 13604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13605                           ;stkvar	_w @ sp[(-14)+10]
 13606  0162E8  0EFC               	movlw	-4
 13607  0162EA  0060  F123  FFE3   	movff	_width,plusw1
 13608  0162F0  0EFD               	movlw	-3
 13609  0162F2  0060  F127  FFE3   	movff	_width+1,plusw1
 13610                           
 13611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13612                           ;stkvar	_d @ sp[(-14)+-10]
 13613  0162F8  0EE8               	movlw	232
 13614  0162FA  24E1               	addwf	fsr1l,w,c
 13615  0162FC  6ED9               	movwf	fsr2l,c
 13616  0162FE  0EFF               	movlw	255
 13617  016300  20E2               	addwfc	fsr1h,w,c
 13618  016302  6EDA               	movwf	fsr2h,c
 13619                           
 13620                           ;stkvar	_n @ sp[(-14)+0]
 13621  016304  0E08               	movlw	8
 13622  016306  6E28               	movwf	btemp^0,c
 13623  016308  0EF2               	movlw	-14
 13624  01630A                     us1128999:
 13625  01630A  006F FF7B FFE3     	movff	postinc2,plusw1
 13626  016310  28E8               	incf	wreg,w,c
 13627  016312  2E28               	decfsz	btemp^0,f,c
 13628  016314  D7FA               	bra	us1128999
 13629                           
 13630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13631  016316  0E4F               	movlw	79
 13632  016318  6E32               	movwf	(btemp+10)^0,c
 13633  01631A  0E00               	movlw	0
 13634  01631C  6E33               	movwf	(btemp+11)^0,c
 13635                           
 13636                           ;stkvar	_i @ sp[(-14)+8]
 13637  01631E  0EFA               	movlw	-6
 13638  016320  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13639  016326  0EFB               	movlw	-5
 13640  016328  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13641                           
 13642                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13643  01632E  0103               	movlb	3	; () banked
 13644  016330  6BFD               	clrf	(_dbuf+79)& (0+255),b
 13645                           
 13646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13647  016332  D0FB               	goto	l11946
 13648  016334                     l11936:
 13649                           
 13650                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13651                           ;stkvar	_i @ sp[(-14)+8]
 13652  016334  50E1               	movf	fsr1l,w,c
 13653  016336  0FFA               	addlw	-6
 13654  016338  6ED9               	movwf	fsr2l,c
 13655  01633A  50E2               	movf	fsr1h,w,c
 13656  01633C  6EDA               	movwf	fsr2h,c
 13657  01633E  0EFF               	movlw	255
 13658  016340  22DA               	addwfc	fsr2h,f,c
 13659  016342  06DE               	decf	postinc2,f,c
 13660  016344  0E00               	movlw	0
 13661  016346  5ADD               	subwfb	postdec2,f,c
 13662                           
 13663                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13664  016348  0E0A               	movlw	10
 13665  01634A  6EE6               	movwf	postinc1,c
 13666  01634C  0E00               	movlw	0
 13667  01634E  6EE6               	movwf	postinc1,c
 13668  016350  0E00               	movlw	0
 13669  016352  6EE6               	movwf	postinc1,c
 13670  016354  0E00               	movlw	0
 13671  016356  6EE6               	movwf	postinc1,c
 13672  016358  0E00               	movlw	0
 13673  01635A  6EE6               	movwf	postinc1,c
 13674  01635C  0E00               	movlw	0
 13675  01635E  6EE6               	movwf	postinc1,c
 13676  016360  0E00               	movlw	0
 13677  016362  6EE6               	movwf	postinc1,c
 13678  016364  0E00               	movlw	0
 13679  016366  6EE6               	movwf	postinc1,c
 13680                           
 13681                           ;stkvar	_n @ sp[(-22)+0]
 13682  016368  50E1               	movf	fsr1l,w,c
 13683  01636A  0FEA               	addlw	-22
 13684  01636C  6ED9               	movwf	fsr2l,c
 13685  01636E  50E2               	movf	fsr1h,w,c
 13686  016370  6EDA               	movwf	fsr2h,c
 13687  016372  0EFF               	movlw	255
 13688  016374  22DA               	addwfc	fsr2h,f,c
 13689  016376  006F FF7B FFE6     	movff	postinc2,postinc1
 13690  01637C  006F FF7B FFE6     	movff	postinc2,postinc1
 13691  016382  006F FF7B FFE6     	movff	postinc2,postinc1
 13692  016388  006F FF7B FFE6     	movff	postinc2,postinc1
 13693  01638E  006F FF7B FFE6     	movff	postinc2,postinc1
 13694  016394  006F FF7B FFE6     	movff	postinc2,postinc1
 13695  01639A  006F FF7B FFE6     	movff	postinc2,postinc1
 13696  0163A0  006F FF7B FFE6     	movff	postinc2,postinc1
 13697  0163A6  EC7A  F0C5         	call	___lomod	;wreg free
 13698  0163AA  52E5               	movf	postdec1,f,c
 13699  0163AC  006F FF9C  F03F    	movff	indf1,btemp+23
 13700  0163B2  52E5               	movf	postdec1,f,c
 13701  0163B4  006F FF9C  F03E    	movff	indf1,btemp+22
 13702  0163BA  52E5               	movf	postdec1,f,c
 13703  0163BC  006F FF9C  F03D    	movff	indf1,btemp+21
 13704  0163C2  52E5               	movf	postdec1,f,c
 13705  0163C4  006F FF9C  F03C    	movff	indf1,btemp+20
 13706  0163CA  52E5               	movf	postdec1,f,c
 13707  0163CC  006F FF9C  F03B    	movff	indf1,btemp+19
 13708  0163D2  52E5               	movf	postdec1,f,c
 13709  0163D4  006F FF9C  F03A    	movff	indf1,btemp+18
 13710  0163DA  52E5               	movf	postdec1,f,c
 13711  0163DC  006F FF9C  F039    	movff	indf1,btemp+17
 13712  0163E2  52E5               	movf	postdec1,f,c
 13713  0163E4  006F FF9C  F038    	movff	indf1,btemp+16
 13714  0163EA  0EF8               	movlw	248
 13715  0163EC  26E1               	addwf	fsr1l,f,c
 13716  0163EE  0EFF               	movlw	255
 13717  0163F0  22E2               	addwfc	fsr1h,f,c
 13718  0163F2  0E30               	movlw	48
 13719  0163F4  2638               	addwf	(btemp+16)^0,f,c
 13720                           
 13721                           ;stkvar	_i @ sp[(-14)+8]
 13722  0163F6  0EFA               	movlw	-6
 13723  0163F8  006F FF8C  F032    	movff	plusw1,btemp+10
 13724  0163FE  0EFB               	movlw	-5
 13725  016400  006F FF8C  F033    	movff	plusw1,btemp+11
 13726  016406  0EAE               	movlw	low _dbuf
 13727  016408  2432               	addwf	(btemp+10)^0,w,c
 13728  01640A  6ED9               	movwf	fsr2l,c
 13729  01640C  0E03               	movlw	high _dbuf
 13730  01640E  2033               	addwfc	(btemp+11)^0,w,c
 13731  016410  6EDA               	movwf	fsr2h,c
 13732  016412  0060  F0E3  FFDF   	movff	btemp+16,indf2
 13733                           
 13734                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13735                           ;stkvar	_p @ sp[(-14)+12]
 13736  016418  50E1               	movf	fsr1l,w,c
 13737  01641A  0FFE               	addlw	-2
 13738  01641C  6ED9               	movwf	fsr2l,c
 13739  01641E  50E2               	movf	fsr1h,w,c
 13740  016420  6EDA               	movwf	fsr2h,c
 13741  016422  0EFF               	movlw	255
 13742  016424  22DA               	addwfc	fsr2h,f,c
 13743  016426  06DE               	decf	postinc2,f,c
 13744  016428  0E00               	movlw	0
 13745  01642A  5ADD               	subwfb	postdec2,f,c
 13746                           
 13747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13748                           ;stkvar	_w @ sp[(-14)+10]
 13749  01642C  50E1               	movf	fsr1l,w,c
 13750  01642E  0FFC               	addlw	-4
 13751  016430  6ED9               	movwf	fsr2l,c
 13752  016432  50E2               	movf	fsr1h,w,c
 13753  016434  6EDA               	movwf	fsr2h,c
 13754  016436  0EFF               	movlw	255
 13755  016438  22DA               	addwfc	fsr2h,f,c
 13756  01643A  06DE               	decf	postinc2,f,c
 13757  01643C  0E00               	movlw	0
 13758  01643E  5ADD               	subwfb	postdec2,f,c
 13759                           
 13760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13761  016440  0E0A               	movlw	10
 13762  016442  6EE6               	movwf	postinc1,c
 13763  016444  0E00               	movlw	0
 13764  016446  6EE6               	movwf	postinc1,c
 13765  016448  0E00               	movlw	0
 13766  01644A  6EE6               	movwf	postinc1,c
 13767  01644C  0E00               	movlw	0
 13768  01644E  6EE6               	movwf	postinc1,c
 13769  016450  0E00               	movlw	0
 13770  016452  6EE6               	movwf	postinc1,c
 13771  016454  0E00               	movlw	0
 13772  016456  6EE6               	movwf	postinc1,c
 13773  016458  0E00               	movlw	0
 13774  01645A  6EE6               	movwf	postinc1,c
 13775  01645C  0E00               	movlw	0
 13776  01645E  6EE6               	movwf	postinc1,c
 13777                           
 13778                           ;stkvar	_n @ sp[(-22)+0]
 13779  016460  50E1               	movf	fsr1l,w,c
 13780  016462  0FEA               	addlw	-22
 13781  016464  6ED9               	movwf	fsr2l,c
 13782  016466  50E2               	movf	fsr1h,w,c
 13783  016468  6EDA               	movwf	fsr2h,c
 13784  01646A  0EFF               	movlw	255
 13785  01646C  22DA               	addwfc	fsr2h,f,c
 13786  01646E  006F FF7B FFE6     	movff	postinc2,postinc1
 13787  016474  006F FF7B FFE6     	movff	postinc2,postinc1
 13788  01647A  006F FF7B FFE6     	movff	postinc2,postinc1
 13789  016480  006F FF7B FFE6     	movff	postinc2,postinc1
 13790  016486  006F FF7B FFE6     	movff	postinc2,postinc1
 13791  01648C  006F FF7B FFE6     	movff	postinc2,postinc1
 13792  016492  006F FF7B FFE6     	movff	postinc2,postinc1
 13793  016498  006F FF7B FFE6     	movff	postinc2,postinc1
 13794  01649E  EC85  F0C0         	call	___lodiv	;wreg free
 13795  0164A2  52E5               	movf	postdec1,f,c
 13796  0164A4  006F FF9C  F03F    	movff	indf1,btemp+23
 13797  0164AA  52E5               	movf	postdec1,f,c
 13798  0164AC  006F FF9C  F03E    	movff	indf1,btemp+22
 13799  0164B2  52E5               	movf	postdec1,f,c
 13800  0164B4  006F FF9C  F03D    	movff	indf1,btemp+21
 13801  0164BA  52E5               	movf	postdec1,f,c
 13802  0164BC  006F FF9C  F03C    	movff	indf1,btemp+20
 13803  0164C2  52E5               	movf	postdec1,f,c
 13804  0164C4  006F FF9C  F03B    	movff	indf1,btemp+19
 13805  0164CA  52E5               	movf	postdec1,f,c
 13806  0164CC  006F FF9C  F03A    	movff	indf1,btemp+18
 13807  0164D2  52E5               	movf	postdec1,f,c
 13808  0164D4  006F FF9C  F039    	movff	indf1,btemp+17
 13809  0164DA  52E5               	movf	postdec1,f,c
 13810  0164DC  006F FF9C  F038    	movff	indf1,btemp+16
 13811  0164E2  0EF8               	movlw	248
 13812  0164E4  26E1               	addwf	fsr1l,f,c
 13813  0164E6  0EFF               	movlw	255
 13814  0164E8  22E2               	addwfc	fsr1h,f,c
 13815                           
 13816                           ;stkvar	_n @ sp[(-14)+0]
 13817  0164EA  0EF2               	movlw	-14
 13818  0164EC  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 13819  0164F2  0EF3               	movlw	-13
 13820  0164F4  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 13821  0164FA  0EF4               	movlw	-12
 13822  0164FC  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 13823  016502  0EF5               	movlw	-11
 13824  016504  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 13825  01650A  0EF6               	movlw	-10
 13826  01650C  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 13827  016512  0EF7               	movlw	-9
 13828  016514  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 13829  01651A  0EF8               	movlw	-8
 13830  01651C  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 13831  016522  0EF9               	movlw	-7
 13832  016524  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 13833  01652A                     l11946:
 13834                           
 13835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13836                           ;stkvar	_i @ sp[(-14)+8]
 13837  01652A  0EFA               	movlw	-6
 13838  01652C  006F FF8C  F028    	movff	plusw1,btemp
 13839  016532  0EFB               	movlw	-5
 13840  016534  50E3               	movf	plusw1,w,c
 13841  016536  1028               	iorwf	btemp^0,w,c
 13842  016538  B4D8               	btfsc	status,2,c
 13843  01653A  D02F               	goto	u11330
 13844                           
 13845                           ;stkvar	_n @ sp[(-14)+0]
 13846  01653C  0EF2               	movlw	-14
 13847  01653E  50E3               	movf	plusw1,w,c
 13848  016540  E115               	bnz	u11301
 13849  016542  0EF3               	movlw	-13
 13850  016544  50E3               	movf	plusw1,w,c
 13851  016546  E112               	bnz	u11301
 13852  016548  0EF4               	movlw	-12
 13853  01654A  50E3               	movf	plusw1,w,c
 13854  01654C  E10F               	bnz	u11301
 13855  01654E  0EF5               	movlw	-11
 13856  016550  50E3               	movf	plusw1,w,c
 13857  016552  E10C               	bnz	u11301
 13858  016554  0EF6               	movlw	-10
 13859  016556  50E3               	movf	plusw1,w,c
 13860  016558  E109               	bnz	u11301
 13861  01655A  0EF7               	movlw	-9
 13862  01655C  50E3               	movf	plusw1,w,c
 13863  01655E  E106               	bnz	u11301
 13864  016560  0EF8               	movlw	-8
 13865  016562  50E3               	movf	plusw1,w,c
 13866  016564  E103               	bnz	u11301
 13867  016566  0EF9               	movlw	-7
 13868  016568  50E3               	movf	plusw1,w,c
 13869  01656A  A4D8               	btfss	status,2,c
 13870  01656C                     u11301:
 13871  01656C  D6E3               	goto	l11936
 13872                           
 13873                           ;stkvar	_p @ sp[(-14)+12]
 13874  01656E  0EFF               	movlw	-1
 13875  016570  BEE3               	btfsc	plusw1,7,c
 13876  016572  D007               	goto	u11310
 13877  016574  0EFF               	movlw	-1
 13878  016576  50E3               	movf	plusw1,w,c
 13879  016578  E103               	bnz	u11311
 13880  01657A  0EFE               	movlw	-2
 13881  01657C  04E3               	decf	plusw1,w,c
 13882  01657E  B0D8               	btfsc	status,0,c
 13883  016580                     u11311:
 13884  016580  D6D9               	goto	l11936
 13885  016582                     u11310:
 13886                           
 13887                           ;stkvar	_w @ sp[(-14)+10]
 13888  016582  0EFD               	movlw	-3
 13889  016584  BEE3               	btfsc	plusw1,7,c
 13890  016586  D009               	goto	u11330
 13891  016588  0EFD               	movlw	-3
 13892  01658A  50E3               	movf	plusw1,w,c
 13893  01658C  E104               	bnz	u11320
 13894  01658E  0EFC               	movlw	-4
 13895  016590  04E3               	decf	plusw1,w,c
 13896  016592  A0D8               	btfss	status,0,c
 13897  016594  D002               	goto	u11330
 13898  016596                     u11320:
 13899  016596  B24C               	btfsc	_flags^0,1,c
 13900  016598  D6CD               	goto	l11936
 13901  01659A                     u11330:
 13902                           
 13903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13904                           ;stkvar	_w @ sp[(-14)+10]
 13905  01659A  0EFC               	movlw	-4
 13906  01659C  006F FF8F FFE6     	movff	plusw1,postinc1
 13907  0165A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13908                           
 13909                           ;stkvar	_i @ sp[(-16)+8]
 13910  0165A8  0EAE               	movlw	low _dbuf
 13911  0165AA  6E32               	movwf	(btemp+10)^0,c
 13912  0165AC  0E03               	movlw	high _dbuf
 13913  0165AE  6E33               	movwf	(btemp+11)^0,c
 13914  0165B0  0EF8               	movlw	-8
 13915  0165B2  50E3               	movf	plusw1,w,c
 13916  0165B4  2632               	addwf	(btemp+10)^0,f,c
 13917  0165B6  0EF9               	movlw	-7
 13918  0165B8  50E3               	movf	plusw1,w,c
 13919  0165BA  2233               	addwfc	(btemp+11)^0,f,c
 13920  0165BC  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 13921  0165C2  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 13922                           
 13923                           ;stkvar	_fp @ sp[(-18)+-2]
 13924  0165C8  0EEC               	movlw	-20
 13925  0165CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13926  0165D0  006F FF8F FFE6     	movff	plusw1,postinc1
 13927  0165D6  EC6F  F0C8         	call	_pad	;wreg free
 13928                           
 13929                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13930  0165DA  0EE8               	movlw	232
 13931  0165DC  26E1               	addwf	fsr1l,f,c
 13932  0165DE  0EFF               	movlw	255
 13933  0165E0  22E2               	addwfc	fsr1h,f,c
 13934  0165E2  0012               	return		;funcret
 13935  0165E4                     __end_of_utoa:
 13936                           	opt callstack 0
 13937                           
 13938 ;; *************** function ___lomod *****************
 13939 ;; Defined at:
 13940 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13941 ;; Parameters:    Size  Location     Type
 13942 ;;  dividend        8  [STACK] unsigned long long 
 13943 ;;  divisor         8  [STACK] unsigned long long 
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;  counter         1  [STACK] unsigned char 
 13946 ;; Return value:  Size  Location     Type
 13947 ;;                  8  [STACK] unsigned long long 
 13948 ;; Registers used:
 13949 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13950 ;; Tracked objects:
 13951 ;;		On entry : 0/3
 13952 ;;		On exit  : 0/0
 13953 ;;		Unchanged: 0/0
 13954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13959 ;;Total ram usage:        0 bytes
 13960 ;; Hardware stack levels used:    1
 13961 ;; Hardware stack levels required when called:   15
 13962 ;; This function calls:
 13963 ;;		Nothing
 13964 ;; This function is called by:
 13965 ;;		_utoa
 13966 ;; This function uses a reentrant model
 13967 ;;
 13968                           
 13969                           	psect	text51
 13970  018AF4                     __ptext51:
 13971                           	opt callstack 0
 13972  018AF4                     ___lomod:
 13973                           	opt callstack 0
 13974                           
 13975                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13976  018AF4  52E6               	movf	postinc1,f,c
 13977                           
 13978                           ;stkvar	_divisor @ sp[(-1)+-16]
 13979                           
 13980                           ;incstack = 0
 13981 ;; hardware stack exceeded
 13982  018AF6  0EEF               	movlw	-17
 13983  018AF8  50E3               	movf	plusw1,w,c
 13984  018AFA  E116               	bnz	u7110
 13985  018AFC  0EF0               	movlw	-16
 13986  018AFE  50E3               	movf	plusw1,w,c
 13987  018B00  E113               	bnz	u7110
 13988  018B02  0EF1               	movlw	-15
 13989  018B04  50E3               	movf	plusw1,w,c
 13990  018B06  E110               	bnz	u7110
 13991  018B08  0EF2               	movlw	-14
 13992  018B0A  50E3               	movf	plusw1,w,c
 13993  018B0C  E10D               	bnz	u7110
 13994  018B0E  0EF3               	movlw	-13
 13995  018B10  50E3               	movf	plusw1,w,c
 13996  018B12  E10A               	bnz	u7110
 13997  018B14  0EF4               	movlw	-12
 13998  018B16  50E3               	movf	plusw1,w,c
 13999  018B18  E107               	bnz	u7110
 14000  018B1A  0EF5               	movlw	-11
 14001  018B1C  50E3               	movf	plusw1,w,c
 14002  018B1E  E104               	bnz	u7110
 14003  018B20  0EF6               	movlw	-10
 14004  018B22  50E3               	movf	plusw1,w,c
 14005  018B24  B4D8               	btfsc	status,2,c
 14006  018B26  D075               	goto	u7140
 14007  018B28                     u7110:
 14008                           
 14009                           ;stkvar	_counter @ sp[(-1)+0]
 14010  018B28  0EFF               	movlw	-1
 14011  018B2A  6AE3               	clrf	plusw1,c
 14012  018B2C  D012               	goto	L12
 14013  018B2E                     l8452:
 14014                           
 14015                           ;stkvar	_divisor @ sp[(-1)+-16]
 14016  018B2E  90D8               	bcf	status,0,c
 14017  018B30  0EEF               	movlw	-17
 14018  018B32  36E3               	rlcf	plusw1,f,c
 14019  018B34  0EF0               	movlw	-16
 14020  018B36  36E3               	rlcf	plusw1,f,c
 14021  018B38  0EF1               	movlw	-15
 14022  018B3A  36E3               	rlcf	plusw1,f,c
 14023  018B3C  0EF2               	movlw	-14
 14024  018B3E  36E3               	rlcf	plusw1,f,c
 14025  018B40  0EF3               	movlw	-13
 14026  018B42  36E3               	rlcf	plusw1,f,c
 14027  018B44  0EF4               	movlw	-12
 14028  018B46  36E3               	rlcf	plusw1,f,c
 14029  018B48  0EF5               	movlw	-11
 14030  018B4A  36E3               	rlcf	plusw1,f,c
 14031  018B4C  0EF6               	movlw	-10
 14032  018B4E  36E3               	rlcf	plusw1,f,c
 14033                           
 14034                           ;stkvar	_counter @ sp[(-1)+0]
 14035  018B50  0EFF               	movlw	-1
 14036  018B52                     L12:
 14037  018B52  2AE3               	incf	plusw1,f,c
 14038                           
 14039                           ;stkvar	_divisor @ sp[(-1)+-16]
 14040  018B54  0EF6               	movlw	-10
 14041  018B56  AEE3               	btfss	plusw1,7,c
 14042  018B58  D7EA               	goto	l8452
 14043  018B5A                     u7120:
 14044                           
 14045                           ;stkvar	_divisor @ sp[(-1)+-16]
 14046                           ;stkvar	_dividend @ sp[(-1)+-8]
 14047  018B5A  50E1               	movf	fsr1l,w,c
 14048  018B5C  0FF7               	addlw	-9
 14049  018B5E  6ED9               	movwf	fsr2l,c
 14050  018B60  50E2               	movf	fsr1h,w,c
 14051  018B62  6EDA               	movwf	fsr2h,c
 14052  018B64  0EFF               	movlw	255
 14053  018B66  22DA               	addwfc	fsr2h,f,c
 14054  018B68  0EEF               	movlw	-17
 14055  018B6A  50E3               	movf	plusw1,w,c
 14056  018B6C  5CDE               	subwf	postinc2,w,c
 14057  018B6E  0EF0               	movlw	-16
 14058  018B70  50E3               	movf	plusw1,w,c
 14059  018B72  58DE               	subwfb	postinc2,w,c
 14060  018B74  0EF1               	movlw	-15
 14061  018B76  50E3               	movf	plusw1,w,c
 14062  018B78  58DE               	subwfb	postinc2,w,c
 14063  018B7A  0EF2               	movlw	-14
 14064  018B7C  50E3               	movf	plusw1,w,c
 14065  018B7E  58DE               	subwfb	postinc2,w,c
 14066  018B80  0EF3               	movlw	-13
 14067  018B82  50E3               	movf	plusw1,w,c
 14068  018B84  58DE               	subwfb	postinc2,w,c
 14069  018B86  0EF4               	movlw	-12
 14070  018B88  50E3               	movf	plusw1,w,c
 14071  018B8A  58DE               	subwfb	postinc2,w,c
 14072  018B8C  0EF5               	movlw	-11
 14073  018B8E  50E3               	movf	plusw1,w,c
 14074  018B90  58DE               	subwfb	postinc2,w,c
 14075  018B92  0EF6               	movlw	-10
 14076  018B94  50E3               	movf	plusw1,w,c
 14077  018B96  58DE               	subwfb	postinc2,w,c
 14078  018B98  A0D8               	btfss	status,0,c
 14079  018B9A  D01F               	goto	l8460
 14080                           
 14081                           ;stkvar	_divisor @ sp[(-1)+-16]
 14082                           ;stkvar	_dividend @ sp[(-1)+-8]
 14083  018B9C  50E1               	movf	fsr1l,w,c
 14084  018B9E  0FF7               	addlw	-9
 14085  018BA0  6ED9               	movwf	fsr2l,c
 14086  018BA2  50E2               	movf	fsr1h,w,c
 14087  018BA4  6EDA               	movwf	fsr2h,c
 14088  018BA6  0EFF               	movlw	255
 14089  018BA8  22DA               	addwfc	fsr2h,f,c
 14090  018BAA  0EEF               	movlw	-17
 14091  018BAC  50E3               	movf	plusw1,w,c
 14092  018BAE  5EDE               	subwf	postinc2,f,c
 14093  018BB0  0EF0               	movlw	-16
 14094  018BB2  50E3               	movf	plusw1,w,c
 14095  018BB4  5ADE               	subwfb	postinc2,f,c
 14096  018BB6  0EF1               	movlw	-15
 14097  018BB8  50E3               	movf	plusw1,w,c
 14098  018BBA  5ADE               	subwfb	postinc2,f,c
 14099  018BBC  0EF2               	movlw	-14
 14100  018BBE  50E3               	movf	plusw1,w,c
 14101  018BC0  5ADE               	subwfb	postinc2,f,c
 14102  018BC2  0EF3               	movlw	-13
 14103  018BC4  50E3               	movf	plusw1,w,c
 14104  018BC6  5ADE               	subwfb	postinc2,f,c
 14105  018BC8  0EF4               	movlw	-12
 14106  018BCA  50E3               	movf	plusw1,w,c
 14107  018BCC  5ADE               	subwfb	postinc2,f,c
 14108  018BCE  0EF5               	movlw	-11
 14109  018BD0  50E3               	movf	plusw1,w,c
 14110  018BD2  5ADE               	subwfb	postinc2,f,c
 14111  018BD4  0EF6               	movlw	-10
 14112  018BD6  50E3               	movf	plusw1,w,c
 14113  018BD8  5ADE               	subwfb	postinc2,f,c
 14114  018BDA                     l8460:
 14115                           
 14116                           ;stkvar	_divisor @ sp[(-1)+-16]
 14117  018BDA  90D8               	bcf	status,0,c
 14118  018BDC  0EF6               	movlw	-10
 14119  018BDE  32E3               	rrcf	plusw1,f,c
 14120  018BE0  0EF5               	movlw	-11
 14121  018BE2  32E3               	rrcf	plusw1,f,c
 14122  018BE4  0EF4               	movlw	-12
 14123  018BE6  32E3               	rrcf	plusw1,f,c
 14124  018BE8  0EF3               	movlw	-13
 14125  018BEA  32E3               	rrcf	plusw1,f,c
 14126  018BEC  0EF2               	movlw	-14
 14127  018BEE  32E3               	rrcf	plusw1,f,c
 14128  018BF0  0EF1               	movlw	-15
 14129  018BF2  32E3               	rrcf	plusw1,f,c
 14130  018BF4  0EF0               	movlw	-16
 14131  018BF6  32E3               	rrcf	plusw1,f,c
 14132  018BF8  0EEF               	movlw	-17
 14133  018BFA  32E3               	rrcf	plusw1,f,c
 14134                           
 14135                           ;stkvar	_counter @ sp[(-1)+0]
 14136  018BFC  0EFF               	movlw	-1
 14137  018BFE  50E3               	movf	plusw1,w,c
 14138  018C00  6E28               	movwf	btemp^0,c
 14139  018C02  0E01               	movlw	1
 14140  018C04  5E28               	subwf	btemp^0,f,c
 14141  018C06  0EFF               	movlw	-1
 14142  018C08  0060  F0A3  FFE3   	movff	btemp,plusw1
 14143  018C0E  A4D8               	btfss	status,2,c
 14144  018C10  D7A4               	goto	u7120
 14145  018C12                     u7140:
 14146                           
 14147                           ;stkvar	_dividend @ sp[(-1)+-8]
 14148  018C12  0EF7               	movlw	247
 14149  018C14  24E1               	addwf	fsr1l,w,c
 14150  018C16  6ED9               	movwf	fsr2l,c
 14151  018C18  0EFF               	movlw	255
 14152  018C1A  20E2               	addwfc	fsr1h,w,c
 14153  018C1C  6EDA               	movwf	fsr2h,c
 14154                           
 14155                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14156  018C1E  0E08               	movlw	8
 14157  018C20  6E28               	movwf	btemp^0,c
 14158  018C22  0EF7               	movlw	-9
 14159  018C24                     us715999:
 14160  018C24  006F FF7B FFE3     	movff	postinc2,plusw1
 14161  018C2A  28E8               	incf	wreg,w,c
 14162  018C2C  2E28               	decfsz	btemp^0,f,c
 14163  018C2E  D7FA               	bra	us715999
 14164                           
 14165                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14166  018C30  52E5               	movf	postdec1,f,c
 14167  018C32  0012               	return		;funcret
 14168  018C34                     __end_of___lomod:
 14169                           	opt callstack 0
 14170                           
 14171 ;; *************** function ___lodiv *****************
 14172 ;; Defined at:
 14173 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14174 ;; Parameters:    Size  Location     Type
 14175 ;;  dividend        8  [STACK] unsigned long long 
 14176 ;;  divisor         8  [STACK] unsigned long long 
 14177 ;; Auto vars:     Size  Location     Type
 14178 ;;  quotient        8  [STACK] unsigned long long 
 14179 ;;  counter         1  [STACK] unsigned char 
 14180 ;; Return value:  Size  Location     Type
 14181 ;;                  8  [STACK] unsigned long long 
 14182 ;; Registers used:
 14183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14184 ;; Tracked objects:
 14185 ;;		On entry : 0/3
 14186 ;;		On exit  : 0/0
 14187 ;;		Unchanged: 0/0
 14188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14193 ;;Total ram usage:        0 bytes
 14194 ;; Hardware stack levels used:    1
 14195 ;; Hardware stack levels required when called:   15
 14196 ;; This function calls:
 14197 ;;		Nothing
 14198 ;; This function is called by:
 14199 ;;		_utoa
 14200 ;; This function uses a reentrant model
 14201 ;;
 14202                           
 14203                           	psect	text52
 14204  01810A                     __ptext52:
 14205                           	opt callstack 0
 14206  01810A                     ___lodiv:
 14207                           	opt callstack 0
 14208                           
 14209                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14210  01810A  0E09               	movlw	9
 14211  01810C  26E1               	addwf	fsr1l,f,c
 14212  01810E  0E00               	movlw	0
 14213  018110  22E2               	addwfc	fsr1h,f,c
 14214                           
 14215                           ;stkvar	_quotient @ sp[(-9)+0]
 14216                           
 14217                           ;incstack = 0
 14218 ;; hardware stack exceeded
 14219  018112  0E07               	movlw	7
 14220  018114  6E28               	movwf	btemp^0,c
 14221  018116  0EF7               	movlw	-9
 14222  018118                     u7051:
 14223  018118  6AE3               	clrf	plusw1,c
 14224  01811A  2AE8               	incf	wreg,f,c
 14225  01811C  0628               	decf	btemp^0,f,c
 14226  01811E  E2FC               	bc	u7051
 14227                           
 14228                           ;stkvar	_divisor @ sp[(-9)+-16]
 14229  018120  0EE7               	movlw	-25
 14230  018122  50E3               	movf	plusw1,w,c
 14231  018124  E116               	bnz	u7060
 14232  018126  0EE8               	movlw	-24
 14233  018128  50E3               	movf	plusw1,w,c
 14234  01812A  E113               	bnz	u7060
 14235  01812C  0EE9               	movlw	-23
 14236  01812E  50E3               	movf	plusw1,w,c
 14237  018130  E110               	bnz	u7060
 14238  018132  0EEA               	movlw	-22
 14239  018134  50E3               	movf	plusw1,w,c
 14240  018136  E10D               	bnz	u7060
 14241  018138  0EEB               	movlw	-21
 14242  01813A  50E3               	movf	plusw1,w,c
 14243  01813C  E10A               	bnz	u7060
 14244  01813E  0EEC               	movlw	-20
 14245  018140  50E3               	movf	plusw1,w,c
 14246  018142  E107               	bnz	u7060
 14247  018144  0EED               	movlw	-19
 14248  018146  50E3               	movf	plusw1,w,c
 14249  018148  E104               	bnz	u7060
 14250  01814A  0EEE               	movlw	-18
 14251  01814C  50E3               	movf	plusw1,w,c
 14252  01814E  B4D8               	btfsc	status,2,c
 14253  018150  D088               	goto	u7090
 14254  018152                     u7060:
 14255                           
 14256                           ;stkvar	_counter @ sp[(-9)+8]
 14257  018152  0EFF               	movlw	-1
 14258  018154  6AE3               	clrf	plusw1,c
 14259  018156  D012               	goto	L13
 14260  018158                     l8428:
 14261                           
 14262                           ;stkvar	_divisor @ sp[(-9)+-16]
 14263  018158  90D8               	bcf	status,0,c
 14264  01815A  0EE7               	movlw	-25
 14265  01815C  36E3               	rlcf	plusw1,f,c
 14266  01815E  0EE8               	movlw	-24
 14267  018160  36E3               	rlcf	plusw1,f,c
 14268  018162  0EE9               	movlw	-23
 14269  018164  36E3               	rlcf	plusw1,f,c
 14270  018166  0EEA               	movlw	-22
 14271  018168  36E3               	rlcf	plusw1,f,c
 14272  01816A  0EEB               	movlw	-21
 14273  01816C  36E3               	rlcf	plusw1,f,c
 14274  01816E  0EEC               	movlw	-20
 14275  018170  36E3               	rlcf	plusw1,f,c
 14276  018172  0EED               	movlw	-19
 14277  018174  36E3               	rlcf	plusw1,f,c
 14278  018176  0EEE               	movlw	-18
 14279  018178  36E3               	rlcf	plusw1,f,c
 14280                           
 14281                           ;stkvar	_counter @ sp[(-9)+8]
 14282  01817A  0EFF               	movlw	-1
 14283  01817C                     L13:
 14284  01817C  2AE3               	incf	plusw1,f,c
 14285                           
 14286                           ;stkvar	_divisor @ sp[(-9)+-16]
 14287  01817E  0EEE               	movlw	-18
 14288  018180  AEE3               	btfss	plusw1,7,c
 14289  018182  D7EA               	goto	l8428
 14290  018184                     u7070:
 14291                           
 14292                           ;stkvar	_quotient @ sp[(-9)+0]
 14293  018184  90D8               	bcf	status,0,c
 14294  018186  0EF7               	movlw	-9
 14295  018188  36E3               	rlcf	plusw1,f,c
 14296  01818A  0EF8               	movlw	-8
 14297  01818C  36E3               	rlcf	plusw1,f,c
 14298  01818E  0EF9               	movlw	-7
 14299  018190  36E3               	rlcf	plusw1,f,c
 14300  018192  0EFA               	movlw	-6
 14301  018194  36E3               	rlcf	plusw1,f,c
 14302  018196  0EFB               	movlw	-5
 14303  018198  36E3               	rlcf	plusw1,f,c
 14304  01819A  0EFC               	movlw	-4
 14305  01819C  36E3               	rlcf	plusw1,f,c
 14306  01819E  0EFD               	movlw	-3
 14307  0181A0  36E3               	rlcf	plusw1,f,c
 14308  0181A2  0EFE               	movlw	-2
 14309  0181A4  36E3               	rlcf	plusw1,f,c
 14310                           
 14311                           ;stkvar	_divisor @ sp[(-9)+-16]
 14312                           ;stkvar	_dividend @ sp[(-9)+-8]
 14313  0181A6  50E1               	movf	fsr1l,w,c
 14314  0181A8  0FEF               	addlw	-17
 14315  0181AA  6ED9               	movwf	fsr2l,c
 14316  0181AC  50E2               	movf	fsr1h,w,c
 14317  0181AE  6EDA               	movwf	fsr2h,c
 14318  0181B0  0EFF               	movlw	255
 14319  0181B2  22DA               	addwfc	fsr2h,f,c
 14320  0181B4  0EE7               	movlw	-25
 14321  0181B6  50E3               	movf	plusw1,w,c
 14322  0181B8  5CDE               	subwf	postinc2,w,c
 14323  0181BA  0EE8               	movlw	-24
 14324  0181BC  50E3               	movf	plusw1,w,c
 14325  0181BE  58DE               	subwfb	postinc2,w,c
 14326  0181C0  0EE9               	movlw	-23
 14327  0181C2  50E3               	movf	plusw1,w,c
 14328  0181C4  58DE               	subwfb	postinc2,w,c
 14329  0181C6  0EEA               	movlw	-22
 14330  0181C8  50E3               	movf	plusw1,w,c
 14331  0181CA  58DE               	subwfb	postinc2,w,c
 14332  0181CC  0EEB               	movlw	-21
 14333  0181CE  50E3               	movf	plusw1,w,c
 14334  0181D0  58DE               	subwfb	postinc2,w,c
 14335  0181D2  0EEC               	movlw	-20
 14336  0181D4  50E3               	movf	plusw1,w,c
 14337  0181D6  58DE               	subwfb	postinc2,w,c
 14338  0181D8  0EED               	movlw	-19
 14339  0181DA  50E3               	movf	plusw1,w,c
 14340  0181DC  58DE               	subwfb	postinc2,w,c
 14341  0181DE  0EEE               	movlw	-18
 14342  0181E0  50E3               	movf	plusw1,w,c
 14343  0181E2  58DE               	subwfb	postinc2,w,c
 14344  0181E4  A0D8               	btfss	status,0,c
 14345  0181E6  D021               	goto	l8440
 14346                           
 14347                           ;stkvar	_divisor @ sp[(-9)+-16]
 14348                           ;stkvar	_dividend @ sp[(-9)+-8]
 14349  0181E8  50E1               	movf	fsr1l,w,c
 14350  0181EA  0FEF               	addlw	-17
 14351  0181EC  6ED9               	movwf	fsr2l,c
 14352  0181EE  50E2               	movf	fsr1h,w,c
 14353  0181F0  6EDA               	movwf	fsr2h,c
 14354  0181F2  0EFF               	movlw	255
 14355  0181F4  22DA               	addwfc	fsr2h,f,c
 14356  0181F6  0EE7               	movlw	-25
 14357  0181F8  50E3               	movf	plusw1,w,c
 14358  0181FA  5EDE               	subwf	postinc2,f,c
 14359  0181FC  0EE8               	movlw	-24
 14360  0181FE  50E3               	movf	plusw1,w,c
 14361  018200  5ADE               	subwfb	postinc2,f,c
 14362  018202  0EE9               	movlw	-23
 14363  018204  50E3               	movf	plusw1,w,c
 14364  018206  5ADE               	subwfb	postinc2,f,c
 14365  018208  0EEA               	movlw	-22
 14366  01820A  50E3               	movf	plusw1,w,c
 14367  01820C  5ADE               	subwfb	postinc2,f,c
 14368  01820E  0EEB               	movlw	-21
 14369  018210  50E3               	movf	plusw1,w,c
 14370  018212  5ADE               	subwfb	postinc2,f,c
 14371  018214  0EEC               	movlw	-20
 14372  018216  50E3               	movf	plusw1,w,c
 14373  018218  5ADE               	subwfb	postinc2,f,c
 14374  01821A  0EED               	movlw	-19
 14375  01821C  50E3               	movf	plusw1,w,c
 14376  01821E  5ADE               	subwfb	postinc2,f,c
 14377  018220  0EEE               	movlw	-18
 14378  018222  50E3               	movf	plusw1,w,c
 14379  018224  5ADE               	subwfb	postinc2,f,c
 14380                           
 14381                           ;stkvar	_quotient @ sp[(-9)+0]
 14382  018226  0EF7               	movlw	-9
 14383  018228  80E3               	bsf	plusw1,0,c
 14384  01822A                     l8440:
 14385                           
 14386                           ;stkvar	_divisor @ sp[(-9)+-16]
 14387  01822A  90D8               	bcf	status,0,c
 14388  01822C  0EEE               	movlw	-18
 14389  01822E  32E3               	rrcf	plusw1,f,c
 14390  018230  0EED               	movlw	-19
 14391  018232  32E3               	rrcf	plusw1,f,c
 14392  018234  0EEC               	movlw	-20
 14393  018236  32E3               	rrcf	plusw1,f,c
 14394  018238  0EEB               	movlw	-21
 14395  01823A  32E3               	rrcf	plusw1,f,c
 14396  01823C  0EEA               	movlw	-22
 14397  01823E  32E3               	rrcf	plusw1,f,c
 14398  018240  0EE9               	movlw	-23
 14399  018242  32E3               	rrcf	plusw1,f,c
 14400  018244  0EE8               	movlw	-24
 14401  018246  32E3               	rrcf	plusw1,f,c
 14402  018248  0EE7               	movlw	-25
 14403  01824A  32E3               	rrcf	plusw1,f,c
 14404                           
 14405                           ;stkvar	_counter @ sp[(-9)+8]
 14406  01824C  0EFF               	movlw	-1
 14407  01824E  50E3               	movf	plusw1,w,c
 14408  018250  6E28               	movwf	btemp^0,c
 14409  018252  0E01               	movlw	1
 14410  018254  5E28               	subwf	btemp^0,f,c
 14411  018256  0EFF               	movlw	-1
 14412  018258  0060  F0A3  FFE3   	movff	btemp,plusw1
 14413  01825E  A4D8               	btfss	status,2,c
 14414  018260  D791               	goto	u7070
 14415  018262                     u7090:
 14416                           
 14417                           ;stkvar	_quotient @ sp[(-9)+0]
 14418  018262  0EF7               	movlw	247
 14419  018264  24E1               	addwf	fsr1l,w,c
 14420  018266  6ED9               	movwf	fsr2l,c
 14421  018268  0EFF               	movlw	255
 14422  01826A  20E2               	addwfc	fsr1h,w,c
 14423  01826C  6EDA               	movwf	fsr2h,c
 14424                           
 14425                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14426  01826E  0E08               	movlw	8
 14427  018270  6E28               	movwf	btemp^0,c
 14428  018272  0EEF               	movlw	-17
 14429  018274                     us710999:
 14430  018274  006F FF7B FFE3     	movff	postinc2,plusw1
 14431  01827A  28E8               	incf	wreg,w,c
 14432  01827C  2E28               	decfsz	btemp^0,f,c
 14433  01827E  D7FA               	bra	us710999
 14434                           
 14435                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14436  018280  0EF7               	movlw	247
 14437  018282  26E1               	addwf	fsr1l,f,c
 14438  018284  0EFF               	movlw	255
 14439  018286  22E2               	addwfc	fsr1h,f,c
 14440  018288  0012               	return		;funcret
 14441  01828A                     __end_of___lodiv:
 14442                           	opt callstack 0
 14443                           
 14444 ;; *************** function _strncmp *****************
 14445 ;; Defined at:
 14446 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14447 ;; Parameters:    Size  Location     Type
 14448 ;;  _l              2  [STACK] PTR const unsigned char 
 14449 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14450 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14451 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14452 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14453 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14454 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14455 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14456 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14457 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14458 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14459 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14460 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14461 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14462 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14463 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14464 ;;		 -> STR_2(15), STR_1(17), 
 14465 ;;  _r              2  [STACK] PTR const unsigned char 
 14466 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14467 ;;		 -> STR_80(3), STR_76(3), 
 14468 ;;  n               2  [STACK] unsigned int 
 14469 ;; Auto vars:     Size  Location     Type
 14470 ;;  r               2  [STACK] PTR const unsigned char 
 14471 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14472 ;;		 -> STR_80(3), STR_76(3), 
 14473 ;;  l               2  [STACK] PTR const unsigned char 
 14474 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14475 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14476 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14477 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14478 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14479 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14480 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14481 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14482 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14483 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14484 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14485 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14486 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14487 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14488 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14489 ;;		 -> STR_2(15), STR_1(17), 
 14490 ;; Return value:  Size  Location     Type
 14491 ;;                  2  [STACK] int 
 14492 ;; Registers used:
 14493 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14494 ;; Tracked objects:
 14495 ;;		On entry : 0/0
 14496 ;;		On exit  : 0/0
 14497 ;;		Unchanged: 0/0
 14498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14503 ;;Total ram usage:        0 bytes
 14504 ;; Hardware stack levels used:    1
 14505 ;; Hardware stack levels required when called:   15
 14506 ;; This function calls:
 14507 ;;		Nothing
 14508 ;; This function is called by:
 14509 ;;		_vfpfcnvrt
 14510 ;; This function uses a reentrant model
 14511 ;;
 14512                           
 14513                           	psect	text53
 14514  017582                     __ptext53:
 14515                           	opt callstack 0
 14516  017582                     _strncmp:
 14517                           	opt callstack 0
 14518                           
 14519                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14520  017582  52E6               	movf	postinc1,f,c
 14521  017584  52E6               	movf	postinc1,f,c
 14522  017586  52E6               	movf	postinc1,f,c
 14523  017588  52E6               	movf	postinc1,f,c
 14524                           
 14525                           ;stkvar	__l @ sp[(-4)+-2]
 14526                           
 14527                           ;incstack = 0
 14528 ;; hardware stack exceeded
 14529  01758A  0EFA               	movlw	-6
 14530  01758C  006F FF8C  F032    	movff	plusw1,btemp+10
 14531  017592  0EFB               	movlw	-5
 14532  017594  006F FF8C  F033    	movff	plusw1,btemp+11
 14533                           
 14534                           ;stkvar	_l @ sp[(-4)+2]
 14535  01759A  0EFF               	movlw	-1
 14536  01759C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14537  0175A2  0EFE               	movlw	-2
 14538  0175A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14539                           
 14540                           ;stkvar	__r @ sp[(-4)+-4]
 14541  0175AA  0EF8               	movlw	-8
 14542  0175AC  006F FF8C  F032    	movff	plusw1,btemp+10
 14543  0175B2  0EF9               	movlw	-7
 14544  0175B4  006F FF8C  F033    	movff	plusw1,btemp+11
 14545                           
 14546                           ;stkvar	_r @ sp[(-4)+0]
 14547  0175BA  0EFD               	movlw	-3
 14548  0175BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14549  0175C2  0EFC               	movlw	-4
 14550  0175C4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14551                           
 14552                           ;stkvar	_n @ sp[(-4)+-6]
 14553  0175CA  0EF6               	movlw	-10
 14554  0175CC  006F FF8C  F028    	movff	plusw1,btemp
 14555  0175D2  0E01               	movlw	1
 14556  0175D4  5E28               	subwf	btemp^0,f,c
 14557  0175D6  0EF6               	movlw	-10
 14558  0175D8  0060  F0A3  FFE3   	movff	btemp,plusw1
 14559  0175DE  0EF7               	movlw	-9
 14560  0175E0  006F FF8C  F028    	movff	plusw1,btemp
 14561  0175E6  0E00               	movlw	0
 14562  0175E8  5A28               	subwfb	btemp^0,f,c
 14563  0175EA  0EF7               	movlw	-9
 14564  0175EC  0060  F0A3  FFE3   	movff	btemp,plusw1
 14565  0175F2  0EF6               	movlw	-10
 14566  0175F4  28E3               	incf	plusw1,w,c
 14567  0175F6  E13F               	bnz	l9136
 14568  0175F8  0EF7               	movlw	-9
 14569  0175FA  28E3               	incf	plusw1,w,c
 14570  0175FC  A4D8               	btfss	status,2,c
 14571  0175FE  D03B               	goto	l9136
 14572  017600  0E00               	movlw	0
 14573  017602  6E28               	movwf	btemp^0,c
 14574  017604  0E00               	movlw	0
 14575  017606  6E29               	movwf	(btemp+1)^0,c
 14576  017608  D0C7               	goto	l3419
 14577  01760A                     l9134:
 14578                           
 14579                           ;stkvar	_l @ sp[(-4)+2]
 14580  01760A  0EFE               	movlw	-2
 14581  01760C  50E3               	movf	plusw1,w,c
 14582  01760E  0F01               	addlw	1
 14583  017610  6E28               	movwf	btemp^0,c
 14584  017612  0EFE               	movlw	-2
 14585  017614  0060  F0A3  FFE3   	movff	btemp,plusw1
 14586  01761A  6A28               	clrf	btemp^0,c
 14587  01761C  0EFF               	movlw	-1
 14588  01761E  50E3               	movf	plusw1,w,c
 14589  017620  2028               	addwfc	btemp^0,w,c
 14590  017622  6E28               	movwf	btemp^0,c
 14591  017624  0EFF               	movlw	-1
 14592  017626  0060  F0A3  FFE3   	movff	btemp,plusw1
 14593                           
 14594                           ;stkvar	_r @ sp[(-4)+0]
 14595  01762C  0EFC               	movlw	-4
 14596  01762E  50E3               	movf	plusw1,w,c
 14597  017630  0F01               	addlw	1
 14598  017632  6E28               	movwf	btemp^0,c
 14599  017634  0EFC               	movlw	-4
 14600  017636  0060  F0A3  FFE3   	movff	btemp,plusw1
 14601  01763C  6A28               	clrf	btemp^0,c
 14602  01763E  0EFD               	movlw	-3
 14603  017640  50E3               	movf	plusw1,w,c
 14604  017642  2028               	addwfc	btemp^0,w,c
 14605  017644  6E28               	movwf	btemp^0,c
 14606  017646  0EFD               	movlw	-3
 14607  017648  0060  F0A3  FFE3   	movff	btemp,plusw1
 14608                           
 14609                           ;stkvar	_n @ sp[(-4)+-6]
 14610  01764E  0EF6               	movlw	-10
 14611  017650  006F FF8C  F028    	movff	plusw1,btemp
 14612  017656  0E01               	movlw	1
 14613  017658  5E28               	subwf	btemp^0,f,c
 14614  01765A  0EF6               	movlw	-10
 14615  01765C  0060  F0A3  FFE3   	movff	btemp,plusw1
 14616  017662  0EF7               	movlw	-9
 14617  017664  006F FF8C  F028    	movff	plusw1,btemp
 14618  01766A  0E00               	movlw	0
 14619  01766C  5A28               	subwfb	btemp^0,f,c
 14620  01766E  0EF7               	movlw	-9
 14621  017670  0060  F0A3  FFE3   	movff	btemp,plusw1
 14622  017676                     l9136:
 14623                           
 14624                           ;stkvar	_l @ sp[(-4)+2]
 14625  017676  0EFE               	movlw	-2
 14626  017678  006F FF8F FFF6     	movff	plusw1,tblptrl
 14627  01767E  0EFF               	movlw	-1
 14628  017680  006F FF8F FFF7     	movff	plusw1,tblptrh
 14629  017686  0E00               	movlw	low (__mediumconst shr (0+16))
 14630  017688  6EF8               	movwf	tblptru,c
 14631  01768A  0E1F               	movlw	(high __ramtop+-1)
 14632  01768C  64F7               	cpfsgt	tblptrh,c
 14633  01768E  D003               	bra	u8387
 14634  017690  0008               	tblrd		*
 14635  017692  50F5               	movf	tablat,w,c
 14636  017694  D007               	bra	u8380
 14637  017696                     u8387:
 14638  017696  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14639  01769C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14640  0176A2  50EF               	movf	indf0,w,c
 14641  0176A4                     u8380:
 14642  0176A4  0900               	iorlw	0
 14643  0176A6  B4D8               	btfsc	status,2,c
 14644  0176A8  D04A               	goto	u8420
 14645                           
 14646                           ;stkvar	_r @ sp[(-4)+0]
 14647  0176AA  50E1               	movf	fsr1l,w,c
 14648  0176AC  0FFC               	addlw	-4
 14649  0176AE  6ED9               	movwf	fsr2l,c
 14650  0176B0  50E2               	movf	fsr1h,w,c
 14651  0176B2  6EDA               	movwf	fsr2h,c
 14652  0176B4  0EFF               	movlw	255
 14653  0176B6  22DA               	addwfc	fsr2h,f,c
 14654  0176B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 14655  0176BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 14656  0176C4                     	if	0	;tblptru may be non-zero
 14657  0176C4                     	endif
 14658  0176C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14659  0176C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14660  0176C6  6EF8               	movwf	tblptru,c
 14661  0176C8                     	endif
 14662  0176C8  0008               	tblrd		*
 14663  0176CA  50F5               	movf	tablat,w,c
 14664  0176CC  0900               	iorlw	0
 14665  0176CE  B4D8               	btfsc	status,2,c
 14666  0176D0  D036               	goto	u8420
 14667                           
 14668                           ;stkvar	_n @ sp[(-4)+-6]
 14669  0176D2  0EF6               	movlw	-10
 14670  0176D4  006F FF8C  F028    	movff	plusw1,btemp
 14671  0176DA  0EF7               	movlw	-9
 14672  0176DC  50E3               	movf	plusw1,w,c
 14673  0176DE  1028               	iorwf	btemp^0,w,c
 14674  0176E0  B4D8               	btfsc	status,2,c
 14675  0176E2  D02D               	goto	u8420
 14676                           
 14677                           ;stkvar	_r @ sp[(-4)+0]
 14678  0176E4  50E1               	movf	fsr1l,w,c
 14679  0176E6  0FFC               	addlw	-4
 14680  0176E8  6ED9               	movwf	fsr2l,c
 14681  0176EA  50E2               	movf	fsr1h,w,c
 14682  0176EC  6EDA               	movwf	fsr2h,c
 14683  0176EE  0EFF               	movlw	255
 14684  0176F0  22DA               	addwfc	fsr2h,f,c
 14685  0176F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14686  0176F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14687  0176FE                     	if	0	;tblptru may be non-zero
 14688  0176FE                     	endif
 14689  0176FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14690  0176FE  0E00               	movlw	low (__mediumconst shr (0+16))
 14691  017700  6EF8               	movwf	tblptru,c
 14692  017702                     	endif
 14693  017702  0008               	tblrd		*
 14694  017704  006F FFD4  F033    	movff	tablat,btemp+11
 14695                           
 14696                           ;stkvar	_l @ sp[(-4)+2]
 14697  01770A  0EFE               	movlw	-2
 14698  01770C  006F FF8F FFF6     	movff	plusw1,tblptrl
 14699  017712  0EFF               	movlw	-1
 14700  017714  006F FF8F FFF7     	movff	plusw1,tblptrh
 14701  01771A  0E00               	movlw	low (__mediumconst shr (0+16))
 14702  01771C  6EF8               	movwf	tblptru,c
 14703  01771E  0E1F               	movlw	(high __ramtop+-1)
 14704  017720  64F7               	cpfsgt	tblptrh,c
 14705  017722  D003               	bra	u8427
 14706  017724  0008               	tblrd		*
 14707  017726  50F5               	movf	tablat,w,c
 14708  017728  D007               	bra	u8425
 14709  01772A                     u8427:
 14710  01772A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14711  017730  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14712  017736  50EF               	movf	indf0,w,c
 14713  017738                     u8425:
 14714  017738  1833               	xorwf	(btemp+11)^0,w,c
 14715  01773A  B4D8               	btfsc	status,2,c
 14716  01773C  D766               	goto	l9134
 14717  01773E                     u8420:
 14718                           
 14719                           ;stkvar	_l @ sp[(-4)+2]
 14720  01773E  0EFE               	movlw	-2
 14721  017740  006F FF8F FFF6     	movff	plusw1,tblptrl
 14722  017746  0EFF               	movlw	-1
 14723  017748  006F FF8F FFF7     	movff	plusw1,tblptrh
 14724  01774E  0E00               	movlw	low (__mediumconst shr (0+16))
 14725  017750  6EF8               	movwf	tblptru,c
 14726  017752  0E1F               	movlw	(high __ramtop+-1)
 14727  017754  64F7               	cpfsgt	tblptrh,c
 14728  017756  D003               	bra	u8437
 14729  017758  0008               	tblrd		*
 14730  01775A  50F5               	movf	tablat,w,c
 14731  01775C  D007               	bra	u8430
 14732  01775E                     u8437:
 14733  01775E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14734  017764  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14735  01776A  50EF               	movf	indf0,w,c
 14736  01776C                     u8430:
 14737  01776C  6E28               	movwf	btemp^0,c
 14738  01776E  6A29               	clrf	(btemp+1)^0,c
 14739                           
 14740                           ;stkvar	_r @ sp[(-4)+0]
 14741  017770  50E1               	movf	fsr1l,w,c
 14742  017772  0FFC               	addlw	-4
 14743  017774  6ED9               	movwf	fsr2l,c
 14744  017776  50E2               	movf	fsr1h,w,c
 14745  017778  6EDA               	movwf	fsr2h,c
 14746  01777A  0EFF               	movlw	255
 14747  01777C  22DA               	addwfc	fsr2h,f,c
 14748  01777E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14749  017784  006F FF77 FFF7     	movff	postdec2,tblptrh
 14750  01778A                     	if	0	;tblptru may be non-zero
 14751  01778A                     	endif
 14752  01778A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14753  01778A  0E00               	movlw	low (__mediumconst shr (0+16))
 14754  01778C  6EF8               	movwf	tblptru,c
 14755  01778E                     	endif
 14756  01778E  0008               	tblrd		*
 14757  017790  50F5               	movf	tablat,w,c
 14758  017792  5E28               	subwf	btemp^0,f,c
 14759  017794  0E00               	movlw	0
 14760  017796  5A29               	subwfb	(btemp+1)^0,f,c
 14761  017798                     l3419:
 14762                           
 14763                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14764  017798  0EF6               	movlw	246
 14765  01779A  26E1               	addwf	fsr1l,f,c
 14766  01779C  0EFF               	movlw	255
 14767  01779E  22E2               	addwfc	fsr1h,f,c
 14768  0177A0  0012               	return		;funcret
 14769  0177A2                     __end_of_strncmp:
 14770                           	opt callstack 0
 14771                           
 14772 ;; *************** function _stoa *****************
 14773 ;; Defined at:
 14774 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14777 ;;		 -> f(6), NULL(0), 
 14778 ;;  s               2  [STACK] PTR unsigned char 
 14779 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14780 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 14781 ;;		 -> V(190), 
 14782 ;; Auto vars:     Size  Location     Type
 14783 ;;  nuls            7  [STACK] unsigned char [7]
 14784 ;;  l               2  [STACK] int 
 14785 ;;  p               2  [STACK] int 
 14786 ;;  cp              2  [STACK] PTR unsigned char 
 14787 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14788 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 14789 ;;		 -> STR_3(6), V(190), 
 14790 ;;  w               2  [STACK] int 
 14791 ;;  i               2  [STACK] int 
 14792 ;; Return value:  Size  Location     Type
 14793 ;;                  2  [STACK] int 
 14794 ;; Registers used:
 14795 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14796 ;; Tracked objects:
 14797 ;;		On entry : 0/0
 14798 ;;		On exit  : 0/0
 14799 ;;		Unchanged: 0/0
 14800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14805 ;;Total ram usage:        0 bytes
 14806 ;; Hardware stack levels used:    1
 14807 ;; Hardware stack levels required when called:   18
 14808 ;; This function calls:
 14809 ;;		_fputc
 14810 ;;		_strlen
 14811 ;; This function is called by:
 14812 ;;		_vfpfcnvrt
 14813 ;; This function uses a reentrant model
 14814 ;;
 14815                           
 14816                           	psect	text54
 14817  016B90                     __ptext54:
 14818                           	opt callstack 0
 14819  016B90                     _stoa:
 14820                           	opt callstack 0
 14821                           
 14822                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14823  016B90  0E11               	movlw	17
 14824  016B92  26E1               	addwf	fsr1l,f,c
 14825  016B94  0E00               	movlw	0
 14826  016B96  22E2               	addwfc	fsr1h,f,c
 14827                           
 14828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14829                           
 14830                           ;incstack = 0
 14831 ;; hardware stack exceeded
 14832  016B98  EE20  F0EC         	lfsr	2,stoa@F1166
 14833                           
 14834                           ;stkvar	_nuls @ sp[(-17)+0]
 14835  016B9C  0E07               	movlw	7
 14836  016B9E  6E28               	movwf	btemp^0,c
 14837  016BA0  0EEF               	movlw	-17
 14838  016BA2                     us1116999:
 14839  016BA2  006F FF7B FFE3     	movff	postinc2,plusw1
 14840  016BA8  28E8               	incf	wreg,w,c
 14841  016BAA  2E28               	decfsz	btemp^0,f,c
 14842  016BAC  D7FA               	bra	us1116999
 14843                           
 14844                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14845                           ;stkvar	_s @ sp[(-17)+-4]
 14846  016BAE  0EEB               	movlw	-21
 14847  016BB0  006F FF8C  F032    	movff	plusw1,btemp+10
 14848  016BB6  0EEC               	movlw	-20
 14849  016BB8  006F FF8C  F033    	movff	plusw1,btemp+11
 14850                           
 14851                           ;stkvar	_cp @ sp[(-17)+11]
 14852  016BBE  0EFB               	movlw	-5
 14853  016BC0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14854  016BC6  0EFA               	movlw	-6
 14855  016BC8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14856                           
 14857                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14858                           ;stkvar	_cp @ sp[(-17)+11]
 14859  016BCE  0EFA               	movlw	-6
 14860  016BD0  006F FF8C  F028    	movff	plusw1,btemp
 14861  016BD6  0EFB               	movlw	-5
 14862  016BD8  50E3               	movf	plusw1,w,c
 14863  016BDA  1028               	iorwf	btemp^0,w,c
 14864  016BDC  A4D8               	btfss	status,2,c
 14865  016BDE  D00E               	goto	l11876
 14866                           
 14867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14868                           ;stkvar	_nuls @ sp[(-17)+0]
 14869  016BE0  0EEF               	movlw	239
 14870  016BE2  24E1               	addwf	fsr1l,w,c
 14871  016BE4  6E32               	movwf	(btemp+10)^0,c
 14872  016BE6  0EFF               	movlw	255
 14873  016BE8  20E2               	addwfc	fsr1h,w,c
 14874  016BEA  6E33               	movwf	(btemp+11)^0,c
 14875                           
 14876                           ;stkvar	_cp @ sp[(-17)+11]
 14877  016BEC  0EFB               	movlw	-5
 14878  016BEE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14879  016BF4  0EFA               	movlw	-6
 14880  016BF6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14881  016BFC                     l11876:
 14882                           
 14883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14884                           ;stkvar	_cp @ sp[(-17)+11]
 14885  016BFC  0EFA               	movlw	-6
 14886  016BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 14887  016C04  006F FF8F FFE6     	movff	plusw1,postinc1
 14888  016C0A  EC4E  F0CF         	call	_strlen	;wreg free
 14889                           
 14890                           ;stkvar	_l @ sp[(-17)+7]
 14891  016C0E  0EF6               	movlw	-10
 14892  016C10  0060  F0A3  FFE3   	movff	btemp,plusw1
 14893  016C16  0EF7               	movlw	-9
 14894  016C18  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 14895                           
 14896                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14897                           ;stkvar	_p @ sp[(-17)+9]
 14898  016C1E  0EF8               	movlw	-8
 14899  016C20  0060  F12B  FFE3   	movff	_prec,plusw1
 14900  016C26  0EF9               	movlw	-7
 14901  016C28  0060  F12F  FFE3   	movff	_prec+1,plusw1
 14902                           
 14903                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14904                           ;stkvar	_p @ sp[(-17)+9]
 14905  016C2E  0EF9               	movlw	-7
 14906  016C30  BEE3               	btfsc	plusw1,7,c
 14907  016C32  D023               	goto	l2244
 14908                           
 14909                           ;stkvar	_l @ sp[(-17)+7]
 14910                           ;stkvar	_p @ sp[(-17)+9]
 14911  016C34  50E1               	movf	fsr1l,w,c
 14912  016C36  0FF8               	addlw	-8
 14913  016C38  6ED9               	movwf	fsr2l,c
 14914  016C3A  50E2               	movf	fsr1h,w,c
 14915  016C3C  6EDA               	movwf	fsr2h,c
 14916  016C3E  0EFF               	movlw	255
 14917  016C40  22DA               	addwfc	fsr2h,f,c
 14918  016C42  0EF6               	movlw	-10
 14919  016C44  50E3               	movf	plusw1,w,c
 14920  016C46  5CDE               	subwf	postinc2,w,c
 14921  016C48  50DE               	movf	postinc2,w,c
 14922  016C4A  0A80               	xorlw	128
 14923  016C4C  6E28               	movwf	btemp^0,c
 14924  016C4E  0EF7               	movlw	-9
 14925  016C50  50E3               	movf	plusw1,w,c
 14926  016C52  0A80               	xorlw	128
 14927  016C54  5828               	subwfb	btemp^0,w,c
 14928  016C56  B0D8               	btfsc	status,0,c
 14929  016C58  D010               	goto	l2244
 14930                           
 14931                           ;stkvar	_p @ sp[(-17)+9]
 14932                           ;stkvar	_l @ sp[(-17)+7]
 14933  016C5A  0EF8               	movlw	-8
 14934  016C5C  006F FF8C  F028    	movff	plusw1,btemp
 14935  016C62  0EF6               	movlw	-10
 14936  016C64  0060  F0A3  FFE3   	movff	btemp,plusw1
 14937  016C6A  0EF9               	movlw	-7
 14938  016C6C  006F FF8C  F028    	movff	plusw1,btemp
 14939  016C72  0EF7               	movlw	-9
 14940  016C74  0060  F0A3  FFE3   	movff	btemp,plusw1
 14941  016C7A                     l2244:
 14942                           
 14943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14944                           ;stkvar	_l @ sp[(-17)+7]
 14945                           ;stkvar	_p @ sp[(-17)+9]
 14946  016C7A  0EF6               	movlw	-10
 14947  016C7C  006F FF8C  F028    	movff	plusw1,btemp
 14948  016C82  0EF8               	movlw	-8
 14949  016C84  0060  F0A3  FFE3   	movff	btemp,plusw1
 14950  016C8A  0EF7               	movlw	-9
 14951  016C8C  006F FF8C  F028    	movff	plusw1,btemp
 14952  016C92  0EF9               	movlw	-7
 14953  016C94  0060  F0A3  FFE3   	movff	btemp,plusw1
 14954                           
 14955                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14956                           ;stkvar	_w @ sp[(-17)+13]
 14957  016C9A  0EFC               	movlw	-4
 14958  016C9C  0060  F123  FFE3   	movff	_width,plusw1
 14959  016CA2  0EFD               	movlw	-3
 14960  016CA4  0060  F127  FFE3   	movff	_width+1,plusw1
 14961                           
 14962                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14963  016CAA  A04C               	btfss	_flags^0,0,c
 14964  016CAC  D01F               	goto	l11896
 14965  016CAE  D031               	goto	u11210
 14966  016CB0                     l11892:
 14967                           
 14968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14969                           ;stkvar	_fp @ sp[(-17)+-2]
 14970  016CB0  0EED               	movlw	-19
 14971  016CB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14972  016CB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14973  016CBE  0E20               	movlw	32
 14974  016CC0  6EE6               	movwf	postinc1,c
 14975  016CC2  0E00               	movlw	0
 14976  016CC4  6EE6               	movwf	postinc1,c
 14977  016CC6  EC51  F0C7         	call	_fputc	;wreg free
 14978                           
 14979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14980                           ;stkvar	_l @ sp[(-17)+7]
 14981  016CCA  0EF6               	movlw	-10
 14982  016CCC  50E3               	movf	plusw1,w,c
 14983  016CCE  0F01               	addlw	1
 14984  016CD0  6E28               	movwf	btemp^0,c
 14985  016CD2  0EF6               	movlw	-10
 14986  016CD4  0060  F0A3  FFE3   	movff	btemp,plusw1
 14987  016CDA  6A28               	clrf	btemp^0,c
 14988  016CDC  0EF7               	movlw	-9
 14989  016CDE  50E3               	movf	plusw1,w,c
 14990  016CE0  2028               	addwfc	btemp^0,w,c
 14991  016CE2  6E28               	movwf	btemp^0,c
 14992  016CE4  0EF7               	movlw	-9
 14993  016CE6  0060  F0A3  FFE3   	movff	btemp,plusw1
 14994  016CEC                     l11896:
 14995                           
 14996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14997                           ;stkvar	_w @ sp[(-17)+13]
 14998                           ;stkvar	_l @ sp[(-17)+7]
 14999  016CEC  50E1               	movf	fsr1l,w,c
 15000  016CEE  0FF6               	addlw	-10
 15001  016CF0  6ED9               	movwf	fsr2l,c
 15002  016CF2  50E2               	movf	fsr1h,w,c
 15003  016CF4  6EDA               	movwf	fsr2h,c
 15004  016CF6  0EFF               	movlw	255
 15005  016CF8  22DA               	addwfc	fsr2h,f,c
 15006  016CFA  0EFC               	movlw	-4
 15007  016CFC  50E3               	movf	plusw1,w,c
 15008  016CFE  5CDE               	subwf	postinc2,w,c
 15009  016D00  50DE               	movf	postinc2,w,c
 15010  016D02  0A80               	xorlw	128
 15011  016D04  6E28               	movwf	btemp^0,c
 15012  016D06  0EFD               	movlw	-3
 15013  016D08  50E3               	movf	plusw1,w,c
 15014  016D0A  0A80               	xorlw	128
 15015  016D0C  5828               	subwfb	btemp^0,w,c
 15016  016D0E  A0D8               	btfss	status,0,c
 15017  016D10  D7CF               	goto	l11892
 15018  016D12                     u11210:
 15019                           
 15020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15021                           ;stkvar	_i @ sp[(-17)+15]
 15022  016D12  0EFE               	movlw	-2
 15023  016D14  6AE3               	clrf	plusw1,c
 15024  016D16  0EFF               	movlw	-1
 15025  016D18  6AE3               	clrf	plusw1,c
 15026                           
 15027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15028  016D1A  D045               	goto	l11906
 15029  016D1C                     l11900:
 15030                           
 15031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15032                           ;stkvar	_fp @ sp[(-17)+-2]
 15033  016D1C  0EED               	movlw	-19
 15034  016D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 15035  016D24  006F FF8F FFE6     	movff	plusw1,postinc1
 15036                           
 15037                           ;stkvar	_cp @ sp[(-19)+11]
 15038  016D2A  0EF8               	movlw	-8
 15039  016D2C  006F FF8F FFF6     	movff	plusw1,tblptrl
 15040  016D32  0EF9               	movlw	-7
 15041  016D34  006F FF8F FFF7     	movff	plusw1,tblptrh
 15042  016D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 15043  016D3C  6EF8               	movwf	tblptru,c
 15044  016D3E  0E1F               	movlw	(high __ramtop+-1)
 15045  016D40  64F7               	cpfsgt	tblptrh,c
 15046  016D42  D003               	bra	u11227
 15047  016D44  0008               	tblrd		*
 15048  016D46  50F5               	movf	tablat,w,c
 15049  016D48  D007               	bra	u11220
 15050  016D4A                     u11227:
 15051  016D4A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15052  016D50  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15053  016D56  50EF               	movf	indf0,w,c
 15054  016D58                     u11220:
 15055  016D58  6EE6               	movwf	postinc1,c
 15056  016D5A  0E00               	movlw	0
 15057  016D5C  6EE6               	movwf	postinc1,c
 15058  016D5E  EC51  F0C7         	call	_fputc	;wreg free
 15059                           
 15060                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15061                           ;stkvar	_cp @ sp[(-17)+11]
 15062  016D62  0EFA               	movlw	-6
 15063  016D64  50E3               	movf	plusw1,w,c
 15064  016D66  0F01               	addlw	1
 15065  016D68  6E28               	movwf	btemp^0,c
 15066  016D6A  0EFA               	movlw	-6
 15067  016D6C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15068  016D72  6A28               	clrf	btemp^0,c
 15069  016D74  0EFB               	movlw	-5
 15070  016D76  50E3               	movf	plusw1,w,c
 15071  016D78  2028               	addwfc	btemp^0,w,c
 15072  016D7A  6E28               	movwf	btemp^0,c
 15073  016D7C  0EFB               	movlw	-5
 15074  016D7E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15075                           
 15076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15077                           ;stkvar	_i @ sp[(-17)+15]
 15078  016D84  0EFE               	movlw	-2
 15079  016D86  50E3               	movf	plusw1,w,c
 15080  016D88  0F01               	addlw	1
 15081  016D8A  6E28               	movwf	btemp^0,c
 15082  016D8C  0EFE               	movlw	-2
 15083  016D8E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15084  016D94  6A28               	clrf	btemp^0,c
 15085  016D96  0EFF               	movlw	-1
 15086  016D98  50E3               	movf	plusw1,w,c
 15087  016D9A  2028               	addwfc	btemp^0,w,c
 15088  016D9C  6E28               	movwf	btemp^0,c
 15089  016D9E  0EFF               	movlw	-1
 15090  016DA0  0060  F0A3  FFE3   	movff	btemp,plusw1
 15091  016DA6                     l11906:
 15092                           
 15093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15094                           ;stkvar	_p @ sp[(-17)+9]
 15095                           ;stkvar	_i @ sp[(-17)+15]
 15096  016DA6  50E1               	movf	fsr1l,w,c
 15097  016DA8  0FFE               	addlw	-2
 15098  016DAA  6ED9               	movwf	fsr2l,c
 15099  016DAC  50E2               	movf	fsr1h,w,c
 15100  016DAE  6EDA               	movwf	fsr2h,c
 15101  016DB0  0EFF               	movlw	255
 15102  016DB2  22DA               	addwfc	fsr2h,f,c
 15103  016DB4  0EF8               	movlw	-8
 15104  016DB6  50E3               	movf	plusw1,w,c
 15105  016DB8  5CDE               	subwf	postinc2,w,c
 15106  016DBA  50DE               	movf	postinc2,w,c
 15107  016DBC  0A80               	xorlw	128
 15108  016DBE  6E28               	movwf	btemp^0,c
 15109  016DC0  0EF9               	movlw	-7
 15110  016DC2  50E3               	movf	plusw1,w,c
 15111  016DC4  0A80               	xorlw	128
 15112  016DC6  5828               	subwfb	btemp^0,w,c
 15113  016DC8  A0D8               	btfss	status,0,c
 15114  016DCA  D7A8               	goto	l11900
 15115                           
 15116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15117  016DCC  B04C               	btfsc	_flags^0,0,c
 15118  016DCE  D01F               	goto	l11914
 15119  016DD0  D031               	goto	u11250
 15120  016DD2                     l11910:
 15121                           
 15122                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15123                           ;stkvar	_fp @ sp[(-17)+-2]
 15124  016DD2  0EED               	movlw	-19
 15125  016DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 15126  016DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 15127  016DE0  0E20               	movlw	32
 15128  016DE2  6EE6               	movwf	postinc1,c
 15129  016DE4  0E00               	movlw	0
 15130  016DE6  6EE6               	movwf	postinc1,c
 15131  016DE8  EC51  F0C7         	call	_fputc	;wreg free
 15132                           
 15133                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15134                           ;stkvar	_l @ sp[(-17)+7]
 15135  016DEC  0EF6               	movlw	-10
 15136  016DEE  50E3               	movf	plusw1,w,c
 15137  016DF0  0F01               	addlw	1
 15138  016DF2  6E28               	movwf	btemp^0,c
 15139  016DF4  0EF6               	movlw	-10
 15140  016DF6  0060  F0A3  FFE3   	movff	btemp,plusw1
 15141  016DFC  6A28               	clrf	btemp^0,c
 15142  016DFE  0EF7               	movlw	-9
 15143  016E00  50E3               	movf	plusw1,w,c
 15144  016E02  2028               	addwfc	btemp^0,w,c
 15145  016E04  6E28               	movwf	btemp^0,c
 15146  016E06  0EF7               	movlw	-9
 15147  016E08  0060  F0A3  FFE3   	movff	btemp,plusw1
 15148  016E0E                     l11914:
 15149                           
 15150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15151                           ;stkvar	_w @ sp[(-17)+13]
 15152                           ;stkvar	_l @ sp[(-17)+7]
 15153  016E0E  50E1               	movf	fsr1l,w,c
 15154  016E10  0FF6               	addlw	-10
 15155  016E12  6ED9               	movwf	fsr2l,c
 15156  016E14  50E2               	movf	fsr1h,w,c
 15157  016E16  6EDA               	movwf	fsr2h,c
 15158  016E18  0EFF               	movlw	255
 15159  016E1A  22DA               	addwfc	fsr2h,f,c
 15160  016E1C  0EFC               	movlw	-4
 15161  016E1E  50E3               	movf	plusw1,w,c
 15162  016E20  5CDE               	subwf	postinc2,w,c
 15163  016E22  50DE               	movf	postinc2,w,c
 15164  016E24  0A80               	xorlw	128
 15165  016E26  6E28               	movwf	btemp^0,c
 15166  016E28  0EFD               	movlw	-3
 15167  016E2A  50E3               	movf	plusw1,w,c
 15168  016E2C  0A80               	xorlw	128
 15169  016E2E  5828               	subwfb	btemp^0,w,c
 15170  016E30  A0D8               	btfss	status,0,c
 15171  016E32  D7CF               	goto	l11910
 15172  016E34                     u11250:
 15173                           
 15174                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15175                           ;stkvar	_l @ sp[(-17)+7]
 15176  016E34  0EF6               	movlw	-10
 15177  016E36  006F FF8C  F028    	movff	plusw1,btemp
 15178  016E3C  0EF7               	movlw	-9
 15179  016E3E  006F FF8C  F029    	movff	plusw1,btemp+1
 15180                           
 15181                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15182  016E44  0EEB               	movlw	235
 15183  016E46  26E1               	addwf	fsr1l,f,c
 15184  016E48  0EFF               	movlw	255
 15185  016E4A  22E2               	addwfc	fsr1h,f,c
 15186  016E4C  0012               	return		;funcret
 15187  016E4E                     __end_of_stoa:
 15188                           	opt callstack 0
 15189                           
 15190 ;; *************** function _efgtoa *****************
 15191 ;; Defined at:
 15192 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15193 ;; Parameters:    Size  Location     Type
 15194 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15195 ;;		 -> f(6), NULL(0), 
 15196 ;;  f               4  [STACK] PTR struct _IO_FILE
 15197 ;;  c               1  [STACK] unsigned char 
 15198 ;; Auto vars:     Size  Location     Type
 15199 ;;  u               4  [STACK] unsigned char 
 15200 ;;  g               4  [STACK] unsigned char 
 15201 ;;  l               4  [STACK] unsigned char 
 15202 ;;  h               4  [STACK] unsigned char 
 15203 ;;  ou              4  [STACK] unsigned char 
 15204 ;;  n               2  [STACK] int 
 15205 ;;  e               2  [STACK] int 
 15206 ;;  i               2  [STACK] int 
 15207 ;;  w               2  [STACK] int 
 15208 ;;  p               2  [STACK] int 
 15209 ;;  sign            2  [STACK] int 
 15210 ;;  d               2  [STACK] int 
 15211 ;;  ne              2  [STACK] int 
 15212 ;;  m               2  [STACK] int 
 15213 ;;  pp              2  [STACK] int 
 15214 ;;  t               2  [STACK] int 
 15215 ;;  mode            1  [STACK] unsigned char 
 15216 ;;  nmode           1  [STACK] unsigned char 
 15217 ;; Return value:  Size  Location     Type
 15218 ;;                  2  [STACK] int 
 15219 ;; Registers used:
 15220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15221 ;; Tracked objects:
 15222 ;;		On entry : 0/0
 15223 ;;		On exit  : 0/0
 15224 ;;		Unchanged: 0/0
 15225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15230 ;;Total ram usage:        0 bytes
 15231 ;; Hardware stack levels used:    1
 15232 ;; Hardware stack levels required when called:   20
 15233 ;; This function calls:
 15234 ;;		___awdiv
 15235 ;;		___awmod
 15236 ;;		___fladd
 15237 ;;		___fldiv
 15238 ;;		___fleq
 15239 ;;		___flge
 15240 ;;		___flmul
 15241 ;;		___flneg
 15242 ;;		___flsub
 15243 ;;		___fltol
 15244 ;;		___fpclassifyf
 15245 ;;		_floorf
 15246 ;;		_isupper
 15247 ;;		_pad
 15248 ;;		_strcpy
 15249 ;;		_tolower
 15250 ;; This function is called by:
 15251 ;;		_vfpfcnvrt
 15252 ;; This function uses a reentrant model
 15253 ;;
 15254                           
 15255                           	psect	text55
 15256  010000                     __ptext55:
 15257                           	opt callstack 0
 15258  010000                     _efgtoa:
 15259                           	opt callstack 0
 15260                           
 15261                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15262  010000  0E38               	movlw	56
 15263  010002  26E1               	addwf	fsr1l,f,c
 15264  010004  0E00               	movlw	0
 15265  010006  22E2               	addwfc	fsr1h,f,c
 15266                           
 15267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15268                           ;stkvar	_sign @ sp[(-56)+42]
 15269                           
 15270                           ;incstack = 0
 15271 ;; hardware stack exceeded
 15272  010008  0EF2               	movlw	-14
 15273  01000A  6AE3               	clrf	plusw1,c
 15274  01000C  0EF3               	movlw	-13
 15275  01000E  6AE3               	clrf	plusw1,c
 15276                           
 15277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15278                           ;stkvar	_f @ sp[(-56)+-6]
 15279  010010  0EC2               	movlw	-62
 15280  010012  006F FF8C  F030    	movff	plusw1,btemp+8
 15281  010018  0EC3               	movlw	-61
 15282  01001A  006F FF8C  F031    	movff	plusw1,btemp+9
 15283  010020  0EC4               	movlw	-60
 15284  010022  006F FF8C  F032    	movff	plusw1,btemp+10
 15285  010028  0EC5               	movlw	-59
 15286  01002A  006F FF8C  F033    	movff	plusw1,btemp+11
 15287                           
 15288                           ;stkvar	_g @ sp[(-56)+16]
 15289  010030  0ED8               	movlw	-40
 15290  010032  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 15291  010038  0ED9               	movlw	-39
 15292  01003A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 15293  010040  0EDA               	movlw	-38
 15294  010042  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15295  010048  0EDB               	movlw	-37
 15296  01004A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15297                           
 15298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15299                           ;stkvar	_g @ sp[(-56)+16]
 15300  010050  0EDB               	movlw	-37
 15301  010052  AEE3               	btfss	plusw1,7,c
 15302  010054  D02B               	goto	l11574
 15303                           
 15304                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15305  010056  0E01               	movlw	1
 15306  010058  6E32               	movwf	(btemp+10)^0,c
 15307  01005A  0E00               	movlw	0
 15308  01005C  6E33               	movwf	(btemp+11)^0,c
 15309                           
 15310                           ;stkvar	_sign @ sp[(-56)+42]
 15311  01005E  0EF2               	movlw	-14
 15312  010060  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15313  010066  0EF3               	movlw	-13
 15314  010068  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15315                           
 15316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15317                           ;stkvar	_g @ sp[(-56)+16]
 15318  01006E  0ED8               	movlw	-40
 15319  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15320  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15321  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15322  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15323  010088  ECFA  F0D4         	call	___flneg	;wreg free
 15324                           
 15325                           ;stkvar	_g @ sp[(-56)+16]
 15326  01008C  0ED8               	movlw	-40
 15327  01008E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15328  010094  0ED9               	movlw	-39
 15329  010096  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15330  01009C  0EDA               	movlw	-38
 15331  01009E  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15332  0100A4  0EDB               	movlw	-37
 15333  0100A6  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15334  0100AC                     l11574:
 15335                           
 15336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15337                           ;stkvar	_n @ sp[(-56)+32]
 15338  0100AC  0EE8               	movlw	-24
 15339  0100AE  6AE3               	clrf	plusw1,c
 15340  0100B0  0EE9               	movlw	-23
 15341  0100B2  6AE3               	clrf	plusw1,c
 15342                           
 15343                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15344                           ;stkvar	_w @ sp[(-56)+38]
 15345  0100B4  0EEE               	movlw	-18
 15346  0100B6  0060  F123  FFE3   	movff	_width,plusw1
 15347  0100BC  0EEF               	movlw	-17
 15348  0100BE  0060  F127  FFE3   	movff	_width+1,plusw1
 15349                           
 15350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15351                           ;stkvar	_sign @ sp[(-56)+42]
 15352  0100C4  0EF2               	movlw	-14
 15353  0100C6  006F FF8C  F028    	movff	plusw1,btemp
 15354  0100CC  0EF3               	movlw	-13
 15355  0100CE  50E3               	movf	plusw1,w,c
 15356  0100D0  1028               	iorwf	btemp^0,w,c
 15357  0100D2  A4D8               	btfss	status,2,c
 15358  0100D4  D002               	goto	u10660
 15359  0100D6  A44C               	btfss	_flags^0,2,c
 15360  0100D8  D036               	goto	l11594
 15361  0100DA                     u10660:
 15362                           
 15363                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15364                           ;stkvar	_sign @ sp[(-56)+42]
 15365  0100DA  0EF2               	movlw	-14
 15366  0100DC  006F FF8C  F028    	movff	plusw1,btemp
 15367  0100E2  0EF3               	movlw	-13
 15368  0100E4  50E3               	movf	plusw1,w,c
 15369  0100E6  1028               	iorwf	btemp^0,w,c
 15370  0100E8  A4D8               	btfss	status,2,c
 15371  0100EA  D002               	goto	l11586
 15372  0100EC  0E2B               	movlw	43
 15373  0100EE  D001               	goto	L14
 15374  0100F0                     l11586:
 15375  0100F0  0E2D               	movlw	45
 15376  0100F2                     L14:
 15377  0100F2  6E32               	movwf	(btemp+10)^0,c
 15378  0100F4  0E00               	movlw	0
 15379  0100F6  6E33               	movwf	(btemp+11)^0,c
 15380                           
 15381                           ;stkvar	_efgtoa$5388 @ sp[(-56)+10]
 15382  0100F8  0ED2               	movlw	-46
 15383  0100FA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15384  010100  0ED3               	movlw	-45
 15385  010102  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15386                           
 15387                           ;stkvar	_efgtoa$5388 @ sp[(-56)+10]
 15388  010108  0ED2               	movlw	-46
 15389  01010A  006F FF8C  F3AE    	movff	plusw1,_dbuf
 15390                           
 15391                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15392                           ;stkvar	_n @ sp[(-56)+32]
 15393  010110  0EE8               	movlw	-24
 15394  010112  50E3               	movf	plusw1,w,c
 15395  010114  0F01               	addlw	1
 15396  010116  6E28               	movwf	btemp^0,c
 15397  010118  0EE8               	movlw	-24
 15398  01011A  0060  F0A3  FFE3   	movff	btemp,plusw1
 15399  010120  6A28               	clrf	btemp^0,c
 15400  010122  0EE9               	movlw	-23
 15401  010124  50E3               	movf	plusw1,w,c
 15402  010126  2028               	addwfc	btemp^0,w,c
 15403  010128  6E28               	movwf	btemp^0,c
 15404  01012A  0EE9               	movlw	-23
 15405  01012C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15406                           
 15407                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15408                           ;stkvar	_w @ sp[(-56)+38]
 15409  010132  50E1               	movf	fsr1l,w,c
 15410  010134  0FEE               	addlw	-18
 15411  010136  6ED9               	movwf	fsr2l,c
 15412  010138  50E2               	movf	fsr1h,w,c
 15413  01013A  6EDA               	movwf	fsr2h,c
 15414  01013C  0EFF               	movlw	255
 15415  01013E  22DA               	addwfc	fsr2h,f,c
 15416  010140  06DE               	decf	postinc2,f,c
 15417  010142  0E00               	movlw	0
 15418  010144  5ADD               	subwfb	postdec2,f,c
 15419  010146                     l11594:
 15420                           
 15421                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15422                           ;stkvar	_g @ sp[(-56)+16]
 15423  010146  0ED8               	movlw	-40
 15424  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15425  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15426  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15427  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15428  010160  ECBA  F0BF         	call	___fpclassifyf	;wreg free
 15429  010164  0428               	decf	btemp^0,w,c
 15430  010166  1029               	iorwf	(btemp+1)^0,w,c
 15431  010168  A4D8               	btfss	status,2,c
 15432  01016A  D076               	goto	l11612
 15433  01016C  0EBF               	movlw	191
 15434  01016E  6E32               	movwf	(btemp+10)^0,c
 15435  010170  0EFF               	movlw	255
 15436  010172  6E33               	movwf	(btemp+11)^0,c
 15437                           
 15438                           ;stkvar	_c @ sp[(-56)+-7]
 15439  010174  0EC1               	movlw	-63
 15440  010176  50E3               	movf	plusw1,w,c
 15441  010178  6E30               	movwf	(btemp+8)^0,c
 15442  01017A  6A31               	clrf	(btemp+9)^0,c
 15443  01017C  5032               	movf	(btemp+10)^0,w,c
 15444  01017E  2630               	addwf	(btemp+8)^0,f,c
 15445  010180  5033               	movf	(btemp+11)^0,w,c
 15446  010182  2231               	addwfc	(btemp+9)^0,f,c
 15447  010184  5031               	movf	(btemp+9)^0,w,c
 15448  010186  E106               	bnz	u10690
 15449  010188  0E1A               	movlw	26
 15450  01018A  5C30               	subwf	(btemp+8)^0,w,c
 15451  01018C  B0D8               	btfsc	status,0,c
 15452  01018E  D002               	goto	u10690
 15453  010190  0E01               	movlw	1
 15454  010192  D001               	goto	u10700
 15455  010194                     u10690:
 15456  010194  0E00               	movlw	0
 15457  010196                     u10700:
 15458  010196  6E32               	movwf	(btemp+10)^0,c
 15459  010198  6A33               	clrf	(btemp+11)^0,c
 15460                           
 15461                           ;stkvar	_efgtoa$5389 @ sp[(-56)+8]
 15462  01019A  0ED0               	movlw	-48
 15463  01019C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15464  0101A2  0ED1               	movlw	-47
 15465  0101A4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15466                           
 15467                           ;stkvar	_efgtoa$5389 @ sp[(-56)+8]
 15468  0101AA  0ED0               	movlw	-48
 15469  0101AC  006F FF8C  F028    	movff	plusw1,btemp
 15470  0101B2  0ED1               	movlw	-47
 15471  0101B4  50E3               	movf	plusw1,w,c
 15472  0101B6  1028               	iorwf	btemp^0,w,c
 15473  0101B8  B4D8               	btfsc	status,2,c
 15474  0101BA  D017               	goto	l11604
 15475                           
 15476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15477  0101BC  0ED6               	movlw	low STR_66
 15478  0101BE  6EE6               	movwf	postinc1,c
 15479  0101C0  0EFF               	movlw	high STR_66
 15480  0101C2  6EE6               	movwf	postinc1,c
 15481                           
 15482                           ;stkvar	_n @ sp[(-58)+32]
 15483  0101C4  0EAE               	movlw	low _dbuf
 15484  0101C6  6E32               	movwf	(btemp+10)^0,c
 15485  0101C8  0E03               	movlw	high _dbuf
 15486  0101CA  6E33               	movwf	(btemp+11)^0,c
 15487  0101CC  0EE6               	movlw	-26
 15488  0101CE  50E3               	movf	plusw1,w,c
 15489  0101D0  2632               	addwf	(btemp+10)^0,f,c
 15490  0101D2  0EE7               	movlw	-25
 15491  0101D4  50E3               	movf	plusw1,w,c
 15492  0101D6  2233               	addwfc	(btemp+11)^0,f,c
 15493  0101D8  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15494  0101DE  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15495  0101E4  EC72  F0CC         	call	_strcpy	;wreg free
 15496                           
 15497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15498  0101E8  D016               	goto	l11606
 15499  0101EA                     l11604:
 15500                           
 15501                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15502  0101EA  0EDE               	movlw	low STR_67
 15503  0101EC  6EE6               	movwf	postinc1,c
 15504  0101EE  0EFF               	movlw	high STR_67
 15505  0101F0  6EE6               	movwf	postinc1,c
 15506                           
 15507                           ;stkvar	_n @ sp[(-58)+32]
 15508  0101F2  0EAE               	movlw	low _dbuf
 15509  0101F4  6E32               	movwf	(btemp+10)^0,c
 15510  0101F6  0E03               	movlw	high _dbuf
 15511  0101F8  6E33               	movwf	(btemp+11)^0,c
 15512  0101FA  0EE6               	movlw	-26
 15513  0101FC  50E3               	movf	plusw1,w,c
 15514  0101FE  2632               	addwf	(btemp+10)^0,f,c
 15515  010200  0EE7               	movlw	-25
 15516  010202  50E3               	movf	plusw1,w,c
 15517  010204  2233               	addwfc	(btemp+11)^0,f,c
 15518  010206  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15519  01020C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15520  010212  EC72  F0CC         	call	_strcpy	;wreg free
 15521  010216                     l11606:
 15522                           
 15523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15524                           ;stkvar	_w @ sp[(-56)+38]
 15525  010216  50E1               	movf	fsr1l,w,c
 15526  010218  0FEE               	addlw	-18
 15527  01021A  6ED9               	movwf	fsr2l,c
 15528  01021C  50E2               	movf	fsr1h,w,c
 15529  01021E  6EDA               	movwf	fsr2h,c
 15530  010220  0EFF               	movlw	255
 15531  010222  22DA               	addwfc	fsr2h,f,c
 15532  010224  0EFD               	movlw	253
 15533  010226  26DE               	addwf	postinc2,f,c
 15534  010228  0EFF               	movlw	255
 15535  01022A  22DD               	addwfc	postdec2,f,c
 15536  01022C                     l11608:
 15537                           
 15538                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15539                           ;stkvar	_w @ sp[(-56)+38]
 15540  01022C  0EEE               	movlw	-18
 15541  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15542  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15543  01023A  0EAE               	movlw	low _dbuf
 15544  01023C  6EE6               	movwf	postinc1,c
 15545  01023E  0E03               	movlw	high _dbuf
 15546  010240  6EE6               	movwf	postinc1,c
 15547                           
 15548                           ;stkvar	_fp @ sp[(-60)+-2]
 15549  010242  0EC2               	movlw	-62
 15550  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15551  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15552  010250  EC6F  F0C8         	call	_pad	;wreg free
 15553  010254  EF1D  F089         	goto	l2162
 15554  010258                     l11612:
 15555                           
 15556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15557                           ;stkvar	_g @ sp[(-56)+16]
 15558  010258  0ED8               	movlw	-40
 15559  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15560  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15561  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15562  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15563  010272  ECBA  F0BF         	call	___fpclassifyf	;wreg free
 15564  010276  5028               	movf	btemp^0,w,c
 15565  010278  1029               	iorwf	(btemp+1)^0,w,c
 15566  01027A  A4D8               	btfss	status,2,c
 15567  01027C  D056               	goto	l11630
 15568  01027E  0EBF               	movlw	191
 15569  010280  6E32               	movwf	(btemp+10)^0,c
 15570  010282  0EFF               	movlw	255
 15571  010284  6E33               	movwf	(btemp+11)^0,c
 15572                           
 15573                           ;stkvar	_c @ sp[(-56)+-7]
 15574  010286  0EC1               	movlw	-63
 15575  010288  50E3               	movf	plusw1,w,c
 15576  01028A  6E30               	movwf	(btemp+8)^0,c
 15577  01028C  6A31               	clrf	(btemp+9)^0,c
 15578  01028E  5032               	movf	(btemp+10)^0,w,c
 15579  010290  2630               	addwf	(btemp+8)^0,f,c
 15580  010292  5033               	movf	(btemp+11)^0,w,c
 15581  010294  2231               	addwfc	(btemp+9)^0,f,c
 15582  010296  5031               	movf	(btemp+9)^0,w,c
 15583  010298  E106               	bnz	u10730
 15584  01029A  0E1A               	movlw	26
 15585  01029C  5C30               	subwf	(btemp+8)^0,w,c
 15586  01029E  B0D8               	btfsc	status,0,c
 15587  0102A0  D002               	goto	u10730
 15588  0102A2  0E01               	movlw	1
 15589  0102A4  D001               	goto	u10740
 15590  0102A6                     u10730:
 15591  0102A6  0E00               	movlw	0
 15592  0102A8                     u10740:
 15593  0102A8  6E32               	movwf	(btemp+10)^0,c
 15594  0102AA  6A33               	clrf	(btemp+11)^0,c
 15595                           
 15596                           ;stkvar	_efgtoa$5393 @ sp[(-56)+6]
 15597  0102AC  0ECE               	movlw	-50
 15598  0102AE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15599  0102B4  0ECF               	movlw	-49
 15600  0102B6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15601                           
 15602                           ;stkvar	_efgtoa$5393 @ sp[(-56)+6]
 15603  0102BC  0ECE               	movlw	-50
 15604  0102BE  006F FF8C  F028    	movff	plusw1,btemp
 15605  0102C4  0ECF               	movlw	-49
 15606  0102C6  50E3               	movf	plusw1,w,c
 15607  0102C8  1028               	iorwf	btemp^0,w,c
 15608  0102CA  B4D8               	btfsc	status,2,c
 15609  0102CC  D017               	goto	l11622
 15610                           
 15611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15612  0102CE  0EDA               	movlw	low STR_70
 15613  0102D0  6EE6               	movwf	postinc1,c
 15614  0102D2  0EFF               	movlw	high STR_70
 15615  0102D4  6EE6               	movwf	postinc1,c
 15616                           
 15617                           ;stkvar	_n @ sp[(-58)+32]
 15618  0102D6  0EAE               	movlw	low _dbuf
 15619  0102D8  6E32               	movwf	(btemp+10)^0,c
 15620  0102DA  0E03               	movlw	high _dbuf
 15621  0102DC  6E33               	movwf	(btemp+11)^0,c
 15622  0102DE  0EE6               	movlw	-26
 15623  0102E0  50E3               	movf	plusw1,w,c
 15624  0102E2  2632               	addwf	(btemp+10)^0,f,c
 15625  0102E4  0EE7               	movlw	-25
 15626  0102E6  50E3               	movf	plusw1,w,c
 15627  0102E8  2233               	addwfc	(btemp+11)^0,f,c
 15628  0102EA  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15629  0102F0  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15630  0102F6  EC72  F0CC         	call	_strcpy	;wreg free
 15631                           
 15632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15633  0102FA  D78D               	goto	l11606
 15634  0102FC                     l11622:
 15635                           
 15636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15637  0102FC  0EE2               	movlw	low STR_71
 15638  0102FE  6EE6               	movwf	postinc1,c
 15639  010300  0EFF               	movlw	high STR_71
 15640  010302  6EE6               	movwf	postinc1,c
 15641                           
 15642                           ;stkvar	_n @ sp[(-58)+32]
 15643  010304  0EAE               	movlw	low _dbuf
 15644  010306  6E32               	movwf	(btemp+10)^0,c
 15645  010308  0E03               	movlw	high _dbuf
 15646  01030A  6E33               	movwf	(btemp+11)^0,c
 15647  01030C  0EE6               	movlw	-26
 15648  01030E  50E3               	movf	plusw1,w,c
 15649  010310  2632               	addwf	(btemp+10)^0,f,c
 15650  010312  0EE7               	movlw	-25
 15651  010314  50E3               	movf	plusw1,w,c
 15652  010316  2233               	addwfc	(btemp+11)^0,f,c
 15653  010318  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15654  01031E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15655  010324  EC72  F0CC         	call	_strcpy	;wreg free
 15656  010328  D776               	goto	l11606
 15657  01032A                     l11630:
 15658                           
 15659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15660  01032A  0E00               	movlw	0
 15661  01032C  6E30               	movwf	(btemp+8)^0,c
 15662  01032E  0E00               	movlw	0
 15663  010330  6E31               	movwf	(btemp+9)^0,c
 15664  010332  0E80               	movlw	128
 15665  010334  6E32               	movwf	(btemp+10)^0,c
 15666  010336  0E3F               	movlw	63
 15667  010338  6E33               	movwf	(btemp+11)^0,c
 15668                           
 15669                           ;stkvar	_u @ sp[(-56)+12]
 15670  01033A  0ED4               	movlw	-44
 15671  01033C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 15672  010342  0ED5               	movlw	-43
 15673  010344  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 15674  01034A  0ED6               	movlw	-42
 15675  01034C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15676  010352  0ED7               	movlw	-41
 15677  010354  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15678                           
 15679                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15680                           ;stkvar	_e @ sp[(-56)+34]
 15681  01035A  0EEA               	movlw	-22
 15682  01035C  6AE3               	clrf	plusw1,c
 15683  01035E  0EEB               	movlw	-21
 15684  010360  6AE3               	clrf	plusw1,c
 15685                           
 15686                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15687  010362  0E00               	movlw	0
 15688  010364  6EE6               	movwf	postinc1,c
 15689  010366  0E00               	movlw	0
 15690  010368  6EE6               	movwf	postinc1,c
 15691  01036A  0E00               	movlw	0
 15692  01036C  6EE6               	movwf	postinc1,c
 15693  01036E  0E00               	movlw	0
 15694  010370  6EE6               	movwf	postinc1,c
 15695                           
 15696                           ;stkvar	_g @ sp[(-60)+16]
 15697  010372  0ED4               	movlw	-44
 15698  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15699  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15700  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15701  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15702  01038C  ECDC  F0CC         	call	___fleq	;wreg free
 15703  010390  A028               	btfss	btemp& (0+255),0,c
 15704  010392  D039               	goto	l11642
 15705  010394  D0BC               	goto	u10780
 15706  010396                     l11638:
 15707                           
 15708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15709  010396  0E00               	movlw	0
 15710  010398  6EE6               	movwf	postinc1,c
 15711  01039A  0E00               	movlw	0
 15712  01039C  6EE6               	movwf	postinc1,c
 15713  01039E  0E20               	movlw	32
 15714  0103A0  6EE6               	movwf	postinc1,c
 15715  0103A2  0E41               	movlw	65
 15716  0103A4  6EE6               	movwf	postinc1,c
 15717                           
 15718                           ;stkvar	_u @ sp[(-60)+12]
 15719  0103A6  0ED0               	movlw	-48
 15720  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15721  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15722  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15723  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15724  0103C0  EC0F  F099         	call	___flmul	;wreg free
 15725                           
 15726                           ;stkvar	_u @ sp[(-56)+12]
 15727  0103C4  0ED4               	movlw	-44
 15728  0103C6  0060  F0A3  FFE3   	movff	btemp,plusw1
 15729  0103CC  0ED5               	movlw	-43
 15730  0103CE  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15731  0103D4  0ED6               	movlw	-42
 15732  0103D6  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15733  0103DC  0ED7               	movlw	-41
 15734  0103DE  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15735                           
 15736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15737                           ;stkvar	_e @ sp[(-56)+34]
 15738  0103E4  0EEA               	movlw	-22
 15739  0103E6  50E3               	movf	plusw1,w,c
 15740  0103E8  0F01               	addlw	1
 15741  0103EA  6E28               	movwf	btemp^0,c
 15742  0103EC  0EEA               	movlw	-22
 15743  0103EE  0060  F0A3  FFE3   	movff	btemp,plusw1
 15744  0103F4  6A28               	clrf	btemp^0,c
 15745  0103F6  0EEB               	movlw	-21
 15746  0103F8  50E3               	movf	plusw1,w,c
 15747  0103FA  2028               	addwfc	btemp^0,w,c
 15748  0103FC  6E28               	movwf	btemp^0,c
 15749  0103FE  0EEB               	movlw	-21
 15750  010400  0060  F0A3  FFE3   	movff	btemp,plusw1
 15751  010406                     l11642:
 15752                           
 15753                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15754  010406  0E00               	movlw	0
 15755  010408  6EE6               	movwf	postinc1,c
 15756  01040A  0E00               	movlw	0
 15757  01040C  6EE6               	movwf	postinc1,c
 15758  01040E  0E20               	movlw	32
 15759  010410  6EE6               	movwf	postinc1,c
 15760  010412  0E41               	movlw	65
 15761  010414  6EE6               	movwf	postinc1,c
 15762                           
 15763                           ;stkvar	_u @ sp[(-60)+12]
 15764  010416  0ED0               	movlw	-48
 15765  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15766  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15767  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15768  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15769  010430  EC0F  F099         	call	___flmul	;wreg free
 15770  010434  0060  F0A3  FFE6   	movff	btemp,postinc1
 15771  01043A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 15772  010440  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 15773  010446  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 15774                           
 15775                           ;stkvar	_g @ sp[(-60)+16]
 15776  01044C  0ED4               	movlw	-44
 15777  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15778  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15779  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15780  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15781  010466  EC70  F0C3         	call	___flge	;wreg free
 15782  01046A  A028               	btfss	btemp& (0+255),0,c
 15783  01046C  D032               	goto	l11648
 15784  01046E  D793               	goto	l11638
 15785  010470                     l11644:
 15786                           
 15787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15788  010470  0E00               	movlw	0
 15789  010472  6EE6               	movwf	postinc1,c
 15790  010474  0E00               	movlw	0
 15791  010476  6EE6               	movwf	postinc1,c
 15792  010478  0E20               	movlw	32
 15793  01047A  6EE6               	movwf	postinc1,c
 15794  01047C  0E41               	movlw	65
 15795  01047E  6EE6               	movwf	postinc1,c
 15796                           
 15797                           ;stkvar	_u @ sp[(-60)+12]
 15798  010480  0ED0               	movlw	-48
 15799  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15800  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15801  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15802  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15803  01049A  EC9B  F0A4         	call	___fldiv	;wreg free
 15804                           
 15805                           ;stkvar	_u @ sp[(-56)+12]
 15806  01049E  0ED4               	movlw	-44
 15807  0104A0  0060  F0A3  FFE3   	movff	btemp,plusw1
 15808  0104A6  0ED5               	movlw	-43
 15809  0104A8  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15810  0104AE  0ED6               	movlw	-42
 15811  0104B0  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15812  0104B6  0ED7               	movlw	-41
 15813  0104B8  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15814                           
 15815                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15816                           ;stkvar	_e @ sp[(-56)+34]
 15817  0104BE  50E1               	movf	fsr1l,w,c
 15818  0104C0  0FEA               	addlw	-22
 15819  0104C2  6ED9               	movwf	fsr2l,c
 15820  0104C4  50E2               	movf	fsr1h,w,c
 15821  0104C6  6EDA               	movwf	fsr2h,c
 15822  0104C8  0EFF               	movlw	255
 15823  0104CA  22DA               	addwfc	fsr2h,f,c
 15824  0104CC  06DE               	decf	postinc2,f,c
 15825  0104CE  0E00               	movlw	0
 15826  0104D0  5ADD               	subwfb	postdec2,f,c
 15827  0104D2                     l11648:
 15828                           
 15829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15830                           ;stkvar	_u @ sp[(-56)+12]
 15831  0104D2  0ED4               	movlw	-44
 15832  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15833  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15834  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15835  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15836                           
 15837                           ;stkvar	_g @ sp[(-60)+16]
 15838  0104EC  0ED4               	movlw	-44
 15839  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15840  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15841  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15842  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15843  010506  EC70  F0C3         	call	___flge	;wreg free
 15844  01050A  A028               	btfss	btemp& (0+255),0,c
 15845  01050C  D7B1               	goto	l11644
 15846  01050E                     u10780:
 15847                           
 15848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15849                           ;stkvar	_c @ sp[(-56)+-7]
 15850  01050E  0EC1               	movlw	-63
 15851  010510  50E3               	movf	plusw1,w,c
 15852  010512  6EE6               	movwf	postinc1,c
 15853  010514  0E00               	movlw	0
 15854  010516  6EE6               	movwf	postinc1,c
 15855  010518  EC95  F0D1         	call	_tolower	;wreg free
 15856                           
 15857                           ;stkvar	_mode @ sp[(-56)+54]
 15858  01051C  0EFE               	movlw	-2
 15859  01051E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15860                           
 15861                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15862                           ;stkvar	_mode @ sp[(-56)+54]
 15863                           ;stkvar	_nmode @ sp[(-56)+55]
 15864  010524  0EFE               	movlw	-2
 15865  010526  006F FF8C  F028    	movff	plusw1,btemp
 15866  01052C  0EFF               	movlw	-1
 15867  01052E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15868                           
 15869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15870                           ;stkvar	_mode @ sp[(-56)+54]
 15871  010534  0EFE               	movlw	-2
 15872  010536  006F FF8C  F028    	movff	plusw1,btemp
 15873  01053C  0E67               	movlw	103
 15874  01053E  1828               	xorwf	btemp^0,w,c
 15875  010540  A4D8               	btfss	status,2,c
 15876  010542  D025               	goto	l11666
 15877                           
 15878                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15879  010544  504A               	movf	_prec^0,w,c
 15880  010546  104B               	iorwf	(_prec+1)^0,w,c
 15881  010548  A4D8               	btfss	status,2,c
 15882  01054A  D004               	goto	l11660
 15883                           
 15884                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15885  01054C  0E00               	movlw	0
 15886  01054E  6E4B               	movwf	(_prec+1)^0,c
 15887  010550  0E01               	movlw	1
 15888  010552  6E4A               	movwf	_prec^0,c
 15889  010554                     l11660:
 15890                           
 15891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15892  010554  BE4B               	btfsc	(_prec+1)^0,7,c
 15893  010556  D005               	goto	u10810
 15894  010558  504B               	movf	(_prec+1)^0,w,c
 15895  01055A  E110               	bnz	l11664
 15896  01055C  044A               	decf	_prec^0,w,c
 15897  01055E  B0D8               	btfsc	status,0,c
 15898  010560  D00D               	goto	l11664
 15899  010562                     u10810:
 15900  010562  0E06               	movlw	6
 15901  010564  6E32               	movwf	(btemp+10)^0,c
 15902  010566  0E00               	movlw	0
 15903  010568  6E33               	movwf	(btemp+11)^0,c
 15904                           
 15905                           ;stkvar	_p @ sp[(-56)+40]
 15906  01056A  0EF0               	movlw	-16
 15907  01056C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15908  010572  0EF1               	movlw	-15
 15909  010574  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15910  01057A  D00C               	goto	l11672
 15911  01057C                     l11664:
 15912                           
 15913                           ;stkvar	_p @ sp[(-56)+40]
 15914  01057C  0EF0               	movlw	-16
 15915  01057E  0060  F12B  FFE3   	movff	_prec,plusw1
 15916  010584  0EF1               	movlw	-15
 15917  010586  0060  F12F  FFE3   	movff	_prec+1,plusw1
 15918  01058C  D003               	goto	l11672
 15919  01058E                     l11666:
 15920                           
 15921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15922  01058E  AE4B               	btfss	(_prec+1)^0,7,c
 15923  010590  D7F5               	goto	l11664
 15924  010592  D7E7               	goto	u10810
 15925  010594                     l11672:
 15926                           
 15927                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15928                           ;stkvar	_mode @ sp[(-56)+54]
 15929  010594  0EFE               	movlw	-2
 15930  010596  006F FF8C  F028    	movff	plusw1,btemp
 15931  01059C  0E67               	movlw	103
 15932  01059E  1828               	xorwf	btemp^0,w,c
 15933  0105A0  A4D8               	btfss	status,2,c
 15934  0105A2  D02F               	goto	l11682
 15935                           
 15936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15937                           ;stkvar	_e @ sp[(-56)+34]
 15938  0105A4  0EEB               	movlw	-21
 15939  0105A6  AEE3               	btfss	plusw1,7,c
 15940  0105A8  D00E               	goto	u10840
 15941  0105AA  0EEA               	movlw	-22
 15942  0105AC  006F FF8C  F028    	movff	plusw1,btemp
 15943  0105B2  0EFC               	movlw	252
 15944  0105B4  5E28               	subwf	btemp^0,f,c
 15945  0105B6  0EEB               	movlw	-21
 15946  0105B8  006F FF8C  F028    	movff	plusw1,btemp
 15947  0105BE  0EFF               	movlw	255
 15948  0105C0  5A28               	subwfb	btemp^0,f,c
 15949  0105C2  A0D8               	btfss	status,0,c
 15950  0105C4  D018               	goto	l11680
 15951  0105C6                     u10840:
 15952                           
 15953                           ;stkvar	_e @ sp[(-56)+34]
 15954                           ;stkvar	_p @ sp[(-56)+40]
 15955  0105C6  0EF0               	movlw	-16
 15956  0105C8  50E3               	movf	plusw1,w,c
 15957  0105CA  0FFF               	addlw	255
 15958  0105CC  6E32               	movwf	(btemp+10)^0,c
 15959  0105CE  0EF1               	movlw	-15
 15960  0105D0  006F FF8C  F033    	movff	plusw1,btemp+11
 15961  0105D6  0EFF               	movlw	255
 15962  0105D8  2233               	addwfc	(btemp+11)^0,f,c
 15963  0105DA  0EEA               	movlw	-22
 15964  0105DC  50E3               	movf	plusw1,w,c
 15965  0105DE  5C32               	subwf	(btemp+10)^0,w,c
 15966  0105E0  5033               	movf	(btemp+11)^0,w,c
 15967  0105E2  0A80               	xorlw	128
 15968  0105E4  6E28               	movwf	btemp^0,c
 15969  0105E6  0EEB               	movlw	-21
 15970  0105E8  50E3               	movf	plusw1,w,c
 15971  0105EA  0A80               	xorlw	128
 15972  0105EC  5828               	subwfb	btemp^0,w,c
 15973  0105EE  A0D8               	btfss	status,0,c
 15974  0105F0  D002               	goto	l11680
 15975                           
 15976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15977  0105F2  0E66               	movlw	102
 15978  0105F4  D001               	goto	L15
 15979  0105F6                     l11680:
 15980                           
 15981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15982  0105F6  0E65               	movlw	101
 15983  0105F8                     L15:
 15984  0105F8  6E33               	movwf	(btemp+11)^0,c
 15985                           
 15986                           ;stkvar	_nmode @ sp[(-56)+55]
 15987  0105FA  0EFF               	movlw	-1
 15988  0105FC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15989  010602                     l11682:
 15990                           
 15991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15992                           ;stkvar	_p @ sp[(-56)+40]
 15993                           ;stkvar	_m @ sp[(-56)+48]
 15994  010602  0EF0               	movlw	-16
 15995  010604  006F FF8C  F028    	movff	plusw1,btemp
 15996  01060A  0EF8               	movlw	-8
 15997  01060C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15998  010612  0EF1               	movlw	-15
 15999  010614  006F FF8C  F028    	movff	plusw1,btemp
 16000  01061A  0EF9               	movlw	-7
 16001  01061C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16002                           
 16003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 16004                           ;stkvar	_mode @ sp[(-56)+54]
 16005  010622  0EFE               	movlw	-2
 16006  010624  006F FF8C  F028    	movff	plusw1,btemp
 16007  01062A  0E67               	movlw	103
 16008  01062C  1828               	xorwf	btemp^0,w,c
 16009  01062E  A4D8               	btfss	status,2,c
 16010  010630  D00B               	goto	u10880
 16011                           
 16012                           ;stkvar	_nmode @ sp[(-56)+55]
 16013  010632  0EFF               	movlw	-1
 16014  010634  006F FF8C  F028    	movff	plusw1,btemp
 16015  01063A  0E66               	movlw	102
 16016  01063C  1828               	xorwf	btemp^0,w,c
 16017  01063E  A4D8               	btfss	status,2,c
 16018  010640  D014               	goto	l2191
 16019                           
 16020                           ;stkvar	_e @ sp[(-56)+34]
 16021  010642  0EEB               	movlw	-21
 16022  010644  AEE3               	btfss	plusw1,7,c
 16023  010646  D011               	goto	l2191
 16024  010648                     u10880:
 16025                           
 16026                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16027                           ;stkvar	_m @ sp[(-56)+48]
 16028  010648  0EF8               	movlw	-8
 16029  01064A  50E3               	movf	plusw1,w,c
 16030  01064C  0F01               	addlw	1
 16031  01064E  6E28               	movwf	btemp^0,c
 16032  010650  0EF8               	movlw	-8
 16033  010652  0060  F0A3  FFE3   	movff	btemp,plusw1
 16034  010658  6A28               	clrf	btemp^0,c
 16035  01065A  0EF9               	movlw	-7
 16036  01065C  50E3               	movf	plusw1,w,c
 16037  01065E  2028               	addwfc	btemp^0,w,c
 16038  010660  6E28               	movwf	btemp^0,c
 16039  010662  0EF9               	movlw	-7
 16040  010664  0060  F0A3  FFE3   	movff	btemp,plusw1
 16041  01066A                     l2191:
 16042                           
 16043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16044                           ;stkvar	_nmode @ sp[(-56)+55]
 16045  01066A  0EFF               	movlw	-1
 16046  01066C  006F FF8C  F028    	movff	plusw1,btemp
 16047  010672  0E66               	movlw	102
 16048  010674  1828               	xorwf	btemp^0,w,c
 16049  010676  A4D8               	btfss	status,2,c
 16050  010678  D03B               	goto	l11702
 16051                           
 16052                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16053                           ;stkvar	_e @ sp[(-56)+34]
 16054  01067A  0EEB               	movlw	-21
 16055  01067C  AEE3               	btfss	plusw1,7,c
 16056  01067E  D01C               	goto	l11698
 16057                           
 16058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16059  010680  0E00               	movlw	0
 16060  010682  6E30               	movwf	(btemp+8)^0,c
 16061  010684  0E00               	movlw	0
 16062  010686  6E31               	movwf	(btemp+9)^0,c
 16063  010688  0E80               	movlw	128
 16064  01068A  6E32               	movwf	(btemp+10)^0,c
 16065  01068C  0E3F               	movlw	63
 16066  01068E  6E33               	movwf	(btemp+11)^0,c
 16067                           
 16068                           ;stkvar	_u @ sp[(-56)+12]
 16069  010690  0ED4               	movlw	-44
 16070  010692  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16071  010698  0ED5               	movlw	-43
 16072  01069A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16073  0106A0  0ED6               	movlw	-42
 16074  0106A2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16075  0106A8  0ED7               	movlw	-41
 16076  0106AA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16077                           
 16078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16079                           ;stkvar	_e @ sp[(-56)+34]
 16080  0106B0  0EEA               	movlw	-22
 16081  0106B2  6AE3               	clrf	plusw1,c
 16082  0106B4  0EEB               	movlw	-21
 16083  0106B6  6AE3               	clrf	plusw1,c
 16084  0106B8                     l11698:
 16085                           
 16086                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16087                           ;stkvar	_mode @ sp[(-56)+54]
 16088  0106B8  0EFE               	movlw	-2
 16089  0106BA  006F FF8C  F028    	movff	plusw1,btemp
 16090  0106C0  0E67               	movlw	103
 16091  0106C2  1828               	xorwf	btemp^0,w,c
 16092  0106C4  B4D8               	btfsc	status,2,c
 16093  0106C6  D014               	goto	l11702
 16094                           
 16095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16096                           ;stkvar	_e @ sp[(-56)+34]
 16097                           ;stkvar	_m @ sp[(-56)+48]
 16098  0106C8  0EF8               	movlw	-8
 16099  0106CA  50E3               	movf	plusw1,w,c
 16100  0106CC  6E28               	movwf	btemp^0,c
 16101  0106CE  0EEA               	movlw	-22
 16102  0106D0  50E3               	movf	plusw1,w,c
 16103  0106D2  2628               	addwf	btemp^0,f,c
 16104  0106D4  0EF8               	movlw	-8
 16105  0106D6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16106  0106DC  0EF9               	movlw	-7
 16107  0106DE  50E3               	movf	plusw1,w,c
 16108  0106E0  6E28               	movwf	btemp^0,c
 16109  0106E2  0EEB               	movlw	-21
 16110  0106E4  50E3               	movf	plusw1,w,c
 16111  0106E6  2228               	addwfc	btemp^0,f,c
 16112  0106E8  0EF9               	movlw	-7
 16113  0106EA  0060  F0A3  FFE3   	movff	btemp,plusw1
 16114  0106F0                     l11702:
 16115                           
 16116                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16117                           ;stkvar	_i @ sp[(-56)+36]
 16118  0106F0  0EEC               	movlw	-20
 16119  0106F2  6AE3               	clrf	plusw1,c
 16120  0106F4  0EED               	movlw	-19
 16121  0106F6  6AE3               	clrf	plusw1,c
 16122                           
 16123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16124                           ;stkvar	_g @ sp[(-56)+16]
 16125  0106F8  0ED8               	movlw	-40
 16126  0106FA  006F FF8C  F030    	movff	plusw1,btemp+8
 16127  010700  0ED9               	movlw	-39
 16128  010702  006F FF8C  F031    	movff	plusw1,btemp+9
 16129  010708  0EDA               	movlw	-38
 16130  01070A  006F FF8C  F032    	movff	plusw1,btemp+10
 16131  010710  0EDB               	movlw	-37
 16132  010712  006F FF8C  F033    	movff	plusw1,btemp+11
 16133                           
 16134                           ;stkvar	_h @ sp[(-56)+24]
 16135  010718  0EE0               	movlw	-32
 16136  01071A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16137  010720  0EE1               	movlw	-31
 16138  010722  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16139  010728  0EE2               	movlw	-30
 16140  01072A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16141  010730  0EE3               	movlw	-29
 16142  010732  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16143                           
 16144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16145                           ;stkvar	_u @ sp[(-56)+12]
 16146  010738  0ED4               	movlw	-44
 16147  01073A  006F FF8C  F030    	movff	plusw1,btemp+8
 16148  010740  0ED5               	movlw	-43
 16149  010742  006F FF8C  F031    	movff	plusw1,btemp+9
 16150  010748  0ED6               	movlw	-42
 16151  01074A  006F FF8C  F032    	movff	plusw1,btemp+10
 16152  010750  0ED7               	movlw	-41
 16153  010752  006F FF8C  F033    	movff	plusw1,btemp+11
 16154                           
 16155                           ;stkvar	_ou @ sp[(-56)+28]
 16156  010758  0EE4               	movlw	-28
 16157  01075A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16158  010760  0EE5               	movlw	-27
 16159  010762  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16160  010768  0EE6               	movlw	-26
 16161  01076A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16162  010770  0EE7               	movlw	-25
 16163  010772  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16164                           
 16165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16166  010778  D0D6               	goto	l11718
 16167  01077A                     l11708:
 16168                           
 16169                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16170                           ;stkvar	_u @ sp[(-56)+12]
 16171  01077A  0ED4               	movlw	-44
 16172  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16173  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16174  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16175  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16176                           
 16177                           ;stkvar	_h @ sp[(-60)+24]
 16178  010794  0EDC               	movlw	-36
 16179  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16180  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16181  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16182  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16183  0107AE  EC9B  F0A4         	call	___fldiv	;wreg free
 16184  0107B2  0060  F0A3  FFE6   	movff	btemp,postinc1
 16185  0107B8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16186  0107BE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16187  0107C4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16188  0107CA  EC9C  F0AF         	call	_floorf	;wreg free
 16189                           
 16190                           ;stkvar	_l @ sp[(-56)+20]
 16191  0107CE  0EDC               	movlw	-36
 16192  0107D0  0060  F0A3  FFE3   	movff	btemp,plusw1
 16193  0107D6  0EDD               	movlw	-35
 16194  0107D8  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16195  0107DE  0EDE               	movlw	-34
 16196  0107E0  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16197  0107E6  0EDF               	movlw	-33
 16198  0107E8  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16199                           
 16200                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16201                           ;stkvar	_l @ sp[(-56)+20]
 16202  0107EE  0EDC               	movlw	-36
 16203  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16204  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16205  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16206  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16207  010808  ECFF  F0C1         	call	___fltol	;wreg free
 16208  01080C  0060  F0A0  F032   	movff	btemp,btemp+10
 16209  010812  0060  F0A4  F033   	movff	btemp+1,btemp+11
 16210                           
 16211                           ;stkvar	_d @ sp[(-56)+44]
 16212  010818  0EF4               	movlw	-12
 16213  01081A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16214  010820  0EF5               	movlw	-11
 16215  010822  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16216                           
 16217                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16218                           ;stkvar	_u @ sp[(-56)+12]
 16219  010828  0ED4               	movlw	-44
 16220  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16221  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16222  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16223  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16224                           
 16225                           ;stkvar	_l @ sp[(-60)+20]
 16226  010842  0ED8               	movlw	-40
 16227  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16228  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16229  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16230  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16231  01085C  EC0F  F099         	call	___flmul	;wreg free
 16232  010860  0060  F0A3  FFE6   	movff	btemp,postinc1
 16233  010866  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16234  01086C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16235  010872  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16236                           
 16237                           ;stkvar	_h @ sp[(-60)+24]
 16238  010878  0EDC               	movlw	-36
 16239  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16240  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16241  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16242  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16243  010892  EC41  F0D5         	call	___flsub	;wreg free
 16244                           
 16245                           ;stkvar	_h @ sp[(-56)+24]
 16246  010896  0EE0               	movlw	-32
 16247  010898  0060  F0A3  FFE3   	movff	btemp,plusw1
 16248  01089E  0EE1               	movlw	-31
 16249  0108A0  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16250  0108A6  0EE2               	movlw	-30
 16251  0108A8  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16252  0108AE  0EE3               	movlw	-29
 16253  0108B0  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16254                           
 16255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16256  0108B6  0E00               	movlw	0
 16257  0108B8  6EE6               	movwf	postinc1,c
 16258  0108BA  0E00               	movlw	0
 16259  0108BC  6EE6               	movwf	postinc1,c
 16260  0108BE  0E20               	movlw	32
 16261  0108C0  6EE6               	movwf	postinc1,c
 16262  0108C2  0E41               	movlw	65
 16263  0108C4  6EE6               	movwf	postinc1,c
 16264                           
 16265                           ;stkvar	_u @ sp[(-60)+12]
 16266  0108C6  0ED0               	movlw	-48
 16267  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16268  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16269  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16270  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16271  0108E0  EC9B  F0A4         	call	___fldiv	;wreg free
 16272                           
 16273                           ;stkvar	_u @ sp[(-56)+12]
 16274  0108E4  0ED4               	movlw	-44
 16275  0108E6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16276  0108EC  0ED5               	movlw	-43
 16277  0108EE  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16278  0108F4  0ED6               	movlw	-42
 16279  0108F6  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16280  0108FC  0ED7               	movlw	-41
 16281  0108FE  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16282                           
 16283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16284                           ;stkvar	_i @ sp[(-56)+36]
 16285  010904  0EEC               	movlw	-20
 16286  010906  50E3               	movf	plusw1,w,c
 16287  010908  0F01               	addlw	1
 16288  01090A  6E28               	movwf	btemp^0,c
 16289  01090C  0EEC               	movlw	-20
 16290  01090E  0060  F0A3  FFE3   	movff	btemp,plusw1
 16291  010914  6A28               	clrf	btemp^0,c
 16292  010916  0EED               	movlw	-19
 16293  010918  50E3               	movf	plusw1,w,c
 16294  01091A  2028               	addwfc	btemp^0,w,c
 16295  01091C  6E28               	movwf	btemp^0,c
 16296  01091E  0EED               	movlw	-19
 16297  010920  0060  F0A3  FFE3   	movff	btemp,plusw1
 16298  010926                     l11718:
 16299                           
 16300                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16301                           ;stkvar	_m @ sp[(-56)+48]
 16302                           ;stkvar	_i @ sp[(-56)+36]
 16303  010926  50E1               	movf	fsr1l,w,c
 16304  010928  0FEC               	addlw	-20
 16305  01092A  6ED9               	movwf	fsr2l,c
 16306  01092C  50E2               	movf	fsr1h,w,c
 16307  01092E  6EDA               	movwf	fsr2h,c
 16308  010930  0EFF               	movlw	255
 16309  010932  22DA               	addwfc	fsr2h,f,c
 16310  010934  0EF8               	movlw	-8
 16311  010936  50E3               	movf	plusw1,w,c
 16312  010938  5CDE               	subwf	postinc2,w,c
 16313  01093A  50DE               	movf	postinc2,w,c
 16314  01093C  0A80               	xorlw	128
 16315  01093E  6E28               	movwf	btemp^0,c
 16316  010940  0EF9               	movlw	-7
 16317  010942  50E3               	movf	plusw1,w,c
 16318  010944  0A80               	xorlw	128
 16319  010946  5828               	subwfb	btemp^0,w,c
 16320  010948  A0D8               	btfss	status,0,c
 16321  01094A  D717               	goto	l11708
 16322                           
 16323                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16324  01094C  0E00               	movlw	0
 16325  01094E  6EE6               	movwf	postinc1,c
 16326  010950  0E00               	movlw	0
 16327  010952  6EE6               	movwf	postinc1,c
 16328  010954  0EA0               	movlw	160
 16329  010956  6EE6               	movwf	postinc1,c
 16330  010958  0E40               	movlw	64
 16331  01095A  6EE6               	movwf	postinc1,c
 16332                           
 16333                           ;stkvar	_u @ sp[(-60)+12]
 16334  01095C  0ED0               	movlw	-48
 16335  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16336  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16337  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16338  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16339  010976  EC0F  F099         	call	___flmul	;wreg free
 16340                           
 16341                           ;stkvar	_l @ sp[(-56)+20]
 16342  01097A  0EDC               	movlw	-36
 16343  01097C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16344  010982  0EDD               	movlw	-35
 16345  010984  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16346  01098A  0EDE               	movlw	-34
 16347  01098C  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16348  010992  0EDF               	movlw	-33
 16349  010994  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16350                           
 16351                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16352                           ;stkvar	_l @ sp[(-56)+20]
 16353  01099A  0EDC               	movlw	-36
 16354  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16355  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16356  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16357  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16358                           
 16359                           ;stkvar	_h @ sp[(-60)+24]
 16360  0109B4  0EDC               	movlw	-36
 16361  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16362  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16363  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16364  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16365  0109CE  EC70  F0C3         	call	___flge	;wreg free
 16366  0109D2  A028               	btfss	btemp& (0+255),0,c
 16367  0109D4  D021               	goto	u10950
 16368                           
 16369                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16370                           ;stkvar	_l @ sp[(-56)+20]
 16371                           
 16372                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16373                           
 16374                           ;stkvar	_l @ sp[(-56)+20]
 16375                           
 16376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16377  0109D6  0EDC               	movlw	-36
 16378  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16379  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16380  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16381  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16382                           
 16383                           ;stkvar	_h @ sp[(-60)+24]
 16384  0109F0  0EDC               	movlw	-36
 16385  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16386  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16387  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16388  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16389  010A0A  ECDC  F0CC         	call	___fleq	;wreg free
 16390  010A0E  A028               	btfss	btemp& (0+255),0,c
 16391  010A10  D01B               	goto	l11732
 16392                           
 16393                           ;stkvar	_d @ sp[(-56)+44]
 16394  010A12  0EF4               	movlw	-12
 16395  010A14  B0E3               	btfsc	plusw1,0,c
 16396  010A16  D018               	goto	l11732
 16397  010A18                     u10950:
 16398                           
 16399                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16400  010A18  0E00               	movlw	0
 16401  010A1A  6E30               	movwf	(btemp+8)^0,c
 16402  010A1C  0E00               	movlw	0
 16403  010A1E  6E31               	movwf	(btemp+9)^0,c
 16404  010A20  0E00               	movlw	0
 16405  010A22  6E32               	movwf	(btemp+10)^0,c
 16406  010A24  0E00               	movlw	0
 16407  010A26  6E33               	movwf	(btemp+11)^0,c
 16408                           
 16409                           ;stkvar	_l @ sp[(-56)+20]
 16410  010A28  0EDC               	movlw	-36
 16411  010A2A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16412  010A30  0EDD               	movlw	-35
 16413  010A32  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16414  010A38  0EDE               	movlw	-34
 16415  010A3A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16416  010A40  0EDF               	movlw	-33
 16417  010A42  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16418  010A48                     l11732:
 16419                           
 16420                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16421                           ;stkvar	_l @ sp[(-56)+20]
 16422  010A48  0EDC               	movlw	-36
 16423  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16424  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16425  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16426  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16427                           
 16428                           ;stkvar	_g @ sp[(-60)+16]
 16429  010A62  0ED4               	movlw	-44
 16430  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16431  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16432  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16433  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16434  010A7C  EC24  F09D         	call	___fladd	;wreg free
 16435                           
 16436                           ;stkvar	_h @ sp[(-56)+24]
 16437  010A80  0EE0               	movlw	-32
 16438  010A82  0060  F0A3  FFE3   	movff	btemp,plusw1
 16439  010A88  0EE1               	movlw	-31
 16440  010A8A  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16441  010A90  0EE2               	movlw	-30
 16442  010A92  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16443  010A98  0EE3               	movlw	-29
 16444  010A9A  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16445                           
 16446                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16447                           ;stkvar	_ou @ sp[(-56)+28]
 16448  010AA0  0EE4               	movlw	-28
 16449  010AA2  006F FF8C  F030    	movff	plusw1,btemp+8
 16450  010AA8  0EE5               	movlw	-27
 16451  010AAA  006F FF8C  F031    	movff	plusw1,btemp+9
 16452  010AB0  0EE6               	movlw	-26
 16453  010AB2  006F FF8C  F032    	movff	plusw1,btemp+10
 16454  010AB8  0EE7               	movlw	-25
 16455  010ABA  006F FF8C  F033    	movff	plusw1,btemp+11
 16456                           
 16457                           ;stkvar	_u @ sp[(-56)+12]
 16458  010AC0  0ED4               	movlw	-44
 16459  010AC2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16460  010AC8  0ED5               	movlw	-43
 16461  010ACA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16462  010AD0  0ED6               	movlw	-42
 16463  010AD2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16464  010AD8  0ED7               	movlw	-41
 16465  010ADA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16466                           
 16467                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16468                           ;stkvar	_nmode @ sp[(-56)+55]
 16469  010AE0  0EFF               	movlw	-1
 16470  010AE2  006F FF8C  F028    	movff	plusw1,btemp
 16471  010AE8  0E65               	movlw	101
 16472  010AEA  1828               	xorwf	btemp^0,w,c
 16473  010AEC  B4D8               	btfsc	status,2,c
 16474  010AEE  D011               	goto	l11740
 16475                           
 16476                           ;stkvar	_e @ sp[(-56)+34]
 16477                           ;stkvar	_ne @ sp[(-56)+46]
 16478  010AF0  0EEA               	movlw	-22
 16479  010AF2  006F FF8C  F028    	movff	plusw1,btemp
 16480  010AF8  0EF6               	movlw	-10
 16481  010AFA  0060  F0A3  FFE3   	movff	btemp,plusw1
 16482  010B00  0EEB               	movlw	-21
 16483  010B02  006F FF8C  F028    	movff	plusw1,btemp
 16484  010B08  0EF7               	movlw	-9
 16485  010B0A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16486  010B10  D004               	goto	l2206
 16487  010B12                     l11740:
 16488                           
 16489                           ;stkvar	_ne @ sp[(-56)+46]
 16490  010B12  0EF6               	movlw	-10
 16491  010B14  6AE3               	clrf	plusw1,c
 16492  010B16  0EF7               	movlw	-9
 16493  010B18  6AE3               	clrf	plusw1,c
 16494  010B1A                     l2206:
 16495                           
 16496                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16497                           ;stkvar	_pp @ sp[(-56)+50]
 16498  010B1A  0EFA               	movlw	-6
 16499  010B1C  6AE3               	clrf	plusw1,c
 16500  010B1E  0EFB               	movlw	-5
 16501  010B20  6AE3               	clrf	plusw1,c
 16502                           
 16503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16504                           ;stkvar	_t @ sp[(-56)+52]
 16505  010B22  0EFC               	movlw	-4
 16506  010B24  6AE3               	clrf	plusw1,c
 16507  010B26  0EFD               	movlw	-3
 16508  010B28  6AE3               	clrf	plusw1,c
 16509                           
 16510                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16511                           ;stkvar	_i @ sp[(-56)+36]
 16512  010B2A  0EEC               	movlw	-20
 16513  010B2C  6AE3               	clrf	plusw1,c
 16514  010B2E  0EED               	movlw	-19
 16515  010B30  6AE3               	clrf	plusw1,c
 16516                           
 16517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16518  010B32  D1B7               	goto	l11792
 16519  010B34                     l11742:
 16520                           
 16521                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16522                           ;stkvar	_u @ sp[(-56)+12]
 16523  010B34  0ED4               	movlw	-44
 16524  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16525  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16526  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16527  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16528                           
 16529                           ;stkvar	_h @ sp[(-60)+24]
 16530  010B4E  0EDC               	movlw	-36
 16531  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16532  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16533  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16534  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16535  010B68  EC9B  F0A4         	call	___fldiv	;wreg free
 16536  010B6C  0060  F0A3  FFE6   	movff	btemp,postinc1
 16537  010B72  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16538  010B78  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16539  010B7E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16540  010B84  EC9C  F0AF         	call	_floorf	;wreg free
 16541                           
 16542                           ;stkvar	_l @ sp[(-56)+20]
 16543  010B88  0EDC               	movlw	-36
 16544  010B8A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16545  010B90  0EDD               	movlw	-35
 16546  010B92  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16547  010B98  0EDE               	movlw	-34
 16548  010B9A  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16549  010BA0  0EDF               	movlw	-33
 16550  010BA2  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16551                           
 16552                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16553                           ;stkvar	_l @ sp[(-56)+20]
 16554  010BA8  0EDC               	movlw	-36
 16555  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16556  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16557  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16558  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16559  010BC2  ECFF  F0C1         	call	___fltol	;wreg free
 16560  010BC6  0060  F0A0  F032   	movff	btemp,btemp+10
 16561  010BCC  0060  F0A4  F033   	movff	btemp+1,btemp+11
 16562                           
 16563                           ;stkvar	_d @ sp[(-56)+44]
 16564  010BD2  0EF4               	movlw	-12
 16565  010BD4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16566  010BDA  0EF5               	movlw	-11
 16567  010BDC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16568                           
 16569                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16570  010BE2  B84C               	btfsc	_flags^0,4,c
 16571  010BE4  D026               	goto	l11756
 16572                           
 16573                           ;stkvar	_d @ sp[(-56)+44]
 16574  010BE6  0EF4               	movlw	-12
 16575  010BE8  006F FF8C  F028    	movff	plusw1,btemp
 16576  010BEE  0EF5               	movlw	-11
 16577  010BF0  50E3               	movf	plusw1,w,c
 16578  010BF2  1028               	iorwf	btemp^0,w,c
 16579  010BF4  A4D8               	btfss	status,2,c
 16580  010BF6  D01D               	goto	l11756
 16581                           
 16582                           ;stkvar	_mode @ sp[(-56)+54]
 16583  010BF8  0EFE               	movlw	-2
 16584  010BFA  006F FF8C  F028    	movff	plusw1,btemp
 16585  010C00  0E67               	movlw	103
 16586  010C02  1828               	xorwf	btemp^0,w,c
 16587  010C04  A4D8               	btfss	status,2,c
 16588  010C06  D015               	goto	l11756
 16589                           
 16590                           ;stkvar	_ne @ sp[(-56)+46]
 16591  010C08  0EF7               	movlw	-9
 16592  010C0A  AEE3               	btfss	plusw1,7,c
 16593  010C0C  D012               	goto	l11756
 16594                           
 16595                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16596                           ;stkvar	_t @ sp[(-56)+52]
 16597  010C0E  0EFC               	movlw	-4
 16598  010C10  50E3               	movf	plusw1,w,c
 16599  010C12  0F01               	addlw	1
 16600  010C14  6E28               	movwf	btemp^0,c
 16601  010C16  0EFC               	movlw	-4
 16602  010C18  0060  F0A3  FFE3   	movff	btemp,plusw1
 16603  010C1E  6A28               	clrf	btemp^0,c
 16604  010C20  0EFD               	movlw	-3
 16605  010C22  50E3               	movf	plusw1,w,c
 16606  010C24  2028               	addwfc	btemp^0,w,c
 16607  010C26  6E28               	movwf	btemp^0,c
 16608  010C28  0EFD               	movlw	-3
 16609  010C2A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16610                           
 16611                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16612  010C30  D0AF               	goto	l11784
 16613  010C32                     l11756:
 16614                           
 16615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16616                           ;stkvar	_pp @ sp[(-56)+50]
 16617  010C32  0EFA               	movlw	-6
 16618  010C34  006F FF8C  F028    	movff	plusw1,btemp
 16619  010C3A  0EFB               	movlw	-5
 16620  010C3C  50E3               	movf	plusw1,w,c
 16621  010C3E  1028               	iorwf	btemp^0,w,c
 16622  010C40  A4D8               	btfss	status,2,c
 16623  010C42  D070               	goto	l11776
 16624                           
 16625                           ;stkvar	_ne @ sp[(-56)+46]
 16626  010C44  0EF7               	movlw	-9
 16627  010C46  AEE3               	btfss	plusw1,7,c
 16628  010C48  D06D               	goto	l11776
 16629                           
 16630                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16631                           ;stkvar	_n @ sp[(-56)+32]
 16632  010C4A  0EE8               	movlw	-24
 16633  010C4C  006F FF8C  F032    	movff	plusw1,btemp+10
 16634  010C52  0EE9               	movlw	-23
 16635  010C54  006F FF8C  F033    	movff	plusw1,btemp+11
 16636  010C5A  0EAE               	movlw	low _dbuf
 16637  010C5C  2432               	addwf	(btemp+10)^0,w,c
 16638  010C5E  6ED9               	movwf	fsr2l,c
 16639  010C60  0E03               	movlw	high _dbuf
 16640  010C62  2033               	addwfc	(btemp+11)^0,w,c
 16641  010C64  6EDA               	movwf	fsr2h,c
 16642  010C66  0E2E               	movlw	46
 16643  010C68  6EDF               	movwf	indf2,c
 16644                           
 16645                           ;stkvar	_n @ sp[(-56)+32]
 16646  010C6A  0EE8               	movlw	-24
 16647  010C6C  50E3               	movf	plusw1,w,c
 16648  010C6E  0F01               	addlw	1
 16649  010C70  6E28               	movwf	btemp^0,c
 16650  010C72  0EE8               	movlw	-24
 16651  010C74  0060  F0A3  FFE3   	movff	btemp,plusw1
 16652  010C7A  6A28               	clrf	btemp^0,c
 16653  010C7C  0EE9               	movlw	-23
 16654  010C7E  50E3               	movf	plusw1,w,c
 16655  010C80  2028               	addwfc	btemp^0,w,c
 16656  010C82  6E28               	movwf	btemp^0,c
 16657  010C84  0EE9               	movlw	-23
 16658  010C86  0060  F0A3  FFE3   	movff	btemp,plusw1
 16659                           
 16660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16661                           ;stkvar	_w @ sp[(-56)+38]
 16662  010C8C  50E1               	movf	fsr1l,w,c
 16663  010C8E  0FEE               	addlw	-18
 16664  010C90  6ED9               	movwf	fsr2l,c
 16665  010C92  50E2               	movf	fsr1h,w,c
 16666  010C94  6EDA               	movwf	fsr2h,c
 16667  010C96  0EFF               	movlw	255
 16668  010C98  22DA               	addwfc	fsr2h,f,c
 16669  010C9A  06DE               	decf	postinc2,f,c
 16670  010C9C  0E00               	movlw	0
 16671  010C9E  5ADD               	subwfb	postdec2,f,c
 16672                           
 16673                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16674  010CA0  0E01               	movlw	1
 16675  010CA2  6E32               	movwf	(btemp+10)^0,c
 16676  010CA4  0E00               	movlw	0
 16677  010CA6  6E33               	movwf	(btemp+11)^0,c
 16678                           
 16679                           ;stkvar	_pp @ sp[(-56)+50]
 16680  010CA8  0EFA               	movlw	-6
 16681  010CAA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16682  010CB0  0EFB               	movlw	-5
 16683  010CB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16684  010CB8  D035               	goto	l11776
 16685  010CBA                     l11768:
 16686                           
 16687                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16688                           ;stkvar	_n @ sp[(-56)+32]
 16689  010CBA  0EE8               	movlw	-24
 16690  010CBC  006F FF8C  F032    	movff	plusw1,btemp+10
 16691  010CC2  0EE9               	movlw	-23
 16692  010CC4  006F FF8C  F033    	movff	plusw1,btemp+11
 16693  010CCA  0EAE               	movlw	low _dbuf
 16694  010CCC  2432               	addwf	(btemp+10)^0,w,c
 16695  010CCE  6ED9               	movwf	fsr2l,c
 16696  010CD0  0E03               	movlw	high _dbuf
 16697  010CD2  2033               	addwfc	(btemp+11)^0,w,c
 16698  010CD4  6EDA               	movwf	fsr2h,c
 16699  010CD6  0E30               	movlw	48
 16700  010CD8  6EDF               	movwf	indf2,c
 16701                           
 16702                           ;stkvar	_n @ sp[(-56)+32]
 16703  010CDA  0EE8               	movlw	-24
 16704  010CDC  50E3               	movf	plusw1,w,c
 16705  010CDE  0F01               	addlw	1
 16706  010CE0  6E28               	movwf	btemp^0,c
 16707  010CE2  0EE8               	movlw	-24
 16708  010CE4  0060  F0A3  FFE3   	movff	btemp,plusw1
 16709  010CEA  6A28               	clrf	btemp^0,c
 16710  010CEC  0EE9               	movlw	-23
 16711  010CEE  50E3               	movf	plusw1,w,c
 16712  010CF0  2028               	addwfc	btemp^0,w,c
 16713  010CF2  6E28               	movwf	btemp^0,c
 16714  010CF4  0EE9               	movlw	-23
 16715  010CF6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16716                           
 16717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16718                           ;stkvar	_w @ sp[(-56)+38]
 16719  010CFC  50E1               	movf	fsr1l,w,c
 16720  010CFE  0FEE               	addlw	-18
 16721  010D00  6ED9               	movwf	fsr2l,c
 16722  010D02  50E2               	movf	fsr1h,w,c
 16723  010D04  6EDA               	movwf	fsr2h,c
 16724  010D06  0EFF               	movlw	255
 16725  010D08  22DA               	addwfc	fsr2h,f,c
 16726  010D0A  06DE               	decf	postinc2,f,c
 16727  010D0C  0E00               	movlw	0
 16728  010D0E  5ADD               	subwfb	postdec2,f,c
 16729                           
 16730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16731                           ;stkvar	_t @ sp[(-56)+52]
 16732  010D10  50E1               	movf	fsr1l,w,c
 16733  010D12  0FFC               	addlw	-4
 16734  010D14  6ED9               	movwf	fsr2l,c
 16735  010D16  50E2               	movf	fsr1h,w,c
 16736  010D18  6EDA               	movwf	fsr2h,c
 16737  010D1A  0EFF               	movlw	255
 16738  010D1C  22DA               	addwfc	fsr2h,f,c
 16739  010D1E  06DE               	decf	postinc2,f,c
 16740  010D20  0E00               	movlw	0
 16741  010D22  5ADD               	subwfb	postdec2,f,c
 16742  010D24                     l11776:
 16743                           
 16744                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16745                           ;stkvar	_t @ sp[(-56)+52]
 16746  010D24  0EFC               	movlw	-4
 16747  010D26  006F FF8C  F028    	movff	plusw1,btemp
 16748  010D2C  0EFD               	movlw	-3
 16749  010D2E  50E3               	movf	plusw1,w,c
 16750  010D30  1028               	iorwf	btemp^0,w,c
 16751  010D32  A4D8               	btfss	status,2,c
 16752  010D34  D7C2               	goto	l11768
 16753                           
 16754                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16755                           ;stkvar	_n @ sp[(-56)+32]
 16756  010D36  0EE8               	movlw	-24
 16757  010D38  006F FF8C  F032    	movff	plusw1,btemp+10
 16758  010D3E  0EE9               	movlw	-23
 16759  010D40  006F FF8C  F033    	movff	plusw1,btemp+11
 16760  010D46  0EAE               	movlw	low _dbuf
 16761  010D48  2432               	addwf	(btemp+10)^0,w,c
 16762  010D4A  6ED9               	movwf	fsr2l,c
 16763  010D4C  0E03               	movlw	high _dbuf
 16764  010D4E  2033               	addwfc	(btemp+11)^0,w,c
 16765  010D50  6EDA               	movwf	fsr2h,c
 16766                           
 16767                           ;stkvar	_d @ sp[(-56)+44]
 16768  010D52  0EF4               	movlw	-12
 16769  010D54  50E3               	movf	plusw1,w,c
 16770  010D56  0F30               	addlw	48
 16771  010D58  6EDF               	movwf	indf2,c
 16772                           
 16773                           ;stkvar	_n @ sp[(-56)+32]
 16774  010D5A  0EE8               	movlw	-24
 16775  010D5C  50E3               	movf	plusw1,w,c
 16776  010D5E  0F01               	addlw	1
 16777  010D60  6E28               	movwf	btemp^0,c
 16778  010D62  0EE8               	movlw	-24
 16779  010D64  0060  F0A3  FFE3   	movff	btemp,plusw1
 16780  010D6A  6A28               	clrf	btemp^0,c
 16781  010D6C  0EE9               	movlw	-23
 16782  010D6E  50E3               	movf	plusw1,w,c
 16783  010D70  2028               	addwfc	btemp^0,w,c
 16784  010D72  6E28               	movwf	btemp^0,c
 16785  010D74  0EE9               	movlw	-23
 16786  010D76  0060  F0A3  FFE3   	movff	btemp,plusw1
 16787                           
 16788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16789                           ;stkvar	_w @ sp[(-56)+38]
 16790  010D7C  50E1               	movf	fsr1l,w,c
 16791  010D7E  0FEE               	addlw	-18
 16792  010D80  6ED9               	movwf	fsr2l,c
 16793  010D82  50E2               	movf	fsr1h,w,c
 16794  010D84  6EDA               	movwf	fsr2h,c
 16795  010D86  0EFF               	movlw	255
 16796  010D88  22DA               	addwfc	fsr2h,f,c
 16797  010D8A  06DE               	decf	postinc2,f,c
 16798  010D8C  0E00               	movlw	0
 16799  010D8E  5ADD               	subwfb	postdec2,f,c
 16800  010D90                     l11784:
 16801                           
 16802                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16803                           ;stkvar	_u @ sp[(-56)+12]
 16804  010D90  0ED4               	movlw	-44
 16805  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16806  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16807  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16808  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16809                           
 16810                           ;stkvar	_l @ sp[(-60)+20]
 16811  010DAA  0ED8               	movlw	-40
 16812  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16813  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16814  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16815  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16816  010DC4  EC0F  F099         	call	___flmul	;wreg free
 16817  010DC8  0060  F0A3  FFE6   	movff	btemp,postinc1
 16818  010DCE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16819  010DD4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16820  010DDA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16821                           
 16822                           ;stkvar	_h @ sp[(-60)+24]
 16823  010DE0  0EDC               	movlw	-36
 16824  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16825  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16826  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16827  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16828  010DFA  EC41  F0D5         	call	___flsub	;wreg free
 16829                           
 16830                           ;stkvar	_h @ sp[(-56)+24]
 16831  010DFE  0EE0               	movlw	-32
 16832  010E00  0060  F0A3  FFE3   	movff	btemp,plusw1
 16833  010E06  0EE1               	movlw	-31
 16834  010E08  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16835  010E0E  0EE2               	movlw	-30
 16836  010E10  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16837  010E16  0EE3               	movlw	-29
 16838  010E18  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16839                           
 16840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16841  010E1E  0E00               	movlw	0
 16842  010E20  6EE6               	movwf	postinc1,c
 16843  010E22  0E00               	movlw	0
 16844  010E24  6EE6               	movwf	postinc1,c
 16845  010E26  0E20               	movlw	32
 16846  010E28  6EE6               	movwf	postinc1,c
 16847  010E2A  0E41               	movlw	65
 16848  010E2C  6EE6               	movwf	postinc1,c
 16849                           
 16850                           ;stkvar	_u @ sp[(-60)+12]
 16851  010E2E  0ED0               	movlw	-48
 16852  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16853  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16854  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16855  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16856  010E48  EC9B  F0A4         	call	___fldiv	;wreg free
 16857                           
 16858                           ;stkvar	_u @ sp[(-56)+12]
 16859  010E4C  0ED4               	movlw	-44
 16860  010E4E  0060  F0A3  FFE3   	movff	btemp,plusw1
 16861  010E54  0ED5               	movlw	-43
 16862  010E56  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16863  010E5C  0ED6               	movlw	-42
 16864  010E5E  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16865  010E64  0ED7               	movlw	-41
 16866  010E66  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16867                           
 16868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16869                           ;stkvar	_ne @ sp[(-56)+46]
 16870  010E6C  50E1               	movf	fsr1l,w,c
 16871  010E6E  0FF6               	addlw	-10
 16872  010E70  6ED9               	movwf	fsr2l,c
 16873  010E72  50E2               	movf	fsr1h,w,c
 16874  010E74  6EDA               	movwf	fsr2h,c
 16875  010E76  0EFF               	movlw	255
 16876  010E78  22DA               	addwfc	fsr2h,f,c
 16877  010E7A  06DE               	decf	postinc2,f,c
 16878  010E7C  0E00               	movlw	0
 16879  010E7E  5ADD               	subwfb	postdec2,f,c
 16880                           
 16881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16882                           ;stkvar	_i @ sp[(-56)+36]
 16883  010E80  0EEC               	movlw	-20
 16884  010E82  50E3               	movf	plusw1,w,c
 16885  010E84  0F01               	addlw	1
 16886  010E86  6E28               	movwf	btemp^0,c
 16887  010E88  0EEC               	movlw	-20
 16888  010E8A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16889  010E90  6A28               	clrf	btemp^0,c
 16890  010E92  0EED               	movlw	-19
 16891  010E94  50E3               	movf	plusw1,w,c
 16892  010E96  2028               	addwfc	btemp^0,w,c
 16893  010E98  6E28               	movwf	btemp^0,c
 16894  010E9A  0EED               	movlw	-19
 16895  010E9C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16896  010EA2                     l11792:
 16897                           
 16898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16899                           ;stkvar	_m @ sp[(-56)+48]
 16900                           ;stkvar	_i @ sp[(-56)+36]
 16901  010EA2  50E1               	movf	fsr1l,w,c
 16902  010EA4  0FEC               	addlw	-20
 16903  010EA6  6ED9               	movwf	fsr2l,c
 16904  010EA8  50E2               	movf	fsr1h,w,c
 16905  010EAA  6EDA               	movwf	fsr2h,c
 16906  010EAC  0EFF               	movlw	255
 16907  010EAE  22DA               	addwfc	fsr2h,f,c
 16908  010EB0  0EF8               	movlw	-8
 16909  010EB2  50E3               	movf	plusw1,w,c
 16910  010EB4  5CDE               	subwf	postinc2,w,c
 16911  010EB6  50DE               	movf	postinc2,w,c
 16912  010EB8  0A80               	xorlw	128
 16913  010EBA  6E28               	movwf	btemp^0,c
 16914  010EBC  0EF9               	movlw	-7
 16915  010EBE  50E3               	movf	plusw1,w,c
 16916  010EC0  0A80               	xorlw	128
 16917  010EC2  5828               	subwfb	btemp^0,w,c
 16918  010EC4  B0D8               	btfsc	status,0,c
 16919  010EC6  D00E               	goto	u11050
 16920                           
 16921                           ;stkvar	_n @ sp[(-56)+32]
 16922  010EC8  0EE9               	movlw	-23
 16923  010ECA  BEE3               	btfsc	plusw1,7,c
 16924  010ECC  D633               	goto	l11742
 16925  010ECE  0EE9               	movlw	-23
 16926  010ED0  50E3               	movf	plusw1,w,c
 16927  010ED2  E108               	bnz	u11050
 16928  010ED4  0EE8               	movlw	-24
 16929  010ED6  006F FF8C  F028    	movff	plusw1,btemp
 16930  010EDC  0E4B               	movlw	75
 16931  010EDE  5E28               	subwf	btemp^0,f,c
 16932  010EE0  A0D8               	btfss	status,0,c
 16933  010EE2  D628               	goto	l11742
 16934  010EE4                     u11050:
 16935                           
 16936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16937                           ;stkvar	_pp @ sp[(-56)+50]
 16938  010EE4  0EFA               	movlw	-6
 16939  010EE6  006F FF8C  F028    	movff	plusw1,btemp
 16940  010EEC  0EFB               	movlw	-5
 16941  010EEE  50E3               	movf	plusw1,w,c
 16942  010EF0  1028               	iorwf	btemp^0,w,c
 16943  010EF2  B4D8               	btfsc	status,2,c
 16944  010EF4  A84C               	btfss	_flags^0,4,c
 16945  010EF6  D021               	goto	l11804
 16946                           
 16947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16948                           ;stkvar	_n @ sp[(-56)+32]
 16949  010EF8  0EE8               	movlw	-24
 16950  010EFA  006F FF8C  F032    	movff	plusw1,btemp+10
 16951  010F00  0EE9               	movlw	-23
 16952  010F02  006F FF8C  F033    	movff	plusw1,btemp+11
 16953  010F08  0EAE               	movlw	low _dbuf
 16954  010F0A  2432               	addwf	(btemp+10)^0,w,c
 16955  010F0C  6ED9               	movwf	fsr2l,c
 16956  010F0E  0E03               	movlw	high _dbuf
 16957  010F10  2033               	addwfc	(btemp+11)^0,w,c
 16958  010F12  6EDA               	movwf	fsr2h,c
 16959  010F14  0E2E               	movlw	46
 16960  010F16  6EDF               	movwf	indf2,c
 16961                           
 16962                           ;stkvar	_n @ sp[(-56)+32]
 16963  010F18  0EE8               	movlw	-24
 16964  010F1A  50E3               	movf	plusw1,w,c
 16965  010F1C  0F01               	addlw	1
 16966  010F1E  6E28               	movwf	btemp^0,c
 16967  010F20  0EE8               	movlw	-24
 16968  010F22  0060  F0A3  FFE3   	movff	btemp,plusw1
 16969  010F28  6A28               	clrf	btemp^0,c
 16970  010F2A  0EE9               	movlw	-23
 16971  010F2C  50E3               	movf	plusw1,w,c
 16972  010F2E  2028               	addwfc	btemp^0,w,c
 16973  010F30  6E28               	movwf	btemp^0,c
 16974  010F32  0EE9               	movlw	-23
 16975  010F34  0060  F0A3  FFE3   	movff	btemp,plusw1
 16976  010F3A                     l11804:
 16977                           
 16978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16979                           ;stkvar	_n @ sp[(-56)+32]
 16980  010F3A  0EE8               	movlw	-24
 16981  010F3C  006F FF8C  F032    	movff	plusw1,btemp+10
 16982  010F42  0EE9               	movlw	-23
 16983  010F44  006F FF8C  F033    	movff	plusw1,btemp+11
 16984  010F4A  0EAE               	movlw	low _dbuf
 16985  010F4C  2432               	addwf	(btemp+10)^0,w,c
 16986  010F4E  6ED9               	movwf	fsr2l,c
 16987  010F50  0E03               	movlw	high _dbuf
 16988  010F52  2033               	addwfc	(btemp+11)^0,w,c
 16989  010F54  6EDA               	movwf	fsr2h,c
 16990  010F56  0E00               	movlw	0
 16991  010F58  6EDF               	movwf	indf2,c
 16992                           
 16993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16994                           ;stkvar	_nmode @ sp[(-56)+55]
 16995  010F5A  0EFF               	movlw	-1
 16996  010F5C  006F FF8C  F028    	movff	plusw1,btemp
 16997  010F62  0E65               	movlw	101
 16998  010F64  1828               	xorwf	btemp^0,w,c
 16999  010F66  A4D8               	btfss	status,2,c
 17000  010F68  EF16  F081         	goto	l11608
 17001                           
 17002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 17003  010F6C  0E4F               	movlw	79
 17004  010F6E  6E32               	movwf	(btemp+10)^0,c
 17005  010F70  0E00               	movlw	0
 17006  010F72  6E33               	movwf	(btemp+11)^0,c
 17007                           
 17008                           ;stkvar	_i @ sp[(-56)+36]
 17009  010F74  0EEC               	movlw	-20
 17010  010F76  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17011  010F7C  0EED               	movlw	-19
 17012  010F7E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17013                           
 17014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17015                           ;stkvar	_i @ sp[(-56)+36]
 17016  010F84  0EEC               	movlw	-20
 17017  010F86  006F FF8C  F032    	movff	plusw1,btemp+10
 17018  010F8C  0EED               	movlw	-19
 17019  010F8E  006F FF8C  F033    	movff	plusw1,btemp+11
 17020  010F94  0EAE               	movlw	low _dbuf
 17021  010F96  2432               	addwf	(btemp+10)^0,w,c
 17022  010F98  6ED9               	movwf	fsr2l,c
 17023  010F9A  0E03               	movlw	high _dbuf
 17024  010F9C  2033               	addwfc	(btemp+11)^0,w,c
 17025  010F9E  6EDA               	movwf	fsr2h,c
 17026  010FA0  0E00               	movlw	0
 17027  010FA2  6EDF               	movwf	indf2,c
 17028                           
 17029                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17030                           ;stkvar	_sign @ sp[(-56)+42]
 17031  010FA4  0EF2               	movlw	-14
 17032  010FA6  6AE3               	clrf	plusw1,c
 17033  010FA8  0EF3               	movlw	-13
 17034  010FAA  6AE3               	clrf	plusw1,c
 17035                           
 17036                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17037                           ;stkvar	_e @ sp[(-56)+34]
 17038  010FAC  0EEB               	movlw	-21
 17039  010FAE  AEE3               	btfss	plusw1,7,c
 17040  010FB0  D012               	goto	l11818
 17041                           
 17042                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17043  010FB2  0E01               	movlw	1
 17044  010FB4  6E32               	movwf	(btemp+10)^0,c
 17045  010FB6  0E00               	movlw	0
 17046  010FB8  6E33               	movwf	(btemp+11)^0,c
 17047                           
 17048                           ;stkvar	_sign @ sp[(-56)+42]
 17049  010FBA  0EF2               	movlw	-14
 17050  010FBC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17051  010FC2  0EF3               	movlw	-13
 17052  010FC4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17053                           
 17054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17055                           ;stkvar	_e @ sp[(-56)+34]
 17056                           ;stkvar	_e @ sp[(-56)+34]
 17057  010FCA  0EEA               	movlw	-22
 17058  010FCC  6CE3               	negf	plusw1,c
 17059  010FCE  0EEB               	movlw	-21
 17060  010FD0  1EE3               	comf	plusw1,f,c
 17061  010FD2  B0D8               	btfsc	status,0,c
 17062  010FD4  2AE3               	incf	plusw1,f,c
 17063  010FD6                     l11818:
 17064                           
 17065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17066  010FD6  0E02               	movlw	2
 17067  010FD8  6E32               	movwf	(btemp+10)^0,c
 17068  010FDA  0E00               	movlw	0
 17069  010FDC  6E33               	movwf	(btemp+11)^0,c
 17070                           
 17071                           ;stkvar	_p @ sp[(-56)+40]
 17072  010FDE  0EF0               	movlw	-16
 17073  010FE0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17074  010FE6  0EF1               	movlw	-15
 17075  010FE8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17076                           
 17077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17078  010FEE  D051               	goto	l11830
 17079  010FF0                     l11820:
 17080                           
 17081                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17082                           ;stkvar	_i @ sp[(-56)+36]
 17083  010FF0  50E1               	movf	fsr1l,w,c
 17084  010FF2  0FEC               	addlw	-20
 17085  010FF4  6ED9               	movwf	fsr2l,c
 17086  010FF6  50E2               	movf	fsr1h,w,c
 17087  010FF8  6EDA               	movwf	fsr2h,c
 17088  010FFA  0EFF               	movlw	255
 17089  010FFC  22DA               	addwfc	fsr2h,f,c
 17090  010FFE  06DE               	decf	postinc2,f,c
 17091  011000  0E00               	movlw	0
 17092  011002  5ADD               	subwfb	postdec2,f,c
 17093                           
 17094                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17095                           ;stkvar	_i @ sp[(-56)+36]
 17096  011004  0EEC               	movlw	-20
 17097  011006  006F FF8C  F032    	movff	plusw1,btemp+10
 17098  01100C  0EED               	movlw	-19
 17099  01100E  006F FF8C  F033    	movff	plusw1,btemp+11
 17100  011014  0EAE               	movlw	low _dbuf
 17101  011016  2432               	addwf	(btemp+10)^0,w,c
 17102  011018  6ED9               	movwf	fsr2l,c
 17103  01101A  0E03               	movlw	high _dbuf
 17104  01101C  2033               	addwfc	(btemp+11)^0,w,c
 17105  01101E  6EDA               	movwf	fsr2h,c
 17106  011020  0E0A               	movlw	10
 17107  011022  6EE6               	movwf	postinc1,c
 17108  011024  0E00               	movlw	0
 17109  011026  6EE6               	movwf	postinc1,c
 17110                           
 17111                           ;stkvar	_e @ sp[(-58)+34]
 17112  011028  0EE8               	movlw	-24
 17113  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17114  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17115  011036  ECE3  F0C7         	call	___awmod	;wreg free
 17116  01103A  5028               	movf	btemp^0,w,c
 17117  01103C  0F30               	addlw	48
 17118  01103E  6EDF               	movwf	indf2,c
 17119                           
 17120                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17121  011040  0E0A               	movlw	10
 17122  011042  6EE6               	movwf	postinc1,c
 17123  011044  0E00               	movlw	0
 17124  011046  6EE6               	movwf	postinc1,c
 17125                           
 17126                           ;stkvar	_e @ sp[(-58)+34]
 17127  011048  0EE8               	movlw	-24
 17128  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17129  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17130  011056  ECD3  F0C4         	call	___awdiv	;wreg free
 17131                           
 17132                           ;stkvar	_e @ sp[(-56)+34]
 17133  01105A  0EEA               	movlw	-22
 17134  01105C  0060  F0A3  FFE3   	movff	btemp,plusw1
 17135  011062  0EEB               	movlw	-21
 17136  011064  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 17137                           
 17138                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17139                           ;stkvar	_p @ sp[(-56)+40]
 17140  01106A  50E1               	movf	fsr1l,w,c
 17141  01106C  0FF0               	addlw	-16
 17142  01106E  6ED9               	movwf	fsr2l,c
 17143  011070  50E2               	movf	fsr1h,w,c
 17144  011072  6EDA               	movwf	fsr2h,c
 17145  011074  0EFF               	movlw	255
 17146  011076  22DA               	addwfc	fsr2h,f,c
 17147  011078  06DE               	decf	postinc2,f,c
 17148  01107A  0E00               	movlw	0
 17149  01107C  5ADD               	subwfb	postdec2,f,c
 17150                           
 17151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17152                           ;stkvar	_w @ sp[(-56)+38]
 17153  01107E  50E1               	movf	fsr1l,w,c
 17154  011080  0FEE               	addlw	-18
 17155  011082  6ED9               	movwf	fsr2l,c
 17156  011084  50E2               	movf	fsr1h,w,c
 17157  011086  6EDA               	movwf	fsr2h,c
 17158  011088  0EFF               	movlw	255
 17159  01108A  22DA               	addwfc	fsr2h,f,c
 17160  01108C  06DE               	decf	postinc2,f,c
 17161  01108E  0E00               	movlw	0
 17162  011090  5ADD               	subwfb	postdec2,f,c
 17163  011092                     l11830:
 17164                           
 17165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17166                           ;stkvar	_e @ sp[(-56)+34]
 17167  011092  0EEA               	movlw	-22
 17168  011094  006F FF8C  F028    	movff	plusw1,btemp
 17169  01109A  0EEB               	movlw	-21
 17170  01109C  50E3               	movf	plusw1,w,c
 17171  01109E  1028               	iorwf	btemp^0,w,c
 17172  0110A0  A4D8               	btfss	status,2,c
 17173  0110A2  D7A6               	goto	l11820
 17174                           
 17175                           ;stkvar	_p @ sp[(-56)+40]
 17176  0110A4  0EF1               	movlw	-15
 17177  0110A6  BEE3               	btfsc	plusw1,7,c
 17178  0110A8  D007               	goto	u11110
 17179  0110AA  0EF1               	movlw	-15
 17180  0110AC  50E3               	movf	plusw1,w,c
 17181  0110AE  E1A0               	bnz	l11820
 17182  0110B0  0EF0               	movlw	-16
 17183  0110B2  04E3               	decf	plusw1,w,c
 17184  0110B4  B0D8               	btfsc	status,0,c
 17185  0110B6  D79C               	goto	l11820
 17186  0110B8                     u11110:
 17187                           
 17188                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17189                           ;stkvar	_i @ sp[(-56)+36]
 17190  0110B8  50E1               	movf	fsr1l,w,c
 17191  0110BA  0FEC               	addlw	-20
 17192  0110BC  6ED9               	movwf	fsr2l,c
 17193  0110BE  50E2               	movf	fsr1h,w,c
 17194  0110C0  6EDA               	movwf	fsr2h,c
 17195  0110C2  0EFF               	movlw	255
 17196  0110C4  22DA               	addwfc	fsr2h,f,c
 17197  0110C6  06DE               	decf	postinc2,f,c
 17198  0110C8  0E00               	movlw	0
 17199  0110CA  5ADD               	subwfb	postdec2,f,c
 17200                           
 17201                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17202                           ;stkvar	_sign @ sp[(-56)+42]
 17203  0110CC  0EF2               	movlw	-14
 17204  0110CE  006F FF8C  F028    	movff	plusw1,btemp
 17205  0110D4  0EF3               	movlw	-13
 17206  0110D6  50E3               	movf	plusw1,w,c
 17207  0110D8  1028               	iorwf	btemp^0,w,c
 17208  0110DA  A4D8               	btfss	status,2,c
 17209  0110DC  D002               	goto	l11840
 17210  0110DE  0E2B               	movlw	43
 17211  0110E0  D001               	goto	L16
 17212  0110E2                     l11840:
 17213  0110E2  0E2D               	movlw	45
 17214  0110E4                     L16:
 17215  0110E4  6E32               	movwf	(btemp+10)^0,c
 17216  0110E6  0E00               	movlw	0
 17217  0110E8  6E33               	movwf	(btemp+11)^0,c
 17218                           
 17219                           ;stkvar	_efgtoa$5397 @ sp[(-56)+4]
 17220  0110EA  0ECC               	movlw	-52
 17221  0110EC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17222  0110F2  0ECD               	movlw	-51
 17223  0110F4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17224                           
 17225                           ;stkvar	_efgtoa$5397 @ sp[(-56)+4]
 17226                           ;stkvar	_i @ sp[(-56)+36]
 17227  0110FA  0EEC               	movlw	-20
 17228  0110FC  006F FF8C  F032    	movff	plusw1,btemp+10
 17229  011102  0EED               	movlw	-19
 17230  011104  006F FF8C  F033    	movff	plusw1,btemp+11
 17231  01110A  0EAE               	movlw	low _dbuf
 17232  01110C  2432               	addwf	(btemp+10)^0,w,c
 17233  01110E  6ED9               	movwf	fsr2l,c
 17234  011110  0E03               	movlw	high _dbuf
 17235  011112  2033               	addwfc	(btemp+11)^0,w,c
 17236  011114  6EDA               	movwf	fsr2h,c
 17237  011116  0ECC               	movlw	-52
 17238  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17239                           
 17240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17241                           ;stkvar	_w @ sp[(-56)+38]
 17242  01111E  50E1               	movf	fsr1l,w,c
 17243  011120  0FEE               	addlw	-18
 17244  011122  6ED9               	movwf	fsr2l,c
 17245  011124  50E2               	movf	fsr1h,w,c
 17246  011126  6EDA               	movwf	fsr2h,c
 17247  011128  0EFF               	movlw	255
 17248  01112A  22DA               	addwfc	fsr2h,f,c
 17249  01112C  06DE               	decf	postinc2,f,c
 17250  01112E  0E00               	movlw	0
 17251  011130  5ADD               	subwfb	postdec2,f,c
 17252                           
 17253                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17254                           ;stkvar	_i @ sp[(-56)+36]
 17255  011132  50E1               	movf	fsr1l,w,c
 17256  011134  0FEC               	addlw	-20
 17257  011136  6ED9               	movwf	fsr2l,c
 17258  011138  50E2               	movf	fsr1h,w,c
 17259  01113A  6EDA               	movwf	fsr2h,c
 17260  01113C  0EFF               	movlw	255
 17261  01113E  22DA               	addwfc	fsr2h,f,c
 17262  011140  06DE               	decf	postinc2,f,c
 17263  011142  0E00               	movlw	0
 17264  011144  5ADD               	subwfb	postdec2,f,c
 17265  011146  0EBF               	movlw	191
 17266  011148  6E32               	movwf	(btemp+10)^0,c
 17267  01114A  0EFF               	movlw	255
 17268  01114C  6E33               	movwf	(btemp+11)^0,c
 17269                           
 17270                           ;stkvar	_c @ sp[(-56)+-7]
 17271  01114E  0EC1               	movlw	-63
 17272  011150  50E3               	movf	plusw1,w,c
 17273  011152  6E30               	movwf	(btemp+8)^0,c
 17274  011154  6A31               	clrf	(btemp+9)^0,c
 17275  011156  5032               	movf	(btemp+10)^0,w,c
 17276  011158  2630               	addwf	(btemp+8)^0,f,c
 17277  01115A  5033               	movf	(btemp+11)^0,w,c
 17278  01115C  2231               	addwfc	(btemp+9)^0,f,c
 17279  01115E  5031               	movf	(btemp+9)^0,w,c
 17280  011160  E106               	bnz	u11130
 17281  011162  0E1A               	movlw	26
 17282  011164  5C30               	subwf	(btemp+8)^0,w,c
 17283  011166  B0D8               	btfsc	status,0,c
 17284  011168  D002               	goto	u11130
 17285  01116A  0E01               	movlw	1
 17286  01116C  D001               	goto	u11140
 17287  01116E                     u11130:
 17288  01116E  0E00               	movlw	0
 17289  011170                     u11140:
 17290  011170  6E32               	movwf	(btemp+10)^0,c
 17291  011172  6A33               	clrf	(btemp+11)^0,c
 17292                           
 17293                           ;stkvar	_efgtoa$5399 @ sp[(-56)+0]
 17294  011174  0EC8               	movlw	-56
 17295  011176  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17296  01117C  0EC9               	movlw	-55
 17297  01117E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17298                           
 17299                           ;stkvar	_efgtoa$5399 @ sp[(-56)+0]
 17300  011184  0EC8               	movlw	-56
 17301  011186  006F FF8C  F028    	movff	plusw1,btemp
 17302  01118C  0EC9               	movlw	-55
 17303  01118E  50E3               	movf	plusw1,w,c
 17304  011190  1028               	iorwf	btemp^0,w,c
 17305  011192  A4D8               	btfss	status,2,c
 17306  011194  D002               	goto	l11856
 17307  011196  0E65               	movlw	101
 17308  011198  D001               	goto	L17
 17309  01119A                     l11856:
 17310  01119A  0E45               	movlw	69
 17311  01119C                     L17:
 17312  01119C  6E32               	movwf	(btemp+10)^0,c
 17313  01119E  0E00               	movlw	0
 17314  0111A0  6E33               	movwf	(btemp+11)^0,c
 17315                           
 17316                           ;stkvar	_efgtoa$5398 @ sp[(-56)+2]
 17317  0111A2  0ECA               	movlw	-54
 17318  0111A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17319  0111AA  0ECB               	movlw	-53
 17320  0111AC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17321                           
 17322                           ;stkvar	_efgtoa$5398 @ sp[(-56)+2]
 17323                           ;stkvar	_i @ sp[(-56)+36]
 17324  0111B2  0EEC               	movlw	-20
 17325  0111B4  006F FF8C  F032    	movff	plusw1,btemp+10
 17326  0111BA  0EED               	movlw	-19
 17327  0111BC  006F FF8C  F033    	movff	plusw1,btemp+11
 17328  0111C2  0EAE               	movlw	low _dbuf
 17329  0111C4  2432               	addwf	(btemp+10)^0,w,c
 17330  0111C6  6ED9               	movwf	fsr2l,c
 17331  0111C8  0E03               	movlw	high _dbuf
 17332  0111CA  2033               	addwfc	(btemp+11)^0,w,c
 17333  0111CC  6EDA               	movwf	fsr2h,c
 17334  0111CE  0ECA               	movlw	-54
 17335  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17336                           
 17337                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17338                           ;stkvar	_w @ sp[(-56)+38]
 17339  0111D6  50E1               	movf	fsr1l,w,c
 17340  0111D8  0FEE               	addlw	-18
 17341  0111DA  6ED9               	movwf	fsr2l,c
 17342  0111DC  50E2               	movf	fsr1h,w,c
 17343  0111DE  6EDA               	movwf	fsr2h,c
 17344  0111E0  0EFF               	movlw	255
 17345  0111E2  22DA               	addwfc	fsr2h,f,c
 17346  0111E4  06DE               	decf	postinc2,f,c
 17347  0111E6  0E00               	movlw	0
 17348  0111E8  5ADD               	subwfb	postdec2,f,c
 17349                           
 17350                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17351                           ;stkvar	_i @ sp[(-56)+36]
 17352  0111EA  0EEC               	movlw	-20
 17353  0111EC  006F FF8C  F032    	movff	plusw1,btemp+10
 17354  0111F2  0EED               	movlw	-19
 17355  0111F4  006F FF8C  F033    	movff	plusw1,btemp+11
 17356  0111FA  0EAE               	movlw	low _dbuf
 17357  0111FC  2432               	addwf	(btemp+10)^0,w,c
 17358  0111FE  6E30               	movwf	(btemp+8)^0,c
 17359  011200  0E03               	movlw	high _dbuf
 17360  011202  2033               	addwfc	(btemp+11)^0,w,c
 17361  011204  6E31               	movwf	(btemp+9)^0,c
 17362  011206  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 17363  01120C  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 17364                           
 17365                           ;stkvar	_n @ sp[(-58)+32]
 17366  011212  0EAE               	movlw	low _dbuf
 17367  011214  6E32               	movwf	(btemp+10)^0,c
 17368  011216  0E03               	movlw	high _dbuf
 17369  011218  6E33               	movwf	(btemp+11)^0,c
 17370  01121A  0EE6               	movlw	-26
 17371  01121C  50E3               	movf	plusw1,w,c
 17372  01121E  2632               	addwf	(btemp+10)^0,f,c
 17373  011220  0EE7               	movlw	-25
 17374  011222  50E3               	movf	plusw1,w,c
 17375  011224  2233               	addwfc	(btemp+11)^0,f,c
 17376  011226  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 17377  01122C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 17378  011232  EC72  F0CC         	call	_strcpy	;wreg free
 17379  011236  EF16  F081         	goto	l11608
 17380  01123A                     l2162:
 17381                           
 17382                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17383  01123A  0EC1               	movlw	193
 17384  01123C  26E1               	addwf	fsr1l,f,c
 17385  01123E  0EFF               	movlw	255
 17386  011240  22E2               	addwfc	fsr1h,f,c
 17387  011242  0012               	return		;funcret
 17388  011244                     __end_of_efgtoa:
 17389                           	opt callstack 0
 17390                           
 17391 ;; *************** function _tolower *****************
 17392 ;; Defined at:
 17393 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17394 ;; Parameters:    Size  Location     Type
 17395 ;;  c               2  [STACK] int 
 17396 ;; Auto vars:     Size  Location     Type
 17397 ;;		None
 17398 ;; Return value:  Size  Location     Type
 17399 ;;                  2  [STACK] int 
 17400 ;; Registers used:
 17401 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17402 ;; Tracked objects:
 17403 ;;		On entry : 0/0
 17404 ;;		On exit  : 0/0
 17405 ;;		Unchanged: 0/0
 17406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17411 ;;Total ram usage:        0 bytes
 17412 ;; Hardware stack levels used:    1
 17413 ;; Hardware stack levels required when called:   16
 17414 ;; This function calls:
 17415 ;;		_isupper
 17416 ;; This function is called by:
 17417 ;;		_efgtoa
 17418 ;;		_vfpfcnvrt
 17419 ;; This function uses a reentrant model
 17420 ;;
 17421                           
 17422                           	psect	text56
 17423  01A32A                     __ptext56:
 17424                           	opt callstack 0
 17425  01A32A                     _tolower:
 17426                           	opt callstack 0
 17427                           
 17428                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17429  01A32A  52E6               	movf	postinc1,f,c
 17430  01A32C  52E6               	movf	postinc1,f,c
 17431                           
 17432                           ;stkvar	_c @ sp[(-2)+-2]
 17433                           
 17434                           ;incstack = 0
 17435 ;; hardware stack exceeded
 17436  01A32E  0EFC               	movlw	-4
 17437  01A330  50E3               	movf	plusw1,w,c
 17438  01A332  0FBF               	addlw	191
 17439  01A334  6E32               	movwf	(btemp+10)^0,c
 17440  01A336  0EFD               	movlw	-3
 17441  01A338  006F FF8C  F033    	movff	plusw1,btemp+11
 17442  01A33E  0EFF               	movlw	255
 17443  01A340  2233               	addwfc	(btemp+11)^0,f,c
 17444  01A342  5033               	movf	(btemp+11)^0,w,c
 17445  01A344  E106               	bnz	u5830
 17446  01A346  0E1A               	movlw	26
 17447  01A348  5C32               	subwf	(btemp+10)^0,w,c
 17448  01A34A  B0D8               	btfsc	status,0,c
 17449  01A34C  D002               	goto	u5830
 17450  01A34E  0E01               	movlw	1
 17451  01A350  D001               	goto	u5840
 17452  01A352                     u5830:
 17453  01A352  0E00               	movlw	0
 17454  01A354                     u5840:
 17455  01A354  6E32               	movwf	(btemp+10)^0,c
 17456  01A356  6A33               	clrf	(btemp+11)^0,c
 17457                           
 17458                           ;stkvar	_tolower$6218 @ sp[(-2)+0]
 17459  01A358  0EFE               	movlw	-2
 17460  01A35A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17461  01A360  0EFF               	movlw	-1
 17462  01A362  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17463                           
 17464                           ;stkvar	_tolower$6218 @ sp[(-2)+0]
 17465  01A368  0EFE               	movlw	-2
 17466  01A36A  006F FF8C  F028    	movff	plusw1,btemp
 17467  01A370  0EFF               	movlw	-1
 17468  01A372  50E3               	movf	plusw1,w,c
 17469  01A374  1028               	iorwf	btemp^0,w,c
 17470  01A376  B4D8               	btfsc	status,2,c
 17471  01A378  D00D               	goto	l7786
 17472                           
 17473                           ;stkvar	_c @ sp[(-2)+-2]
 17474  01A37A  0EFC               	movlw	-4
 17475  01A37C  006F FF8C  F028    	movff	plusw1,btemp
 17476  01A382  0EFD               	movlw	-3
 17477  01A384  006F FF8C  F029    	movff	plusw1,btemp+1
 17478  01A38A  0E20               	movlw	32
 17479  01A38C  1228               	iorwf	btemp^0,f,c
 17480  01A38E  0E00               	movlw	0
 17481  01A390  1229               	iorwf	(btemp+1)^0,f,c
 17482  01A392  D008               	goto	l3434
 17483  01A394                     l7786:
 17484                           
 17485                           ;stkvar	_c @ sp[(-2)+-2]
 17486  01A394  0EFC               	movlw	-4
 17487  01A396  006F FF8C  F028    	movff	plusw1,btemp
 17488  01A39C  0EFD               	movlw	-3
 17489  01A39E  006F FF8C  F029    	movff	plusw1,btemp+1
 17490  01A3A4                     l3434:
 17491                           
 17492                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17493  01A3A4  52E5               	movf	postdec1,f,c
 17494  01A3A6  52E5               	movf	postdec1,f,c
 17495  01A3A8  52E5               	movf	postdec1,f,c
 17496  01A3AA  52E5               	movf	postdec1,f,c
 17497  01A3AC  0012               	return		;funcret
 17498  01A3AE                     __end_of_tolower:
 17499                           	opt callstack 0
 17500                           
 17501 ;; *************** function _isupper *****************
 17502 ;; Defined at:
 17503 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17504 ;; Parameters:    Size  Location     Type
 17505 ;;  c               2  [STACK] int 
 17506 ;; Auto vars:     Size  Location     Type
 17507 ;;		None
 17508 ;; Return value:  Size  Location     Type
 17509 ;;                  2  [STACK] int 
 17510 ;; Registers used:
 17511 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17512 ;; Tracked objects:
 17513 ;;		On entry : 0/0
 17514 ;;		On exit  : 0/0
 17515 ;;		Unchanged: 0/0
 17516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17521 ;;Total ram usage:        0 bytes
 17522 ;; Hardware stack levels used:    1
 17523 ;; Hardware stack levels required when called:   15
 17524 ;; This function calls:
 17525 ;;		Nothing
 17526 ;; This function is called by:
 17527 ;;		_efgtoa
 17528 ;;		_xtoa
 17529 ;;		_vfpfcnvrt
 17530 ;;		_tolower
 17531 ;; This function uses a reentrant model
 17532 ;;
 17533                           
 17534                           	psect	text57
 17535  01AF6E                     __ptext57:
 17536                           	opt callstack 0
 17537  01AF6E                     _isupper:
 17538                           	opt callstack 0
 17539                           
 17540                           ;stkvar	_c @ sp[(0)+-2]
 17541                           
 17542                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17543                           ;incstack = 0
 17544 ;; hardware stack exceeded
 17545  01AF6E  0EFE               	movlw	-2
 17546  01AF70  50E3               	movf	plusw1,w,c
 17547  01AF72  0FBF               	addlw	191
 17548  01AF74  6E32               	movwf	(btemp+10)^0,c
 17549  01AF76  0EFF               	movlw	-1
 17550  01AF78  006F FF8C  F033    	movff	plusw1,btemp+11
 17551  01AF7E  0EFF               	movlw	255
 17552  01AF80  2233               	addwfc	(btemp+11)^0,f,c
 17553  01AF82  5033               	movf	(btemp+11)^0,w,c
 17554  01AF84  E106               	bnz	u5230
 17555  01AF86  0E1A               	movlw	26
 17556  01AF88  5C32               	subwf	(btemp+10)^0,w,c
 17557  01AF8A  B0D8               	btfsc	status,0,c
 17558  01AF8C  D002               	goto	u5230
 17559  01AF8E  0E01               	movlw	1
 17560  01AF90  D001               	goto	u5240
 17561  01AF92                     u5230:
 17562  01AF92  0E00               	movlw	0
 17563  01AF94                     u5240:
 17564  01AF94  6E28               	movwf	btemp^0,c
 17565  01AF96  6A29               	clrf	(btemp+1)^0,c
 17566                           
 17567                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17568  01AF98  52E5               	movf	postdec1,f,c
 17569  01AF9A  52E5               	movf	postdec1,f,c
 17570  01AF9C  0012               	return		;funcret
 17571  01AF9E                     __end_of_isupper:
 17572                           	opt callstack 0
 17573                           
 17574 ;; *************** function _strcpy *****************
 17575 ;; Defined at:
 17576 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17577 ;; Parameters:    Size  Location     Type
 17578 ;;  dest            2  [STACK] PTR unsigned char 
 17579 ;;		 -> dbuf(80), 
 17580 ;;  src             2  [STACK] PTR const unsigned char 
 17581 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17582 ;;		 -> dbuf(80), 
 17583 ;; Auto vars:     Size  Location     Type
 17584 ;;  d               2  [STACK] PTR unsigned char 
 17585 ;;		 -> dbuf(80), 
 17586 ;;  s               2  [STACK] PTR const unsigned char 
 17587 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17588 ;;		 -> dbuf(80), 
 17589 ;; Return value:  Size  Location     Type
 17590 ;;                  2  [STACK] PTR unsigned char 
 17591 ;; Registers used:
 17592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17593 ;; Tracked objects:
 17594 ;;		On entry : 0/0
 17595 ;;		On exit  : 0/0
 17596 ;;		Unchanged: 0/0
 17597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17602 ;;Total ram usage:        0 bytes
 17603 ;; Hardware stack levels used:    1
 17604 ;; Hardware stack levels required when called:   15
 17605 ;; This function calls:
 17606 ;;		Nothing
 17607 ;; This function is called by:
 17608 ;;		_efgtoa
 17609 ;; This function uses a reentrant model
 17610 ;;
 17611                           
 17612                           	psect	text58
 17613  0198E4                     __ptext58:
 17614                           	opt callstack 0
 17615  0198E4                     _strcpy:
 17616                           	opt callstack 0
 17617                           
 17618                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17619  0198E4  52E6               	movf	postinc1,f,c
 17620  0198E6  52E6               	movf	postinc1,f,c
 17621  0198E8  52E6               	movf	postinc1,f,c
 17622  0198EA  52E6               	movf	postinc1,f,c
 17623                           
 17624                           ;stkvar	_src @ sp[(-4)+-4]
 17625                           
 17626                           ;incstack = 0
 17627 ;; hardware stack exceeded
 17628  0198EC  0EF8               	movlw	-8
 17629  0198EE  006F FF8C  F032    	movff	plusw1,btemp+10
 17630  0198F4  0EF9               	movlw	-7
 17631  0198F6  006F FF8C  F033    	movff	plusw1,btemp+11
 17632                           
 17633                           ;stkvar	_s @ sp[(-4)+2]
 17634  0198FC  0EFF               	movlw	-1
 17635  0198FE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17636  019904  0EFE               	movlw	-2
 17637  019906  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17638                           
 17639                           ;stkvar	_dest @ sp[(-4)+-2]
 17640  01990C  0EFA               	movlw	-6
 17641  01990E  006F FF8C  F032    	movff	plusw1,btemp+10
 17642  019914  0EFB               	movlw	-5
 17643  019916  006F FF8C  F033    	movff	plusw1,btemp+11
 17644                           
 17645                           ;stkvar	_d @ sp[(-4)+0]
 17646  01991C  0EFD               	movlw	-3
 17647  01991E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17648  019924  0EFC               	movlw	-4
 17649  019926  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17650  01992C                     l11440:
 17651                           
 17652                           ;stkvar	_s @ sp[(-4)+2]
 17653  01992C  50E1               	movf	fsr1l,w,c
 17654  01992E  0FFE               	addlw	-2
 17655  019930  6ED9               	movwf	fsr2l,c
 17656  019932  50E2               	movf	fsr1h,w,c
 17657  019934  6EDA               	movwf	fsr2h,c
 17658  019936  0EFF               	movlw	255
 17659  019938  22DA               	addwfc	fsr2h,f,c
 17660  01993A  006F FF7C  F032    	movff	indf2,btemp+10
 17661  019940  0E01               	movlw	1
 17662  019942  26DE               	addwf	postinc2,f,c
 17663  019944  006F FF7C  F033    	movff	indf2,btemp+11
 17664  01994A  0E00               	movlw	0
 17665  01994C  22DD               	addwfc	postdec2,f,c
 17666  01994E  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 17667  019954  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 17668  01995A  0E00               	movlw	low (__mediumconst shr (0+16))
 17669  01995C  6EF8               	movwf	tblptru,c
 17670                           
 17671                           ;stkvar	_d @ sp[(-4)+0]
 17672  01995E  50E1               	movf	fsr1l,w,c
 17673  019960  0FFC               	addlw	-4
 17674  019962  6ED9               	movwf	fsr2l,c
 17675  019964  50E2               	movf	fsr1h,w,c
 17676  019966  6EDA               	movwf	fsr2h,c
 17677  019968  0EFF               	movlw	255
 17678  01996A  22DA               	addwfc	fsr2h,f,c
 17679  01996C  006F FF7C  F032    	movff	indf2,btemp+10
 17680  019972  0E01               	movlw	1
 17681  019974  26DE               	addwf	postinc2,f,c
 17682  019976  006F FF7C  F033    	movff	indf2,btemp+11
 17683  01997C  0E00               	movlw	0
 17684  01997E  22DD               	addwfc	postdec2,f,c
 17685  019980  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 17686  019986  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 17687  01998C  0E1F               	movlw	(high __ramtop+-1)
 17688  01998E  64F7               	cpfsgt	tblptrh,c
 17689  019990  D003               	bra	u10397
 17690  019992  0008               	tblrd		*
 17691  019994  50F5               	movf	tablat,w,c
 17692  019996  D007               	bra	u10390
 17693  019998                     u10397:
 17694  019998  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17695  01999E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17696  0199A4  50EF               	movf	indf0,w,c
 17697  0199A6                     u10390:
 17698  0199A6  6EDF               	movwf	indf2,c
 17699  0199A8  50DF               	movf	indf2,w,c
 17700  0199AA  A4D8               	btfss	status,2,c
 17701  0199AC  D7BF               	goto	l11440
 17702                           
 17703                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17704  0199AE  0EF8               	movlw	248
 17705  0199B0  26E1               	addwf	fsr1l,f,c
 17706  0199B2  0EFF               	movlw	255
 17707  0199B4  22E2               	addwfc	fsr1h,f,c
 17708  0199B6  0012               	return		;funcret
 17709  0199B8                     __end_of_strcpy:
 17710                           	opt callstack 0
 17711                           
 17712 ;; *************** function _floorf *****************
 17713 ;; Defined at:
 17714 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17715 ;; Parameters:    Size  Location     Type
 17716 ;;  x               4  [STACK] float 
 17717 ;; Auto vars:     Size  Location     Type
 17718 ;;  u               4  [STACK] struct .
 17719 ;;  m               4  [STACK] unsigned long 
 17720 ;;  e               2  [STACK] int 
 17721 ;; Return value:  Size  Location     Type
 17722 ;;                  4  [STACK] float 
 17723 ;; Registers used:
 17724 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17725 ;; Tracked objects:
 17726 ;;		On entry : 0/0
 17727 ;;		On exit  : 0/0
 17728 ;;		Unchanged: 0/0
 17729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17734 ;;Total ram usage:        0 bytes
 17735 ;; Hardware stack levels used:    1
 17736 ;; Hardware stack levels required when called:   15
 17737 ;; This function calls:
 17738 ;;		Nothing
 17739 ;; This function is called by:
 17740 ;;		_efgtoa
 17741 ;; This function uses a reentrant model
 17742 ;;
 17743                           
 17744                           	psect	text59
 17745  015F38                     __ptext59:
 17746                           	opt callstack 0
 17747  015F38                     _floorf:
 17748                           	opt callstack 0
 17749                           
 17750                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17751  015F38  0E0A               	movlw	10
 17752  015F3A  26E1               	addwf	fsr1l,f,c
 17753  015F3C  0E00               	movlw	0
 17754  015F3E  22E2               	addwfc	fsr1h,f,c
 17755                           
 17756                           ;incstack = 0
 17757 ;; hardware stack exceeded
 17758  015F40  0060  F1E8  F030   	movff	floorf@F524,btemp+8
 17759  015F46  0060  F1EC  F031   	movff	floorf@F524+1,btemp+9
 17760  015F4C  0060  F1F0  F032   	movff	floorf@F524+2,btemp+10
 17761  015F52  0060  F1F4  F033   	movff	floorf@F524+3,btemp+11
 17762                           
 17763                           ;stkvar	_u @ sp[(-10)+0]
 17764  015F58  0EF6               	movlw	-10
 17765  015F5A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17766  015F60  0EF7               	movlw	-9
 17767  015F62  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17768  015F68  0EF8               	movlw	-8
 17769  015F6A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17770  015F70  0EF9               	movlw	-7
 17771  015F72  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17772                           
 17773                           ;stkvar	_x @ sp[(-10)+-4]
 17774  015F78  0EF2               	movlw	-14
 17775  015F7A  006F FF8C  F030    	movff	plusw1,btemp+8
 17776  015F80  0EF3               	movlw	-13
 17777  015F82  006F FF8C  F031    	movff	plusw1,btemp+9
 17778  015F88  0EF4               	movlw	-12
 17779  015F8A  006F FF8C  F032    	movff	plusw1,btemp+10
 17780  015F90  0EF5               	movlw	-11
 17781  015F92  006F FF8C  F033    	movff	plusw1,btemp+11
 17782                           
 17783                           ;stkvar	_u @ sp[(-10)+0]
 17784  015F98  0EF6               	movlw	-10
 17785  015F9A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17786  015FA0  0EF7               	movlw	-9
 17787  015FA2  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17788  015FA8  0EF8               	movlw	-8
 17789  015FAA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17790  015FB0  0EF9               	movlw	-7
 17791  015FB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17792  015FB8  0E81               	movlw	129
 17793  015FBA  6E32               	movwf	(btemp+10)^0,c
 17794  015FBC  0EFF               	movlw	255
 17795  015FBE  6E33               	movwf	(btemp+11)^0,c
 17796                           
 17797                           ;stkvar	_u @ sp[(-10)+0]
 17798  015FC0  0EF6               	movlw	-10
 17799  015FC2  006F FF8C  F02C    	movff	plusw1,btemp+4
 17800  015FC8  0EF7               	movlw	-9
 17801  015FCA  006F FF8C  F02D    	movff	plusw1,btemp+5
 17802  015FD0  0EF8               	movlw	-8
 17803  015FD2  006F FF8C  F02E    	movff	plusw1,btemp+6
 17804  015FD8  0EF9               	movlw	-7
 17805  015FDA  006F FF8C  F02F    	movff	plusw1,btemp+7
 17806  015FE0  0E18               	movlw	24
 17807  015FE2  D005               	goto	u5860
 17808  015FE4                     u5865:
 17809  015FE4  90D8               	bcf	status,0,c
 17810  015FE6  322F               	rrcf	(btemp+7)^0,f,c
 17811  015FE8  322E               	rrcf	(btemp+6)^0,f,c
 17812  015FEA  322D               	rrcf	(btemp+5)^0,f,c
 17813  015FEC  322C               	rrcf	(btemp+4)^0,f,c
 17814  015FEE                     u5860:
 17815  015FEE  2EE8               	decfsz	wreg,f,c
 17816  015FF0  D7F9               	goto	u5865
 17817  015FF2  0060  F0B0  F030   	movff	btemp+4,btemp+8
 17818  015FF8  0060  F0B4  F031   	movff	btemp+5,btemp+9
 17819  015FFE  0EFF               	movlw	255
 17820  016000  1630               	andwf	(btemp+8)^0,f,c
 17821  016002  0E00               	movlw	0
 17822  016004  1631               	andwf	(btemp+9)^0,f,c
 17823  016006  5032               	movf	(btemp+10)^0,w,c
 17824  016008  2630               	addwf	(btemp+8)^0,f,c
 17825  01600A  5033               	movf	(btemp+11)^0,w,c
 17826  01600C  2231               	addwfc	(btemp+9)^0,f,c
 17827                           
 17828                           ;stkvar	_e @ sp[(-10)+8]
 17829  01600E  0EFE               	movlw	-2
 17830  016010  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17831  016016  0EFF               	movlw	-1
 17832  016018  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17833                           
 17834                           ;stkvar	_e @ sp[(-10)+8]
 17835  01601E  0EFF               	movlw	-1
 17836  016020  BEE3               	btfsc	plusw1,7,c
 17837  016022  D019               	goto	l7800
 17838  016024  0EFF               	movlw	-1
 17839  016026  50E3               	movf	plusw1,w,c
 17840  016028  E108               	bnz	u5870
 17841  01602A  0EFE               	movlw	-2
 17842  01602C  006F FF8C  F028    	movff	plusw1,btemp
 17843  016032  0E17               	movlw	23
 17844  016034  5E28               	subwf	btemp^0,f,c
 17845  016036  A0D8               	btfss	status,0,c
 17846  016038  D00E               	goto	l7800
 17847  01603A                     u5870:
 17848                           
 17849                           ;stkvar	_x @ sp[(-10)+-4]
 17850  01603A  0EF2               	movlw	-14
 17851  01603C  006F FF8C  F028    	movff	plusw1,btemp
 17852  016042  0EF3               	movlw	-13
 17853  016044  006F FF8C  F029    	movff	plusw1,btemp+1
 17854  01604A  0EF4               	movlw	-12
 17855  01604C  006F FF8C  F02A    	movff	plusw1,btemp+2
 17856  016052  0EF5               	movlw	-11
 17857  016054  D11F               	goto	L18
 17858  016056                     l7800:
 17859                           
 17860                           ;stkvar	_e @ sp[(-10)+8]
 17861  016056  0EFF               	movlw	-1
 17862  016058  BEE3               	btfsc	plusw1,7,c
 17863  01605A  D0B4               	goto	l7816
 17864                           
 17865                           ;stkvar	_e @ sp[(-10)+8]
 17866  01605C  0EFE               	movlw	-2
 17867  01605E  006F FF8C  F033    	movff	plusw1,btemp+11
 17868  016064  0EFF               	movlw	255
 17869  016066  6E2C               	movwf	(btemp+4)^0,c
 17870  016068  0EFF               	movlw	255
 17871  01606A  6E2D               	movwf	(btemp+5)^0,c
 17872  01606C  0E7F               	movlw	127
 17873  01606E  6E2E               	movwf	(btemp+6)^0,c
 17874  016070  0E00               	movlw	0
 17875  016072  6E2F               	movwf	(btemp+7)^0,c
 17876  016074                     u5895:
 17877  016074  6633               	tstfsz	(btemp+11)^0,c
 17878  016076  D001               	goto	u5896
 17879  016078  D007               	goto	u5897
 17880  01607A                     u5896:
 17881  01607A  342F               	rlcf	(btemp+7)^0,w,c
 17882  01607C  322F               	rrcf	(btemp+7)^0,f,c
 17883  01607E  322E               	rrcf	(btemp+6)^0,f,c
 17884  016080  322D               	rrcf	(btemp+5)^0,f,c
 17885  016082  322C               	rrcf	(btemp+4)^0,f,c
 17886  016084  2E33               	decfsz	(btemp+11)^0,f,c
 17887  016086  D7F6               	goto	u5895
 17888  016088                     u5897:
 17889                           
 17890                           ;stkvar	_m @ sp[(-10)+4]
 17891  016088  0EFA               	movlw	-6
 17892  01608A  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 17893  016090  0EFB               	movlw	-5
 17894  016092  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 17895  016098  0EFC               	movlw	-4
 17896  01609A  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 17897  0160A0  0EFD               	movlw	-3
 17898  0160A2  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 17899                           
 17900                           ;stkvar	_m @ sp[(-10)+4]
 17901                           ;stkvar	_u @ sp[(-10)+0]
 17902  0160A8  0EF6               	movlw	-10
 17903  0160AA  006F FF8C  F030    	movff	plusw1,btemp+8
 17904  0160B0  0EF7               	movlw	-9
 17905  0160B2  006F FF8C  F031    	movff	plusw1,btemp+9
 17906  0160B8  0EF8               	movlw	-8
 17907  0160BA  006F FF8C  F032    	movff	plusw1,btemp+10
 17908  0160C0  0EF9               	movlw	-7
 17909  0160C2  006F FF8C  F033    	movff	plusw1,btemp+11
 17910  0160C8  0EFA               	movlw	-6
 17911  0160CA  50E3               	movf	plusw1,w,c
 17912  0160CC  1630               	andwf	(btemp+8)^0,f,c
 17913  0160CE  0EFB               	movlw	-5
 17914  0160D0  50E3               	movf	plusw1,w,c
 17915  0160D2  1631               	andwf	(btemp+9)^0,f,c
 17916  0160D4  0EFC               	movlw	-4
 17917  0160D6  50E3               	movf	plusw1,w,c
 17918  0160D8  1632               	andwf	(btemp+10)^0,f,c
 17919  0160DA  0EFD               	movlw	-3
 17920  0160DC  50E3               	movf	plusw1,w,c
 17921  0160DE  1633               	andwf	(btemp+11)^0,f,c
 17922  0160E0  5030               	movf	(btemp+8)^0,w,c
 17923  0160E2  1031               	iorwf	(btemp+9)^0,w,c
 17924  0160E4  1032               	iorwf	(btemp+10)^0,w,c
 17925  0160E6  1033               	iorwf	(btemp+11)^0,w,c
 17926  0160E8  B4D8               	btfsc	status,2,c
 17927  0160EA  D7A7               	goto	u5870
 17928                           
 17929                           ;stkvar	_u @ sp[(-10)+0]
 17930  0160EC  0EF6               	movlw	-10
 17931  0160EE  006F FF8C  F030    	movff	plusw1,btemp+8
 17932  0160F4  0EF7               	movlw	-9
 17933  0160F6  006F FF8C  F031    	movff	plusw1,btemp+9
 17934  0160FC  0EF8               	movlw	-8
 17935  0160FE  006F FF8C  F032    	movff	plusw1,btemp+10
 17936  016104  0EF9               	movlw	-7
 17937  016106  006F FF8C  F033    	movff	plusw1,btemp+11
 17938  01610C  0E20               	movlw	32
 17939  01610E  D005               	goto	u5910
 17940  016110                     u5915:
 17941  016110  90D8               	bcf	status,0,c
 17942  016112  3233               	rrcf	(btemp+11)^0,f,c
 17943  016114  3232               	rrcf	(btemp+10)^0,f,c
 17944  016116  3231               	rrcf	(btemp+9)^0,f,c
 17945  016118  3230               	rrcf	(btemp+8)^0,f,c
 17946  01611A                     u5910:
 17947  01611A  2EE8               	decfsz	wreg,f,c
 17948  01611C  D7F9               	goto	u5915
 17949  01611E  5030               	movf	(btemp+8)^0,w,c
 17950  016120  B4D8               	btfsc	status,2,c
 17951  016122  D028               	goto	l7814
 17952                           
 17953                           ;stkvar	_m @ sp[(-10)+4]
 17954                           ;stkvar	_u @ sp[(-10)+0]
 17955  016124  0EF6               	movlw	-10
 17956  016126  50E3               	movf	plusw1,w,c
 17957  016128  6E28               	movwf	btemp^0,c
 17958  01612A  0EFA               	movlw	-6
 17959  01612C  50E3               	movf	plusw1,w,c
 17960  01612E  2628               	addwf	btemp^0,f,c
 17961  016130  0EF6               	movlw	-10
 17962  016132  0060  F0A3  FFE3   	movff	btemp,plusw1
 17963  016138  0EF7               	movlw	-9
 17964  01613A  50E3               	movf	plusw1,w,c
 17965  01613C  6E28               	movwf	btemp^0,c
 17966  01613E  0EFB               	movlw	-5
 17967  016140  50E3               	movf	plusw1,w,c
 17968  016142  2228               	addwfc	btemp^0,f,c
 17969  016144  0EF7               	movlw	-9
 17970  016146  0060  F0A3  FFE3   	movff	btemp,plusw1
 17971  01614C  0EF8               	movlw	-8
 17972  01614E  50E3               	movf	plusw1,w,c
 17973  016150  6E28               	movwf	btemp^0,c
 17974  016152  0EFC               	movlw	-4
 17975  016154  50E3               	movf	plusw1,w,c
 17976  016156  2228               	addwfc	btemp^0,f,c
 17977  016158  0EF8               	movlw	-8
 17978  01615A  0060  F0A3  FFE3   	movff	btemp,plusw1
 17979  016160  0EF9               	movlw	-7
 17980  016162  50E3               	movf	plusw1,w,c
 17981  016164  6E28               	movwf	btemp^0,c
 17982  016166  0EFD               	movlw	-3
 17983  016168  50E3               	movf	plusw1,w,c
 17984  01616A  2228               	addwfc	btemp^0,f,c
 17985  01616C  0EF9               	movlw	-7
 17986  01616E  0060  F0A3  FFE3   	movff	btemp,plusw1
 17987  016174                     l7814:
 17988                           
 17989                           ;stkvar	_m @ sp[(-10)+4]
 17990  016174  0EFA               	movlw	-6
 17991  016176  006F FF8C  F030    	movff	plusw1,btemp+8
 17992  01617C  0EFB               	movlw	-5
 17993  01617E  006F FF8C  F031    	movff	plusw1,btemp+9
 17994  016184  0EFC               	movlw	-4
 17995  016186  006F FF8C  F032    	movff	plusw1,btemp+10
 17996  01618C  0EFD               	movlw	-3
 17997  01618E  006F FF8C  F033    	movff	plusw1,btemp+11
 17998  016194  1C30               	comf	(btemp+8)^0,w,c
 17999  016196  6E2C               	movwf	(btemp+4)^0,c
 18000  016198  1C31               	comf	(btemp+9)^0,w,c
 18001  01619A  6E2D               	movwf	(btemp+5)^0,c
 18002  01619C  1C32               	comf	(btemp+10)^0,w,c
 18003  01619E  6E2E               	movwf	(btemp+6)^0,c
 18004  0161A0  1C33               	comf	(btemp+11)^0,w,c
 18005  0161A2  6E2F               	movwf	(btemp+7)^0,c
 18006                           
 18007                           ;stkvar	_u @ sp[(-10)+0]
 18008  0161A4  50E1               	movf	fsr1l,w,c
 18009  0161A6  0FF6               	addlw	-10
 18010  0161A8  6ED9               	movwf	fsr2l,c
 18011  0161AA  50E2               	movf	fsr1h,w,c
 18012  0161AC  6EDA               	movwf	fsr2h,c
 18013  0161AE  0EFF               	movlw	255
 18014  0161B0  22DA               	addwfc	fsr2h,f,c
 18015  0161B2  502C               	movf	(btemp+4)^0,w,c
 18016  0161B4  16DE               	andwf	postinc2,f,c
 18017  0161B6  502D               	movf	(btemp+5)^0,w,c
 18018  0161B8  16DE               	andwf	postinc2,f,c
 18019  0161BA  502E               	movf	(btemp+6)^0,w,c
 18020  0161BC  16DE               	andwf	postinc2,f,c
 18021  0161BE  502F               	movf	(btemp+7)^0,w,c
 18022  0161C0  16DE               	andwf	postinc2,f,c
 18023  0161C2  D05B               	goto	l7824
 18024  0161C4                     l7816:
 18025                           
 18026                           ;stkvar	_u @ sp[(-10)+0]
 18027  0161C4  0EF6               	movlw	-10
 18028  0161C6  006F FF8C  F030    	movff	plusw1,btemp+8
 18029  0161CC  0EF7               	movlw	-9
 18030  0161CE  006F FF8C  F031    	movff	plusw1,btemp+9
 18031  0161D4  0EF8               	movlw	-8
 18032  0161D6  006F FF8C  F032    	movff	plusw1,btemp+10
 18033  0161DC  0EF9               	movlw	-7
 18034  0161DE  006F FF8C  F033    	movff	plusw1,btemp+11
 18035  0161E4  0E20               	movlw	32
 18036  0161E6  D005               	goto	u5930
 18037  0161E8                     u5935:
 18038  0161E8  90D8               	bcf	status,0,c
 18039  0161EA  3233               	rrcf	(btemp+11)^0,f,c
 18040  0161EC  3232               	rrcf	(btemp+10)^0,f,c
 18041  0161EE  3231               	rrcf	(btemp+9)^0,f,c
 18042  0161F0  3230               	rrcf	(btemp+8)^0,f,c
 18043  0161F2                     u5930:
 18044  0161F2  2EE8               	decfsz	wreg,f,c
 18045  0161F4  D7F9               	goto	u5935
 18046  0161F6  6630               	tstfsz	(btemp+8)^0,c
 18047  0161F8  D009               	goto	l7820
 18048                           
 18049                           ;stkvar	_u @ sp[(-10)+0]
 18050  0161FA  0EF6               	movlw	-10
 18051  0161FC  6AE3               	clrf	plusw1,c
 18052  0161FE  0EF7               	movlw	-9
 18053  016200  6AE3               	clrf	plusw1,c
 18054  016202  0EF8               	movlw	-8
 18055  016204  6AE3               	clrf	plusw1,c
 18056  016206  0EF9               	movlw	-7
 18057  016208  6AE3               	clrf	plusw1,c
 18058  01620A  D037               	goto	l7824
 18059  01620C                     l7820:
 18060                           
 18061                           ;stkvar	_u @ sp[(-10)+0]
 18062  01620C  0EF6               	movlw	-10
 18063  01620E  006F FF8C  F030    	movff	plusw1,btemp+8
 18064  016214  0EF7               	movlw	-9
 18065  016216  006F FF8C  F031    	movff	plusw1,btemp+9
 18066  01621C  0EF8               	movlw	-8
 18067  01621E  006F FF8C  F032    	movff	plusw1,btemp+10
 18068  016224  0EF9               	movlw	-7
 18069  016226  006F FF8C  F033    	movff	plusw1,btemp+11
 18070  01622C  90D8               	bcf	status,0,c
 18071  01622E  3430               	rlcf	(btemp+8)^0,w,c
 18072  016230  6E2C               	movwf	(btemp+4)^0,c
 18073  016232  3431               	rlcf	(btemp+9)^0,w,c
 18074  016234  6E2D               	movwf	(btemp+5)^0,c
 18075  016236  3432               	rlcf	(btemp+10)^0,w,c
 18076  016238  6E2E               	movwf	(btemp+6)^0,c
 18077  01623A  3433               	rlcf	(btemp+11)^0,w,c
 18078  01623C  6E2F               	movwf	(btemp+7)^0,c
 18079  01623E  502C               	movf	(btemp+4)^0,w,c
 18080  016240  102D               	iorwf	(btemp+5)^0,w,c
 18081  016242  102E               	iorwf	(btemp+6)^0,w,c
 18082  016244  102F               	iorwf	(btemp+7)^0,w,c
 18083  016246  B4D8               	btfsc	status,2,c
 18084  016248  D018               	goto	l7824
 18085  01624A  0E00               	movlw	0
 18086  01624C  6E30               	movwf	(btemp+8)^0,c
 18087  01624E  0E00               	movlw	0
 18088  016250  6E31               	movwf	(btemp+9)^0,c
 18089  016252  0E80               	movlw	128
 18090  016254  6E32               	movwf	(btemp+10)^0,c
 18091  016256  0EBF               	movlw	191
 18092  016258  6E33               	movwf	(btemp+11)^0,c
 18093                           
 18094                           ;stkvar	_u @ sp[(-10)+0]
 18095  01625A  0EF6               	movlw	-10
 18096  01625C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18097  016262  0EF7               	movlw	-9
 18098  016264  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18099  01626A  0EF8               	movlw	-8
 18100  01626C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18101  016272  0EF9               	movlw	-7
 18102  016274  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18103  01627A                     l7824:
 18104                           
 18105                           ;stkvar	_u @ sp[(-10)+0]
 18106  01627A  0EF6               	movlw	-10
 18107  01627C  006F FF8C  F028    	movff	plusw1,btemp
 18108  016282  0EF7               	movlw	-9
 18109  016284  006F FF8C  F029    	movff	plusw1,btemp+1
 18110  01628A  0EF8               	movlw	-8
 18111  01628C  006F FF8C  F02A    	movff	plusw1,btemp+2
 18112  016292  0EF9               	movlw	-7
 18113  016294                     L18:
 18114  016294  006F FF8C  F02B    	movff	plusw1,btemp+3
 18115                           
 18116                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18117  01629A  0EF2               	movlw	242
 18118  01629C  26E1               	addwf	fsr1l,f,c
 18119  01629E  0EFF               	movlw	255
 18120  0162A0  22E2               	addwfc	fsr1h,f,c
 18121  0162A2  0012               	return		;funcret
 18122  0162A4                     __end_of_floorf:
 18123                           	opt callstack 0
 18124                           
 18125 ;; *************** function ___fpclassifyf *****************
 18126 ;; Defined at:
 18127 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18128 ;; Parameters:    Size  Location     Type
 18129 ;;  x               4  [STACK] float 
 18130 ;; Auto vars:     Size  Location     Type
 18131 ;;  u               4  [STACK] struct .
 18132 ;;  e               2  [STACK] int 
 18133 ;; Return value:  Size  Location     Type
 18134 ;;                  2  [STACK] int 
 18135 ;; Registers used:
 18136 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18137 ;; Tracked objects:
 18138 ;;		On entry : 0/0
 18139 ;;		On exit  : 0/0
 18140 ;;		Unchanged: 0/0
 18141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18143 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18145 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18146 ;;Total ram usage:        0 bytes
 18147 ;; Hardware stack levels used:    1
 18148 ;; Hardware stack levels required when called:   15
 18149 ;; This function calls:
 18150 ;;		Nothing
 18151 ;; This function is called by:
 18152 ;;		_efgtoa
 18153 ;; This function uses a reentrant model
 18154 ;;
 18155                           
 18156                           	psect	text60
 18157  017F74                     __ptext60:
 18158                           	opt callstack 0
 18159  017F74                     ___fpclassifyf:
 18160                           	opt callstack 0
 18161                           
 18162                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18163  017F74  0E06               	movlw	6
 18164  017F76  26E1               	addwf	fsr1l,f,c
 18165  017F78  0E00               	movlw	0
 18166  017F7A  22E2               	addwfc	fsr1h,f,c
 18167                           
 18168                           ;incstack = 0
 18169 ;; hardware stack exceeded
 18170  017F7C  0060  F208  F030   	movff	___fpclassifyf@F463,btemp+8
 18171  017F82  0060  F20C  F031   	movff	___fpclassifyf@F463+1,btemp+9
 18172  017F88  0060  F210  F032   	movff	___fpclassifyf@F463+2,btemp+10
 18173  017F8E  0060  F214  F033   	movff	___fpclassifyf@F463+3,btemp+11
 18174                           
 18175                           ;stkvar	_u @ sp[(-6)+0]
 18176  017F94  0EFA               	movlw	-6
 18177  017F96  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18178  017F9C  0EFB               	movlw	-5
 18179  017F9E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18180  017FA4  0EFC               	movlw	-4
 18181  017FA6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18182  017FAC  0EFD               	movlw	-3
 18183  017FAE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18184                           
 18185                           ;stkvar	_x @ sp[(-6)+-4]
 18186  017FB4  0EF6               	movlw	-10
 18187  017FB6  006F FF8C  F030    	movff	plusw1,btemp+8
 18188  017FBC  0EF7               	movlw	-9
 18189  017FBE  006F FF8C  F031    	movff	plusw1,btemp+9
 18190  017FC4  0EF8               	movlw	-8
 18191  017FC6  006F FF8C  F032    	movff	plusw1,btemp+10
 18192  017FCC  0EF9               	movlw	-7
 18193  017FCE  006F FF8C  F033    	movff	plusw1,btemp+11
 18194                           
 18195                           ;stkvar	_u @ sp[(-6)+0]
 18196  017FD4  0EFA               	movlw	-6
 18197  017FD6  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18198  017FDC  0EFB               	movlw	-5
 18199  017FDE  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18200  017FE4  0EFC               	movlw	-4
 18201  017FE6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18202  017FEC  0EFD               	movlw	-3
 18203  017FEE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18204                           
 18205                           ;stkvar	_u @ sp[(-6)+0]
 18206  017FF4  0EFA               	movlw	-6
 18207  017FF6  006F FF8C  F030    	movff	plusw1,btemp+8
 18208  017FFC  0EFB               	movlw	-5
 18209  017FFE  006F FF8C  F031    	movff	plusw1,btemp+9
 18210  018004  0EFC               	movlw	-4
 18211  018006  006F FF8C  F032    	movff	plusw1,btemp+10
 18212  01800C  0EFD               	movlw	-3
 18213  01800E  006F FF8C  F033    	movff	plusw1,btemp+11
 18214  018014  0E18               	movlw	24
 18215  018016  D005               	goto	u5740
 18216  018018                     u5745:
 18217  018018  90D8               	bcf	status,0,c
 18218  01801A  3233               	rrcf	(btemp+11)^0,f,c
 18219  01801C  3232               	rrcf	(btemp+10)^0,f,c
 18220  01801E  3231               	rrcf	(btemp+9)^0,f,c
 18221  018020  3230               	rrcf	(btemp+8)^0,f,c
 18222  018022                     u5740:
 18223  018022  2EE8               	decfsz	wreg,f,c
 18224  018024  D7F9               	goto	u5745
 18225  018026  0060  F0C0  F02E   	movff	btemp+8,btemp+6
 18226  01802C  0060  F0C4  F02F   	movff	btemp+9,btemp+7
 18227  018032  0EFF               	movlw	255
 18228  018034  162E               	andwf	(btemp+6)^0,f,c
 18229  018036  0E00               	movlw	0
 18230  018038  162F               	andwf	(btemp+7)^0,f,c
 18231                           
 18232                           ;stkvar	_e @ sp[(-6)+4]
 18233  01803A  0EFE               	movlw	-2
 18234  01803C  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 18235  018042  0EFF               	movlw	-1
 18236  018044  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 18237                           
 18238                           ;stkvar	_e @ sp[(-6)+4]
 18239  01804A  0EFE               	movlw	-2
 18240  01804C  006F FF8C  F028    	movff	plusw1,btemp
 18241  018052  0EFF               	movlw	-1
 18242  018054  50E3               	movf	plusw1,w,c
 18243  018056  1028               	iorwf	btemp^0,w,c
 18244  018058  A4D8               	btfss	status,2,c
 18245  01805A  D023               	goto	l7762
 18246                           
 18247                           ;stkvar	_u @ sp[(-6)+0]
 18248  01805C  0EFA               	movlw	-6
 18249  01805E  006F FF8C  F030    	movff	plusw1,btemp+8
 18250  018064  0EFB               	movlw	-5
 18251  018066  006F FF8C  F031    	movff	plusw1,btemp+9
 18252  01806C  0EFC               	movlw	-4
 18253  01806E  006F FF8C  F032    	movff	plusw1,btemp+10
 18254  018074  0EFD               	movlw	-3
 18255  018076  006F FF8C  F033    	movff	plusw1,btemp+11
 18256  01807C  90D8               	bcf	status,0,c
 18257  01807E  3430               	rlcf	(btemp+8)^0,w,c
 18258  018080  6E2C               	movwf	(btemp+4)^0,c
 18259  018082  3431               	rlcf	(btemp+9)^0,w,c
 18260  018084  6E2D               	movwf	(btemp+5)^0,c
 18261  018086  3432               	rlcf	(btemp+10)^0,w,c
 18262  018088  6E2E               	movwf	(btemp+6)^0,c
 18263  01808A  3433               	rlcf	(btemp+11)^0,w,c
 18264  01808C  6E2F               	movwf	(btemp+7)^0,c
 18265  01808E  502C               	movf	(btemp+4)^0,w,c
 18266  018090  102D               	iorwf	(btemp+5)^0,w,c
 18267  018092  102E               	iorwf	(btemp+6)^0,w,c
 18268  018094  102F               	iorwf	(btemp+7)^0,w,c
 18269  018096  A4D8               	btfss	status,2,c
 18270  018098  D002               	goto	l7758
 18271  01809A  0E02               	movlw	2
 18272  01809C  D02E               	goto	L19
 18273  01809E                     l7758:
 18274  01809E  0E03               	movlw	3
 18275  0180A0  D02C               	goto	L19
 18276  0180A2                     l7762:
 18277                           
 18278                           ;stkvar	_e @ sp[(-6)+4]
 18279  0180A2  0EFE               	movlw	-2
 18280  0180A4  28E3               	incf	plusw1,w,c
 18281  0180A6  E128               	bnz	l7768
 18282  0180A8  0EFF               	movlw	-1
 18283  0180AA  50E3               	movf	plusw1,w,c
 18284  0180AC  A4D8               	btfss	status,2,c
 18285  0180AE  D024               	goto	l7768
 18286                           
 18287                           ;stkvar	_u @ sp[(-6)+0]
 18288  0180B0  0EFA               	movlw	-6
 18289  0180B2  006F FF8C  F030    	movff	plusw1,btemp+8
 18290  0180B8  0EFB               	movlw	-5
 18291  0180BA  006F FF8C  F031    	movff	plusw1,btemp+9
 18292  0180C0  0EFC               	movlw	-4
 18293  0180C2  006F FF8C  F032    	movff	plusw1,btemp+10
 18294  0180C8  0EFD               	movlw	-3
 18295  0180CA  006F FF8C  F033    	movff	plusw1,btemp+11
 18296  0180D0  0E09               	movlw	9
 18297  0180D2                     u5785:
 18298  0180D2  90D8               	bcf	status,0,c
 18299  0180D4  3630               	rlcf	(btemp+8)^0,f,c
 18300  0180D6  3631               	rlcf	(btemp+9)^0,f,c
 18301  0180D8  3632               	rlcf	(btemp+10)^0,f,c
 18302  0180DA  3633               	rlcf	(btemp+11)^0,f,c
 18303  0180DC  2EE8               	decfsz	wreg,f,c
 18304  0180DE  D7F9               	goto	u5785
 18305  0180E0  5030               	movf	(btemp+8)^0,w,c
 18306  0180E2  1031               	iorwf	(btemp+9)^0,w,c
 18307  0180E4  1032               	iorwf	(btemp+10)^0,w,c
 18308  0180E6  1033               	iorwf	(btemp+11)^0,w,c
 18309  0180E8  A4D8               	btfss	status,2,c
 18310  0180EA  D002               	goto	u5790
 18311  0180EC  0E01               	movlw	1
 18312  0180EE  D001               	goto	u5800
 18313  0180F0                     u5790:
 18314  0180F0  0E00               	movlw	0
 18315  0180F2                     u5800:
 18316  0180F2  6E28               	movwf	btemp^0,c
 18317  0180F4  6A29               	clrf	(btemp+1)^0,c
 18318  0180F6  D004               	goto	l3044
 18319  0180F8                     l7768:
 18320  0180F8  0E04               	movlw	4
 18321  0180FA                     L19:
 18322  0180FA  6E28               	movwf	btemp^0,c
 18323  0180FC  0E00               	movlw	0
 18324  0180FE  6E29               	movwf	(btemp+1)^0,c
 18325  018100                     l3044:
 18326                           
 18327                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18328  018100  0EF6               	movlw	246
 18329  018102  26E1               	addwf	fsr1l,f,c
 18330  018104  0EFF               	movlw	255
 18331  018106  22E2               	addwfc	fsr1h,f,c
 18332  018108  0012               	return		;funcret
 18333  01810A                     __end_of___fpclassifyf:
 18334                           	opt callstack 0
 18335                           
 18336 ;; *************** function ___fltol *****************
 18337 ;; Defined at:
 18338 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18339 ;; Parameters:    Size  Location     Type
 18340 ;;  f1              4  [STACK] int 
 18341 ;; Auto vars:     Size  Location     Type
 18342 ;;  exp1            1  [STACK] unsigned char 
 18343 ;;  sign1           1  [STACK] unsigned char 
 18344 ;; Return value:  Size  Location     Type
 18345 ;;                  4  [STACK] long 
 18346 ;; Registers used:
 18347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18348 ;; Tracked objects:
 18349 ;;		On entry : 0/0
 18350 ;;		On exit  : 0/0
 18351 ;;		Unchanged: 0/0
 18352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18357 ;;Total ram usage:        0 bytes
 18358 ;; Hardware stack levels used:    1
 18359 ;; Hardware stack levels required when called:   15
 18360 ;; This function calls:
 18361 ;;		Nothing
 18362 ;; This function is called by:
 18363 ;;		_main
 18364 ;;		_calc_bsoc
 18365 ;;		_init_bsoc
 18366 ;;		_efgtoa
 18367 ;; This function uses a reentrant model
 18368 ;;
 18369                           
 18370                           	psect	text61
 18371  0183FE                     __ptext61:
 18372                           	opt callstack 0
 18373  0183FE                     ___fltol:
 18374                           	opt callstack 0
 18375                           
 18376                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18377  0183FE  52E6               	movf	postinc1,f,c
 18378  018400  52E6               	movf	postinc1,f,c
 18379                           
 18380                           ;stkvar	_f1 @ sp[(-2)+-4]
 18381                           
 18382                           ;incstack = 0
 18383 ;; hardware stack exceeded
 18384  018402  0EFA               	movlw	-6
 18385  018404  006F FF8C  F030    	movff	plusw1,btemp+8
 18386  01840A  0EFB               	movlw	-5
 18387  01840C  006F FF8C  F031    	movff	plusw1,btemp+9
 18388  018412  0EFC               	movlw	-4
 18389  018414  006F FF8C  F032    	movff	plusw1,btemp+10
 18390  01841A  0EFD               	movlw	-3
 18391  01841C  006F FF8C  F033    	movff	plusw1,btemp+11
 18392  018422  0E18               	movlw	24
 18393  018424  D005               	goto	u6950
 18394  018426                     u6955:
 18395  018426  90D8               	bcf	status,0,c
 18396  018428  3233               	rrcf	(btemp+11)^0,f,c
 18397  01842A  3232               	rrcf	(btemp+10)^0,f,c
 18398  01842C  3231               	rrcf	(btemp+9)^0,f,c
 18399  01842E  3230               	rrcf	(btemp+8)^0,f,c
 18400  018430                     u6950:
 18401  018430  2EE8               	decfsz	wreg,f,c
 18402  018432  D7F9               	goto	u6955
 18403                           
 18404                           ;stkvar	_exp1 @ sp[(-2)+0]
 18405  018434  0EFE               	movlw	-2
 18406  018436  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18407  01843C  0EFE               	movlw	-2
 18408  01843E  50E3               	movf	plusw1,w,c
 18409  018440  A4D8               	btfss	status,2,c
 18410  018442  D006               	goto	l8388
 18411  018444                     u6960:
 18412  018444  0E00               	movlw	0
 18413  018446  6E28               	movwf	btemp^0,c
 18414  018448  6A29               	clrf	(btemp+1)^0,c
 18415  01844A  6A2A               	clrf	(btemp+2)^0,c
 18416  01844C  6A2B               	clrf	(btemp+3)^0,c
 18417  01844E  D08B               	goto	l2660
 18418  018450                     l8388:
 18419                           
 18420                           ;stkvar	_f1 @ sp[(-2)+-4]
 18421  018450  0EFA               	movlw	-6
 18422  018452  006F FF8C  F030    	movff	plusw1,btemp+8
 18423  018458  0EFB               	movlw	-5
 18424  01845A  006F FF8C  F031    	movff	plusw1,btemp+9
 18425  018460  0EFC               	movlw	-4
 18426  018462  006F FF8C  F032    	movff	plusw1,btemp+10
 18427  018468  0EFD               	movlw	-3
 18428  01846A  006F FF8C  F033    	movff	plusw1,btemp+11
 18429  018470  0E20               	movlw	32
 18430  018472  D005               	goto	u6970
 18431  018474                     u6975:
 18432  018474  90D8               	bcf	status,0,c
 18433  018476  3233               	rrcf	(btemp+11)^0,f,c
 18434  018478  3232               	rrcf	(btemp+10)^0,f,c
 18435  01847A  3231               	rrcf	(btemp+9)^0,f,c
 18436  01847C  3230               	rrcf	(btemp+8)^0,f,c
 18437  01847E                     u6970:
 18438  01847E  2EE8               	decfsz	wreg,f,c
 18439  018480  D7F9               	goto	u6975
 18440                           
 18441                           ;stkvar	_sign1 @ sp[(-2)+1]
 18442  018482  0EFF               	movlw	-1
 18443  018484  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18444                           
 18445                           ;stkvar	_f1 @ sp[(-2)+-4]
 18446  01848A  0EFC               	movlw	-4
 18447  01848C  8EE3               	bsf	plusw1,7,c
 18448                           
 18449                           ;stkvar	_f1 @ sp[(-2)+-4]
 18450  01848E  50E1               	movf	fsr1l,w,c
 18451  018490  0FFA               	addlw	-6
 18452  018492  6ED9               	movwf	fsr2l,c
 18453  018494  50E2               	movf	fsr1h,w,c
 18454  018496  6EDA               	movwf	fsr2h,c
 18455  018498  0EFF               	movlw	255
 18456  01849A  22DA               	addwfc	fsr2h,f,c
 18457  01849C  0EFF               	movlw	255
 18458  01849E  16DE               	andwf	postinc2,f,c
 18459  0184A0  0EFF               	movlw	255
 18460  0184A2  16DE               	andwf	postinc2,f,c
 18461  0184A4  0EFF               	movlw	255
 18462  0184A6  16DE               	andwf	postinc2,f,c
 18463  0184A8  0E00               	movlw	0
 18464  0184AA  16DE               	andwf	postinc2,f,c
 18465                           
 18466                           ;stkvar	_exp1 @ sp[(-2)+0]
 18467  0184AC  0EFE               	movlw	-2
 18468  0184AE  006F FF8C  F028    	movff	plusw1,btemp
 18469  0184B4  0E96               	movlw	150
 18470  0184B6  5E28               	subwf	btemp^0,f,c
 18471  0184B8  0EFE               	movlw	-2
 18472  0184BA  0060  F0A3  FFE3   	movff	btemp,plusw1
 18473                           
 18474                           ;stkvar	_exp1 @ sp[(-2)+0]
 18475  0184C0  0EFE               	movlw	-2
 18476  0184C2  AEE3               	btfss	plusw1,7,c
 18477  0184C4  D014               	goto	l8406
 18478                           
 18479                           ;stkvar	_exp1 @ sp[(-2)+0]
 18480  0184C6  0EFE               	movlw	-2
 18481  0184C8  50E3               	movf	plusw1,w,c
 18482  0184CA  0A80               	xorlw	128
 18483  0184CC  0F97               	addlw	151
 18484  0184CE  A0D8               	btfss	status,0,c
 18485  0184D0  D7B9               	goto	u6960
 18486  0184D2                     l8404:
 18487                           
 18488                           ;stkvar	_f1 @ sp[(-2)+-4]
 18489  0184D2  90D8               	bcf	status,0,c
 18490  0184D4  0EFD               	movlw	-3
 18491  0184D6  32E3               	rrcf	plusw1,f,c
 18492  0184D8  0EFC               	movlw	-4
 18493  0184DA  32E3               	rrcf	plusw1,f,c
 18494  0184DC  0EFB               	movlw	-5
 18495  0184DE  32E3               	rrcf	plusw1,f,c
 18496  0184E0  0EFA               	movlw	-6
 18497  0184E2  32E3               	rrcf	plusw1,f,c
 18498                           
 18499                           ;stkvar	_exp1 @ sp[(-2)+0]
 18500  0184E4  0EFE               	movlw	-2
 18501  0184E6  2AE3               	incf	plusw1,f,c
 18502  0184E8  B4D8               	btfsc	status,2,c
 18503  0184EA  D018               	goto	u7020
 18504  0184EC  D7F2               	goto	l8404
 18505  0184EE                     l8406:
 18506                           
 18507                           ;stkvar	_exp1 @ sp[(-2)+0]
 18508  0184EE  0EFE               	movlw	-2
 18509  0184F0  006F FF8C  F028    	movff	plusw1,btemp
 18510  0184F6  0E1F               	movlw	31
 18511  0184F8  6428               	cpfsgt	btemp^0,c
 18512  0184FA  D00C               	goto	l8414
 18513  0184FC  D7A3               	goto	u6960
 18514  0184FE                     l8412:
 18515                           
 18516                           ;stkvar	_f1 @ sp[(-2)+-4]
 18517  0184FE  90D8               	bcf	status,0,c
 18518  018500  0EFA               	movlw	-6
 18519  018502  36E3               	rlcf	plusw1,f,c
 18520  018504  0EFB               	movlw	-5
 18521  018506  36E3               	rlcf	plusw1,f,c
 18522  018508  0EFC               	movlw	-4
 18523  01850A  36E3               	rlcf	plusw1,f,c
 18524  01850C  0EFD               	movlw	-3
 18525  01850E  36E3               	rlcf	plusw1,f,c
 18526                           
 18527                           ;stkvar	_exp1 @ sp[(-2)+0]
 18528  018510  0EFE               	movlw	-2
 18529  018512  06E3               	decf	plusw1,f,c
 18530  018514                     l8414:
 18531                           
 18532                           ;stkvar	_exp1 @ sp[(-2)+0]
 18533  018514  0EFE               	movlw	-2
 18534  018516  50E3               	movf	plusw1,w,c
 18535  018518  A4D8               	btfss	status,2,c
 18536  01851A  D7F1               	goto	l8412
 18537  01851C                     u7020:
 18538                           
 18539                           ;stkvar	_sign1 @ sp[(-2)+1]
 18540  01851C  0EFF               	movlw	-1
 18541  01851E  50E3               	movf	plusw1,w,c
 18542  018520  B4D8               	btfsc	status,2,c
 18543  018522  D011               	goto	u7040
 18544                           
 18545                           ;stkvar	_f1 @ sp[(-2)+-4]
 18546                           ;stkvar	_f1 @ sp[(-2)+-4]
 18547  018524  0EFA               	movlw	-6
 18548  018526  6CE3               	negf	plusw1,c
 18549  018528  0EFB               	movlw	-5
 18550  01852A  1EE3               	comf	plusw1,f,c
 18551  01852C  0EFC               	movlw	-4
 18552  01852E  1EE3               	comf	plusw1,f,c
 18553  018530  0EFD               	movlw	-3
 18554  018532  1EE3               	comf	plusw1,f,c
 18555  018534  E308               	bnc	u7040
 18556  018536  0EFB               	movlw	-5
 18557  018538  2AE3               	incf	plusw1,f,c
 18558  01853A  E305               	bnc	u7040
 18559  01853C  0EFC               	movlw	-4
 18560  01853E  2AE3               	incf	plusw1,f,c
 18561  018540  E302               	bnc	u7040
 18562  018542  0EFD               	movlw	-3
 18563  018544  2AE3               	incf	plusw1,f,c
 18564  018546                     u7040:
 18565                           
 18566                           ;stkvar	_f1 @ sp[(-2)+-4]
 18567  018546  0EFA               	movlw	-6
 18568  018548  006F FF8C  F028    	movff	plusw1,btemp
 18569  01854E  0EFB               	movlw	-5
 18570  018550  006F FF8C  F029    	movff	plusw1,btemp+1
 18571  018556  0EFC               	movlw	-4
 18572  018558  006F FF8C  F02A    	movff	plusw1,btemp+2
 18573  01855E  0EFD               	movlw	-3
 18574  018560  006F FF8C  F02B    	movff	plusw1,btemp+3
 18575  018566                     l2660:
 18576                           
 18577                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18578  018566  0EFA               	movlw	250
 18579  018568  26E1               	addwf	fsr1l,f,c
 18580  01856A  0EFF               	movlw	255
 18581  01856C  22E2               	addwfc	fsr1h,f,c
 18582  01856E  0012               	return		;funcret
 18583  018570                     __end_of___fltol:
 18584                           	opt callstack 0
 18585                           
 18586 ;; *************** function ___flneg *****************
 18587 ;; Defined at:
 18588 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18589 ;; Parameters:    Size  Location     Type
 18590 ;;  f1              4  [STACK] long 
 18591 ;; Auto vars:     Size  Location     Type
 18592 ;;		None
 18593 ;; Return value:  Size  Location     Type
 18594 ;;                  4  [STACK] long 
 18595 ;; Registers used:
 18596 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18597 ;; Tracked objects:
 18598 ;;		On entry : 0/0
 18599 ;;		On exit  : 0/0
 18600 ;;		Unchanged: 0/0
 18601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18606 ;;Total ram usage:        0 bytes
 18607 ;; Hardware stack levels used:    1
 18608 ;; Hardware stack levels required when called:   15
 18609 ;; This function calls:
 18610 ;;		Nothing
 18611 ;; This function is called by:
 18612 ;;		_calc_bsoc
 18613 ;;		_efgtoa
 18614 ;; This function uses a reentrant model
 18615 ;;
 18616                           
 18617                           	psect	text62
 18618  01A9F4                     __ptext62:
 18619                           	opt callstack 0
 18620  01A9F4                     ___flneg:
 18621                           	opt callstack 0
 18622                           
 18623                           ;stkvar	_f1 @ sp[(0)+-4]
 18624                           
 18625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18626                           ;incstack = 0
 18627 ;; hardware stack exceeded
 18628  01A9F4  0EFC               	movlw	-4
 18629  01A9F6  50E3               	movf	plusw1,w,c
 18630  01A9F8  E10A               	bnz	u6940
 18631  01A9FA  0EFD               	movlw	-3
 18632  01A9FC  50E3               	movf	plusw1,w,c
 18633  01A9FE  E107               	bnz	u6940
 18634  01AA00  0EFE               	movlw	-2
 18635  01AA02  50E3               	movf	plusw1,w,c
 18636  01AA04  E104               	bnz	u6940
 18637  01AA06  0EFF               	movlw	-1
 18638  01AA08  50E3               	movf	plusw1,w,c
 18639  01AA0A  B4D8               	btfsc	status,2,c
 18640  01AA0C  D002               	goto	l8378
 18641  01AA0E                     u6940:
 18642                           
 18643                           ;stkvar	_f1 @ sp[(0)+-4]
 18644  01AA0E  0EFF               	movlw	-1
 18645  01AA10  7EE3               	btg	plusw1,7,c
 18646  01AA12                     l8378:
 18647                           
 18648                           ;stkvar	_f1 @ sp[(0)+-4]
 18649  01AA12  0EFC               	movlw	-4
 18650  01AA14  006F FF8C  F028    	movff	plusw1,btemp
 18651  01AA1A  0EFD               	movlw	-3
 18652  01AA1C  006F FF8C  F029    	movff	plusw1,btemp+1
 18653  01AA22  0EFE               	movlw	-2
 18654  01AA24  006F FF8C  F02A    	movff	plusw1,btemp+2
 18655  01AA2A  0EFF               	movlw	-1
 18656  01AA2C  006F FF8C  F02B    	movff	plusw1,btemp+3
 18657                           
 18658                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18659  01AA32  52E5               	movf	postdec1,f,c
 18660  01AA34  52E5               	movf	postdec1,f,c
 18661  01AA36  52E5               	movf	postdec1,f,c
 18662  01AA38  52E5               	movf	postdec1,f,c
 18663  01AA3A  0012               	return		;funcret
 18664  01AA3C                     __end_of___flneg:
 18665                           	opt callstack 0
 18666                           
 18667 ;; *************** function ___fleq *****************
 18668 ;; Defined at:
 18669 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18670 ;; Parameters:    Size  Location     Type
 18671 ;;  ff1             4  [STACK] long 
 18672 ;;  ff2             4  [STACK] long 
 18673 ;; Auto vars:     Size  Location     Type
 18674 ;;		None
 18675 ;; Return value:  Size  Location     Type
 18676 ;;		None               void
 18677 ;; Registers used:
 18678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18679 ;; Tracked objects:
 18680 ;;		On entry : 0/0
 18681 ;;		On exit  : 0/0
 18682 ;;		Unchanged: 0/0
 18683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18688 ;;Total ram usage:        0 bytes
 18689 ;; Hardware stack levels used:    1
 18690 ;; Hardware stack levels required when called:   15
 18691 ;; This function calls:
 18692 ;;		Nothing
 18693 ;; This function is called by:
 18694 ;;		_efgtoa
 18695 ;; This function uses a reentrant model
 18696 ;;
 18697                           
 18698                           	psect	text63
 18699  0199B8                     __ptext63:
 18700                           	opt callstack 0
 18701  0199B8                     ___fleq:
 18702                           	opt callstack 0
 18703                           
 18704                           ;stkvar	_ff1 @ sp[(0)+-4]
 18705                           
 18706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18707                           ;incstack = 0
 18708 ;; hardware stack exceeded
 18709  0199B8  50E1               	movf	fsr1l,w,c
 18710  0199BA  0FFC               	addlw	-4
 18711  0199BC  6ED9               	movwf	fsr2l,c
 18712  0199BE  50E2               	movf	fsr1h,w,c
 18713  0199C0  6EDA               	movwf	fsr2h,c
 18714  0199C2  0EFF               	movlw	255
 18715  0199C4  22DA               	addwfc	fsr2h,f,c
 18716  0199C6  0E00               	movlw	0
 18717  0199C8  14DE               	andwf	postinc2,w,c
 18718  0199CA  6E30               	movwf	(btemp+8)^0,c
 18719  0199CC  0E00               	movlw	0
 18720  0199CE  14DE               	andwf	postinc2,w,c
 18721  0199D0  6E31               	movwf	(btemp+9)^0,c
 18722  0199D2  0E80               	movlw	128
 18723  0199D4  14DE               	andwf	postinc2,w,c
 18724  0199D6  6E32               	movwf	(btemp+10)^0,c
 18725  0199D8  0E7F               	movlw	127
 18726  0199DA  14DE               	andwf	postinc2,w,c
 18727  0199DC  6E33               	movwf	(btemp+11)^0,c
 18728  0199DE  5030               	movf	(btemp+8)^0,w,c
 18729  0199E0  1031               	iorwf	(btemp+9)^0,w,c
 18730  0199E2  1032               	iorwf	(btemp+10)^0,w,c
 18731  0199E4  1033               	iorwf	(btemp+11)^0,w,c
 18732  0199E6  A4D8               	btfss	status,2,c
 18733  0199E8  D008               	goto	l8336
 18734                           
 18735                           ;stkvar	_ff1 @ sp[(0)+-4]
 18736  0199EA  0EFC               	movlw	-4
 18737  0199EC  6AE3               	clrf	plusw1,c
 18738  0199EE  0EFD               	movlw	-3
 18739  0199F0  6AE3               	clrf	plusw1,c
 18740  0199F2  0EFE               	movlw	-2
 18741  0199F4  6AE3               	clrf	plusw1,c
 18742  0199F6  0EFF               	movlw	-1
 18743  0199F8  6AE3               	clrf	plusw1,c
 18744  0199FA                     l8336:
 18745                           
 18746                           ;stkvar	_ff2 @ sp[(0)+-8]
 18747  0199FA  50E1               	movf	fsr1l,w,c
 18748  0199FC  0FF8               	addlw	-8
 18749  0199FE  6ED9               	movwf	fsr2l,c
 18750  019A00  50E2               	movf	fsr1h,w,c
 18751  019A02  6EDA               	movwf	fsr2h,c
 18752  019A04  0EFF               	movlw	255
 18753  019A06  22DA               	addwfc	fsr2h,f,c
 18754  019A08  0E00               	movlw	0
 18755  019A0A  14DE               	andwf	postinc2,w,c
 18756  019A0C  6E30               	movwf	(btemp+8)^0,c
 18757  019A0E  0E00               	movlw	0
 18758  019A10  14DE               	andwf	postinc2,w,c
 18759  019A12  6E31               	movwf	(btemp+9)^0,c
 18760  019A14  0E80               	movlw	128
 18761  019A16  14DE               	andwf	postinc2,w,c
 18762  019A18  6E32               	movwf	(btemp+10)^0,c
 18763  019A1A  0E7F               	movlw	127
 18764  019A1C  14DE               	andwf	postinc2,w,c
 18765  019A1E  6E33               	movwf	(btemp+11)^0,c
 18766  019A20  5030               	movf	(btemp+8)^0,w,c
 18767  019A22  1031               	iorwf	(btemp+9)^0,w,c
 18768  019A24  1032               	iorwf	(btemp+10)^0,w,c
 18769  019A26  1033               	iorwf	(btemp+11)^0,w,c
 18770  019A28  A4D8               	btfss	status,2,c
 18771  019A2A  D008               	goto	l8340
 18772                           
 18773                           ;stkvar	_ff2 @ sp[(0)+-8]
 18774  019A2C  0EF8               	movlw	-8
 18775  019A2E  6AE3               	clrf	plusw1,c
 18776  019A30  0EF9               	movlw	-7
 18777  019A32  6AE3               	clrf	plusw1,c
 18778  019A34  0EFA               	movlw	-6
 18779  019A36  6AE3               	clrf	plusw1,c
 18780  019A38  0EFB               	movlw	-5
 18781  019A3A  6AE3               	clrf	plusw1,c
 18782  019A3C                     l8340:
 18783                           
 18784                           ;stkvar	_ff2 @ sp[(0)+-8]
 18785                           ;stkvar	_ff1 @ sp[(0)+-4]
 18786  019A3C  50E1               	movf	fsr1l,w,c
 18787  019A3E  0FFC               	addlw	-4
 18788  019A40  6ED9               	movwf	fsr2l,c
 18789  019A42  50E2               	movf	fsr1h,w,c
 18790  019A44  6EDA               	movwf	fsr2h,c
 18791  019A46  0EFF               	movlw	255
 18792  019A48  22DA               	addwfc	fsr2h,f,c
 18793  019A4A  0EF8               	movlw	-8
 18794  019A4C  50E3               	movf	plusw1,w,c
 18795  019A4E  18DE               	xorwf	postinc2,w,c
 18796  019A50  E10D               	bnz	u6880
 18797  019A52  0EF9               	movlw	-7
 18798  019A54  50E3               	movf	plusw1,w,c
 18799  019A56  18DE               	xorwf	postinc2,w,c
 18800  019A58  E109               	bnz	u6880
 18801  019A5A  0EFA               	movlw	-6
 18802  019A5C  50E3               	movf	plusw1,w,c
 18803  019A5E  18DE               	xorwf	postinc2,w,c
 18804  019A60  E105               	bnz	u6880
 18805  019A62  0EFB               	movlw	-5
 18806  019A64  50E3               	movf	plusw1,w,c
 18807  019A66  18DE               	xorwf	postinc2,w,c
 18808  019A68  B4D8               	btfsc	status,2,c
 18809  019A6A  D002               	goto	l8344
 18810  019A6C                     u6880:
 18811  019A6C  9028               	bcf	btemp& (0+255),0,c
 18812  019A6E  D001               	goto	l2622
 18813  019A70                     l8344:
 18814  019A70  8028               	bsf	btemp& (0+255),0,c
 18815  019A72                     l2622:
 18816                           
 18817                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18818  019A72  0EF8               	movlw	248
 18819  019A74  26E1               	addwf	fsr1l,f,c
 18820  019A76  0EFF               	movlw	255
 18821  019A78  22E2               	addwfc	fsr1h,f,c
 18822  019A7A  0012               	return		;funcret
 18823  019A7C                     __end_of___fleq:
 18824                           	opt callstack 0
 18825                           
 18826 ;; *************** function ___awmod *****************
 18827 ;; Defined at:
 18828 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18829 ;; Parameters:    Size  Location     Type
 18830 ;;  dividend        2  [STACK] int 
 18831 ;;  divisor         2  [STACK] int 
 18832 ;; Auto vars:     Size  Location     Type
 18833 ;;  sign            1  [STACK] unsigned char 
 18834 ;;  counter         1  [STACK] unsigned char 
 18835 ;; Return value:  Size  Location     Type
 18836 ;;                  2  [STACK] int 
 18837 ;; Registers used:
 18838 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18839 ;; Tracked objects:
 18840 ;;		On entry : 0/0
 18841 ;;		On exit  : 0/0
 18842 ;;		Unchanged: 0/0
 18843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18844 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18847 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18848 ;;Total ram usage:        0 bytes
 18849 ;; Hardware stack levels used:    1
 18850 ;; Hardware stack levels required when called:   15
 18851 ;; This function calls:
 18852 ;;		Nothing
 18853 ;; This function is called by:
 18854 ;;		_efgtoa
 18855 ;; This function uses a reentrant model
 18856 ;;
 18857                           
 18858                           	psect	text64
 18859  018FC6                     __ptext64:
 18860                           	opt callstack 0
 18861  018FC6                     ___awmod:
 18862                           	opt callstack 0
 18863                           
 18864                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18865  018FC6  52E6               	movf	postinc1,f,c
 18866  018FC8  52E6               	movf	postinc1,f,c
 18867                           
 18868                           ;stkvar	_sign @ sp[(-2)+0]
 18869                           
 18870                           ;incstack = 0
 18871 ;; hardware stack exceeded
 18872  018FCA  0EFE               	movlw	-2
 18873  018FCC  6AE3               	clrf	plusw1,c
 18874                           
 18875                           ;stkvar	_dividend @ sp[(-2)+-2]
 18876  018FCE  0EFD               	movlw	-3
 18877  018FD0  AEE3               	btfss	plusw1,7,c
 18878  018FD2  D009               	goto	l8302
 18879                           
 18880                           ;stkvar	_dividend @ sp[(-2)+-2]
 18881                           ;stkvar	_dividend @ sp[(-2)+-2]
 18882  018FD4  0EFC               	movlw	-4
 18883  018FD6  6CE3               	negf	plusw1,c
 18884  018FD8  0EFD               	movlw	-3
 18885  018FDA  1EE3               	comf	plusw1,f,c
 18886  018FDC  B0D8               	btfsc	status,0,c
 18887  018FDE  2AE3               	incf	plusw1,f,c
 18888                           
 18889                           ;stkvar	_sign @ sp[(-2)+0]
 18890  018FE0  0EFE               	movlw	-2
 18891  018FE2  6AE3               	clrf	plusw1,c
 18892  018FE4  2AE3               	incf	plusw1,f,c
 18893  018FE6                     l8302:
 18894                           
 18895                           ;stkvar	_divisor @ sp[(-2)+-4]
 18896  018FE6  0EFB               	movlw	-5
 18897  018FE8  AEE3               	btfss	plusw1,7,c
 18898  018FEA  D006               	goto	l8306
 18899                           
 18900                           ;stkvar	_divisor @ sp[(-2)+-4]
 18901                           ;stkvar	_divisor @ sp[(-2)+-4]
 18902  018FEC  0EFA               	movlw	-6
 18903  018FEE  6CE3               	negf	plusw1,c
 18904  018FF0  0EFB               	movlw	-5
 18905  018FF2  1EE3               	comf	plusw1,f,c
 18906  018FF4  B0D8               	btfsc	status,0,c
 18907  018FF6  2AE3               	incf	plusw1,f,c
 18908  018FF8                     l8306:
 18909                           
 18910                           ;stkvar	_divisor @ sp[(-2)+-4]
 18911  018FF8  0EFA               	movlw	-6
 18912  018FFA  006F FF8C  F028    	movff	plusw1,btemp
 18913  019000  0EFB               	movlw	-5
 18914  019002  50E3               	movf	plusw1,w,c
 18915  019004  1028               	iorwf	btemp^0,w,c
 18916  019006  B4D8               	btfsc	status,2,c
 18917  019008  D053               	goto	u6840
 18918                           
 18919                           ;stkvar	_counter @ sp[(-2)+1]
 18920  01900A  0EFF               	movlw	-1
 18921  01900C  6AE3               	clrf	plusw1,c
 18922  01900E  D012               	goto	L20
 18923  019010                     l8310:
 18924                           
 18925                           ;stkvar	_divisor @ sp[(-2)+-4]
 18926  019010  0EFA               	movlw	-6
 18927  019012  50E3               	movf	plusw1,w,c
 18928  019014  90D8               	bcf	status,0,c
 18929  019016  34E8               	rlcf	wreg,w,c
 18930  019018  6E28               	movwf	btemp^0,c
 18931  01901A  0EFA               	movlw	-6
 18932  01901C  0060  F0A3  FFE3   	movff	btemp,plusw1
 18933  019022  0EFB               	movlw	-5
 18934  019024  50E3               	movf	plusw1,w,c
 18935  019026  34E8               	rlcf	wreg,w,c
 18936  019028  6E28               	movwf	btemp^0,c
 18937  01902A  0EFB               	movlw	-5
 18938  01902C  0060  F0A3  FFE3   	movff	btemp,plusw1
 18939                           
 18940                           ;stkvar	_counter @ sp[(-2)+1]
 18941  019032  0EFF               	movlw	-1
 18942  019034                     L20:
 18943  019034  2AE3               	incf	plusw1,f,c
 18944                           
 18945                           ;stkvar	_divisor @ sp[(-2)+-4]
 18946  019036  0EFB               	movlw	-5
 18947  019038  AEE3               	btfss	plusw1,7,c
 18948  01903A  D7EA               	goto	l8310
 18949  01903C                     u6820:
 18950                           
 18951                           ;stkvar	_divisor @ sp[(-2)+-4]
 18952  01903C  0EFA               	movlw	-6
 18953  01903E  006F FF8C  F032    	movff	plusw1,btemp+10
 18954  019044  0EFB               	movlw	-5
 18955  019046  006F FF8C  F033    	movff	plusw1,btemp+11
 18956                           
 18957                           ;stkvar	_dividend @ sp[(-2)+-2]
 18958  01904C  0EFC               	movlw	-4
 18959  01904E  006F FF8C  F030    	movff	plusw1,btemp+8
 18960  019054  0EFD               	movlw	-3
 18961  019056  006F FF8C  F031    	movff	plusw1,btemp+9
 18962  01905C  5032               	movf	(btemp+10)^0,w,c
 18963  01905E  5C30               	subwf	(btemp+8)^0,w,c
 18964  019060  5033               	movf	(btemp+11)^0,w,c
 18965  019062  5831               	subwfb	(btemp+9)^0,w,c
 18966  019064  A0D8               	btfss	status,0,c
 18967  019066  D014               	goto	l8320
 18968                           
 18969                           ;stkvar	_divisor @ sp[(-2)+-4]
 18970                           ;stkvar	_dividend @ sp[(-2)+-2]
 18971  019068  0EFC               	movlw	-4
 18972  01906A  50E3               	movf	plusw1,w,c
 18973  01906C  6E28               	movwf	btemp^0,c
 18974  01906E  0EFA               	movlw	-6
 18975  019070  50E3               	movf	plusw1,w,c
 18976  019072  5E28               	subwf	btemp^0,f,c
 18977  019074  0EFC               	movlw	-4
 18978  019076  0060  F0A3  FFE3   	movff	btemp,plusw1
 18979  01907C  0EFD               	movlw	-3
 18980  01907E  50E3               	movf	plusw1,w,c
 18981  019080  6E28               	movwf	btemp^0,c
 18982  019082  0EFB               	movlw	-5
 18983  019084  50E3               	movf	plusw1,w,c
 18984  019086  5A28               	subwfb	btemp^0,f,c
 18985  019088  0EFD               	movlw	-3
 18986  01908A  0060  F0A3  FFE3   	movff	btemp,plusw1
 18987  019090                     l8320:
 18988                           
 18989                           ;stkvar	_divisor @ sp[(-2)+-4]
 18990  019090  90D8               	bcf	status,0,c
 18991  019092  0EFB               	movlw	-5
 18992  019094  32E3               	rrcf	plusw1,f,c
 18993  019096  0EFA               	movlw	-6
 18994  019098  32E3               	rrcf	plusw1,f,c
 18995                           
 18996                           ;stkvar	_counter @ sp[(-2)+1]
 18997  01909A  0EFF               	movlw	-1
 18998  01909C  50E3               	movf	plusw1,w,c
 18999  01909E  6E28               	movwf	btemp^0,c
 19000  0190A0  0E01               	movlw	1
 19001  0190A2  5E28               	subwf	btemp^0,f,c
 19002  0190A4  0EFF               	movlw	-1
 19003  0190A6  0060  F0A3  FFE3   	movff	btemp,plusw1
 19004  0190AC  A4D8               	btfss	status,2,c
 19005  0190AE  D7C6               	goto	u6820
 19006  0190B0                     u6840:
 19007                           
 19008                           ;stkvar	_sign @ sp[(-2)+0]
 19009  0190B0  0EFE               	movlw	-2
 19010  0190B2  50E3               	movf	plusw1,w,c
 19011  0190B4  B4D8               	btfsc	status,2,c
 19012  0190B6  D006               	goto	l8328
 19013                           
 19014                           ;stkvar	_dividend @ sp[(-2)+-2]
 19015                           ;stkvar	_dividend @ sp[(-2)+-2]
 19016  0190B8  0EFC               	movlw	-4
 19017  0190BA  6CE3               	negf	plusw1,c
 19018  0190BC  0EFD               	movlw	-3
 19019  0190BE  1EE3               	comf	plusw1,f,c
 19020  0190C0  B0D8               	btfsc	status,0,c
 19021  0190C2  2AE3               	incf	plusw1,f,c
 19022  0190C4                     l8328:
 19023                           
 19024                           ;stkvar	_dividend @ sp[(-2)+-2]
 19025  0190C4  0EFC               	movlw	-4
 19026  0190C6  006F FF8C  F028    	movff	plusw1,btemp
 19027  0190CC  0EFD               	movlw	-3
 19028  0190CE  006F FF8C  F029    	movff	plusw1,btemp+1
 19029                           
 19030                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19031  0190D4  0EFA               	movlw	250
 19032  0190D6  26E1               	addwf	fsr1l,f,c
 19033  0190D8  0EFF               	movlw	255
 19034  0190DA  22E2               	addwfc	fsr1h,f,c
 19035  0190DC  0012               	return		;funcret
 19036  0190DE                     __end_of___awmod:
 19037                           	opt callstack 0
 19038                           
 19039 ;; *************** function ___awdiv *****************
 19040 ;; Defined at:
 19041 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19042 ;; Parameters:    Size  Location     Type
 19043 ;;  dividend        2  [STACK] int 
 19044 ;;  divisor         2  [STACK] int 
 19045 ;; Auto vars:     Size  Location     Type
 19046 ;;  quotient        2  [STACK] int 
 19047 ;;  sign            1  [STACK] unsigned char 
 19048 ;;  counter         1  [STACK] unsigned char 
 19049 ;; Return value:  Size  Location     Type
 19050 ;;                  2  [STACK] int 
 19051 ;; Registers used:
 19052 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19053 ;; Tracked objects:
 19054 ;;		On entry : 0/0
 19055 ;;		On exit  : 0/0
 19056 ;;		Unchanged: 0/0
 19057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19062 ;;Total ram usage:        0 bytes
 19063 ;; Hardware stack levels used:    1
 19064 ;; Hardware stack levels required when called:   15
 19065 ;; This function calls:
 19066 ;;		Nothing
 19067 ;; This function is called by:
 19068 ;;		_efgtoa
 19069 ;; This function uses a reentrant model
 19070 ;;
 19071                           
 19072                           	psect	text65
 19073  0189A6                     __ptext65:
 19074                           	opt callstack 0
 19075  0189A6                     ___awdiv:
 19076                           	opt callstack 0
 19077                           
 19078                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19079  0189A6  52E6               	movf	postinc1,f,c
 19080  0189A8  52E6               	movf	postinc1,f,c
 19081  0189AA  52E6               	movf	postinc1,f,c
 19082  0189AC  52E6               	movf	postinc1,f,c
 19083                           
 19084                           ;stkvar	_sign @ sp[(-4)+2]
 19085                           
 19086                           ;incstack = 0
 19087 ;; hardware stack exceeded
 19088  0189AE  0EFE               	movlw	-2
 19089  0189B0  6AE3               	clrf	plusw1,c
 19090                           
 19091                           ;stkvar	_divisor @ sp[(-4)+-4]
 19092  0189B2  0EF9               	movlw	-7
 19093  0189B4  AEE3               	btfss	plusw1,7,c
 19094  0189B6  D009               	goto	l8256
 19095                           
 19096                           ;stkvar	_divisor @ sp[(-4)+-4]
 19097                           ;stkvar	_divisor @ sp[(-4)+-4]
 19098  0189B8  0EF8               	movlw	-8
 19099  0189BA  6CE3               	negf	plusw1,c
 19100  0189BC  0EF9               	movlw	-7
 19101  0189BE  1EE3               	comf	plusw1,f,c
 19102  0189C0  B0D8               	btfsc	status,0,c
 19103  0189C2  2AE3               	incf	plusw1,f,c
 19104                           
 19105                           ;stkvar	_sign @ sp[(-4)+2]
 19106  0189C4  0EFE               	movlw	-2
 19107  0189C6  6AE3               	clrf	plusw1,c
 19108  0189C8  2AE3               	incf	plusw1,f,c
 19109  0189CA                     l8256:
 19110                           
 19111                           ;stkvar	_dividend @ sp[(-4)+-2]
 19112  0189CA  0EFB               	movlw	-5
 19113  0189CC  AEE3               	btfss	plusw1,7,c
 19114  0189CE  D008               	goto	l8262
 19115                           
 19116                           ;stkvar	_dividend @ sp[(-4)+-2]
 19117                           ;stkvar	_dividend @ sp[(-4)+-2]
 19118  0189D0  0EFA               	movlw	-6
 19119  0189D2  6CE3               	negf	plusw1,c
 19120  0189D4  0EFB               	movlw	-5
 19121  0189D6  1EE3               	comf	plusw1,f,c
 19122  0189D8  B0D8               	btfsc	status,0,c
 19123  0189DA  2AE3               	incf	plusw1,f,c
 19124                           
 19125                           ;stkvar	_sign @ sp[(-4)+2]
 19126  0189DC  0EFE               	movlw	-2
 19127  0189DE  70E3               	btg	plusw1,0,c
 19128  0189E0                     l8262:
 19129                           
 19130                           ;stkvar	_quotient @ sp[(-4)+0]
 19131  0189E0  0EFC               	movlw	-4
 19132  0189E2  6AE3               	clrf	plusw1,c
 19133  0189E4  0EFD               	movlw	-3
 19134  0189E6  6AE3               	clrf	plusw1,c
 19135                           
 19136                           ;stkvar	_divisor @ sp[(-4)+-4]
 19137  0189E8  0EF8               	movlw	-8
 19138  0189EA  006F FF8C  F028    	movff	plusw1,btemp
 19139  0189F0  0EF9               	movlw	-7
 19140  0189F2  50E3               	movf	plusw1,w,c
 19141  0189F4  1028               	iorwf	btemp^0,w,c
 19142  0189F6  B4D8               	btfsc	status,2,c
 19143  0189F8  D066               	goto	u6770
 19144                           
 19145                           ;stkvar	_counter @ sp[(-4)+3]
 19146  0189FA  0EFF               	movlw	-1
 19147  0189FC  6AE3               	clrf	plusw1,c
 19148  0189FE  D012               	goto	L21
 19149  018A00                     l8268:
 19150                           
 19151                           ;stkvar	_divisor @ sp[(-4)+-4]
 19152  018A00  0EF8               	movlw	-8
 19153  018A02  50E3               	movf	plusw1,w,c
 19154  018A04  90D8               	bcf	status,0,c
 19155  018A06  34E8               	rlcf	wreg,w,c
 19156  018A08  6E28               	movwf	btemp^0,c
 19157  018A0A  0EF8               	movlw	-8
 19158  018A0C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19159  018A12  0EF9               	movlw	-7
 19160  018A14  50E3               	movf	plusw1,w,c
 19161  018A16  34E8               	rlcf	wreg,w,c
 19162  018A18  6E28               	movwf	btemp^0,c
 19163  018A1A  0EF9               	movlw	-7
 19164  018A1C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19165                           
 19166                           ;stkvar	_counter @ sp[(-4)+3]
 19167  018A22  0EFF               	movlw	-1
 19168  018A24                     L21:
 19169  018A24  2AE3               	incf	plusw1,f,c
 19170                           
 19171                           ;stkvar	_divisor @ sp[(-4)+-4]
 19172  018A26  0EF9               	movlw	-7
 19173  018A28  AEE3               	btfss	plusw1,7,c
 19174  018A2A  D7EA               	goto	l8268
 19175  018A2C                     u6750:
 19176                           
 19177                           ;stkvar	_quotient @ sp[(-4)+0]
 19178  018A2C  0EFC               	movlw	-4
 19179  018A2E  50E3               	movf	plusw1,w,c
 19180  018A30  90D8               	bcf	status,0,c
 19181  018A32  34E8               	rlcf	wreg,w,c
 19182  018A34  6E28               	movwf	btemp^0,c
 19183  018A36  0EFC               	movlw	-4
 19184  018A38  0060  F0A3  FFE3   	movff	btemp,plusw1
 19185  018A3E  0EFD               	movlw	-3
 19186  018A40  50E3               	movf	plusw1,w,c
 19187  018A42  34E8               	rlcf	wreg,w,c
 19188  018A44  6E28               	movwf	btemp^0,c
 19189  018A46  0EFD               	movlw	-3
 19190  018A48  0060  F0A3  FFE3   	movff	btemp,plusw1
 19191                           
 19192                           ;stkvar	_divisor @ sp[(-4)+-4]
 19193  018A4E  0EF8               	movlw	-8
 19194  018A50  006F FF8C  F032    	movff	plusw1,btemp+10
 19195  018A56  0EF9               	movlw	-7
 19196  018A58  006F FF8C  F033    	movff	plusw1,btemp+11
 19197                           
 19198                           ;stkvar	_dividend @ sp[(-4)+-2]
 19199  018A5E  0EFA               	movlw	-6
 19200  018A60  006F FF8C  F030    	movff	plusw1,btemp+8
 19201  018A66  0EFB               	movlw	-5
 19202  018A68  006F FF8C  F031    	movff	plusw1,btemp+9
 19203  018A6E  5032               	movf	(btemp+10)^0,w,c
 19204  018A70  5C30               	subwf	(btemp+8)^0,w,c
 19205  018A72  5033               	movf	(btemp+11)^0,w,c
 19206  018A74  5831               	subwfb	(btemp+9)^0,w,c
 19207  018A76  A0D8               	btfss	status,0,c
 19208  018A78  D016               	goto	l8282
 19209                           
 19210                           ;stkvar	_divisor @ sp[(-4)+-4]
 19211                           ;stkvar	_dividend @ sp[(-4)+-2]
 19212  018A7A  0EFA               	movlw	-6
 19213  018A7C  50E3               	movf	plusw1,w,c
 19214  018A7E  6E28               	movwf	btemp^0,c
 19215  018A80  0EF8               	movlw	-8
 19216  018A82  50E3               	movf	plusw1,w,c
 19217  018A84  5E28               	subwf	btemp^0,f,c
 19218  018A86  0EFA               	movlw	-6
 19219  018A88  0060  F0A3  FFE3   	movff	btemp,plusw1
 19220  018A8E  0EFB               	movlw	-5
 19221  018A90  50E3               	movf	plusw1,w,c
 19222  018A92  6E28               	movwf	btemp^0,c
 19223  018A94  0EF9               	movlw	-7
 19224  018A96  50E3               	movf	plusw1,w,c
 19225  018A98  5A28               	subwfb	btemp^0,f,c
 19226  018A9A  0EFB               	movlw	-5
 19227  018A9C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19228                           
 19229                           ;stkvar	_quotient @ sp[(-4)+0]
 19230  018AA2  0EFC               	movlw	-4
 19231  018AA4  80E3               	bsf	plusw1,0,c
 19232  018AA6                     l8282:
 19233                           
 19234                           ;stkvar	_divisor @ sp[(-4)+-4]
 19235  018AA6  90D8               	bcf	status,0,c
 19236  018AA8  0EF9               	movlw	-7
 19237  018AAA  32E3               	rrcf	plusw1,f,c
 19238  018AAC  0EF8               	movlw	-8
 19239  018AAE  32E3               	rrcf	plusw1,f,c
 19240                           
 19241                           ;stkvar	_counter @ sp[(-4)+3]
 19242  018AB0  0EFF               	movlw	-1
 19243  018AB2  50E3               	movf	plusw1,w,c
 19244  018AB4  6E28               	movwf	btemp^0,c
 19245  018AB6  0E01               	movlw	1
 19246  018AB8  5E28               	subwf	btemp^0,f,c
 19247  018ABA  0EFF               	movlw	-1
 19248  018ABC  0060  F0A3  FFE3   	movff	btemp,plusw1
 19249  018AC2  A4D8               	btfss	status,2,c
 19250  018AC4  D7B3               	goto	u6750
 19251  018AC6                     u6770:
 19252                           
 19253                           ;stkvar	_sign @ sp[(-4)+2]
 19254  018AC6  0EFE               	movlw	-2
 19255  018AC8  50E3               	movf	plusw1,w,c
 19256  018ACA  B4D8               	btfsc	status,2,c
 19257  018ACC  D006               	goto	l8290
 19258                           
 19259                           ;stkvar	_quotient @ sp[(-4)+0]
 19260                           ;stkvar	_quotient @ sp[(-4)+0]
 19261  018ACE  0EFC               	movlw	-4
 19262  018AD0  6CE3               	negf	plusw1,c
 19263  018AD2  0EFD               	movlw	-3
 19264  018AD4  1EE3               	comf	plusw1,f,c
 19265  018AD6  B0D8               	btfsc	status,0,c
 19266  018AD8  2AE3               	incf	plusw1,f,c
 19267  018ADA                     l8290:
 19268                           
 19269                           ;stkvar	_quotient @ sp[(-4)+0]
 19270  018ADA  0EFC               	movlw	-4
 19271  018ADC  006F FF8C  F028    	movff	plusw1,btemp
 19272  018AE2  0EFD               	movlw	-3
 19273  018AE4  006F FF8C  F029    	movff	plusw1,btemp+1
 19274                           
 19275                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19276  018AEA  0EF8               	movlw	248
 19277  018AEC  26E1               	addwf	fsr1l,f,c
 19278  018AEE  0EFF               	movlw	255
 19279  018AF0  22E2               	addwfc	fsr1h,f,c
 19280  018AF2  0012               	return		;funcret
 19281  018AF4                     __end_of___awdiv:
 19282                           	opt callstack 0
 19283                           
 19284 ;; *************** function _dtoa *****************
 19285 ;; Defined at:
 19286 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19287 ;; Parameters:    Size  Location     Type
 19288 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19289 ;;		 -> f(6), NULL(0), 
 19290 ;;  d               8  [STACK] long long 
 19291 ;; Auto vars:     Size  Location     Type
 19292 ;;  n               8  [STACK] long long 
 19293 ;;  i               2  [STACK] int 
 19294 ;;  s               2  [STACK] int 
 19295 ;;  w               2  [STACK] int 
 19296 ;;  p               2  [STACK] int 
 19297 ;; Return value:  Size  Location     Type
 19298 ;;                  2  [STACK] int 
 19299 ;; Registers used:
 19300 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19301 ;; Tracked objects:
 19302 ;;		On entry : 0/0
 19303 ;;		On exit  : 0/0
 19304 ;;		Unchanged: 0/0
 19305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19310 ;;Total ram usage:        0 bytes
 19311 ;; Hardware stack levels used:    1
 19312 ;; Hardware stack levels required when called:   20
 19313 ;; This function calls:
 19314 ;;		___aodiv
 19315 ;;		___aomod
 19316 ;;		_abs
 19317 ;;		_pad
 19318 ;; This function is called by:
 19319 ;;		_vfpfcnvrt
 19320 ;; This function uses a reentrant model
 19321 ;;
 19322                           
 19323                           	psect	text66
 19324  01535C                     __ptext66:
 19325                           	opt callstack 0
 19326  01535C                     _dtoa:
 19327                           	opt callstack 0
 19328                           
 19329                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19330  01535C  0E12               	movlw	18
 19331  01535E  26E1               	addwf	fsr1l,f,c
 19332  015360  0E00               	movlw	0
 19333  015362  22E2               	addwfc	fsr1h,f,c
 19334                           
 19335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19336                           ;stkvar	_d @ sp[(-18)+-10]
 19337                           
 19338                           ;incstack = 0
 19339 ;; hardware stack exceeded
 19340  015364  0EE4               	movlw	228
 19341  015366  24E1               	addwf	fsr1l,w,c
 19342  015368  6ED9               	movwf	fsr2l,c
 19343  01536A  0EFF               	movlw	255
 19344  01536C  20E2               	addwfc	fsr1h,w,c
 19345  01536E  6EDA               	movwf	fsr2h,c
 19346                           
 19347                           ;stkvar	_n @ sp[(-18)+2]
 19348  015370  0E08               	movlw	8
 19349  015372  6E28               	movwf	btemp^0,c
 19350  015374  0EF0               	movlw	-16
 19351  015376                     us1047999:
 19352  015376  006F FF7B FFE3     	movff	postinc2,plusw1
 19353  01537C  28E8               	incf	wreg,w,c
 19354  01537E  2E28               	decfsz	btemp^0,f,c
 19355  015380  D7FA               	bra	us1047999
 19356                           
 19357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19358                           ;stkvar	_n @ sp[(-18)+2]
 19359  015382  0EF7               	movlw	-9
 19360  015384  AEE3               	btfss	plusw1,7,c
 19361  015386  D002               	goto	u10480
 19362  015388  0E01               	movlw	1
 19363  01538A  D001               	goto	u10490
 19364  01538C                     u10480:
 19365  01538C  0E00               	movlw	0
 19366  01538E                     u10490:
 19367  01538E  6E32               	movwf	(btemp+10)^0,c
 19368  015390  6A33               	clrf	(btemp+11)^0,c
 19369                           
 19370                           ;stkvar	_s @ sp[(-18)+12]
 19371  015392  0EFA               	movlw	-6
 19372  015394  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19373  01539A  0EFB               	movlw	-5
 19374  01539C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19375                           
 19376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19377                           ;stkvar	_s @ sp[(-18)+12]
 19378  0153A2  0EFA               	movlw	-6
 19379  0153A4  006F FF8C  F028    	movff	plusw1,btemp
 19380  0153AA  0EFB               	movlw	-5
 19381  0153AC  50E3               	movf	plusw1,w,c
 19382  0153AE  1028               	iorwf	btemp^0,w,c
 19383  0153B0  B4D8               	btfsc	status,2,c
 19384  0153B2  D025               	goto	u10510
 19385                           
 19386                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19387                           ;stkvar	_n @ sp[(-18)+2]
 19388                           ;stkvar	_n @ sp[(-18)+2]
 19389  0153B4  0EF0               	movlw	-16
 19390  0153B6  6CE3               	negf	plusw1,c
 19391  0153B8  0EF1               	movlw	-15
 19392  0153BA  1EE3               	comf	plusw1,f,c
 19393  0153BC  0EF2               	movlw	-14
 19394  0153BE  1EE3               	comf	plusw1,f,c
 19395  0153C0  0EF3               	movlw	-13
 19396  0153C2  1EE3               	comf	plusw1,f,c
 19397  0153C4  0EF4               	movlw	-12
 19398  0153C6  1EE3               	comf	plusw1,f,c
 19399  0153C8  0EF5               	movlw	-11
 19400  0153CA  1EE3               	comf	plusw1,f,c
 19401  0153CC  0EF6               	movlw	-10
 19402  0153CE  1EE3               	comf	plusw1,f,c
 19403  0153D0  0EF7               	movlw	-9
 19404  0153D2  1EE3               	comf	plusw1,f,c
 19405  0153D4  E314               	bnc	u10510
 19406  0153D6  0EF1               	movlw	-15
 19407  0153D8  2AE3               	incf	plusw1,f,c
 19408  0153DA  E311               	bnc	u10510
 19409  0153DC  0EF2               	movlw	-14
 19410  0153DE  2AE3               	incf	plusw1,f,c
 19411  0153E0  E30E               	bnc	u10510
 19412  0153E2  0EF3               	movlw	-13
 19413  0153E4  2AE3               	incf	plusw1,f,c
 19414  0153E6  E30B               	bnc	u10510
 19415  0153E8  0EF4               	movlw	-12
 19416  0153EA  2AE3               	incf	plusw1,f,c
 19417  0153EC  E308               	bnc	u10510
 19418  0153EE  0EF5               	movlw	-11
 19419  0153F0  2AE3               	incf	plusw1,f,c
 19420  0153F2  E305               	bnc	u10510
 19421  0153F4  0EF6               	movlw	-10
 19422  0153F6  2AE3               	incf	plusw1,f,c
 19423  0153F8  E302               	bnc	u10510
 19424  0153FA  0EF7               	movlw	-9
 19425  0153FC  2AE3               	incf	plusw1,f,c
 19426  0153FE                     u10510:
 19427                           
 19428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19429  0153FE  AE4B               	btfss	(_prec+1)^0,7,c
 19430                           
 19431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19432  015400  924C               	bcf	_flags^0,1,c
 19433                           
 19434                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19435  015402  BE4B               	btfsc	(_prec+1)^0,7,c
 19436  015404  D005               	goto	u10530
 19437  015406  504B               	movf	(_prec+1)^0,w,c
 19438  015408  E110               	bnz	l11514
 19439  01540A  044A               	decf	_prec^0,w,c
 19440  01540C  B0D8               	btfsc	status,0,c
 19441  01540E  D00D               	goto	l11514
 19442  015410                     u10530:
 19443  015410  0E01               	movlw	1
 19444  015412  6E32               	movwf	(btemp+10)^0,c
 19445  015414  0E00               	movlw	0
 19446  015416  6E33               	movwf	(btemp+11)^0,c
 19447                           
 19448                           ;stkvar	_p @ sp[(-18)+16]
 19449  015418  0EFE               	movlw	-2
 19450  01541A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19451  015420  0EFF               	movlw	-1
 19452  015422  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19453  015428  D008               	goto	l2126
 19454  01542A                     l11514:
 19455                           
 19456                           ;stkvar	_p @ sp[(-18)+16]
 19457  01542A  0EFE               	movlw	-2
 19458  01542C  0060  F12B  FFE3   	movff	_prec,plusw1
 19459  015432  0EFF               	movlw	-1
 19460  015434  0060  F12F  FFE3   	movff	_prec+1,plusw1
 19461  01543A                     l2126:
 19462                           
 19463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19464                           ;stkvar	_w @ sp[(-18)+14]
 19465  01543A  0EFC               	movlw	-4
 19466  01543C  0060  F123  FFE3   	movff	_width,plusw1
 19467  015442  0EFD               	movlw	-3
 19468  015444  0060  F127  FFE3   	movff	_width+1,plusw1
 19469                           
 19470                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19471                           ;stkvar	_s @ sp[(-18)+12]
 19472  01544A  0EFA               	movlw	-6
 19473  01544C  006F FF8C  F028    	movff	plusw1,btemp
 19474  015452  0EFB               	movlw	-5
 19475  015454  50E3               	movf	plusw1,w,c
 19476  015456  1028               	iorwf	btemp^0,w,c
 19477  015458  A4D8               	btfss	status,2,c
 19478  01545A  D002               	goto	u10550
 19479  01545C  A44C               	btfss	_flags^0,2,c
 19480  01545E  D00A               	goto	l11522
 19481  015460                     u10550:
 19482                           
 19483                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19484                           ;stkvar	_w @ sp[(-18)+14]
 19485  015460  50E1               	movf	fsr1l,w,c
 19486  015462  0FFC               	addlw	-4
 19487  015464  6ED9               	movwf	fsr2l,c
 19488  015466  50E2               	movf	fsr1h,w,c
 19489  015468  6EDA               	movwf	fsr2h,c
 19490  01546A  0EFF               	movlw	255
 19491  01546C  22DA               	addwfc	fsr2h,f,c
 19492  01546E  06DE               	decf	postinc2,f,c
 19493  015470  0E00               	movlw	0
 19494  015472  5ADD               	subwfb	postdec2,f,c
 19495  015474                     l11522:
 19496                           
 19497                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19498  015474  0E4F               	movlw	79
 19499  015476  6E32               	movwf	(btemp+10)^0,c
 19500  015478  0E00               	movlw	0
 19501  01547A  6E33               	movwf	(btemp+11)^0,c
 19502                           
 19503                           ;stkvar	_i @ sp[(-18)+10]
 19504  01547C  0EF8               	movlw	-8
 19505  01547E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19506  015484  0EF9               	movlw	-7
 19507  015486  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19508                           
 19509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19510  01548C  0103               	movlb	3	; () banked
 19511  01548E  6BFD               	clrf	(_dbuf+79)& (0+255),b
 19512                           
 19513                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19514  015490  D109               	goto	l11536
 19515  015492                     l11526:
 19516                           
 19517                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19518                           ;stkvar	_i @ sp[(-18)+10]
 19519  015492  50E1               	movf	fsr1l,w,c
 19520  015494  0FF8               	addlw	-8
 19521  015496  6ED9               	movwf	fsr2l,c
 19522  015498  50E2               	movf	fsr1h,w,c
 19523  01549A  6EDA               	movwf	fsr2h,c
 19524  01549C  0EFF               	movlw	255
 19525  01549E  22DA               	addwfc	fsr2h,f,c
 19526  0154A0  06DE               	decf	postinc2,f,c
 19527  0154A2  0E00               	movlw	0
 19528  0154A4  5ADD               	subwfb	postdec2,f,c
 19529                           
 19530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19531  0154A6  0E0A               	movlw	10
 19532  0154A8  6EE6               	movwf	postinc1,c
 19533  0154AA  0E00               	movlw	0
 19534  0154AC  6EE6               	movwf	postinc1,c
 19535  0154AE  0E00               	movlw	0
 19536  0154B0  6EE6               	movwf	postinc1,c
 19537  0154B2  0E00               	movlw	0
 19538  0154B4  6EE6               	movwf	postinc1,c
 19539  0154B6  0E00               	movlw	0
 19540  0154B8  6EE6               	movwf	postinc1,c
 19541  0154BA  0E00               	movlw	0
 19542  0154BC  6EE6               	movwf	postinc1,c
 19543  0154BE  0E00               	movlw	0
 19544  0154C0  6EE6               	movwf	postinc1,c
 19545  0154C2  0E00               	movlw	0
 19546  0154C4  6EE6               	movwf	postinc1,c
 19547                           
 19548                           ;stkvar	_n @ sp[(-26)+2]
 19549  0154C6  50E1               	movf	fsr1l,w,c
 19550  0154C8  0FE8               	addlw	-24
 19551  0154CA  6ED9               	movwf	fsr2l,c
 19552  0154CC  50E2               	movf	fsr1h,w,c
 19553  0154CE  6EDA               	movwf	fsr2h,c
 19554  0154D0  0EFF               	movlw	255
 19555  0154D2  22DA               	addwfc	fsr2h,f,c
 19556  0154D4  006F FF7B FFE6     	movff	postinc2,postinc1
 19557  0154DA  006F FF7B FFE6     	movff	postinc2,postinc1
 19558  0154E0  006F FF7B FFE6     	movff	postinc2,postinc1
 19559  0154E6  006F FF7B FFE6     	movff	postinc2,postinc1
 19560  0154EC  006F FF7B FFE6     	movff	postinc2,postinc1
 19561  0154F2  006F FF7B FFE6     	movff	postinc2,postinc1
 19562  0154F8  006F FF7B FFE6     	movff	postinc2,postinc1
 19563  0154FE  006F FF7B FFE6     	movff	postinc2,postinc1
 19564  015504  ECA1  F0B9         	call	___aomod	;wreg free
 19565  015508  52E5               	movf	postdec1,f,c
 19566  01550A  006F FF9C  F03F    	movff	indf1,btemp+23
 19567  015510  52E5               	movf	postdec1,f,c
 19568  015512  006F FF9C  F03E    	movff	indf1,btemp+22
 19569  015518  52E5               	movf	postdec1,f,c
 19570  01551A  006F FF9C  F03D    	movff	indf1,btemp+21
 19571  015520  52E5               	movf	postdec1,f,c
 19572  015522  006F FF9C  F03C    	movff	indf1,btemp+20
 19573  015528  52E5               	movf	postdec1,f,c
 19574  01552A  006F FF9C  F03B    	movff	indf1,btemp+19
 19575  015530  52E5               	movf	postdec1,f,c
 19576  015532  006F FF9C  F03A    	movff	indf1,btemp+18
 19577  015538  52E5               	movf	postdec1,f,c
 19578  01553A  006F FF9C  F039    	movff	indf1,btemp+17
 19579  015540  52E5               	movf	postdec1,f,c
 19580  015542  006F FF9C  F038    	movff	indf1,btemp+16
 19581  015548  0EF8               	movlw	248
 19582  01554A  26E1               	addwf	fsr1l,f,c
 19583  01554C  0EFF               	movlw	255
 19584  01554E  22E2               	addwfc	fsr1h,f,c
 19585  015550  0060  F0E0  F032   	movff	btemp+16,btemp+10
 19586  015556  0060  F0E4  F033   	movff	btemp+17,btemp+11
 19587  01555C  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 19588  015562  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 19589  015568  EC1E  F0D5         	call	_abs	;wreg free
 19590  01556C  0E30               	movlw	48
 19591  01556E  2628               	addwf	btemp^0,f,c
 19592                           
 19593                           ;stkvar	_i @ sp[(-18)+10]
 19594  015570  0EF8               	movlw	-8
 19595  015572  006F FF8C  F032    	movff	plusw1,btemp+10
 19596  015578  0EF9               	movlw	-7
 19597  01557A  006F FF8C  F033    	movff	plusw1,btemp+11
 19598  015580  0EAE               	movlw	low _dbuf
 19599  015582  2432               	addwf	(btemp+10)^0,w,c
 19600  015584  6ED9               	movwf	fsr2l,c
 19601  015586  0E03               	movlw	high _dbuf
 19602  015588  2033               	addwfc	(btemp+11)^0,w,c
 19603  01558A  6EDA               	movwf	fsr2h,c
 19604  01558C  0060  F0A3  FFDF   	movff	btemp,indf2
 19605                           
 19606                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19607                           ;stkvar	_p @ sp[(-18)+16]
 19608  015592  50E1               	movf	fsr1l,w,c
 19609  015594  0FFE               	addlw	-2
 19610  015596  6ED9               	movwf	fsr2l,c
 19611  015598  50E2               	movf	fsr1h,w,c
 19612  01559A  6EDA               	movwf	fsr2h,c
 19613  01559C  0EFF               	movlw	255
 19614  01559E  22DA               	addwfc	fsr2h,f,c
 19615  0155A0  06DE               	decf	postinc2,f,c
 19616  0155A2  0E00               	movlw	0
 19617  0155A4  5ADD               	subwfb	postdec2,f,c
 19618                           
 19619                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19620                           ;stkvar	_w @ sp[(-18)+14]
 19621  0155A6  50E1               	movf	fsr1l,w,c
 19622  0155A8  0FFC               	addlw	-4
 19623  0155AA  6ED9               	movwf	fsr2l,c
 19624  0155AC  50E2               	movf	fsr1h,w,c
 19625  0155AE  6EDA               	movwf	fsr2h,c
 19626  0155B0  0EFF               	movlw	255
 19627  0155B2  22DA               	addwfc	fsr2h,f,c
 19628  0155B4  06DE               	decf	postinc2,f,c
 19629  0155B6  0E00               	movlw	0
 19630  0155B8  5ADD               	subwfb	postdec2,f,c
 19631                           
 19632                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19633  0155BA  0E0A               	movlw	10
 19634  0155BC  6EE6               	movwf	postinc1,c
 19635  0155BE  0E00               	movlw	0
 19636  0155C0  6EE6               	movwf	postinc1,c
 19637  0155C2  0E00               	movlw	0
 19638  0155C4  6EE6               	movwf	postinc1,c
 19639  0155C6  0E00               	movlw	0
 19640  0155C8  6EE6               	movwf	postinc1,c
 19641  0155CA  0E00               	movlw	0
 19642  0155CC  6EE6               	movwf	postinc1,c
 19643  0155CE  0E00               	movlw	0
 19644  0155D0  6EE6               	movwf	postinc1,c
 19645  0155D2  0E00               	movlw	0
 19646  0155D4  6EE6               	movwf	postinc1,c
 19647  0155D6  0E00               	movlw	0
 19648  0155D8  6EE6               	movwf	postinc1,c
 19649                           
 19650                           ;stkvar	_n @ sp[(-26)+2]
 19651  0155DA  50E1               	movf	fsr1l,w,c
 19652  0155DC  0FE8               	addlw	-24
 19653  0155DE  6ED9               	movwf	fsr2l,c
 19654  0155E0  50E2               	movf	fsr1h,w,c
 19655  0155E2  6EDA               	movwf	fsr2h,c
 19656  0155E4  0EFF               	movlw	255
 19657  0155E6  22DA               	addwfc	fsr2h,f,c
 19658  0155E8  006F FF7B FFE6     	movff	postinc2,postinc1
 19659  0155EE  006F FF7B FFE6     	movff	postinc2,postinc1
 19660  0155F4  006F FF7B FFE6     	movff	postinc2,postinc1
 19661  0155FA  006F FF7B FFE6     	movff	postinc2,postinc1
 19662  015600  006F FF7B FFE6     	movff	postinc2,postinc1
 19663  015606  006F FF7B FFE6     	movff	postinc2,postinc1
 19664  01560C  006F FF7B FFE6     	movff	postinc2,postinc1
 19665  015612  006F FF7B FFE6     	movff	postinc2,postinc1
 19666  015618  EC27  F0B7         	call	___aodiv	;wreg free
 19667  01561C  52E5               	movf	postdec1,f,c
 19668  01561E  006F FF9C  F03F    	movff	indf1,btemp+23
 19669  015624  52E5               	movf	postdec1,f,c
 19670  015626  006F FF9C  F03E    	movff	indf1,btemp+22
 19671  01562C  52E5               	movf	postdec1,f,c
 19672  01562E  006F FF9C  F03D    	movff	indf1,btemp+21
 19673  015634  52E5               	movf	postdec1,f,c
 19674  015636  006F FF9C  F03C    	movff	indf1,btemp+20
 19675  01563C  52E5               	movf	postdec1,f,c
 19676  01563E  006F FF9C  F03B    	movff	indf1,btemp+19
 19677  015644  52E5               	movf	postdec1,f,c
 19678  015646  006F FF9C  F03A    	movff	indf1,btemp+18
 19679  01564C  52E5               	movf	postdec1,f,c
 19680  01564E  006F FF9C  F039    	movff	indf1,btemp+17
 19681  015654  52E5               	movf	postdec1,f,c
 19682  015656  006F FF9C  F038    	movff	indf1,btemp+16
 19683  01565C  0EF8               	movlw	248
 19684  01565E  26E1               	addwf	fsr1l,f,c
 19685  015660  0EFF               	movlw	255
 19686  015662  22E2               	addwfc	fsr1h,f,c
 19687                           
 19688                           ;stkvar	_n @ sp[(-18)+2]
 19689  015664  0EF0               	movlw	-16
 19690  015666  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 19691  01566C  0EF1               	movlw	-15
 19692  01566E  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 19693  015674  0EF2               	movlw	-14
 19694  015676  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 19695  01567C  0EF3               	movlw	-13
 19696  01567E  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 19697  015684  0EF4               	movlw	-12
 19698  015686  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 19699  01568C  0EF5               	movlw	-11
 19700  01568E  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 19701  015694  0EF6               	movlw	-10
 19702  015696  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 19703  01569C  0EF7               	movlw	-9
 19704  01569E  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 19705  0156A4                     l11536:
 19706                           
 19707                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19708                           ;stkvar	_i @ sp[(-18)+10]
 19709  0156A4  0EF9               	movlw	-7
 19710  0156A6  BEE3               	btfsc	plusw1,7,c
 19711  0156A8  D036               	goto	u10600
 19712  0156AA  0EF9               	movlw	-7
 19713  0156AC  50E3               	movf	plusw1,w,c
 19714  0156AE  E104               	bnz	u10560
 19715  0156B0  0EF8               	movlw	-8
 19716  0156B2  04E3               	decf	plusw1,w,c
 19717  0156B4  A0D8               	btfss	status,0,c
 19718  0156B6  D02F               	goto	u10600
 19719  0156B8                     u10560:
 19720                           
 19721                           ;stkvar	_n @ sp[(-18)+2]
 19722  0156B8  0EF0               	movlw	-16
 19723  0156BA  50E3               	movf	plusw1,w,c
 19724  0156BC  E115               	bnz	u10571
 19725  0156BE  0EF1               	movlw	-15
 19726  0156C0  50E3               	movf	plusw1,w,c
 19727  0156C2  E112               	bnz	u10571
 19728  0156C4  0EF2               	movlw	-14
 19729  0156C6  50E3               	movf	plusw1,w,c
 19730  0156C8  E10F               	bnz	u10571
 19731  0156CA  0EF3               	movlw	-13
 19732  0156CC  50E3               	movf	plusw1,w,c
 19733  0156CE  E10C               	bnz	u10571
 19734  0156D0  0EF4               	movlw	-12
 19735  0156D2  50E3               	movf	plusw1,w,c
 19736  0156D4  E109               	bnz	u10571
 19737  0156D6  0EF5               	movlw	-11
 19738  0156D8  50E3               	movf	plusw1,w,c
 19739  0156DA  E106               	bnz	u10571
 19740  0156DC  0EF6               	movlw	-10
 19741  0156DE  50E3               	movf	plusw1,w,c
 19742  0156E0  E103               	bnz	u10571
 19743  0156E2  0EF7               	movlw	-9
 19744  0156E4  50E3               	movf	plusw1,w,c
 19745  0156E6  A4D8               	btfss	status,2,c
 19746  0156E8                     u10571:
 19747  0156E8  D6D4               	goto	l11526
 19748                           
 19749                           ;stkvar	_p @ sp[(-18)+16]
 19750  0156EA  0EFF               	movlw	-1
 19751  0156EC  BEE3               	btfsc	plusw1,7,c
 19752  0156EE  D007               	goto	u10580
 19753  0156F0  0EFF               	movlw	-1
 19754  0156F2  50E3               	movf	plusw1,w,c
 19755  0156F4  E103               	bnz	u10581
 19756  0156F6  0EFE               	movlw	-2
 19757  0156F8  04E3               	decf	plusw1,w,c
 19758  0156FA  B0D8               	btfsc	status,0,c
 19759  0156FC                     u10581:
 19760  0156FC  D6CA               	goto	l11526
 19761  0156FE                     u10580:
 19762                           
 19763                           ;stkvar	_w @ sp[(-18)+14]
 19764  0156FE  0EFD               	movlw	-3
 19765  015700  BEE3               	btfsc	plusw1,7,c
 19766  015702  D009               	goto	u10600
 19767  015704  0EFD               	movlw	-3
 19768  015706  50E3               	movf	plusw1,w,c
 19769  015708  E104               	bnz	u10590
 19770  01570A  0EFC               	movlw	-4
 19771  01570C  04E3               	decf	plusw1,w,c
 19772  01570E  A0D8               	btfss	status,0,c
 19773  015710  D002               	goto	u10600
 19774  015712                     u10590:
 19775  015712  B24C               	btfsc	_flags^0,1,c
 19776  015714  D6BE               	goto	l11526
 19777  015716                     u10600:
 19778                           
 19779                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19780                           ;stkvar	_s @ sp[(-18)+12]
 19781  015716  0EFA               	movlw	-6
 19782  015718  006F FF8C  F028    	movff	plusw1,btemp
 19783  01571E  0EFB               	movlw	-5
 19784  015720  50E3               	movf	plusw1,w,c
 19785  015722  1028               	iorwf	btemp^0,w,c
 19786  015724  A4D8               	btfss	status,2,c
 19787  015726  D002               	goto	u10620
 19788  015728  A44C               	btfss	_flags^0,2,c
 19789  01572A  D033               	goto	l11560
 19790  01572C                     u10620:
 19791                           
 19792                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19793                           ;stkvar	_i @ sp[(-18)+10]
 19794  01572C  50E1               	movf	fsr1l,w,c
 19795  01572E  0FF8               	addlw	-8
 19796  015730  6ED9               	movwf	fsr2l,c
 19797  015732  50E2               	movf	fsr1h,w,c
 19798  015734  6EDA               	movwf	fsr2h,c
 19799  015736  0EFF               	movlw	255
 19800  015738  22DA               	addwfc	fsr2h,f,c
 19801  01573A  06DE               	decf	postinc2,f,c
 19802  01573C  0E00               	movlw	0
 19803  01573E  5ADD               	subwfb	postdec2,f,c
 19804                           
 19805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19806                           ;stkvar	_s @ sp[(-18)+12]
 19807  015740  0EFA               	movlw	-6
 19808  015742  006F FF8C  F028    	movff	plusw1,btemp
 19809  015748  0EFB               	movlw	-5
 19810  01574A  50E3               	movf	plusw1,w,c
 19811  01574C  1028               	iorwf	btemp^0,w,c
 19812  01574E  A4D8               	btfss	status,2,c
 19813  015750  D002               	goto	l11556
 19814  015752  0E2B               	movlw	43
 19815  015754  D001               	goto	L22
 19816  015756                     l11556:
 19817  015756  0E2D               	movlw	45
 19818  015758                     L22:
 19819  015758  6E32               	movwf	(btemp+10)^0,c
 19820  01575A  0E00               	movlw	0
 19821  01575C  6E33               	movwf	(btemp+11)^0,c
 19822                           
 19823                           ;stkvar	_dtoa$5365 @ sp[(-18)+0]
 19824  01575E  0EEE               	movlw	-18
 19825  015760  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19826  015766  0EEF               	movlw	-17
 19827  015768  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19828                           
 19829                           ;stkvar	_dtoa$5365 @ sp[(-18)+0]
 19830                           ;stkvar	_i @ sp[(-18)+10]
 19831  01576E  0EF8               	movlw	-8
 19832  015770  006F FF8C  F032    	movff	plusw1,btemp+10
 19833  015776  0EF9               	movlw	-7
 19834  015778  006F FF8C  F033    	movff	plusw1,btemp+11
 19835  01577E  0EAE               	movlw	low _dbuf
 19836  015780  2432               	addwf	(btemp+10)^0,w,c
 19837  015782  6ED9               	movwf	fsr2l,c
 19838  015784  0E03               	movlw	high _dbuf
 19839  015786  2033               	addwfc	(btemp+11)^0,w,c
 19840  015788  6EDA               	movwf	fsr2h,c
 19841  01578A  0EEE               	movlw	-18
 19842  01578C  006F FF8F FFDF     	movff	plusw1,indf2
 19843  015792                     l11560:
 19844                           
 19845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19846                           ;stkvar	_w @ sp[(-18)+14]
 19847  015792  0EFC               	movlw	-4
 19848  015794  006F FF8F FFE6     	movff	plusw1,postinc1
 19849  01579A  006F FF8F FFE6     	movff	plusw1,postinc1
 19850                           
 19851                           ;stkvar	_i @ sp[(-20)+10]
 19852  0157A0  0EAE               	movlw	low _dbuf
 19853  0157A2  6E32               	movwf	(btemp+10)^0,c
 19854  0157A4  0E03               	movlw	high _dbuf
 19855  0157A6  6E33               	movwf	(btemp+11)^0,c
 19856  0157A8  0EF6               	movlw	-10
 19857  0157AA  50E3               	movf	plusw1,w,c
 19858  0157AC  2632               	addwf	(btemp+10)^0,f,c
 19859  0157AE  0EF7               	movlw	-9
 19860  0157B0  50E3               	movf	plusw1,w,c
 19861  0157B2  2233               	addwfc	(btemp+11)^0,f,c
 19862  0157B4  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 19863  0157BA  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 19864                           
 19865                           ;stkvar	_fp @ sp[(-22)+-2]
 19866  0157C0  0EE8               	movlw	-24
 19867  0157C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19868  0157C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19869  0157CE  EC6F  F0C8         	call	_pad	;wreg free
 19870                           
 19871                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19872  0157D2  0EE4               	movlw	228
 19873  0157D4  26E1               	addwf	fsr1l,f,c
 19874  0157D6  0EFF               	movlw	255
 19875  0157D8  22E2               	addwfc	fsr1h,f,c
 19876  0157DA  0012               	return		;funcret
 19877  0157DC                     __end_of_dtoa:
 19878                           	opt callstack 0
 19879                           
 19880 ;; *************** function _abs *****************
 19881 ;; Defined at:
 19882 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19883 ;; Parameters:    Size  Location     Type
 19884 ;;  a               2  [STACK] int 
 19885 ;; Auto vars:     Size  Location     Type
 19886 ;;		None
 19887 ;; Return value:  Size  Location     Type
 19888 ;;                  2  [STACK] int 
 19889 ;; Registers used:
 19890 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19891 ;; Tracked objects:
 19892 ;;		On entry : 0/3
 19893 ;;		On exit  : 0/0
 19894 ;;		Unchanged: 0/0
 19895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19900 ;;Total ram usage:        0 bytes
 19901 ;; Hardware stack levels used:    1
 19902 ;; Hardware stack levels required when called:   15
 19903 ;; This function calls:
 19904 ;;		Nothing
 19905 ;; This function is called by:
 19906 ;;		_dtoa
 19907 ;; This function uses a reentrant model
 19908 ;;
 19909                           
 19910                           	psect	text67
 19911  01AA3C                     __ptext67:
 19912                           	opt callstack 0
 19913  01AA3C                     _abs:
 19914                           	opt callstack 0
 19915                           
 19916                           ;stkvar	_a @ sp[(0)+-2]
 19917                           
 19918                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19919                           ;incstack = 0
 19920 ;; hardware stack exceeded
 19921  01AA3C  0EFF               	movlw	-1
 19922  01AA3E  BEE3               	btfsc	plusw1,7,c
 19923  01AA40  D007               	goto	u5730
 19924  01AA42  0EFF               	movlw	-1
 19925  01AA44  50E3               	movf	plusw1,w,c
 19926  01AA46  E112               	bnz	l7744
 19927  01AA48  0EFE               	movlw	-2
 19928  01AA4A  04E3               	decf	plusw1,w,c
 19929  01AA4C  B0D8               	btfsc	status,0,c
 19930  01AA4E  D00E               	goto	l7744
 19931  01AA50                     u5730:
 19932                           
 19933                           ;stkvar	_a @ sp[(0)+-2]
 19934  01AA50  0EFE               	movlw	-2
 19935  01AA52  006F FF8C  F028    	movff	plusw1,btemp
 19936  01AA58  1E28               	comf	btemp^0,f,c
 19937  01AA5A  0EFF               	movlw	-1
 19938  01AA5C  006F FF8C  F029    	movff	plusw1,btemp+1
 19939  01AA62  1E29               	comf	(btemp+1)^0,f,c
 19940  01AA64  2A28               	incf	btemp^0,f,c
 19941  01AA66  B4D8               	btfsc	status,2,c
 19942  01AA68  2A29               	incf	(btemp+1)^0,f,c
 19943  01AA6A  D008               	goto	l3052
 19944  01AA6C                     l7744:
 19945                           
 19946                           ;stkvar	_a @ sp[(0)+-2]
 19947  01AA6C  0EFE               	movlw	-2
 19948  01AA6E  006F FF8C  F028    	movff	plusw1,btemp
 19949  01AA74  0EFF               	movlw	-1
 19950  01AA76  006F FF8C  F029    	movff	plusw1,btemp+1
 19951  01AA7C                     l3052:
 19952                           
 19953                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19954  01AA7C  52E5               	movf	postdec1,f,c
 19955  01AA7E  52E5               	movf	postdec1,f,c
 19956  01AA80  0012               	return		;funcret
 19957  01AA82                     __end_of_abs:
 19958                           	opt callstack 0
 19959                           
 19960 ;; *************** function ___aomod *****************
 19961 ;; Defined at:
 19962 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19963 ;; Parameters:    Size  Location     Type
 19964 ;;  dividend        8  [STACK] long long 
 19965 ;;  divisor         8  [STACK] long long 
 19966 ;; Auto vars:     Size  Location     Type
 19967 ;;  sign            1  [STACK] unsigned char 
 19968 ;;  counter         1  [STACK] unsigned char 
 19969 ;; Return value:  Size  Location     Type
 19970 ;;                  8  [STACK] long long 
 19971 ;; Registers used:
 19972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19973 ;; Tracked objects:
 19974 ;;		On entry : 0/3
 19975 ;;		On exit  : 0/0
 19976 ;;		Unchanged: 0/0
 19977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19982 ;;Total ram usage:        0 bytes
 19983 ;; Hardware stack levels used:    1
 19984 ;; Hardware stack levels required when called:   15
 19985 ;; This function calls:
 19986 ;;		Nothing
 19987 ;; This function is called by:
 19988 ;;		_dtoa
 19989 ;; This function uses a reentrant model
 19990 ;;
 19991                           
 19992                           	psect	text68
 19993  017342                     __ptext68:
 19994                           	opt callstack 0
 19995  017342                     ___aomod:
 19996                           	opt callstack 0
 19997                           
 19998                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19999  017342  52E6               	movf	postinc1,f,c
 20000  017344  52E6               	movf	postinc1,f,c
 20001                           
 20002                           ;stkvar	_sign @ sp[(-2)+0]
 20003                           
 20004                           ;incstack = 0
 20005 ;; hardware stack exceeded
 20006  017346  0EFE               	movlw	-2
 20007  017348  6AE3               	clrf	plusw1,c
 20008                           
 20009                           ;stkvar	_dividend @ sp[(-2)+-8]
 20010  01734A  0EFD               	movlw	-3
 20011  01734C  AEE3               	btfss	plusw1,7,c
 20012  01734E  D028               	goto	l7902
 20013                           
 20014                           ;stkvar	_dividend @ sp[(-2)+-8]
 20015                           ;stkvar	_dividend @ sp[(-2)+-8]
 20016  017350  0EF6               	movlw	-10
 20017  017352  6CE3               	negf	plusw1,c
 20018  017354  0EF7               	movlw	-9
 20019  017356  1EE3               	comf	plusw1,f,c
 20020  017358  0EF8               	movlw	-8
 20021  01735A  1EE3               	comf	plusw1,f,c
 20022  01735C  0EF9               	movlw	-7
 20023  01735E  1EE3               	comf	plusw1,f,c
 20024  017360  0EFA               	movlw	-6
 20025  017362  1EE3               	comf	plusw1,f,c
 20026  017364  0EFB               	movlw	-5
 20027  017366  1EE3               	comf	plusw1,f,c
 20028  017368  0EFC               	movlw	-4
 20029  01736A  1EE3               	comf	plusw1,f,c
 20030  01736C  0EFD               	movlw	-3
 20031  01736E  1EE3               	comf	plusw1,f,c
 20032  017370  E314               	bnc	u6160
 20033  017372  0EF7               	movlw	-9
 20034  017374  2AE3               	incf	plusw1,f,c
 20035  017376  E311               	bnc	u6160
 20036  017378  0EF8               	movlw	-8
 20037  01737A  2AE3               	incf	plusw1,f,c
 20038  01737C  E30E               	bnc	u6160
 20039  01737E  0EF9               	movlw	-7
 20040  017380  2AE3               	incf	plusw1,f,c
 20041  017382  E30B               	bnc	u6160
 20042  017384  0EFA               	movlw	-6
 20043  017386  2AE3               	incf	plusw1,f,c
 20044  017388  E308               	bnc	u6160
 20045  01738A  0EFB               	movlw	-5
 20046  01738C  2AE3               	incf	plusw1,f,c
 20047  01738E  E305               	bnc	u6160
 20048  017390  0EFC               	movlw	-4
 20049  017392  2AE3               	incf	plusw1,f,c
 20050  017394  E302               	bnc	u6160
 20051  017396  0EFD               	movlw	-3
 20052  017398  2AE3               	incf	plusw1,f,c
 20053  01739A                     u6160:
 20054                           
 20055                           ;stkvar	_sign @ sp[(-2)+0]
 20056  01739A  0EFE               	movlw	-2
 20057  01739C  6AE3               	clrf	plusw1,c
 20058  01739E  2AE3               	incf	plusw1,f,c
 20059  0173A0                     l7902:
 20060                           
 20061                           ;stkvar	_divisor @ sp[(-2)+-16]
 20062  0173A0  0EF5               	movlw	-11
 20063  0173A2  AEE3               	btfss	plusw1,7,c
 20064  0173A4  D025               	goto	u6180
 20065                           
 20066                           ;stkvar	_divisor @ sp[(-2)+-16]
 20067                           ;stkvar	_divisor @ sp[(-2)+-16]
 20068  0173A6  0EEE               	movlw	-18
 20069  0173A8  6CE3               	negf	plusw1,c
 20070  0173AA  0EEF               	movlw	-17
 20071  0173AC  1EE3               	comf	plusw1,f,c
 20072  0173AE  0EF0               	movlw	-16
 20073  0173B0  1EE3               	comf	plusw1,f,c
 20074  0173B2  0EF1               	movlw	-15
 20075  0173B4  1EE3               	comf	plusw1,f,c
 20076  0173B6  0EF2               	movlw	-14
 20077  0173B8  1EE3               	comf	plusw1,f,c
 20078  0173BA  0EF3               	movlw	-13
 20079  0173BC  1EE3               	comf	plusw1,f,c
 20080  0173BE  0EF4               	movlw	-12
 20081  0173C0  1EE3               	comf	plusw1,f,c
 20082  0173C2  0EF5               	movlw	-11
 20083  0173C4  1EE3               	comf	plusw1,f,c
 20084  0173C6  E314               	bnc	u6180
 20085  0173C8  0EEF               	movlw	-17
 20086  0173CA  2AE3               	incf	plusw1,f,c
 20087  0173CC  E311               	bnc	u6180
 20088  0173CE  0EF0               	movlw	-16
 20089  0173D0  2AE3               	incf	plusw1,f,c
 20090  0173D2  E30E               	bnc	u6180
 20091  0173D4  0EF1               	movlw	-15
 20092  0173D6  2AE3               	incf	plusw1,f,c
 20093  0173D8  E30B               	bnc	u6180
 20094  0173DA  0EF2               	movlw	-14
 20095  0173DC  2AE3               	incf	plusw1,f,c
 20096  0173DE  E308               	bnc	u6180
 20097  0173E0  0EF3               	movlw	-13
 20098  0173E2  2AE3               	incf	plusw1,f,c
 20099  0173E4  E305               	bnc	u6180
 20100  0173E6  0EF4               	movlw	-12
 20101  0173E8  2AE3               	incf	plusw1,f,c
 20102  0173EA  E302               	bnc	u6180
 20103  0173EC  0EF5               	movlw	-11
 20104  0173EE  2AE3               	incf	plusw1,f,c
 20105  0173F0                     u6180:
 20106                           
 20107                           ;stkvar	_divisor @ sp[(-2)+-16]
 20108  0173F0  0EEE               	movlw	-18
 20109  0173F2  50E3               	movf	plusw1,w,c
 20110  0173F4  E116               	bnz	u6190
 20111  0173F6  0EEF               	movlw	-17
 20112  0173F8  50E3               	movf	plusw1,w,c
 20113  0173FA  E113               	bnz	u6190
 20114  0173FC  0EF0               	movlw	-16
 20115  0173FE  50E3               	movf	plusw1,w,c
 20116  017400  E110               	bnz	u6190
 20117  017402  0EF1               	movlw	-15
 20118  017404  50E3               	movf	plusw1,w,c
 20119  017406  E10D               	bnz	u6190
 20120  017408  0EF2               	movlw	-14
 20121  01740A  50E3               	movf	plusw1,w,c
 20122  01740C  E10A               	bnz	u6190
 20123  01740E  0EF3               	movlw	-13
 20124  017410  50E3               	movf	plusw1,w,c
 20125  017412  E107               	bnz	u6190
 20126  017414  0EF4               	movlw	-12
 20127  017416  50E3               	movf	plusw1,w,c
 20128  017418  E104               	bnz	u6190
 20129  01741A  0EF5               	movlw	-11
 20130  01741C  50E3               	movf	plusw1,w,c
 20131  01741E  B4D8               	btfsc	status,2,c
 20132  017420  D075               	goto	u6220
 20133  017422                     u6190:
 20134                           
 20135                           ;stkvar	_counter @ sp[(-2)+1]
 20136  017422  0EFF               	movlw	-1
 20137  017424  6AE3               	clrf	plusw1,c
 20138  017426  D012               	goto	L23
 20139  017428                     l7910:
 20140                           
 20141                           ;stkvar	_divisor @ sp[(-2)+-16]
 20142  017428  90D8               	bcf	status,0,c
 20143  01742A  0EEE               	movlw	-18
 20144  01742C  36E3               	rlcf	plusw1,f,c
 20145  01742E  0EEF               	movlw	-17
 20146  017430  36E3               	rlcf	plusw1,f,c
 20147  017432  0EF0               	movlw	-16
 20148  017434  36E3               	rlcf	plusw1,f,c
 20149  017436  0EF1               	movlw	-15
 20150  017438  36E3               	rlcf	plusw1,f,c
 20151  01743A  0EF2               	movlw	-14
 20152  01743C  36E3               	rlcf	plusw1,f,c
 20153  01743E  0EF3               	movlw	-13
 20154  017440  36E3               	rlcf	plusw1,f,c
 20155  017442  0EF4               	movlw	-12
 20156  017444  36E3               	rlcf	plusw1,f,c
 20157  017446  0EF5               	movlw	-11
 20158  017448  36E3               	rlcf	plusw1,f,c
 20159                           
 20160                           ;stkvar	_counter @ sp[(-2)+1]
 20161  01744A  0EFF               	movlw	-1
 20162  01744C                     L23:
 20163  01744C  2AE3               	incf	plusw1,f,c
 20164                           
 20165                           ;stkvar	_divisor @ sp[(-2)+-16]
 20166  01744E  0EF5               	movlw	-11
 20167  017450  AEE3               	btfss	plusw1,7,c
 20168  017452  D7EA               	goto	l7910
 20169  017454                     u6200:
 20170                           
 20171                           ;stkvar	_divisor @ sp[(-2)+-16]
 20172                           ;stkvar	_dividend @ sp[(-2)+-8]
 20173  017454  50E1               	movf	fsr1l,w,c
 20174  017456  0FF6               	addlw	-10
 20175  017458  6ED9               	movwf	fsr2l,c
 20176  01745A  50E2               	movf	fsr1h,w,c
 20177  01745C  6EDA               	movwf	fsr2h,c
 20178  01745E  0EFF               	movlw	255
 20179  017460  22DA               	addwfc	fsr2h,f,c
 20180  017462  0EEE               	movlw	-18
 20181  017464  50E3               	movf	plusw1,w,c
 20182  017466  5CDE               	subwf	postinc2,w,c
 20183  017468  0EEF               	movlw	-17
 20184  01746A  50E3               	movf	plusw1,w,c
 20185  01746C  58DE               	subwfb	postinc2,w,c
 20186  01746E  0EF0               	movlw	-16
 20187  017470  50E3               	movf	plusw1,w,c
 20188  017472  58DE               	subwfb	postinc2,w,c
 20189  017474  0EF1               	movlw	-15
 20190  017476  50E3               	movf	plusw1,w,c
 20191  017478  58DE               	subwfb	postinc2,w,c
 20192  01747A  0EF2               	movlw	-14
 20193  01747C  50E3               	movf	plusw1,w,c
 20194  01747E  58DE               	subwfb	postinc2,w,c
 20195  017480  0EF3               	movlw	-13
 20196  017482  50E3               	movf	plusw1,w,c
 20197  017484  58DE               	subwfb	postinc2,w,c
 20198  017486  0EF4               	movlw	-12
 20199  017488  50E3               	movf	plusw1,w,c
 20200  01748A  58DE               	subwfb	postinc2,w,c
 20201  01748C  0EF5               	movlw	-11
 20202  01748E  50E3               	movf	plusw1,w,c
 20203  017490  58DE               	subwfb	postinc2,w,c
 20204  017492  A0D8               	btfss	status,0,c
 20205  017494  D01F               	goto	l7918
 20206                           
 20207                           ;stkvar	_divisor @ sp[(-2)+-16]
 20208                           ;stkvar	_dividend @ sp[(-2)+-8]
 20209  017496  50E1               	movf	fsr1l,w,c
 20210  017498  0FF6               	addlw	-10
 20211  01749A  6ED9               	movwf	fsr2l,c
 20212  01749C  50E2               	movf	fsr1h,w,c
 20213  01749E  6EDA               	movwf	fsr2h,c
 20214  0174A0  0EFF               	movlw	255
 20215  0174A2  22DA               	addwfc	fsr2h,f,c
 20216  0174A4  0EEE               	movlw	-18
 20217  0174A6  50E3               	movf	plusw1,w,c
 20218  0174A8  5EDE               	subwf	postinc2,f,c
 20219  0174AA  0EEF               	movlw	-17
 20220  0174AC  50E3               	movf	plusw1,w,c
 20221  0174AE  5ADE               	subwfb	postinc2,f,c
 20222  0174B0  0EF0               	movlw	-16
 20223  0174B2  50E3               	movf	plusw1,w,c
 20224  0174B4  5ADE               	subwfb	postinc2,f,c
 20225  0174B6  0EF1               	movlw	-15
 20226  0174B8  50E3               	movf	plusw1,w,c
 20227  0174BA  5ADE               	subwfb	postinc2,f,c
 20228  0174BC  0EF2               	movlw	-14
 20229  0174BE  50E3               	movf	plusw1,w,c
 20230  0174C0  5ADE               	subwfb	postinc2,f,c
 20231  0174C2  0EF3               	movlw	-13
 20232  0174C4  50E3               	movf	plusw1,w,c
 20233  0174C6  5ADE               	subwfb	postinc2,f,c
 20234  0174C8  0EF4               	movlw	-12
 20235  0174CA  50E3               	movf	plusw1,w,c
 20236  0174CC  5ADE               	subwfb	postinc2,f,c
 20237  0174CE  0EF5               	movlw	-11
 20238  0174D0  50E3               	movf	plusw1,w,c
 20239  0174D2  5ADE               	subwfb	postinc2,f,c
 20240  0174D4                     l7918:
 20241                           
 20242                           ;stkvar	_divisor @ sp[(-2)+-16]
 20243  0174D4  90D8               	bcf	status,0,c
 20244  0174D6  0EF5               	movlw	-11
 20245  0174D8  32E3               	rrcf	plusw1,f,c
 20246  0174DA  0EF4               	movlw	-12
 20247  0174DC  32E3               	rrcf	plusw1,f,c
 20248  0174DE  0EF3               	movlw	-13
 20249  0174E0  32E3               	rrcf	plusw1,f,c
 20250  0174E2  0EF2               	movlw	-14
 20251  0174E4  32E3               	rrcf	plusw1,f,c
 20252  0174E6  0EF1               	movlw	-15
 20253  0174E8  32E3               	rrcf	plusw1,f,c
 20254  0174EA  0EF0               	movlw	-16
 20255  0174EC  32E3               	rrcf	plusw1,f,c
 20256  0174EE  0EEF               	movlw	-17
 20257  0174F0  32E3               	rrcf	plusw1,f,c
 20258  0174F2  0EEE               	movlw	-18
 20259  0174F4  32E3               	rrcf	plusw1,f,c
 20260                           
 20261                           ;stkvar	_counter @ sp[(-2)+1]
 20262  0174F6  0EFF               	movlw	-1
 20263  0174F8  50E3               	movf	plusw1,w,c
 20264  0174FA  6E28               	movwf	btemp^0,c
 20265  0174FC  0E01               	movlw	1
 20266  0174FE  5E28               	subwf	btemp^0,f,c
 20267  017500  0EFF               	movlw	-1
 20268  017502  0060  F0A3  FFE3   	movff	btemp,plusw1
 20269  017508  A4D8               	btfss	status,2,c
 20270  01750A  D7A4               	goto	u6200
 20271  01750C                     u6220:
 20272                           
 20273                           ;stkvar	_sign @ sp[(-2)+0]
 20274  01750C  0EFE               	movlw	-2
 20275  01750E  50E3               	movf	plusw1,w,c
 20276  017510  B4D8               	btfsc	status,2,c
 20277  017512  D025               	goto	u6240
 20278                           
 20279                           ;stkvar	_dividend @ sp[(-2)+-8]
 20280                           ;stkvar	_dividend @ sp[(-2)+-8]
 20281  017514  0EF6               	movlw	-10
 20282  017516  6CE3               	negf	plusw1,c
 20283  017518  0EF7               	movlw	-9
 20284  01751A  1EE3               	comf	plusw1,f,c
 20285  01751C  0EF8               	movlw	-8
 20286  01751E  1EE3               	comf	plusw1,f,c
 20287  017520  0EF9               	movlw	-7
 20288  017522  1EE3               	comf	plusw1,f,c
 20289  017524  0EFA               	movlw	-6
 20290  017526  1EE3               	comf	plusw1,f,c
 20291  017528  0EFB               	movlw	-5
 20292  01752A  1EE3               	comf	plusw1,f,c
 20293  01752C  0EFC               	movlw	-4
 20294  01752E  1EE3               	comf	plusw1,f,c
 20295  017530  0EFD               	movlw	-3
 20296  017532  1EE3               	comf	plusw1,f,c
 20297  017534  E314               	bnc	u6240
 20298  017536  0EF7               	movlw	-9
 20299  017538  2AE3               	incf	plusw1,f,c
 20300  01753A  E311               	bnc	u6240
 20301  01753C  0EF8               	movlw	-8
 20302  01753E  2AE3               	incf	plusw1,f,c
 20303  017540  E30E               	bnc	u6240
 20304  017542  0EF9               	movlw	-7
 20305  017544  2AE3               	incf	plusw1,f,c
 20306  017546  E30B               	bnc	u6240
 20307  017548  0EFA               	movlw	-6
 20308  01754A  2AE3               	incf	plusw1,f,c
 20309  01754C  E308               	bnc	u6240
 20310  01754E  0EFB               	movlw	-5
 20311  017550  2AE3               	incf	plusw1,f,c
 20312  017552  E305               	bnc	u6240
 20313  017554  0EFC               	movlw	-4
 20314  017556  2AE3               	incf	plusw1,f,c
 20315  017558  E302               	bnc	u6240
 20316  01755A  0EFD               	movlw	-3
 20317  01755C  2AE3               	incf	plusw1,f,c
 20318  01755E                     u6240:
 20319                           
 20320                           ;stkvar	_dividend @ sp[(-2)+-8]
 20321  01755E  0EF6               	movlw	246
 20322  017560  24E1               	addwf	fsr1l,w,c
 20323  017562  6ED9               	movwf	fsr2l,c
 20324  017564  0EFF               	movlw	255
 20325  017566  20E2               	addwfc	fsr1h,w,c
 20326  017568  6EDA               	movwf	fsr2h,c
 20327                           
 20328                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20329  01756A  0E08               	movlw	8
 20330  01756C  6E28               	movwf	btemp^0,c
 20331  01756E  0EF6               	movlw	-10
 20332  017570                     us625999:
 20333  017570  006F FF7B FFE3     	movff	postinc2,plusw1
 20334  017576  28E8               	incf	wreg,w,c
 20335  017578  2E28               	decfsz	btemp^0,f,c
 20336  01757A  D7FA               	bra	us625999
 20337                           
 20338                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20339  01757C  52E5               	movf	postdec1,f,c
 20340  01757E  52E5               	movf	postdec1,f,c
 20341  017580  0012               	return		;funcret
 20342  017582                     __end_of___aomod:
 20343                           	opt callstack 0
 20344                           
 20345 ;; *************** function ___aodiv *****************
 20346 ;; Defined at:
 20347 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20348 ;; Parameters:    Size  Location     Type
 20349 ;;  dividend        8  [STACK] long long 
 20350 ;;  divisor         8  [STACK] long long 
 20351 ;; Auto vars:     Size  Location     Type
 20352 ;;  quotient        8  [STACK] long long 
 20353 ;;  sign            1  [STACK] unsigned char 
 20354 ;;  counter         1  [STACK] unsigned char 
 20355 ;; Return value:  Size  Location     Type
 20356 ;;                  8  [STACK] long long 
 20357 ;; Registers used:
 20358 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20359 ;; Tracked objects:
 20360 ;;		On entry : 0/3
 20361 ;;		On exit  : 0/0
 20362 ;;		Unchanged: 0/0
 20363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20368 ;;Total ram usage:        0 bytes
 20369 ;; Hardware stack levels used:    1
 20370 ;; Hardware stack levels required when called:   15
 20371 ;; This function calls:
 20372 ;;		Nothing
 20373 ;; This function is called by:
 20374 ;;		_dtoa
 20375 ;; This function uses a reentrant model
 20376 ;;
 20377                           
 20378                           	psect	text69
 20379  016E4E                     __ptext69:
 20380                           	opt callstack 0
 20381  016E4E                     ___aodiv:
 20382                           	opt callstack 0
 20383                           
 20384                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20385  016E4E  0E0A               	movlw	10
 20386  016E50  26E1               	addwf	fsr1l,f,c
 20387  016E52  0E00               	movlw	0
 20388  016E54  22E2               	addwfc	fsr1h,f,c
 20389                           
 20390                           ;stkvar	_sign @ sp[(-10)+8]
 20391                           
 20392                           ;incstack = 0
 20393 ;; hardware stack exceeded
 20394  016E56  0EFE               	movlw	-2
 20395  016E58  6AE3               	clrf	plusw1,c
 20396                           
 20397                           ;stkvar	_divisor @ sp[(-10)+-16]
 20398  016E5A  0EED               	movlw	-19
 20399  016E5C  AEE3               	btfss	plusw1,7,c
 20400  016E5E  D028               	goto	l7858
 20401                           
 20402                           ;stkvar	_divisor @ sp[(-10)+-16]
 20403                           ;stkvar	_divisor @ sp[(-10)+-16]
 20404  016E60  0EE6               	movlw	-26
 20405  016E62  6CE3               	negf	plusw1,c
 20406  016E64  0EE7               	movlw	-25
 20407  016E66  1EE3               	comf	plusw1,f,c
 20408  016E68  0EE8               	movlw	-24
 20409  016E6A  1EE3               	comf	plusw1,f,c
 20410  016E6C  0EE9               	movlw	-23
 20411  016E6E  1EE3               	comf	plusw1,f,c
 20412  016E70  0EEA               	movlw	-22
 20413  016E72  1EE3               	comf	plusw1,f,c
 20414  016E74  0EEB               	movlw	-21
 20415  016E76  1EE3               	comf	plusw1,f,c
 20416  016E78  0EEC               	movlw	-20
 20417  016E7A  1EE3               	comf	plusw1,f,c
 20418  016E7C  0EED               	movlw	-19
 20419  016E7E  1EE3               	comf	plusw1,f,c
 20420  016E80  E314               	bnc	u6040
 20421  016E82  0EE7               	movlw	-25
 20422  016E84  2AE3               	incf	plusw1,f,c
 20423  016E86  E311               	bnc	u6040
 20424  016E88  0EE8               	movlw	-24
 20425  016E8A  2AE3               	incf	plusw1,f,c
 20426  016E8C  E30E               	bnc	u6040
 20427  016E8E  0EE9               	movlw	-23
 20428  016E90  2AE3               	incf	plusw1,f,c
 20429  016E92  E30B               	bnc	u6040
 20430  016E94  0EEA               	movlw	-22
 20431  016E96  2AE3               	incf	plusw1,f,c
 20432  016E98  E308               	bnc	u6040
 20433  016E9A  0EEB               	movlw	-21
 20434  016E9C  2AE3               	incf	plusw1,f,c
 20435  016E9E  E305               	bnc	u6040
 20436  016EA0  0EEC               	movlw	-20
 20437  016EA2  2AE3               	incf	plusw1,f,c
 20438  016EA4  E302               	bnc	u6040
 20439  016EA6  0EED               	movlw	-19
 20440  016EA8  2AE3               	incf	plusw1,f,c
 20441  016EAA                     u6040:
 20442                           
 20443                           ;stkvar	_sign @ sp[(-10)+8]
 20444  016EAA  0EFE               	movlw	-2
 20445  016EAC  6AE3               	clrf	plusw1,c
 20446  016EAE  2AE3               	incf	plusw1,f,c
 20447  016EB0                     l7858:
 20448                           
 20449                           ;stkvar	_dividend @ sp[(-10)+-8]
 20450  016EB0  0EF5               	movlw	-11
 20451  016EB2  AEE3               	btfss	plusw1,7,c
 20452  016EB4  D027               	goto	l7864
 20453                           
 20454                           ;stkvar	_dividend @ sp[(-10)+-8]
 20455                           ;stkvar	_dividend @ sp[(-10)+-8]
 20456  016EB6  0EEE               	movlw	-18
 20457  016EB8  6CE3               	negf	plusw1,c
 20458  016EBA  0EEF               	movlw	-17
 20459  016EBC  1EE3               	comf	plusw1,f,c
 20460  016EBE  0EF0               	movlw	-16
 20461  016EC0  1EE3               	comf	plusw1,f,c
 20462  016EC2  0EF1               	movlw	-15
 20463  016EC4  1EE3               	comf	plusw1,f,c
 20464  016EC6  0EF2               	movlw	-14
 20465  016EC8  1EE3               	comf	plusw1,f,c
 20466  016ECA  0EF3               	movlw	-13
 20467  016ECC  1EE3               	comf	plusw1,f,c
 20468  016ECE  0EF4               	movlw	-12
 20469  016ED0  1EE3               	comf	plusw1,f,c
 20470  016ED2  0EF5               	movlw	-11
 20471  016ED4  1EE3               	comf	plusw1,f,c
 20472  016ED6  E314               	bnc	u6060
 20473  016ED8  0EEF               	movlw	-17
 20474  016EDA  2AE3               	incf	plusw1,f,c
 20475  016EDC  E311               	bnc	u6060
 20476  016EDE  0EF0               	movlw	-16
 20477  016EE0  2AE3               	incf	plusw1,f,c
 20478  016EE2  E30E               	bnc	u6060
 20479  016EE4  0EF1               	movlw	-15
 20480  016EE6  2AE3               	incf	plusw1,f,c
 20481  016EE8  E30B               	bnc	u6060
 20482  016EEA  0EF2               	movlw	-14
 20483  016EEC  2AE3               	incf	plusw1,f,c
 20484  016EEE  E308               	bnc	u6060
 20485  016EF0  0EF3               	movlw	-13
 20486  016EF2  2AE3               	incf	plusw1,f,c
 20487  016EF4  E305               	bnc	u6060
 20488  016EF6  0EF4               	movlw	-12
 20489  016EF8  2AE3               	incf	plusw1,f,c
 20490  016EFA  E302               	bnc	u6060
 20491  016EFC  0EF5               	movlw	-11
 20492  016EFE  2AE3               	incf	plusw1,f,c
 20493  016F00                     u6060:
 20494                           
 20495                           ;stkvar	_sign @ sp[(-10)+8]
 20496  016F00  0EFE               	movlw	-2
 20497  016F02  70E3               	btg	plusw1,0,c
 20498  016F04                     l7864:
 20499                           
 20500                           ;stkvar	_quotient @ sp[(-10)+0]
 20501  016F04  0E07               	movlw	7
 20502  016F06  6E28               	movwf	btemp^0,c
 20503  016F08  0EF6               	movlw	-10
 20504  016F0A                     u6071:
 20505  016F0A  6AE3               	clrf	plusw1,c
 20506  016F0C  2AE8               	incf	wreg,f,c
 20507  016F0E  0628               	decf	btemp^0,f,c
 20508  016F10  E2FC               	bc	u6071
 20509                           
 20510                           ;stkvar	_divisor @ sp[(-10)+-16]
 20511  016F12  0EE6               	movlw	-26
 20512  016F14  50E3               	movf	plusw1,w,c
 20513  016F16  E116               	bnz	u6080
 20514  016F18  0EE7               	movlw	-25
 20515  016F1A  50E3               	movf	plusw1,w,c
 20516  016F1C  E113               	bnz	u6080
 20517  016F1E  0EE8               	movlw	-24
 20518  016F20  50E3               	movf	plusw1,w,c
 20519  016F22  E110               	bnz	u6080
 20520  016F24  0EE9               	movlw	-23
 20521  016F26  50E3               	movf	plusw1,w,c
 20522  016F28  E10D               	bnz	u6080
 20523  016F2A  0EEA               	movlw	-22
 20524  016F2C  50E3               	movf	plusw1,w,c
 20525  016F2E  E10A               	bnz	u6080
 20526  016F30  0EEB               	movlw	-21
 20527  016F32  50E3               	movf	plusw1,w,c
 20528  016F34  E107               	bnz	u6080
 20529  016F36  0EEC               	movlw	-20
 20530  016F38  50E3               	movf	plusw1,w,c
 20531  016F3A  E104               	bnz	u6080
 20532  016F3C  0EED               	movlw	-19
 20533  016F3E  50E3               	movf	plusw1,w,c
 20534  016F40  B4D8               	btfsc	status,2,c
 20535  016F42  D088               	goto	u6110
 20536  016F44                     u6080:
 20537                           
 20538                           ;stkvar	_counter @ sp[(-10)+9]
 20539  016F44  0EFF               	movlw	-1
 20540  016F46  6AE3               	clrf	plusw1,c
 20541  016F48  D012               	goto	L24
 20542  016F4A                     l7870:
 20543                           
 20544                           ;stkvar	_divisor @ sp[(-10)+-16]
 20545  016F4A  90D8               	bcf	status,0,c
 20546  016F4C  0EE6               	movlw	-26
 20547  016F4E  36E3               	rlcf	plusw1,f,c
 20548  016F50  0EE7               	movlw	-25
 20549  016F52  36E3               	rlcf	plusw1,f,c
 20550  016F54  0EE8               	movlw	-24
 20551  016F56  36E3               	rlcf	plusw1,f,c
 20552  016F58  0EE9               	movlw	-23
 20553  016F5A  36E3               	rlcf	plusw1,f,c
 20554  016F5C  0EEA               	movlw	-22
 20555  016F5E  36E3               	rlcf	plusw1,f,c
 20556  016F60  0EEB               	movlw	-21
 20557  016F62  36E3               	rlcf	plusw1,f,c
 20558  016F64  0EEC               	movlw	-20
 20559  016F66  36E3               	rlcf	plusw1,f,c
 20560  016F68  0EED               	movlw	-19
 20561  016F6A  36E3               	rlcf	plusw1,f,c
 20562                           
 20563                           ;stkvar	_counter @ sp[(-10)+9]
 20564  016F6C  0EFF               	movlw	-1
 20565  016F6E                     L24:
 20566  016F6E  2AE3               	incf	plusw1,f,c
 20567                           
 20568                           ;stkvar	_divisor @ sp[(-10)+-16]
 20569  016F70  0EED               	movlw	-19
 20570  016F72  AEE3               	btfss	plusw1,7,c
 20571  016F74  D7EA               	goto	l7870
 20572  016F76                     u6090:
 20573                           
 20574                           ;stkvar	_quotient @ sp[(-10)+0]
 20575  016F76  90D8               	bcf	status,0,c
 20576  016F78  0EF6               	movlw	-10
 20577  016F7A  36E3               	rlcf	plusw1,f,c
 20578  016F7C  0EF7               	movlw	-9
 20579  016F7E  36E3               	rlcf	plusw1,f,c
 20580  016F80  0EF8               	movlw	-8
 20581  016F82  36E3               	rlcf	plusw1,f,c
 20582  016F84  0EF9               	movlw	-7
 20583  016F86  36E3               	rlcf	plusw1,f,c
 20584  016F88  0EFA               	movlw	-6
 20585  016F8A  36E3               	rlcf	plusw1,f,c
 20586  016F8C  0EFB               	movlw	-5
 20587  016F8E  36E3               	rlcf	plusw1,f,c
 20588  016F90  0EFC               	movlw	-4
 20589  016F92  36E3               	rlcf	plusw1,f,c
 20590  016F94  0EFD               	movlw	-3
 20591  016F96  36E3               	rlcf	plusw1,f,c
 20592                           
 20593                           ;stkvar	_divisor @ sp[(-10)+-16]
 20594                           ;stkvar	_dividend @ sp[(-10)+-8]
 20595  016F98  50E1               	movf	fsr1l,w,c
 20596  016F9A  0FEE               	addlw	-18
 20597  016F9C  6ED9               	movwf	fsr2l,c
 20598  016F9E  50E2               	movf	fsr1h,w,c
 20599  016FA0  6EDA               	movwf	fsr2h,c
 20600  016FA2  0EFF               	movlw	255
 20601  016FA4  22DA               	addwfc	fsr2h,f,c
 20602  016FA6  0EE6               	movlw	-26
 20603  016FA8  50E3               	movf	plusw1,w,c
 20604  016FAA  5CDE               	subwf	postinc2,w,c
 20605  016FAC  0EE7               	movlw	-25
 20606  016FAE  50E3               	movf	plusw1,w,c
 20607  016FB0  58DE               	subwfb	postinc2,w,c
 20608  016FB2  0EE8               	movlw	-24
 20609  016FB4  50E3               	movf	plusw1,w,c
 20610  016FB6  58DE               	subwfb	postinc2,w,c
 20611  016FB8  0EE9               	movlw	-23
 20612  016FBA  50E3               	movf	plusw1,w,c
 20613  016FBC  58DE               	subwfb	postinc2,w,c
 20614  016FBE  0EEA               	movlw	-22
 20615  016FC0  50E3               	movf	plusw1,w,c
 20616  016FC2  58DE               	subwfb	postinc2,w,c
 20617  016FC4  0EEB               	movlw	-21
 20618  016FC6  50E3               	movf	plusw1,w,c
 20619  016FC8  58DE               	subwfb	postinc2,w,c
 20620  016FCA  0EEC               	movlw	-20
 20621  016FCC  50E3               	movf	plusw1,w,c
 20622  016FCE  58DE               	subwfb	postinc2,w,c
 20623  016FD0  0EED               	movlw	-19
 20624  016FD2  50E3               	movf	plusw1,w,c
 20625  016FD4  58DE               	subwfb	postinc2,w,c
 20626  016FD6  A0D8               	btfss	status,0,c
 20627  016FD8  D021               	goto	l7882
 20628                           
 20629                           ;stkvar	_divisor @ sp[(-10)+-16]
 20630                           ;stkvar	_dividend @ sp[(-10)+-8]
 20631  016FDA  50E1               	movf	fsr1l,w,c
 20632  016FDC  0FEE               	addlw	-18
 20633  016FDE  6ED9               	movwf	fsr2l,c
 20634  016FE0  50E2               	movf	fsr1h,w,c
 20635  016FE2  6EDA               	movwf	fsr2h,c
 20636  016FE4  0EFF               	movlw	255
 20637  016FE6  22DA               	addwfc	fsr2h,f,c
 20638  016FE8  0EE6               	movlw	-26
 20639  016FEA  50E3               	movf	plusw1,w,c
 20640  016FEC  5EDE               	subwf	postinc2,f,c
 20641  016FEE  0EE7               	movlw	-25
 20642  016FF0  50E3               	movf	plusw1,w,c
 20643  016FF2  5ADE               	subwfb	postinc2,f,c
 20644  016FF4  0EE8               	movlw	-24
 20645  016FF6  50E3               	movf	plusw1,w,c
 20646  016FF8  5ADE               	subwfb	postinc2,f,c
 20647  016FFA  0EE9               	movlw	-23
 20648  016FFC  50E3               	movf	plusw1,w,c
 20649  016FFE  5ADE               	subwfb	postinc2,f,c
 20650  017000  0EEA               	movlw	-22
 20651  017002  50E3               	movf	plusw1,w,c
 20652  017004  5ADE               	subwfb	postinc2,f,c
 20653  017006  0EEB               	movlw	-21
 20654  017008  50E3               	movf	plusw1,w,c
 20655  01700A  5ADE               	subwfb	postinc2,f,c
 20656  01700C  0EEC               	movlw	-20
 20657  01700E  50E3               	movf	plusw1,w,c
 20658  017010  5ADE               	subwfb	postinc2,f,c
 20659  017012  0EED               	movlw	-19
 20660  017014  50E3               	movf	plusw1,w,c
 20661  017016  5ADE               	subwfb	postinc2,f,c
 20662                           
 20663                           ;stkvar	_quotient @ sp[(-10)+0]
 20664  017018  0EF6               	movlw	-10
 20665  01701A  80E3               	bsf	plusw1,0,c
 20666  01701C                     l7882:
 20667                           
 20668                           ;stkvar	_divisor @ sp[(-10)+-16]
 20669  01701C  90D8               	bcf	status,0,c
 20670  01701E  0EED               	movlw	-19
 20671  017020  32E3               	rrcf	plusw1,f,c
 20672  017022  0EEC               	movlw	-20
 20673  017024  32E3               	rrcf	plusw1,f,c
 20674  017026  0EEB               	movlw	-21
 20675  017028  32E3               	rrcf	plusw1,f,c
 20676  01702A  0EEA               	movlw	-22
 20677  01702C  32E3               	rrcf	plusw1,f,c
 20678  01702E  0EE9               	movlw	-23
 20679  017030  32E3               	rrcf	plusw1,f,c
 20680  017032  0EE8               	movlw	-24
 20681  017034  32E3               	rrcf	plusw1,f,c
 20682  017036  0EE7               	movlw	-25
 20683  017038  32E3               	rrcf	plusw1,f,c
 20684  01703A  0EE6               	movlw	-26
 20685  01703C  32E3               	rrcf	plusw1,f,c
 20686                           
 20687                           ;stkvar	_counter @ sp[(-10)+9]
 20688  01703E  0EFF               	movlw	-1
 20689  017040  50E3               	movf	plusw1,w,c
 20690  017042  6E28               	movwf	btemp^0,c
 20691  017044  0E01               	movlw	1
 20692  017046  5E28               	subwf	btemp^0,f,c
 20693  017048  0EFF               	movlw	-1
 20694  01704A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20695  017050  A4D8               	btfss	status,2,c
 20696  017052  D791               	goto	u6090
 20697  017054                     u6110:
 20698                           
 20699                           ;stkvar	_sign @ sp[(-10)+8]
 20700  017054  0EFE               	movlw	-2
 20701  017056  50E3               	movf	plusw1,w,c
 20702  017058  B4D8               	btfsc	status,2,c
 20703  01705A  D025               	goto	u6130
 20704                           
 20705                           ;stkvar	_quotient @ sp[(-10)+0]
 20706                           ;stkvar	_quotient @ sp[(-10)+0]
 20707  01705C  0EF6               	movlw	-10
 20708  01705E  6CE3               	negf	plusw1,c
 20709  017060  0EF7               	movlw	-9
 20710  017062  1EE3               	comf	plusw1,f,c
 20711  017064  0EF8               	movlw	-8
 20712  017066  1EE3               	comf	plusw1,f,c
 20713  017068  0EF9               	movlw	-7
 20714  01706A  1EE3               	comf	plusw1,f,c
 20715  01706C  0EFA               	movlw	-6
 20716  01706E  1EE3               	comf	plusw1,f,c
 20717  017070  0EFB               	movlw	-5
 20718  017072  1EE3               	comf	plusw1,f,c
 20719  017074  0EFC               	movlw	-4
 20720  017076  1EE3               	comf	plusw1,f,c
 20721  017078  0EFD               	movlw	-3
 20722  01707A  1EE3               	comf	plusw1,f,c
 20723  01707C  E314               	bnc	u6130
 20724  01707E  0EF7               	movlw	-9
 20725  017080  2AE3               	incf	plusw1,f,c
 20726  017082  E311               	bnc	u6130
 20727  017084  0EF8               	movlw	-8
 20728  017086  2AE3               	incf	plusw1,f,c
 20729  017088  E30E               	bnc	u6130
 20730  01708A  0EF9               	movlw	-7
 20731  01708C  2AE3               	incf	plusw1,f,c
 20732  01708E  E30B               	bnc	u6130
 20733  017090  0EFA               	movlw	-6
 20734  017092  2AE3               	incf	plusw1,f,c
 20735  017094  E308               	bnc	u6130
 20736  017096  0EFB               	movlw	-5
 20737  017098  2AE3               	incf	plusw1,f,c
 20738  01709A  E305               	bnc	u6130
 20739  01709C  0EFC               	movlw	-4
 20740  01709E  2AE3               	incf	plusw1,f,c
 20741  0170A0  E302               	bnc	u6130
 20742  0170A2  0EFD               	movlw	-3
 20743  0170A4  2AE3               	incf	plusw1,f,c
 20744  0170A6                     u6130:
 20745                           
 20746                           ;stkvar	_quotient @ sp[(-10)+0]
 20747  0170A6  0EF6               	movlw	246
 20748  0170A8  24E1               	addwf	fsr1l,w,c
 20749  0170AA  6ED9               	movwf	fsr2l,c
 20750  0170AC  0EFF               	movlw	255
 20751  0170AE  20E2               	addwfc	fsr1h,w,c
 20752  0170B0  6EDA               	movwf	fsr2h,c
 20753                           
 20754                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20755  0170B2  0E08               	movlw	8
 20756  0170B4  6E28               	movwf	btemp^0,c
 20757  0170B6  0EEE               	movlw	-18
 20758  0170B8                     us614999:
 20759  0170B8  006F FF7B FFE3     	movff	postinc2,plusw1
 20760  0170BE  28E8               	incf	wreg,w,c
 20761  0170C0  2E28               	decfsz	btemp^0,f,c
 20762  0170C2  D7FA               	bra	us614999
 20763                           
 20764                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20765  0170C4  0EF6               	movlw	246
 20766  0170C6  26E1               	addwf	fsr1l,f,c
 20767  0170C8  0EFF               	movlw	255
 20768  0170CA  22E2               	addwfc	fsr1h,f,c
 20769  0170CC  0012               	return		;funcret
 20770  0170CE                     __end_of___aodiv:
 20771                           	opt callstack 0
 20772                           
 20773 ;; *************** function _ctoa *****************
 20774 ;; Defined at:
 20775 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20776 ;; Parameters:    Size  Location     Type
 20777 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20778 ;;		 -> f(6), NULL(0), 
 20779 ;;  c               1  [STACK] unsigned char 
 20780 ;; Auto vars:     Size  Location     Type
 20781 ;;  w               2  [STACK] int 
 20782 ;;  l               2    0        int 
 20783 ;; Return value:  Size  Location     Type
 20784 ;;                  2  [STACK] int 
 20785 ;; Registers used:
 20786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20787 ;; Tracked objects:
 20788 ;;		On entry : 0/0
 20789 ;;		On exit  : 0/0
 20790 ;;		Unchanged: 0/0
 20791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20796 ;;Total ram usage:        0 bytes
 20797 ;; Hardware stack levels used:    1
 20798 ;; Hardware stack levels required when called:   20
 20799 ;; This function calls:
 20800 ;;		_pad
 20801 ;; This function is called by:
 20802 ;;		_vfpfcnvrt
 20803 ;; This function uses a reentrant model
 20804 ;;
 20805                           
 20806                           	psect	text70
 20807  01A21E                     __ptext70:
 20808                           	opt callstack 0
 20809  01A21E                     _ctoa:
 20810                           	opt callstack 0
 20811                           
 20812                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20813  01A21E  52E6               	movf	postinc1,f,c
 20814  01A220  52E6               	movf	postinc1,f,c
 20815                           
 20816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20817                           
 20818                           ;incstack = 0
 20819 ;; hardware stack exceeded
 20820  01A222  5048               	movf	_width^0,w,c
 20821  01A224  1049               	iorwf	(_width+1)^0,w,c
 20822  01A226  A4D8               	btfss	status,2,c
 20823  01A228  D009               	goto	l11488
 20824                           
 20825                           ;stkvar	_w @ sp[(-2)+0]
 20826  01A22A  0EFE               	movlw	-2
 20827  01A22C  0060  F123  FFE3   	movff	_width,plusw1
 20828  01A232  0EFF               	movlw	-1
 20829  01A234  0060  F127  FFE3   	movff	_width+1,plusw1
 20830  01A23A  D016               	goto	l11490
 20831  01A23C                     l11488:
 20832  01A23C  0EFF               	movlw	255
 20833  01A23E  6E32               	movwf	(btemp+10)^0,c
 20834  01A240  0EFF               	movlw	255
 20835  01A242  6E33               	movwf	(btemp+11)^0,c
 20836  01A244  0060  F120  F030   	movff	_width,btemp+8
 20837  01A24A  0060  F124  F031   	movff	_width+1,btemp+9
 20838  01A250  5032               	movf	(btemp+10)^0,w,c
 20839  01A252  2630               	addwf	(btemp+8)^0,f,c
 20840  01A254  5033               	movf	(btemp+11)^0,w,c
 20841  01A256  2231               	addwfc	(btemp+9)^0,f,c
 20842                           
 20843                           ;stkvar	_w @ sp[(-2)+0]
 20844  01A258  0EFE               	movlw	-2
 20845  01A25A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 20846  01A260  0EFF               	movlw	-1
 20847  01A262  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 20848  01A268                     l11490:
 20849                           
 20850                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20851                           ;stkvar	_c @ sp[(-2)+-3]
 20852  01A268  0EFB               	movlw	-5
 20853  01A26A  006F FF8C  F3AE    	movff	plusw1,_dbuf
 20854                           
 20855                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20856  01A270  0103               	movlb	3	; () banked
 20857  01A272  6BAF               	clrf	(_dbuf+1)& (0+255),b
 20858                           
 20859                           ; BSR set to: 3
 20860                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20861                           ;stkvar	_w @ sp[(-2)+0]
 20862  01A274  0EFE               	movlw	-2
 20863  01A276  006F FF8F FFE6     	movff	plusw1,postinc1
 20864  01A27C  006F FF8F FFE6     	movff	plusw1,postinc1
 20865  01A282  0EAE               	movlw	low _dbuf
 20866  01A284  6EE6               	movwf	postinc1,c
 20867  01A286  0E03               	movlw	high _dbuf
 20868  01A288  6EE6               	movwf	postinc1,c
 20869                           
 20870                           ;stkvar	_fp @ sp[(-6)+-2]
 20871  01A28A  0EF8               	movlw	-8
 20872  01A28C  006F FF8F FFE6     	movff	plusw1,postinc1
 20873  01A292  006F FF8F FFE6     	movff	plusw1,postinc1
 20874  01A298  EC6F  F0C8         	call	_pad	;wreg free
 20875                           
 20876                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20877  01A29C  0EFB               	movlw	251
 20878  01A29E  26E1               	addwf	fsr1l,f,c
 20879  01A2A0  0EFF               	movlw	255
 20880  01A2A2  22E2               	addwfc	fsr1h,f,c
 20881  01A2A4  0012               	return		;funcret
 20882  01A2A6                     __end_of_ctoa:
 20883                           	opt callstack 0
 20884                           
 20885 ;; *************** function _pad *****************
 20886 ;; Defined at:
 20887 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20888 ;; Parameters:    Size  Location     Type
 20889 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20890 ;;		 -> f(6), NULL(0), 
 20891 ;;  buf             2  [STACK] PTR unsigned char 
 20892 ;;		 -> dbuf(80), 
 20893 ;;  p               2  [STACK] int 
 20894 ;; Auto vars:     Size  Location     Type
 20895 ;;  w               2  [STACK] int 
 20896 ;;  i               2  [STACK] int 
 20897 ;; Return value:  Size  Location     Type
 20898 ;;                  2  [STACK] int 
 20899 ;; Registers used:
 20900 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20901 ;; Tracked objects:
 20902 ;;		On entry : 0/3
 20903 ;;		On exit  : 0/0
 20904 ;;		Unchanged: 0/0
 20905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20910 ;;Total ram usage:        0 bytes
 20911 ;; Hardware stack levels used:    1
 20912 ;; Hardware stack levels required when called:   19
 20913 ;; This function calls:
 20914 ;;		_fputc
 20915 ;;		_fputs
 20916 ;;		_strlen
 20917 ;; This function is called by:
 20918 ;;		_ctoa
 20919 ;;		_dtoa
 20920 ;;		_efgtoa
 20921 ;;		_utoa
 20922 ;;		_xtoa
 20923 ;; This function uses a reentrant model
 20924 ;;
 20925                           
 20926                           	psect	text71
 20927  0190DE                     __ptext71:
 20928                           	opt callstack 0
 20929  0190DE                     _pad:
 20930                           	opt callstack 0
 20931                           
 20932                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20933  0190DE  52E6               	movf	postinc1,f,c
 20934  0190E0  52E6               	movf	postinc1,f,c
 20935  0190E2  52E6               	movf	postinc1,f,c
 20936  0190E4  52E6               	movf	postinc1,f,c
 20937                           
 20938                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20939                           
 20940                           ;incstack = 0
 20941 ;; hardware stack exceeded
 20942  0190E6  A04C               	btfss	_flags^0,0,c
 20943  0190E8  D010               	goto	l11420
 20944                           
 20945                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20946                           ;stkvar	_fp @ sp[(-4)+-2]
 20947  0190EA  0EFA               	movlw	-6
 20948  0190EC  006F FF8F FFE6     	movff	plusw1,postinc1
 20949  0190F2  006F FF8F FFE6     	movff	plusw1,postinc1
 20950                           
 20951                           ;stkvar	_buf @ sp[(-6)+-4]
 20952  0190F8  0EF6               	movlw	-10
 20953  0190FA  006F FF8F FFE6     	movff	plusw1,postinc1
 20954  019100  006F FF8F FFE6     	movff	plusw1,postinc1
 20955  019106  EC9F  F0CF         	call	_fputs	;wreg free
 20956  01910A                     l11420:
 20957                           
 20958                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20959                           ;stkvar	_p @ sp[(-4)+-6]
 20960  01910A  0EF7               	movlw	-9
 20961  01910C  BEE3               	btfsc	plusw1,7,c
 20962  01910E  D011               	goto	l11424
 20963                           
 20964                           ;stkvar	_p @ sp[(-4)+-6]
 20965                           ;stkvar	_w @ sp[(-4)+0]
 20966  019110  0EF6               	movlw	-10
 20967  019112  006F FF8C  F028    	movff	plusw1,btemp
 20968  019118  0EFC               	movlw	-4
 20969  01911A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20970  019120  0EF7               	movlw	-9
 20971  019122  006F FF8C  F028    	movff	plusw1,btemp
 20972  019128  0EFD               	movlw	-3
 20973  01912A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20974  019130  D004               	goto	l2106
 20975  019132                     l11424:
 20976                           
 20977                           ;stkvar	_w @ sp[(-4)+0]
 20978  019132  0EFC               	movlw	-4
 20979  019134  6AE3               	clrf	plusw1,c
 20980  019136  0EFD               	movlw	-3
 20981  019138  6AE3               	clrf	plusw1,c
 20982  01913A                     l2106:
 20983                           
 20984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20985                           ;stkvar	_i @ sp[(-4)+2]
 20986  01913A  0EFE               	movlw	-2
 20987  01913C  6AE3               	clrf	plusw1,c
 20988  01913E  0EFF               	movlw	-1
 20989  019140  6AE3               	clrf	plusw1,c
 20990                           
 20991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20992  019142  D01E               	goto	l11430
 20993  019144                     l11426:
 20994                           
 20995                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20996                           ;stkvar	_fp @ sp[(-4)+-2]
 20997  019144  0EFA               	movlw	-6
 20998  019146  006F FF8F FFE6     	movff	plusw1,postinc1
 20999  01914C  006F FF8F FFE6     	movff	plusw1,postinc1
 21000  019152  0E20               	movlw	32
 21001  019154  6EE6               	movwf	postinc1,c
 21002  019156  0E00               	movlw	0
 21003  019158  6EE6               	movwf	postinc1,c
 21004  01915A  EC51  F0C7         	call	_fputc	;wreg free
 21005                           
 21006                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 21007                           ;stkvar	_i @ sp[(-4)+2]
 21008  01915E  0EFE               	movlw	-2
 21009  019160  50E3               	movf	plusw1,w,c
 21010  019162  0F01               	addlw	1
 21011  019164  6E28               	movwf	btemp^0,c
 21012  019166  0EFE               	movlw	-2
 21013  019168  0060  F0A3  FFE3   	movff	btemp,plusw1
 21014  01916E  6A28               	clrf	btemp^0,c
 21015  019170  0EFF               	movlw	-1
 21016  019172  50E3               	movf	plusw1,w,c
 21017  019174  2028               	addwfc	btemp^0,w,c
 21018  019176  6E28               	movwf	btemp^0,c
 21019  019178  0EFF               	movlw	-1
 21020  01917A  0060  F0A3  FFE3   	movff	btemp,plusw1
 21021  019180                     l11430:
 21022                           
 21023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21024                           ;stkvar	_w @ sp[(-4)+0]
 21025                           ;stkvar	_i @ sp[(-4)+2]
 21026  019180  50E1               	movf	fsr1l,w,c
 21027  019182  0FFE               	addlw	-2
 21028  019184  6ED9               	movwf	fsr2l,c
 21029  019186  50E2               	movf	fsr1h,w,c
 21030  019188  6EDA               	movwf	fsr2h,c
 21031  01918A  0EFF               	movlw	255
 21032  01918C  22DA               	addwfc	fsr2h,f,c
 21033  01918E  0EFC               	movlw	-4
 21034  019190  50E3               	movf	plusw1,w,c
 21035  019192  5CDE               	subwf	postinc2,w,c
 21036  019194  50DE               	movf	postinc2,w,c
 21037  019196  0A80               	xorlw	128
 21038  019198  6E28               	movwf	btemp^0,c
 21039  01919A  0EFD               	movlw	-3
 21040  01919C  50E3               	movf	plusw1,w,c
 21041  01919E  0A80               	xorlw	128
 21042  0191A0  5828               	subwfb	btemp^0,w,c
 21043  0191A2  A0D8               	btfss	status,0,c
 21044  0191A4  D7CF               	goto	l11426
 21045                           
 21046                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21047  0191A6  B04C               	btfsc	_flags^0,0,c
 21048  0191A8  D010               	goto	l11434
 21049                           
 21050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21051                           ;stkvar	_fp @ sp[(-4)+-2]
 21052  0191AA  0EFA               	movlw	-6
 21053  0191AC  006F FF8F FFE6     	movff	plusw1,postinc1
 21054  0191B2  006F FF8F FFE6     	movff	plusw1,postinc1
 21055                           
 21056                           ;stkvar	_buf @ sp[(-6)+-4]
 21057  0191B8  0EF6               	movlw	-10
 21058  0191BA  006F FF8F FFE6     	movff	plusw1,postinc1
 21059  0191C0  006F FF8F FFE6     	movff	plusw1,postinc1
 21060  0191C6  EC9F  F0CF         	call	_fputs	;wreg free
 21061  0191CA                     l11434:
 21062                           
 21063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21064                           ;stkvar	_w @ sp[(-4)+0]
 21065                           ;stkvar	_buf @ sp[(-4)+-4]
 21066  0191CA  0EF8               	movlw	-8
 21067  0191CC  006F FF8F FFE6     	movff	plusw1,postinc1
 21068  0191D2  006F FF8F FFE6     	movff	plusw1,postinc1
 21069  0191D8  EC4E  F0CF         	call	_strlen	;wreg free
 21070  0191DC  0EFC               	movlw	-4
 21071  0191DE  50E3               	movf	plusw1,w,c
 21072  0191E0  2628               	addwf	btemp^0,f,c
 21073  0191E2  0EFD               	movlw	-3
 21074  0191E4  50E3               	movf	plusw1,w,c
 21075  0191E6  2229               	addwfc	(btemp+1)^0,f,c
 21076                           
 21077                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21078  0191E8  0EF6               	movlw	246
 21079  0191EA  26E1               	addwf	fsr1l,f,c
 21080  0191EC  0EFF               	movlw	255
 21081  0191EE  22E2               	addwfc	fsr1h,f,c
 21082  0191F0  0012               	return		;funcret
 21083  0191F2                     __end_of_pad:
 21084                           	opt callstack 0
 21085                           
 21086 ;; *************** function _strlen *****************
 21087 ;; Defined at:
 21088 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21089 ;; Parameters:    Size  Location     Type
 21090 ;;  s               2  [STACK] PTR const unsigned char 
 21091 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21092 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21093 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21094 ;;		 -> V(190), 
 21095 ;; Auto vars:     Size  Location     Type
 21096 ;;  a               2  [STACK] PTR const unsigned char 
 21097 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21098 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21099 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21100 ;;		 -> V(190), 
 21101 ;; Return value:  Size  Location     Type
 21102 ;;                  2  [STACK] unsigned int 
 21103 ;; Registers used:
 21104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21105 ;; Tracked objects:
 21106 ;;		On entry : 0/0
 21107 ;;		On exit  : 0/0
 21108 ;;		Unchanged: 0/0
 21109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21114 ;;Total ram usage:        0 bytes
 21115 ;; Hardware stack levels used:    1
 21116 ;; Hardware stack levels required when called:   15
 21117 ;; This function calls:
 21118 ;;		Nothing
 21119 ;; This function is called by:
 21120 ;;		_eaDogM_WriteString
 21121 ;;		_spinners
 21122 ;;		_calc_bsoc
 21123 ;;		_pad
 21124 ;;		_stoa
 21125 ;; This function uses a reentrant model
 21126 ;;
 21127                           
 21128                           	psect	text72
 21129  019E9C                     __ptext72:
 21130                           	opt callstack 0
 21131  019E9C                     _strlen:
 21132                           	opt callstack 0
 21133                           
 21134                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21135  019E9C  52E6               	movf	postinc1,f,c
 21136  019E9E  52E6               	movf	postinc1,f,c
 21137                           
 21138                           ;stkvar	_s @ sp[(-2)+-2]
 21139                           
 21140                           ;incstack = 0
 21141 ;; hardware stack exceeded
 21142  019EA0  0EFC               	movlw	-4
 21143  019EA2  006F FF8C  F032    	movff	plusw1,btemp+10
 21144  019EA8  0EFD               	movlw	-3
 21145  019EAA  006F FF8C  F033    	movff	plusw1,btemp+11
 21146                           
 21147                           ;stkvar	_a @ sp[(-2)+0]
 21148  019EB0  0EFF               	movlw	-1
 21149  019EB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21150  019EB8  0EFE               	movlw	-2
 21151  019EBA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21152  019EC0  D011               	goto	l7476
 21153  019EC2                     l7474:
 21154                           
 21155                           ;stkvar	_s @ sp[(-2)+-2]
 21156  019EC2  0EFC               	movlw	-4
 21157  019EC4  50E3               	movf	plusw1,w,c
 21158  019EC6  0F01               	addlw	1
 21159  019EC8  6E28               	movwf	btemp^0,c
 21160  019ECA  0EFC               	movlw	-4
 21161  019ECC  0060  F0A3  FFE3   	movff	btemp,plusw1
 21162  019ED2  6A28               	clrf	btemp^0,c
 21163  019ED4  0EFD               	movlw	-3
 21164  019ED6  50E3               	movf	plusw1,w,c
 21165  019ED8  2028               	addwfc	btemp^0,w,c
 21166  019EDA  6E28               	movwf	btemp^0,c
 21167  019EDC  0EFD               	movlw	-3
 21168  019EDE  0060  F0A3  FFE3   	movff	btemp,plusw1
 21169  019EE4                     l7476:
 21170                           
 21171                           ;stkvar	_s @ sp[(-2)+-2]
 21172  019EE4  0EFC               	movlw	-4
 21173  019EE6  006F FF8F FFF6     	movff	plusw1,tblptrl
 21174  019EEC  0EFD               	movlw	-3
 21175  019EEE  006F FF8F FFF7     	movff	plusw1,tblptrh
 21176  019EF4  0E00               	movlw	low (__mediumconst shr (0+16))
 21177  019EF6  6EF8               	movwf	tblptru,c
 21178  019EF8  0E1F               	movlw	(high __ramtop+-1)
 21179  019EFA  64F7               	cpfsgt	tblptrh,c
 21180  019EFC  D003               	bra	u5207
 21181  019EFE  0008               	tblrd		*
 21182  019F00  50F5               	movf	tablat,w,c
 21183  019F02  D007               	bra	u5200
 21184  019F04                     u5207:
 21185  019F04  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21186  019F0A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21187  019F10  50EF               	movf	indf0,w,c
 21188  019F12                     u5200:
 21189  019F12  0900               	iorlw	0
 21190  019F14  A4D8               	btfss	status,2,c
 21191  019F16  D7D5               	goto	l7474
 21192                           
 21193                           ;stkvar	_a @ sp[(-2)+0]
 21194                           ;stkvar	_s @ sp[(-2)+-2]
 21195  019F18  0EFC               	movlw	-4
 21196  019F1A  006F FF8C  F028    	movff	plusw1,btemp
 21197  019F20  0EFD               	movlw	-3
 21198  019F22  006F FF8C  F029    	movff	plusw1,btemp+1
 21199  019F28  0EFE               	movlw	-2
 21200  019F2A  50E3               	movf	plusw1,w,c
 21201  019F2C  5E28               	subwf	btemp^0,f,c
 21202  019F2E  0EFF               	movlw	-1
 21203  019F30  50E3               	movf	plusw1,w,c
 21204  019F32  5A29               	subwfb	(btemp+1)^0,f,c
 21205                           
 21206                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21207  019F34  52E5               	movf	postdec1,f,c
 21208  019F36  52E5               	movf	postdec1,f,c
 21209  019F38  52E5               	movf	postdec1,f,c
 21210  019F3A  52E5               	movf	postdec1,f,c
 21211  019F3C  0012               	return		;funcret
 21212  019F3E                     __end_of_strlen:
 21213                           	opt callstack 0
 21214                           
 21215 ;; *************** function _fputs *****************
 21216 ;; Defined at:
 21217 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21218 ;; Parameters:    Size  Location     Type
 21219 ;;  s               2  [STACK] PTR const unsigned char 
 21220 ;;		 -> dbuf(80), 
 21221 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21222 ;;		 -> f(6), NULL(0), 
 21223 ;; Auto vars:     Size  Location     Type
 21224 ;;  i               2  [STACK] int 
 21225 ;;  c               1  [STACK] unsigned char 
 21226 ;; Return value:  Size  Location     Type
 21227 ;;                  2  [STACK] int 
 21228 ;; Registers used:
 21229 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21230 ;; Tracked objects:
 21231 ;;		On entry : 0/3
 21232 ;;		On exit  : 0/0
 21233 ;;		Unchanged: 0/0
 21234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21239 ;;Total ram usage:        0 bytes
 21240 ;; Hardware stack levels used:    1
 21241 ;; Hardware stack levels required when called:   18
 21242 ;; This function calls:
 21243 ;;		_fputc
 21244 ;; This function is called by:
 21245 ;;		_pad
 21246 ;; This function uses a reentrant model
 21247 ;;
 21248                           
 21249                           	psect	text73
 21250  019F3E                     __ptext73:
 21251                           	opt callstack 0
 21252  019F3E                     _fputs:
 21253                           	opt callstack 0
 21254                           
 21255                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21256  019F3E  52E6               	movf	postinc1,f,c
 21257  019F40  52E6               	movf	postinc1,f,c
 21258  019F42  52E6               	movf	postinc1,f,c
 21259                           
 21260                           ;stkvar	_i @ sp[(-3)+0]
 21261                           
 21262                           ;incstack = 0
 21263 ;; hardware stack exceeded
 21264  019F44  0EFD               	movlw	-3
 21265  019F46  6AE3               	clrf	plusw1,c
 21266  019F48  0EFE               	movlw	-2
 21267  019F4A  6AE3               	clrf	plusw1,c
 21268  019F4C  D01F               	goto	l11414
 21269  019F4E                     l11410:
 21270                           
 21271                           ;stkvar	_fp @ sp[(-3)+-4]
 21272  019F4E  0EF9               	movlw	-7
 21273  019F50  006F FF8F FFE6     	movff	plusw1,postinc1
 21274  019F56  006F FF8F FFE6     	movff	plusw1,postinc1
 21275                           
 21276                           ;stkvar	_c @ sp[(-5)+2]
 21277  019F5C  0EFD               	movlw	-3
 21278  019F5E  50E3               	movf	plusw1,w,c
 21279  019F60  6EE6               	movwf	postinc1,c
 21280  019F62  0E00               	movlw	0
 21281  019F64  6EE6               	movwf	postinc1,c
 21282  019F66  EC51  F0C7         	call	_fputc	;wreg free
 21283                           
 21284                           ;stkvar	_i @ sp[(-3)+0]
 21285  019F6A  0EFD               	movlw	-3
 21286  019F6C  50E3               	movf	plusw1,w,c
 21287  019F6E  0F01               	addlw	1
 21288  019F70  6E28               	movwf	btemp^0,c
 21289  019F72  0EFD               	movlw	-3
 21290  019F74  0060  F0A3  FFE3   	movff	btemp,plusw1
 21291  019F7A  6A28               	clrf	btemp^0,c
 21292  019F7C  0EFE               	movlw	-2
 21293  019F7E  50E3               	movf	plusw1,w,c
 21294  019F80  2028               	addwfc	btemp^0,w,c
 21295  019F82  6E28               	movwf	btemp^0,c
 21296  019F84  0EFE               	movlw	-2
 21297  019F86  0060  F0A3  FFE3   	movff	btemp,plusw1
 21298  019F8C                     l11414:
 21299                           
 21300                           ;stkvar	_i @ sp[(-3)+0]
 21301  019F8C  0EFD               	movlw	-3
 21302  019F8E  006F FF8C  F032    	movff	plusw1,btemp+10
 21303  019F94  0EFE               	movlw	-2
 21304  019F96  006F FF8C  F033    	movff	plusw1,btemp+11
 21305                           
 21306                           ;stkvar	_s @ sp[(-3)+-2]
 21307  019F9C  0EFB               	movlw	-5
 21308  019F9E  006F FF8C  F030    	movff	plusw1,btemp+8
 21309  019FA4  0EFC               	movlw	-4
 21310  019FA6  006F FF8C  F031    	movff	plusw1,btemp+9
 21311  019FAC  5032               	movf	(btemp+10)^0,w,c
 21312  019FAE  2430               	addwf	(btemp+8)^0,w,c
 21313  019FB0  6ED9               	movwf	fsr2l,c
 21314  019FB2  5033               	movf	(btemp+11)^0,w,c
 21315  019FB4  2031               	addwfc	(btemp+9)^0,w,c
 21316  019FB6  6EDA               	movwf	fsr2h,c
 21317  019FB8  50DF               	movf	indf2,w,c
 21318  019FBA  6E33               	movwf	(btemp+11)^0,c
 21319                           
 21320                           ;stkvar	_c @ sp[(-3)+2]
 21321  019FBC  0EFF               	movlw	-1
 21322  019FBE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21323  019FC4  0EFF               	movlw	-1
 21324  019FC6  50E3               	movf	plusw1,w,c
 21325  019FC8  A4D8               	btfss	status,2,c
 21326  019FCA  D7C1               	goto	l11410
 21327                           
 21328                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21329  019FCC  0EF9               	movlw	249
 21330  019FCE  26E1               	addwf	fsr1l,f,c
 21331  019FD0  0EFF               	movlw	255
 21332  019FD2  22E2               	addwfc	fsr1h,f,c
 21333  019FD4  0012               	return		;funcret
 21334  019FD6                     __end_of_fputs:
 21335                           	opt callstack 0
 21336                           
 21337 ;; *************** function _fputc *****************
 21338 ;; Defined at:
 21339 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21340 ;; Parameters:    Size  Location     Type
 21341 ;;  c               2  [STACK] int 
 21342 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21343 ;;		 -> f(6), NULL(0), 
 21344 ;; Auto vars:     Size  Location     Type
 21345 ;;		None
 21346 ;; Return value:  Size  Location     Type
 21347 ;;                  2  [STACK] int 
 21348 ;; Registers used:
 21349 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21350 ;; Tracked objects:
 21351 ;;		On entry : 0/0
 21352 ;;		On exit  : 0/0
 21353 ;;		Unchanged: 0/0
 21354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21359 ;;Total ram usage:        0 bytes
 21360 ;; Hardware stack levels used:    1
 21361 ;; Hardware stack levels required when called:   17
 21362 ;; This function calls:
 21363 ;;		_putch
 21364 ;; This function is called by:
 21365 ;;		_pad
 21366 ;;		_stoa
 21367 ;;		_vfpfcnvrt
 21368 ;;		_fputs
 21369 ;; This function uses a reentrant model
 21370 ;;
 21371                           
 21372                           	psect	text74
 21373  018EA2                     __ptext74:
 21374                           	opt callstack 0
 21375  018EA2                     _fputc:
 21376                           	opt callstack 0
 21377                           
 21378                           ;stkvar	_fp @ sp[(0)+-4]
 21379                           
 21380                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21381                           ;incstack = 0
 21382 ;; hardware stack exceeded
 21383  018EA2  0EFC               	movlw	-4
 21384  018EA4  006F FF8C  F028    	movff	plusw1,btemp
 21385  018EAA  0EFD               	movlw	-3
 21386  018EAC  50E3               	movf	plusw1,w,c
 21387  018EAE  1028               	iorwf	btemp^0,w,c
 21388  018EB0  B4D8               	btfsc	status,2,c
 21389  018EB2  D009               	goto	u10310
 21390                           
 21391                           ;stkvar	_fp @ sp[(0)+-4]
 21392  018EB4  0EFC               	movlw	-4
 21393  018EB6  006F FF8C  F028    	movff	plusw1,btemp
 21394  018EBC  0EFD               	movlw	-3
 21395  018EBE  50E3               	movf	plusw1,w,c
 21396  018EC0  1028               	iorwf	btemp^0,w,c
 21397  018EC2  A4D8               	btfss	status,2,c
 21398  018EC4  D006               	goto	l11398
 21399  018EC6                     u10310:
 21400                           
 21401                           ;stkvar	_c @ sp[(0)+-2]
 21402  018EC6  0EFE               	movlw	-2
 21403  018EC8  50E3               	movf	plusw1,w,c
 21404  018ECA  6EE6               	movwf	postinc1,c
 21405  018ECC  ECB0  F0DA         	call	_putch	;wreg free
 21406  018ED0  D075               	goto	l3152
 21407  018ED2                     l11398:
 21408                           
 21409                           ;stkvar	_fp @ sp[(0)+-4]
 21410  018ED2  0EFC               	movlw	-4
 21411  018ED4  006F FF8C  F032    	movff	plusw1,btemp+10
 21412  018EDA  0EFD               	movlw	-3
 21413  018EDC  006F FF8C  F033    	movff	plusw1,btemp+11
 21414  018EE2  0E04               	movlw	4
 21415  018EE4  2432               	addwf	(btemp+10)^0,w,c
 21416  018EE6  6ED9               	movwf	fsr2l,c
 21417  018EE8  0E00               	movlw	0
 21418  018EEA  2033               	addwfc	(btemp+11)^0,w,c
 21419  018EEC  6EDA               	movwf	fsr2h,c
 21420  018EEE  50DE               	movf	postinc2,w,c
 21421  018EF0  10DE               	iorwf	postinc2,w,c
 21422  018EF2  B4D8               	btfsc	status,2,c
 21423  018EF4  D026               	goto	u10330
 21424                           
 21425                           ;stkvar	_fp @ sp[(0)+-4]
 21426  018EF6  0EFC               	movlw	-4
 21427  018EF8  006F FF8C  F032    	movff	plusw1,btemp+10
 21428  018EFE  0EFD               	movlw	-3
 21429  018F00  006F FF8C  F033    	movff	plusw1,btemp+11
 21430  018F06  0E04               	movlw	4
 21431  018F08  2432               	addwf	(btemp+10)^0,w,c
 21432  018F0A  6ED9               	movwf	fsr2l,c
 21433  018F0C  0E00               	movlw	0
 21434  018F0E  2033               	addwfc	(btemp+11)^0,w,c
 21435  018F10  6EDA               	movwf	fsr2h,c
 21436                           
 21437                           ;stkvar	_fp @ sp[(0)+-4]
 21438  018F12  0EFC               	movlw	-4
 21439  018F14  006F FF8C  F032    	movff	plusw1,btemp+10
 21440  018F1A  0EFD               	movlw	-3
 21441  018F1C  006F FF8C  F033    	movff	plusw1,btemp+11
 21442  018F22  0E02               	movlw	2
 21443  018F24  2432               	addwf	(btemp+10)^0,w,c
 21444  018F26  6EE9               	movwf	fsr0l,c
 21445  018F28  0E00               	movlw	0
 21446  018F2A  2033               	addwfc	(btemp+11)^0,w,c
 21447  018F2C  6EEA               	movwf	fsr0h,c
 21448  018F2E  50DE               	movf	postinc2,w,c
 21449  018F30  5CEE               	subwf	postinc0,w,c
 21450  018F32  50EE               	movf	postinc0,w,c
 21451  018F34  0A80               	xorlw	128
 21452  018F36  6E28               	movwf	btemp^0,c
 21453  018F38  50DE               	movf	postinc2,w,c
 21454  018F3A  0A80               	xorlw	128
 21455  018F3C  5828               	subwfb	btemp^0,w,c
 21456  018F3E  B0D8               	btfsc	status,0,c
 21457  018F40  D03D               	goto	l3152
 21458  018F42                     u10330:
 21459                           
 21460                           ;stkvar	_c @ sp[(0)+-2]
 21461                           ;stkvar	_fp @ sp[(0)+-4]
 21462  018F42  0EFC               	movlw	-4
 21463  018F44  006F FF8C  F032    	movff	plusw1,btemp+10
 21464  018F4A  0EFD               	movlw	-3
 21465  018F4C  006F FF8C  F033    	movff	plusw1,btemp+11
 21466  018F52  0E02               	movlw	2
 21467  018F54  2432               	addwf	(btemp+10)^0,w,c
 21468  018F56  6ED9               	movwf	fsr2l,c
 21469  018F58  0E00               	movlw	0
 21470  018F5A  2033               	addwfc	(btemp+11)^0,w,c
 21471  018F5C  6EDA               	movwf	fsr2h,c
 21472  018F5E  006F FF78  F032    	movff	postinc2,btemp+10
 21473  018F64  006F FF74  F033    	movff	postdec2,btemp+11
 21474                           
 21475                           ;stkvar	_fp @ sp[(0)+-4]
 21476  018F6A  0EFC               	movlw	-4
 21477  018F6C  006F FF8F FFD9     	movff	plusw1,fsr2l
 21478  018F72  0EFD               	movlw	-3
 21479  018F74  006F FF8F FFDA     	movff	plusw1,fsr2h
 21480  018F7A  006F FF78  F030    	movff	postinc2,btemp+8
 21481  018F80  006F FF74  F031    	movff	postdec2,btemp+9
 21482  018F86  5032               	movf	(btemp+10)^0,w,c
 21483  018F88  2430               	addwf	(btemp+8)^0,w,c
 21484  018F8A  6ED9               	movwf	fsr2l,c
 21485  018F8C  5033               	movf	(btemp+11)^0,w,c
 21486  018F8E  2031               	addwfc	(btemp+9)^0,w,c
 21487  018F90  6EDA               	movwf	fsr2h,c
 21488  018F92  0EFE               	movlw	-2
 21489  018F94  006F FF8F FFDF     	movff	plusw1,indf2
 21490                           
 21491                           ;stkvar	_fp @ sp[(0)+-4]
 21492  018F9A  0EFC               	movlw	-4
 21493  018F9C  006F FF8C  F032    	movff	plusw1,btemp+10
 21494  018FA2  0EFD               	movlw	-3
 21495  018FA4  006F FF8C  F033    	movff	plusw1,btemp+11
 21496  018FAA  0E02               	movlw	2
 21497  018FAC  2432               	addwf	(btemp+10)^0,w,c
 21498  018FAE  6ED9               	movwf	fsr2l,c
 21499  018FB0  0E00               	movlw	0
 21500  018FB2  2033               	addwfc	(btemp+11)^0,w,c
 21501  018FB4  6EDA               	movwf	fsr2h,c
 21502  018FB6  2ADE               	incf	postinc2,f,c
 21503  018FB8  0E00               	movlw	0
 21504  018FBA  22DD               	addwfc	postdec2,f,c
 21505  018FBC                     l3152:
 21506                           
 21507                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21508  018FBC  52E5               	movf	postdec1,f,c
 21509  018FBE  52E5               	movf	postdec1,f,c
 21510  018FC0  52E5               	movf	postdec1,f,c
 21511  018FC2  52E5               	movf	postdec1,f,c
 21512  018FC4  0012               	return		;funcret
 21513  018FC6                     __end_of_fputc:
 21514                           	opt callstack 0
 21515                           
 21516 ;; *************** function _putch *****************
 21517 ;; Defined at:
 21518 ;;		line 170 in file "eadog.c"
 21519 ;; Parameters:    Size  Location     Type
 21520 ;;  c               1  [STACK] unsigned char 
 21521 ;; Auto vars:     Size  Location     Type
 21522 ;;		None
 21523 ;; Return value:  Size  Location     Type
 21524 ;;                  1  [STACK] void 
 21525 ;; Registers used:
 21526 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21527 ;; Tracked objects:
 21528 ;;		On entry : 0/0
 21529 ;;		On exit  : 0/0
 21530 ;;		Unchanged: 0/0
 21531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21536 ;;Total ram usage:        0 bytes
 21537 ;; Hardware stack levels used:    1
 21538 ;; Hardware stack levels required when called:   16
 21539 ;; This function calls:
 21540 ;;		_ringBufS_put_dma
 21541 ;; This function is called by:
 21542 ;;		_fputc
 21543 ;; This function uses a reentrant model
 21544 ;;
 21545                           
 21546                           	psect	text75
 21547  01B560                     __ptext75:
 21548                           	opt callstack 0
 21549  01B560                     _putch:
 21550                           	opt callstack 0
 21551                           
 21552                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21553                           ;stkvar	_c @ sp[(0)+-1]
 21554                           
 21555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21556                           ;incstack = 0
 21557 ;; hardware stack exceeded
 21558  01B560  0EFF               	movlw	-1
 21559  01B562  50E3               	movf	plusw1,w,c
 21560  01B564  6EE6               	movwf	postinc1,c
 21561  01B566  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21562  01B56C  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21563  01B572  ECA6  F0CE         	call	_ringBufS_put_dma	;wreg free
 21564                           
 21565                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21566  01B576  52E5               	movf	postdec1,f,c
 21567  01B578  0012               	return		;funcret
 21568  01B57A                     __end_of_putch:
 21569                           	opt callstack 0
 21570                           
 21571 ;; *************** function _ringBufS_put_dma *****************
 21572 ;; Defined at:
 21573 ;;		line 67 in file "ringbufs.c"
 21574 ;; Parameters:    Size  Location     Type
 21575 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21576 ;;		 -> ring_buf1(67), 
 21577 ;;  c               1  [STACK] const unsigned char 
 21578 ;; Auto vars:     Size  Location     Type
 21579 ;;		None
 21580 ;; Return value:  Size  Location     Type
 21581 ;;                  1  [STACK] void 
 21582 ;; Registers used:
 21583 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21584 ;; Tracked objects:
 21585 ;;		On entry : 0/0
 21586 ;;		On exit  : 0/0
 21587 ;;		Unchanged: 0/0
 21588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21593 ;;Total ram usage:        0 bytes
 21594 ;; Hardware stack levels used:    1
 21595 ;; Hardware stack levels required when called:   15
 21596 ;; This function calls:
 21597 ;;		Nothing
 21598 ;; This function is called by:
 21599 ;;		_putch
 21600 ;; This function uses a reentrant model
 21601 ;;
 21602                           
 21603                           	psect	text76
 21604  019D4C                     __ptext76:
 21605                           	opt callstack 0
 21606  019D4C                     _ringBufS_put_dma:
 21607                           	opt callstack 0
 21608                           
 21609                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21610                           ;stkvar	__this @ sp[(0)+-2]
 21611                           
 21612                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21613                           ;incstack = 0
 21614 ;; hardware stack exceeded
 21615  019D4C  0EFE               	movlw	-2
 21616  019D4E  006F FF8C  F032    	movff	plusw1,btemp+10
 21617  019D54  0EFF               	movlw	-1
 21618  019D56  006F FF8C  F033    	movff	plusw1,btemp+11
 21619  019D5C  0E42               	movlw	66
 21620  019D5E  2432               	addwf	(btemp+10)^0,w,c
 21621  019D60  6ED9               	movwf	fsr2l,c
 21622  019D62  0E00               	movlw	0
 21623  019D64  2033               	addwfc	(btemp+11)^0,w,c
 21624  019D66  6EDA               	movwf	fsr2h,c
 21625  019D68  0E40               	movlw	64
 21626  019D6A  60DF               	cpfslt	indf2,c
 21627  019D6C  D040               	goto	l1577
 21628                           
 21629                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21630                           ;stkvar	_c @ sp[(0)+-3]
 21631                           ;stkvar	__this @ sp[(0)+-2]
 21632  019D6E  0EFE               	movlw	-2
 21633  019D70  006F FF8C  F032    	movff	plusw1,btemp+10
 21634  019D76  0EFF               	movlw	-1
 21635  019D78  006F FF8C  F033    	movff	plusw1,btemp+11
 21636  019D7E  0E40               	movlw	64
 21637  019D80  2432               	addwf	(btemp+10)^0,w,c
 21638  019D82  6ED9               	movwf	fsr2l,c
 21639  019D84  0E00               	movlw	0
 21640  019D86  2033               	addwfc	(btemp+11)^0,w,c
 21641  019D88  6EDA               	movwf	fsr2h,c
 21642  019D8A  50DF               	movf	indf2,w,c
 21643  019D8C  6E33               	movwf	(btemp+11)^0,c
 21644                           
 21645                           ;stkvar	__this @ sp[(0)+-2]
 21646  019D8E  0EFE               	movlw	-2
 21647  019D90  006F FF8C  F030    	movff	plusw1,btemp+8
 21648  019D96  0EFF               	movlw	-1
 21649  019D98  006F FF8C  F031    	movff	plusw1,btemp+9
 21650  019D9E  5033               	movf	(btemp+11)^0,w,c
 21651  019DA0  2430               	addwf	(btemp+8)^0,w,c
 21652  019DA2  6ED9               	movwf	fsr2l,c
 21653  019DA4  0E00               	movlw	0
 21654  019DA6  2031               	addwfc	(btemp+9)^0,w,c
 21655  019DA8  6EDA               	movwf	fsr2h,c
 21656  019DAA  0EFD               	movlw	-3
 21657  019DAC  006F FF8F FFDF     	movff	plusw1,indf2
 21658                           
 21659                           ;ringbufs.c: 71:   ++_this->head;
 21660                           ;stkvar	__this @ sp[(0)+-2]
 21661  019DB2  0EFE               	movlw	-2
 21662  019DB4  006F FF8C  F032    	movff	plusw1,btemp+10
 21663  019DBA  0EFF               	movlw	-1
 21664  019DBC  006F FF8C  F033    	movff	plusw1,btemp+11
 21665  019DC2  0E40               	movlw	64
 21666  019DC4  2432               	addwf	(btemp+10)^0,w,c
 21667  019DC6  6ED9               	movwf	fsr2l,c
 21668  019DC8  0E00               	movlw	0
 21669  019DCA  2033               	addwfc	(btemp+11)^0,w,c
 21670  019DCC  6EDA               	movwf	fsr2h,c
 21671  019DCE  2ADF               	incf	indf2,f,c
 21672                           
 21673                           ;ringbufs.c: 72:   ++_this->count;
 21674                           ;stkvar	__this @ sp[(0)+-2]
 21675  019DD0  0EFE               	movlw	-2
 21676  019DD2  006F FF8C  F032    	movff	plusw1,btemp+10
 21677  019DD8  0EFF               	movlw	-1
 21678  019DDA  006F FF8C  F033    	movff	plusw1,btemp+11
 21679  019DE0  0E42               	movlw	66
 21680  019DE2  2432               	addwf	(btemp+10)^0,w,c
 21681  019DE4  6ED9               	movwf	fsr2l,c
 21682  019DE6  0E00               	movlw	0
 21683  019DE8  2033               	addwfc	(btemp+11)^0,w,c
 21684  019DEA  6EDA               	movwf	fsr2h,c
 21685  019DEC  2ADF               	incf	indf2,f,c
 21686  019DEE                     l1577:
 21687                           
 21688                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21689  019DEE  52E5               	movf	postdec1,f,c
 21690  019DF0  52E5               	movf	postdec1,f,c
 21691  019DF2  52E5               	movf	postdec1,f,c
 21692  019DF4  0012               	return		;funcret
 21693  019DF6                     __end_of_ringBufS_put_dma:
 21694                           	opt callstack 0
 21695                           
 21696 ;; *************** function _atoi *****************
 21697 ;; Defined at:
 21698 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21699 ;; Parameters:    Size  Location     Type
 21700 ;;  s               2  [STACK] PTR const unsigned char 
 21701 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 21702 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21703 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21704 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21705 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21706 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21707 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21708 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21709 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21710 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 21711 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 21712 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21713 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21714 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21715 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21716 ;;		 -> STR_1(17), 
 21717 ;; Auto vars:     Size  Location     Type
 21718 ;;  n               2  [STACK] int 
 21719 ;;  neg             2  [STACK] int 
 21720 ;; Return value:  Size  Location     Type
 21721 ;;                  2  [STACK] int 
 21722 ;; Registers used:
 21723 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21724 ;; Tracked objects:
 21725 ;;		On entry : 0/0
 21726 ;;		On exit  : 0/0
 21727 ;;		Unchanged: 0/0
 21728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21733 ;;Total ram usage:        0 bytes
 21734 ;; Hardware stack levels used:    1
 21735 ;; Hardware stack levels required when called:   16
 21736 ;; This function calls:
 21737 ;;		_isdigit
 21738 ;;		_isspace
 21739 ;; This function is called by:
 21740 ;;		_vfpfcnvrt
 21741 ;; This function uses a reentrant model
 21742 ;;
 21743                           
 21744                           	psect	text77
 21745  0170CE                     __ptext77:
 21746                           	opt callstack 0
 21747  0170CE                     _atoi:
 21748                           	opt callstack 0
 21749                           
 21750                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21751  0170CE  0E09               	movlw	9
 21752  0170D0  26E1               	addwf	fsr1l,f,c
 21753  0170D2  0E00               	movlw	0
 21754  0170D4  22E2               	addwfc	fsr1h,f,c
 21755                           
 21756                           ;stkvar	_n @ sp[(-9)+5]
 21757                           
 21758                           ;incstack = 0
 21759 ;; hardware stack exceeded
 21760  0170D6  0EFC               	movlw	-4
 21761  0170D8  6AE3               	clrf	plusw1,c
 21762  0170DA  0EFD               	movlw	-3
 21763  0170DC  6AE3               	clrf	plusw1,c
 21764                           
 21765                           ;stkvar	_neg @ sp[(-9)+7]
 21766  0170DE  0EFE               	movlw	-2
 21767  0170E0  6AE3               	clrf	plusw1,c
 21768  0170E2  0EFF               	movlw	-1
 21769  0170E4  6AE3               	clrf	plusw1,c
 21770  0170E6  D011               	goto	l9084
 21771  0170E8                     l9082:
 21772                           
 21773                           ;stkvar	_s @ sp[(-9)+-2]
 21774  0170E8  0EF5               	movlw	-11
 21775  0170EA  50E3               	movf	plusw1,w,c
 21776  0170EC  0F01               	addlw	1
 21777  0170EE  6E28               	movwf	btemp^0,c
 21778  0170F0  0EF5               	movlw	-11
 21779  0170F2  0060  F0A3  FFE3   	movff	btemp,plusw1
 21780  0170F8  6A28               	clrf	btemp^0,c
 21781  0170FA  0EF6               	movlw	-10
 21782  0170FC  50E3               	movf	plusw1,w,c
 21783  0170FE  2028               	addwfc	btemp^0,w,c
 21784  017100  6E28               	movwf	btemp^0,c
 21785  017102  0EF6               	movlw	-10
 21786  017104  0060  F0A3  FFE3   	movff	btemp,plusw1
 21787  01710A                     l9084:
 21788                           
 21789                           ;stkvar	_atoi$5948 @ sp[(-9)+4]
 21790  01710A  0EFB               	movlw	-5
 21791  01710C  6AE3               	clrf	plusw1,c
 21792  01710E  2AE3               	incf	plusw1,f,c
 21793                           
 21794                           ;stkvar	_s @ sp[(-9)+-2]
 21795  017110  50E1               	movf	fsr1l,w,c
 21796  017112  0FF5               	addlw	-11
 21797  017114  6ED9               	movwf	fsr2l,c
 21798  017116  50E2               	movf	fsr1h,w,c
 21799  017118  6EDA               	movwf	fsr2h,c
 21800  01711A  0EFF               	movlw	255
 21801  01711C  22DA               	addwfc	fsr2h,f,c
 21802  01711E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21803  017124  006F FF77 FFF7     	movff	postdec2,tblptrh
 21804  01712A                     	if	0	;tblptru may be non-zero
 21805  01712A                     	endif
 21806  01712A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21807  01712A  0E00               	movlw	low (__mediumconst shr (0+16))
 21808  01712C  6EF8               	movwf	tblptru,c
 21809  01712E                     	endif
 21810  01712E  0008               	tblrd		*
 21811  017130  50F5               	movf	tablat,w,c
 21812  017132  0A20               	xorlw	32
 21813  017134  B4D8               	btfsc	status,2,c
 21814  017136  D023               	goto	l9092
 21815  017138  0EF7               	movlw	247
 21816  01713A  6E32               	movwf	(btemp+10)^0,c
 21817  01713C  0EFF               	movlw	255
 21818  01713E  6E33               	movwf	(btemp+11)^0,c
 21819                           
 21820                           ;stkvar	_s @ sp[(-9)+-2]
 21821  017140  50E1               	movf	fsr1l,w,c
 21822  017142  0FF5               	addlw	-11
 21823  017144  6ED9               	movwf	fsr2l,c
 21824  017146  50E2               	movf	fsr1h,w,c
 21825  017148  6EDA               	movwf	fsr2h,c
 21826  01714A  0EFF               	movlw	255
 21827  01714C  22DA               	addwfc	fsr2h,f,c
 21828  01714E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21829  017154  006F FF77 FFF7     	movff	postdec2,tblptrh
 21830  01715A                     	if	0	;tblptru may be non-zero
 21831  01715A                     	endif
 21832  01715A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21833  01715A  0E00               	movlw	low (__mediumconst shr (0+16))
 21834  01715C  6EF8               	movwf	tblptru,c
 21835  01715E                     	endif
 21836  01715E  0008               	tblrd		*
 21837  017160  50F5               	movf	tablat,w,c
 21838  017162  6E30               	movwf	(btemp+8)^0,c
 21839  017164  6A31               	clrf	(btemp+9)^0,c
 21840  017166  5032               	movf	(btemp+10)^0,w,c
 21841  017168  2630               	addwf	(btemp+8)^0,f,c
 21842  01716A  5033               	movf	(btemp+11)^0,w,c
 21843  01716C  2231               	addwfc	(btemp+9)^0,f,c
 21844  01716E  5031               	movf	(btemp+9)^0,w,c
 21845  017170  E104               	bnz	u8310
 21846  017172  0E05               	movlw	5
 21847  017174  5C30               	subwf	(btemp+8)^0,w,c
 21848  017176  A0D8               	btfss	status,0,c
 21849  017178  D002               	goto	l9092
 21850  01717A                     u8310:
 21851                           
 21852                           ;stkvar	_atoi$5948 @ sp[(-9)+4]
 21853  01717A  0EFB               	movlw	-5
 21854  01717C  6AE3               	clrf	plusw1,c
 21855  01717E                     l9092:
 21856                           
 21857                           ;stkvar	_atoi$5948 @ sp[(-9)+4]
 21858  01717E  0EFB               	movlw	-5
 21859  017180  50E3               	movf	plusw1,w,c
 21860  017182  6E32               	movwf	(btemp+10)^0,c
 21861  017184  6A33               	clrf	(btemp+11)^0,c
 21862                           
 21863                           ;stkvar	_atoi$5947 @ sp[(-9)+2]
 21864  017186  0EF9               	movlw	-7
 21865  017188  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21866  01718E  0EFA               	movlw	-6
 21867  017190  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21868                           
 21869                           ;stkvar	_atoi$5947 @ sp[(-9)+2]
 21870  017196  0EF9               	movlw	-7
 21871  017198  006F FF8C  F028    	movff	plusw1,btemp
 21872  01719E  0EFA               	movlw	-6
 21873  0171A0  50E3               	movf	plusw1,w,c
 21874  0171A2  1028               	iorwf	btemp^0,w,c
 21875  0171A4  B4D8               	btfsc	status,2,c
 21876  0171A6  D01F               	goto	l9102
 21877  0171A8  D79F               	goto	l9082
 21878  0171AA                     l9098:
 21879  0171AA  0E01               	movlw	1
 21880  0171AC  6E32               	movwf	(btemp+10)^0,c
 21881  0171AE  0E00               	movlw	0
 21882  0171B0  6E33               	movwf	(btemp+11)^0,c
 21883                           
 21884                           ;stkvar	_neg @ sp[(-9)+7]
 21885  0171B2  0EFE               	movlw	-2
 21886  0171B4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21887  0171BA  0EFF               	movlw	-1
 21888  0171BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21889  0171C2                     l9100:
 21890                           
 21891                           ;stkvar	_s @ sp[(-9)+-2]
 21892  0171C2  0EF5               	movlw	-11
 21893  0171C4  50E3               	movf	plusw1,w,c
 21894  0171C6  0F01               	addlw	1
 21895  0171C8  6E28               	movwf	btemp^0,c
 21896  0171CA  0EF5               	movlw	-11
 21897  0171CC  0060  F0A3  FFE3   	movff	btemp,plusw1
 21898  0171D2  6A28               	clrf	btemp^0,c
 21899  0171D4  0EF6               	movlw	-10
 21900  0171D6  50E3               	movf	plusw1,w,c
 21901  0171D8  2028               	addwfc	btemp^0,w,c
 21902  0171DA  6E28               	movwf	btemp^0,c
 21903  0171DC  0EF6               	movlw	-10
 21904  0171DE  0060  F0A3  FFE3   	movff	btemp,plusw1
 21905  0171E4  D053               	goto	l9108
 21906  0171E6                     l9102:
 21907                           
 21908                           ;stkvar	_s @ sp[(-9)+-2]
 21909  0171E6  50E1               	movf	fsr1l,w,c
 21910  0171E8  0FF5               	addlw	-11
 21911  0171EA  6ED9               	movwf	fsr2l,c
 21912  0171EC  50E2               	movf	fsr1h,w,c
 21913  0171EE  6EDA               	movwf	fsr2h,c
 21914  0171F0  0EFF               	movlw	255
 21915  0171F2  22DA               	addwfc	fsr2h,f,c
 21916  0171F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 21917  0171FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 21918  017200                     	if	0	;tblptru may be non-zero
 21919  017200                     	endif
 21920  017200                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21921  017200  0E00               	movlw	low (__mediumconst shr (0+16))
 21922  017202  6EF8               	movwf	tblptru,c
 21923  017204                     	endif
 21924  017204  0008               	tblrd		*
 21925  017206  50F5               	movf	tablat,w,c
 21926  017208  6E32               	movwf	(btemp+10)^0,c
 21927  01720A  6A33               	clrf	(btemp+11)^0,c
 21928                           
 21929                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21930                           ; Switch size 1, requested type "simple"
 21931                           ; Number of cases is 1, Range of values is 0 to 0
 21932                           ; switch strategies available:
 21933                           ; Name         Instructions Cycles
 21934                           ; simple_byte            4     3 (average)
 21935                           ;	Chosen strategy is simple_byte
 21936  01720C  5033               	movf	(btemp+11)^0,w,c
 21937  01720E  0A00               	xorlw	0	; case 0
 21938  017210  A4D8               	btfss	status,2,c
 21939  017212  D03C               	goto	l9108
 21940                           
 21941                           ; Switch size 1, requested type "simple"
 21942                           ; Number of cases is 2, Range of values is 43 to 45
 21943                           ; switch strategies available:
 21944                           ; Name         Instructions Cycles
 21945                           ; simple_byte            7     4 (average)
 21946                           ;	Chosen strategy is simple_byte
 21947  017214  5032               	movf	(btemp+10)^0,w,c
 21948  017216  0A2B               	xorlw	43	; case 43
 21949  017218  B4D8               	btfsc	status,2,c
 21950  01721A  D7D3               	goto	l9100
 21951  01721C  0A06               	xorlw	6	; case 45
 21952  01721E  B4D8               	btfsc	status,2,c
 21953  017220  D7C4               	goto	l9098
 21954  017222  D034               	goto	l9108
 21955  017224                     l9104:
 21956                           
 21957                           ;stkvar	_n @ sp[(-9)+5]
 21958  017224  0EFC               	movlw	-4
 21959  017226  006F FF8C  F032    	movff	plusw1,btemp+10
 21960  01722C  0EFD               	movlw	-3
 21961  01722E  006F FF8C  F033    	movff	plusw1,btemp+11
 21962  017234  0E0A               	movlw	10
 21963  017236  0232               	mulwf	(btemp+10)^0,c
 21964  017238  006F FFCC  F030    	movff	prodl,btemp+8
 21965  01723E  006F FFD0  F031    	movff	prodh,btemp+9
 21966  017244  0233               	mulwf	(btemp+11)^0,c
 21967  017246  50F3               	movf	prodl,w,c
 21968  017248  2631               	addwf	(btemp+9)^0,f,c
 21969                           
 21970                           ;stkvar	_s @ sp[(-9)+-2]
 21971  01724A  50E1               	movf	fsr1l,w,c
 21972  01724C  0FF5               	addlw	-11
 21973  01724E  6ED9               	movwf	fsr2l,c
 21974  017250  50E2               	movf	fsr1h,w,c
 21975  017252  6EDA               	movwf	fsr2h,c
 21976  017254  0EFF               	movlw	255
 21977  017256  22DA               	addwfc	fsr2h,f,c
 21978  017258  006F FF7B FFF6     	movff	postinc2,tblptrl
 21979  01725E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21980  017264                     	if	0	;tblptru may be non-zero
 21981  017264                     	endif
 21982  017264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21983  017264  0E00               	movlw	low (__mediumconst shr (0+16))
 21984  017266  6EF8               	movwf	tblptru,c
 21985  017268                     	endif
 21986  017268  0008               	tblrd		*
 21987  01726A  50F5               	movf	tablat,w,c
 21988  01726C  5E30               	subwf	(btemp+8)^0,f,c
 21989  01726E  0E00               	movlw	0
 21990  017270  5A31               	subwfb	(btemp+9)^0,f,c
 21991  017272  0E30               	movlw	48
 21992  017274  2630               	addwf	(btemp+8)^0,f,c
 21993  017276  0E00               	movlw	0
 21994  017278  2231               	addwfc	(btemp+9)^0,f,c
 21995                           
 21996                           ;stkvar	_n @ sp[(-9)+5]
 21997  01727A  0EFC               	movlw	-4
 21998  01727C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 21999  017282  0EFD               	movlw	-3
 22000  017284  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 22001  01728A  D79B               	goto	l9100
 22002  01728C                     l9108:
 22003  01728C  0ED0               	movlw	208
 22004  01728E  6E32               	movwf	(btemp+10)^0,c
 22005  017290  0EFF               	movlw	255
 22006  017292  6E33               	movwf	(btemp+11)^0,c
 22007                           
 22008                           ;stkvar	_s @ sp[(-9)+-2]
 22009  017294  50E1               	movf	fsr1l,w,c
 22010  017296  0FF5               	addlw	-11
 22011  017298  6ED9               	movwf	fsr2l,c
 22012  01729A  50E2               	movf	fsr1h,w,c
 22013  01729C  6EDA               	movwf	fsr2h,c
 22014  01729E  0EFF               	movlw	255
 22015  0172A0  22DA               	addwfc	fsr2h,f,c
 22016  0172A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 22017  0172A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 22018  0172AE                     	if	0	;tblptru may be non-zero
 22019  0172AE                     	endif
 22020  0172AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22021  0172AE  0E00               	movlw	low (__mediumconst shr (0+16))
 22022  0172B0  6EF8               	movwf	tblptru,c
 22023  0172B2                     	endif
 22024  0172B2  0008               	tblrd		*
 22025  0172B4  50F5               	movf	tablat,w,c
 22026  0172B6  6E30               	movwf	(btemp+8)^0,c
 22027  0172B8  6A31               	clrf	(btemp+9)^0,c
 22028  0172BA  5032               	movf	(btemp+10)^0,w,c
 22029  0172BC  2630               	addwf	(btemp+8)^0,f,c
 22030  0172BE  5033               	movf	(btemp+11)^0,w,c
 22031  0172C0  2231               	addwfc	(btemp+9)^0,f,c
 22032  0172C2  5031               	movf	(btemp+9)^0,w,c
 22033  0172C4  E106               	bnz	u8330
 22034  0172C6  0E0A               	movlw	10
 22035  0172C8  5C30               	subwf	(btemp+8)^0,w,c
 22036  0172CA  B0D8               	btfsc	status,0,c
 22037  0172CC  D002               	goto	u8330
 22038  0172CE  0E01               	movlw	1
 22039  0172D0  D001               	goto	u8340
 22040  0172D2                     u8330:
 22041  0172D2  0E00               	movlw	0
 22042  0172D4                     u8340:
 22043  0172D4  6E32               	movwf	(btemp+10)^0,c
 22044  0172D6  6A33               	clrf	(btemp+11)^0,c
 22045                           
 22046                           ;stkvar	_atoi$5949 @ sp[(-9)+0]
 22047  0172D8  0EF7               	movlw	-9
 22048  0172DA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 22049  0172E0  0EF8               	movlw	-8
 22050  0172E2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 22051                           
 22052                           ;stkvar	_atoi$5949 @ sp[(-9)+0]
 22053  0172E8  0EF7               	movlw	-9
 22054  0172EA  006F FF8C  F028    	movff	plusw1,btemp
 22055  0172F0  0EF8               	movlw	-8
 22056  0172F2  50E3               	movf	plusw1,w,c
 22057  0172F4  1028               	iorwf	btemp^0,w,c
 22058  0172F6  A4D8               	btfss	status,2,c
 22059  0172F8  D795               	goto	l9104
 22060                           
 22061                           ;stkvar	_neg @ sp[(-9)+7]
 22062  0172FA  0EFE               	movlw	-2
 22063  0172FC  006F FF8C  F028    	movff	plusw1,btemp
 22064  017302  0EFF               	movlw	-1
 22065  017304  50E3               	movf	plusw1,w,c
 22066  017306  1028               	iorwf	btemp^0,w,c
 22067  017308  A4D8               	btfss	status,2,c
 22068  01730A  D00E               	goto	l9118
 22069                           
 22070                           ;stkvar	_n @ sp[(-9)+5]
 22071  01730C  0EFC               	movlw	-4
 22072  01730E  006F FF8C  F028    	movff	plusw1,btemp
 22073  017314  1E28               	comf	btemp^0,f,c
 22074  017316  0EFD               	movlw	-3
 22075  017318  006F FF8C  F029    	movff	plusw1,btemp+1
 22076  01731E  1E29               	comf	(btemp+1)^0,f,c
 22077  017320  2A28               	incf	btemp^0,f,c
 22078  017322  B4D8               	btfsc	status,2,c
 22079  017324  2A29               	incf	(btemp+1)^0,f,c
 22080  017326  D008               	goto	l3083
 22081  017328                     l9118:
 22082                           
 22083                           ;stkvar	_n @ sp[(-9)+5]
 22084  017328  0EFC               	movlw	-4
 22085  01732A  006F FF8C  F028    	movff	plusw1,btemp
 22086  017330  0EFD               	movlw	-3
 22087  017332  006F FF8C  F029    	movff	plusw1,btemp+1
 22088  017338                     l3083:
 22089                           
 22090                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22091  017338  0EF5               	movlw	245
 22092  01733A  26E1               	addwf	fsr1l,f,c
 22093  01733C  0EFF               	movlw	255
 22094  01733E  22E2               	addwfc	fsr1h,f,c
 22095  017340  0012               	return		;funcret
 22096  017342                     __end_of_atoi:
 22097                           	opt callstack 0
 22098                           
 22099 ;; *************** function _isspace *****************
 22100 ;; Defined at:
 22101 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22102 ;; Parameters:    Size  Location     Type
 22103 ;;  c               2  [STACK] int 
 22104 ;; Auto vars:     Size  Location     Type
 22105 ;;		None
 22106 ;; Return value:  Size  Location     Type
 22107 ;;                  2  [STACK] int 
 22108 ;; Registers used:
 22109 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22110 ;; Tracked objects:
 22111 ;;		On entry : 0/0
 22112 ;;		On exit  : 0/0
 22113 ;;		Unchanged: 0/0
 22114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22119 ;;Total ram usage:        0 bytes
 22120 ;; Hardware stack levels used:    1
 22121 ;; Hardware stack levels required when called:   15
 22122 ;; This function calls:
 22123 ;;		Nothing
 22124 ;; This function is called by:
 22125 ;;		_atoi
 22126 ;; This function uses a reentrant model
 22127 ;;
 22128                           
 22129                           	psect	text78
 22130  01A8B8                     __ptext78:
 22131                           	opt callstack 0
 22132  01A8B8                     _isspace:
 22133                           	opt callstack 0
 22134                           
 22135                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22136  01A8B8  52E6               	movf	postinc1,f,c
 22137                           
 22138                           ;stkvar	_isspace$5998 @ sp[(-1)+0]
 22139                           
 22140                           ;incstack = 0
 22141 ;; hardware stack exceeded
 22142  01A8BA  0EFF               	movlw	-1
 22143  01A8BC  6AE3               	clrf	plusw1,c
 22144  01A8BE  2AE3               	incf	plusw1,f,c
 22145                           
 22146                           ;stkvar	_c @ sp[(-1)+-2]
 22147  01A8C0  0EFD               	movlw	-3
 22148  01A8C2  006F FF8C  F028    	movff	plusw1,btemp
 22149  01A8C8  0E20               	movlw	32
 22150  01A8CA  1828               	xorwf	btemp^0,w,c
 22151  01A8CC  E104               	bnz	u7160
 22152  01A8CE  0EFE               	movlw	-2
 22153  01A8D0  50E3               	movf	plusw1,w,c
 22154  01A8D2  B4D8               	btfsc	status,2,c
 22155  01A8D4  D012               	goto	l8476
 22156  01A8D6                     u7160:
 22157                           
 22158                           ;stkvar	_c @ sp[(-1)+-2]
 22159  01A8D6  0EFD               	movlw	-3
 22160  01A8D8  50E3               	movf	plusw1,w,c
 22161  01A8DA  0FF7               	addlw	247
 22162  01A8DC  6E32               	movwf	(btemp+10)^0,c
 22163  01A8DE  0EFE               	movlw	-2
 22164  01A8E0  006F FF8C  F033    	movff	plusw1,btemp+11
 22165  01A8E6  0EFF               	movlw	255
 22166  01A8E8  2233               	addwfc	(btemp+11)^0,f,c
 22167  01A8EA  5033               	movf	(btemp+11)^0,w,c
 22168  01A8EC  E104               	bnz	u7170
 22169  01A8EE  0E05               	movlw	5
 22170  01A8F0  5C32               	subwf	(btemp+10)^0,w,c
 22171  01A8F2  A0D8               	btfss	status,0,c
 22172  01A8F4  D002               	goto	l8476
 22173  01A8F6                     u7170:
 22174                           
 22175                           ;stkvar	_isspace$5998 @ sp[(-1)+0]
 22176  01A8F6  0EFF               	movlw	-1
 22177  01A8F8  6AE3               	clrf	plusw1,c
 22178  01A8FA                     l8476:
 22179                           
 22180                           ;stkvar	_isspace$5998 @ sp[(-1)+0]
 22181  01A8FA  0EFF               	movlw	-1
 22182  01A8FC  50E3               	movf	plusw1,w,c
 22183  01A8FE  6E28               	movwf	btemp^0,c
 22184  01A900  6A29               	clrf	(btemp+1)^0,c
 22185                           
 22186                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22187  01A902  52E5               	movf	postdec1,f,c
 22188  01A904  52E5               	movf	postdec1,f,c
 22189  01A906  52E5               	movf	postdec1,f,c
 22190  01A908  0012               	return		;funcret
 22191  01A90A                     __end_of_isspace:
 22192                           	opt callstack 0
 22193                           
 22194 ;; *************** function _isdigit *****************
 22195 ;; Defined at:
 22196 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22197 ;; Parameters:    Size  Location     Type
 22198 ;;  c               2  [STACK] int 
 22199 ;; Auto vars:     Size  Location     Type
 22200 ;;		None
 22201 ;; Return value:  Size  Location     Type
 22202 ;;                  2  [STACK] int 
 22203 ;; Registers used:
 22204 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22205 ;; Tracked objects:
 22206 ;;		On entry : 0/0
 22207 ;;		On exit  : 0/0
 22208 ;;		Unchanged: 0/0
 22209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22214 ;;Total ram usage:        0 bytes
 22215 ;; Hardware stack levels used:    1
 22216 ;; Hardware stack levels required when called:   15
 22217 ;; This function calls:
 22218 ;;		Nothing
 22219 ;; This function is called by:
 22220 ;;		_vfpfcnvrt
 22221 ;;		_atoi
 22222 ;; This function uses a reentrant model
 22223 ;;
 22224                           
 22225                           	psect	text79
 22226  01AF9E                     __ptext79:
 22227                           	opt callstack 0
 22228  01AF9E                     _isdigit:
 22229                           	opt callstack 0
 22230                           
 22231                           ;stkvar	_c @ sp[(0)+-2]
 22232                           
 22233                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22234                           ;incstack = 0
 22235 ;; hardware stack exceeded
 22236  01AF9E  0EFE               	movlw	-2
 22237  01AFA0  50E3               	movf	plusw1,w,c
 22238  01AFA2  0FD0               	addlw	208
 22239  01AFA4  6E32               	movwf	(btemp+10)^0,c
 22240  01AFA6  0EFF               	movlw	-1
 22241  01AFA8  006F FF8C  F033    	movff	plusw1,btemp+11
 22242  01AFAE  0EFF               	movlw	255
 22243  01AFB0  2233               	addwfc	(btemp+11)^0,f,c
 22244  01AFB2  5033               	movf	(btemp+11)^0,w,c
 22245  01AFB4  E106               	bnz	u6010
 22246  01AFB6  0E0A               	movlw	10
 22247  01AFB8  5C32               	subwf	(btemp+10)^0,w,c
 22248  01AFBA  B0D8               	btfsc	status,0,c
 22249  01AFBC  D002               	goto	u6010
 22250  01AFBE  0E01               	movlw	1
 22251  01AFC0  D001               	goto	u6020
 22252  01AFC2                     u6010:
 22253  01AFC2  0E00               	movlw	0
 22254  01AFC4                     u6020:
 22255  01AFC4  6E28               	movwf	btemp^0,c
 22256  01AFC6  6A29               	clrf	(btemp+1)^0,c
 22257                           
 22258                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22259  01AFC8  52E5               	movf	postdec1,f,c
 22260  01AFCA  52E5               	movf	postdec1,f,c
 22261  01AFCC  0012               	return		;funcret
 22262  01AFCE                     __end_of_isdigit:
 22263                           	opt callstack 0
 22264                           
 22265 ;; *************** function _set_vterm *****************
 22266 ;; Defined at:
 22267 ;;		line 107 in file "mconfig.c"
 22268 ;; Parameters:    Size  Location     Type
 22269 ;;  vterm           1  [STACK] const unsigned char 
 22270 ;; Auto vars:     Size  Location     Type
 22271 ;;		None
 22272 ;; Return value:  Size  Location     Type
 22273 ;;                  1  [STACK] unsigned char 
 22274 ;; Registers used:
 22275 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22276 ;; Tracked objects:
 22277 ;;		On entry : 0/1
 22278 ;;		On exit  : 0/0
 22279 ;;		Unchanged: 0/0
 22280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22285 ;;Total ram usage:        0 bytes
 22286 ;; Hardware stack levels used:    1
 22287 ;; Hardware stack levels required when called:   15
 22288 ;; This function calls:
 22289 ;;		Nothing
 22290 ;; This function is called by:
 22291 ;;		_main
 22292 ;;		_check_help
 22293 ;; This function uses a reentrant model
 22294 ;;
 22295                           
 22296                           	psect	text80
 22297  01B4B0                     __ptext80:
 22298                           	opt callstack 0
 22299  01B4B0                     _set_vterm:
 22300                           	opt callstack 15
 22301                           
 22302                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22303                           ;stkvar	_vterm @ sp[(0)+-1]
 22304                           
 22305                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22306                           ;incstack = 0
 22307  01B4B0  0EFF               	movlw	-1
 22308  01B4B2  006F FF8C  F033    	movff	plusw1,btemp+11
 22309  01B4B8  0E03               	movlw	3
 22310  01B4BA  1633               	andwf	(btemp+11)^0,f,c
 22311  01B4BC  EE22  F1DF         	lfsr	2,_D+480
 22312  01B4C0  50DF               	movf	223,w,c
 22313  01B4C2  1833               	xorwf	(btemp+11)^0,w,c
 22314  01B4C4  0BFE               	andlw	-2
 22315  01B4C6  1833               	xorwf	(btemp+11)^0,w,c
 22316  01B4C8  6EDF               	movwf	223,c
 22317                           
 22318                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22319  01B4CA  52E5               	movf	postdec1,f,c
 22320  01B4CC  0012               	return		;funcret
 22321  01B4CE                     __end_of_set_vterm:
 22322                           	opt callstack 0
 22323                           
 22324 ;; *************** function _set_temp_display_help *****************
 22325 ;; Defined at:
 22326 ;;		line 211 in file "mconfig.c"
 22327 ;; Parameters:    Size  Location     Type
 22328 ;;  new_response    1  [STACK] const enum E16509
 22329 ;; Auto vars:     Size  Location     Type
 22330 ;;		None
 22331 ;; Return value:  Size  Location     Type
 22332 ;;                  1  [STACK] enum E16509
 22333 ;; Registers used:
 22334 ;;		wreg, fsr1l, fsr1h
 22335 ;; Tracked objects:
 22336 ;;		On entry : 0/2
 22337 ;;		On exit  : 3F/2
 22338 ;;		Unchanged: 0/0
 22339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22344 ;;Total ram usage:        0 bytes
 22345 ;; Hardware stack levels used:    1
 22346 ;; Hardware stack levels required when called:   15
 22347 ;; This function calls:
 22348 ;;		Nothing
 22349 ;; This function is called by:
 22350 ;;		_check_help
 22351 ;; This function uses a reentrant model
 22352 ;;
 22353                           
 22354                           	psect	text81
 22355  01B64E                     __ptext81:
 22356                           	opt callstack 0
 22357  01B64E                     _set_temp_display_help:
 22358                           	opt callstack 14
 22359                           
 22360                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22361                           
 22362                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22363                           ;incstack = 0
 22364  01B64E  0102               	movlb	2	; () banked
 22365  01B650  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 22366                           
 22367                           ; BSR set to: 2
 22368                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22369                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22370  01B652  0EFF               	movlw	-1
 22371  01B654  006F FF8C  F2A5    	movff	plusw1,_V+165	;volatile
 22372                           
 22373                           ; BSR set to: 2
 22374                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22375  01B65A  52E5               	movf	postdec1,f,c
 22376  01B65C  0012               	return		;funcret
 22377  01B65E                     __end_of_set_temp_display_help:
 22378                           	opt callstack 0
 22379                           
 22380 ;; *************** function _set_display_info *****************
 22381 ;; Defined at:
 22382 ;;		line 200 in file "mconfig.c"
 22383 ;; Parameters:    Size  Location     Type
 22384 ;;  new_response    1  [STACK] const enum E16509
 22385 ;; Auto vars:     Size  Location     Type
 22386 ;;		None
 22387 ;; Return value:  Size  Location     Type
 22388 ;;                  1  [STACK] enum E16994
 22389 ;; Registers used:
 22390 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22391 ;; Tracked objects:
 22392 ;;		On entry : 0/0
 22393 ;;		On exit  : 0/0
 22394 ;;		Unchanged: 0/0
 22395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22396 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22397 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22399 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22400 ;;Total ram usage:        0 bytes
 22401 ;; Hardware stack levels used:    1
 22402 ;; Hardware stack levels required when called:   16
 22403 ;; This function calls:
 22404 ;;		_TimerDone
 22405 ;; This function is called by:
 22406 ;;		_main
 22407 ;;		_check_help
 22408 ;; This function uses a reentrant model
 22409 ;;
 22410                           
 22411                           	psect	text82
 22412  01B4CE                     __ptext82:
 22413                           	opt callstack 0
 22414  01B4CE                     _set_display_info:
 22415                           	opt callstack 14
 22416                           
 22417                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22418                           
 22419                           ; BSR set to: 2
 22420                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22421                           ;incstack = 0
 22422  01B4CE  0E07               	movlw	7
 22423  01B4D0  6EE6               	movwf	postinc1,c
 22424  01B4D2  EC91  F0D8         	call	_TimerDone	;wreg free
 22425  01B4D6  5028               	movf	btemp^0,w,c
 22426  01B4D8  B4D8               	btfsc	status,2,c
 22427  01B4DA  D006               	goto	l1712
 22428                           
 22429                           ;mconfig.c: 205:   old_info = V.response.info;
 22430  01B4DC  0102               	movlb	2	; () banked
 22431  01B4DE  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22432                           
 22433                           ; BSR set to: 2
 22434                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22435                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22436  01B4E0  0EFF               	movlw	-1
 22437  01B4E2  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22438  01B4E8                     l1712:
 22439                           
 22440                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22441  01B4E8  52E5               	movf	postdec1,f,c
 22442  01B4EA  0012               	return		;funcret
 22443  01B4EC                     __end_of_set_display_info:
 22444                           	opt callstack 0
 22445                           
 22446 ;; *************** function _mode_lamp_dim *****************
 22447 ;; Defined at:
 22448 ;;		line 13 in file "mconfig.c"
 22449 ;; Parameters:    Size  Location     Type
 22450 ;;  level           2  [STACK] const unsigned short 
 22451 ;; Auto vars:     Size  Location     Type
 22452 ;;		None
 22453 ;; Return value:  Size  Location     Type
 22454 ;;                  1  [STACK] void 
 22455 ;; Registers used:
 22456 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22457 ;; Tracked objects:
 22458 ;;		On entry : 0/2
 22459 ;;		On exit  : 0/0
 22460 ;;		Unchanged: 0/0
 22461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22466 ;;Total ram usage:        0 bytes
 22467 ;; Hardware stack levels used:    1
 22468 ;; Hardware stack levels required when called:   16
 22469 ;; This function calls:
 22470 ;;		_PWM8_LoadDutyValue
 22471 ;; This function is called by:
 22472 ;;		_main
 22473 ;;		_check_help
 22474 ;; This function uses a reentrant model
 22475 ;;
 22476                           
 22477                           	psect	text83
 22478  01B596                     __ptext83:
 22479                           	opt callstack 0
 22480  01B596                     _mode_lamp_dim:
 22481                           	opt callstack 14
 22482                           
 22483                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22484                           ;stkvar	_level @ sp[(0)+-2]
 22485                           
 22486                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22487                           ;incstack = 0
 22488  01B596  0EFE               	movlw	-2
 22489  01B598  006F FF8F FFE6     	movff	plusw1,postinc1
 22490  01B59E  006F FF8F FFE6     	movff	plusw1,postinc1
 22491  01B5A4  ECEF  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22492                           
 22493                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22494  01B5A8  52E5               	movf	postdec1,f,c
 22495  01B5AA  52E5               	movf	postdec1,f,c
 22496  01B5AC  0012               	return		;funcret
 22497  01B5AE                     __end_of_mode_lamp_dim:
 22498                           	opt callstack 0
 22499                           
 22500 ;; *************** function _mode_lamp_bright *****************
 22501 ;; Defined at:
 22502 ;;		line 18 in file "mconfig.c"
 22503 ;; Parameters:    Size  Location     Type
 22504 ;;		None
 22505 ;; Auto vars:     Size  Location     Type
 22506 ;;		None
 22507 ;; Return value:  Size  Location     Type
 22508 ;;                  1  [STACK] void 
 22509 ;; Registers used:
 22510 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22511 ;; Tracked objects:
 22512 ;;		On entry : 0/0
 22513 ;;		On exit  : 0/0
 22514 ;;		Unchanged: 0/0
 22515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22520 ;;Total ram usage:        0 bytes
 22521 ;; Hardware stack levels used:    1
 22522 ;; Hardware stack levels required when called:   16
 22523 ;; This function calls:
 22524 ;;		_PWM8_LoadDutyValue
 22525 ;; This function is called by:
 22526 ;;		_check_help
 22527 ;; This function uses a reentrant model
 22528 ;;
 22529                           
 22530                           	psect	text84
 22531  01B66C                     __ptext84:
 22532                           	opt callstack 0
 22533  01B66C                     _mode_lamp_bright:
 22534                           	opt callstack 13
 22535                           
 22536                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22537                           
 22538                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22539                           ;incstack = 0
 22540  01B66C  0E2C               	movlw	44
 22541  01B66E  6EE6               	movwf	postinc1,c
 22542  01B670  0E01               	movlw	1
 22543  01B672  6EE6               	movwf	postinc1,c
 22544  01B674  ECEF  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22545                           
 22546                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22547  01B678  0012               	return		;funcret
 22548  01B67A                     __end_of_mode_lamp_bright:
 22549                           	opt callstack 0
 22550                           
 22551 ;; *************** function _PWM8_LoadDutyValue *****************
 22552 ;; Defined at:
 22553 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22554 ;; Parameters:    Size  Location     Type
 22555 ;;  dutyValue       2  [STACK] unsigned short 
 22556 ;; Auto vars:     Size  Location     Type
 22557 ;;		None
 22558 ;; Return value:  Size  Location     Type
 22559 ;;                  1  [STACK] void 
 22560 ;; Registers used:
 22561 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22562 ;; Tracked objects:
 22563 ;;		On entry : 0/2
 22564 ;;		On exit  : 0/0
 22565 ;;		Unchanged: 0/0
 22566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22571 ;;Total ram usage:        0 bytes
 22572 ;; Hardware stack levels used:    1
 22573 ;; Hardware stack levels required when called:   15
 22574 ;; This function calls:
 22575 ;;		Nothing
 22576 ;; This function is called by:
 22577 ;;		_mode_lamp_dim
 22578 ;;		_mode_lamp_bright
 22579 ;; This function uses a reentrant model
 22580 ;;
 22581                           
 22582                           	psect	text85
 22583  01ABDE                     __ptext85:
 22584                           	opt callstack 0
 22585  01ABDE                     _PWM8_LoadDutyValue:
 22586                           	opt callstack 14
 22587                           
 22588                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22589                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22590                           
 22591                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22592                           ;incstack = 0
 22593  01ABDE  0EFE               	movlw	-2
 22594  01ABE0  006F FF8C  F032    	movff	plusw1,btemp+10
 22595  01ABE6  0EFF               	movlw	-1
 22596  01ABE8  006F FF8C  F033    	movff	plusw1,btemp+11
 22597  01ABEE  90D8               	bcf	status,0,c
 22598  01ABF0  3233               	rrcf	(btemp+11)^0,f,c
 22599  01ABF2  3232               	rrcf	(btemp+10)^0,f,c
 22600  01ABF4  90D8               	bcf	status,0,c
 22601  01ABF6  3233               	rrcf	(btemp+11)^0,f,c
 22602  01ABF8  3232               	rrcf	(btemp+10)^0,f,c
 22603  01ABFA  5032               	movf	(btemp+10)^0,w,c
 22604  01ABFC  6E61               	movwf	97,c	;volatile
 22605                           
 22606                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22607                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22608  01ABFE  0EFE               	movlw	-2
 22609  01AC00  006F FF8C  F033    	movff	plusw1,btemp+11
 22610  01AC06  0E03               	movlw	3
 22611  01AC08  1633               	andwf	(btemp+11)^0,f,c
 22612  01AC0A  0E06               	movlw	6
 22613  01AC0C  6E28               	movwf	btemp^0,c
 22614  01AC0E                     u8815:
 22615  01AC0E  90D8               	bcf	status,0,c
 22616  01AC10  3633               	rlcf	(btemp+11)^0,f,c
 22617  01AC12  2E28               	decfsz	btemp^0,f,c
 22618  01AC14  D7FC               	goto	u8815
 22619  01AC16  5033               	movf	(btemp+11)^0,w,c
 22620  01AC18  6E60               	movwf	96,c	;volatile
 22621                           
 22622                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22623  01AC1A  52E5               	movf	postdec1,f,c
 22624  01AC1C  52E5               	movf	postdec1,f,c
 22625  01AC1E  0012               	return		;funcret
 22626  01AC20                     __end_of_PWM8_LoadDutyValue:
 22627                           	opt callstack 0
 22628                           
 22629 ;; *************** function _help_button *****************
 22630 ;; Defined at:
 22631 ;;		line 26 in file "mconfig.c"
 22632 ;; Parameters:    Size  Location     Type
 22633 ;;		None
 22634 ;; Auto vars:     Size  Location     Type
 22635 ;;		None
 22636 ;; Return value:  Size  Location     Type
 22637 ;;                  1  [STACK] _Bool 
 22638 ;; Registers used:
 22639 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22640 ;; Tracked objects:
 22641 ;;		On entry : 0/2
 22642 ;;		On exit  : 0/0
 22643 ;;		Unchanged: 0/0
 22644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22649 ;;Total ram usage:        0 bytes
 22650 ;; Hardware stack levels used:    1
 22651 ;; Hardware stack levels required when called:   16
 22652 ;; This function calls:
 22653 ;;		_StartTimer
 22654 ;;		_TimerDone
 22655 ;; This function is called by:
 22656 ;;		_check_help
 22657 ;; This function uses a reentrant model
 22658 ;;
 22659                           
 22660                           	psect	text86
 22661  01AD98                     __ptext86:
 22662                           	opt callstack 0
 22663  01AD98                     _help_button:
 22664                           	opt callstack 13
 22665                           
 22666                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22667                           
 22668                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22669                           ;incstack = 0
 22670  01AD98  B0CB               	btfsc	203,0,c	;volatile
 22671  01AD9A  D00C               	goto	l1655
 22672                           
 22673                           ;mconfig.c: 29:   V.help = 1;
 22674  01AD9C  0102               	movlb	2	; () banked
 22675  01AD9E  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22676                           
 22677                           ; BSR set to: 2
 22678                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22679  01ADA0  0E08               	movlw	8
 22680  01ADA2  6EE6               	movwf	postinc1,c
 22681  01ADA4  EC91  F0D8         	call	_TimerDone	;wreg free
 22682  01ADA8  5028               	movf	btemp^0,w,c
 22683  01ADAA  B4D8               	btfsc	status,2,c
 22684  01ADAC  D003               	goto	l1655
 22685                           
 22686                           ;mconfig.c: 31:    return 1;
 22687  01ADAE  0E01               	movlw	1
 22688  01ADB0  6E28               	movwf	btemp^0,c
 22689  01ADB2  0012               	return	
 22690  01ADB4                     l1655:
 22691                           
 22692                           ;mconfig.c: 34:  if (!V.help)
 22693  01ADB4  0102               	movlb	2	; () banked
 22694  01ADB6  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22695  01ADB8  D008               	goto	l10160
 22696                           
 22697                           ; BSR set to: 2
 22698                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22699  01ADBA  0E2C               	movlw	44
 22700  01ADBC  6EE6               	movwf	postinc1,c
 22701  01ADBE  0E01               	movlw	1
 22702  01ADC0  6EE6               	movwf	postinc1,c
 22703  01ADC2  0E08               	movlw	8
 22704  01ADC4  6EE6               	movwf	postinc1,c
 22705  01ADC6  EC10  F0D6         	call	_StartTimer	;wreg free
 22706  01ADCA                     l10160:
 22707                           
 22708                           ;mconfig.c: 37:  return 0;
 22709  01ADCA  0E00               	movlw	0
 22710  01ADCC  6E28               	movwf	btemp^0,c
 22711                           
 22712                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22713  01ADCE  0012               	return		;funcret
 22714  01ADD0                     __end_of_help_button:
 22715                           	opt callstack 0
 22716                           
 22717 ;; *************** function _TimerDone *****************
 22718 ;; Defined at:
 22719 ;;		line 20 in file "timers.c"
 22720 ;; Parameters:    Size  Location     Type
 22721 ;;  timer           1  [STACK] const unsigned char 
 22722 ;; Auto vars:     Size  Location     Type
 22723 ;;		None
 22724 ;; Return value:  Size  Location     Type
 22725 ;;                  1  [STACK] _Bool 
 22726 ;; Registers used:
 22727 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22728 ;; Tracked objects:
 22729 ;;		On entry : 0/0
 22730 ;;		On exit  : 0/0
 22731 ;;		Unchanged: 0/0
 22732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22737 ;;Total ram usage:        0 bytes
 22738 ;; Hardware stack levels used:    1
 22739 ;; Hardware stack levels required when called:   15
 22740 ;; This function calls:
 22741 ;;		Nothing
 22742 ;; This function is called by:
 22743 ;;		_main
 22744 ;;		_WaitMs
 22745 ;;		_help_button
 22746 ;;		_check_help
 22747 ;;		_set_display_info
 22748 ;;		_update_adc_result
 22749 ;;		_esr_check
 22750 ;; This function uses a reentrant model
 22751 ;;
 22752                           
 22753                           	psect	text87
 22754  01B122                     __ptext87:
 22755                           	opt callstack 0
 22756  01B122                     _TimerDone:
 22757                           	opt callstack 14
 22758                           
 22759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22760                           ;incstack = 0
 22761  01B122  0004               	clrwdt		;# 
 22762                           
 22763                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22764                           ;stkvar	_timer @ sp[(0)+-1]
 22765  01B124  0EFF               	movlw	-1
 22766  01B126  50E3               	movf	plusw1,w,c
 22767  01B128  0D02               	mullw	2
 22768  01B12A  0E94               	movlw	low _tickCount
 22769  01B12C  24F3               	addwf	243,w,c
 22770  01B12E  6ED9               	movwf	fsr2l,c
 22771  01B130  0E03               	movlw	high _tickCount
 22772  01B132  20F4               	addwfc	prodh,w,c
 22773  01B134  6EDA               	movwf	fsr2h,c
 22774  01B136  50DE               	movf	postinc2,w,c
 22775  01B138  10DE               	iorwf	postinc2,w,c
 22776  01B13A  A4D8               	btfss	status,2,c
 22777  01B13C  D002               	goto	l9388
 22778                           
 22779                           ;timers.c: 24:   return 1;
 22780  01B13E  0E01               	movlw	1
 22781  01B140  D001               	goto	L25
 22782  01B142                     l9388:
 22783                           
 22784                           ;timers.c: 26:  return 0;
 22785  01B142  0E00               	movlw	0
 22786  01B144                     L25:
 22787  01B144  6E28               	movwf	btemp^0,c
 22788                           
 22789                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22790  01B146  52E5               	movf	postdec1,f,c
 22791  01B148  0012               	return		;funcret
 22792  01B14A                     __end_of_TimerDone:
 22793                           	opt callstack 0
 22794                           
 22795 ;; *************** function _StartTimer *****************
 22796 ;; Defined at:
 22797 ;;		line 12 in file "timers.c"
 22798 ;; Parameters:    Size  Location     Type
 22799 ;;  timer           1  [STACK] const unsigned char 
 22800 ;;  count           2  [STACK] const unsigned short 
 22801 ;; Auto vars:     Size  Location     Type
 22802 ;;		None
 22803 ;; Return value:  Size  Location     Type
 22804 ;;                  1  [STACK] void 
 22805 ;; Registers used:
 22806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22807 ;; Tracked objects:
 22808 ;;		On entry : 0/0
 22809 ;;		On exit  : 0/0
 22810 ;;		Unchanged: 0/0
 22811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22816 ;;Total ram usage:        0 bytes
 22817 ;; Hardware stack levels used:    1
 22818 ;; Hardware stack levels required when called:   15
 22819 ;; This function calls:
 22820 ;;		Nothing
 22821 ;; This function is called by:
 22822 ;;		_main
 22823 ;;		_WaitMs
 22824 ;;		_help_button
 22825 ;;		_check_help
 22826 ;;		_update_adc_result
 22827 ;;		_calc_bsoc
 22828 ;;		_esr_check
 22829 ;; This function uses a reentrant model
 22830 ;;
 22831                           
 22832                           	psect	text88
 22833  01AC20                     __ptext88:
 22834                           	opt callstack 0
 22835  01AC20                     _StartTimer:
 22836                           	opt callstack 0
 22837                           
 22838                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22839                           ;stkvar	_count @ sp[(0)+-3]
 22840                           
 22841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22842                           ;incstack = 0
 22843 ;; hardware stack exceeded
 22844  01AC20  0EFD               	movlw	-3
 22845  01AC22  006F FF8C  F032    	movff	plusw1,btemp+10
 22846  01AC28  0EFE               	movlw	-2
 22847  01AC2A  006F FF8C  F033    	movff	plusw1,btemp+11
 22848  01AC30  90D8               	bcf	status,0,c
 22849  01AC32  3432               	rlcf	(btemp+10)^0,w,c
 22850  01AC34  6E30               	movwf	(btemp+8)^0,c
 22851  01AC36  3433               	rlcf	(btemp+11)^0,w,c
 22852  01AC38  6E31               	movwf	(btemp+9)^0,c
 22853                           
 22854                           ;stkvar	_timer @ sp[(0)+-1]
 22855  01AC3A  0EFF               	movlw	-1
 22856  01AC3C  50E3               	movf	plusw1,w,c
 22857  01AC3E  0D02               	mullw	2
 22858  01AC40  0E94               	movlw	low _tickCount
 22859  01AC42  24F3               	addwf	243,w,c
 22860  01AC44  6ED9               	movwf	fsr2l,c
 22861  01AC46  0E03               	movlw	high _tickCount
 22862  01AC48  20F4               	addwfc	prodh,w,c
 22863  01AC4A  6EDA               	movwf	fsr2h,c
 22864  01AC4C  0060  F0C3  FFDE   	movff	btemp+8,postinc2
 22865  01AC52  0060  F0C7  FFDD   	movff	btemp+9,postdec2
 22866                           
 22867                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22868  01AC58  52E5               	movf	postdec1,f,c
 22869  01AC5A  52E5               	movf	postdec1,f,c
 22870  01AC5C  52E5               	movf	postdec1,f,c
 22871  01AC5E  0012               	return		;funcret
 22872  01AC60                     __end_of_StartTimer:
 22873                           	opt callstack 0
 22874                           
 22875 ;; *************** function _display_info *****************
 22876 ;; Defined at:
 22877 ;;		line 190 in file "mconfig.c"
 22878 ;; Parameters:    Size  Location     Type
 22879 ;;		None
 22880 ;; Auto vars:     Size  Location     Type
 22881 ;;		None
 22882 ;; Return value:  Size  Location     Type
 22883 ;;                  1  [STACK] enum E16509
 22884 ;; Registers used:
 22885 ;;		btemp
 22886 ;; Tracked objects:
 22887 ;;		On entry : 0/2
 22888 ;;		On exit  : 0/0
 22889 ;;		Unchanged: 0/0
 22890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22895 ;;Total ram usage:        0 bytes
 22896 ;; Hardware stack levels used:    1
 22897 ;; Hardware stack levels required when called:   15
 22898 ;; This function calls:
 22899 ;;		Nothing
 22900 ;; This function is called by:
 22901 ;;		_check_help
 22902 ;; This function uses a reentrant model
 22903 ;;
 22904                           
 22905                           	psect	text89
 22906  01B6E2                     __ptext89:
 22907                           	opt callstack 0
 22908  01B6E2                     _display_info:
 22909                           	opt callstack 14
 22910                           
 22911                           ;mconfig.c: 192:  return V.response.info;
 22912                           
 22913                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22914                           ;incstack = 0
 22915  01B6E2  0060  FA90  F028   	movff	_V+164,btemp	;volatile
 22916                           
 22917                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22918  01B6E8  0012               	return		;funcret
 22919  01B6EA                     __end_of_display_info:
 22920                           	opt callstack 0
 22921                           
 22922 ;; *************** function _display_help *****************
 22923 ;; Defined at:
 22924 ;;		line 195 in file "mconfig.c"
 22925 ;; Parameters:    Size  Location     Type
 22926 ;;		None
 22927 ;; Auto vars:     Size  Location     Type
 22928 ;;		None
 22929 ;; Return value:  Size  Location     Type
 22930 ;;                  1  [STACK] enum E16509
 22931 ;; Registers used:
 22932 ;;		btemp
 22933 ;; Tracked objects:
 22934 ;;		On entry : 3F/2
 22935 ;;		On exit  : 0/0
 22936 ;;		Unchanged: 0/0
 22937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22942 ;;Total ram usage:        0 bytes
 22943 ;; Hardware stack levels used:    1
 22944 ;; Hardware stack levels required when called:   15
 22945 ;; This function calls:
 22946 ;;		Nothing
 22947 ;; This function is called by:
 22948 ;;		_check_help
 22949 ;; This function uses a reentrant model
 22950 ;;
 22951                           
 22952                           	psect	text90
 22953  01B6EA                     __ptext90:
 22954                           	opt callstack 0
 22955  01B6EA                     _display_help:
 22956                           	opt callstack 14
 22957                           
 22958                           ;mconfig.c: 197:  return V.response.help_temp;
 22959                           
 22960                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22961                           ;incstack = 0
 22962  01B6EA  0060  FA94  F028   	movff	_V+165,btemp	;volatile
 22963                           
 22964                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22965  01B6F0  0012               	return		;funcret
 22966  01B6F2                     __end_of_display_help:
 22967                           	opt callstack 0
 22968                           
 22969 ;; *************** function _check_enter_button *****************
 22970 ;; Defined at:
 22971 ;;		line 42 in file "hid.c"
 22972 ;; Parameters:    Size  Location     Type
 22973 ;;  h               1  [STACK] PTR struct H_data
 22974 ;;		 -> H(7), 
 22975 ;; Auto vars:     Size  Location     Type
 22976 ;;		None
 22977 ;; Return value:  Size  Location     Type
 22978 ;;                  1  [STACK] _Bool 
 22979 ;; Registers used:
 22980 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22981 ;; Tracked objects:
 22982 ;;		On entry : 0/0
 22983 ;;		On exit  : 0/0
 22984 ;;		Unchanged: 0/0
 22985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22990 ;;Total ram usage:        0 bytes
 22991 ;; Hardware stack levels used:    1
 22992 ;; Hardware stack levels required when called:   15
 22993 ;; This function calls:
 22994 ;;		Nothing
 22995 ;; This function is called by:
 22996 ;;		_main
 22997 ;; This function uses a reentrant model
 22998 ;;
 22999                           
 23000                           	psect	text91
 23001  01AC60                     __ptext91:
 23002                           	opt callstack 0
 23003  01AC60                     _check_enter_button:
 23004                           	opt callstack 15
 23005                           
 23006                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 23007                           ;stkvar	_h @ sp[(0)+-1]
 23008                           
 23009                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23010                           ;incstack = 0
 23011  01AC60  0EFF               	movlw	-1
 23012  01AC62  50E3               	movf	plusw1,w,c
 23013  01AC64  6ED9               	movwf	fsr2l,c
 23014  01AC66  6ADA               	clrf	fsr2h,c
 23015  01AC68  0E04               	movlw	4
 23016  01AC6A  26D9               	addwf	fsr2l,f,c
 23017  01AC6C  50DF               	movf	indf2,w,c
 23018  01AC6E  A4D8               	btfss	status,2,c
 23019  01AC70  D013               	goto	l10758
 23020                           
 23021                           ;stkvar	_h @ sp[(0)+-1]
 23022  01AC72  0EFF               	movlw	-1
 23023  01AC74  50E3               	movf	plusw1,w,c
 23024  01AC76  6ED9               	movwf	fsr2l,c
 23025  01AC78  6ADA               	clrf	fsr2h,c
 23026  01AC7A  0E05               	movlw	5
 23027  01AC7C  26D9               	addwf	fsr2l,f,c
 23028  01AC7E  50DF               	movf	indf2,w,c
 23029  01AC80  A4D8               	btfss	status,2,c
 23030  01AC82  D00A               	goto	l10758
 23031                           
 23032                           ;hid.c: 45:   h->wait_enter = 1;
 23033                           ;stkvar	_h @ sp[(0)+-1]
 23034  01AC84  0EFF               	movlw	-1
 23035  01AC86  50E3               	movf	plusw1,w,c
 23036  01AC88  6ED9               	movwf	fsr2l,c
 23037  01AC8A  6ADA               	clrf	fsr2h,c
 23038  01AC8C  0E04               	movlw	4
 23039  01AC8E  26D9               	addwf	fsr2l,f,c
 23040  01AC90  0E01               	movlw	1
 23041  01AC92  6EDF               	movwf	indf2,c
 23042                           
 23043                           ;hid.c: 46:   return 1;
 23044  01AC94  0E01               	movlw	1
 23045  01AC96  D001               	goto	L26
 23046  01AC98                     l10758:
 23047                           
 23048                           ;hid.c: 48:  return 0;
 23049  01AC98  0E00               	movlw	0
 23050  01AC9A                     L26:
 23051  01AC9A  6E28               	movwf	btemp^0,c
 23052                           
 23053                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23054  01AC9C  52E5               	movf	postdec1,f,c
 23055  01AC9E  0012               	return		;funcret
 23056  01ACA0                     __end_of_check_enter_button:
 23057                           	opt callstack 0
 23058                           
 23059 ;; *************** function _calc_ror_data *****************
 23060 ;; Defined at:
 23061 ;;		line 101 in file "mbmc.c"
 23062 ;; Parameters:    Size  Location     Type
 23063 ;;		None
 23064 ;; Auto vars:     Size  Location     Type
 23065 ;;		None
 23066 ;; Return value:  Size  Location     Type
 23067 ;;                  1  [STACK] void 
 23068 ;; Registers used:
 23069 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23070 ;; Tracked objects:
 23071 ;;		On entry : 0/39
 23072 ;;		On exit  : 0/0
 23073 ;;		Unchanged: 0/0
 23074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23078 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23079 ;;Total ram usage:        0 bytes
 23080 ;; Hardware stack levels used:    1
 23081 ;; Hardware stack levels required when called:   18
 23082 ;; This function calls:
 23083 ;;		___flge
 23084 ;;		___flsub
 23085 ;;		_conv_raw_result
 23086 ;;		_fabsf
 23087 ;; This function is called by:
 23088 ;;		_main
 23089 ;; This function uses a reentrant model
 23090 ;;
 23091                           
 23092                           	psect	text92
 23093  01828A                     __ptext92:
 23094                           	opt callstack 0
 23095  01828A                     _calc_ror_data:
 23096                           	opt callstack 12
 23097                           
 23098                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23099                           
 23100                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23101                           ;incstack = 0
 23102  01828A  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23103  018290  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23104  018296  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23105  01829C  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23106  0182A2  0E00               	movlw	0
 23107  0182A4  6EE6               	movwf	postinc1,c
 23108  0182A6  0E00               	movlw	0
 23109  0182A8  6EE6               	movwf	postinc1,c
 23110  0182AA  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23111  0182AE  0060  F0A3  FFE6   	movff	btemp,postinc1
 23112  0182B4  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23113  0182BA  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23114  0182C0  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23115  0182C6  EC41  F0D5         	call	___flsub	;wreg free
 23116  0182CA  0060  F0A3  FFE6   	movff	btemp,postinc1
 23117  0182D0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23118  0182D6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23119  0182DC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23120  0182E2  ECF9  F0CD         	call	_fabsf	;wreg free
 23121  0182E6  0060  F0A0  F16C   	movff	btemp,_C+108	;volatile
 23122  0182EC  0060  F0A4  F16D   	movff	btemp+1,_C+109	;volatile
 23123  0182F2  0060  F0A8  F16E   	movff	btemp+2,_C+110	;volatile
 23124  0182F8  0060  F0AC  F16F   	movff	btemp+3,_C+111	;volatile
 23125                           
 23126                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 23127  0182FE  0E00               	movlw	0
 23128  018300  6EE6               	movwf	postinc1,c
 23129  018302  0E00               	movlw	0
 23130  018304  6EE6               	movwf	postinc1,c
 23131  018306  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23132  01830A  0060  F0A0  F086   	movff	btemp,calc_ror_data@bcror
 23133  018310  0060  F0A4  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23134  018316  0060  F0A8  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23135  01831C  0060  F0AC  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23136                           
 23137                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23138  018322  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23139  018328  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23140  01832E  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23141  018334  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23142  01833A  0E00               	movlw	0
 23143  01833C  6EE6               	movwf	postinc1,c
 23144  01833E  0E04               	movlw	4
 23145  018340  6EE6               	movwf	postinc1,c
 23146  018342  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23147  018346  0060  F0A3  FFE6   	movff	btemp,postinc1
 23148  01834C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23149  018352  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23150  018358  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23151  01835E  EC41  F0D5         	call	___flsub	;wreg free
 23152  018362  0060  F0A3  FFE6   	movff	btemp,postinc1
 23153  018368  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23154  01836E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23155  018374  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23156  01837A  ECF9  F0CD         	call	_fabsf	;wreg free
 23157  01837E  0060  F0A0  F168   	movff	btemp,_C+104	;volatile
 23158  018384  0060  F0A4  F169   	movff	btemp+1,_C+105	;volatile
 23159  01838A  0060  F0A8  F16A   	movff	btemp+2,_C+106	;volatile
 23160  018390  0060  F0AC  F16B   	movff	btemp+3,_C+107	;volatile
 23161                           
 23162                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 23163  018396  0EE7               	movlw	231
 23164  018398  6EE6               	movwf	postinc1,c
 23165  01839A  0E1D               	movlw	29
 23166  01839C  6EE6               	movwf	postinc1,c
 23167  01839E  0EA7               	movlw	167
 23168  0183A0  6EE6               	movwf	postinc1,c
 23169  0183A2  0E3B               	movlw	59
 23170  0183A4  6EE6               	movwf	postinc1,c
 23171  0183A6  0060  F5A3  FFE6   	movff	_C+104,postinc1
 23172  0183AC  0060  F5A7  FFE6   	movff	_C+105,postinc1
 23173  0183B2  0060  F5AB  FFE6   	movff	_C+106,postinc1
 23174  0183B8  0060  F5AF  FFE6   	movff	_C+107,postinc1
 23175  0183BE  EC70  F0C3         	call	___flge	;wreg free
 23176  0183C2  B028               	btfsc	btemp& (0+255),0,c
 23177  0183C4  D009               	goto	l10552
 23178                           
 23179                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 23180  0183C6  0EB0               	movlw	176
 23181  0183C8  0101               	movlb	1	; () banked
 23182  0183CA  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 23183  0183CC  0E03               	movlw	3
 23184  0183CE  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 23185  0183D0  0E67               	movlw	103
 23186  0183D2  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 23187  0183D4  0E3C               	movlw	60
 23188  0183D6  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 23189  0183D8                     l10552:
 23190                           
 23191                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 23192  0183D8  0E00               	movlw	0
 23193  0183DA  6EE6               	movwf	postinc1,c
 23194  0183DC  0E04               	movlw	4
 23195  0183DE  6EE6               	movwf	postinc1,c
 23196  0183E0  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23197  0183E4  0060  F0A0  F08A   	movff	btemp,calc_ror_data@bvror
 23198  0183EA  0060  F0A4  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23199  0183F0  0060  F0A8  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23200  0183F6  0060  F0AC  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23201                           
 23202                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23203  0183FC  0012               	return		;funcret
 23204  0183FE                     __end_of_calc_ror_data:
 23205                           	opt callstack 0
 23206                           
 23207 ;; *************** function _fabsf *****************
 23208 ;; Defined at:
 23209 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23210 ;; Parameters:    Size  Location     Type
 23211 ;;  x               4  [STACK] float 
 23212 ;; Auto vars:     Size  Location     Type
 23213 ;;  u               4  [STACK] struct .
 23214 ;; Return value:  Size  Location     Type
 23215 ;;                  4  [STACK] float 
 23216 ;; Registers used:
 23217 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23218 ;; Tracked objects:
 23219 ;;		On entry : 0/0
 23220 ;;		On exit  : 0/0
 23221 ;;		Unchanged: 0/0
 23222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23223 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23226 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23227 ;;Total ram usage:        0 bytes
 23228 ;; Hardware stack levels used:    1
 23229 ;; Hardware stack levels required when called:   15
 23230 ;; This function calls:
 23231 ;;		Nothing
 23232 ;; This function is called by:
 23233 ;;		_main
 23234 ;;		_calc_ror_data
 23235 ;;		_calc_bsoc
 23236 ;;		_esr_check
 23237 ;; This function uses a reentrant model
 23238 ;;
 23239                           
 23240                           	psect	text93
 23241  019BF2                     __ptext93:
 23242                           	opt callstack 0
 23243  019BF2                     _fabsf:
 23244                           	opt callstack 0
 23245                           
 23246                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23247  019BF2  52E6               	movf	postinc1,f,c
 23248  019BF4  52E6               	movf	postinc1,f,c
 23249  019BF6  52E6               	movf	postinc1,f,c
 23250  019BF8  52E6               	movf	postinc1,f,c
 23251                           
 23252                           ;incstack = 0
 23253 ;; hardware stack exceeded
 23254  019BFA  0060  F1F8  F030   	movff	fabsf@F463,btemp+8
 23255  019C00  0060  F1FC  F031   	movff	fabsf@F463+1,btemp+9
 23256  019C06  0060  F200  F032   	movff	fabsf@F463+2,btemp+10
 23257  019C0C  0060  F204  F033   	movff	fabsf@F463+3,btemp+11
 23258                           
 23259                           ;stkvar	_u @ sp[(-4)+0]
 23260  019C12  0EFC               	movlw	-4
 23261  019C14  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23262  019C1A  0EFD               	movlw	-3
 23263  019C1C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23264  019C22  0EFE               	movlw	-2
 23265  019C24  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23266  019C2A  0EFF               	movlw	-1
 23267  019C2C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23268                           
 23269                           ;stkvar	_x @ sp[(-4)+-4]
 23270  019C32  0EF8               	movlw	-8
 23271  019C34  006F FF8C  F030    	movff	plusw1,btemp+8
 23272  019C3A  0EF9               	movlw	-7
 23273  019C3C  006F FF8C  F031    	movff	plusw1,btemp+9
 23274  019C42  0EFA               	movlw	-6
 23275  019C44  006F FF8C  F032    	movff	plusw1,btemp+10
 23276  019C4A  0EFB               	movlw	-5
 23277  019C4C  006F FF8C  F033    	movff	plusw1,btemp+11
 23278                           
 23279                           ;stkvar	_u @ sp[(-4)+0]
 23280  019C52  0EFC               	movlw	-4
 23281  019C54  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23282  019C5A  0EFD               	movlw	-3
 23283  019C5C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23284  019C62  0EFE               	movlw	-2
 23285  019C64  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23286  019C6A  0EFF               	movlw	-1
 23287  019C6C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23288                           
 23289                           ;stkvar	_u @ sp[(-4)+0]
 23290  019C72  0EFF               	movlw	-1
 23291  019C74  9EE3               	bcf	plusw1,7,c
 23292                           
 23293                           ;stkvar	_u @ sp[(-4)+0]
 23294  019C76  0EFC               	movlw	-4
 23295  019C78  006F FF8C  F028    	movff	plusw1,btemp
 23296  019C7E  0EFD               	movlw	-3
 23297  019C80  006F FF8C  F029    	movff	plusw1,btemp+1
 23298  019C86  0EFE               	movlw	-2
 23299  019C88  006F FF8C  F02A    	movff	plusw1,btemp+2
 23300  019C8E  0EFF               	movlw	-1
 23301  019C90  006F FF8C  F02B    	movff	plusw1,btemp+3
 23302                           
 23303                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23304  019C96  0EF8               	movlw	248
 23305  019C98  26E1               	addwf	fsr1l,f,c
 23306  019C9A  0EFF               	movlw	255
 23307  019C9C  22E2               	addwfc	fsr1h,f,c
 23308  019C9E  0012               	return		;funcret
 23309  019CA0                     __end_of_fabsf:
 23310                           	opt callstack 0
 23311                           
 23312 ;; *************** function _conv_raw_result *****************
 23313 ;; Defined at:
 23314 ;;		line 95 in file "daq.c"
 23315 ;; Parameters:    Size  Location     Type
 23316 ;;  chan            1  [STACK] const enum E16582
 23317 ;;  to_what         1  [STACK] const enum E16644
 23318 ;; Auto vars:     Size  Location     Type
 23319 ;;		None
 23320 ;; Return value:  Size  Location     Type
 23321 ;;                  4  [STACK] float 
 23322 ;; Registers used:
 23323 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23324 ;; Tracked objects:
 23325 ;;		On entry : 0/39
 23326 ;;		On exit  : 0/0
 23327 ;;		Unchanged: 0/0
 23328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23333 ;;Total ram usage:        0 bytes
 23334 ;; Hardware stack levels used:    1
 23335 ;; Hardware stack levels required when called:   17
 23336 ;; This function calls:
 23337 ;;		___fldiv
 23338 ;;		___flmul
 23339 ;;		___flsub
 23340 ;;		___xxtofl
 23341 ;;		_get_raw_result
 23342 ;;		_nanf
 23343 ;; This function is called by:
 23344 ;;		_main
 23345 ;;		_convert_adc_data
 23346 ;;		_calc_ror_data
 23347 ;;		_init_bsoc
 23348 ;;		_esr_check
 23349 ;; This function uses a reentrant model
 23350 ;;
 23351                           
 23352                           	psect	text94
 23353  014EB0                     __ptext94:
 23354                           	opt callstack 0
 23355  014EB0                     _conv_raw_result:
 23356                           	opt callstack 12
 23357                           
 23358                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23359                           
 23360                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23361                           ;incstack = 0
 23362  014EB0  D242               	goto	l10090
 23363  014EB2                     l10036:
 23364                           
 23365                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23366                           ;stkvar	_chan @ sp[(0)+-1]
 23367  014EB2  0EFF               	movlw	-1
 23368  014EB4  006F FF8C  F033    	movff	plusw1,btemp+11
 23369  014EBA  0E77               	movlw	119
 23370  014EBC  6E30               	movwf	(btemp+8)^0,c
 23371  014EBE  0E3C               	movlw	60
 23372  014EC0  6E31               	movwf	(btemp+9)^0,c
 23373  014EC2  2A33               	incf	(btemp+11)^0,f,c
 23374  014EC4  D003               	goto	u9074
 23375  014EC6                     u9075:
 23376  014EC6  3431               	rlcf	(btemp+9)^0,w,c
 23377  014EC8  3231               	rrcf	(btemp+9)^0,f,c
 23378  014ECA  3230               	rrcf	(btemp+8)^0,f,c
 23379  014ECC                     u9074:
 23380  014ECC  2E33               	decfsz	(btemp+11)^0,f,c
 23381  014ECE  D7FB               	goto	u9075
 23382  014ED0  B030               	btfsc	(btemp+8)^0,0,c
 23383  014ED2  D007               	goto	l10042
 23384                           
 23385                           ;daq.c: 101:    return nanf("");
 23386  014ED4  0EBB               	movlw	low (STR_65+84)
 23387  014ED6  6EE6               	movwf	postinc1,c
 23388  014ED8  0EFC               	movlw	high (STR_65+84)
 23389  014EDA  6EE6               	movwf	postinc1,c
 23390  014EDC  EC4B  F0D3         	call	_nanf	;wreg free
 23391  014EE0  D23A               	goto	l1774
 23392  014EE2                     l10042:
 23393                           
 23394                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23395                           ;stkvar	_chan @ sp[(0)+-1]
 23396  014EE2  0EFF               	movlw	-1
 23397  014EE4  006F FF8C  F033    	movff	plusw1,btemp+11
 23398  014EEA  0E03               	movlw	3
 23399  014EEC  6E30               	movwf	(btemp+8)^0,c
 23400  014EEE  0E00               	movlw	0
 23401  014EF0  6E31               	movwf	(btemp+9)^0,c
 23402  014EF2  2A33               	incf	(btemp+11)^0,f,c
 23403  014EF4  D003               	goto	u9094
 23404  014EF6                     u9095:
 23405  014EF6  3431               	rlcf	(btemp+9)^0,w,c
 23406  014EF8  3231               	rrcf	(btemp+9)^0,f,c
 23407  014EFA  3230               	rrcf	(btemp+8)^0,f,c
 23408  014EFC                     u9094:
 23409  014EFC  2E33               	decfsz	(btemp+11)^0,f,c
 23410  014EFE  D7FB               	goto	u9095
 23411  014F00  A030               	btfss	(btemp+8)^0,0,c
 23412  014F02  D0EB               	goto	l10056
 23413                           
 23414                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23415                           ;stkvar	_chan @ sp[(0)+-1]
 23416  014F04  0EFF               	movlw	-1
 23417  014F06  006F FF8C  F033    	movff	plusw1,btemp+11
 23418  014F0C  0E01               	movlw	1
 23419  014F0E  6E30               	movwf	(btemp+8)^0,c
 23420  014F10  0E00               	movlw	0
 23421  014F12  6E31               	movwf	(btemp+9)^0,c
 23422  014F14  2A33               	incf	(btemp+11)^0,f,c
 23423  014F16  D003               	goto	u9114
 23424  014F18                     u9115:
 23425  014F18  3431               	rlcf	(btemp+9)^0,w,c
 23426  014F1A  3231               	rrcf	(btemp+9)^0,f,c
 23427  014F1C  3230               	rrcf	(btemp+8)^0,f,c
 23428  014F1E                     u9114:
 23429  014F1E  2E33               	decfsz	(btemp+11)^0,f,c
 23430  014F20  D7FB               	goto	u9115
 23431  014F22  A030               	btfss	(btemp+8)^0,0,c
 23432  014F24  D06D               	goto	l10052
 23433                           
 23434                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23435  014F26  0E7B               	movlw	123
 23436  014F28  6EE6               	movwf	postinc1,c
 23437  014F2A  0E14               	movlw	20
 23438  014F2C  6EE6               	movwf	postinc1,c
 23439  014F2E  0EAE               	movlw	174
 23440  014F30  6EE6               	movwf	postinc1,c
 23441  014F32  0E3D               	movlw	61
 23442  014F34  6EE6               	movwf	postinc1,c
 23443  014F36  0060  F390  F030   	movff	_R+32,btemp+8	;volatile
 23444  014F3C  0060  F394  F031   	movff	_R+33,btemp+9	;volatile
 23445  014F42  0E00               	movlw	0
 23446  014F44  BE31               	btfsc	(btemp+9)^0,7,c
 23447  014F46  0EFF               	movlw	255
 23448  014F48  6E32               	movwf	(btemp+10)^0,c
 23449  014F4A  6E33               	movwf	(btemp+11)^0,c
 23450  014F4C  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 23451  014F52  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 23452  014F58  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 23453  014F5E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 23454  014F64  0E01               	movlw	1
 23455  014F66  6EE6               	movwf	postinc1,c
 23456  014F68  ECDA  F0BC         	call	___xxtofl	;wreg free
 23457  014F6C  0060  F0A3  FFE6   	movff	btemp,postinc1
 23458  014F72  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23459  014F78  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23460  014F7E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23461                           
 23462                           ;stkvar	_chan @ sp[(-8)+-1]
 23463  014F84  0EF7               	movlw	-9
 23464  014F86  50E3               	movf	plusw1,w,c
 23465  014F88  6EE6               	movwf	postinc1,c
 23466  014F8A  EC76  F0DA         	call	_get_raw_result	;wreg free
 23467  014F8E  0060  F0A0  F032   	movff	btemp,btemp+10
 23468  014F94  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23469  014F9A  5032               	movf	(btemp+10)^0,w,c
 23470  014F9C  6E2C               	movwf	(btemp+4)^0,c
 23471  014F9E  5033               	movf	(btemp+11)^0,w,c
 23472  014FA0  6E2D               	movwf	(btemp+5)^0,c
 23473  014FA2  6A2E               	clrf	(btemp+6)^0,c
 23474  014FA4  6A2F               	clrf	(btemp+7)^0,c
 23475  014FA6  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23476  014FAC  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23477  014FB2  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23478  014FB8  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23479  014FBE  0E00               	movlw	0
 23480  014FC0  6EE6               	movwf	postinc1,c
 23481  014FC2  ECDA  F0BC         	call	___xxtofl	;wreg free
 23482  014FC6  0060  F0A3  FFE6   	movff	btemp,postinc1
 23483  014FCC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23484  014FD2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23485  014FD8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23486  014FDE  EC41  F0D5         	call	___flsub	;wreg free
 23487  014FE2  0060  F0A3  FFE6   	movff	btemp,postinc1
 23488  014FE8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23489  014FEE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23490  014FF4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23491  014FFA  EC0F  F099         	call	___flmul	;wreg free
 23492  014FFE  D1AB               	goto	l1774
 23493  015000                     l10052:
 23494                           
 23495                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23496  015000  0E29               	movlw	41
 23497  015002  6EE6               	movwf	postinc1,c
 23498  015004  0E5C               	movlw	92
 23499  015006  6EE6               	movwf	postinc1,c
 23500  015008  0E0F               	movlw	15
 23501  01500A  6EE6               	movwf	postinc1,c
 23502  01500C  0E3D               	movlw	61
 23503  01500E  6EE6               	movwf	postinc1,c
 23504  015010  0060  F398  F030   	movff	_R+34,btemp+8	;volatile
 23505  015016  0060  F39C  F031   	movff	_R+35,btemp+9	;volatile
 23506  01501C  0E00               	movlw	0
 23507  01501E  BE31               	btfsc	(btemp+9)^0,7,c
 23508  015020  0EFF               	movlw	255
 23509  015022  6E32               	movwf	(btemp+10)^0,c
 23510  015024  6E33               	movwf	(btemp+11)^0,c
 23511  015026  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 23512  01502C  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 23513  015032  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 23514  015038  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 23515  01503E  0E01               	movlw	1
 23516  015040  6EE6               	movwf	postinc1,c
 23517  015042  ECDA  F0BC         	call	___xxtofl	;wreg free
 23518  015046  0060  F0A3  FFE6   	movff	btemp,postinc1
 23519  01504C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23520  015052  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23521  015058  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23522                           
 23523                           ;stkvar	_chan @ sp[(-8)+-1]
 23524  01505E  0EF7               	movlw	-9
 23525  015060  50E3               	movf	plusw1,w,c
 23526  015062  6EE6               	movwf	postinc1,c
 23527  015064  EC76  F0DA         	call	_get_raw_result	;wreg free
 23528  015068  0060  F0A0  F032   	movff	btemp,btemp+10
 23529  01506E  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23530  015074  5032               	movf	(btemp+10)^0,w,c
 23531  015076  6E2C               	movwf	(btemp+4)^0,c
 23532  015078  5033               	movf	(btemp+11)^0,w,c
 23533  01507A  6E2D               	movwf	(btemp+5)^0,c
 23534  01507C  6A2E               	clrf	(btemp+6)^0,c
 23535  01507E  6A2F               	clrf	(btemp+7)^0,c
 23536  015080  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23537  015086  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23538  01508C  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23539  015092  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23540  015098  0E00               	movlw	0
 23541  01509A  6EE6               	movwf	postinc1,c
 23542  01509C  ECDA  F0BC         	call	___xxtofl	;wreg free
 23543  0150A0  0060  F0A3  FFE6   	movff	btemp,postinc1
 23544  0150A6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23545  0150AC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23546  0150B2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23547  0150B8  EC41  F0D5         	call	___flsub	;wreg free
 23548  0150BC  0060  F0A3  FFE6   	movff	btemp,postinc1
 23549  0150C2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23550  0150C8  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23551  0150CE  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23552  0150D4  EC0F  F099         	call	___flmul	;wreg free
 23553  0150D8  D13E               	goto	l1774
 23554  0150DA                     l10056:
 23555                           
 23556                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23557                           ;stkvar	_chan @ sp[(0)+-1]
 23558  0150DA  0EFF               	movlw	-1
 23559  0150DC  006F FF8C  F033    	movff	plusw1,btemp+11
 23560  0150E2  0E00               	movlw	0
 23561  0150E4  6E30               	movwf	(btemp+8)^0,c
 23562  0150E6  0E08               	movlw	8
 23563  0150E8  6E31               	movwf	(btemp+9)^0,c
 23564  0150EA  2A33               	incf	(btemp+11)^0,f,c
 23565  0150EC  D003               	goto	u9134
 23566  0150EE                     u9135:
 23567  0150EE  3431               	rlcf	(btemp+9)^0,w,c
 23568  0150F0  3231               	rrcf	(btemp+9)^0,f,c
 23569  0150F2  3230               	rrcf	(btemp+8)^0,f,c
 23570  0150F4                     u9134:
 23571  0150F4  2E33               	decfsz	(btemp+11)^0,f,c
 23572  0150F6  D7FB               	goto	u9135
 23573  0150F8  A030               	btfss	(btemp+8)^0,0,c
 23574  0150FA  D008               	goto	l10064
 23575                           
 23576                           ;daq.c: 111:     return 25.0;
 23577  0150FC  0E00               	movlw	0
 23578  0150FE  6E28               	movwf	btemp^0,c
 23579  015100  0E00               	movlw	0
 23580  015102  6E29               	movwf	(btemp+1)^0,c
 23581  015104  0EC8               	movlw	200
 23582  015106  6E2A               	movwf	(btemp+2)^0,c
 23583  015108  0E41               	movlw	65
 23584  01510A  D113               	goto	L27
 23585  01510C                     l10064:
 23586                           
 23587                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23588  01510C  0E00               	movlw	0
 23589  01510E  6EE6               	movwf	postinc1,c
 23590  015110  0E00               	movlw	0
 23591  015112  6EE6               	movwf	postinc1,c
 23592  015114  0E7A               	movlw	122
 23593  015116  6EE6               	movwf	postinc1,c
 23594  015118  0E44               	movlw	68
 23595  01511A  6EE6               	movwf	postinc1,c
 23596  01511C  0E61               	movlw	97
 23597  01511E  6EE6               	movwf	postinc1,c
 23598  015120  0E03               	movlw	3
 23599  015122  6EE6               	movwf	postinc1,c
 23600  015124  0E84               	movlw	132
 23601  015126  6EE6               	movwf	postinc1,c
 23602  015128  0E40               	movlw	64
 23603  01512A  6EE6               	movwf	postinc1,c
 23604                           
 23605                           ;stkvar	_chan @ sp[(-8)+-1]
 23606  01512C  0EF7               	movlw	-9
 23607  01512E  50E3               	movf	plusw1,w,c
 23608  015130  6EE6               	movwf	postinc1,c
 23609  015132  EC76  F0DA         	call	_get_raw_result	;wreg free
 23610  015136  0060  F0A0  F032   	movff	btemp,btemp+10
 23611  01513C  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23612  015142  5032               	movf	(btemp+10)^0,w,c
 23613  015144  6E2C               	movwf	(btemp+4)^0,c
 23614  015146  5033               	movf	(btemp+11)^0,w,c
 23615  015148  6E2D               	movwf	(btemp+5)^0,c
 23616  01514A  6A2E               	clrf	(btemp+6)^0,c
 23617  01514C  6A2F               	clrf	(btemp+7)^0,c
 23618  01514E  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23619  015154  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23620  01515A  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23621  015160  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23622  015166  0E00               	movlw	0
 23623  015168  6EE6               	movwf	postinc1,c
 23624  01516A  ECDA  F0BC         	call	___xxtofl	;wreg free
 23625  01516E  0060  F0A3  FFE6   	movff	btemp,postinc1
 23626  015174  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23627  01517A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23628  015180  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23629  015186  EC0F  F099         	call	___flmul	;wreg free
 23630  01518A  0060  F0A3  FFE6   	movff	btemp,postinc1
 23631  015190  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23632  015196  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23633  01519C  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23634  0151A2  EC9B  F0A4         	call	___fldiv	;wreg free
 23635  0151A6  D0D7               	goto	l1774
 23636  0151A8                     l10068:
 23637                           
 23638                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23639                           ;stkvar	_chan @ sp[(0)+-1]
 23640  0151A8  0EFF               	movlw	-1
 23641  0151AA  006F FF8C  F033    	movff	plusw1,btemp+11
 23642  0151B0  0E03               	movlw	3
 23643  0151B2  6E30               	movwf	(btemp+8)^0,c
 23644  0151B4  0E00               	movlw	0
 23645  0151B6  6E31               	movwf	(btemp+9)^0,c
 23646  0151B8  2A33               	incf	(btemp+11)^0,f,c
 23647  0151BA  D003               	goto	u9154
 23648  0151BC                     u9155:
 23649  0151BC  3431               	rlcf	(btemp+9)^0,w,c
 23650  0151BE  3231               	rrcf	(btemp+9)^0,f,c
 23651  0151C0  3230               	rrcf	(btemp+8)^0,f,c
 23652  0151C2                     u9154:
 23653  0151C2  2E33               	decfsz	(btemp+11)^0,f,c
 23654  0151C4  D7FB               	goto	u9155
 23655  0151C6  B030               	btfsc	(btemp+8)^0,0,c
 23656  0151C8  D011               	goto	u9180
 23657                           
 23658                           ;stkvar	_chan @ sp[(0)+-1]
 23659  0151CA  0EFF               	movlw	-1
 23660  0151CC  006F FF8C  F033    	movff	plusw1,btemp+11
 23661  0151D2  0E00               	movlw	0
 23662  0151D4  6E30               	movwf	(btemp+8)^0,c
 23663  0151D6  0E08               	movlw	8
 23664  0151D8  6E31               	movwf	(btemp+9)^0,c
 23665  0151DA  2A33               	incf	(btemp+11)^0,f,c
 23666  0151DC  D003               	goto	u9174
 23667  0151DE                     u9175:
 23668  0151DE  3431               	rlcf	(btemp+9)^0,w,c
 23669  0151E0  3231               	rrcf	(btemp+9)^0,f,c
 23670  0151E2  3230               	rrcf	(btemp+8)^0,f,c
 23671  0151E4                     u9174:
 23672  0151E4  2E33               	decfsz	(btemp+11)^0,f,c
 23673  0151E6  D7FB               	goto	u9175
 23674  0151E8  A030               	btfss	(btemp+8)^0,0,c
 23675  0151EA  D04E               	goto	l10076
 23676  0151EC                     u9180:
 23677                           
 23678                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23679  0151EC  0E00               	movlw	0
 23680  0151EE  6EE6               	movwf	postinc1,c
 23681  0151F0  0E00               	movlw	0
 23682  0151F2  6EE6               	movwf	postinc1,c
 23683  0151F4  0E7A               	movlw	122
 23684  0151F6  6EE6               	movwf	postinc1,c
 23685  0151F8  0E44               	movlw	68
 23686  0151FA  6EE6               	movwf	postinc1,c
 23687  0151FC  0E00               	movlw	0
 23688  0151FE  6EE6               	movwf	postinc1,c
 23689  015200  0E00               	movlw	0
 23690  015202  6EE6               	movwf	postinc1,c
 23691  015204  0E20               	movlw	32
 23692  015206  6EE6               	movwf	postinc1,c
 23693  015208  0E3F               	movlw	63
 23694  01520A  6EE6               	movwf	postinc1,c
 23695                           
 23696                           ;stkvar	_chan @ sp[(-8)+-1]
 23697  01520C  0EF7               	movlw	-9
 23698  01520E  50E3               	movf	plusw1,w,c
 23699  015210  6EE6               	movwf	postinc1,c
 23700  015212  EC76  F0DA         	call	_get_raw_result	;wreg free
 23701  015216  0060  F0A0  F032   	movff	btemp,btemp+10
 23702  01521C  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23703  015222  5032               	movf	(btemp+10)^0,w,c
 23704  015224  6E2C               	movwf	(btemp+4)^0,c
 23705  015226  5033               	movf	(btemp+11)^0,w,c
 23706  015228  6E2D               	movwf	(btemp+5)^0,c
 23707  01522A  6A2E               	clrf	(btemp+6)^0,c
 23708  01522C  6A2F               	clrf	(btemp+7)^0,c
 23709  01522E  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23710  015234  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23711  01523A  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23712  015240  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23713  015246  0E00               	movlw	0
 23714  015248  6EE6               	movwf	postinc1,c
 23715  01524A  ECDA  F0BC         	call	___xxtofl	;wreg free
 23716  01524E  0060  F0A3  FFE6   	movff	btemp,postinc1
 23717  015254  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23718  01525A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23719  015260  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23720  015266  EC0F  F099         	call	___flmul	;wreg free
 23721  01526A  0060  F0A3  FFE6   	movff	btemp,postinc1
 23722  015270  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23723  015276  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23724  01527C  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23725  015282  EC9B  F0A4         	call	___fldiv	;wreg free
 23726  015286  D067               	goto	l1774
 23727  015288                     l10076:
 23728                           
 23729                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23730  015288  0E00               	movlw	0
 23731  01528A  6EE6               	movwf	postinc1,c
 23732  01528C  0E00               	movlw	0
 23733  01528E  6EE6               	movwf	postinc1,c
 23734  015290  0E7A               	movlw	122
 23735  015292  6EE6               	movwf	postinc1,c
 23736  015294  0E44               	movlw	68
 23737  015296  6EE6               	movwf	postinc1,c
 23738  015298  0E61               	movlw	97
 23739  01529A  6EE6               	movwf	postinc1,c
 23740  01529C  0E03               	movlw	3
 23741  01529E  6EE6               	movwf	postinc1,c
 23742  0152A0  0E84               	movlw	132
 23743  0152A2  6EE6               	movwf	postinc1,c
 23744  0152A4  0E40               	movlw	64
 23745  0152A6  6EE6               	movwf	postinc1,c
 23746                           
 23747                           ;stkvar	_chan @ sp[(-8)+-1]
 23748  0152A8  0EF7               	movlw	-9
 23749  0152AA  50E3               	movf	plusw1,w,c
 23750  0152AC  6EE6               	movwf	postinc1,c
 23751  0152AE  EC76  F0DA         	call	_get_raw_result	;wreg free
 23752  0152B2  0060  F0A0  F032   	movff	btemp,btemp+10
 23753  0152B8  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23754  0152BE  5032               	movf	(btemp+10)^0,w,c
 23755  0152C0  6E2C               	movwf	(btemp+4)^0,c
 23756  0152C2  5033               	movf	(btemp+11)^0,w,c
 23757  0152C4  6E2D               	movwf	(btemp+5)^0,c
 23758  0152C6  6A2E               	clrf	(btemp+6)^0,c
 23759  0152C8  6A2F               	clrf	(btemp+7)^0,c
 23760  0152CA  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23761  0152D0  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23762  0152D6  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23763  0152DC  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23764  0152E2  0E00               	movlw	0
 23765  0152E4  6EE6               	movwf	postinc1,c
 23766  0152E6  ECDA  F0BC         	call	___xxtofl	;wreg free
 23767  0152EA  0060  F0A3  FFE6   	movff	btemp,postinc1
 23768  0152F0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23769  0152F6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23770  0152FC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23771  015302  EC0F  F099         	call	___flmul	;wreg free
 23772  015306  0060  F0A3  FFE6   	movff	btemp,postinc1
 23773  01530C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23774  015312  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23775  015318  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23776  01531E  EC9B  F0A4         	call	___fldiv	;wreg free
 23777  015322  D019               	goto	l1774
 23778  015324                     l10082:
 23779                           
 23780                           ;daq.c: 124:   return 0.0;
 23781  015324  0E00               	movlw	0
 23782  015326  6E28               	movwf	btemp^0,c
 23783  015328  0E00               	movlw	0
 23784  01532A  6E29               	movwf	(btemp+1)^0,c
 23785  01532C  0E00               	movlw	0
 23786  01532E  6E2A               	movwf	(btemp+2)^0,c
 23787  015330  0E00               	movlw	0
 23788  015332                     L27:
 23789  015332  6E2B               	movwf	(btemp+3)^0,c
 23790  015334  D010               	goto	l1774
 23791  015336                     l10090:
 23792                           
 23793                           ;stkvar	_to_what @ sp[(0)+-2]
 23794  015336  0EFE               	movlw	-2
 23795  015338  50E3               	movf	plusw1,w,c
 23796  01533A  6E32               	movwf	(btemp+10)^0,c
 23797  01533C  6A33               	clrf	(btemp+11)^0,c
 23798                           
 23799                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23800                           ; Switch size 1, requested type "simple"
 23801                           ; Number of cases is 1, Range of values is 0 to 0
 23802                           ; switch strategies available:
 23803                           ; Name         Instructions Cycles
 23804                           ; simple_byte            4     3 (average)
 23805                           ;	Chosen strategy is simple_byte
 23806  01533E  5033               	movf	(btemp+11)^0,w,c
 23807  015340  0A00               	xorlw	0	; case 0
 23808  015342  A4D8               	btfss	status,2,c
 23809  015344  D7EF               	goto	l10082
 23810                           
 23811                           ; Switch size 1, requested type "simple"
 23812                           ; Number of cases is 2, Range of values is 0 to 1
 23813                           ; switch strategies available:
 23814                           ; Name         Instructions Cycles
 23815                           ; simple_byte            7     4 (average)
 23816                           ;	Chosen strategy is simple_byte
 23817  015346  5032               	movf	(btemp+10)^0,w,c
 23818  015348  0A00               	xorlw	0	; case 0
 23819  01534A  B4D8               	btfsc	status,2,c
 23820  01534C  D5B2               	goto	l10036
 23821  01534E  0A01               	xorlw	1	; case 1
 23822  015350  B4D8               	btfsc	status,2,c
 23823  015352  D72A               	goto	l10068
 23824  015354  D7E7               	goto	l10082
 23825  015356                     l1774:
 23826                           
 23827                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23828  015356  52E5               	movf	postdec1,f,c
 23829  015358  52E5               	movf	postdec1,f,c
 23830  01535A  0012               	return		;funcret
 23831  01535C                     __end_of_conv_raw_result:
 23832                           	opt callstack 0
 23833                           
 23834 ;; *************** function _nanf *****************
 23835 ;; Defined at:
 23836 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23837 ;; Parameters:    Size  Location     Type
 23838 ;;  s               2  [STACK] PTR const unsigned char 
 23839 ;;		 -> STR_102(1), STR_64(1), 
 23840 ;; Auto vars:     Size  Location     Type
 23841 ;;  u               4  [STACK] struct .
 23842 ;; Return value:  Size  Location     Type
 23843 ;;                  4  [STACK] float 
 23844 ;; Registers used:
 23845 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23846 ;; Tracked objects:
 23847 ;;		On entry : 0/39
 23848 ;;		On exit  : 0/0
 23849 ;;		Unchanged: 0/0
 23850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23855 ;;Total ram usage:        0 bytes
 23856 ;; Hardware stack levels used:    1
 23857 ;; Hardware stack levels required when called:   15
 23858 ;; This function calls:
 23859 ;;		Nothing
 23860 ;; This function is called by:
 23861 ;;		_conv_raw_result
 23862 ;; This function uses a reentrant model
 23863 ;;
 23864                           
 23865                           	psect	text95
 23866  01A696                     __ptext95:
 23867                           	opt callstack 0
 23868  01A696                     _nanf:
 23869                           	opt callstack 0
 23870                           
 23871                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23872  01A696  52E6               	movf	postinc1,f,c
 23873  01A698  52E6               	movf	postinc1,f,c
 23874  01A69A  52E6               	movf	postinc1,f,c
 23875  01A69C  52E6               	movf	postinc1,f,c
 23876                           
 23877                           ;incstack = 0
 23878  01A69E  0EFF               	movlw	255
 23879  01A6A0  6E30               	movwf	(btemp+8)^0,c
 23880  01A6A2  0EFF               	movlw	255
 23881  01A6A4  6E31               	movwf	(btemp+9)^0,c
 23882  01A6A6  0EFF               	movlw	255
 23883  01A6A8  6E32               	movwf	(btemp+10)^0,c
 23884  01A6AA  0E7F               	movlw	127
 23885  01A6AC  6E33               	movwf	(btemp+11)^0,c
 23886                           
 23887                           ;stkvar	_u @ sp[(-4)+0]
 23888  01A6AE  0EFC               	movlw	-4
 23889  01A6B0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23890  01A6B6  0EFD               	movlw	-3
 23891  01A6B8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23892  01A6BE  0EFE               	movlw	-2
 23893  01A6C0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23894  01A6C6  0EFF               	movlw	-1
 23895  01A6C8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23896                           
 23897                           ;stkvar	_u @ sp[(-4)+0]
 23898  01A6CE  0EFC               	movlw	-4
 23899  01A6D0  006F FF8C  F028    	movff	plusw1,btemp
 23900  01A6D6  0EFD               	movlw	-3
 23901  01A6D8  006F FF8C  F029    	movff	plusw1,btemp+1
 23902  01A6DE  0EFE               	movlw	-2
 23903  01A6E0  006F FF8C  F02A    	movff	plusw1,btemp+2
 23904  01A6E6  0EFF               	movlw	-1
 23905  01A6E8  006F FF8C  F02B    	movff	plusw1,btemp+3
 23906                           
 23907                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23908  01A6EE  0EFA               	movlw	250
 23909  01A6F0  26E1               	addwf	fsr1l,f,c
 23910  01A6F2  0EFF               	movlw	255
 23911  01A6F4  22E2               	addwfc	fsr1h,f,c
 23912  01A6F6  0012               	return		;funcret
 23913  01A6F8                     __end_of_nanf:
 23914                           	opt callstack 0
 23915                           
 23916 ;; *************** function _get_raw_result *****************
 23917 ;; Defined at:
 23918 ;;		line 87 in file "daq.c"
 23919 ;; Parameters:    Size  Location     Type
 23920 ;;  index           1  [STACK] const enum E16582
 23921 ;; Auto vars:     Size  Location     Type
 23922 ;;		None
 23923 ;; Return value:  Size  Location     Type
 23924 ;;                  2  [STACK] unsigned short 
 23925 ;; Registers used:
 23926 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23927 ;; Tracked objects:
 23928 ;;		On entry : 0/2
 23929 ;;		On exit  : 0/0
 23930 ;;		Unchanged: 0/0
 23931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23936 ;;Total ram usage:        0 bytes
 23937 ;; Hardware stack levels used:    1
 23938 ;; Hardware stack levels required when called:   15
 23939 ;; This function calls:
 23940 ;;		Nothing
 23941 ;; This function is called by:
 23942 ;;		_main
 23943 ;;		_conv_raw_result
 23944 ;; This function uses a reentrant model
 23945 ;;
 23946                           
 23947                           	psect	text96
 23948  01B4EC                     __ptext96:
 23949                           	opt callstack 0
 23950  01B4EC                     _get_raw_result:
 23951                           	opt callstack 13
 23952                           
 23953                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23954                           ;stkvar	_index @ sp[(0)+-1]
 23955                           
 23956                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23957                           ;incstack = 0
 23958  01B4EC  0EFF               	movlw	-1
 23959  01B4EE  50E3               	movf	plusw1,w,c
 23960  01B4F0  0D02               	mullw	2
 23961  01B4F2  50F3               	movf	243,w,c
 23962  01B4F4  0FC4               	addlw	low _R
 23963  01B4F6  6ED9               	movwf	fsr2l,c
 23964  01B4F8  6ADA               	clrf	fsr2h,c
 23965  01B4FA  006F FF78  F028    	movff	postinc2,btemp
 23966  01B500  006F FF74  F029    	movff	postdec2,btemp+1
 23967                           
 23968                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23969  01B506  52E5               	movf	postdec1,f,c
 23970  01B508  0012               	return		;funcret
 23971  01B50A                     __end_of_get_raw_result:
 23972                           	opt callstack 0
 23973                           
 23974 ;; *************** function ___xxtofl *****************
 23975 ;; Defined at:
 23976 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23977 ;; Parameters:    Size  Location     Type
 23978 ;;  sign            1  [STACK] unsigned char 
 23979 ;;  val             4  [STACK] long 
 23980 ;; Auto vars:     Size  Location     Type
 23981 ;;  arg             4  [STACK] unsigned long 
 23982 ;;  exp             1  [STACK] unsigned char 
 23983 ;; Return value:  Size  Location     Type
 23984 ;;                  4  [STACK] unsigned char 
 23985 ;; Registers used:
 23986 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23987 ;; Tracked objects:
 23988 ;;		On entry : 0/1
 23989 ;;		On exit  : 0/0
 23990 ;;		Unchanged: 0/0
 23991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23993 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23995 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23996 ;;Total ram usage:        0 bytes
 23997 ;; Hardware stack levels used:    1
 23998 ;; Hardware stack levels required when called:   15
 23999 ;; This function calls:
 24000 ;;		Nothing
 24001 ;; This function is called by:
 24002 ;;		_conv_raw_result
 24003 ;;		_init_bsoc
 24004 ;; This function uses a reentrant model
 24005 ;;
 24006                           
 24007                           	psect	text97
 24008  0179B4                     __ptext97:
 24009                           	opt callstack 0
 24010  0179B4                     ___xxtofl:
 24011                           	opt callstack 0
 24012                           
 24013                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24014  0179B4  0E05               	movlw	5
 24015  0179B6  26E1               	addwf	fsr1l,f,c
 24016  0179B8  0E00               	movlw	0
 24017  0179BA  22E2               	addwfc	fsr1h,f,c
 24018                           
 24019                           ;stkvar	_sign @ sp[(-5)+-1]
 24020                           
 24021                           ;incstack = 0
 24022  0179BC  0EFA               	movlw	-6
 24023  0179BE  50E3               	movf	plusw1,w,c
 24024  0179C0  B4D8               	btfsc	status,2,c
 24025  0179C2  D01D               	goto	l9574
 24026                           
 24027                           ;stkvar	_val @ sp[(-5)+-5]
 24028  0179C4  0EF9               	movlw	-7
 24029  0179C6  AEE3               	btfss	plusw1,7,c
 24030  0179C8  D01A               	goto	l9574
 24031                           
 24032                           ;stkvar	_val @ sp[(-5)+-5]
 24033  0179CA  0EF6               	movlw	-10
 24034  0179CC  006F FF8C  F030    	movff	plusw1,btemp+8
 24035  0179D2  0EF7               	movlw	-9
 24036  0179D4  006F FF8C  F031    	movff	plusw1,btemp+9
 24037  0179DA  0EF8               	movlw	-8
 24038  0179DC  006F FF8C  F032    	movff	plusw1,btemp+10
 24039  0179E2  0EF9               	movlw	-7
 24040  0179E4  006F FF8C  F033    	movff	plusw1,btemp+11
 24041  0179EA  1E30               	comf	(btemp+8)^0,f,c
 24042  0179EC  1E31               	comf	(btemp+9)^0,f,c
 24043  0179EE  1E32               	comf	(btemp+10)^0,f,c
 24044  0179F0  1E33               	comf	(btemp+11)^0,f,c
 24045  0179F2  2A30               	incf	(btemp+8)^0,f,c
 24046  0179F4  0E00               	movlw	0
 24047  0179F6  2231               	addwfc	(btemp+9)^0,f,c
 24048  0179F8  2232               	addwfc	(btemp+10)^0,f,c
 24049  0179FA  2233               	addwfc	(btemp+11)^0,f,c
 24050  0179FC  D010               	goto	L28
 24051  0179FE                     l9574:
 24052                           
 24053                           ;stkvar	_val @ sp[(-5)+-5]
 24054  0179FE  0EF6               	movlw	-10
 24055  017A00  006F FF8C  F030    	movff	plusw1,btemp+8
 24056  017A06  0EF7               	movlw	-9
 24057  017A08  006F FF8C  F031    	movff	plusw1,btemp+9
 24058  017A0E  0EF8               	movlw	-8
 24059  017A10  006F FF8C  F032    	movff	plusw1,btemp+10
 24060  017A16  0EF9               	movlw	-7
 24061  017A18  006F FF8C  F033    	movff	plusw1,btemp+11
 24062  017A1E                     L28:
 24063                           
 24064                           ;stkvar	_arg @ sp[(-5)+0]
 24065  017A1E  0EFB               	movlw	-5
 24066  017A20  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24067  017A26  0EFC               	movlw	-4
 24068  017A28  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24069  017A2E  0EFD               	movlw	-3
 24070  017A30  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24071  017A36  0EFE               	movlw	-2
 24072  017A38  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24073                           
 24074                           ;stkvar	_val @ sp[(-5)+-5]
 24075  017A3E  0EF6               	movlw	-10
 24076  017A40  50E3               	movf	plusw1,w,c
 24077  017A42  E113               	bnz	l9582
 24078  017A44  0EF7               	movlw	-9
 24079  017A46  50E3               	movf	plusw1,w,c
 24080  017A48  E110               	bnz	l9582
 24081  017A4A  0EF8               	movlw	-8
 24082  017A4C  50E3               	movf	plusw1,w,c
 24083  017A4E  E10D               	bnz	l9582
 24084  017A50  0EF9               	movlw	-7
 24085  017A52  50E3               	movf	plusw1,w,c
 24086  017A54  A4D8               	btfss	status,2,c
 24087  017A56  D009               	goto	l9582
 24088  017A58  0E00               	movlw	0
 24089  017A5A  6E28               	movwf	btemp^0,c
 24090  017A5C  0E00               	movlw	0
 24091  017A5E  6E29               	movwf	(btemp+1)^0,c
 24092  017A60  0E00               	movlw	0
 24093  017A62  6E2A               	movwf	(btemp+2)^0,c
 24094  017A64  0E00               	movlw	0
 24095  017A66  6E2B               	movwf	(btemp+3)^0,c
 24096  017A68  D0A2               	goto	l3021
 24097  017A6A                     l9582:
 24098  017A6A  0E96               	movlw	150
 24099  017A6C  6E33               	movwf	(btemp+11)^0,c
 24100                           
 24101                           ;stkvar	_exp @ sp[(-5)+4]
 24102  017A6E  0EFF               	movlw	-1
 24103  017A70  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24104  017A76  D00B               	goto	l9586
 24105  017A78                     l9584:
 24106                           
 24107                           ;stkvar	_exp @ sp[(-5)+4]
 24108  017A78  0EFF               	movlw	-1
 24109  017A7A  2AE3               	incf	plusw1,f,c
 24110                           
 24111                           ;stkvar	_arg @ sp[(-5)+0]
 24112  017A7C  90D8               	bcf	status,0,c
 24113  017A7E  0EFE               	movlw	-2
 24114  017A80  32E3               	rrcf	plusw1,f,c
 24115  017A82  0EFD               	movlw	-3
 24116  017A84  32E3               	rrcf	plusw1,f,c
 24117  017A86  0EFC               	movlw	-4
 24118  017A88  32E3               	rrcf	plusw1,f,c
 24119  017A8A  0EFB               	movlw	-5
 24120  017A8C  32E3               	rrcf	plusw1,f,c
 24121  017A8E                     l9586:
 24122                           
 24123                           ;stkvar	_arg @ sp[(-5)+0]
 24124  017A8E  50E1               	movf	fsr1l,w,c
 24125  017A90  0FFB               	addlw	-5
 24126  017A92  6ED9               	movwf	fsr2l,c
 24127  017A94  50E2               	movf	fsr1h,w,c
 24128  017A96  6EDA               	movwf	fsr2h,c
 24129  017A98  0EFF               	movlw	255
 24130  017A9A  22DA               	addwfc	fsr2h,f,c
 24131  017A9C  52DE               	movf	postinc2,f,c
 24132  017A9E  52DE               	movf	postinc2,f,c
 24133  017AA0  52DE               	movf	postinc2,f,c
 24134  017AA2  0EFE               	movlw	254
 24135  017AA4  14DD               	andwf	postdec2,w,c
 24136  017AA6  B4D8               	btfsc	status,2,c
 24137  017AA8  D018               	goto	l9594
 24138  017AAA  D7E6               	goto	l9584
 24139  017AAC                     l9588:
 24140                           
 24141                           ;stkvar	_exp @ sp[(-5)+4]
 24142  017AAC  0EFF               	movlw	-1
 24143  017AAE  2AE3               	incf	plusw1,f,c
 24144                           
 24145                           ;stkvar	_arg @ sp[(-5)+0]
 24146  017AB0  50E1               	movf	fsr1l,w,c
 24147  017AB2  0FFB               	addlw	-5
 24148  017AB4  6ED9               	movwf	fsr2l,c
 24149  017AB6  50E2               	movf	fsr1h,w,c
 24150  017AB8  6EDA               	movwf	fsr2h,c
 24151  017ABA  0EFF               	movlw	255
 24152  017ABC  22DA               	addwfc	fsr2h,f,c
 24153  017ABE  2ADE               	incf	postinc2,f,c
 24154  017AC0  0E00               	movlw	0
 24155  017AC2  22DE               	addwfc	postinc2,f,c
 24156  017AC4  22DE               	addwfc	postinc2,f,c
 24157  017AC6  22DE               	addwfc	postinc2,f,c
 24158                           
 24159                           ;stkvar	_arg @ sp[(-5)+0]
 24160  017AC8  90D8               	bcf	status,0,c
 24161  017ACA  0EFE               	movlw	-2
 24162  017ACC  32E3               	rrcf	plusw1,f,c
 24163  017ACE  0EFD               	movlw	-3
 24164  017AD0  32E3               	rrcf	plusw1,f,c
 24165  017AD2  0EFC               	movlw	-4
 24166  017AD4  32E3               	rrcf	plusw1,f,c
 24167  017AD6  0EFB               	movlw	-5
 24168  017AD8  32E3               	rrcf	plusw1,f,c
 24169  017ADA                     l9594:
 24170                           
 24171                           ;stkvar	_arg @ sp[(-5)+0]
 24172  017ADA  50E1               	movf	fsr1l,w,c
 24173  017ADC  0FFB               	addlw	-5
 24174  017ADE  6ED9               	movwf	fsr2l,c
 24175  017AE0  50E2               	movf	fsr1h,w,c
 24176  017AE2  6EDA               	movwf	fsr2h,c
 24177  017AE4  0EFF               	movlw	255
 24178  017AE6  22DA               	addwfc	fsr2h,f,c
 24179  017AE8  52DE               	movf	postinc2,f,c
 24180  017AEA  52DE               	movf	postinc2,f,c
 24181  017AEC  52DE               	movf	postinc2,f,c
 24182  017AEE  0EFF               	movlw	255
 24183  017AF0  14DD               	andwf	postdec2,w,c
 24184  017AF2  B4D8               	btfsc	status,2,c
 24185  017AF4  D00C               	goto	l9598
 24186  017AF6  D7DA               	goto	l9588
 24187  017AF8                     l9596:
 24188                           
 24189                           ;stkvar	_exp @ sp[(-5)+4]
 24190  017AF8  0EFF               	movlw	-1
 24191  017AFA  06E3               	decf	plusw1,f,c
 24192                           
 24193                           ;stkvar	_arg @ sp[(-5)+0]
 24194  017AFC  90D8               	bcf	status,0,c
 24195  017AFE  0EFB               	movlw	-5
 24196  017B00  36E3               	rlcf	plusw1,f,c
 24197  017B02  0EFC               	movlw	-4
 24198  017B04  36E3               	rlcf	plusw1,f,c
 24199  017B06  0EFD               	movlw	-3
 24200  017B08  36E3               	rlcf	plusw1,f,c
 24201  017B0A  0EFE               	movlw	-2
 24202  017B0C  36E3               	rlcf	plusw1,f,c
 24203  017B0E                     l9598:
 24204                           
 24205                           ;stkvar	_arg @ sp[(-5)+0]
 24206  017B0E  0EFD               	movlw	-3
 24207  017B10  BEE3               	btfsc	plusw1,7,c
 24208  017B12  D007               	goto	u8920
 24209                           
 24210                           ;stkvar	_exp @ sp[(-5)+4]
 24211  017B14  0EFF               	movlw	-1
 24212  017B16  006F FF8C  F028    	movff	plusw1,btemp
 24213  017B1C  0E02               	movlw	2
 24214  017B1E  6028               	cpfslt	btemp^0,c
 24215  017B20  D7EB               	goto	l9596
 24216  017B22                     u8920:
 24217                           
 24218                           ;stkvar	_exp @ sp[(-5)+4]
 24219  017B22  0EFF               	movlw	-1
 24220  017B24  B0E3               	btfsc	plusw1,0,c
 24221  017B26  D002               	goto	l9606
 24222                           
 24223                           ;stkvar	_arg @ sp[(-5)+0]
 24224  017B28  0EFD               	movlw	-3
 24225  017B2A  9EE3               	bcf	plusw1,7,c
 24226  017B2C                     l9606:
 24227                           
 24228                           ;stkvar	_exp @ sp[(-5)+4]
 24229  017B2C  50E1               	movf	fsr1l,w,c
 24230  017B2E  0FFF               	addlw	-1
 24231  017B30  6ED9               	movwf	fsr2l,c
 24232  017B32  50E2               	movf	fsr1h,w,c
 24233  017B34  6EDA               	movwf	fsr2h,c
 24234  017B36  0EFF               	movlw	255
 24235  017B38  22DA               	addwfc	fsr2h,f,c
 24236  017B3A  90D8               	bcf	status,0,c
 24237  017B3C  32DF               	rrcf	indf2,f,c
 24238                           
 24239                           ;stkvar	_exp @ sp[(-5)+4]
 24240  017B3E  0EFF               	movlw	-1
 24241  017B40  006F FF8C  F033    	movff	plusw1,btemp+11
 24242  017B46  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 24243  017B4C  6A2D               	clrf	(btemp+5)^0,c
 24244  017B4E  6A2E               	clrf	(btemp+6)^0,c
 24245  017B50  6A2F               	clrf	(btemp+7)^0,c
 24246  017B52  0060  F0B0  F02F   	movff	btemp+4,btemp+7
 24247  017B58  6A2E               	clrf	(btemp+6)^0,c
 24248  017B5A  6A2D               	clrf	(btemp+5)^0,c
 24249  017B5C  6A2C               	clrf	(btemp+4)^0,c
 24250                           
 24251                           ;stkvar	_arg @ sp[(-5)+0]
 24252  017B5E  50E1               	movf	fsr1l,w,c
 24253  017B60  0FFB               	addlw	-5
 24254  017B62  6ED9               	movwf	fsr2l,c
 24255  017B64  50E2               	movf	fsr1h,w,c
 24256  017B66  6EDA               	movwf	fsr2h,c
 24257  017B68  0EFF               	movlw	255
 24258  017B6A  22DA               	addwfc	fsr2h,f,c
 24259  017B6C  502C               	movf	(btemp+4)^0,w,c
 24260  017B6E  12DE               	iorwf	postinc2,f,c
 24261  017B70  502D               	movf	(btemp+5)^0,w,c
 24262  017B72  12DE               	iorwf	postinc2,f,c
 24263  017B74  502E               	movf	(btemp+6)^0,w,c
 24264  017B76  12DE               	iorwf	postinc2,f,c
 24265  017B78  502F               	movf	(btemp+7)^0,w,c
 24266  017B7A  12DE               	iorwf	postinc2,f,c
 24267                           
 24268                           ;stkvar	_sign @ sp[(-5)+-1]
 24269  017B7C  0EFA               	movlw	-6
 24270  017B7E  50E3               	movf	plusw1,w,c
 24271  017B80  B4D8               	btfsc	status,2,c
 24272  017B82  D005               	goto	l9616
 24273                           
 24274                           ;stkvar	_val @ sp[(-5)+-5]
 24275  017B84  0EF9               	movlw	-7
 24276  017B86  AEE3               	btfss	plusw1,7,c
 24277  017B88  D002               	goto	l9616
 24278                           
 24279                           ;stkvar	_arg @ sp[(-5)+0]
 24280  017B8A  0EFE               	movlw	-2
 24281  017B8C  8EE3               	bsf	plusw1,7,c
 24282  017B8E                     l9616:
 24283                           
 24284                           ;stkvar	_arg @ sp[(-5)+0]
 24285  017B8E  0EFB               	movlw	-5
 24286  017B90  006F FF8C  F028    	movff	plusw1,btemp
 24287  017B96  0EFC               	movlw	-4
 24288  017B98  006F FF8C  F029    	movff	plusw1,btemp+1
 24289  017B9E  0EFD               	movlw	-3
 24290  017BA0  006F FF8C  F02A    	movff	plusw1,btemp+2
 24291  017BA6  0EFE               	movlw	-2
 24292  017BA8  006F FF8C  F02B    	movff	plusw1,btemp+3
 24293  017BAE                     l3021:
 24294                           
 24295                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24296  017BAE  0EF6               	movlw	246
 24297  017BB0  26E1               	addwf	fsr1l,f,c
 24298  017BB2  0EFF               	movlw	255
 24299  017BB4  22E2               	addwfc	fsr1h,f,c
 24300  017BB6  0012               	return		;funcret
 24301  017BB8                     __end_of___xxtofl:
 24302                           	opt callstack 0
 24303                           
 24304 ;; *************** function ___fldiv *****************
 24305 ;; Defined at:
 24306 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24307 ;; Parameters:    Size  Location     Type
 24308 ;;  b               4  [STACK] unsigned char 
 24309 ;;  a               4  [STACK] unsigned char 
 24310 ;; Auto vars:     Size  Location     Type
 24311 ;;  grs             4  [STACK] unsigned long 
 24312 ;;  rem             4  [STACK] unsigned long 
 24313 ;;  new_exp         2  [STACK] short 
 24314 ;;  aexp            1  [STACK] unsigned char 
 24315 ;;  bexp            1  [STACK] unsigned char 
 24316 ;;  sign            1  [STACK] unsigned char 
 24317 ;; Return value:  Size  Location     Type
 24318 ;;                  4  [STACK] unsigned char 
 24319 ;; Registers used:
 24320 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24321 ;; Tracked objects:
 24322 ;;		On entry : 0/1
 24323 ;;		On exit  : 0/0
 24324 ;;		Unchanged: 0/0
 24325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24330 ;;Total ram usage:        0 bytes
 24331 ;; Hardware stack levels used:    1
 24332 ;; Hardware stack levels required when called:   15
 24333 ;; This function calls:
 24334 ;;		Nothing
 24335 ;; This function is called by:
 24336 ;;		_conv_raw_result
 24337 ;;		_calc_bsoc
 24338 ;;		_init_bsoc
 24339 ;;		_esr_check
 24340 ;;		_efgtoa
 24341 ;; This function uses a reentrant model
 24342 ;;
 24343                           
 24344                           	psect	text98
 24345  014936                     __ptext98:
 24346                           	opt callstack 0
 24347  014936                     ___fldiv:
 24348                           	opt callstack 0
 24349                           
 24350                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24351  014936  0E0D               	movlw	13
 24352  014938  26E1               	addwf	fsr1l,f,c
 24353  01493A  0E00               	movlw	0
 24354  01493C  22E2               	addwfc	fsr1h,f,c
 24355                           
 24356                           ;stkvar	_b @ sp[(-13)+-4]
 24357                           
 24358                           ;incstack = 0
 24359 ;; hardware stack exceeded
 24360  01493E  0EF2               	movlw	242
 24361  014940  24E1               	addwf	fsr1l,w,c
 24362  014942  6ED9               	movwf	fsr2l,c
 24363  014944  0EFF               	movlw	255
 24364  014946  20E2               	addwfc	fsr1h,w,c
 24365  014948  6EDA               	movwf	fsr2h,c
 24366  01494A  50DF               	movf	indf2,w,c
 24367  01494C  6E33               	movwf	(btemp+11)^0,c
 24368  01494E  0E80               	movlw	128
 24369  014950  1633               	andwf	(btemp+11)^0,f,c
 24370                           
 24371                           ;stkvar	_sign @ sp[(-13)+12]
 24372  014952  0EFF               	movlw	-1
 24373  014954  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24374                           
 24375                           ;stkvar	_b @ sp[(-13)+-4]
 24376  01495A  0EF2               	movlw	242
 24377  01495C  24E1               	addwf	fsr1l,w,c
 24378  01495E  6ED9               	movwf	fsr2l,c
 24379  014960  0EFF               	movlw	255
 24380  014962  20E2               	addwfc	fsr1h,w,c
 24381  014964  6EDA               	movwf	fsr2h,c
 24382  014966  50DF               	movf	indf2,w,c
 24383  014968  6E33               	movwf	(btemp+11)^0,c
 24384  01496A  90D8               	bcf	status,0,c
 24385  01496C  3433               	rlcf	(btemp+11)^0,w,c
 24386  01496E  6E32               	movwf	(btemp+10)^0,c
 24387                           
 24388                           ;stkvar	_bexp @ sp[(-13)+11]
 24389  014970  0EFE               	movlw	-2
 24390  014972  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24391                           
 24392                           ;stkvar	_b @ sp[(-13)+-4]
 24393  014978  0EF1               	movlw	241
 24394  01497A  24E1               	addwf	fsr1l,w,c
 24395  01497C  6ED9               	movwf	fsr2l,c
 24396  01497E  0EFF               	movlw	255
 24397  014980  20E2               	addwfc	fsr1h,w,c
 24398  014982  6EDA               	movwf	fsr2h,c
 24399  014984  AEDF               	btfss	indf2,7,c
 24400  014986  D002               	goto	l7938
 24401                           
 24402                           ;stkvar	_bexp @ sp[(-13)+11]
 24403  014988  0EFE               	movlw	-2
 24404  01498A  80E3               	bsf	plusw1,0,c
 24405  01498C                     l7938:
 24406                           
 24407                           ;stkvar	_bexp @ sp[(-13)+11]
 24408  01498C  0EFE               	movlw	-2
 24409  01498E  50E3               	movf	plusw1,w,c
 24410  014990  B4D8               	btfsc	status,2,c
 24411  014992  D027               	goto	l7948
 24412                           
 24413                           ;stkvar	_bexp @ sp[(-13)+11]
 24414  014994  0EFE               	movlw	-2
 24415  014996  28E3               	incf	plusw1,w,c
 24416  014998  A4D8               	btfss	status,2,c
 24417  01499A  D018               	goto	l7944
 24418  01499C  0E00               	movlw	0
 24419  01499E  6E30               	movwf	(btemp+8)^0,c
 24420  0149A0  0E00               	movlw	0
 24421  0149A2  6E31               	movwf	(btemp+9)^0,c
 24422  0149A4  0E00               	movlw	0
 24423  0149A6  6E32               	movwf	(btemp+10)^0,c
 24424  0149A8  0E00               	movlw	0
 24425  0149AA  6E33               	movwf	(btemp+11)^0,c
 24426                           
 24427                           ;stkvar	_b @ sp[(-13)+-4]
 24428  0149AC  0EEF               	movlw	-17
 24429  0149AE  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24430  0149B4  0EF0               	movlw	-16
 24431  0149B6  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24432  0149BC  0EF1               	movlw	-15
 24433  0149BE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24434  0149C4  0EF2               	movlw	-14
 24435  0149C6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24436  0149CC                     l7944:
 24437                           
 24438                           ;stkvar	_b @ sp[(-13)+-4]
 24439  0149CC  0EF1               	movlw	-15
 24440  0149CE  8EE3               	bsf	plusw1,7,c
 24441                           
 24442                           ;stkvar	_b @ sp[(-13)+-4]
 24443  0149D0  0EF2               	movlw	242
 24444  0149D2  24E1               	addwf	fsr1l,w,c
 24445  0149D4  6ED9               	movwf	fsr2l,c
 24446  0149D6  0EFF               	movlw	255
 24447  0149D8  20E2               	addwfc	fsr1h,w,c
 24448  0149DA  6EDA               	movwf	fsr2h,c
 24449  0149DC  0E00               	movlw	0
 24450  0149DE  6EDF               	movwf	indf2,c
 24451  0149E0  D018               	goto	l7950
 24452  0149E2                     l7948:
 24453  0149E2  0E00               	movlw	0
 24454  0149E4  6E30               	movwf	(btemp+8)^0,c
 24455  0149E6  0E00               	movlw	0
 24456  0149E8  6E31               	movwf	(btemp+9)^0,c
 24457  0149EA  0E00               	movlw	0
 24458  0149EC  6E32               	movwf	(btemp+10)^0,c
 24459  0149EE  0E00               	movlw	0
 24460  0149F0  6E33               	movwf	(btemp+11)^0,c
 24461                           
 24462                           ;stkvar	_b @ sp[(-13)+-4]
 24463  0149F2  0EEF               	movlw	-17
 24464  0149F4  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24465  0149FA  0EF0               	movlw	-16
 24466  0149FC  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24467  014A02  0EF1               	movlw	-15
 24468  014A04  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24469  014A0A  0EF2               	movlw	-14
 24470  014A0C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24471  014A12                     l7950:
 24472                           
 24473                           ;stkvar	_a @ sp[(-13)+-8]
 24474  014A12  0EEE               	movlw	238
 24475  014A14  24E1               	addwf	fsr1l,w,c
 24476  014A16  6ED9               	movwf	fsr2l,c
 24477  014A18  0EFF               	movlw	255
 24478  014A1A  20E2               	addwfc	fsr1h,w,c
 24479  014A1C  6EDA               	movwf	fsr2h,c
 24480  014A1E  50DF               	movf	indf2,w,c
 24481  014A20  6E33               	movwf	(btemp+11)^0,c
 24482  014A22  0E80               	movlw	128
 24483  014A24  1633               	andwf	(btemp+11)^0,f,c
 24484                           
 24485                           ;stkvar	_sign @ sp[(-13)+12]
 24486  014A26  50E1               	movf	fsr1l,w,c
 24487  014A28  0FFF               	addlw	-1
 24488  014A2A  6ED9               	movwf	fsr2l,c
 24489  014A2C  50E2               	movf	fsr1h,w,c
 24490  014A2E  6EDA               	movwf	fsr2h,c
 24491  014A30  0EFF               	movlw	255
 24492  014A32  22DA               	addwfc	fsr2h,f,c
 24493  014A34  5033               	movf	(btemp+11)^0,w,c
 24494  014A36  1ADF               	xorwf	indf2,f,c
 24495                           
 24496                           ;stkvar	_a @ sp[(-13)+-8]
 24497  014A38  0EEE               	movlw	238
 24498  014A3A  24E1               	addwf	fsr1l,w,c
 24499  014A3C  6ED9               	movwf	fsr2l,c
 24500  014A3E  0EFF               	movlw	255
 24501  014A40  20E2               	addwfc	fsr1h,w,c
 24502  014A42  6EDA               	movwf	fsr2h,c
 24503  014A44  50DF               	movf	indf2,w,c
 24504  014A46  6E33               	movwf	(btemp+11)^0,c
 24505  014A48  90D8               	bcf	status,0,c
 24506  014A4A  3433               	rlcf	(btemp+11)^0,w,c
 24507  014A4C  6E32               	movwf	(btemp+10)^0,c
 24508                           
 24509                           ;stkvar	_aexp @ sp[(-13)+10]
 24510  014A4E  0EFD               	movlw	-3
 24511  014A50  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24512                           
 24513                           ;stkvar	_a @ sp[(-13)+-8]
 24514  014A56  0EED               	movlw	237
 24515  014A58  24E1               	addwf	fsr1l,w,c
 24516  014A5A  6ED9               	movwf	fsr2l,c
 24517  014A5C  0EFF               	movlw	255
 24518  014A5E  20E2               	addwfc	fsr1h,w,c
 24519  014A60  6EDA               	movwf	fsr2h,c
 24520  014A62  AEDF               	btfss	indf2,7,c
 24521  014A64  D002               	goto	l7958
 24522                           
 24523                           ;stkvar	_aexp @ sp[(-13)+10]
 24524  014A66  0EFD               	movlw	-3
 24525  014A68  80E3               	bsf	plusw1,0,c
 24526  014A6A                     l7958:
 24527                           
 24528                           ;stkvar	_aexp @ sp[(-13)+10]
 24529  014A6A  0EFD               	movlw	-3
 24530  014A6C  50E3               	movf	plusw1,w,c
 24531  014A6E  B4D8               	btfsc	status,2,c
 24532  014A70  D027               	goto	l7968
 24533                           
 24534                           ;stkvar	_aexp @ sp[(-13)+10]
 24535  014A72  0EFD               	movlw	-3
 24536  014A74  28E3               	incf	plusw1,w,c
 24537  014A76  A4D8               	btfss	status,2,c
 24538  014A78  D018               	goto	l7964
 24539  014A7A  0E00               	movlw	0
 24540  014A7C  6E30               	movwf	(btemp+8)^0,c
 24541  014A7E  0E00               	movlw	0
 24542  014A80  6E31               	movwf	(btemp+9)^0,c
 24543  014A82  0E00               	movlw	0
 24544  014A84  6E32               	movwf	(btemp+10)^0,c
 24545  014A86  0E00               	movlw	0
 24546  014A88  6E33               	movwf	(btemp+11)^0,c
 24547                           
 24548                           ;stkvar	_a @ sp[(-13)+-8]
 24549  014A8A  0EEB               	movlw	-21
 24550  014A8C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24551  014A92  0EEC               	movlw	-20
 24552  014A94  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24553  014A9A  0EED               	movlw	-19
 24554  014A9C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24555  014AA2  0EEE               	movlw	-18
 24556  014AA4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24557  014AAA                     l7964:
 24558                           
 24559                           ;stkvar	_a @ sp[(-13)+-8]
 24560  014AAA  0EED               	movlw	-19
 24561  014AAC  8EE3               	bsf	plusw1,7,c
 24562                           
 24563                           ;stkvar	_a @ sp[(-13)+-8]
 24564  014AAE  0EEE               	movlw	238
 24565  014AB0  24E1               	addwf	fsr1l,w,c
 24566  014AB2  6ED9               	movwf	fsr2l,c
 24567  014AB4  0EFF               	movlw	255
 24568  014AB6  20E2               	addwfc	fsr1h,w,c
 24569  014AB8  6EDA               	movwf	fsr2h,c
 24570  014ABA  0E00               	movlw	0
 24571  014ABC  6EDF               	movwf	indf2,c
 24572  014ABE  D018               	goto	l7970
 24573  014AC0                     l7968:
 24574  014AC0  0E00               	movlw	0
 24575  014AC2  6E30               	movwf	(btemp+8)^0,c
 24576  014AC4  0E00               	movlw	0
 24577  014AC6  6E31               	movwf	(btemp+9)^0,c
 24578  014AC8  0E00               	movlw	0
 24579  014ACA  6E32               	movwf	(btemp+10)^0,c
 24580  014ACC  0E00               	movlw	0
 24581  014ACE  6E33               	movwf	(btemp+11)^0,c
 24582                           
 24583                           ;stkvar	_a @ sp[(-13)+-8]
 24584  014AD0  0EEB               	movlw	-21
 24585  014AD2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24586  014AD8  0EEC               	movlw	-20
 24587  014ADA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24588  014AE0  0EED               	movlw	-19
 24589  014AE2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24590  014AE8  0EEE               	movlw	-18
 24591  014AEA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24592  014AF0                     l7970:
 24593                           
 24594                           ;stkvar	_a @ sp[(-13)+-8]
 24595  014AF0  0EEB               	movlw	-21
 24596  014AF2  50E3               	movf	plusw1,w,c
 24597  014AF4  E139               	bnz	l7982
 24598  014AF6  0EEC               	movlw	-20
 24599  014AF8  50E3               	movf	plusw1,w,c
 24600  014AFA  E136               	bnz	l7982
 24601  014AFC  0EED               	movlw	-19
 24602  014AFE  50E3               	movf	plusw1,w,c
 24603  014B00  E133               	bnz	l7982
 24604  014B02  0EEE               	movlw	-18
 24605  014B04  50E3               	movf	plusw1,w,c
 24606  014B06  A4D8               	btfss	status,2,c
 24607  014B08  D02F               	goto	l7982
 24608                           
 24609                           ;stkvar	_b @ sp[(-13)+-4]
 24610  014B0A  0EEF               	movlw	-17
 24611  014B0C  6AE3               	clrf	plusw1,c
 24612  014B0E  0EF0               	movlw	-16
 24613  014B10  6AE3               	clrf	plusw1,c
 24614  014B12  0EF1               	movlw	-15
 24615  014B14  6AE3               	clrf	plusw1,c
 24616  014B16  0EF2               	movlw	-14
 24617  014B18  6AE3               	clrf	plusw1,c
 24618                           
 24619                           ;stkvar	_b @ sp[(-13)+-4]
 24620  014B1A  0EF1               	movlw	241
 24621  014B1C  24E1               	addwf	fsr1l,w,c
 24622  014B1E  6ED9               	movwf	fsr2l,c
 24623  014B20  0EFF               	movlw	255
 24624  014B22  20E2               	addwfc	fsr1h,w,c
 24625  014B24  6EDA               	movwf	fsr2h,c
 24626  014B26  0E80               	movlw	128
 24627  014B28  12DE               	iorwf	postinc2,f,c
 24628  014B2A  0E7F               	movlw	127
 24629  014B2C  12DD               	iorwf	postdec2,f,c
 24630  014B2E                     l7976:
 24631                           
 24632                           ;stkvar	_sign @ sp[(-13)+12]
 24633  014B2E  0EFF               	movlw	-1
 24634  014B30  006F FF8C  F033    	movff	plusw1,btemp+11
 24635                           
 24636                           ;stkvar	_b @ sp[(-13)+-4]
 24637  014B36  0EF2               	movlw	242
 24638  014B38  24E1               	addwf	fsr1l,w,c
 24639  014B3A  6ED9               	movwf	fsr2l,c
 24640  014B3C  0EFF               	movlw	255
 24641  014B3E  20E2               	addwfc	fsr1h,w,c
 24642  014B40  6EDA               	movwf	fsr2h,c
 24643  014B42  5033               	movf	(btemp+11)^0,w,c
 24644  014B44  12DF               	iorwf	indf2,f,c
 24645                           
 24646                           ;stkvar	_b @ sp[(-13)+-4]
 24647  014B46  0EEF               	movlw	-17
 24648  014B48  006F FF8C  F028    	movff	plusw1,btemp
 24649  014B4E  0EF0               	movlw	-16
 24650  014B50  006F FF8C  F029    	movff	plusw1,btemp+1
 24651  014B56  0EF1               	movlw	-15
 24652  014B58  006F FF8C  F02A    	movff	plusw1,btemp+2
 24653  014B5E  0EF2               	movlw	-14
 24654  014B60  006F FF8C  F02B    	movff	plusw1,btemp+3
 24655  014B66  D19F               	goto	l2945
 24656  014B68                     l7982:
 24657                           
 24658                           ;stkvar	_bexp @ sp[(-13)+11]
 24659  014B68  0EFE               	movlw	-2
 24660  014B6A  50E3               	movf	plusw1,w,c
 24661  014B6C  A4D8               	btfss	status,2,c
 24662  014B6E  D009               	goto	l7990
 24663  014B70  0E00               	movlw	0
 24664  014B72  6E28               	movwf	btemp^0,c
 24665  014B74  0E00               	movlw	0
 24666  014B76  6E29               	movwf	(btemp+1)^0,c
 24667  014B78  0E00               	movlw	0
 24668  014B7A  6E2A               	movwf	(btemp+2)^0,c
 24669  014B7C  0E00               	movlw	0
 24670  014B7E  6E2B               	movwf	(btemp+3)^0,c
 24671  014B80  D192               	goto	l2945
 24672  014B82                     l7990:
 24673                           
 24674                           ;stkvar	_bexp @ sp[(-13)+11]
 24675  014B82  0EFE               	movlw	-2
 24676  014B84  50E3               	movf	plusw1,w,c
 24677  014B86  6E32               	movwf	(btemp+10)^0,c
 24678  014B88  6A33               	clrf	(btemp+11)^0,c
 24679                           
 24680                           ;stkvar	_aexp @ sp[(-13)+10]
 24681  014B8A  0EFD               	movlw	-3
 24682  014B8C  50E3               	movf	plusw1,w,c
 24683  014B8E  5E32               	subwf	(btemp+10)^0,f,c
 24684  014B90  0E00               	movlw	0
 24685  014B92  5A33               	subwfb	(btemp+11)^0,f,c
 24686  014B94  0E7F               	movlw	127
 24687  014B96  2632               	addwf	(btemp+10)^0,f,c
 24688  014B98  0E00               	movlw	0
 24689  014B9A  2233               	addwfc	(btemp+11)^0,f,c
 24690                           
 24691                           ;stkvar	_new_exp @ sp[(-13)+8]
 24692  014B9C  0EFB               	movlw	-5
 24693  014B9E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24694  014BA4  0EFC               	movlw	-4
 24695  014BA6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24696                           
 24697                           ;stkvar	_b @ sp[(-13)+-4]
 24698  014BAC  0EEF               	movlw	-17
 24699  014BAE  006F FF8C  F030    	movff	plusw1,btemp+8
 24700  014BB4  0EF0               	movlw	-16
 24701  014BB6  006F FF8C  F031    	movff	plusw1,btemp+9
 24702  014BBC  0EF1               	movlw	-15
 24703  014BBE  006F FF8C  F032    	movff	plusw1,btemp+10
 24704  014BC4  0EF2               	movlw	-14
 24705  014BC6  006F FF8C  F033    	movff	plusw1,btemp+11
 24706                           
 24707                           ;stkvar	_rem @ sp[(-13)+4]
 24708  014BCC  0EF7               	movlw	-9
 24709  014BCE  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24710  014BD4  0EF8               	movlw	-8
 24711  014BD6  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24712  014BDC  0EF9               	movlw	-7
 24713  014BDE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24714  014BE4  0EFA               	movlw	-6
 24715  014BE6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24716                           
 24717                           ;stkvar	_b @ sp[(-13)+-4]
 24718  014BEC  0EEF               	movlw	-17
 24719  014BEE  6AE3               	clrf	plusw1,c
 24720  014BF0  0EF0               	movlw	-16
 24721  014BF2  6AE3               	clrf	plusw1,c
 24722  014BF4  0EF1               	movlw	-15
 24723  014BF6  6AE3               	clrf	plusw1,c
 24724  014BF8  0EF2               	movlw	-14
 24725  014BFA  6AE3               	clrf	plusw1,c
 24726                           
 24727                           ;stkvar	_grs @ sp[(-13)+0]
 24728  014BFC  0EF3               	movlw	-13
 24729  014BFE  6AE3               	clrf	plusw1,c
 24730  014C00  0EF4               	movlw	-12
 24731  014C02  6AE3               	clrf	plusw1,c
 24732  014C04  0EF5               	movlw	-11
 24733  014C06  6AE3               	clrf	plusw1,c
 24734  014C08  0EF6               	movlw	-10
 24735  014C0A  6AE3               	clrf	plusw1,c
 24736                           
 24737                           ;stkvar	_aexp @ sp[(-13)+10]
 24738  014C0C  0EFD               	movlw	-3
 24739  014C0E  6AE3               	clrf	plusw1,c
 24740  014C10  D050               	goto	l8018
 24741  014C12                     l8000:
 24742                           
 24743                           ;stkvar	_aexp @ sp[(-13)+10]
 24744  014C12  0EFD               	movlw	-3
 24745  014C14  50E3               	movf	plusw1,w,c
 24746  014C16  B4D8               	btfsc	status,2,c
 24747  014C18  D020               	goto	l8010
 24748                           
 24749                           ;stkvar	_rem @ sp[(-13)+4]
 24750  014C1A  90D8               	bcf	status,0,c
 24751  014C1C  0EF7               	movlw	-9
 24752  014C1E  36E3               	rlcf	plusw1,f,c
 24753  014C20  0EF8               	movlw	-8
 24754  014C22  36E3               	rlcf	plusw1,f,c
 24755  014C24  0EF9               	movlw	-7
 24756  014C26  36E3               	rlcf	plusw1,f,c
 24757  014C28  0EFA               	movlw	-6
 24758  014C2A  36E3               	rlcf	plusw1,f,c
 24759                           
 24760                           ;stkvar	_b @ sp[(-13)+-4]
 24761  014C2C  90D8               	bcf	status,0,c
 24762  014C2E  0EEF               	movlw	-17
 24763  014C30  36E3               	rlcf	plusw1,f,c
 24764  014C32  0EF0               	movlw	-16
 24765  014C34  36E3               	rlcf	plusw1,f,c
 24766  014C36  0EF1               	movlw	-15
 24767  014C38  36E3               	rlcf	plusw1,f,c
 24768  014C3A  0EF2               	movlw	-14
 24769  014C3C  36E3               	rlcf	plusw1,f,c
 24770                           
 24771                           ;stkvar	_grs @ sp[(-13)+0]
 24772  014C3E  0EF6               	movlw	-10
 24773  014C40  AEE3               	btfss	plusw1,7,c
 24774  014C42  D002               	goto	l8008
 24775                           
 24776                           ;stkvar	_b @ sp[(-13)+-4]
 24777  014C44  0EEF               	movlw	-17
 24778  014C46  80E3               	bsf	plusw1,0,c
 24779  014C48                     l8008:
 24780                           
 24781                           ;stkvar	_grs @ sp[(-13)+0]
 24782  014C48  90D8               	bcf	status,0,c
 24783  014C4A  0EF3               	movlw	-13
 24784  014C4C  36E3               	rlcf	plusw1,f,c
 24785  014C4E  0EF4               	movlw	-12
 24786  014C50  36E3               	rlcf	plusw1,f,c
 24787  014C52  0EF5               	movlw	-11
 24788  014C54  36E3               	rlcf	plusw1,f,c
 24789  014C56  0EF6               	movlw	-10
 24790  014C58  36E3               	rlcf	plusw1,f,c
 24791  014C5A                     l8010:
 24792                           
 24793                           ;stkvar	_a @ sp[(-13)+-8]
 24794                           ;stkvar	_rem @ sp[(-13)+4]
 24795  014C5A  50E1               	movf	fsr1l,w,c
 24796  014C5C  0FF7               	addlw	-9
 24797  014C5E  6ED9               	movwf	fsr2l,c
 24798  014C60  50E2               	movf	fsr1h,w,c
 24799  014C62  6EDA               	movwf	fsr2h,c
 24800  014C64  0EFF               	movlw	255
 24801  014C66  22DA               	addwfc	fsr2h,f,c
 24802  014C68  0EEB               	movlw	-21
 24803  014C6A  50E3               	movf	plusw1,w,c
 24804  014C6C  5CDE               	subwf	postinc2,w,c
 24805  014C6E  0EEC               	movlw	-20
 24806  014C70  50E3               	movf	plusw1,w,c
 24807  014C72  58DE               	subwfb	postinc2,w,c
 24808  014C74  0EED               	movlw	-19
 24809  014C76  50E3               	movf	plusw1,w,c
 24810  014C78  58DE               	subwfb	postinc2,w,c
 24811  014C7A  0EEE               	movlw	-18
 24812  014C7C  50E3               	movf	plusw1,w,c
 24813  014C7E  58DE               	subwfb	postinc2,w,c
 24814  014C80  A0D8               	btfss	status,0,c
 24815  014C82  D015               	goto	l8016
 24816                           
 24817                           ;stkvar	_grs @ sp[(-13)+0]
 24818  014C84  0EF6               	movlw	-10
 24819  014C86  8CE3               	bsf	plusw1,6,c
 24820                           
 24821                           ;stkvar	_a @ sp[(-13)+-8]
 24822                           ;stkvar	_rem @ sp[(-13)+4]
 24823  014C88  50E1               	movf	fsr1l,w,c
 24824  014C8A  0FF7               	addlw	-9
 24825  014C8C  6ED9               	movwf	fsr2l,c
 24826  014C8E  50E2               	movf	fsr1h,w,c
 24827  014C90  6EDA               	movwf	fsr2h,c
 24828  014C92  0EFF               	movlw	255
 24829  014C94  22DA               	addwfc	fsr2h,f,c
 24830  014C96  0EEB               	movlw	-21
 24831  014C98  50E3               	movf	plusw1,w,c
 24832  014C9A  5EDE               	subwf	postinc2,f,c
 24833  014C9C  0EEC               	movlw	-20
 24834  014C9E  50E3               	movf	plusw1,w,c
 24835  014CA0  5ADE               	subwfb	postinc2,f,c
 24836  014CA2  0EED               	movlw	-19
 24837  014CA4  50E3               	movf	plusw1,w,c
 24838  014CA6  5ADE               	subwfb	postinc2,f,c
 24839  014CA8  0EEE               	movlw	-18
 24840  014CAA  50E3               	movf	plusw1,w,c
 24841  014CAC  5ADE               	subwfb	postinc2,f,c
 24842  014CAE                     l8016:
 24843                           
 24844                           ;stkvar	_aexp @ sp[(-13)+10]
 24845  014CAE  0EFD               	movlw	-3
 24846  014CB0  2AE3               	incf	plusw1,f,c
 24847  014CB2                     l8018:
 24848                           
 24849                           ;stkvar	_aexp @ sp[(-13)+10]
 24850  014CB2  0EFD               	movlw	-3
 24851  014CB4  006F FF8C  F028    	movff	plusw1,btemp
 24852  014CBA  0E19               	movlw	25
 24853  014CBC  6428               	cpfsgt	btemp^0,c
 24854  014CBE  D7A9               	goto	l8000
 24855                           
 24856                           ;stkvar	_rem @ sp[(-13)+4]
 24857  014CC0  0EF7               	movlw	-9
 24858  014CC2  50E3               	movf	plusw1,w,c
 24859  014CC4  E10A               	bnz	u6380
 24860  014CC6  0EF8               	movlw	-8
 24861  014CC8  50E3               	movf	plusw1,w,c
 24862  014CCA  E107               	bnz	u6380
 24863  014CCC  0EF9               	movlw	-7
 24864  014CCE  50E3               	movf	plusw1,w,c
 24865  014CD0  E104               	bnz	u6380
 24866  014CD2  0EFA               	movlw	-6
 24867  014CD4  50E3               	movf	plusw1,w,c
 24868  014CD6  B4D8               	btfsc	status,2,c
 24869  014CD8  D024               	goto	l8034
 24870  014CDA                     u6380:
 24871                           
 24872                           ;stkvar	_grs @ sp[(-13)+0]
 24873  014CDA  0EF3               	movlw	-13
 24874  014CDC  80E3               	bsf	plusw1,0,c
 24875  014CDE  D021               	goto	l8034
 24876  014CE0                     l8024:
 24877                           
 24878                           ;stkvar	_b @ sp[(-13)+-4]
 24879  014CE0  90D8               	bcf	status,0,c
 24880  014CE2  0EEF               	movlw	-17
 24881  014CE4  36E3               	rlcf	plusw1,f,c
 24882  014CE6  0EF0               	movlw	-16
 24883  014CE8  36E3               	rlcf	plusw1,f,c
 24884  014CEA  0EF1               	movlw	-15
 24885  014CEC  36E3               	rlcf	plusw1,f,c
 24886  014CEE  0EF2               	movlw	-14
 24887  014CF0  36E3               	rlcf	plusw1,f,c
 24888                           
 24889                           ;stkvar	_grs @ sp[(-13)+0]
 24890  014CF2  0EF6               	movlw	-10
 24891  014CF4  AEE3               	btfss	plusw1,7,c
 24892  014CF6  D002               	goto	l8030
 24893                           
 24894                           ;stkvar	_b @ sp[(-13)+-4]
 24895  014CF8  0EEF               	movlw	-17
 24896  014CFA  80E3               	bsf	plusw1,0,c
 24897  014CFC                     l8030:
 24898                           
 24899                           ;stkvar	_grs @ sp[(-13)+0]
 24900  014CFC  90D8               	bcf	status,0,c
 24901  014CFE  0EF3               	movlw	-13
 24902  014D00  36E3               	rlcf	plusw1,f,c
 24903  014D02  0EF4               	movlw	-12
 24904  014D04  36E3               	rlcf	plusw1,f,c
 24905  014D06  0EF5               	movlw	-11
 24906  014D08  36E3               	rlcf	plusw1,f,c
 24907  014D0A  0EF6               	movlw	-10
 24908  014D0C  36E3               	rlcf	plusw1,f,c
 24909                           
 24910                           ;stkvar	_new_exp @ sp[(-13)+8]
 24911  014D0E  50E1               	movf	fsr1l,w,c
 24912  014D10  0FFB               	addlw	-5
 24913  014D12  6ED9               	movwf	fsr2l,c
 24914  014D14  50E2               	movf	fsr1h,w,c
 24915  014D16  6EDA               	movwf	fsr2h,c
 24916  014D18  0EFF               	movlw	255
 24917  014D1A  22DA               	addwfc	fsr2h,f,c
 24918  014D1C  06DE               	decf	postinc2,f,c
 24919  014D1E  0E00               	movlw	0
 24920  014D20  5ADD               	subwfb	postdec2,f,c
 24921  014D22                     l8034:
 24922                           
 24923                           ;stkvar	_b @ sp[(-13)+-4]
 24924  014D22  0EF1               	movlw	-15
 24925  014D24  AEE3               	btfss	plusw1,7,c
 24926  014D26  D7DC               	goto	l8024
 24927                           
 24928                           ;stkvar	_aexp @ sp[(-13)+10]
 24929  014D28  0EFD               	movlw	-3
 24930  014D2A  6AE3               	clrf	plusw1,c
 24931                           
 24932                           ;stkvar	_grs @ sp[(-13)+0]
 24933  014D2C  0EF6               	movlw	-10
 24934  014D2E  AEE3               	btfss	plusw1,7,c
 24935  014D30  D020               	goto	l8048
 24936                           
 24937                           ;stkvar	_grs @ sp[(-13)+0]
 24938  014D32  50E1               	movf	fsr1l,w,c
 24939  014D34  0FF3               	addlw	-13
 24940  014D36  6ED9               	movwf	fsr2l,c
 24941  014D38  50E2               	movf	fsr1h,w,c
 24942  014D3A  6EDA               	movwf	fsr2h,c
 24943  014D3C  0EFF               	movlw	255
 24944  014D3E  22DA               	addwfc	fsr2h,f,c
 24945  014D40  0EFF               	movlw	255
 24946  014D42  14DE               	andwf	postinc2,w,c
 24947  014D44  6E30               	movwf	(btemp+8)^0,c
 24948  014D46  0EFF               	movlw	255
 24949  014D48  14DE               	andwf	postinc2,w,c
 24950  014D4A  6E31               	movwf	(btemp+9)^0,c
 24951  014D4C  0EFF               	movlw	255
 24952  014D4E  14DE               	andwf	postinc2,w,c
 24953  014D50  6E32               	movwf	(btemp+10)^0,c
 24954  014D52  0E7F               	movlw	127
 24955  014D54  14DE               	andwf	postinc2,w,c
 24956  014D56  6E33               	movwf	(btemp+11)^0,c
 24957  014D58  5030               	movf	(btemp+8)^0,w,c
 24958  014D5A  1031               	iorwf	(btemp+9)^0,w,c
 24959  014D5C  1032               	iorwf	(btemp+10)^0,w,c
 24960  014D5E  1033               	iorwf	(btemp+11)^0,w,c
 24961  014D60  B4D8               	btfsc	status,2,c
 24962  014D62  D004               	goto	l8044
 24963  014D64                     u6420:
 24964                           
 24965                           ;stkvar	_aexp @ sp[(-13)+10]
 24966  014D64  0EFD               	movlw	-3
 24967  014D66  6AE3               	clrf	plusw1,c
 24968  014D68  2AE3               	incf	plusw1,f,c
 24969  014D6A  D003               	goto	l8048
 24970  014D6C                     l8044:
 24971                           
 24972                           ;stkvar	_b @ sp[(-13)+-4]
 24973  014D6C  0EEF               	movlw	-17
 24974  014D6E  B0E3               	btfsc	plusw1,0,c
 24975  014D70  D7F9               	goto	u6420
 24976  014D72                     l8048:
 24977                           
 24978                           ;stkvar	_aexp @ sp[(-13)+10]
 24979  014D72  0EFD               	movlw	-3
 24980  014D74  50E3               	movf	plusw1,w,c
 24981  014D76  B4D8               	btfsc	status,2,c
 24982  014D78  D036               	goto	l8058
 24983                           
 24984                           ;stkvar	_b @ sp[(-13)+-4]
 24985  014D7A  50E1               	movf	fsr1l,w,c
 24986  014D7C  0FEF               	addlw	-17
 24987  014D7E  6ED9               	movwf	fsr2l,c
 24988  014D80  50E2               	movf	fsr1h,w,c
 24989  014D82  6EDA               	movwf	fsr2h,c
 24990  014D84  0EFF               	movlw	255
 24991  014D86  22DA               	addwfc	fsr2h,f,c
 24992  014D88  2ADE               	incf	postinc2,f,c
 24993  014D8A  0E00               	movlw	0
 24994  014D8C  22DE               	addwfc	postinc2,f,c
 24995  014D8E  22DE               	addwfc	postinc2,f,c
 24996  014D90  22DE               	addwfc	postinc2,f,c
 24997                           
 24998                           ;stkvar	_b @ sp[(-13)+-4]
 24999  014D92  0EF2               	movlw	-14
 25000  014D94  A0E3               	btfss	plusw1,0,c
 25001  014D96  D027               	goto	l8058
 25002  014D98  0E01               	movlw	1
 25003  014D9A  6E33               	movwf	(btemp+11)^0,c
 25004                           
 25005                           ;stkvar	_b @ sp[(-13)+-4]
 25006  014D9C  50E1               	movf	fsr1l,w,c
 25007  014D9E  0FEF               	addlw	-17
 25008  014DA0  6ED9               	movwf	fsr2l,c
 25009  014DA2  50E2               	movf	fsr1h,w,c
 25010  014DA4  6EDA               	movwf	fsr2h,c
 25011  014DA6  0EFF               	movlw	255
 25012  014DA8  22DA               	addwfc	fsr2h,f,c
 25013  014DAA  2833               	incf	(btemp+11)^0,w,c
 25014  014DAC  52DE               	movf	postinc2,f,c
 25015  014DAE  D008               	goto	u6460
 25016  014DB0                     u6465:
 25017  014DB0  52DE               	movf	postinc2,f,c
 25018  014DB2  90D8               	bcf	status,0,c
 25019  014DB4  BEDC               	btfsc	preinc2,7,c
 25020  014DB6  80D8               	bsf	status,0,c
 25021  014DB8  32DD               	rrcf	postdec2,f,c
 25022  014DBA  32DD               	rrcf	postdec2,f,c
 25023  014DBC  32DD               	rrcf	postdec2,f,c
 25024  014DBE  32DE               	rrcf	postinc2,f,c
 25025  014DC0                     u6460:
 25026  014DC0  2EE8               	decfsz	wreg,f,c
 25027  014DC2  D7F6               	goto	u6465
 25028                           
 25029                           ;stkvar	_new_exp @ sp[(-13)+8]
 25030  014DC4  0EFB               	movlw	-5
 25031  014DC6  50E3               	movf	plusw1,w,c
 25032  014DC8  0F01               	addlw	1
 25033  014DCA  6E28               	movwf	btemp^0,c
 25034  014DCC  0EFB               	movlw	-5
 25035  014DCE  0060  F0A3  FFE3   	movff	btemp,plusw1
 25036  014DD4  6A28               	clrf	btemp^0,c
 25037  014DD6  0EFC               	movlw	-4
 25038  014DD8  50E3               	movf	plusw1,w,c
 25039  014DDA  2028               	addwfc	btemp^0,w,c
 25040  014DDC  6E28               	movwf	btemp^0,c
 25041  014DDE  0EFC               	movlw	-4
 25042  014DE0  0060  F0A3  FFE3   	movff	btemp,plusw1
 25043  014DE6                     l8058:
 25044                           
 25045                           ;stkvar	_new_exp @ sp[(-13)+8]
 25046  014DE6  0EFC               	movlw	-4
 25047  014DE8  BEE3               	btfsc	plusw1,7,c
 25048  014DEA  D01B               	goto	l8064
 25049  014DEC  0EFC               	movlw	-4
 25050  014DEE  50E3               	movf	plusw1,w,c
 25051  014DF0  E104               	bnz	u6470
 25052  014DF2  0EFB               	movlw	-5
 25053  014DF4  28E3               	incf	plusw1,w,c
 25054  014DF6  A0D8               	btfss	status,0,c
 25055  014DF8  D014               	goto	l8064
 25056  014DFA                     u6470:
 25057  014DFA  0EFF               	movlw	255
 25058  014DFC  6E32               	movwf	(btemp+10)^0,c
 25059  014DFE  0E00               	movlw	0
 25060  014E00  6E33               	movwf	(btemp+11)^0,c
 25061                           
 25062                           ;stkvar	_new_exp @ sp[(-13)+8]
 25063  014E02  0EFB               	movlw	-5
 25064  014E04  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25065  014E0A  0EFC               	movlw	-4
 25066  014E0C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25067                           
 25068                           ;stkvar	_b @ sp[(-13)+-4]
 25069  014E12  0EEF               	movlw	-17
 25070  014E14  6AE3               	clrf	plusw1,c
 25071  014E16  0EF0               	movlw	-16
 25072  014E18  6AE3               	clrf	plusw1,c
 25073  014E1A  0EF1               	movlw	-15
 25074  014E1C  6AE3               	clrf	plusw1,c
 25075  014E1E  0EF2               	movlw	-14
 25076  014E20  6AE3               	clrf	plusw1,c
 25077  014E22                     l8064:
 25078                           
 25079                           ;stkvar	_new_exp @ sp[(-13)+8]
 25080  014E22  0EFC               	movlw	-4
 25081  014E24  BEE3               	btfsc	plusw1,7,c
 25082  014E26  D007               	goto	u6480
 25083  014E28  0EFC               	movlw	-4
 25084  014E2A  50E3               	movf	plusw1,w,c
 25085  014E2C  E112               	bnz	l8070
 25086  014E2E  0EFB               	movlw	-5
 25087  014E30  04E3               	decf	plusw1,w,c
 25088  014E32  B0D8               	btfsc	status,0,c
 25089  014E34  D00E               	goto	l8070
 25090  014E36                     u6480:
 25091                           
 25092                           ;stkvar	_new_exp @ sp[(-13)+8]
 25093  014E36  0EFB               	movlw	-5
 25094  014E38  6AE3               	clrf	plusw1,c
 25095  014E3A  0EFC               	movlw	-4
 25096  014E3C  6AE3               	clrf	plusw1,c
 25097                           
 25098                           ;stkvar	_b @ sp[(-13)+-4]
 25099  014E3E  0EEF               	movlw	-17
 25100  014E40  6AE3               	clrf	plusw1,c
 25101  014E42  0EF0               	movlw	-16
 25102  014E44  6AE3               	clrf	plusw1,c
 25103  014E46  0EF1               	movlw	-15
 25104  014E48  6AE3               	clrf	plusw1,c
 25105  014E4A  0EF2               	movlw	-14
 25106  014E4C  6AE3               	clrf	plusw1,c
 25107                           
 25108                           ;stkvar	_sign @ sp[(-13)+12]
 25109  014E4E  0EFF               	movlw	-1
 25110  014E50  6AE3               	clrf	plusw1,c
 25111  014E52                     l8070:
 25112                           
 25113                           ;stkvar	_new_exp @ sp[(-13)+8]
 25114                           ;stkvar	_bexp @ sp[(-13)+11]
 25115  014E52  0EFB               	movlw	-5
 25116  014E54  006F FF8C  F028    	movff	plusw1,btemp
 25117  014E5A  0EFE               	movlw	-2
 25118  014E5C  0060  F0A3  FFE3   	movff	btemp,plusw1
 25119                           
 25120                           ;stkvar	_bexp @ sp[(-13)+11]
 25121  014E62  0EFE               	movlw	-2
 25122  014E64  A0E3               	btfss	plusw1,0,c
 25123  014E66  D009               	goto	l8076
 25124                           
 25125                           ;stkvar	_b @ sp[(-13)+-4]
 25126  014E68  0EF1               	movlw	241
 25127  014E6A  24E1               	addwf	fsr1l,w,c
 25128  014E6C  6ED9               	movwf	fsr2l,c
 25129  014E6E  0EFF               	movlw	255
 25130  014E70  20E2               	addwfc	fsr1h,w,c
 25131  014E72  6EDA               	movwf	fsr2h,c
 25132  014E74  0E00               	movlw	0
 25133  014E76  8EDB               	bsf	plusw2,7,c
 25134  014E78  D008               	goto	l8078
 25135  014E7A                     l8076:
 25136                           
 25137                           ;stkvar	_b @ sp[(-13)+-4]
 25138  014E7A  0EF1               	movlw	241
 25139  014E7C  24E1               	addwf	fsr1l,w,c
 25140  014E7E  6ED9               	movwf	fsr2l,c
 25141  014E80  0EFF               	movlw	255
 25142  014E82  20E2               	addwfc	fsr1h,w,c
 25143  014E84  6EDA               	movwf	fsr2h,c
 25144  014E86  0E7F               	movlw	127
 25145  014E88  16DF               	andwf	indf2,f,c
 25146  014E8A                     l8078:
 25147                           
 25148                           ;stkvar	_b @ sp[(-13)+-4]
 25149  014E8A  0EF2               	movlw	242
 25150  014E8C  24E1               	addwf	fsr1l,w,c
 25151  014E8E  6ED9               	movwf	fsr2l,c
 25152  014E90  0EFF               	movlw	255
 25153  014E92  20E2               	addwfc	fsr1h,w,c
 25154  014E94  6EDA               	movwf	fsr2h,c
 25155                           
 25156                           ;stkvar	_bexp @ sp[(-13)+11]
 25157  014E96  0EFE               	movlw	-2
 25158  014E98  006F FF8C  F033    	movff	plusw1,btemp+11
 25159  014E9E  90D8               	bcf	status,0,c
 25160  014EA0  3033               	rrcf	(btemp+11)^0,w,c
 25161  014EA2  6EDF               	movwf	indf2,c
 25162  014EA4  D644               	goto	l7976
 25163  014EA6                     l2945:
 25164                           
 25165                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25166  014EA6  0EEB               	movlw	235
 25167  014EA8  26E1               	addwf	fsr1l,f,c
 25168  014EAA  0EFF               	movlw	255
 25169  014EAC  22E2               	addwfc	fsr1h,f,c
 25170  014EAE  0012               	return		;funcret
 25171  014EB0                     __end_of___fldiv:
 25172                           	opt callstack 0
 25173                           
 25174 ;; *************** function ___flge *****************
 25175 ;; Defined at:
 25176 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25177 ;; Parameters:    Size  Location     Type
 25178 ;;  ff1             4  [STACK] unsigned char 
 25179 ;;  ff2             4  [STACK] unsigned char 
 25180 ;; Auto vars:     Size  Location     Type
 25181 ;;		None
 25182 ;; Return value:  Size  Location     Type
 25183 ;;		None               void
 25184 ;; Registers used:
 25185 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25186 ;; Tracked objects:
 25187 ;;		On entry : 0/0
 25188 ;;		On exit  : 0/0
 25189 ;;		Unchanged: 0/0
 25190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25195 ;;Total ram usage:        0 bytes
 25196 ;; Hardware stack levels used:    1
 25197 ;; Hardware stack levels required when called:   15
 25198 ;; This function calls:
 25199 ;;		Nothing
 25200 ;; This function is called by:
 25201 ;;		_main
 25202 ;;		_calc_ror_data
 25203 ;;		_calc_bsoc
 25204 ;;		_efgtoa
 25205 ;; This function uses a reentrant model
 25206 ;;
 25207                           
 25208                           	psect	text99
 25209  0186E0                     __ptext99:
 25210                           	opt callstack 0
 25211  0186E0                     ___flge:
 25212                           	opt callstack 0
 25213                           
 25214                           ;stkvar	_ff1 @ sp[(0)+-4]
 25215                           
 25216                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25217                           ;incstack = 0
 25218 ;; hardware stack exceeded
 25219  0186E0  50E1               	movf	fsr1l,w,c
 25220  0186E2  0FFC               	addlw	-4
 25221  0186E4  6ED9               	movwf	fsr2l,c
 25222  0186E6  50E2               	movf	fsr1h,w,c
 25223  0186E8  6EDA               	movwf	fsr2h,c
 25224  0186EA  0EFF               	movlw	255
 25225  0186EC  22DA               	addwfc	fsr2h,f,c
 25226  0186EE  0E00               	movlw	0
 25227  0186F0  14DE               	andwf	postinc2,w,c
 25228  0186F2  6E30               	movwf	(btemp+8)^0,c
 25229  0186F4  0E00               	movlw	0
 25230  0186F6  14DE               	andwf	postinc2,w,c
 25231  0186F8  6E31               	movwf	(btemp+9)^0,c
 25232  0186FA  0E80               	movlw	128
 25233  0186FC  14DE               	andwf	postinc2,w,c
 25234  0186FE  6E32               	movwf	(btemp+10)^0,c
 25235  018700  0E7F               	movlw	127
 25236  018702  14DE               	andwf	postinc2,w,c
 25237  018704  6E33               	movwf	(btemp+11)^0,c
 25238  018706  5030               	movf	(btemp+8)^0,w,c
 25239  018708  1031               	iorwf	(btemp+9)^0,w,c
 25240  01870A  1032               	iorwf	(btemp+10)^0,w,c
 25241  01870C  1033               	iorwf	(btemp+11)^0,w,c
 25242  01870E  A4D8               	btfss	status,2,c
 25243  018710  D008               	goto	l8352
 25244                           
 25245                           ;stkvar	_ff1 @ sp[(0)+-4]
 25246  018712  0EFC               	movlw	-4
 25247  018714  6AE3               	clrf	plusw1,c
 25248  018716  0EFD               	movlw	-3
 25249  018718  6AE3               	clrf	plusw1,c
 25250  01871A  0EFE               	movlw	-2
 25251  01871C  6AE3               	clrf	plusw1,c
 25252  01871E  0EFF               	movlw	-1
 25253  018720  6AE3               	clrf	plusw1,c
 25254  018722                     l8352:
 25255                           
 25256                           ;stkvar	_ff2 @ sp[(0)+-8]
 25257  018722  50E1               	movf	fsr1l,w,c
 25258  018724  0FF8               	addlw	-8
 25259  018726  6ED9               	movwf	fsr2l,c
 25260  018728  50E2               	movf	fsr1h,w,c
 25261  01872A  6EDA               	movwf	fsr2h,c
 25262  01872C  0EFF               	movlw	255
 25263  01872E  22DA               	addwfc	fsr2h,f,c
 25264  018730  0E00               	movlw	0
 25265  018732  14DE               	andwf	postinc2,w,c
 25266  018734  6E30               	movwf	(btemp+8)^0,c
 25267  018736  0E00               	movlw	0
 25268  018738  14DE               	andwf	postinc2,w,c
 25269  01873A  6E31               	movwf	(btemp+9)^0,c
 25270  01873C  0E80               	movlw	128
 25271  01873E  14DE               	andwf	postinc2,w,c
 25272  018740  6E32               	movwf	(btemp+10)^0,c
 25273  018742  0E7F               	movlw	127
 25274  018744  14DE               	andwf	postinc2,w,c
 25275  018746  6E33               	movwf	(btemp+11)^0,c
 25276  018748  5030               	movf	(btemp+8)^0,w,c
 25277  01874A  1031               	iorwf	(btemp+9)^0,w,c
 25278  01874C  1032               	iorwf	(btemp+10)^0,w,c
 25279  01874E  1033               	iorwf	(btemp+11)^0,w,c
 25280  018750  A4D8               	btfss	status,2,c
 25281  018752  D008               	goto	l2626
 25282                           
 25283                           ;stkvar	_ff2 @ sp[(0)+-8]
 25284  018754  0EF8               	movlw	-8
 25285  018756  6AE3               	clrf	plusw1,c
 25286  018758  0EF9               	movlw	-7
 25287  01875A  6AE3               	clrf	plusw1,c
 25288  01875C  0EFA               	movlw	-6
 25289  01875E  6AE3               	clrf	plusw1,c
 25290  018760  0EFB               	movlw	-5
 25291  018762  6AE3               	clrf	plusw1,c
 25292  018764                     l2626:
 25293                           
 25294                           ;stkvar	_ff1 @ sp[(0)+-4]
 25295  018764  0EFF               	movlw	-1
 25296  018766  AEE3               	btfss	plusw1,7,c
 25297  018768  D024               	goto	l8358
 25298                           
 25299                           ;stkvar	_ff1 @ sp[(0)+-4]
 25300  01876A  0E00               	movlw	0
 25301  01876C  6E30               	movwf	(btemp+8)^0,c
 25302  01876E  0E00               	movlw	0
 25303  018770  6E31               	movwf	(btemp+9)^0,c
 25304  018772  0E00               	movlw	0
 25305  018774  6E32               	movwf	(btemp+10)^0,c
 25306  018776  0E80               	movlw	128
 25307  018778  6E33               	movwf	(btemp+11)^0,c
 25308  01877A  0EFC               	movlw	-4
 25309  01877C  50E3               	movf	plusw1,w,c
 25310  01877E  5E30               	subwf	(btemp+8)^0,f,c
 25311  018780  0EFD               	movlw	-3
 25312  018782  50E3               	movf	plusw1,w,c
 25313  018784  5A31               	subwfb	(btemp+9)^0,f,c
 25314  018786  0EFE               	movlw	-2
 25315  018788  50E3               	movf	plusw1,w,c
 25316  01878A  5A32               	subwfb	(btemp+10)^0,f,c
 25317  01878C  0EFF               	movlw	-1
 25318  01878E  50E3               	movf	plusw1,w,c
 25319  018790  5A33               	subwfb	(btemp+11)^0,f,c
 25320                           
 25321                           ;stkvar	_ff1 @ sp[(0)+-4]
 25322  018792  0EFC               	movlw	-4
 25323  018794  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25324  01879A  0EFD               	movlw	-3
 25325  01879C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25326  0187A2  0EFE               	movlw	-2
 25327  0187A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25328  0187AA  0EFF               	movlw	-1
 25329  0187AC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25330  0187B2                     l8358:
 25331                           
 25332                           ;stkvar	_ff2 @ sp[(0)+-8]
 25333  0187B2  0EFB               	movlw	-5
 25334  0187B4  AEE3               	btfss	plusw1,7,c
 25335  0187B6  D024               	goto	l8362
 25336                           
 25337                           ;stkvar	_ff2 @ sp[(0)+-8]
 25338  0187B8  0E00               	movlw	0
 25339  0187BA  6E30               	movwf	(btemp+8)^0,c
 25340  0187BC  0E00               	movlw	0
 25341  0187BE  6E31               	movwf	(btemp+9)^0,c
 25342  0187C0  0E00               	movlw	0
 25343  0187C2  6E32               	movwf	(btemp+10)^0,c
 25344  0187C4  0E80               	movlw	128
 25345  0187C6  6E33               	movwf	(btemp+11)^0,c
 25346  0187C8  0EF8               	movlw	-8
 25347  0187CA  50E3               	movf	plusw1,w,c
 25348  0187CC  5E30               	subwf	(btemp+8)^0,f,c
 25349  0187CE  0EF9               	movlw	-7
 25350  0187D0  50E3               	movf	plusw1,w,c
 25351  0187D2  5A31               	subwfb	(btemp+9)^0,f,c
 25352  0187D4  0EFA               	movlw	-6
 25353  0187D6  50E3               	movf	plusw1,w,c
 25354  0187D8  5A32               	subwfb	(btemp+10)^0,f,c
 25355  0187DA  0EFB               	movlw	-5
 25356  0187DC  50E3               	movf	plusw1,w,c
 25357  0187DE  5A33               	subwfb	(btemp+11)^0,f,c
 25358                           
 25359                           ;stkvar	_ff2 @ sp[(0)+-8]
 25360  0187E0  0EF8               	movlw	-8
 25361  0187E2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25362  0187E8  0EF9               	movlw	-7
 25363  0187EA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25364  0187F0  0EFA               	movlw	-6
 25365  0187F2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25366  0187F8  0EFB               	movlw	-5
 25367  0187FA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25368  018800                     l8362:
 25369                           
 25370                           ;stkvar	_ff1 @ sp[(0)+-4]
 25371  018800  0EFF               	movlw	-1
 25372  018802  7EE3               	btg	plusw1,7,c
 25373                           
 25374                           ;stkvar	_ff2 @ sp[(0)+-8]
 25375  018804  0EFB               	movlw	-5
 25376  018806  7EE3               	btg	plusw1,7,c
 25377                           
 25378                           ;stkvar	_ff2 @ sp[(0)+-8]
 25379                           ;stkvar	_ff1 @ sp[(0)+-4]
 25380  018808  50E1               	movf	fsr1l,w,c
 25381  01880A  0FFC               	addlw	-4
 25382  01880C  6ED9               	movwf	fsr2l,c
 25383  01880E  50E2               	movf	fsr1h,w,c
 25384  018810  6EDA               	movwf	fsr2h,c
 25385  018812  0EFF               	movlw	255
 25386  018814  22DA               	addwfc	fsr2h,f,c
 25387  018816  0EF8               	movlw	-8
 25388  018818  50E3               	movf	plusw1,w,c
 25389  01881A  5CDE               	subwf	postinc2,w,c
 25390  01881C  0EF9               	movlw	-7
 25391  01881E  50E3               	movf	plusw1,w,c
 25392  018820  58DE               	subwfb	postinc2,w,c
 25393  018822  0EFA               	movlw	-6
 25394  018824  50E3               	movf	plusw1,w,c
 25395  018826  58DE               	subwfb	postinc2,w,c
 25396  018828  0EFB               	movlw	-5
 25397  01882A  50E3               	movf	plusw1,w,c
 25398  01882C  58DE               	subwfb	postinc2,w,c
 25399  01882E  B0D8               	btfsc	status,0,c
 25400  018830  D002               	goto	l8370
 25401  018832  9028               	bcf	btemp& (0+255),0,c
 25402  018834  D001               	goto	l2633
 25403  018836                     l8370:
 25404  018836  8028               	bsf	btemp& (0+255),0,c
 25405  018838                     l2633:
 25406                           
 25407                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25408  018838  0EF8               	movlw	248
 25409  01883A  26E1               	addwf	fsr1l,f,c
 25410  01883C  0EFF               	movlw	255
 25411  01883E  22E2               	addwfc	fsr1h,f,c
 25412  018840  0012               	return		;funcret
 25413  018842                     __end_of___flge:
 25414                           	opt callstack 0
 25415                           
 25416 ;; *************** function _calc_model_data *****************
 25417 ;; Defined at:
 25418 ;;		line 67 in file "mbmc.c"
 25419 ;; Parameters:    Size  Location     Type
 25420 ;;		None
 25421 ;; Auto vars:     Size  Location     Type
 25422 ;;		None
 25423 ;; Return value:  Size  Location     Type
 25424 ;;                  1  [STACK] void 
 25425 ;; Registers used:
 25426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25427 ;; Tracked objects:
 25428 ;;		On entry : 0/0
 25429 ;;		On exit  : 3F/1
 25430 ;;		Unchanged: 0/0
 25431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25436 ;;Total ram usage:        0 bytes
 25437 ;; Hardware stack levels used:    1
 25438 ;; Hardware stack levels required when called:   18
 25439 ;; This function calls:
 25440 ;;		___fladd
 25441 ;;		___flmul
 25442 ;;		___flsub
 25443 ;;		_lp_filter
 25444 ;;		_start_bsoc
 25445 ;;		_stop_bsoc
 25446 ;; This function is called by:
 25447 ;;		_main
 25448 ;; This function uses a reentrant model
 25449 ;;
 25450                           
 25451                           	psect	text100
 25452  015B96                     __ptext100:
 25453                           	opt callstack 0
 25454  015B96                     _calc_model_data:
 25455                           	opt callstack 12
 25456                           
 25457                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25458                           
 25459                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25460                           ;incstack = 0
 25461  015B96  EC86  F0DB         	call	_stop_bsoc	;wreg free
 25462                           
 25463                           ; BSR set to: 57
 25464                           ;mbmc.c: 72:  if (!V.calib) {
 25465  015B9A  0102               	movlb	2	; () banked
 25466  015B9C  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 25467  015B9E  A4D8               	btfss	status,2,c
 25468  015BA0  D1C5               	goto	l10712
 25469                           
 25470                           ; BSR set to: 2
 25471                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25472  015BA2  C100  F144         	movff	_C,_C+68	;volatile
 25473  015BA6  C101  F145         	movff	_C+1,_C+69	;volatile
 25474  015BAA  C102  F146         	movff	_C+2,_C+70	;volatile
 25475  015BAE  C103  F147         	movff	_C+3,_C+71	;volatile
 25476                           
 25477                           ; BSR set to: 2
 25478                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25479  015BB2  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25480  015BB8  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25481  015BBE  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25482  015BC4  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25483  015BCA  0060  F513  FFE6   	movff	_C+68,postinc1
 25484  015BD0  0060  F517  FFE6   	movff	_C+69,postinc1
 25485  015BD6  0060  F51B  FFE6   	movff	_C+70,postinc1
 25486  015BDC  0060  F51F  FFE6   	movff	_C+71,postinc1
 25487  015BE2  EC41  F0D5         	call	___flsub	;wreg free
 25488  015BE6  0060  F0A0  F16C   	movff	btemp,_C+108	;volatile
 25489  015BEC  0060  F0A4  F16D   	movff	btemp+1,_C+109	;volatile
 25490  015BF2  0060  F0A8  F16E   	movff	btemp+2,_C+110	;volatile
 25491  015BF8  0060  F0AC  F16F   	movff	btemp+3,_C+111	;volatile
 25492                           
 25493                           ;mbmc.c: 75:   bcror = C.c_bat;
 25494  015BFE  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25495  015C02  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25496  015C06  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25497  015C0A  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25498                           
 25499                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25500  015C0E  C104  F148         	movff	_C+4,_C+72	;volatile
 25501  015C12  C105  F149         	movff	_C+5,_C+73	;volatile
 25502  015C16  C106  F14A         	movff	_C+6,_C+74	;volatile
 25503  015C1A  C107  F14B         	movff	_C+7,_C+75	;volatile
 25504                           
 25505                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25506  015C1E  C110  F154         	movff	_C+16,_C+84	;volatile
 25507  015C22  C111  F155         	movff	_C+17,_C+85	;volatile
 25508  015C26  C112  F156         	movff	_C+18,_C+86	;volatile
 25509  015C2A  C113  F157         	movff	_C+19,_C+87	;volatile
 25510                           
 25511                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25512  015C2E  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25513  015C34  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25514  015C3A  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25515  015C40  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25516  015C46  0060  F553  FFE6   	movff	_C+84,postinc1
 25517  015C4C  0060  F557  FFE6   	movff	_C+85,postinc1
 25518  015C52  0060  F55B  FFE6   	movff	_C+86,postinc1
 25519  015C58  0060  F55F  FFE6   	movff	_C+87,postinc1
 25520  015C5E  EC41  F0D5         	call	___flsub	;wreg free
 25521  015C62  0060  F0A0  F168   	movff	btemp,_C+104	;volatile
 25522  015C68  0060  F0A4  F169   	movff	btemp+1,_C+105	;volatile
 25523  015C6E  0060  F0A8  F16A   	movff	btemp+2,_C+106	;volatile
 25524  015C74  0060  F0AC  F16B   	movff	btemp+3,_C+107	;volatile
 25525                           
 25526                           ;mbmc.c: 79:   bvror = C.v_bat;
 25527  015C7A  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25528  015C7E  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25529  015C82  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25530  015C86  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25531                           
 25532                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25533  015C8A  C114  F150         	movff	_C+20,_C+80	;volatile
 25534  015C8E  C115  F151         	movff	_C+21,_C+81	;volatile
 25535  015C92  C116  F152         	movff	_C+22,_C+82	;volatile
 25536  015C96  C117  F153         	movff	_C+23,_C+83	;volatile
 25537                           
 25538                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25539  015C9A  C108  F14C         	movff	_C+8,_C+76	;volatile
 25540  015C9E  C109  F14D         	movff	_C+9,_C+77	;volatile
 25541  015CA2  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25542  015CA6  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25543                           
 25544                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25545  015CAA  C130  F164         	movff	_C+48,_C+100	;volatile
 25546  015CAE  C131  F165         	movff	_C+49,_C+101	;volatile
 25547  015CB2  C132  F166         	movff	_C+50,_C+102	;volatile
 25548  015CB6  C133  F167         	movff	_C+51,_C+103	;volatile
 25549                           
 25550                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25551  015CBA  0E01               	movlw	1
 25552  015CBC  6EE6               	movwf	postinc1,c
 25553  015CBE  0E10               	movlw	16
 25554  015CC0  6EE6               	movwf	postinc1,c
 25555  015CC2  0060  F403  FFE6   	movff	_C,postinc1
 25556  015CC8  0060  F407  FFE6   	movff	_C+1,postinc1
 25557  015CCE  0060  F40B  FFE6   	movff	_C+2,postinc1
 25558  015CD4  0060  F40F  FFE6   	movff	_C+3,postinc1
 25559  015CDA  0060  F413  FFE6   	movff	_C+4,postinc1
 25560  015CE0  0060  F417  FFE6   	movff	_C+5,postinc1
 25561  015CE6  0060  F41B  FFE6   	movff	_C+6,postinc1
 25562  015CEC  0060  F41F  FFE6   	movff	_C+7,postinc1
 25563  015CF2  EC41  F0D5         	call	___flsub	;wreg free
 25564  015CF6  0060  F0A3  FFE6   	movff	btemp,postinc1
 25565  015CFC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25566  015D02  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25567  015D08  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25568  015D0E  ECDC  F0BE         	call	_lp_filter	;wreg free
 25569  015D12  0060  F0A0  F140   	movff	btemp,_C+64	;volatile
 25570  015D18  0060  F0A4  F141   	movff	btemp+1,_C+65	;volatile
 25571  015D1E  0060  F0A8  F142   	movff	btemp+2,_C+66	;volatile
 25572  015D24  0060  F0AC  F143   	movff	btemp+3,_C+67	;volatile
 25573                           
 25574                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25575  015D2A  0E01               	movlw	1
 25576  015D2C  6EE6               	movwf	postinc1,c
 25577  015D2E  0E11               	movlw	17
 25578  015D30  6EE6               	movwf	postinc1,c
 25579  015D32  0060  F553  FFE6   	movff	_C+84,postinc1
 25580  015D38  0060  F557  FFE6   	movff	_C+85,postinc1
 25581  015D3E  0060  F55B  FFE6   	movff	_C+86,postinc1
 25582  015D44  0060  F55F  FFE6   	movff	_C+87,postinc1
 25583  015D4A  0060  F503  FFE6   	movff	_C+64,postinc1
 25584  015D50  0060  F507  FFE6   	movff	_C+65,postinc1
 25585  015D56  0060  F50B  FFE6   	movff	_C+66,postinc1
 25586  015D5C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25587  015D62  EC0F  F099         	call	___flmul	;wreg free
 25588  015D66  0060  F0A3  FFE6   	movff	btemp,postinc1
 25589  015D6C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25590  015D72  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25591  015D78  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25592  015D7E  ECDC  F0BE         	call	_lp_filter	;wreg free
 25593  015D82  0060  F0A0  F170   	movff	btemp,_C+112	;volatile
 25594  015D88  0060  F0A4  F171   	movff	btemp+1,_C+113	;volatile
 25595  015D8E  0060  F0A8  F172   	movff	btemp+2,_C+114	;volatile
 25596  015D94  0060  F0AC  F173   	movff	btemp+3,_C+115	;volatile
 25597                           
 25598                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25599  015D9A  0E01               	movlw	1
 25600  015D9C  6EE6               	movwf	postinc1,c
 25601  015D9E  0E12               	movlw	18
 25602  015DA0  6EE6               	movwf	postinc1,c
 25603  015DA2  0060  F543  FFE6   	movff	_C+80,postinc1
 25604  015DA8  0060  F547  FFE6   	movff	_C+81,postinc1
 25605  015DAE  0060  F54B  FFE6   	movff	_C+82,postinc1
 25606  015DB4  0060  F54F  FFE6   	movff	_C+83,postinc1
 25607  015DBA  0060  F523  FFE6   	movff	_C+72,postinc1
 25608  015DC0  0060  F527  FFE6   	movff	_C+73,postinc1
 25609  015DC6  0060  F52B  FFE6   	movff	_C+74,postinc1
 25610  015DCC  0060  F52F  FFE6   	movff	_C+75,postinc1
 25611  015DD2  EC0F  F099         	call	___flmul	;wreg free
 25612  015DD6  0060  F0A3  FFE6   	movff	btemp,postinc1
 25613  015DDC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25614  015DE2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25615  015DE8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25616  015DEE  ECDC  F0BE         	call	_lp_filter	;wreg free
 25617  015DF2  0060  F0A0  F178   	movff	btemp,_C+120	;volatile
 25618  015DF8  0060  F0A4  F179   	movff	btemp+1,_C+121	;volatile
 25619  015DFE  0060  F0A8  F17A   	movff	btemp+2,_C+122	;volatile
 25620  015E04  0060  F0AC  F17B   	movff	btemp+3,_C+123	;volatile
 25621                           
 25622                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25623  015E0A  0E01               	movlw	1
 25624  015E0C  6EE6               	movwf	postinc1,c
 25625  015E0E  0E13               	movlw	19
 25626  015E10  6EE6               	movwf	postinc1,c
 25627  015E12  0E00               	movlw	0
 25628  015E14  6EE6               	movwf	postinc1,c
 25629  015E16  0E00               	movlw	0
 25630  015E18  6EE6               	movwf	postinc1,c
 25631  015E1A  0E60               	movlw	96
 25632  015E1C  6EE6               	movwf	postinc1,c
 25633  015E1E  0EC1               	movlw	193
 25634  015E20  6EE6               	movwf	postinc1,c
 25635  015E22  0060  F593  FFE6   	movff	_C+100,postinc1
 25636  015E28  0060  F597  FFE6   	movff	_C+101,postinc1
 25637  015E2E  0060  F59B  FFE6   	movff	_C+102,postinc1
 25638  015E34  0060  F59F  FFE6   	movff	_C+103,postinc1
 25639  015E3A  0060  F503  FFE6   	movff	_C+64,postinc1
 25640  015E40  0060  F507  FFE6   	movff	_C+65,postinc1
 25641  015E46  0060  F50B  FFE6   	movff	_C+66,postinc1
 25642  015E4C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25643  015E52  EC0F  F099         	call	___flmul	;wreg free
 25644  015E56  0060  F0A3  FFE6   	movff	btemp,postinc1
 25645  015E5C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25646  015E62  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25647  015E68  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25648  015E6E  EC24  F09D         	call	___fladd	;wreg free
 25649  015E72  0060  F0A3  FFE6   	movff	btemp,postinc1
 25650  015E78  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25651  015E7E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25652  015E84  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25653  015E8A  ECDC  F0BE         	call	_lp_filter	;wreg free
 25654  015E8E  0060  F0A0  F174   	movff	btemp,_C+116	;volatile
 25655  015E94  0060  F0A4  F175   	movff	btemp+1,_C+117	;volatile
 25656  015E9A  0060  F0A8  F176   	movff	btemp+2,_C+118	;volatile
 25657  015EA0  0060  F0AC  F177   	movff	btemp+3,_C+119	;volatile
 25658                           
 25659                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25660  015EA6  0E01               	movlw	1
 25661  015EA8  6EE6               	movwf	postinc1,c
 25662  015EAA  0E14               	movlw	20
 25663  015EAC  6EE6               	movwf	postinc1,c
 25664  015EAE  0060  F553  FFE6   	movff	_C+84,postinc1
 25665  015EB4  0060  F557  FFE6   	movff	_C+85,postinc1
 25666  015EBA  0060  F55B  FFE6   	movff	_C+86,postinc1
 25667  015EC0  0060  F55F  FFE6   	movff	_C+87,postinc1
 25668  015EC6  0060  F513  FFE6   	movff	_C+68,postinc1
 25669  015ECC  0060  F517  FFE6   	movff	_C+69,postinc1
 25670  015ED2  0060  F51B  FFE6   	movff	_C+70,postinc1
 25671  015ED8  0060  F51F  FFE6   	movff	_C+71,postinc1
 25672  015EDE  EC0F  F099         	call	___flmul	;wreg free
 25673  015EE2  0060  F0A3  FFE6   	movff	btemp,postinc1
 25674  015EE8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25675  015EEE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25676  015EF4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25677  015EFA  ECDC  F0BE         	call	_lp_filter	;wreg free
 25678  015EFE  0060  F0A0  F17C   	movff	btemp,_C+124	;volatile
 25679  015F04  0060  F0A4  F17D   	movff	btemp+1,_C+125	;volatile
 25680  015F0A  0060  F0A8  F17E   	movff	btemp+2,_C+126	;volatile
 25681  015F10  0060  F0AC  F17F   	movff	btemp+3,_C+127	;volatile
 25682                           
 25683                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25684  015F16  0101               	movlb	1	; () banked
 25685  015F18  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25686  015F1A  D008               	goto	l10712
 25687                           
 25688                           ; BSR set to: 1
 25689                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25690  015F1C  0E17               	movlw	23
 25691  015F1E  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25692  015F20  0EB7               	movlw	183
 25693  015F22  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25694  015F24  0ED1               	movlw	209
 25695  015F26  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25696  015F28  0E38               	movlw	56
 25697  015F2A  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25698  015F2C                     l10712:
 25699                           
 25700                           ;mbmc.c: 94:  start_bsoc();
 25701  015F2C  EC28  F0DA         	call	_start_bsoc	;wreg free
 25702                           
 25703                           ; BSR set to: 57
 25704                           ;mbmc.c: 95:  C.update = 1;
 25705  015F30  0E01               	movlw	1
 25706  015F32  0101               	movlb	1	; () banked
 25707  015F34  6FB0               	movwf	(_C+176)& (0+255),b	;volatile
 25708                           
 25709                           ; BSR set to: 1
 25710                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25711  015F36  0012               	return		;funcret
 25712  015F38                     __end_of_calc_model_data:
 25713                           	opt callstack 0
 25714                           
 25715 ;; *************** function _stop_bsoc *****************
 25716 ;; Defined at:
 25717 ;;		line 108 in file "bsoc.c"
 25718 ;; Parameters:    Size  Location     Type
 25719 ;;		None
 25720 ;; Auto vars:     Size  Location     Type
 25721 ;;		None
 25722 ;; Return value:  Size  Location     Type
 25723 ;;                  1  [STACK] void 
 25724 ;; Registers used:
 25725 ;;		None
 25726 ;; Tracked objects:
 25727 ;;		On entry : 0/0
 25728 ;;		On exit  : 3F/39
 25729 ;;		Unchanged: 0/0
 25730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25735 ;;Total ram usage:        0 bytes
 25736 ;; Hardware stack levels used:    1
 25737 ;; Hardware stack levels required when called:   15
 25738 ;; This function calls:
 25739 ;;		Nothing
 25740 ;; This function is called by:
 25741 ;;		_calc_model_data
 25742 ;; This function uses a reentrant model
 25743 ;;
 25744                           
 25745                           	psect	text101
 25746  01B70C                     __ptext101:
 25747                           	opt callstack 0
 25748  01B70C                     _stop_bsoc:
 25749                           	opt callstack 14
 25750                           
 25751                           ;bsoc.c: 111:  PIE6bits.TMR3IE = 0;
 25752                           
 25753                           ; BSR set to: 1
 25754                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25755                           ;incstack = 0
 25756  01B70C  0139               	movlb	57	; () banked
 25757  01B70E  9D96               	bcf	150,6,b	;volatile
 25758                           
 25759                           ; BSR set to: 57
 25760                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25761  01B710  0012               	return		;funcret
 25762  01B712                     __end_of_stop_bsoc:
 25763                           	opt callstack 0
 25764                           
 25765 ;; *************** function _start_bsoc *****************
 25766 ;; Defined at:
 25767 ;;		line 99 in file "bsoc.c"
 25768 ;; Parameters:    Size  Location     Type
 25769 ;;		None
 25770 ;; Auto vars:     Size  Location     Type
 25771 ;;		None
 25772 ;; Return value:  Size  Location     Type
 25773 ;;                  1  [STACK] void 
 25774 ;; Registers used:
 25775 ;;		wreg, status,2, status,0, btemp+11
 25776 ;; Tracked objects:
 25777 ;;		On entry : 3C/2
 25778 ;;		On exit  : 3F/39
 25779 ;;		Unchanged: 0/0
 25780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25785 ;;Total ram usage:        0 bytes
 25786 ;; Hardware stack levels used:    1
 25787 ;; Hardware stack levels required when called:   15
 25788 ;; This function calls:
 25789 ;;		Nothing
 25790 ;; This function is called by:
 25791 ;;		_calc_model_data
 25792 ;; This function uses a reentrant model
 25793 ;;
 25794                           
 25795                           	psect	text102
 25796  01B450                     __ptext102:
 25797                           	opt callstack 0
 25798  01B450                     _start_bsoc:
 25799                           	opt callstack 14
 25800                           
 25801                           ;bsoc.c: 102:  PIE6bits.TMR3IE = 1;
 25802                           
 25803                           ; BSR set to: 57
 25804                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25805                           ;incstack = 0
 25806  01B450  0139               	movlb	57	; () banked
 25807  01B452  8D96               	bsf	150,6,b	;volatile
 25808                           
 25809                           ; BSR set to: 57
 25810  01B454  A4BE               	btfss	190,2,c	;volatile
 25811  01B456  D002               	goto	u9290
 25812  01B458  0E01               	movlw	1
 25813  01B45A  D001               	goto	u9296
 25814  01B45C                     u9290:
 25815  01B45C  0E00               	movlw	0
 25816  01B45E                     u9296:
 25817  01B45E  0AFF               	xorlw	255
 25818  01B460  6E33               	movwf	(btemp+11)^0,c
 25819  01B462  4633               	rlncf	(btemp+11)^0,f,c
 25820  01B464  4633               	rlncf	(btemp+11)^0,f,c
 25821  01B466  50BE               	movf	190,w,c	;volatile
 25822  01B468  1833               	xorwf	(btemp+11)^0,w,c
 25823  01B46A  0BFB               	andlw	-5
 25824  01B46C  1833               	xorwf	(btemp+11)^0,w,c
 25825  01B46E  6EBE               	movwf	190,c	;volatile
 25826                           
 25827                           ; BSR set to: 57
 25828                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25829  01B470  0012               	return		;funcret
 25830  01B472                     __end_of_start_bsoc:
 25831                           	opt callstack 0
 25832                           
 25833 ;; *************** function _lp_filter *****************
 25834 ;; Defined at:
 25835 ;;		line 29 in file "mbmc.c"
 25836 ;; Parameters:    Size  Location     Type
 25837 ;;  new             4  [STACK] const float 
 25838 ;;  bn              1  [STACK] const unsigned char 
 25839 ;;  slow            1  [STACK] const char 
 25840 ;; Auto vars:     Size  Location     Type
 25841 ;;  lp_speed        4  [STACK] float 
 25842 ;; Return value:  Size  Location     Type
 25843 ;;                  4  [STACK] float 
 25844 ;; Registers used:
 25845 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25846 ;; Tracked objects:
 25847 ;;		On entry : 0/2
 25848 ;;		On exit  : 0/0
 25849 ;;		Unchanged: 0/0
 25850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25855 ;;Total ram usage:        0 bytes
 25856 ;; Hardware stack levels used:    1
 25857 ;; Hardware stack levels required when called:   17
 25858 ;; This function calls:
 25859 ;;		___fladd
 25860 ;;		___flmul
 25861 ;;		___flsub
 25862 ;; This function is called by:
 25863 ;;		_main
 25864 ;;		_convert_adc_data
 25865 ;;		_calc_model_data
 25866 ;; This function uses a reentrant model
 25867 ;;
 25868                           
 25869                           	psect	text103
 25870  017DB8                     __ptext103:
 25871                           	opt callstack 0
 25872  017DB8                     _lp_filter:
 25873                           	opt callstack 0
 25874                           
 25875                           ; BSR set to: 57
 25876                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25877  017DB8  52E6               	movf	postinc1,f,c
 25878  017DBA  52E6               	movf	postinc1,f,c
 25879  017DBC  52E6               	movf	postinc1,f,c
 25880  017DBE  52E6               	movf	postinc1,f,c
 25881                           
 25882                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25883                           ;stkvar	_bn @ sp[(-4)+-5]
 25884                           
 25885                           ;incstack = 0
 25886  017DC0  0EF7               	movlw	-9
 25887  017DC2  006F FF8C  F028    	movff	plusw1,btemp
 25888  017DC8  0E14               	movlw	20
 25889  017DCA  6428               	cpfsgt	btemp^0,c
 25890  017DCC  D011               	goto	l10114
 25891  017DCE                     u9200:
 25892                           
 25893                           ;mbmc.c: 35:   return new;
 25894                           ;stkvar	_new @ sp[(-4)+-4]
 25895  017DCE  0EF8               	movlw	-8
 25896  017DD0  006F FF8C  F028    	movff	plusw1,btemp
 25897  017DD6  0EF9               	movlw	-7
 25898  017DD8  006F FF8C  F029    	movff	plusw1,btemp+1
 25899  017DDE  0EFA               	movlw	-6
 25900  017DE0  006F FF8C  F02A    	movff	plusw1,btemp+2
 25901  017DE6  0EFB               	movlw	-5
 25902  017DE8  006F FF8C  F02B    	movff	plusw1,btemp+3
 25903  017DEE  D0BD               	goto	l1825
 25904  017DF0                     l10114:
 25905                           
 25906                           ;mbmc.c: 37:  if (slow == (-1)) {
 25907                           ;stkvar	_slow @ sp[(-4)+-6]
 25908  017DF0  0EF6               	movlw	-10
 25909  017DF2  28E3               	incf	plusw1,w,c
 25910  017DF4  A4D8               	btfss	status,2,c
 25911  017DF6  D012               	goto	l10122
 25912                           
 25913                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25914                           ;stkvar	_bn @ sp[(-4)+-5]
 25915  017DF8  0EF7               	movlw	-9
 25916  017DFA  50E3               	movf	plusw1,w,c
 25917  017DFC  0D04               	mullw	4
 25918  017DFE  0E00               	movlw	low lp_filter@smooth
 25919  017E00  24F3               	addwf	243,w,c
 25920  017E02  6ED9               	movwf	fsr2l,c
 25921  017E04  0E03               	movlw	high lp_filter@smooth
 25922  017E06  20F4               	addwfc	prodh,w,c
 25923  017E08  6EDA               	movwf	fsr2h,c
 25924  017E0A  0E00               	movlw	0
 25925  017E0C  6EDE               	movwf	postinc2,c
 25926  017E0E  0E00               	movlw	0
 25927  017E10  6EDE               	movwf	postinc2,c
 25928  017E12  0E00               	movlw	0
 25929  017E14  6EDE               	movwf	postinc2,c
 25930  017E16  0E00               	movlw	0
 25931  017E18  6EDD               	movwf	postdec2,c
 25932  017E1A  D7D9               	goto	u9200
 25933  017E1C                     l10122:
 25934                           
 25935                           ;mbmc.c: 42:  if (slow) {
 25936                           ;stkvar	_slow @ sp[(-4)+-6]
 25937  017E1C  0EF6               	movlw	-10
 25938  017E1E  50E3               	movf	plusw1,w,c
 25939  017E20  B4D8               	btfsc	status,2,c
 25940  017E22  D006               	goto	l10126
 25941                           
 25942                           ;mbmc.c: 43:   lp_speed = 0.033;
 25943  017E24  0E02               	movlw	2
 25944  017E26  6E30               	movwf	(btemp+8)^0,c
 25945  017E28  0E2B               	movlw	43
 25946  017E2A  6E31               	movwf	(btemp+9)^0,c
 25947  017E2C  0E07               	movlw	7
 25948  017E2E  D005               	goto	L29
 25949  017E30                     l10126:
 25950                           
 25951                           ;mbmc.c: 45:   lp_speed = 0.066;
 25952  017E30  0E02               	movlw	2
 25953  017E32  6E30               	movwf	(btemp+8)^0,c
 25954  017E34  0E2B               	movlw	43
 25955  017E36  6E31               	movwf	(btemp+9)^0,c
 25956  017E38  0E87               	movlw	135
 25957  017E3A                     L29:
 25958  017E3A  6E32               	movwf	(btemp+10)^0,c
 25959  017E3C  0E3D               	movlw	61
 25960  017E3E  6E33               	movwf	(btemp+11)^0,c
 25961                           
 25962                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25963  017E40  0EFC               	movlw	-4
 25964  017E42  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25965  017E48  0EFD               	movlw	-3
 25966  017E4A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25967  017E50  0EFE               	movlw	-2
 25968  017E52  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25969  017E58  0EFF               	movlw	-1
 25970  017E5A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25971                           
 25972                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25973                           ;stkvar	_bn @ sp[(-4)+-5]
 25974  017E60  0EF7               	movlw	-9
 25975  017E62  50E3               	movf	plusw1,w,c
 25976  017E64  0D04               	mullw	4
 25977  017E66  0E00               	movlw	low lp_filter@smooth
 25978  017E68  24F3               	addwf	243,w,c
 25979  017E6A  6ED9               	movwf	fsr2l,c
 25980  017E6C  0E03               	movlw	high lp_filter@smooth
 25981  017E6E  20F4               	addwfc	prodh,w,c
 25982  017E70  6EDA               	movwf	fsr2h,c
 25983  017E72  006F FF7B FFE6     	movff	postinc2,postinc1
 25984  017E78  006F FF7B FFE6     	movff	postinc2,postinc1
 25985  017E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 25986  017E84  006F FF7B FFE6     	movff	postinc2,postinc1
 25987                           
 25988                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25989  017E8A  0EF8               	movlw	-8
 25990  017E8C  006F FF8F FFE6     	movff	plusw1,postinc1
 25991  017E92  006F FF8F FFE6     	movff	plusw1,postinc1
 25992  017E98  006F FF8F FFE6     	movff	plusw1,postinc1
 25993  017E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 25994                           
 25995                           ;stkvar	_bn @ sp[(-12)+-5]
 25996  017EA4  0EEF               	movlw	-17
 25997  017EA6  50E3               	movf	plusw1,w,c
 25998  017EA8  0D04               	mullw	4
 25999  017EAA  0E00               	movlw	low lp_filter@smooth
 26000  017EAC  24F3               	addwf	243,w,c
 26001  017EAE  6ED9               	movwf	fsr2l,c
 26002  017EB0  0E03               	movlw	high lp_filter@smooth
 26003  017EB2  20F4               	addwfc	prodh,w,c
 26004  017EB4  6EDA               	movwf	fsr2h,c
 26005  017EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 26006  017EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 26007  017EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 26008  017EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 26009                           
 26010                           ;stkvar	_new @ sp[(-16)+-4]
 26011  017ECE  0EEC               	movlw	-20
 26012  017ED0  006F FF8F FFE6     	movff	plusw1,postinc1
 26013  017ED6  006F FF8F FFE6     	movff	plusw1,postinc1
 26014  017EDC  006F FF8F FFE6     	movff	plusw1,postinc1
 26015  017EE2  006F FF8F FFE6     	movff	plusw1,postinc1
 26016  017EE8  EC41  F0D5         	call	___flsub	;wreg free
 26017  017EEC  0060  F0A3  FFE6   	movff	btemp,postinc1
 26018  017EF2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 26019  017EF8  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 26020  017EFE  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 26021  017F04  EC0F  F099         	call	___flmul	;wreg free
 26022  017F08  0060  F0A3  FFE6   	movff	btemp,postinc1
 26023  017F0E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 26024  017F14  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 26025  017F1A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 26026  017F20  EC24  F09D         	call	___fladd	;wreg free
 26027                           
 26028                           ;stkvar	_bn @ sp[(-4)+-5]
 26029  017F24  0EF7               	movlw	-9
 26030  017F26  50E3               	movf	plusw1,w,c
 26031  017F28  0D04               	mullw	4
 26032  017F2A  0E00               	movlw	low lp_filter@smooth
 26033  017F2C  24F3               	addwf	243,w,c
 26034  017F2E  6ED9               	movwf	fsr2l,c
 26035  017F30  0E03               	movlw	high lp_filter@smooth
 26036  017F32  20F4               	addwfc	prodh,w,c
 26037  017F34  6EDA               	movwf	fsr2h,c
 26038  017F36  0060  F0A3  FFDE   	movff	btemp,postinc2
 26039  017F3C  0060  F0A7  FFDE   	movff	btemp+1,postinc2
 26040  017F42  0060  F0AB  FFDE   	movff	btemp+2,postinc2
 26041  017F48  0060  F0AF  FFDD   	movff	btemp+3,postdec2
 26042  017F4E  52DD               	movf	postdec2,f,c
 26043  017F50  52DD               	movf	postdec2,f,c
 26044  017F52  006F FF78  F028    	movff	postinc2,btemp
 26045  017F58  006F FF78  F029    	movff	postinc2,btemp+1
 26046  017F5E  006F FF78  F02A    	movff	postinc2,btemp+2
 26047  017F64  006F FF78  F02B    	movff	postinc2,btemp+3
 26048  017F6A                     l1825:
 26049                           
 26050                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26051  017F6A  0EF6               	movlw	246
 26052  017F6C  26E1               	addwf	fsr1l,f,c
 26053  017F6E  0EFF               	movlw	255
 26054  017F70  22E2               	addwfc	fsr1h,f,c
 26055  017F72  0012               	return		;funcret
 26056  017F74                     __end_of_lp_filter:
 26057                           	opt callstack 0
 26058                           
 26059 ;; *************** function ___flsub *****************
 26060 ;; Defined at:
 26061 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26062 ;; Parameters:    Size  Location     Type
 26063 ;;  b               4  [STACK] float 
 26064 ;;  a               4  [STACK] float 
 26065 ;; Auto vars:     Size  Location     Type
 26066 ;;		None
 26067 ;; Return value:  Size  Location     Type
 26068 ;;                  4  [STACK] float 
 26069 ;; Registers used:
 26070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26071 ;; Tracked objects:
 26072 ;;		On entry : 0/0
 26073 ;;		On exit  : 0/0
 26074 ;;		Unchanged: 0/0
 26075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26080 ;;Total ram usage:        0 bytes
 26081 ;; Hardware stack levels used:    1
 26082 ;; Hardware stack levels required when called:   16
 26083 ;; This function calls:
 26084 ;;		___fladd
 26085 ;; This function is called by:
 26086 ;;		_conv_raw_result
 26087 ;;		_lp_filter
 26088 ;;		_calc_model_data
 26089 ;;		_calc_ror_data
 26090 ;;		_esr_check
 26091 ;;		_efgtoa
 26092 ;; This function uses a reentrant model
 26093 ;;
 26094                           
 26095                           	psect	text104
 26096  01AA82                     __ptext104:
 26097                           	opt callstack 0
 26098  01AA82                     ___flsub:
 26099                           	opt callstack 0
 26100                           
 26101                           ;stkvar	_a @ sp[(0)+-8]
 26102                           
 26103                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26104                           ;incstack = 0
 26105 ;; hardware stack exceeded
 26106  01AA82  0EFB               	movlw	-5
 26107  01AA84  7EE3               	btg	plusw1,7,c
 26108                           
 26109                           ;stkvar	_a @ sp[(0)+-8]
 26110  01AA86  0EF8               	movlw	-8
 26111  01AA88  006F FF8F FFE6     	movff	plusw1,postinc1
 26112  01AA8E  006F FF8F FFE6     	movff	plusw1,postinc1
 26113  01AA94  006F FF8F FFE6     	movff	plusw1,postinc1
 26114  01AA9A  006F FF8F FFE6     	movff	plusw1,postinc1
 26115                           
 26116                           ;stkvar	_b @ sp[(-4)+-4]
 26117  01AAA0  0EF8               	movlw	-8
 26118  01AAA2  006F FF8F FFE6     	movff	plusw1,postinc1
 26119  01AAA8  006F FF8F FFE6     	movff	plusw1,postinc1
 26120  01AAAE  006F FF8F FFE6     	movff	plusw1,postinc1
 26121  01AAB4  006F FF8F FFE6     	movff	plusw1,postinc1
 26122  01AABA  EC24  F09D         	call	___fladd	;wreg free
 26123                           
 26124                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26125  01AABE  0EF8               	movlw	248
 26126  01AAC0  26E1               	addwf	fsr1l,f,c
 26127  01AAC2  0EFF               	movlw	255
 26128  01AAC4  22E2               	addwfc	fsr1h,f,c
 26129  01AAC6  0012               	return		;funcret
 26130  01AAC8                     __end_of___flsub:
 26131                           	opt callstack 0
 26132                           
 26133 ;; *************** function ___fladd *****************
 26134 ;; Defined at:
 26135 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26136 ;; Parameters:    Size  Location     Type
 26137 ;;  b               4  [STACK] float 
 26138 ;;  a               4  [STACK] float 
 26139 ;; Auto vars:     Size  Location     Type
 26140 ;;  grs             1  [STACK] unsigned char 
 26141 ;;  bexp            1  [STACK] unsigned char 
 26142 ;;  aexp            1  [STACK] unsigned char 
 26143 ;;  signs           1  [STACK] unsigned char 
 26144 ;; Return value:  Size  Location     Type
 26145 ;;                  4  [STACK] unsigned char 
 26146 ;; Registers used:
 26147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26148 ;; Tracked objects:
 26149 ;;		On entry : 0/0
 26150 ;;		On exit  : 0/0
 26151 ;;		Unchanged: 0/0
 26152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26157 ;;Total ram usage:        0 bytes
 26158 ;; Hardware stack levels used:    1
 26159 ;; Hardware stack levels required when called:   15
 26160 ;; This function calls:
 26161 ;;		Nothing
 26162 ;; This function is called by:
 26163 ;;		_main
 26164 ;;		_lp_filter
 26165 ;;		_calc_model_data
 26166 ;;		_calc_bsoc
 26167 ;;		_efgtoa
 26168 ;;		___flsub
 26169 ;; This function uses a reentrant model
 26170 ;;
 26171                           
 26172                           	psect	text105
 26173  013A48                     __ptext105:
 26174                           	opt callstack 0
 26175  013A48                     ___fladd:
 26176                           	opt callstack 0
 26177                           
 26178                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26179  013A48  52E6               	movf	postinc1,f,c
 26180  013A4A  52E6               	movf	postinc1,f,c
 26181  013A4C  52E6               	movf	postinc1,f,c
 26182  013A4E  52E6               	movf	postinc1,f,c
 26183                           
 26184                           ;stkvar	_b @ sp[(-4)+-4]
 26185                           
 26186                           ;incstack = 0
 26187 ;; hardware stack exceeded
 26188  013A50  0EFB               	movlw	251
 26189  013A52  24E1               	addwf	fsr1l,w,c
 26190  013A54  6ED9               	movwf	fsr2l,c
 26191  013A56  0EFF               	movlw	255
 26192  013A58  20E2               	addwfc	fsr1h,w,c
 26193  013A5A  6EDA               	movwf	fsr2h,c
 26194  013A5C  50DF               	movf	indf2,w,c
 26195  013A5E  6E33               	movwf	(btemp+11)^0,c
 26196  013A60  0E80               	movlw	128
 26197  013A62  1633               	andwf	(btemp+11)^0,f,c
 26198                           
 26199                           ;stkvar	_signs @ sp[(-4)+3]
 26200  013A64  0EFF               	movlw	-1
 26201  013A66  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26202                           
 26203                           ;stkvar	_b @ sp[(-4)+-4]
 26204  013A6C  0EFB               	movlw	251
 26205  013A6E  24E1               	addwf	fsr1l,w,c
 26206  013A70  6ED9               	movwf	fsr2l,c
 26207  013A72  0EFF               	movlw	255
 26208  013A74  20E2               	addwfc	fsr1h,w,c
 26209  013A76  6EDA               	movwf	fsr2h,c
 26210  013A78  50DF               	movf	indf2,w,c
 26211  013A7A  6E33               	movwf	(btemp+11)^0,c
 26212  013A7C  90D8               	bcf	status,0,c
 26213  013A7E  3433               	rlcf	(btemp+11)^0,w,c
 26214  013A80  6E32               	movwf	(btemp+10)^0,c
 26215                           
 26216                           ;stkvar	_bexp @ sp[(-4)+1]
 26217  013A82  0EFD               	movlw	-3
 26218  013A84  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26219                           
 26220                           ;stkvar	_b @ sp[(-4)+-4]
 26221  013A8A  0EFA               	movlw	250
 26222  013A8C  24E1               	addwf	fsr1l,w,c
 26223  013A8E  6ED9               	movwf	fsr2l,c
 26224  013A90  0EFF               	movlw	255
 26225  013A92  20E2               	addwfc	fsr1h,w,c
 26226  013A94  6EDA               	movwf	fsr2h,c
 26227  013A96  AEDF               	btfss	indf2,7,c
 26228  013A98  D002               	goto	l7502
 26229                           
 26230                           ;stkvar	_bexp @ sp[(-4)+1]
 26231  013A9A  0EFD               	movlw	-3
 26232  013A9C  80E3               	bsf	plusw1,0,c
 26233  013A9E                     l7502:
 26234                           
 26235                           ;stkvar	_bexp @ sp[(-4)+1]
 26236  013A9E  0EFD               	movlw	-3
 26237  013AA0  50E3               	movf	plusw1,w,c
 26238  013AA2  B4D8               	btfsc	status,2,c
 26239  013AA4  D027               	goto	l7512
 26240                           
 26241                           ;stkvar	_bexp @ sp[(-4)+1]
 26242  013AA6  0EFD               	movlw	-3
 26243  013AA8  28E3               	incf	plusw1,w,c
 26244  013AAA  A4D8               	btfss	status,2,c
 26245  013AAC  D018               	goto	l7508
 26246  013AAE  0E00               	movlw	0
 26247  013AB0  6E30               	movwf	(btemp+8)^0,c
 26248  013AB2  0E00               	movlw	0
 26249  013AB4  6E31               	movwf	(btemp+9)^0,c
 26250  013AB6  0E00               	movlw	0
 26251  013AB8  6E32               	movwf	(btemp+10)^0,c
 26252  013ABA  0E00               	movlw	0
 26253  013ABC  6E33               	movwf	(btemp+11)^0,c
 26254                           
 26255                           ;stkvar	_b @ sp[(-4)+-4]
 26256  013ABE  0EF8               	movlw	-8
 26257  013AC0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26258  013AC6  0EF9               	movlw	-7
 26259  013AC8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26260  013ACE  0EFA               	movlw	-6
 26261  013AD0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26262  013AD6  0EFB               	movlw	-5
 26263  013AD8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26264  013ADE                     l7508:
 26265                           
 26266                           ;stkvar	_b @ sp[(-4)+-4]
 26267  013ADE  0EFA               	movlw	-6
 26268  013AE0  8EE3               	bsf	plusw1,7,c
 26269                           
 26270                           ;stkvar	_b @ sp[(-4)+-4]
 26271  013AE2  0EFB               	movlw	251
 26272  013AE4  24E1               	addwf	fsr1l,w,c
 26273  013AE6  6ED9               	movwf	fsr2l,c
 26274  013AE8  0EFF               	movlw	255
 26275  013AEA  20E2               	addwfc	fsr1h,w,c
 26276  013AEC  6EDA               	movwf	fsr2h,c
 26277  013AEE  0E00               	movlw	0
 26278  013AF0  6EDF               	movwf	indf2,c
 26279  013AF2  D018               	goto	l7514
 26280  013AF4                     l7512:
 26281  013AF4  0E00               	movlw	0
 26282  013AF6  6E30               	movwf	(btemp+8)^0,c
 26283  013AF8  0E00               	movlw	0
 26284  013AFA  6E31               	movwf	(btemp+9)^0,c
 26285  013AFC  0E00               	movlw	0
 26286  013AFE  6E32               	movwf	(btemp+10)^0,c
 26287  013B00  0E00               	movlw	0
 26288  013B02  6E33               	movwf	(btemp+11)^0,c
 26289                           
 26290                           ;stkvar	_b @ sp[(-4)+-4]
 26291  013B04  0EF8               	movlw	-8
 26292  013B06  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26293  013B0C  0EF9               	movlw	-7
 26294  013B0E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26295  013B14  0EFA               	movlw	-6
 26296  013B16  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26297  013B1C  0EFB               	movlw	-5
 26298  013B1E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26299  013B24                     l7514:
 26300                           
 26301                           ;stkvar	_a @ sp[(-4)+-8]
 26302  013B24  0EF7               	movlw	247
 26303  013B26  24E1               	addwf	fsr1l,w,c
 26304  013B28  6ED9               	movwf	fsr2l,c
 26305  013B2A  0EFF               	movlw	255
 26306  013B2C  20E2               	addwfc	fsr1h,w,c
 26307  013B2E  6EDA               	movwf	fsr2h,c
 26308  013B30  50DF               	movf	indf2,w,c
 26309  013B32  6E33               	movwf	(btemp+11)^0,c
 26310  013B34  0E80               	movlw	128
 26311  013B36  1633               	andwf	(btemp+11)^0,f,c
 26312                           
 26313                           ;stkvar	_aexp @ sp[(-4)+2]
 26314  013B38  0EFE               	movlw	-2
 26315  013B3A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26316                           
 26317                           ;stkvar	_signs @ sp[(-4)+3]
 26318                           ;stkvar	_aexp @ sp[(-4)+2]
 26319  013B40  50E1               	movf	fsr1l,w,c
 26320  013B42  0FFE               	addlw	-2
 26321  013B44  6ED9               	movwf	fsr2l,c
 26322  013B46  50E2               	movf	fsr1h,w,c
 26323  013B48  6EDA               	movwf	fsr2h,c
 26324  013B4A  0EFF               	movlw	255
 26325  013B4C  22DA               	addwfc	fsr2h,f,c
 26326  013B4E  0EFF               	movlw	-1
 26327  013B50  50E3               	movf	plusw1,w,c
 26328  013B52  18DE               	xorwf	postinc2,w,c
 26329  013B54  B4D8               	btfsc	status,2,c
 26330  013B56  D002               	goto	l7520
 26331                           
 26332                           ;stkvar	_signs @ sp[(-4)+3]
 26333  013B58  0EFF               	movlw	-1
 26334  013B5A  8CE3               	bsf	plusw1,6,c
 26335  013B5C                     l7520:
 26336                           
 26337                           ;stkvar	_a @ sp[(-4)+-8]
 26338  013B5C  0EF7               	movlw	247
 26339  013B5E  24E1               	addwf	fsr1l,w,c
 26340  013B60  6ED9               	movwf	fsr2l,c
 26341  013B62  0EFF               	movlw	255
 26342  013B64  20E2               	addwfc	fsr1h,w,c
 26343  013B66  6EDA               	movwf	fsr2h,c
 26344  013B68  50DF               	movf	indf2,w,c
 26345  013B6A  6E33               	movwf	(btemp+11)^0,c
 26346  013B6C  90D8               	bcf	status,0,c
 26347  013B6E  3433               	rlcf	(btemp+11)^0,w,c
 26348  013B70  6E32               	movwf	(btemp+10)^0,c
 26349                           
 26350                           ;stkvar	_aexp @ sp[(-4)+2]
 26351  013B72  0EFE               	movlw	-2
 26352  013B74  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26353                           
 26354                           ;stkvar	_a @ sp[(-4)+-8]
 26355  013B7A  0EF6               	movlw	246
 26356  013B7C  24E1               	addwf	fsr1l,w,c
 26357  013B7E  6ED9               	movwf	fsr2l,c
 26358  013B80  0EFF               	movlw	255
 26359  013B82  20E2               	addwfc	fsr1h,w,c
 26360  013B84  6EDA               	movwf	fsr2h,c
 26361  013B86  AEDF               	btfss	indf2,7,c
 26362  013B88  D002               	goto	l7526
 26363                           
 26364                           ;stkvar	_aexp @ sp[(-4)+2]
 26365  013B8A  0EFE               	movlw	-2
 26366  013B8C  80E3               	bsf	plusw1,0,c
 26367  013B8E                     l7526:
 26368                           
 26369                           ;stkvar	_aexp @ sp[(-4)+2]
 26370  013B8E  0EFE               	movlw	-2
 26371  013B90  50E3               	movf	plusw1,w,c
 26372  013B92  B4D8               	btfsc	status,2,c
 26373  013B94  D027               	goto	l7536
 26374                           
 26375                           ;stkvar	_aexp @ sp[(-4)+2]
 26376  013B96  0EFE               	movlw	-2
 26377  013B98  28E3               	incf	plusw1,w,c
 26378  013B9A  A4D8               	btfss	status,2,c
 26379  013B9C  D018               	goto	l7532
 26380  013B9E  0E00               	movlw	0
 26381  013BA0  6E30               	movwf	(btemp+8)^0,c
 26382  013BA2  0E00               	movlw	0
 26383  013BA4  6E31               	movwf	(btemp+9)^0,c
 26384  013BA6  0E00               	movlw	0
 26385  013BA8  6E32               	movwf	(btemp+10)^0,c
 26386  013BAA  0E00               	movlw	0
 26387  013BAC  6E33               	movwf	(btemp+11)^0,c
 26388                           
 26389                           ;stkvar	_a @ sp[(-4)+-8]
 26390  013BAE  0EF4               	movlw	-12
 26391  013BB0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26392  013BB6  0EF5               	movlw	-11
 26393  013BB8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26394  013BBE  0EF6               	movlw	-10
 26395  013BC0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26396  013BC6  0EF7               	movlw	-9
 26397  013BC8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26398  013BCE                     l7532:
 26399                           
 26400                           ;stkvar	_a @ sp[(-4)+-8]
 26401  013BCE  0EF6               	movlw	-10
 26402  013BD0  8EE3               	bsf	plusw1,7,c
 26403                           
 26404                           ;stkvar	_a @ sp[(-4)+-8]
 26405  013BD2  0EF7               	movlw	247
 26406  013BD4  24E1               	addwf	fsr1l,w,c
 26407  013BD6  6ED9               	movwf	fsr2l,c
 26408  013BD8  0EFF               	movlw	255
 26409  013BDA  20E2               	addwfc	fsr1h,w,c
 26410  013BDC  6EDA               	movwf	fsr2h,c
 26411  013BDE  0E00               	movlw	0
 26412  013BE0  6EDF               	movwf	indf2,c
 26413  013BE2  D018               	goto	l7538
 26414  013BE4                     l7536:
 26415  013BE4  0E00               	movlw	0
 26416  013BE6  6E30               	movwf	(btemp+8)^0,c
 26417  013BE8  0E00               	movlw	0
 26418  013BEA  6E31               	movwf	(btemp+9)^0,c
 26419  013BEC  0E00               	movlw	0
 26420  013BEE  6E32               	movwf	(btemp+10)^0,c
 26421  013BF0  0E00               	movlw	0
 26422  013BF2  6E33               	movwf	(btemp+11)^0,c
 26423                           
 26424                           ;stkvar	_a @ sp[(-4)+-8]
 26425  013BF4  0EF4               	movlw	-12
 26426  013BF6  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26427  013BFC  0EF5               	movlw	-11
 26428  013BFE  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26429  013C04  0EF6               	movlw	-10
 26430  013C06  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26431  013C0C  0EF7               	movlw	-9
 26432  013C0E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26433  013C14                     l7538:
 26434                           
 26435                           ;stkvar	_bexp @ sp[(-4)+1]
 26436                           ;stkvar	_aexp @ sp[(-4)+2]
 26437  013C14  50E1               	movf	fsr1l,w,c
 26438  013C16  0FFE               	addlw	-2
 26439  013C18  6ED9               	movwf	fsr2l,c
 26440  013C1A  50E2               	movf	fsr1h,w,c
 26441  013C1C  6EDA               	movwf	fsr2h,c
 26442  013C1E  0EFF               	movlw	255
 26443  013C20  22DA               	addwfc	fsr2h,f,c
 26444  013C22  0EFD               	movlw	-3
 26445  013C24  50E3               	movf	plusw1,w,c
 26446  013C26  5CDE               	subwf	postinc2,w,c
 26447  013C28  B0D8               	btfsc	status,0,c
 26448  013C2A  D0A4               	goto	l7574
 26449                           
 26450                           ;stkvar	_signs @ sp[(-4)+3]
 26451  013C2C  0EFF               	movlw	-1
 26452  013C2E  ACE3               	btfss	plusw1,6,c
 26453  013C30  D002               	goto	l7544
 26454                           
 26455                           ;stkvar	_signs @ sp[(-4)+3]
 26456  013C32  0EFF               	movlw	-1
 26457  013C34  7EE3               	btg	plusw1,7,c
 26458  013C36                     l7544:
 26459                           
 26460                           ;stkvar	_bexp @ sp[(-4)+1]
 26461                           ;stkvar	_grs @ sp[(-4)+0]
 26462  013C36  0EFD               	movlw	-3
 26463  013C38  006F FF8C  F028    	movff	plusw1,btemp
 26464  013C3E  0EFC               	movlw	-4
 26465  013C40  0060  F0A3  FFE3   	movff	btemp,plusw1
 26466                           
 26467                           ;stkvar	_aexp @ sp[(-4)+2]
 26468                           ;stkvar	_bexp @ sp[(-4)+1]
 26469  013C46  0EFE               	movlw	-2
 26470  013C48  006F FF8C  F028    	movff	plusw1,btemp
 26471  013C4E  0EFD               	movlw	-3
 26472  013C50  0060  F0A3  FFE3   	movff	btemp,plusw1
 26473                           
 26474                           ;stkvar	_grs @ sp[(-4)+0]
 26475                           ;stkvar	_aexp @ sp[(-4)+2]
 26476  013C56  0EFC               	movlw	-4
 26477  013C58  006F FF8C  F028    	movff	plusw1,btemp
 26478  013C5E  0EFE               	movlw	-2
 26479  013C60  0060  F0A3  FFE3   	movff	btemp,plusw1
 26480                           
 26481                           ;stkvar	_b @ sp[(-4)+-4]
 26482                           ;stkvar	_grs @ sp[(-4)+0]
 26483  013C66  0EF8               	movlw	-8
 26484  013C68  006F FF8C  F028    	movff	plusw1,btemp
 26485  013C6E  0EFC               	movlw	-4
 26486  013C70  0060  F0A3  FFE3   	movff	btemp,plusw1
 26487                           
 26488                           ;stkvar	_a @ sp[(-4)+-8]
 26489                           ;stkvar	_b @ sp[(-4)+-4]
 26490  013C76  0EF4               	movlw	-12
 26491  013C78  006F FF8C  F028    	movff	plusw1,btemp
 26492  013C7E  0EF8               	movlw	-8
 26493  013C80  0060  F0A3  FFE3   	movff	btemp,plusw1
 26494                           
 26495                           ;stkvar	_grs @ sp[(-4)+0]
 26496                           ;stkvar	_a @ sp[(-4)+-8]
 26497  013C86  0EFC               	movlw	-4
 26498  013C88  006F FF8C  F028    	movff	plusw1,btemp
 26499  013C8E  0EF4               	movlw	-12
 26500  013C90  0060  F0A3  FFE3   	movff	btemp,plusw1
 26501                           
 26502                           ;stkvar	_b @ sp[(-4)+-4]
 26503  013C96  0EF9               	movlw	249
 26504  013C98  24E1               	addwf	fsr1l,w,c
 26505  013C9A  6ED9               	movwf	fsr2l,c
 26506  013C9C  0EFF               	movlw	255
 26507  013C9E  20E2               	addwfc	fsr1h,w,c
 26508  013CA0  6EDA               	movwf	fsr2h,c
 26509  013CA2  50DF               	movf	indf2,w,c
 26510  013CA4  6E33               	movwf	(btemp+11)^0,c
 26511                           
 26512                           ;stkvar	_grs @ sp[(-4)+0]
 26513  013CA6  0EFC               	movlw	-4
 26514  013CA8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26515                           
 26516                           ;stkvar	_a @ sp[(-4)+-8]
 26517  013CAE  0EF5               	movlw	245
 26518  013CB0  24E1               	addwf	fsr1l,w,c
 26519  013CB2  6ED9               	movwf	fsr2l,c
 26520  013CB4  0EFF               	movlw	255
 26521  013CB6  20E2               	addwfc	fsr1h,w,c
 26522  013CB8  6EDA               	movwf	fsr2h,c
 26523                           
 26524                           ;stkvar	_b @ sp[(-4)+-4]
 26525  013CBA  0EF9               	movlw	249
 26526  013CBC  24E1               	addwf	fsr1l,w,c
 26527  013CBE  6EE9               	movwf	fsr0l,c
 26528  013CC0  0EFF               	movlw	255
 26529  013CC2  20E2               	addwfc	fsr1h,w,c
 26530  013CC4  6EEA               	movwf	fsr0h,c
 26531  013CC6  006F FF7F FFEF     	movff	indf2,indf0
 26532                           
 26533                           ;stkvar	_grs @ sp[(-4)+0]
 26534                           ;stkvar	_a @ sp[(-4)+-8]
 26535  013CCC  0EF5               	movlw	245
 26536  013CCE  24E1               	addwf	fsr1l,w,c
 26537  013CD0  6ED9               	movwf	fsr2l,c
 26538  013CD2  0EFF               	movlw	255
 26539  013CD4  20E2               	addwfc	fsr1h,w,c
 26540  013CD6  6EDA               	movwf	fsr2h,c
 26541  013CD8  0EFC               	movlw	-4
 26542  013CDA  006F FF8F FFDF     	movff	plusw1,indf2
 26543                           
 26544                           ;stkvar	_b @ sp[(-4)+-4]
 26545  013CE0  0EFA               	movlw	250
 26546  013CE2  24E1               	addwf	fsr1l,w,c
 26547  013CE4  6ED9               	movwf	fsr2l,c
 26548  013CE6  0EFF               	movlw	255
 26549  013CE8  20E2               	addwfc	fsr1h,w,c
 26550  013CEA  6EDA               	movwf	fsr2h,c
 26551  013CEC  50DF               	movf	indf2,w,c
 26552  013CEE  6E33               	movwf	(btemp+11)^0,c
 26553                           
 26554                           ;stkvar	_grs @ sp[(-4)+0]
 26555  013CF0  0EFC               	movlw	-4
 26556  013CF2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26557                           
 26558                           ;stkvar	_a @ sp[(-4)+-8]
 26559  013CF8  0EF6               	movlw	246
 26560  013CFA  24E1               	addwf	fsr1l,w,c
 26561  013CFC  6ED9               	movwf	fsr2l,c
 26562  013CFE  0EFF               	movlw	255
 26563  013D00  20E2               	addwfc	fsr1h,w,c
 26564  013D02  6EDA               	movwf	fsr2h,c
 26565                           
 26566                           ;stkvar	_b @ sp[(-4)+-4]
 26567  013D04  0EFA               	movlw	250
 26568  013D06  24E1               	addwf	fsr1l,w,c
 26569  013D08  6EE9               	movwf	fsr0l,c
 26570  013D0A  0EFF               	movlw	255
 26571  013D0C  20E2               	addwfc	fsr1h,w,c
 26572  013D0E  6EEA               	movwf	fsr0h,c
 26573  013D10  006F FF7F FFEF     	movff	indf2,indf0
 26574                           
 26575                           ;stkvar	_grs @ sp[(-4)+0]
 26576                           ;stkvar	_a @ sp[(-4)+-8]
 26577  013D16  0EF6               	movlw	246
 26578  013D18  24E1               	addwf	fsr1l,w,c
 26579  013D1A  6ED9               	movwf	fsr2l,c
 26580  013D1C  0EFF               	movlw	255
 26581  013D1E  20E2               	addwfc	fsr1h,w,c
 26582  013D20  6EDA               	movwf	fsr2h,c
 26583  013D22  0EFC               	movlw	-4
 26584  013D24  006F FF8F FFDF     	movff	plusw1,indf2
 26585                           
 26586                           ;stkvar	_b @ sp[(-4)+-4]
 26587  013D2A  0EFB               	movlw	251
 26588  013D2C  24E1               	addwf	fsr1l,w,c
 26589  013D2E  6ED9               	movwf	fsr2l,c
 26590  013D30  0EFF               	movlw	255
 26591  013D32  20E2               	addwfc	fsr1h,w,c
 26592  013D34  6EDA               	movwf	fsr2h,c
 26593  013D36  50DF               	movf	indf2,w,c
 26594  013D38  6E33               	movwf	(btemp+11)^0,c
 26595                           
 26596                           ;stkvar	_grs @ sp[(-4)+0]
 26597  013D3A  0EFC               	movlw	-4
 26598  013D3C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26599                           
 26600                           ;stkvar	_a @ sp[(-4)+-8]
 26601  013D42  0EF7               	movlw	247
 26602  013D44  24E1               	addwf	fsr1l,w,c
 26603  013D46  6ED9               	movwf	fsr2l,c
 26604  013D48  0EFF               	movlw	255
 26605  013D4A  20E2               	addwfc	fsr1h,w,c
 26606  013D4C  6EDA               	movwf	fsr2h,c
 26607                           
 26608                           ;stkvar	_b @ sp[(-4)+-4]
 26609  013D4E  0EFB               	movlw	251
 26610  013D50  24E1               	addwf	fsr1l,w,c
 26611  013D52  6EE9               	movwf	fsr0l,c
 26612  013D54  0EFF               	movlw	255
 26613  013D56  20E2               	addwfc	fsr1h,w,c
 26614  013D58  6EEA               	movwf	fsr0h,c
 26615  013D5A  006F FF7F FFEF     	movff	indf2,indf0
 26616                           
 26617                           ;stkvar	_grs @ sp[(-4)+0]
 26618                           ;stkvar	_a @ sp[(-4)+-8]
 26619  013D60  0EF7               	movlw	247
 26620  013D62  24E1               	addwf	fsr1l,w,c
 26621  013D64  6ED9               	movwf	fsr2l,c
 26622  013D66  0EFF               	movlw	255
 26623  013D68  20E2               	addwfc	fsr1h,w,c
 26624  013D6A  6EDA               	movwf	fsr2h,c
 26625  013D6C  0EFC               	movlw	-4
 26626  013D6E  006F FF8F FFDF     	movff	plusw1,indf2
 26627  013D74                     l7574:
 26628                           
 26629                           ;stkvar	_grs @ sp[(-4)+0]
 26630  013D74  0EFC               	movlw	-4
 26631  013D76  6AE3               	clrf	plusw1,c
 26632                           
 26633                           ;stkvar	_aexp @ sp[(-4)+2]
 26634  013D78  0EFE               	movlw	-2
 26635  013D7A  50E3               	movf	plusw1,w,c
 26636  013D7C  6E32               	movwf	(btemp+10)^0,c
 26637  013D7E  6A33               	clrf	(btemp+11)^0,c
 26638                           
 26639                           ;stkvar	_bexp @ sp[(-4)+1]
 26640  013D80  0EFD               	movlw	-3
 26641  013D82  50E3               	movf	plusw1,w,c
 26642  013D84  5E32               	subwf	(btemp+10)^0,f,c
 26643  013D86  0E00               	movlw	0
 26644  013D88  5A33               	subwfb	(btemp+11)^0,f,c
 26645  013D8A  BE33               	btfsc	(btemp+11)^0,7,c
 26646  013D8C  D062               	goto	l7598
 26647  013D8E  5033               	movf	(btemp+11)^0,w,c
 26648  013D90  E104               	bnz	u5340
 26649  013D92  0E1A               	movlw	26
 26650  013D94  5C32               	subwf	(btemp+10)^0,w,c
 26651  013D96  A0D8               	btfss	status,0,c
 26652  013D98  D05C               	goto	l7598
 26653  013D9A                     u5340:
 26654                           
 26655                           ;stkvar	_b @ sp[(-4)+-4]
 26656  013D9A  0EF8               	movlw	-8
 26657  013D9C  50E3               	movf	plusw1,w,c
 26658  013D9E  E10A               	bnz	u5351
 26659  013DA0  0EF9               	movlw	-7
 26660  013DA2  50E3               	movf	plusw1,w,c
 26661  013DA4  E107               	bnz	u5351
 26662  013DA6  0EFA               	movlw	-6
 26663  013DA8  50E3               	movf	plusw1,w,c
 26664  013DAA  E104               	bnz	u5351
 26665  013DAC  0EFB               	movlw	-5
 26666  013DAE  50E3               	movf	plusw1,w,c
 26667  013DB0  B4D8               	btfsc	status,2,c
 26668  013DB2  D003               	goto	u5350
 26669  013DB4                     u5351:
 26670  013DB4  6A33               	clrf	(btemp+11)^0,c
 26671  013DB6  2A33               	incf	(btemp+11)^0,f,c
 26672  013DB8  D001               	goto	u5368
 26673  013DBA                     u5350:
 26674  013DBA  6A33               	clrf	(btemp+11)^0,c
 26675  013DBC                     u5368:
 26676                           
 26677                           ;stkvar	_grs @ sp[(-4)+0]
 26678  013DBC  0EFC               	movlw	-4
 26679  013DBE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26680                           
 26681                           ;stkvar	_b @ sp[(-4)+-4]
 26682  013DC4  0EF8               	movlw	-8
 26683  013DC6  6AE3               	clrf	plusw1,c
 26684  013DC8  0EF9               	movlw	-7
 26685  013DCA  6AE3               	clrf	plusw1,c
 26686  013DCC  0EFA               	movlw	-6
 26687  013DCE  6AE3               	clrf	plusw1,c
 26688  013DD0  0EFB               	movlw	-5
 26689  013DD2  6AE3               	clrf	plusw1,c
 26690                           
 26691                           ;stkvar	_aexp @ sp[(-4)+2]
 26692                           ;stkvar	_bexp @ sp[(-4)+1]
 26693  013DD4  0EFE               	movlw	-2
 26694  013DD6  006F FF8C  F028    	movff	plusw1,btemp
 26695  013DDC  0EFD               	movlw	-3
 26696  013DDE  0060  F0A3  FFE3   	movff	btemp,plusw1
 26697  013DE4  D042               	goto	u5400
 26698  013DE6                     l7584:
 26699                           
 26700                           ;stkvar	_grs @ sp[(-4)+0]
 26701  013DE6  0EFC               	movlw	-4
 26702  013DE8  A0E3               	btfss	plusw1,0,c
 26703  013DEA  D00D               	goto	l7588
 26704                           
 26705                           ;stkvar	_grs @ sp[(-4)+0]
 26706  013DEC  0EFC               	movlw	-4
 26707  013DEE  006F FF8C  F033    	movff	plusw1,btemp+11
 26708  013DF4  90D8               	bcf	status,0,c
 26709  013DF6  3233               	rrcf	(btemp+11)^0,f,c
 26710  013DF8  0E01               	movlw	1
 26711  013DFA  1233               	iorwf	(btemp+11)^0,f,c
 26712                           
 26713                           ;stkvar	_grs @ sp[(-4)+0]
 26714  013DFC  0EFC               	movlw	-4
 26715  013DFE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26716  013E04  D009               	goto	l7590
 26717  013E06                     l7588:
 26718                           
 26719                           ;stkvar	_grs @ sp[(-4)+0]
 26720  013E06  50E1               	movf	fsr1l,w,c
 26721  013E08  0FFC               	addlw	-4
 26722  013E0A  6ED9               	movwf	fsr2l,c
 26723  013E0C  50E2               	movf	fsr1h,w,c
 26724  013E0E  6EDA               	movwf	fsr2h,c
 26725  013E10  0EFF               	movlw	255
 26726  013E12  22DA               	addwfc	fsr2h,f,c
 26727  013E14  90D8               	bcf	status,0,c
 26728  013E16  32DF               	rrcf	indf2,f,c
 26729  013E18                     l7590:
 26730                           
 26731                           ;stkvar	_b @ sp[(-4)+-4]
 26732  013E18  0EF8               	movlw	-8
 26733  013E1A  A0E3               	btfss	plusw1,0,c
 26734  013E1C  D002               	goto	l7594
 26735                           
 26736                           ;stkvar	_grs @ sp[(-4)+0]
 26737  013E1E  0EFC               	movlw	-4
 26738  013E20  8EE3               	bsf	plusw1,7,c
 26739  013E22                     l7594:
 26740  013E22  0E01               	movlw	1
 26741  013E24  6E33               	movwf	(btemp+11)^0,c
 26742                           
 26743                           ;stkvar	_b @ sp[(-4)+-4]
 26744  013E26  50E1               	movf	fsr1l,w,c
 26745  013E28  0FF8               	addlw	-8
 26746  013E2A  6ED9               	movwf	fsr2l,c
 26747  013E2C  50E2               	movf	fsr1h,w,c
 26748  013E2E  6EDA               	movwf	fsr2h,c
 26749  013E30  0EFF               	movlw	255
 26750  013E32  22DA               	addwfc	fsr2h,f,c
 26751  013E34  2833               	incf	(btemp+11)^0,w,c
 26752  013E36  52DE               	movf	postinc2,f,c
 26753  013E38  D008               	goto	u5390
 26754  013E3A                     u5395:
 26755  013E3A  52DE               	movf	postinc2,f,c
 26756  013E3C  90D8               	bcf	status,0,c
 26757  013E3E  BEDC               	btfsc	preinc2,7,c
 26758  013E40  80D8               	bsf	status,0,c
 26759  013E42  32DD               	rrcf	postdec2,f,c
 26760  013E44  32DD               	rrcf	postdec2,f,c
 26761  013E46  32DD               	rrcf	postdec2,f,c
 26762  013E48  32DE               	rrcf	postinc2,f,c
 26763  013E4A                     u5390:
 26764  013E4A  2EE8               	decfsz	wreg,f,c
 26765  013E4C  D7F6               	goto	u5395
 26766                           
 26767                           ;stkvar	_bexp @ sp[(-4)+1]
 26768  013E4E  0EFD               	movlw	-3
 26769  013E50  2AE3               	incf	plusw1,f,c
 26770  013E52                     l7598:
 26771                           
 26772                           ;stkvar	_aexp @ sp[(-4)+2]
 26773                           ;stkvar	_bexp @ sp[(-4)+1]
 26774  013E52  50E1               	movf	fsr1l,w,c
 26775  013E54  0FFD               	addlw	-3
 26776  013E56  6ED9               	movwf	fsr2l,c
 26777  013E58  50E2               	movf	fsr1h,w,c
 26778  013E5A  6EDA               	movwf	fsr2h,c
 26779  013E5C  0EFF               	movlw	255
 26780  013E5E  22DA               	addwfc	fsr2h,f,c
 26781  013E60  0EFE               	movlw	-2
 26782  013E62  50E3               	movf	plusw1,w,c
 26783  013E64  5CDE               	subwf	postinc2,w,c
 26784  013E66  A0D8               	btfss	status,0,c
 26785  013E68  D7BE               	goto	l7584
 26786  013E6A                     u5400:
 26787                           
 26788                           ;stkvar	_signs @ sp[(-4)+3]
 26789  013E6A  0EFF               	movlw	-1
 26790  013E6C  BCE3               	btfsc	plusw1,6,c
 26791  013E6E  D066               	goto	l7626
 26792                           
 26793                           ;stkvar	_bexp @ sp[(-4)+1]
 26794  013E70  0EFD               	movlw	-3
 26795  013E72  50E3               	movf	plusw1,w,c
 26796  013E74  B4D8               	btfsc	status,2,c
 26797  013E76  D0F2               	goto	u5500
 26798                           
 26799                           ;stkvar	_a @ sp[(-4)+-8]
 26800                           ;stkvar	_b @ sp[(-4)+-4]
 26801  013E78  0EF8               	movlw	-8
 26802  013E7A  50E3               	movf	plusw1,w,c
 26803  013E7C  6E28               	movwf	btemp^0,c
 26804  013E7E  0EF4               	movlw	-12
 26805  013E80  50E3               	movf	plusw1,w,c
 26806  013E82  2628               	addwf	btemp^0,f,c
 26807  013E84  0EF8               	movlw	-8
 26808  013E86  0060  F0A3  FFE3   	movff	btemp,plusw1
 26809  013E8C  0EF9               	movlw	-7
 26810  013E8E  50E3               	movf	plusw1,w,c
 26811  013E90  6E28               	movwf	btemp^0,c
 26812  013E92  0EF5               	movlw	-11
 26813  013E94  50E3               	movf	plusw1,w,c
 26814  013E96  2228               	addwfc	btemp^0,f,c
 26815  013E98  0EF9               	movlw	-7
 26816  013E9A  0060  F0A3  FFE3   	movff	btemp,plusw1
 26817  013EA0  0EFA               	movlw	-6
 26818  013EA2  50E3               	movf	plusw1,w,c
 26819  013EA4  6E28               	movwf	btemp^0,c
 26820  013EA6  0EF6               	movlw	-10
 26821  013EA8  50E3               	movf	plusw1,w,c
 26822  013EAA  2228               	addwfc	btemp^0,f,c
 26823  013EAC  0EFA               	movlw	-6
 26824  013EAE  0060  F0A3  FFE3   	movff	btemp,plusw1
 26825  013EB4  0EFB               	movlw	-5
 26826  013EB6  50E3               	movf	plusw1,w,c
 26827  013EB8  6E28               	movwf	btemp^0,c
 26828  013EBA  0EF7               	movlw	-9
 26829  013EBC  50E3               	movf	plusw1,w,c
 26830  013EBE  2228               	addwfc	btemp^0,f,c
 26831  013EC0  0EFB               	movlw	-5
 26832  013EC2  0060  F0A3  FFE3   	movff	btemp,plusw1
 26833                           
 26834                           ;stkvar	_b @ sp[(-4)+-4]
 26835  013EC8  0EFB               	movlw	-5
 26836  013ECA  A0E3               	btfss	plusw1,0,c
 26837  013ECC  D101               	goto	u5540
 26838                           
 26839                           ;stkvar	_grs @ sp[(-4)+0]
 26840  013ECE  0EFC               	movlw	-4
 26841  013ED0  A0E3               	btfss	plusw1,0,c
 26842  013ED2  D00D               	goto	l7616
 26843                           
 26844                           ;stkvar	_grs @ sp[(-4)+0]
 26845  013ED4  0EFC               	movlw	-4
 26846  013ED6  006F FF8C  F033    	movff	plusw1,btemp+11
 26847  013EDC  90D8               	bcf	status,0,c
 26848  013EDE  3233               	rrcf	(btemp+11)^0,f,c
 26849  013EE0  0E01               	movlw	1
 26850  013EE2  1233               	iorwf	(btemp+11)^0,f,c
 26851                           
 26852                           ;stkvar	_grs @ sp[(-4)+0]
 26853  013EE4  0EFC               	movlw	-4
 26854  013EE6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26855  013EEC  D009               	goto	l7618
 26856  013EEE                     l7616:
 26857                           
 26858                           ;stkvar	_grs @ sp[(-4)+0]
 26859  013EEE  50E1               	movf	fsr1l,w,c
 26860  013EF0  0FFC               	addlw	-4
 26861  013EF2  6ED9               	movwf	fsr2l,c
 26862  013EF4  50E2               	movf	fsr1h,w,c
 26863  013EF6  6EDA               	movwf	fsr2h,c
 26864  013EF8  0EFF               	movlw	255
 26865  013EFA  22DA               	addwfc	fsr2h,f,c
 26866  013EFC  90D8               	bcf	status,0,c
 26867  013EFE  32DF               	rrcf	indf2,f,c
 26868  013F00                     l7618:
 26869                           
 26870                           ;stkvar	_b @ sp[(-4)+-4]
 26871  013F00  0EF8               	movlw	-8
 26872  013F02  A0E3               	btfss	plusw1,0,c
 26873  013F04  D002               	goto	l7622
 26874                           
 26875                           ;stkvar	_grs @ sp[(-4)+0]
 26876  013F06  0EFC               	movlw	-4
 26877  013F08  8EE3               	bsf	plusw1,7,c
 26878  013F0A                     l7622:
 26879  013F0A  0E01               	movlw	1
 26880  013F0C  6E33               	movwf	(btemp+11)^0,c
 26881                           
 26882                           ;stkvar	_b @ sp[(-4)+-4]
 26883  013F0E  50E1               	movf	fsr1l,w,c
 26884  013F10  0FF8               	addlw	-8
 26885  013F12  6ED9               	movwf	fsr2l,c
 26886  013F14  50E2               	movf	fsr1h,w,c
 26887  013F16  6EDA               	movwf	fsr2h,c
 26888  013F18  0EFF               	movlw	255
 26889  013F1A  22DA               	addwfc	fsr2h,f,c
 26890  013F1C  2833               	incf	(btemp+11)^0,w,c
 26891  013F1E  52DE               	movf	postinc2,f,c
 26892  013F20  D008               	goto	u5460
 26893  013F22                     u5465:
 26894  013F22  52DE               	movf	postinc2,f,c
 26895  013F24  90D8               	bcf	status,0,c
 26896  013F26  BEDC               	btfsc	preinc2,7,c
 26897  013F28  80D8               	bsf	status,0,c
 26898  013F2A  32DD               	rrcf	postdec2,f,c
 26899  013F2C  32DD               	rrcf	postdec2,f,c
 26900  013F2E  32DD               	rrcf	postdec2,f,c
 26901  013F30  32DE               	rrcf	postinc2,f,c
 26902  013F32                     u5460:
 26903  013F32  2EE8               	decfsz	wreg,f,c
 26904  013F34  D7F6               	goto	u5465
 26905                           
 26906                           ;stkvar	_bexp @ sp[(-4)+1]
 26907  013F36  0EFD               	movlw	-3
 26908  013F38  2AE3               	incf	plusw1,f,c
 26909  013F3A  D0CA               	goto	u5540
 26910  013F3C                     l7626:
 26911                           
 26912                           ;stkvar	_a @ sp[(-4)+-8]
 26913                           ;stkvar	_b @ sp[(-4)+-4]
 26914  013F3C  50E1               	movf	fsr1l,w,c
 26915  013F3E  0FF8               	addlw	-8
 26916  013F40  6ED9               	movwf	fsr2l,c
 26917  013F42  50E2               	movf	fsr1h,w,c
 26918  013F44  6EDA               	movwf	fsr2h,c
 26919  013F46  0EFF               	movlw	255
 26920  013F48  22DA               	addwfc	fsr2h,f,c
 26921  013F4A  0EF4               	movlw	-12
 26922  013F4C  50E3               	movf	plusw1,w,c
 26923  013F4E  5CDE               	subwf	postinc2,w,c
 26924  013F50  0EF5               	movlw	-11
 26925  013F52  50E3               	movf	plusw1,w,c
 26926  013F54  58DE               	subwfb	postinc2,w,c
 26927  013F56  0EF6               	movlw	-10
 26928  013F58  50E3               	movf	plusw1,w,c
 26929  013F5A  58DE               	subwfb	postinc2,w,c
 26930  013F5C  50DE               	movf	postinc2,w,c
 26931  013F5E  0A80               	xorlw	128
 26932  013F60  6E28               	movwf	btemp^0,c
 26933  013F62  0EF7               	movlw	-9
 26934  013F64  50E3               	movf	plusw1,w,c
 26935  013F66  0A80               	xorlw	128
 26936  013F68  5828               	subwfb	btemp^0,w,c
 26937  013F6A  B0D8               	btfsc	status,0,c
 26938  013F6C  D053               	goto	l7638
 26939                           
 26940                           ;stkvar	_b @ sp[(-4)+-4]
 26941                           ;stkvar	_a @ sp[(-4)+-8]
 26942  013F6E  0EF4               	movlw	-12
 26943  013F70  006F FF8C  F030    	movff	plusw1,btemp+8
 26944  013F76  0EF5               	movlw	-11
 26945  013F78  006F FF8C  F031    	movff	plusw1,btemp+9
 26946  013F7E  0EF6               	movlw	-10
 26947  013F80  006F FF8C  F032    	movff	plusw1,btemp+10
 26948  013F86  0EF7               	movlw	-9
 26949  013F88  006F FF8C  F033    	movff	plusw1,btemp+11
 26950  013F8E  0EF8               	movlw	-8
 26951  013F90  50E3               	movf	plusw1,w,c
 26952  013F92  5E30               	subwf	(btemp+8)^0,f,c
 26953  013F94  0EF9               	movlw	-7
 26954  013F96  50E3               	movf	plusw1,w,c
 26955  013F98  5A31               	subwfb	(btemp+9)^0,f,c
 26956  013F9A  0EFA               	movlw	-6
 26957  013F9C  50E3               	movf	plusw1,w,c
 26958  013F9E  5A32               	subwfb	(btemp+10)^0,f,c
 26959  013FA0  0EFB               	movlw	-5
 26960  013FA2  50E3               	movf	plusw1,w,c
 26961  013FA4  5A33               	subwfb	(btemp+11)^0,f,c
 26962  013FA6  0EFF               	movlw	255
 26963  013FA8  2430               	addwf	(btemp+8)^0,w,c
 26964  013FAA  6E2C               	movwf	(btemp+4)^0,c
 26965  013FAC  0EFF               	movlw	255
 26966  013FAE  2031               	addwfc	(btemp+9)^0,w,c
 26967  013FB0  6E2D               	movwf	(btemp+5)^0,c
 26968  013FB2  0EFF               	movlw	255
 26969  013FB4  2032               	addwfc	(btemp+10)^0,w,c
 26970  013FB6  6E2E               	movwf	(btemp+6)^0,c
 26971  013FB8  0EFF               	movlw	255
 26972  013FBA  2033               	addwfc	(btemp+11)^0,w,c
 26973  013FBC  6E2F               	movwf	(btemp+7)^0,c
 26974                           
 26975                           ;stkvar	_b @ sp[(-4)+-4]
 26976  013FBE  0EF8               	movlw	-8
 26977  013FC0  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 26978  013FC6  0EF9               	movlw	-7
 26979  013FC8  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 26980  013FCE  0EFA               	movlw	-6
 26981  013FD0  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 26982  013FD6  0EFB               	movlw	-5
 26983  013FD8  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 26984                           
 26985                           ;stkvar	_signs @ sp[(-4)+3]
 26986  013FDE  0EFF               	movlw	-1
 26987  013FE0  7EE3               	btg	plusw1,7,c
 26988                           
 26989                           ;stkvar	_grs @ sp[(-4)+0]
 26990  013FE2  0EFC               	movlw	-4
 26991  013FE4  50E3               	movf	plusw1,w,c
 26992  013FE6  0800               	sublw	0
 26993  013FE8  6E33               	movwf	(btemp+11)^0,c
 26994                           
 26995                           ;stkvar	_grs @ sp[(-4)+0]
 26996  013FEA  0EFC               	movlw	-4
 26997  013FEC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26998                           
 26999                           ;stkvar	_grs @ sp[(-4)+0]
 27000  013FF2  0EFC               	movlw	-4
 27001  013FF4  50E3               	movf	plusw1,w,c
 27002  013FF6  A4D8               	btfss	status,2,c
 27003  013FF8  D020               	goto	l7640
 27004                           
 27005                           ;stkvar	_b @ sp[(-4)+-4]
 27006  013FFA  50E1               	movf	fsr1l,w,c
 27007  013FFC  0FF8               	addlw	-8
 27008  013FFE  6ED9               	movwf	fsr2l,c
 27009  014000  50E2               	movf	fsr1h,w,c
 27010  014002  6EDA               	movwf	fsr2h,c
 27011  014004  0EFF               	movlw	255
 27012  014006  22DA               	addwfc	fsr2h,f,c
 27013  014008  2ADE               	incf	postinc2,f,c
 27014  01400A  0E00               	movlw	0
 27015  01400C  22DE               	addwfc	postinc2,f,c
 27016  01400E  22DE               	addwfc	postinc2,f,c
 27017  014010  22DE               	addwfc	postinc2,f,c
 27018  014012  D013               	goto	l7640
 27019  014014                     l7638:
 27020                           
 27021                           ;stkvar	_a @ sp[(-4)+-8]
 27022                           ;stkvar	_b @ sp[(-4)+-4]
 27023  014014  50E1               	movf	fsr1l,w,c
 27024  014016  0FF8               	addlw	-8
 27025  014018  6ED9               	movwf	fsr2l,c
 27026  01401A  50E2               	movf	fsr1h,w,c
 27027  01401C  6EDA               	movwf	fsr2h,c
 27028  01401E  0EFF               	movlw	255
 27029  014020  22DA               	addwfc	fsr2h,f,c
 27030  014022  0EF4               	movlw	-12
 27031  014024  50E3               	movf	plusw1,w,c
 27032  014026  5EDE               	subwf	postinc2,f,c
 27033  014028  0EF5               	movlw	-11
 27034  01402A  50E3               	movf	plusw1,w,c
 27035  01402C  5ADE               	subwfb	postinc2,f,c
 27036  01402E  0EF6               	movlw	-10
 27037  014030  50E3               	movf	plusw1,w,c
 27038  014032  5ADE               	subwfb	postinc2,f,c
 27039  014034  0EF7               	movlw	-9
 27040  014036  50E3               	movf	plusw1,w,c
 27041  014038  5ADE               	subwfb	postinc2,f,c
 27042  01403A                     l7640:
 27043                           
 27044                           ;stkvar	_b @ sp[(-4)+-4]
 27045  01403A  0EF8               	movlw	-8
 27046  01403C  50E3               	movf	plusw1,w,c
 27047  01403E  E145               	bnz	l7662
 27048  014040  0EF9               	movlw	-7
 27049  014042  50E3               	movf	plusw1,w,c
 27050  014044  E142               	bnz	l7662
 27051  014046  0EFA               	movlw	-6
 27052  014048  50E3               	movf	plusw1,w,c
 27053  01404A  E13F               	bnz	l7662
 27054  01404C  0EFB               	movlw	-5
 27055  01404E  50E3               	movf	plusw1,w,c
 27056  014050  A4D8               	btfss	status,2,c
 27057  014052  D03B               	goto	l7662
 27058                           
 27059                           ;stkvar	_grs @ sp[(-4)+0]
 27060  014054  0EFC               	movlw	-4
 27061  014056  50E3               	movf	plusw1,w,c
 27062  014058  A4D8               	btfss	status,2,c
 27063  01405A  D037               	goto	l7662
 27064  01405C                     u5500:
 27065  01405C  0E00               	movlw	0
 27066  01405E  6E28               	movwf	btemp^0,c
 27067  014060  0E00               	movlw	0
 27068  014062  6E29               	movwf	(btemp+1)^0,c
 27069  014064  0E00               	movlw	0
 27070  014066  6E2A               	movwf	(btemp+2)^0,c
 27071  014068  0E00               	movlw	0
 27072  01406A  6E2B               	movwf	(btemp+3)^0,c
 27073  01406C  D0C6               	goto	l2900
 27074  01406E                     l7648:
 27075                           
 27076                           ;stkvar	_b @ sp[(-4)+-4]
 27077  01406E  90D8               	bcf	status,0,c
 27078  014070  0EF8               	movlw	-8
 27079  014072  36E3               	rlcf	plusw1,f,c
 27080  014074  0EF9               	movlw	-7
 27081  014076  36E3               	rlcf	plusw1,f,c
 27082  014078  0EFA               	movlw	-6
 27083  01407A  36E3               	rlcf	plusw1,f,c
 27084  01407C  0EFB               	movlw	-5
 27085  01407E  36E3               	rlcf	plusw1,f,c
 27086                           
 27087                           ;stkvar	_grs @ sp[(-4)+0]
 27088  014080  0EFC               	movlw	-4
 27089  014082  AEE3               	btfss	plusw1,7,c
 27090  014084  D002               	goto	l2912
 27091                           
 27092                           ;stkvar	_b @ sp[(-4)+-4]
 27093  014086  0EF8               	movlw	-8
 27094  014088  80E3               	bsf	plusw1,0,c
 27095  01408A                     l2912:
 27096                           
 27097                           ;stkvar	_grs @ sp[(-4)+0]
 27098  01408A  0EFC               	movlw	-4
 27099  01408C  A0E3               	btfss	plusw1,0,c
 27100  01408E  D00E               	goto	l7656
 27101                           
 27102                           ;stkvar	_grs @ sp[(-4)+0]
 27103  014090  0EFC               	movlw	-4
 27104  014092  006F FF8C  F033    	movff	plusw1,btemp+11
 27105  014098  90D8               	bcf	status,0,c
 27106  01409A  3433               	rlcf	(btemp+11)^0,w,c
 27107  01409C  6E32               	movwf	(btemp+10)^0,c
 27108  01409E  0E01               	movlw	1
 27109  0140A0  1232               	iorwf	(btemp+10)^0,f,c
 27110                           
 27111                           ;stkvar	_grs @ sp[(-4)+0]
 27112  0140A2  0EFC               	movlw	-4
 27113  0140A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27114  0140AA  D009               	goto	l7658
 27115  0140AC                     l7656:
 27116                           
 27117                           ;stkvar	_grs @ sp[(-4)+0]
 27118  0140AC  50E1               	movf	fsr1l,w,c
 27119  0140AE  0FFC               	addlw	-4
 27120  0140B0  6ED9               	movwf	fsr2l,c
 27121  0140B2  50E2               	movf	fsr1h,w,c
 27122  0140B4  6EDA               	movwf	fsr2h,c
 27123  0140B6  0EFF               	movlw	255
 27124  0140B8  22DA               	addwfc	fsr2h,f,c
 27125  0140BA  90D8               	bcf	status,0,c
 27126  0140BC  36DF               	rlcf	indf2,f,c
 27127  0140BE                     l7658:
 27128                           
 27129                           ;stkvar	_bexp @ sp[(-4)+1]
 27130  0140BE  0EFD               	movlw	-3
 27131  0140C0  50E3               	movf	plusw1,w,c
 27132  0140C2  B4D8               	btfsc	status,2,c
 27133  0140C4  D002               	goto	l7662
 27134                           
 27135                           ;stkvar	_bexp @ sp[(-4)+1]
 27136  0140C6  0EFD               	movlw	-3
 27137  0140C8  06E3               	decf	plusw1,f,c
 27138  0140CA                     l7662:
 27139                           
 27140                           ;stkvar	_b @ sp[(-4)+-4]
 27141  0140CA  0EFA               	movlw	-6
 27142  0140CC  AEE3               	btfss	plusw1,7,c
 27143  0140CE  D7CF               	goto	l7648
 27144  0140D0                     u5540:
 27145                           
 27146                           ;stkvar	_aexp @ sp[(-4)+2]
 27147  0140D0  0EFE               	movlw	-2
 27148  0140D2  6AE3               	clrf	plusw1,c
 27149                           
 27150                           ;stkvar	_grs @ sp[(-4)+0]
 27151  0140D4  0EFC               	movlw	-4
 27152  0140D6  AEE3               	btfss	plusw1,7,c
 27153  0140D8  D00F               	goto	l7676
 27154                           
 27155                           ;stkvar	_grs @ sp[(-4)+0]
 27156  0140DA  0EFC               	movlw	-4
 27157  0140DC  006F FF8C  F033    	movff	plusw1,btemp+11
 27158  0140E2  0E7F               	movlw	127
 27159  0140E4  1633               	andwf	(btemp+11)^0,f,c
 27160  0140E6  B4D8               	btfsc	status,2,c
 27161  0140E8  D004               	goto	l7672
 27162  0140EA                     u5560:
 27163                           
 27164                           ;stkvar	_aexp @ sp[(-4)+2]
 27165  0140EA  0EFE               	movlw	-2
 27166  0140EC  6AE3               	clrf	plusw1,c
 27167  0140EE  2AE3               	incf	plusw1,f,c
 27168  0140F0  D003               	goto	l7676
 27169  0140F2                     l7672:
 27170                           
 27171                           ;stkvar	_b @ sp[(-4)+-4]
 27172  0140F2  0EF8               	movlw	-8
 27173  0140F4  B0E3               	btfsc	plusw1,0,c
 27174  0140F6  D7F9               	goto	u5560
 27175  0140F8                     l7676:
 27176                           
 27177                           ;stkvar	_aexp @ sp[(-4)+2]
 27178  0140F8  0EFE               	movlw	-2
 27179  0140FA  50E3               	movf	plusw1,w,c
 27180  0140FC  B4D8               	btfsc	status,2,c
 27181  0140FE  D02B               	goto	l7688
 27182                           
 27183                           ;stkvar	_b @ sp[(-4)+-4]
 27184  014100  50E1               	movf	fsr1l,w,c
 27185  014102  0FF8               	addlw	-8
 27186  014104  6ED9               	movwf	fsr2l,c
 27187  014106  50E2               	movf	fsr1h,w,c
 27188  014108  6EDA               	movwf	fsr2h,c
 27189  01410A  0EFF               	movlw	255
 27190  01410C  22DA               	addwfc	fsr2h,f,c
 27191  01410E  2ADE               	incf	postinc2,f,c
 27192  014110  0E00               	movlw	0
 27193  014112  22DE               	addwfc	postinc2,f,c
 27194  014114  22DE               	addwfc	postinc2,f,c
 27195  014116  22DE               	addwfc	postinc2,f,c
 27196                           
 27197                           ;stkvar	_b @ sp[(-4)+-4]
 27198  014118  0EFB               	movlw	-5
 27199  01411A  A0E3               	btfss	plusw1,0,c
 27200  01411C  D01C               	goto	l7688
 27201  01411E  0E01               	movlw	1
 27202  014120  6E33               	movwf	(btemp+11)^0,c
 27203                           
 27204                           ;stkvar	_b @ sp[(-4)+-4]
 27205  014122  50E1               	movf	fsr1l,w,c
 27206  014124  0FF8               	addlw	-8
 27207  014126  6ED9               	movwf	fsr2l,c
 27208  014128  50E2               	movf	fsr1h,w,c
 27209  01412A  6EDA               	movwf	fsr2h,c
 27210  01412C  0EFF               	movlw	255
 27211  01412E  22DA               	addwfc	fsr2h,f,c
 27212  014130  2833               	incf	(btemp+11)^0,w,c
 27213  014132  52DE               	movf	postinc2,f,c
 27214  014134  D008               	goto	u5600
 27215  014136                     u5605:
 27216  014136  52DE               	movf	postinc2,f,c
 27217  014138  90D8               	bcf	status,0,c
 27218  01413A  BEDC               	btfsc	preinc2,7,c
 27219  01413C  80D8               	bsf	status,0,c
 27220  01413E  32DD               	rrcf	postdec2,f,c
 27221  014140  32DD               	rrcf	postdec2,f,c
 27222  014142  32DD               	rrcf	postdec2,f,c
 27223  014144  32DE               	rrcf	postinc2,f,c
 27224  014146                     u5600:
 27225  014146  2EE8               	decfsz	wreg,f,c
 27226  014148  D7F6               	goto	u5605
 27227                           
 27228                           ;stkvar	_bexp @ sp[(-4)+1]
 27229  01414A  0EFD               	movlw	-3
 27230  01414C  28E3               	incf	plusw1,w,c
 27231  01414E  B4D8               	btfsc	status,2,c
 27232  014150  D002               	goto	l7688
 27233                           
 27234                           ;stkvar	_bexp @ sp[(-4)+1]
 27235  014152  0EFD               	movlw	-3
 27236  014154  2AE3               	incf	plusw1,f,c
 27237  014156                     l7688:
 27238                           
 27239                           ;stkvar	_bexp @ sp[(-4)+1]
 27240  014156  0EFD               	movlw	-3
 27241  014158  28E3               	incf	plusw1,w,c
 27242  01415A  B4D8               	btfsc	status,2,c
 27243  01415C  D004               	goto	u5630
 27244                           
 27245                           ;stkvar	_bexp @ sp[(-4)+1]
 27246  01415E  0EFD               	movlw	-3
 27247  014160  50E3               	movf	plusw1,w,c
 27248  014162  A4D8               	btfss	status,2,c
 27249  014164  D00E               	goto	l7698
 27250  014166                     u5630:
 27251                           
 27252                           ;stkvar	_b @ sp[(-4)+-4]
 27253  014166  0EF8               	movlw	-8
 27254  014168  6AE3               	clrf	plusw1,c
 27255  01416A  0EF9               	movlw	-7
 27256  01416C  6AE3               	clrf	plusw1,c
 27257  01416E  0EFA               	movlw	-6
 27258  014170  6AE3               	clrf	plusw1,c
 27259  014172  0EFB               	movlw	-5
 27260  014174  6AE3               	clrf	plusw1,c
 27261                           
 27262                           ;stkvar	_bexp @ sp[(-4)+1]
 27263  014176  0EFD               	movlw	-3
 27264  014178  50E3               	movf	plusw1,w,c
 27265  01417A  A4D8               	btfss	status,2,c
 27266  01417C  D002               	goto	l7698
 27267                           
 27268                           ;stkvar	_signs @ sp[(-4)+3]
 27269  01417E  0EFF               	movlw	-1
 27270  014180  6AE3               	clrf	plusw1,c
 27271  014182                     l7698:
 27272                           
 27273                           ;stkvar	_bexp @ sp[(-4)+1]
 27274  014182  0EFD               	movlw	-3
 27275  014184  A0E3               	btfss	plusw1,0,c
 27276  014186  D009               	goto	l7702
 27277                           
 27278                           ;stkvar	_b @ sp[(-4)+-4]
 27279  014188  0EFA               	movlw	250
 27280  01418A  24E1               	addwf	fsr1l,w,c
 27281  01418C  6ED9               	movwf	fsr2l,c
 27282  01418E  0EFF               	movlw	255
 27283  014190  20E2               	addwfc	fsr1h,w,c
 27284  014192  6EDA               	movwf	fsr2h,c
 27285  014194  0E00               	movlw	0
 27286  014196  8EDB               	bsf	plusw2,7,c
 27287  014198  D008               	goto	l7704
 27288  01419A                     l7702:
 27289                           
 27290                           ;stkvar	_b @ sp[(-4)+-4]
 27291  01419A  0EFA               	movlw	250
 27292  01419C  24E1               	addwf	fsr1l,w,c
 27293  01419E  6ED9               	movwf	fsr2l,c
 27294  0141A0  0EFF               	movlw	255
 27295  0141A2  20E2               	addwfc	fsr1h,w,c
 27296  0141A4  6EDA               	movwf	fsr2h,c
 27297  0141A6  0E7F               	movlw	127
 27298  0141A8  16DF               	andwf	indf2,f,c
 27299  0141AA                     l7704:
 27300                           
 27301                           ;stkvar	_b @ sp[(-4)+-4]
 27302  0141AA  0EFB               	movlw	251
 27303  0141AC  24E1               	addwf	fsr1l,w,c
 27304  0141AE  6ED9               	movwf	fsr2l,c
 27305  0141B0  0EFF               	movlw	255
 27306  0141B2  20E2               	addwfc	fsr1h,w,c
 27307  0141B4  6EDA               	movwf	fsr2h,c
 27308                           
 27309                           ;stkvar	_bexp @ sp[(-4)+1]
 27310  0141B6  0EFD               	movlw	-3
 27311  0141B8  006F FF8C  F033    	movff	plusw1,btemp+11
 27312  0141BE  90D8               	bcf	status,0,c
 27313  0141C0  3033               	rrcf	(btemp+11)^0,w,c
 27314  0141C2  6EDF               	movwf	indf2,c
 27315                           
 27316                           ;stkvar	_signs @ sp[(-4)+3]
 27317  0141C4  0EFF               	movlw	-1
 27318  0141C6  AEE3               	btfss	plusw1,7,c
 27319  0141C8  D008               	goto	l7710
 27320                           
 27321                           ;stkvar	_b @ sp[(-4)+-4]
 27322  0141CA  0EFB               	movlw	251
 27323  0141CC  24E1               	addwf	fsr1l,w,c
 27324  0141CE  6ED9               	movwf	fsr2l,c
 27325  0141D0  0EFF               	movlw	255
 27326  0141D2  20E2               	addwfc	fsr1h,w,c
 27327  0141D4  6EDA               	movwf	fsr2h,c
 27328  0141D6  0E00               	movlw	0
 27329  0141D8  8EDB               	bsf	plusw2,7,c
 27330  0141DA                     l7710:
 27331                           
 27332                           ;stkvar	_b @ sp[(-4)+-4]
 27333  0141DA  0EF8               	movlw	-8
 27334  0141DC  006F FF8C  F028    	movff	plusw1,btemp
 27335  0141E2  0EF9               	movlw	-7
 27336  0141E4  006F FF8C  F029    	movff	plusw1,btemp+1
 27337  0141EA  0EFA               	movlw	-6
 27338  0141EC  006F FF8C  F02A    	movff	plusw1,btemp+2
 27339  0141F2  0EFB               	movlw	-5
 27340  0141F4  006F FF8C  F02B    	movff	plusw1,btemp+3
 27341  0141FA                     l2900:
 27342                           
 27343                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27344  0141FA  0EF4               	movlw	244
 27345  0141FC  26E1               	addwf	fsr1l,f,c
 27346  0141FE  0EFF               	movlw	255
 27347  014200  22E2               	addwfc	fsr1h,f,c
 27348  014202  0012               	return		;funcret
 27349  014204                     __end_of___fladd:
 27350                           	opt callstack 0
 27351                           
 27352 ;; *************** function ___flmul *****************
 27353 ;; Defined at:
 27354 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27355 ;; Parameters:    Size  Location     Type
 27356 ;;  b               4  [STACK] unsigned char 
 27357 ;;  a               4  [STACK] unsigned char 
 27358 ;; Auto vars:     Size  Location     Type
 27359 ;;  prod            4  [STACK] struct .
 27360 ;;  grs             4  [STACK] unsigned long 
 27361 ;;  temp            2  [STACK] struct .
 27362 ;;  bexp            1  [STACK] unsigned char 
 27363 ;;  aexp            1  [STACK] unsigned char 
 27364 ;;  sign            1  [STACK] unsigned char 
 27365 ;; Return value:  Size  Location     Type
 27366 ;;                  4  [STACK] unsigned char 
 27367 ;; Registers used:
 27368 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27369 ;; Tracked objects:
 27370 ;;		On entry : 0/1
 27371 ;;		On exit  : 0/0
 27372 ;;		Unchanged: 0/0
 27373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27378 ;;Total ram usage:        0 bytes
 27379 ;; Hardware stack levels used:    1
 27380 ;; Hardware stack levels required when called:   15
 27381 ;; This function calls:
 27382 ;;		Nothing
 27383 ;; This function is called by:
 27384 ;;		_conv_raw_result
 27385 ;;		_lp_filter
 27386 ;;		_calc_model_data
 27387 ;;		_calc_bsoc
 27388 ;;		_init_bsoc
 27389 ;;		_efgtoa
 27390 ;; This function uses a reentrant model
 27391 ;;
 27392                           
 27393                           	psect	text106
 27394  01321E                     __ptext106:
 27395                           	opt callstack 0
 27396  01321E                     ___flmul:
 27397                           	opt callstack 0
 27398                           
 27399                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27400  01321E  0E0D               	movlw	13
 27401  013220  26E1               	addwf	fsr1l,f,c
 27402  013222  0E00               	movlw	0
 27403  013224  22E2               	addwfc	fsr1h,f,c
 27404                           
 27405                           ;stkvar	_b @ sp[(-13)+-4]
 27406                           
 27407                           ;incstack = 0
 27408 ;; hardware stack exceeded
 27409  013226  0EF2               	movlw	242
 27410  013228  24E1               	addwf	fsr1l,w,c
 27411  01322A  6ED9               	movwf	fsr2l,c
 27412  01322C  0EFF               	movlw	255
 27413  01322E  20E2               	addwfc	fsr1h,w,c
 27414  013230  6EDA               	movwf	fsr2h,c
 27415  013232  50DF               	movf	indf2,w,c
 27416  013234  6E33               	movwf	(btemp+11)^0,c
 27417  013236  0E80               	movlw	128
 27418  013238  1633               	andwf	(btemp+11)^0,f,c
 27419                           
 27420                           ;stkvar	_sign @ sp[(-13)+12]
 27421  01323A  0EFF               	movlw	-1
 27422  01323C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27423                           
 27424                           ;stkvar	_b @ sp[(-13)+-4]
 27425  013242  0EF2               	movlw	242
 27426  013244  24E1               	addwf	fsr1l,w,c
 27427  013246  6ED9               	movwf	fsr2l,c
 27428  013248  0EFF               	movlw	255
 27429  01324A  20E2               	addwfc	fsr1h,w,c
 27430  01324C  6EDA               	movwf	fsr2h,c
 27431  01324E  50DF               	movf	indf2,w,c
 27432  013250  6E33               	movwf	(btemp+11)^0,c
 27433  013252  90D8               	bcf	status,0,c
 27434  013254  3433               	rlcf	(btemp+11)^0,w,c
 27435  013256  6E32               	movwf	(btemp+10)^0,c
 27436                           
 27437                           ;stkvar	_bexp @ sp[(-13)+10]
 27438  013258  0EFD               	movlw	-3
 27439  01325A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27440                           
 27441                           ;stkvar	_b @ sp[(-13)+-4]
 27442  013260  0EF1               	movlw	241
 27443  013262  24E1               	addwf	fsr1l,w,c
 27444  013264  6ED9               	movwf	fsr2l,c
 27445  013266  0EFF               	movlw	255
 27446  013268  20E2               	addwfc	fsr1h,w,c
 27447  01326A  6EDA               	movwf	fsr2h,c
 27448  01326C  AEDF               	btfss	indf2,7,c
 27449  01326E  D002               	goto	l8094
 27450                           
 27451                           ;stkvar	_bexp @ sp[(-13)+10]
 27452  013270  0EFD               	movlw	-3
 27453  013272  80E3               	bsf	plusw1,0,c
 27454  013274                     l8094:
 27455                           
 27456                           ;stkvar	_bexp @ sp[(-13)+10]
 27457  013274  0EFD               	movlw	-3
 27458  013276  50E3               	movf	plusw1,w,c
 27459  013278  B4D8               	btfsc	status,2,c
 27460  01327A  D01F               	goto	l8102
 27461                           
 27462                           ;stkvar	_bexp @ sp[(-13)+10]
 27463  01327C  0EFD               	movlw	-3
 27464  01327E  28E3               	incf	plusw1,w,c
 27465  013280  A4D8               	btfss	status,2,c
 27466  013282  D018               	goto	l8100
 27467  013284  0E00               	movlw	0
 27468  013286  6E30               	movwf	(btemp+8)^0,c
 27469  013288  0E00               	movlw	0
 27470  01328A  6E31               	movwf	(btemp+9)^0,c
 27471  01328C  0E00               	movlw	0
 27472  01328E  6E32               	movwf	(btemp+10)^0,c
 27473  013290  0E00               	movlw	0
 27474  013292  6E33               	movwf	(btemp+11)^0,c
 27475                           
 27476                           ;stkvar	_b @ sp[(-13)+-4]
 27477  013294  0EEF               	movlw	-17
 27478  013296  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27479  01329C  0EF0               	movlw	-16
 27480  01329E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27481  0132A4  0EF1               	movlw	-15
 27482  0132A6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27483  0132AC  0EF2               	movlw	-14
 27484  0132AE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27485  0132B4                     l8100:
 27486                           
 27487                           ;stkvar	_b @ sp[(-13)+-4]
 27488  0132B4  0EF1               	movlw	-15
 27489  0132B6  8EE3               	bsf	plusw1,7,c
 27490  0132B8  D018               	goto	l8104
 27491  0132BA                     l8102:
 27492  0132BA  0E00               	movlw	0
 27493  0132BC  6E30               	movwf	(btemp+8)^0,c
 27494  0132BE  0E00               	movlw	0
 27495  0132C0  6E31               	movwf	(btemp+9)^0,c
 27496  0132C2  0E00               	movlw	0
 27497  0132C4  6E32               	movwf	(btemp+10)^0,c
 27498  0132C6  0E00               	movlw	0
 27499  0132C8  6E33               	movwf	(btemp+11)^0,c
 27500                           
 27501                           ;stkvar	_b @ sp[(-13)+-4]
 27502  0132CA  0EEF               	movlw	-17
 27503  0132CC  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27504  0132D2  0EF0               	movlw	-16
 27505  0132D4  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27506  0132DA  0EF1               	movlw	-15
 27507  0132DC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27508  0132E2  0EF2               	movlw	-14
 27509  0132E4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27510  0132EA                     l8104:
 27511                           
 27512                           ;stkvar	_a @ sp[(-13)+-8]
 27513  0132EA  0EEE               	movlw	238
 27514  0132EC  24E1               	addwf	fsr1l,w,c
 27515  0132EE  6ED9               	movwf	fsr2l,c
 27516  0132F0  0EFF               	movlw	255
 27517  0132F2  20E2               	addwfc	fsr1h,w,c
 27518  0132F4  6EDA               	movwf	fsr2h,c
 27519  0132F6  50DF               	movf	indf2,w,c
 27520  0132F8  6E33               	movwf	(btemp+11)^0,c
 27521  0132FA  0E80               	movlw	128
 27522  0132FC  1633               	andwf	(btemp+11)^0,f,c
 27523                           
 27524                           ;stkvar	_sign @ sp[(-13)+12]
 27525  0132FE  50E1               	movf	fsr1l,w,c
 27526  013300  0FFF               	addlw	-1
 27527  013302  6ED9               	movwf	fsr2l,c
 27528  013304  50E2               	movf	fsr1h,w,c
 27529  013306  6EDA               	movwf	fsr2h,c
 27530  013308  0EFF               	movlw	255
 27531  01330A  22DA               	addwfc	fsr2h,f,c
 27532  01330C  5033               	movf	(btemp+11)^0,w,c
 27533  01330E  1ADF               	xorwf	indf2,f,c
 27534                           
 27535                           ;stkvar	_a @ sp[(-13)+-8]
 27536  013310  0EEE               	movlw	238
 27537  013312  24E1               	addwf	fsr1l,w,c
 27538  013314  6ED9               	movwf	fsr2l,c
 27539  013316  0EFF               	movlw	255
 27540  013318  20E2               	addwfc	fsr1h,w,c
 27541  01331A  6EDA               	movwf	fsr2h,c
 27542  01331C  50DF               	movf	indf2,w,c
 27543  01331E  6E33               	movwf	(btemp+11)^0,c
 27544  013320  90D8               	bcf	status,0,c
 27545  013322  3433               	rlcf	(btemp+11)^0,w,c
 27546  013324  6E32               	movwf	(btemp+10)^0,c
 27547                           
 27548                           ;stkvar	_aexp @ sp[(-13)+11]
 27549  013326  0EFE               	movlw	-2
 27550  013328  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27551                           
 27552                           ;stkvar	_a @ sp[(-13)+-8]
 27553  01332E  0EED               	movlw	237
 27554  013330  24E1               	addwf	fsr1l,w,c
 27555  013332  6ED9               	movwf	fsr2l,c
 27556  013334  0EFF               	movlw	255
 27557  013336  20E2               	addwfc	fsr1h,w,c
 27558  013338  6EDA               	movwf	fsr2h,c
 27559  01333A  AEDF               	btfss	indf2,7,c
 27560  01333C  D002               	goto	l8112
 27561                           
 27562                           ;stkvar	_aexp @ sp[(-13)+11]
 27563  01333E  0EFE               	movlw	-2
 27564  013340  80E3               	bsf	plusw1,0,c
 27565  013342                     l8112:
 27566                           
 27567                           ;stkvar	_aexp @ sp[(-13)+11]
 27568  013342  0EFE               	movlw	-2
 27569  013344  50E3               	movf	plusw1,w,c
 27570  013346  B4D8               	btfsc	status,2,c
 27571  013348  D01F               	goto	l8120
 27572                           
 27573                           ;stkvar	_aexp @ sp[(-13)+11]
 27574  01334A  0EFE               	movlw	-2
 27575  01334C  28E3               	incf	plusw1,w,c
 27576  01334E  A4D8               	btfss	status,2,c
 27577  013350  D018               	goto	l8118
 27578  013352  0E00               	movlw	0
 27579  013354  6E30               	movwf	(btemp+8)^0,c
 27580  013356  0E00               	movlw	0
 27581  013358  6E31               	movwf	(btemp+9)^0,c
 27582  01335A  0E00               	movlw	0
 27583  01335C  6E32               	movwf	(btemp+10)^0,c
 27584  01335E  0E00               	movlw	0
 27585  013360  6E33               	movwf	(btemp+11)^0,c
 27586                           
 27587                           ;stkvar	_a @ sp[(-13)+-8]
 27588  013362  0EEB               	movlw	-21
 27589  013364  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27590  01336A  0EEC               	movlw	-20
 27591  01336C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27592  013372  0EED               	movlw	-19
 27593  013374  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27594  01337A  0EEE               	movlw	-18
 27595  01337C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27596  013382                     l8118:
 27597                           
 27598                           ;stkvar	_a @ sp[(-13)+-8]
 27599  013382  0EED               	movlw	-19
 27600  013384  8EE3               	bsf	plusw1,7,c
 27601  013386  D018               	goto	l8122
 27602  013388                     l8120:
 27603  013388  0E00               	movlw	0
 27604  01338A  6E30               	movwf	(btemp+8)^0,c
 27605  01338C  0E00               	movlw	0
 27606  01338E  6E31               	movwf	(btemp+9)^0,c
 27607  013390  0E00               	movlw	0
 27608  013392  6E32               	movwf	(btemp+10)^0,c
 27609  013394  0E00               	movlw	0
 27610  013396  6E33               	movwf	(btemp+11)^0,c
 27611                           
 27612                           ;stkvar	_a @ sp[(-13)+-8]
 27613  013398  0EEB               	movlw	-21
 27614  01339A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27615  0133A0  0EEC               	movlw	-20
 27616  0133A2  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27617  0133A8  0EED               	movlw	-19
 27618  0133AA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27619  0133B0  0EEE               	movlw	-18
 27620  0133B2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27621  0133B8                     l8122:
 27622                           
 27623                           ;stkvar	_aexp @ sp[(-13)+11]
 27624  0133B8  0EFE               	movlw	-2
 27625  0133BA  50E3               	movf	plusw1,w,c
 27626  0133BC  B4D8               	btfsc	status,2,c
 27627  0133BE  D004               	goto	u6570
 27628                           
 27629                           ;stkvar	_bexp @ sp[(-13)+10]
 27630  0133C0  0EFD               	movlw	-3
 27631  0133C2  50E3               	movf	plusw1,w,c
 27632  0133C4  A4D8               	btfss	status,2,c
 27633  0133C6  D009               	goto	l8130
 27634  0133C8                     u6570:
 27635  0133C8  0E00               	movlw	0
 27636  0133CA  6E28               	movwf	btemp^0,c
 27637  0133CC  0E00               	movlw	0
 27638  0133CE  6E29               	movwf	(btemp+1)^0,c
 27639  0133D0  0E00               	movlw	0
 27640  0133D2  6E2A               	movwf	(btemp+2)^0,c
 27641  0133D4  0E00               	movlw	0
 27642  0133D6  6E2B               	movwf	(btemp+3)^0,c
 27643  0133D8  D332               	goto	l2981
 27644  0133DA                     l8130:
 27645                           
 27646                           ;stkvar	_b @ sp[(-13)+-4]
 27647  0133DA  0EEF               	movlw	-17
 27648  0133DC  006F FF8C  F033    	movff	plusw1,btemp+11
 27649                           
 27650                           ;stkvar	_a @ sp[(-13)+-8]
 27651  0133E2  0EED               	movlw	237
 27652  0133E4  24E1               	addwf	fsr1l,w,c
 27653  0133E6  6ED9               	movwf	fsr2l,c
 27654  0133E8  0EFF               	movlw	255
 27655  0133EA  20E2               	addwfc	fsr1h,w,c
 27656  0133EC  6EDA               	movwf	fsr2h,c
 27657  0133EE  50DF               	movf	indf2,w,c
 27658  0133F0  0233               	mulwf	(btemp+11)^0,c
 27659                           
 27660                           ;stkvar	_temp @ sp[(-13)+8]
 27661  0133F2  0EFB               	movlw	-5
 27662  0133F4  006F FFCF FFE3     	movff	prodl,plusw1
 27663  0133FA  0EFC               	movlw	-4
 27664  0133FC  006F FFD3 FFE3     	movff	prodh,plusw1
 27665                           
 27666                           ;stkvar	_temp @ sp[(-13)+8]
 27667  013402  0EFB               	movlw	-5
 27668  013404  006F FF8C  F033    	movff	plusw1,btemp+11
 27669  01340A  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 27670  013410  6A2D               	clrf	(btemp+5)^0,c
 27671  013412  6A2E               	clrf	(btemp+6)^0,c
 27672  013414  6A2F               	clrf	(btemp+7)^0,c
 27673                           
 27674                           ;stkvar	_grs @ sp[(-13)+4]
 27675  013416  0EF7               	movlw	-9
 27676  013418  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 27677  01341E  0EF8               	movlw	-8
 27678  013420  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 27679  013426  0EF9               	movlw	-7
 27680  013428  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 27681  01342E  0EFA               	movlw	-6
 27682  013430  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 27683                           
 27684                           ;stkvar	_temp @ sp[(-13)+8]
 27685  013436  0EFC               	movlw	252
 27686  013438  24E1               	addwf	fsr1l,w,c
 27687  01343A  6ED9               	movwf	fsr2l,c
 27688  01343C  0EFF               	movlw	255
 27689  01343E  20E2               	addwfc	fsr1h,w,c
 27690  013440  6EDA               	movwf	fsr2h,c
 27691  013442  50DF               	movf	indf2,w,c
 27692  013444  6E33               	movwf	(btemp+11)^0,c
 27693  013446  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 27694  01344C  6A2D               	clrf	(btemp+5)^0,c
 27695  01344E  6A2E               	clrf	(btemp+6)^0,c
 27696  013450  6A2F               	clrf	(btemp+7)^0,c
 27697                           
 27698                           ;stkvar	_prod @ sp[(-13)+0]
 27699  013452  0EF3               	movlw	-13
 27700  013454  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 27701  01345A  0EF4               	movlw	-12
 27702  01345C  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 27703  013462  0EF5               	movlw	-11
 27704  013464  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 27705  01346A  0EF6               	movlw	-10
 27706  01346C  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 27707                           
 27708                           ;stkvar	_b @ sp[(-13)+-4]
 27709  013472  0EF0               	movlw	240
 27710  013474  24E1               	addwf	fsr1l,w,c
 27711  013476  6ED9               	movwf	fsr2l,c
 27712  013478  0EFF               	movlw	255
 27713  01347A  20E2               	addwfc	fsr1h,w,c
 27714  01347C  6EDA               	movwf	fsr2h,c
 27715  01347E  50DF               	movf	indf2,w,c
 27716  013480  6E33               	movwf	(btemp+11)^0,c
 27717                           
 27718                           ;stkvar	_a @ sp[(-13)+-8]
 27719  013482  0EEC               	movlw	236
 27720  013484  24E1               	addwf	fsr1l,w,c
 27721  013486  6ED9               	movwf	fsr2l,c
 27722  013488  0EFF               	movlw	255
 27723  01348A  20E2               	addwfc	fsr1h,w,c
 27724  01348C  6EDA               	movwf	fsr2h,c
 27725  01348E  50DF               	movf	indf2,w,c
 27726  013490  0233               	mulwf	(btemp+11)^0,c
 27727                           
 27728                           ;stkvar	_temp @ sp[(-13)+8]
 27729  013492  0EFB               	movlw	-5
 27730  013494  006F FFCF FFE3     	movff	prodl,plusw1
 27731  01349A  0EFC               	movlw	-4
 27732  01349C  006F FFD3 FFE3     	movff	prodh,plusw1
 27733                           
 27734                           ;stkvar	_grs @ sp[(-13)+4]
 27735  0134A2  50E1               	movf	fsr1l,w,c
 27736  0134A4  0FF7               	addlw	-9
 27737  0134A6  6ED9               	movwf	fsr2l,c
 27738  0134A8  50E2               	movf	fsr1h,w,c
 27739  0134AA  6EDA               	movwf	fsr2h,c
 27740  0134AC  0EFF               	movlw	255
 27741  0134AE  22DA               	addwfc	fsr2h,f,c
 27742                           
 27743                           ;stkvar	_temp @ sp[(-13)+8]
 27744  0134B0  0EFB               	movlw	-5
 27745  0134B2  50E3               	movf	plusw1,w,c
 27746  0134B4  26DE               	addwf	postinc2,f,c
 27747  0134B6  0E00               	movlw	0
 27748  0134B8  22DE               	addwfc	postinc2,f,c
 27749  0134BA  22DE               	addwfc	postinc2,f,c
 27750  0134BC  22DE               	addwfc	postinc2,f,c
 27751                           
 27752                           ;stkvar	_prod @ sp[(-13)+0]
 27753  0134BE  50E1               	movf	fsr1l,w,c
 27754  0134C0  0FF3               	addlw	-13
 27755  0134C2  6ED9               	movwf	fsr2l,c
 27756  0134C4  50E2               	movf	fsr1h,w,c
 27757  0134C6  6EDA               	movwf	fsr2h,c
 27758  0134C8  0EFF               	movlw	255
 27759  0134CA  22DA               	addwfc	fsr2h,f,c
 27760                           
 27761                           ;stkvar	_temp @ sp[(-13)+8]
 27762  0134CC  0EFC               	movlw	252
 27763  0134CE  24E1               	addwf	fsr1l,w,c
 27764  0134D0  6EE9               	movwf	fsr0l,c
 27765  0134D2  0EFF               	movlw	255
 27766  0134D4  20E2               	addwfc	fsr1h,w,c
 27767  0134D6  6EEA               	movwf	fsr0h,c
 27768  0134D8  50EF               	movf	indf0,w,c
 27769  0134DA  26DE               	addwf	postinc2,f,c
 27770  0134DC  0E00               	movlw	0
 27771  0134DE  22DE               	addwfc	postinc2,f,c
 27772  0134E0  22DE               	addwfc	postinc2,f,c
 27773  0134E2  22DE               	addwfc	postinc2,f,c
 27774                           
 27775                           ;stkvar	_b @ sp[(-13)+-4]
 27776  0134E4  0EF1               	movlw	241
 27777  0134E6  24E1               	addwf	fsr1l,w,c
 27778  0134E8  6ED9               	movwf	fsr2l,c
 27779  0134EA  0EFF               	movlw	255
 27780  0134EC  20E2               	addwfc	fsr1h,w,c
 27781  0134EE  6EDA               	movwf	fsr2h,c
 27782  0134F0  50DF               	movf	indf2,w,c
 27783  0134F2  6E33               	movwf	(btemp+11)^0,c
 27784                           
 27785                           ;stkvar	_a @ sp[(-13)+-8]
 27786  0134F4  0EEB               	movlw	-21
 27787  0134F6  50E3               	movf	plusw1,w,c
 27788  0134F8  0233               	mulwf	(btemp+11)^0,c
 27789                           
 27790                           ;stkvar	_temp @ sp[(-13)+8]
 27791  0134FA  0EFB               	movlw	-5
 27792  0134FC  006F FFCF FFE3     	movff	prodl,plusw1
 27793  013502  0EFC               	movlw	-4
 27794  013504  006F FFD3 FFE3     	movff	prodh,plusw1
 27795                           
 27796                           ;stkvar	_grs @ sp[(-13)+4]
 27797  01350A  50E1               	movf	fsr1l,w,c
 27798  01350C  0FF7               	addlw	-9
 27799  01350E  6ED9               	movwf	fsr2l,c
 27800  013510  50E2               	movf	fsr1h,w,c
 27801  013512  6EDA               	movwf	fsr2h,c
 27802  013514  0EFF               	movlw	255
 27803  013516  22DA               	addwfc	fsr2h,f,c
 27804                           
 27805                           ;stkvar	_temp @ sp[(-13)+8]
 27806  013518  0EFB               	movlw	-5
 27807  01351A  50E3               	movf	plusw1,w,c
 27808  01351C  26DE               	addwf	postinc2,f,c
 27809  01351E  0E00               	movlw	0
 27810  013520  22DE               	addwfc	postinc2,f,c
 27811  013522  22DE               	addwfc	postinc2,f,c
 27812  013524  22DE               	addwfc	postinc2,f,c
 27813                           
 27814                           ;stkvar	_prod @ sp[(-13)+0]
 27815  013526  50E1               	movf	fsr1l,w,c
 27816  013528  0FF3               	addlw	-13
 27817  01352A  6ED9               	movwf	fsr2l,c
 27818  01352C  50E2               	movf	fsr1h,w,c
 27819  01352E  6EDA               	movwf	fsr2h,c
 27820  013530  0EFF               	movlw	255
 27821  013532  22DA               	addwfc	fsr2h,f,c
 27822                           
 27823                           ;stkvar	_temp @ sp[(-13)+8]
 27824  013534  0EFC               	movlw	252
 27825  013536  24E1               	addwf	fsr1l,w,c
 27826  013538  6EE9               	movwf	fsr0l,c
 27827  01353A  0EFF               	movlw	255
 27828  01353C  20E2               	addwfc	fsr1h,w,c
 27829  01353E  6EEA               	movwf	fsr0h,c
 27830  013540  50EF               	movf	indf0,w,c
 27831  013542  26DE               	addwf	postinc2,f,c
 27832  013544  0E00               	movlw	0
 27833  013546  22DE               	addwfc	postinc2,f,c
 27834  013548  22DE               	addwfc	postinc2,f,c
 27835  01354A  22DE               	addwfc	postinc2,f,c
 27836                           
 27837                           ;stkvar	_grs @ sp[(-13)+4]
 27838  01354C  50E1               	movf	fsr1l,w,c
 27839  01354E  0FF7               	addlw	-9
 27840  013550  6ED9               	movwf	fsr2l,c
 27841  013552  50E2               	movf	fsr1h,w,c
 27842  013554  6EDA               	movwf	fsr2h,c
 27843  013556  0EFF               	movlw	255
 27844  013558  22DA               	addwfc	fsr2h,f,c
 27845  01355A  0E08               	movlw	8
 27846  01355C                     u6585:
 27847  01355C  90D8               	bcf	status,0,c
 27848  01355E  36DE               	rlcf	postinc2,f,c
 27849  013560  36DE               	rlcf	postinc2,f,c
 27850  013562  36DE               	rlcf	postinc2,f,c
 27851  013564  36DD               	rlcf	postdec2,f,c
 27852  013566  52DD               	movf	postdec2,f,c
 27853  013568  52DD               	movf	postdec2,f,c
 27854  01356A  2EE8               	decfsz	wreg,f,c
 27855  01356C  D7F7               	goto	u6585
 27856                           
 27857                           ;stkvar	_b @ sp[(-13)+-4]
 27858  01356E  0EF0               	movlw	240
 27859  013570  24E1               	addwf	fsr1l,w,c
 27860  013572  6ED9               	movwf	fsr2l,c
 27861  013574  0EFF               	movlw	255
 27862  013576  20E2               	addwfc	fsr1h,w,c
 27863  013578  6EDA               	movwf	fsr2h,c
 27864  01357A  50DF               	movf	indf2,w,c
 27865  01357C  6E33               	movwf	(btemp+11)^0,c
 27866                           
 27867                           ;stkvar	_a @ sp[(-13)+-8]
 27868  01357E  0EEB               	movlw	-21
 27869  013580  50E3               	movf	plusw1,w,c
 27870  013582  0233               	mulwf	(btemp+11)^0,c
 27871                           
 27872                           ;stkvar	_temp @ sp[(-13)+8]
 27873  013584  0EFB               	movlw	-5
 27874  013586  006F FFCF FFE3     	movff	prodl,plusw1
 27875  01358C  0EFC               	movlw	-4
 27876  01358E  006F FFD3 FFE3     	movff	prodh,plusw1
 27877                           
 27878                           ;stkvar	_temp @ sp[(-13)+8]
 27879  013594  0EFB               	movlw	-5
 27880  013596  006F FF8C  F032    	movff	plusw1,btemp+10
 27881  01359C  0EFC               	movlw	-4
 27882  01359E  006F FF8C  F033    	movff	plusw1,btemp+11
 27883                           
 27884                           ;stkvar	_grs @ sp[(-13)+4]
 27885  0135A4  50E1               	movf	fsr1l,w,c
 27886  0135A6  0FF7               	addlw	-9
 27887  0135A8  6ED9               	movwf	fsr2l,c
 27888  0135AA  50E2               	movf	fsr1h,w,c
 27889  0135AC  6EDA               	movwf	fsr2h,c
 27890  0135AE  0EFF               	movlw	255
 27891  0135B0  22DA               	addwfc	fsr2h,f,c
 27892  0135B2  5032               	movf	(btemp+10)^0,w,c
 27893  0135B4  26DE               	addwf	postinc2,f,c
 27894  0135B6  5033               	movf	(btemp+11)^0,w,c
 27895  0135B8  22DE               	addwfc	postinc2,f,c
 27896  0135BA  0E00               	movlw	0
 27897  0135BC  22DE               	addwfc	postinc2,f,c
 27898  0135BE  22DE               	addwfc	postinc2,f,c
 27899                           
 27900                           ;stkvar	_b @ sp[(-13)+-4]
 27901  0135C0  0EEF               	movlw	-17
 27902  0135C2  006F FF8C  F033    	movff	plusw1,btemp+11
 27903                           
 27904                           ;stkvar	_a @ sp[(-13)+-8]
 27905  0135C8  0EEC               	movlw	236
 27906  0135CA  24E1               	addwf	fsr1l,w,c
 27907  0135CC  6ED9               	movwf	fsr2l,c
 27908  0135CE  0EFF               	movlw	255
 27909  0135D0  20E2               	addwfc	fsr1h,w,c
 27910  0135D2  6EDA               	movwf	fsr2h,c
 27911  0135D4  50DF               	movf	indf2,w,c
 27912  0135D6  0233               	mulwf	(btemp+11)^0,c
 27913                           
 27914                           ;stkvar	_temp @ sp[(-13)+8]
 27915  0135D8  0EFB               	movlw	-5
 27916  0135DA  006F FFCF FFE3     	movff	prodl,plusw1
 27917  0135E0  0EFC               	movlw	-4
 27918  0135E2  006F FFD3 FFE3     	movff	prodh,plusw1
 27919                           
 27920                           ;stkvar	_temp @ sp[(-13)+8]
 27921  0135E8  0EFB               	movlw	-5
 27922  0135EA  006F FF8C  F032    	movff	plusw1,btemp+10
 27923  0135F0  0EFC               	movlw	-4
 27924  0135F2  006F FF8C  F033    	movff	plusw1,btemp+11
 27925                           
 27926                           ;stkvar	_grs @ sp[(-13)+4]
 27927  0135F8  50E1               	movf	fsr1l,w,c
 27928  0135FA  0FF7               	addlw	-9
 27929  0135FC  6ED9               	movwf	fsr2l,c
 27930  0135FE  50E2               	movf	fsr1h,w,c
 27931  013600  6EDA               	movwf	fsr2h,c
 27932  013602  0EFF               	movlw	255
 27933  013604  22DA               	addwfc	fsr2h,f,c
 27934  013606  5032               	movf	(btemp+10)^0,w,c
 27935  013608  26DE               	addwf	postinc2,f,c
 27936  01360A  5033               	movf	(btemp+11)^0,w,c
 27937  01360C  22DE               	addwfc	postinc2,f,c
 27938  01360E  0E00               	movlw	0
 27939  013610  22DE               	addwfc	postinc2,f,c
 27940  013612  22DE               	addwfc	postinc2,f,c
 27941                           
 27942                           ;stkvar	_grs @ sp[(-13)+4]
 27943  013614  50E1               	movf	fsr1l,w,c
 27944  013616  0FF7               	addlw	-9
 27945  013618  6ED9               	movwf	fsr2l,c
 27946  01361A  50E2               	movf	fsr1h,w,c
 27947  01361C  6EDA               	movwf	fsr2h,c
 27948  01361E  0EFF               	movlw	255
 27949  013620  22DA               	addwfc	fsr2h,f,c
 27950  013622  0E08               	movlw	8
 27951  013624                     u6595:
 27952  013624  90D8               	bcf	status,0,c
 27953  013626  36DE               	rlcf	postinc2,f,c
 27954  013628  36DE               	rlcf	postinc2,f,c
 27955  01362A  36DE               	rlcf	postinc2,f,c
 27956  01362C  36DD               	rlcf	postdec2,f,c
 27957  01362E  52DD               	movf	postdec2,f,c
 27958  013630  52DD               	movf	postdec2,f,c
 27959  013632  2EE8               	decfsz	wreg,f,c
 27960  013634  D7F7               	goto	u6595
 27961                           
 27962                           ;stkvar	_b @ sp[(-13)+-4]
 27963  013636  0EEF               	movlw	-17
 27964  013638  006F FF8C  F033    	movff	plusw1,btemp+11
 27965                           
 27966                           ;stkvar	_a @ sp[(-13)+-8]
 27967  01363E  0EEB               	movlw	-21
 27968  013640  50E3               	movf	plusw1,w,c
 27969  013642  0233               	mulwf	(btemp+11)^0,c
 27970                           
 27971                           ;stkvar	_temp @ sp[(-13)+8]
 27972  013644  0EFB               	movlw	-5
 27973  013646  006F FFCF FFE3     	movff	prodl,plusw1
 27974  01364C  0EFC               	movlw	-4
 27975  01364E  006F FFD3 FFE3     	movff	prodh,plusw1
 27976                           
 27977                           ;stkvar	_temp @ sp[(-13)+8]
 27978  013654  0EFB               	movlw	-5
 27979  013656  006F FF8C  F032    	movff	plusw1,btemp+10
 27980  01365C  0EFC               	movlw	-4
 27981  01365E  006F FF8C  F033    	movff	plusw1,btemp+11
 27982                           
 27983                           ;stkvar	_grs @ sp[(-13)+4]
 27984  013664  50E1               	movf	fsr1l,w,c
 27985  013666  0FF7               	addlw	-9
 27986  013668  6ED9               	movwf	fsr2l,c
 27987  01366A  50E2               	movf	fsr1h,w,c
 27988  01366C  6EDA               	movwf	fsr2h,c
 27989  01366E  0EFF               	movlw	255
 27990  013670  22DA               	addwfc	fsr2h,f,c
 27991  013672  5032               	movf	(btemp+10)^0,w,c
 27992  013674  26DE               	addwf	postinc2,f,c
 27993  013676  5033               	movf	(btemp+11)^0,w,c
 27994  013678  22DE               	addwfc	postinc2,f,c
 27995  01367A  0E00               	movlw	0
 27996  01367C  22DE               	addwfc	postinc2,f,c
 27997  01367E  22DE               	addwfc	postinc2,f,c
 27998                           
 27999                           ;stkvar	_b @ sp[(-13)+-4]
 28000  013680  0EF0               	movlw	240
 28001  013682  24E1               	addwf	fsr1l,w,c
 28002  013684  6ED9               	movwf	fsr2l,c
 28003  013686  0EFF               	movlw	255
 28004  013688  20E2               	addwfc	fsr1h,w,c
 28005  01368A  6EDA               	movwf	fsr2h,c
 28006  01368C  50DF               	movf	indf2,w,c
 28007  01368E  6E33               	movwf	(btemp+11)^0,c
 28008                           
 28009                           ;stkvar	_a @ sp[(-13)+-8]
 28010  013690  0EED               	movlw	237
 28011  013692  24E1               	addwf	fsr1l,w,c
 28012  013694  6ED9               	movwf	fsr2l,c
 28013  013696  0EFF               	movlw	255
 28014  013698  20E2               	addwfc	fsr1h,w,c
 28015  01369A  6EDA               	movwf	fsr2h,c
 28016  01369C  50DF               	movf	indf2,w,c
 28017  01369E  0233               	mulwf	(btemp+11)^0,c
 28018                           
 28019                           ;stkvar	_temp @ sp[(-13)+8]
 28020  0136A0  0EFB               	movlw	-5
 28021  0136A2  006F FFCF FFE3     	movff	prodl,plusw1
 28022  0136A8  0EFC               	movlw	-4
 28023  0136AA  006F FFD3 FFE3     	movff	prodh,plusw1
 28024                           
 28025                           ;stkvar	_temp @ sp[(-13)+8]
 28026  0136B0  0EFB               	movlw	-5
 28027  0136B2  006F FF8C  F032    	movff	plusw1,btemp+10
 28028  0136B8  0EFC               	movlw	-4
 28029  0136BA  006F FF8C  F033    	movff	plusw1,btemp+11
 28030                           
 28031                           ;stkvar	_prod @ sp[(-13)+0]
 28032  0136C0  50E1               	movf	fsr1l,w,c
 28033  0136C2  0FF3               	addlw	-13
 28034  0136C4  6ED9               	movwf	fsr2l,c
 28035  0136C6  50E2               	movf	fsr1h,w,c
 28036  0136C8  6EDA               	movwf	fsr2h,c
 28037  0136CA  0EFF               	movlw	255
 28038  0136CC  22DA               	addwfc	fsr2h,f,c
 28039  0136CE  5032               	movf	(btemp+10)^0,w,c
 28040  0136D0  26DE               	addwf	postinc2,f,c
 28041  0136D2  5033               	movf	(btemp+11)^0,w,c
 28042  0136D4  22DE               	addwfc	postinc2,f,c
 28043  0136D6  0E00               	movlw	0
 28044  0136D8  22DE               	addwfc	postinc2,f,c
 28045  0136DA  22DE               	addwfc	postinc2,f,c
 28046                           
 28047                           ;stkvar	_b @ sp[(-13)+-4]
 28048  0136DC  0EF1               	movlw	241
 28049  0136DE  24E1               	addwf	fsr1l,w,c
 28050  0136E0  6ED9               	movwf	fsr2l,c
 28051  0136E2  0EFF               	movlw	255
 28052  0136E4  20E2               	addwfc	fsr1h,w,c
 28053  0136E6  6EDA               	movwf	fsr2h,c
 28054  0136E8  50DF               	movf	indf2,w,c
 28055  0136EA  6E33               	movwf	(btemp+11)^0,c
 28056                           
 28057                           ;stkvar	_a @ sp[(-13)+-8]
 28058  0136EC  0EEC               	movlw	236
 28059  0136EE  24E1               	addwf	fsr1l,w,c
 28060  0136F0  6ED9               	movwf	fsr2l,c
 28061  0136F2  0EFF               	movlw	255
 28062  0136F4  20E2               	addwfc	fsr1h,w,c
 28063  0136F6  6EDA               	movwf	fsr2h,c
 28064  0136F8  50DF               	movf	indf2,w,c
 28065  0136FA  0233               	mulwf	(btemp+11)^0,c
 28066                           
 28067                           ;stkvar	_temp @ sp[(-13)+8]
 28068  0136FC  0EFB               	movlw	-5
 28069  0136FE  006F FFCF FFE3     	movff	prodl,plusw1
 28070  013704  0EFC               	movlw	-4
 28071  013706  006F FFD3 FFE3     	movff	prodh,plusw1
 28072                           
 28073                           ;stkvar	_temp @ sp[(-13)+8]
 28074  01370C  0EFB               	movlw	-5
 28075  01370E  006F FF8C  F032    	movff	plusw1,btemp+10
 28076  013714  0EFC               	movlw	-4
 28077  013716  006F FF8C  F033    	movff	plusw1,btemp+11
 28078                           
 28079                           ;stkvar	_prod @ sp[(-13)+0]
 28080  01371C  50E1               	movf	fsr1l,w,c
 28081  01371E  0FF3               	addlw	-13
 28082  013720  6ED9               	movwf	fsr2l,c
 28083  013722  50E2               	movf	fsr1h,w,c
 28084  013724  6EDA               	movwf	fsr2h,c
 28085  013726  0EFF               	movlw	255
 28086  013728  22DA               	addwfc	fsr2h,f,c
 28087  01372A  5032               	movf	(btemp+10)^0,w,c
 28088  01372C  26DE               	addwf	postinc2,f,c
 28089  01372E  5033               	movf	(btemp+11)^0,w,c
 28090  013730  22DE               	addwfc	postinc2,f,c
 28091  013732  0E00               	movlw	0
 28092  013734  22DE               	addwfc	postinc2,f,c
 28093  013736  22DE               	addwfc	postinc2,f,c
 28094                           
 28095                           ;stkvar	_b @ sp[(-13)+-4]
 28096  013738  0EF1               	movlw	241
 28097  01373A  24E1               	addwf	fsr1l,w,c
 28098  01373C  6ED9               	movwf	fsr2l,c
 28099  01373E  0EFF               	movlw	255
 28100  013740  20E2               	addwfc	fsr1h,w,c
 28101  013742  6EDA               	movwf	fsr2h,c
 28102  013744  50DF               	movf	indf2,w,c
 28103  013746  6E33               	movwf	(btemp+11)^0,c
 28104                           
 28105                           ;stkvar	_a @ sp[(-13)+-8]
 28106  013748  0EED               	movlw	237
 28107  01374A  24E1               	addwf	fsr1l,w,c
 28108  01374C  6ED9               	movwf	fsr2l,c
 28109  01374E  0EFF               	movlw	255
 28110  013750  20E2               	addwfc	fsr1h,w,c
 28111  013752  6EDA               	movwf	fsr2h,c
 28112  013754  50DF               	movf	indf2,w,c
 28113  013756  0233               	mulwf	(btemp+11)^0,c
 28114                           
 28115                           ;stkvar	_temp @ sp[(-13)+8]
 28116  013758  0EFB               	movlw	-5
 28117  01375A  006F FFCF FFE3     	movff	prodl,plusw1
 28118  013760  0EFC               	movlw	-4
 28119  013762  006F FFD3 FFE3     	movff	prodh,plusw1
 28120                           
 28121                           ;stkvar	_temp @ sp[(-13)+8]
 28122  013768  0EFB               	movlw	-5
 28123  01376A  006F FF8C  F032    	movff	plusw1,btemp+10
 28124  013770  0EFC               	movlw	-4
 28125  013772  006F FF8C  F033    	movff	plusw1,btemp+11
 28126  013778  5032               	movf	(btemp+10)^0,w,c
 28127  01377A  6E2C               	movwf	(btemp+4)^0,c
 28128  01377C  5033               	movf	(btemp+11)^0,w,c
 28129  01377E  6E2D               	movwf	(btemp+5)^0,c
 28130  013780  6A2E               	clrf	(btemp+6)^0,c
 28131  013782  6A2F               	clrf	(btemp+7)^0,c
 28132  013784  0060  F0B8  F02F   	movff	btemp+6,btemp+7
 28133  01378A  0060  F0B4  F02E   	movff	btemp+5,btemp+6
 28134  013790  0060  F0B0  F02D   	movff	btemp+4,btemp+5
 28135  013796  6A2C               	clrf	(btemp+4)^0,c
 28136                           
 28137                           ;stkvar	_prod @ sp[(-13)+0]
 28138  013798  50E1               	movf	fsr1l,w,c
 28139  01379A  0FF3               	addlw	-13
 28140  01379C  6ED9               	movwf	fsr2l,c
 28141  01379E  50E2               	movf	fsr1h,w,c
 28142  0137A0  6EDA               	movwf	fsr2h,c
 28143  0137A2  0EFF               	movlw	255
 28144  0137A4  22DA               	addwfc	fsr2h,f,c
 28145  0137A6  502C               	movf	(btemp+4)^0,w,c
 28146  0137A8  26DE               	addwf	postinc2,f,c
 28147  0137AA  502D               	movf	(btemp+5)^0,w,c
 28148  0137AC  22DE               	addwfc	postinc2,f,c
 28149  0137AE  502E               	movf	(btemp+6)^0,w,c
 28150  0137B0  22DE               	addwfc	postinc2,f,c
 28151  0137B2  502F               	movf	(btemp+7)^0,w,c
 28152  0137B4  22DE               	addwfc	postinc2,f,c
 28153                           
 28154                           ;stkvar	_prod @ sp[(-13)+0]
 28155  0137B6  50E1               	movf	fsr1l,w,c
 28156  0137B8  0FF3               	addlw	-13
 28157  0137BA  6ED9               	movwf	fsr2l,c
 28158  0137BC  50E2               	movf	fsr1h,w,c
 28159  0137BE  6EDA               	movwf	fsr2h,c
 28160  0137C0  0EFF               	movlw	255
 28161  0137C2  22DA               	addwfc	fsr2h,f,c
 28162                           
 28163                           ;stkvar	_grs @ sp[(-13)+4]
 28164  0137C4  0EFA               	movlw	250
 28165  0137C6  24E1               	addwf	fsr1l,w,c
 28166  0137C8  6EE9               	movwf	fsr0l,c
 28167  0137CA  0EFF               	movlw	255
 28168  0137CC  20E2               	addwfc	fsr1h,w,c
 28169  0137CE  6EEA               	movwf	fsr0h,c
 28170  0137D0  50EF               	movf	indf0,w,c
 28171  0137D2  26DE               	addwf	postinc2,f,c
 28172  0137D4  0E00               	movlw	0
 28173  0137D6  22DE               	addwfc	postinc2,f,c
 28174  0137D8  22DE               	addwfc	postinc2,f,c
 28175  0137DA  22DE               	addwfc	postinc2,f,c
 28176                           
 28177                           ;stkvar	_grs @ sp[(-13)+4]
 28178  0137DC  50E1               	movf	fsr1l,w,c
 28179  0137DE  0FF7               	addlw	-9
 28180  0137E0  6ED9               	movwf	fsr2l,c
 28181  0137E2  50E2               	movf	fsr1h,w,c
 28182  0137E4  6EDA               	movwf	fsr2h,c
 28183  0137E6  0EFF               	movlw	255
 28184  0137E8  22DA               	addwfc	fsr2h,f,c
 28185  0137EA  0E08               	movlw	8
 28186  0137EC                     u6605:
 28187  0137EC  90D8               	bcf	status,0,c
 28188  0137EE  36DE               	rlcf	postinc2,f,c
 28189  0137F0  36DE               	rlcf	postinc2,f,c
 28190  0137F2  36DE               	rlcf	postinc2,f,c
 28191  0137F4  36DD               	rlcf	postdec2,f,c
 28192  0137F6  52DD               	movf	postdec2,f,c
 28193  0137F8  52DD               	movf	postdec2,f,c
 28194  0137FA  2EE8               	decfsz	wreg,f,c
 28195  0137FC  D7F7               	goto	u6605
 28196  0137FE  0E82               	movlw	130
 28197  013800  6E32               	movwf	(btemp+10)^0,c
 28198  013802  0EFF               	movlw	255
 28199  013804  6E33               	movwf	(btemp+11)^0,c
 28200                           
 28201                           ;stkvar	_bexp @ sp[(-13)+10]
 28202  013806  0EFD               	movlw	-3
 28203  013808  50E3               	movf	plusw1,w,c
 28204  01380A  6E30               	movwf	(btemp+8)^0,c
 28205  01380C  6A31               	clrf	(btemp+9)^0,c
 28206                           
 28207                           ;stkvar	_aexp @ sp[(-13)+11]
 28208  01380E  0EFE               	movlw	-2
 28209  013810  50E3               	movf	plusw1,w,c
 28210  013812  2630               	addwf	(btemp+8)^0,f,c
 28211  013814  0E00               	movlw	0
 28212  013816  2231               	addwfc	(btemp+9)^0,f,c
 28213  013818  5032               	movf	(btemp+10)^0,w,c
 28214  01381A  2630               	addwf	(btemp+8)^0,f,c
 28215  01381C  5033               	movf	(btemp+11)^0,w,c
 28216  01381E  2231               	addwfc	(btemp+9)^0,f,c
 28217                           
 28218                           ;stkvar	_temp @ sp[(-13)+8]
 28219  013820  0EFB               	movlw	-5
 28220  013822  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 28221  013828  0EFC               	movlw	-4
 28222  01382A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 28223  013830  D021               	goto	l8192
 28224  013832                     l8182:
 28225                           
 28226                           ;stkvar	_prod @ sp[(-13)+0]
 28227  013832  90D8               	bcf	status,0,c
 28228  013834  0EF3               	movlw	-13
 28229  013836  36E3               	rlcf	plusw1,f,c
 28230  013838  0EF4               	movlw	-12
 28231  01383A  36E3               	rlcf	plusw1,f,c
 28232  01383C  0EF5               	movlw	-11
 28233  01383E  36E3               	rlcf	plusw1,f,c
 28234  013840  0EF6               	movlw	-10
 28235  013842  36E3               	rlcf	plusw1,f,c
 28236                           
 28237                           ;stkvar	_grs @ sp[(-13)+4]
 28238  013844  0EFA               	movlw	-6
 28239  013846  AEE3               	btfss	plusw1,7,c
 28240  013848  D002               	goto	l8188
 28241                           
 28242                           ;stkvar	_prod @ sp[(-13)+0]
 28243  01384A  0EF3               	movlw	-13
 28244  01384C  80E3               	bsf	plusw1,0,c
 28245  01384E                     l8188:
 28246                           
 28247                           ;stkvar	_grs @ sp[(-13)+4]
 28248  01384E  90D8               	bcf	status,0,c
 28249  013850  0EF7               	movlw	-9
 28250  013852  36E3               	rlcf	plusw1,f,c
 28251  013854  0EF8               	movlw	-8
 28252  013856  36E3               	rlcf	plusw1,f,c
 28253  013858  0EF9               	movlw	-7
 28254  01385A  36E3               	rlcf	plusw1,f,c
 28255  01385C  0EFA               	movlw	-6
 28256  01385E  36E3               	rlcf	plusw1,f,c
 28257                           
 28258                           ;stkvar	_temp @ sp[(-13)+8]
 28259  013860  50E1               	movf	fsr1l,w,c
 28260  013862  0FFB               	addlw	-5
 28261  013864  6ED9               	movwf	fsr2l,c
 28262  013866  50E2               	movf	fsr1h,w,c
 28263  013868  6EDA               	movwf	fsr2h,c
 28264  01386A  0EFF               	movlw	255
 28265  01386C  22DA               	addwfc	fsr2h,f,c
 28266  01386E  06DE               	decf	postinc2,f,c
 28267  013870  0E00               	movlw	0
 28268  013872  5ADD               	subwfb	postdec2,f,c
 28269  013874                     l8192:
 28270                           
 28271                           ;stkvar	_prod @ sp[(-13)+0]
 28272  013874  0EF5               	movlw	-11
 28273  013876  AEE3               	btfss	plusw1,7,c
 28274  013878  D7DC               	goto	l8182
 28275                           
 28276                           ;stkvar	_aexp @ sp[(-13)+11]
 28277  01387A  0EFE               	movlw	-2
 28278  01387C  6AE3               	clrf	plusw1,c
 28279                           
 28280                           ;stkvar	_grs @ sp[(-13)+4]
 28281  01387E  0EFA               	movlw	-6
 28282  013880  AEE3               	btfss	plusw1,7,c
 28283  013882  D020               	goto	l8206
 28284                           
 28285                           ;stkvar	_grs @ sp[(-13)+4]
 28286  013884  50E1               	movf	fsr1l,w,c
 28287  013886  0FF7               	addlw	-9
 28288  013888  6ED9               	movwf	fsr2l,c
 28289  01388A  50E2               	movf	fsr1h,w,c
 28290  01388C  6EDA               	movwf	fsr2h,c
 28291  01388E  0EFF               	movlw	255
 28292  013890  22DA               	addwfc	fsr2h,f,c
 28293  013892  0EFF               	movlw	255
 28294  013894  14DE               	andwf	postinc2,w,c
 28295  013896  6E30               	movwf	(btemp+8)^0,c
 28296  013898  0EFF               	movlw	255
 28297  01389A  14DE               	andwf	postinc2,w,c
 28298  01389C  6E31               	movwf	(btemp+9)^0,c
 28299  01389E  0EFF               	movlw	255
 28300  0138A0  14DE               	andwf	postinc2,w,c
 28301  0138A2  6E32               	movwf	(btemp+10)^0,c
 28302  0138A4  0E7F               	movlw	127
 28303  0138A6  14DE               	andwf	postinc2,w,c
 28304  0138A8  6E33               	movwf	(btemp+11)^0,c
 28305  0138AA  5030               	movf	(btemp+8)^0,w,c
 28306  0138AC  1031               	iorwf	(btemp+9)^0,w,c
 28307  0138AE  1032               	iorwf	(btemp+10)^0,w,c
 28308  0138B0  1033               	iorwf	(btemp+11)^0,w,c
 28309  0138B2  B4D8               	btfsc	status,2,c
 28310  0138B4  D004               	goto	l8202
 28311  0138B6                     u6640:
 28312                           
 28313                           ;stkvar	_aexp @ sp[(-13)+11]
 28314  0138B6  0EFE               	movlw	-2
 28315  0138B8  6AE3               	clrf	plusw1,c
 28316  0138BA  2AE3               	incf	plusw1,f,c
 28317  0138BC  D003               	goto	l8206
 28318  0138BE                     l8202:
 28319                           
 28320                           ;stkvar	_prod @ sp[(-13)+0]
 28321  0138BE  0EF3               	movlw	-13
 28322  0138C0  B0E3               	btfsc	plusw1,0,c
 28323  0138C2  D7F9               	goto	u6640
 28324  0138C4                     l8206:
 28325                           
 28326                           ;stkvar	_aexp @ sp[(-13)+11]
 28327  0138C4  0EFE               	movlw	-2
 28328  0138C6  50E3               	movf	plusw1,w,c
 28329  0138C8  B4D8               	btfsc	status,2,c
 28330  0138CA  D036               	goto	l8216
 28331                           
 28332                           ;stkvar	_prod @ sp[(-13)+0]
 28333  0138CC  50E1               	movf	fsr1l,w,c
 28334  0138CE  0FF3               	addlw	-13
 28335  0138D0  6ED9               	movwf	fsr2l,c
 28336  0138D2  50E2               	movf	fsr1h,w,c
 28337  0138D4  6EDA               	movwf	fsr2h,c
 28338  0138D6  0EFF               	movlw	255
 28339  0138D8  22DA               	addwfc	fsr2h,f,c
 28340  0138DA  2ADE               	incf	postinc2,f,c
 28341  0138DC  0E00               	movlw	0
 28342  0138DE  22DE               	addwfc	postinc2,f,c
 28343  0138E0  22DE               	addwfc	postinc2,f,c
 28344  0138E2  22DE               	addwfc	postinc2,f,c
 28345                           
 28346                           ;stkvar	_prod @ sp[(-13)+0]
 28347  0138E4  0EF6               	movlw	-10
 28348  0138E6  A0E3               	btfss	plusw1,0,c
 28349  0138E8  D027               	goto	l8216
 28350  0138EA  0E01               	movlw	1
 28351  0138EC  6E33               	movwf	(btemp+11)^0,c
 28352                           
 28353                           ;stkvar	_prod @ sp[(-13)+0]
 28354  0138EE  50E1               	movf	fsr1l,w,c
 28355  0138F0  0FF3               	addlw	-13
 28356  0138F2  6ED9               	movwf	fsr2l,c
 28357  0138F4  50E2               	movf	fsr1h,w,c
 28358  0138F6  6EDA               	movwf	fsr2h,c
 28359  0138F8  0EFF               	movlw	255
 28360  0138FA  22DA               	addwfc	fsr2h,f,c
 28361  0138FC  2833               	incf	(btemp+11)^0,w,c
 28362  0138FE  52DE               	movf	postinc2,f,c
 28363  013900  D008               	goto	u6680
 28364  013902                     u6685:
 28365  013902  52DE               	movf	postinc2,f,c
 28366  013904  90D8               	bcf	status,0,c
 28367  013906  BEDC               	btfsc	preinc2,7,c
 28368  013908  80D8               	bsf	status,0,c
 28369  01390A  32DD               	rrcf	postdec2,f,c
 28370  01390C  32DD               	rrcf	postdec2,f,c
 28371  01390E  32DD               	rrcf	postdec2,f,c
 28372  013910  32DE               	rrcf	postinc2,f,c
 28373  013912                     u6680:
 28374  013912  2EE8               	decfsz	wreg,f,c
 28375  013914  D7F6               	goto	u6685
 28376                           
 28377                           ;stkvar	_temp @ sp[(-13)+8]
 28378  013916  0EFB               	movlw	-5
 28379  013918  50E3               	movf	plusw1,w,c
 28380  01391A  0F01               	addlw	1
 28381  01391C  6E28               	movwf	btemp^0,c
 28382  01391E  0EFB               	movlw	-5
 28383  013920  0060  F0A3  FFE3   	movff	btemp,plusw1
 28384  013926  6A28               	clrf	btemp^0,c
 28385  013928  0EFC               	movlw	-4
 28386  01392A  50E3               	movf	plusw1,w,c
 28387  01392C  2028               	addwfc	btemp^0,w,c
 28388  01392E  6E28               	movwf	btemp^0,c
 28389  013930  0EFC               	movlw	-4
 28390  013932  0060  F0A3  FFE3   	movff	btemp,plusw1
 28391  013938                     l8216:
 28392                           
 28393                           ;stkvar	_temp @ sp[(-13)+8]
 28394  013938  0EFC               	movlw	-4
 28395  01393A  BEE3               	btfsc	plusw1,7,c
 28396  01393C  D020               	goto	l8220
 28397  01393E  0EFC               	movlw	-4
 28398  013940  50E3               	movf	plusw1,w,c
 28399  013942  E104               	bnz	u6690
 28400  013944  0EFB               	movlw	-5
 28401  013946  28E3               	incf	plusw1,w,c
 28402  013948  A0D8               	btfss	status,0,c
 28403  01394A  D019               	goto	l8220
 28404  01394C                     u6690:
 28405  01394C  0E00               	movlw	0
 28406  01394E  6E30               	movwf	(btemp+8)^0,c
 28407  013950  0E00               	movlw	0
 28408  013952  6E31               	movwf	(btemp+9)^0,c
 28409  013954  0E80               	movlw	128
 28410  013956  6E32               	movwf	(btemp+10)^0,c
 28411  013958  0E7F               	movlw	127
 28412  01395A  6E33               	movwf	(btemp+11)^0,c
 28413                           
 28414                           ;stkvar	_prod @ sp[(-13)+0]
 28415  01395C  0EF3               	movlw	-13
 28416  01395E  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 28417  013964  0EF4               	movlw	-12
 28418  013966  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 28419  01396C  0EF5               	movlw	-11
 28420  01396E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 28421  013974  0EF6               	movlw	-10
 28422  013976  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 28423  01397C  D044               	goto	l8236
 28424  01397E                     l8220:
 28425                           
 28426                           ;stkvar	_temp @ sp[(-13)+8]
 28427  01397E  0EFC               	movlw	-4
 28428  013980  BEE3               	btfsc	plusw1,7,c
 28429  013982  D007               	goto	u6700
 28430  013984  0EFC               	movlw	-4
 28431  013986  50E3               	movf	plusw1,w,c
 28432  013988  E10F               	bnz	l8226
 28433  01398A  0EFB               	movlw	-5
 28434  01398C  04E3               	decf	plusw1,w,c
 28435  01398E  B0D8               	btfsc	status,0,c
 28436  013990  D00B               	goto	l8226
 28437  013992                     u6700:
 28438                           
 28439                           ;stkvar	_prod @ sp[(-13)+0]
 28440  013992  0EF3               	movlw	-13
 28441  013994  6AE3               	clrf	plusw1,c
 28442  013996  0EF4               	movlw	-12
 28443  013998  6AE3               	clrf	plusw1,c
 28444  01399A  0EF5               	movlw	-11
 28445  01399C  6AE3               	clrf	plusw1,c
 28446  01399E  0EF6               	movlw	-10
 28447  0139A0  6AE3               	clrf	plusw1,c
 28448                           
 28449                           ;stkvar	_sign @ sp[(-13)+12]
 28450  0139A2  0EFF               	movlw	-1
 28451  0139A4  6AE3               	clrf	plusw1,c
 28452  0139A6  D02F               	goto	l8236
 28453  0139A8                     l8226:
 28454                           
 28455                           ;stkvar	_temp @ sp[(-13)+8]
 28456                           ;stkvar	_bexp @ sp[(-13)+10]
 28457  0139A8  0EFB               	movlw	-5
 28458  0139AA  006F FF8C  F028    	movff	plusw1,btemp
 28459  0139B0  0EFD               	movlw	-3
 28460  0139B2  0060  F0A3  FFE3   	movff	btemp,plusw1
 28461                           
 28462                           ;stkvar	_prod @ sp[(-13)+0]
 28463  0139B8  50E1               	movf	fsr1l,w,c
 28464  0139BA  0FF3               	addlw	-13
 28465  0139BC  6ED9               	movwf	fsr2l,c
 28466  0139BE  50E2               	movf	fsr1h,w,c
 28467  0139C0  6EDA               	movwf	fsr2h,c
 28468  0139C2  0EFF               	movlw	255
 28469  0139C4  22DA               	addwfc	fsr2h,f,c
 28470  0139C6  0EFF               	movlw	255
 28471  0139C8  16DE               	andwf	postinc2,f,c
 28472  0139CA  0EFF               	movlw	255
 28473  0139CC  16DE               	andwf	postinc2,f,c
 28474  0139CE  0E7F               	movlw	127
 28475  0139D0  16DE               	andwf	postinc2,f,c
 28476  0139D2  0E00               	movlw	0
 28477  0139D4  16DE               	andwf	postinc2,f,c
 28478                           
 28479                           ;stkvar	_bexp @ sp[(-13)+10]
 28480  0139D6  0EFD               	movlw	-3
 28481  0139D8  A0E3               	btfss	plusw1,0,c
 28482  0139DA  D008               	goto	l8234
 28483                           
 28484                           ;stkvar	_prod @ sp[(-13)+0]
 28485  0139DC  0EF5               	movlw	245
 28486  0139DE  24E1               	addwf	fsr1l,w,c
 28487  0139E0  6ED9               	movwf	fsr2l,c
 28488  0139E2  0EFF               	movlw	255
 28489  0139E4  20E2               	addwfc	fsr1h,w,c
 28490  0139E6  6EDA               	movwf	fsr2h,c
 28491  0139E8  0E00               	movlw	0
 28492  0139EA  8EDB               	bsf	plusw2,7,c
 28493  0139EC                     l8234:
 28494                           
 28495                           ;stkvar	_prod @ sp[(-13)+0]
 28496  0139EC  0EF6               	movlw	246
 28497  0139EE  24E1               	addwf	fsr1l,w,c
 28498  0139F0  6ED9               	movwf	fsr2l,c
 28499  0139F2  0EFF               	movlw	255
 28500  0139F4  20E2               	addwfc	fsr1h,w,c
 28501  0139F6  6EDA               	movwf	fsr2h,c
 28502                           
 28503                           ;stkvar	_bexp @ sp[(-13)+10]
 28504  0139F8  0EFD               	movlw	-3
 28505  0139FA  006F FF8C  F033    	movff	plusw1,btemp+11
 28506  013A00  90D8               	bcf	status,0,c
 28507  013A02  3033               	rrcf	(btemp+11)^0,w,c
 28508  013A04  6EDF               	movwf	indf2,c
 28509  013A06                     l8236:
 28510                           
 28511                           ;stkvar	_sign @ sp[(-13)+12]
 28512  013A06  0EFF               	movlw	-1
 28513  013A08  006F FF8C  F033    	movff	plusw1,btemp+11
 28514                           
 28515                           ;stkvar	_prod @ sp[(-13)+0]
 28516  013A0E  0EF6               	movlw	246
 28517  013A10  24E1               	addwf	fsr1l,w,c
 28518  013A12  6ED9               	movwf	fsr2l,c
 28519  013A14  0EFF               	movlw	255
 28520  013A16  20E2               	addwfc	fsr1h,w,c
 28521  013A18  6EDA               	movwf	fsr2h,c
 28522  013A1A  5033               	movf	(btemp+11)^0,w,c
 28523  013A1C  12DF               	iorwf	indf2,f,c
 28524                           
 28525                           ;stkvar	_prod @ sp[(-13)+0]
 28526  013A1E  0EF3               	movlw	-13
 28527  013A20  006F FF8C  F028    	movff	plusw1,btemp
 28528  013A26  0EF4               	movlw	-12
 28529  013A28  006F FF8C  F029    	movff	plusw1,btemp+1
 28530  013A2E  0EF5               	movlw	-11
 28531  013A30  006F FF8C  F02A    	movff	plusw1,btemp+2
 28532  013A36  0EF6               	movlw	-10
 28533  013A38  006F FF8C  F02B    	movff	plusw1,btemp+3
 28534  013A3E                     l2981:
 28535                           
 28536                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28537  013A3E  0EEB               	movlw	235
 28538  013A40  26E1               	addwf	fsr1l,f,c
 28539  013A42  0EFF               	movlw	255
 28540  013A44  22E2               	addwfc	fsr1h,f,c
 28541  013A46  0012               	return		;funcret
 28542  013A48                     __end_of___flmul:
 28543                           	opt callstack 0
 28544                           
 28545 ;; *************** function _SYSTEM_Initialize *****************
 28546 ;; Defined at:
 28547 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28548 ;; Parameters:    Size  Location     Type
 28549 ;;		None
 28550 ;; Auto vars:     Size  Location     Type
 28551 ;;		None
 28552 ;; Return value:  Size  Location     Type
 28553 ;;                  1  [STACK] void 
 28554 ;; Registers used:
 28555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28556 ;; Tracked objects:
 28557 ;;		On entry : 0/0
 28558 ;;		On exit  : 3F/3C
 28559 ;;		Unchanged: 0/0
 28560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28565 ;;Total ram usage:        0 bytes
 28566 ;; Hardware stack levels used:    1
 28567 ;; Hardware stack levels required when called:   17
 28568 ;; This function calls:
 28569 ;;		_ADCC_Initialize
 28570 ;;		_CLKREF_Initialize
 28571 ;;		_DMA1_Initialize
 28572 ;;		_DMA2_Initialize
 28573 ;;		_EXT_INT_Initialize
 28574 ;;		_FVR_Initialize
 28575 ;;		_INTERRUPT_Initialize
 28576 ;;		_OSCILLATOR_Initialize
 28577 ;;		_PIN_MANAGER_Initialize
 28578 ;;		_PMD_Initialize
 28579 ;;		_PWM8_Initialize
 28580 ;;		_SPI1_Initialize
 28581 ;;		_TMR2_Initialize
 28582 ;;		_TMR3_Initialize
 28583 ;;		_TMR5_Initialize
 28584 ;;		_TMR6_Initialize
 28585 ;;		_UART1_Initialize
 28586 ;;		_UART2_Initialize
 28587 ;; This function is called by:
 28588 ;;		_main
 28589 ;; This function uses a reentrant model
 28590 ;;
 28591                           
 28592                           	psect	text107
 28593  01A9AA                     __ptext107:
 28594                           	opt callstack 0
 28595  01A9AA                     _SYSTEM_Initialize:
 28596                           	opt callstack 13
 28597                           
 28598                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28599                           
 28600                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28601                           ;incstack = 0
 28602  01A9AA  ECB5  F0D2         	call	_INTERRUPT_Initialize	;wreg free
 28603                           
 28604                           ; BSR set to: 57
 28605                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28606  01A9AE  EC04  F0DB         	call	_PMD_Initialize	;wreg free
 28607                           
 28608                           ; BSR set to: 57
 28609                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28610  01A9B2  ECEB  F0CF         	call	_PIN_MANAGER_Initialize	;wreg free
 28611                           
 28612                           ; BSR set to: 58
 28613                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28614  01A9B6  ECF9  F0DA         	call	_OSCILLATOR_Initialize	;wreg free
 28615                           
 28616                           ; BSR set to: 57
 28617                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28618  01A9BA  EC79  F0DB         	call	_FVR_Initialize	;wreg free
 28619                           
 28620                           ; BSR set to: 62
 28621                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28622  01A9BE  EC4B  F0D2         	call	_ADCC_Initialize	;wreg free
 28623                           
 28624                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 28625  01A9C2  ECEE  F0DA         	call	_PWM8_Initialize	;wreg free
 28626                           
 28627                           ; BSR set to: 63
 28628                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 28629  01A9C6  ECD7  F0DA         	call	_TMR2_Initialize	;wreg free
 28630                           
 28631                           ; BSR set to: 57
 28632                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28633  01A9CA  EC53  F0D7         	call	_EXT_INT_Initialize	;wreg free
 28634                           
 28635                           ; BSR set to: 57
 28636                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28637  01A9CE  EC40  F0D8         	call	_TMR6_Initialize	;wreg free
 28638                           
 28639                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28640  01A9D2  ECAA  F0D5         	call	_TMR3_Initialize	;wreg free
 28641                           
 28642                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28643  01A9D6  EC87  F0D5         	call	_TMR5_Initialize	;wreg free
 28644                           
 28645                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28646  01A9DA  EC64  F0D5         	call	_UART1_Initialize	;wreg free
 28647                           
 28648                           ; BSR set to: 57
 28649                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28650  01A9DE  EC7C  F0D3         	call	_UART2_Initialize	;wreg free
 28651                           
 28652                           ; BSR set to: 57
 28653                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28654  01A9E2  ECE3  F0DA         	call	_SPI1_Initialize	;wreg free
 28655                           
 28656                           ; BSR set to: 61
 28657                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28658  01A9E6  ECD8  F0D3         	call	_DMA2_Initialize	;wreg free
 28659                           
 28660                           ; BSR set to: 59
 28661                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28662  01A9EA  EC16  F0D2         	call	_DMA1_Initialize	;wreg free
 28663                           
 28664                           ; BSR set to: 59
 28665                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28666  01A9EE  EC4D  F0DB         	call	_CLKREF_Initialize	;wreg free
 28667                           
 28668                           ; BSR set to: 60
 28669                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28670  01A9F2  0012               	return		;funcret
 28671  01A9F4                     __end_of_SYSTEM_Initialize:
 28672                           	opt callstack 0
 28673                           
 28674 ;; *************** function _UART2_Initialize *****************
 28675 ;; Defined at:
 28676 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28677 ;; Parameters:    Size  Location     Type
 28678 ;;		None
 28679 ;; Auto vars:     Size  Location     Type
 28680 ;;		None
 28681 ;; Return value:  Size  Location     Type
 28682 ;;                  1  [STACK] void 
 28683 ;; Registers used:
 28684 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28685 ;; Tracked objects:
 28686 ;;		On entry : 3F/39
 28687 ;;		On exit  : 3F/39
 28688 ;;		Unchanged: 0/0
 28689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28694 ;;Total ram usage:        0 bytes
 28695 ;; Hardware stack levels used:    1
 28696 ;; Hardware stack levels required when called:   16
 28697 ;; This function calls:
 28698 ;;		_UART2_SetRxInterruptHandler
 28699 ;;		_UART2_SetTxInterruptHandler
 28700 ;; This function is called by:
 28701 ;;		_SYSTEM_Initialize
 28702 ;; This function uses a reentrant model
 28703 ;;
 28704                           
 28705                           	psect	text108
 28706  01A6F8                     __ptext108:
 28707                           	opt callstack 0
 28708  01A6F8                     _UART2_Initialize:
 28709                           	opt callstack 13
 28710                           
 28711                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28712                           
 28713                           ; BSR set to: 60
 28714                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28715                           ;incstack = 0
 28716  01A6F8  0139               	movlb	57	; () banked
 28717  01A6FA  9596               	bcf	150,2,b	;volatile
 28718                           
 28719                           ; BSR set to: 57
 28720                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28721  01A6FC  0E0A               	movlw	low _UART2_Receive_ISR
 28722  01A6FE  6EE6               	movwf	postinc1,c
 28723  01A700  0EB5               	movlw	high _UART2_Receive_ISR
 28724  01A702  6EE6               	movwf	postinc1,c
 28725  01A704  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28726  01A706  6EE6               	movwf	postinc1,c
 28727  01A708  ECB9  F0D8         	call	_UART2_SetRxInterruptHandler	;wreg free
 28728                           
 28729                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28730  01A70C  0139               	movlb	57	; () banked
 28731  01A70E  9796               	bcf	150,3,b	;volatile
 28732                           
 28733                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28734  01A710  0E54               	movlw	low _UART2_Transmit_ISR
 28735  01A712  6EE6               	movwf	postinc1,c
 28736  01A714  0EB0               	movlw	high _UART2_Transmit_ISR
 28737  01A716  6EE6               	movwf	postinc1,c
 28738  01A718  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28739  01A71A  6EE6               	movwf	postinc1,c
 28740  01A71C  ECA5  F0D8         	call	_UART2_SetTxInterruptHandler	;wreg free
 28741                           
 28742                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28743  01A720  013D               	movlb	61	; () banked
 28744  01A722  6BD4               	clrf	212,b	;volatile
 28745                           
 28746                           ; BSR set to: 61
 28747                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28748  01A724  6BD6               	clrf	214,b	;volatile
 28749                           
 28750                           ; BSR set to: 61
 28751                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28752  01A726  6BD8               	clrf	216,b	;volatile
 28753                           
 28754                           ; BSR set to: 61
 28755                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28756  01A728  0EB0               	movlw	176
 28757  01A72A  6FDA               	movwf	218,b	;volatile
 28758                           
 28759                           ; BSR set to: 61
 28760                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28761  01A72C  0E80               	movlw	128
 28762  01A72E  6FDB               	movwf	219,b	;volatile
 28763                           
 28764                           ; BSR set to: 61
 28765                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28766  01A730  6BDC               	clrf	220,b	;volatile
 28767                           
 28768                           ; BSR set to: 61
 28769                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28770  01A732  0E82               	movlw	130
 28771  01A734  6FDD               	movwf	221,b	;volatile
 28772                           
 28773                           ; BSR set to: 61
 28774                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28775  01A736  0E06               	movlw	6
 28776  01A738  6FDE               	movwf	222,b	;volatile
 28777                           
 28778                           ; BSR set to: 61
 28779                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28780  01A73A  6BDF               	clrf	223,b	;volatile
 28781                           
 28782                           ; BSR set to: 61
 28783                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28784  01A73C  6BE0               	clrf	224,b	;volatile
 28785                           
 28786                           ; BSR set to: 61
 28787                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28788  01A73E  6BE1               	clrf	225,b	;volatile
 28789                           
 28790                           ; BSR set to: 61
 28791                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28792  01A740  6BE2               	clrf	226,b	;volatile
 28793                           
 28794                           ; BSR set to: 61
 28795                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28796  01A742  6A5C               	clrf	_uart2TxHead^0,c	;volatile
 28797                           
 28798                           ; BSR set to: 61
 28799                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28800  01A744  6A5B               	clrf	_uart2TxTail^0,c	;volatile
 28801                           
 28802                           ; BSR set to: 61
 28803                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28804  01A746  0E40               	movlw	64
 28805  01A748  6E5A               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28806                           
 28807                           ; BSR set to: 61
 28808                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28809  01A74A  6A59               	clrf	_uart2RxHead^0,c	;volatile
 28810                           
 28811                           ; BSR set to: 61
 28812                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28813  01A74C  6A58               	clrf	_uart2RxTail^0,c	;volatile
 28814                           
 28815                           ; BSR set to: 61
 28816                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28817  01A74E  6A57               	clrf	_uart2RxCount^0,c	;volatile
 28818                           
 28819                           ; BSR set to: 61
 28820                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28821  01A750  0139               	movlb	57	; () banked
 28822  01A752  8596               	bsf	150,2,b	;volatile
 28823                           
 28824                           ; BSR set to: 57
 28825                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28826  01A754  0012               	return		;funcret
 28827  01A756                     __end_of_UART2_Initialize:
 28828                           	opt callstack 0
 28829                           
 28830 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28831 ;; Defined at:
 28832 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28833 ;; Parameters:    Size  Location     Type
 28834 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28835 ;;		 -> UART2_Transmit_ISR(1), 
 28836 ;; Auto vars:     Size  Location     Type
 28837 ;;		None
 28838 ;; Return value:  Size  Location     Type
 28839 ;;                  1  [STACK] void 
 28840 ;; Registers used:
 28841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28842 ;; Tracked objects:
 28843 ;;		On entry : 3F/39
 28844 ;;		On exit  : 0/0
 28845 ;;		Unchanged: 0/0
 28846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28851 ;;Total ram usage:        0 bytes
 28852 ;; Hardware stack levels used:    1
 28853 ;; Hardware stack levels required when called:   15
 28854 ;; This function calls:
 28855 ;;		Nothing
 28856 ;; This function is called by:
 28857 ;;		_UART2_Initialize
 28858 ;; This function uses a reentrant model
 28859 ;;
 28860                           
 28861                           	psect	text109
 28862  01B14A                     __ptext109:
 28863                           	opt callstack 0
 28864  01B14A                     _UART2_SetTxInterruptHandler:
 28865                           	opt callstack 13
 28866                           
 28867                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28868                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28869                           
 28870                           ; BSR set to: 57
 28871                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28872                           ;incstack = 0
 28873  01B14A  50E1               	movf	fsr1l,w,c
 28874  01B14C  0FFD               	addlw	-3
 28875  01B14E  6ED9               	movwf	fsr2l,c
 28876  01B150  50E2               	movf	fsr1h,w,c
 28877  01B152  6EDA               	movwf	fsr2h,c
 28878  01B154  0EFF               	movlw	255
 28879  01B156  22DA               	addwfc	fsr2h,f,c
 28880  01B158  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28881  01B15E  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28882  01B164  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28883                           
 28884                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28885  01B16A  52E5               	movf	postdec1,f,c
 28886  01B16C  52E5               	movf	postdec1,f,c
 28887  01B16E  52E5               	movf	postdec1,f,c
 28888  01B170  0012               	return		;funcret
 28889  01B172                     __end_of_UART2_SetTxInterruptHandler:
 28890                           	opt callstack 0
 28891                           
 28892 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28893 ;; Defined at:
 28894 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28895 ;; Parameters:    Size  Location     Type
 28896 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28897 ;;		 -> UART2_Receive_ISR(1), 
 28898 ;; Auto vars:     Size  Location     Type
 28899 ;;		None
 28900 ;; Return value:  Size  Location     Type
 28901 ;;                  1  [STACK] void 
 28902 ;; Registers used:
 28903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28904 ;; Tracked objects:
 28905 ;;		On entry : 3F/39
 28906 ;;		On exit  : 0/0
 28907 ;;		Unchanged: 0/0
 28908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28910 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28912 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28913 ;;Total ram usage:        0 bytes
 28914 ;; Hardware stack levels used:    1
 28915 ;; Hardware stack levels required when called:   15
 28916 ;; This function calls:
 28917 ;;		Nothing
 28918 ;; This function is called by:
 28919 ;;		_UART2_Initialize
 28920 ;; This function uses a reentrant model
 28921 ;;
 28922                           
 28923                           	psect	text110
 28924  01B172                     __ptext110:
 28925                           	opt callstack 0
 28926  01B172                     _UART2_SetRxInterruptHandler:
 28927                           	opt callstack 13
 28928                           
 28929                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28930                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28931                           
 28932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28933                           ;incstack = 0
 28934  01B172  50E1               	movf	fsr1l,w,c
 28935  01B174  0FFD               	addlw	-3
 28936  01B176  6ED9               	movwf	fsr2l,c
 28937  01B178  50E2               	movf	fsr1h,w,c
 28938  01B17A  6EDA               	movwf	fsr2h,c
 28939  01B17C  0EFF               	movlw	255
 28940  01B17E  22DA               	addwfc	fsr2h,f,c
 28941  01B180  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28942  01B186  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28943  01B18C  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28944                           
 28945                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28946  01B192  52E5               	movf	postdec1,f,c
 28947  01B194  52E5               	movf	postdec1,f,c
 28948  01B196  52E5               	movf	postdec1,f,c
 28949  01B198  0012               	return		;funcret
 28950  01B19A                     __end_of_UART2_SetRxInterruptHandler:
 28951                           	opt callstack 0
 28952                           
 28953 ;; *************** function _UART1_Initialize *****************
 28954 ;; Defined at:
 28955 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28956 ;; Parameters:    Size  Location     Type
 28957 ;;		None
 28958 ;; Auto vars:     Size  Location     Type
 28959 ;;		None
 28960 ;; Return value:  Size  Location     Type
 28961 ;;                  1  [STACK] void 
 28962 ;; Registers used:
 28963 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28964 ;; Tracked objects:
 28965 ;;		On entry : 0/39
 28966 ;;		On exit  : 3F/39
 28967 ;;		Unchanged: 0/0
 28968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28973 ;;Total ram usage:        0 bytes
 28974 ;; Hardware stack levels used:    1
 28975 ;; Hardware stack levels required when called:   16
 28976 ;; This function calls:
 28977 ;;		_UART1_SetRxInterruptHandler
 28978 ;; This function is called by:
 28979 ;;		_SYSTEM_Initialize
 28980 ;; This function uses a reentrant model
 28981 ;;
 28982                           
 28983                           	psect	text111
 28984  01AAC8                     __ptext111:
 28985                           	opt callstack 0
 28986  01AAC8                     _UART1_Initialize:
 28987                           	opt callstack 13
 28988                           
 28989                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28990                           
 28991                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28992                           ;incstack = 0
 28993  01AAC8  0139               	movlb	57	; () banked
 28994  01AACA  9793               	bcf	147,3,b	;volatile
 28995                           
 28996                           ; BSR set to: 57
 28997                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 28998  01AACC  0E44               	movlw	low _UART1_Receive_ISR
 28999  01AACE  6EE6               	movwf	postinc1,c
 29000  01AAD0  0EB5               	movlw	high _UART1_Receive_ISR
 29001  01AAD2  6EE6               	movwf	postinc1,c
 29002  01AAD4  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 29003  01AAD6  6EE6               	movwf	postinc1,c
 29004  01AAD8  ECCD  F0D8         	call	_UART1_SetRxInterruptHandler	;wreg free
 29005                           
 29006                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 29007  01AADC  013D               	movlb	61	; () banked
 29008  01AADE  6BEC               	clrf	236,b	;volatile
 29009                           
 29010                           ; BSR set to: 61
 29011                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 29012  01AAE0  6BED               	clrf	237,b	;volatile
 29013                           
 29014                           ; BSR set to: 61
 29015                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29016  01AAE2  6BEE               	clrf	238,b	;volatile
 29017                           
 29018                           ; BSR set to: 61
 29019                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29020  01AAE4  6BEF               	clrf	239,b	;volatile
 29021                           
 29022                           ; BSR set to: 61
 29023                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29024  01AAE6  6BF0               	clrf	240,b	;volatile
 29025                           
 29026                           ; BSR set to: 61
 29027                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29028  01AAE8  6BF1               	clrf	241,b	;volatile
 29029                           
 29030                           ; BSR set to: 61
 29031                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29032  01AAEA  0EB0               	movlw	176
 29033  01AAEC  6FF2               	movwf	242,b	;volatile
 29034                           
 29035                           ; BSR set to: 61
 29036                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29037  01AAEE  0E80               	movlw	128
 29038  01AAF0  6FF3               	movwf	243,b	;volatile
 29039                           
 29040                           ; BSR set to: 61
 29041                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29042  01AAF2  6BF4               	clrf	244,b	;volatile
 29043                           
 29044                           ; BSR set to: 61
 29045                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29046  01AAF4  0E8A               	movlw	138
 29047  01AAF6  6FF5               	movwf	245,b	;volatile
 29048                           
 29049                           ; BSR set to: 61
 29050                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29051  01AAF8  6BF6               	clrf	246,b	;volatile
 29052                           
 29053                           ; BSR set to: 61
 29054                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29055  01AAFA  6BF7               	clrf	247,b	;volatile
 29056                           
 29057                           ; BSR set to: 61
 29058                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29059  01AAFC  6BF8               	clrf	248,b	;volatile
 29060                           
 29061                           ; BSR set to: 61
 29062                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29063  01AAFE  6BF9               	clrf	249,b	;volatile
 29064                           
 29065                           ; BSR set to: 61
 29066                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29067  01AB00  6BFA               	clrf	250,b	;volatile
 29068                           
 29069                           ; BSR set to: 61
 29070                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29071  01AB02  6A5F               	clrf	_uart1RxHead^0,c	;volatile
 29072                           
 29073                           ; BSR set to: 61
 29074                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29075  01AB04  6A5E               	clrf	_uart1RxTail^0,c	;volatile
 29076                           
 29077                           ; BSR set to: 61
 29078                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29079  01AB06  6A5D               	clrf	_uart1RxCount^0,c	;volatile
 29080                           
 29081                           ; BSR set to: 61
 29082                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29083  01AB08  0139               	movlb	57	; () banked
 29084  01AB0A  8793               	bsf	147,3,b	;volatile
 29085                           
 29086                           ; BSR set to: 57
 29087                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29088  01AB0C  0012               	return		;funcret
 29089  01AB0E                     __end_of_UART1_Initialize:
 29090                           	opt callstack 0
 29091                           
 29092 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29093 ;; Defined at:
 29094 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29095 ;; Parameters:    Size  Location     Type
 29096 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29097 ;;		 -> UART1_Receive_ISR(1), 
 29098 ;; Auto vars:     Size  Location     Type
 29099 ;;		None
 29100 ;; Return value:  Size  Location     Type
 29101 ;;                  1  [STACK] void 
 29102 ;; Registers used:
 29103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29104 ;; Tracked objects:
 29105 ;;		On entry : 3F/39
 29106 ;;		On exit  : 0/0
 29107 ;;		Unchanged: 0/0
 29108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29113 ;;Total ram usage:        0 bytes
 29114 ;; Hardware stack levels used:    1
 29115 ;; Hardware stack levels required when called:   15
 29116 ;; This function calls:
 29117 ;;		Nothing
 29118 ;; This function is called by:
 29119 ;;		_UART1_Initialize
 29120 ;; This function uses a reentrant model
 29121 ;;
 29122                           
 29123                           	psect	text112
 29124  01B19A                     __ptext112:
 29125                           	opt callstack 0
 29126  01B19A                     _UART1_SetRxInterruptHandler:
 29127                           	opt callstack 13
 29128                           
 29129                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29130                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29131                           
 29132                           ; BSR set to: 57
 29133                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29134                           ;incstack = 0
 29135  01B19A  50E1               	movf	fsr1l,w,c
 29136  01B19C  0FFD               	addlw	-3
 29137  01B19E  6ED9               	movwf	fsr2l,c
 29138  01B1A0  50E2               	movf	fsr1h,w,c
 29139  01B1A2  6EDA               	movwf	fsr2h,c
 29140  01B1A4  0EFF               	movlw	255
 29141  01B1A6  22DA               	addwfc	fsr2h,f,c
 29142  01B1A8  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29143  01B1AE  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29144  01B1B4  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29145                           
 29146                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29147  01B1BA  52E5               	movf	postdec1,f,c
 29148  01B1BC  52E5               	movf	postdec1,f,c
 29149  01B1BE  52E5               	movf	postdec1,f,c
 29150  01B1C0  0012               	return		;funcret
 29151  01B1C2                     __end_of_UART1_SetRxInterruptHandler:
 29152                           	opt callstack 0
 29153                           
 29154 ;; *************** function _TMR6_Initialize *****************
 29155 ;; Defined at:
 29156 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29157 ;; Parameters:    Size  Location     Type
 29158 ;;		None
 29159 ;; Auto vars:     Size  Location     Type
 29160 ;;		None
 29161 ;; Return value:  Size  Location     Type
 29162 ;;                  1  [STACK] void 
 29163 ;; Registers used:
 29164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29165 ;; Tracked objects:
 29166 ;;		On entry : 3F/39
 29167 ;;		On exit  : 0/0
 29168 ;;		Unchanged: 0/0
 29169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29173 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29174 ;;Total ram usage:        0 bytes
 29175 ;; Hardware stack levels used:    1
 29176 ;; Hardware stack levels required when called:   16
 29177 ;; This function calls:
 29178 ;;		_TMR6_SetInterruptHandler
 29179 ;; This function is called by:
 29180 ;;		_SYSTEM_Initialize
 29181 ;; This function uses a reentrant model
 29182 ;;
 29183                           
 29184                           	psect	text113
 29185  01B080                     __ptext113:
 29186                           	opt callstack 0
 29187  01B080                     _TMR6_Initialize:
 29188                           	opt callstack 13
 29189                           
 29190                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29191                           
 29192                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29193                           ;incstack = 0
 29194  01B080  0E01               	movlw	1
 29195  01B082  6E96               	movwf	150,c	;volatile
 29196                           
 29197                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29198  01B084  6A95               	clrf	149,c	;volatile
 29199                           
 29200                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29201  01B086  6A97               	clrf	151,c	;volatile
 29202                           
 29203                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29204  01B088  0E7C               	movlw	124
 29205  01B08A  6E93               	movwf	147,c	;volatile
 29206                           
 29207                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29208  01B08C  6A92               	clrf	146,c	;volatile
 29209                           
 29210                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29211  01B08E  0139               	movlb	57	; () banked
 29212  01B090  91A9               	bcf	169,0,b	;volatile
 29213                           
 29214                           ; BSR set to: 57
 29215                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29216  01B092  8199               	bsf	153,0,b	;volatile
 29217                           
 29218                           ; BSR set to: 57
 29219                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29220  01B094  0E5C               	movlw	low _TMR6_DefaultInterruptHandler
 29221  01B096  6EE6               	movwf	postinc1,c
 29222  01B098  0EA9               	movlw	high _TMR6_DefaultInterruptHandler
 29223  01B09A  6EE6               	movwf	postinc1,c
 29224  01B09C  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29225  01B09E  6EE6               	movwf	postinc1,c
 29226  01B0A0  ECE1  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 29227                           
 29228                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29229  01B0A4  0EE0               	movlw	224
 29230  01B0A6  6E94               	movwf	148,c	;volatile
 29231                           
 29232                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29233  01B0A8  0012               	return		;funcret
 29234  01B0AA                     __end_of_TMR6_Initialize:
 29235                           	opt callstack 0
 29236                           
 29237 ;; *************** function _TMR6_SetInterruptHandler *****************
 29238 ;; Defined at:
 29239 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29240 ;; Parameters:    Size  Location     Type
 29241 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29242 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29243 ;; Auto vars:     Size  Location     Type
 29244 ;;		None
 29245 ;; Return value:  Size  Location     Type
 29246 ;;                  1  [STACK] void 
 29247 ;; Registers used:
 29248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29249 ;; Tracked objects:
 29250 ;;		On entry : 3F/39
 29251 ;;		On exit  : 0/0
 29252 ;;		Unchanged: 0/0
 29253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29258 ;;Total ram usage:        0 bytes
 29259 ;; Hardware stack levels used:    1
 29260 ;; Hardware stack levels required when called:   15
 29261 ;; This function calls:
 29262 ;;		Nothing
 29263 ;; This function is called by:
 29264 ;;		_TMR6_Initialize
 29265 ;; This function uses a reentrant model
 29266 ;;
 29267                           
 29268                           	psect	text114
 29269  01B1C2                     __ptext114:
 29270                           	opt callstack 0
 29271  01B1C2                     _TMR6_SetInterruptHandler:
 29272                           	opt callstack 13
 29273                           
 29274                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29275                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29276                           
 29277                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29278                           ;incstack = 0
 29279  01B1C2  50E1               	movf	fsr1l,w,c
 29280  01B1C4  0FFD               	addlw	-3
 29281  01B1C6  6ED9               	movwf	fsr2l,c
 29282  01B1C8  50E2               	movf	fsr1h,w,c
 29283  01B1CA  6EDA               	movwf	fsr2h,c
 29284  01B1CC  0EFF               	movlw	255
 29285  01B1CE  22DA               	addwfc	fsr2h,f,c
 29286  01B1D0  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29287  01B1D6  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29288  01B1DC  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29289                           
 29290                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29291  01B1E2  52E5               	movf	postdec1,f,c
 29292  01B1E4  52E5               	movf	postdec1,f,c
 29293  01B1E6  52E5               	movf	postdec1,f,c
 29294  01B1E8  0012               	return		;funcret
 29295  01B1EA                     __end_of_TMR6_SetInterruptHandler:
 29296                           	opt callstack 0
 29297                           
 29298 ;; *************** function _TMR5_Initialize *****************
 29299 ;; Defined at:
 29300 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 29301 ;; Parameters:    Size  Location     Type
 29302 ;;		None
 29303 ;; Auto vars:     Size  Location     Type
 29304 ;;		None
 29305 ;; Return value:  Size  Location     Type
 29306 ;;                  1  [STACK] void 
 29307 ;; Registers used:
 29308 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29309 ;; Tracked objects:
 29310 ;;		On entry : 0/39
 29311 ;;		On exit  : 0/0
 29312 ;;		Unchanged: 0/0
 29313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29318 ;;Total ram usage:        0 bytes
 29319 ;; Hardware stack levels used:    1
 29320 ;; Hardware stack levels required when called:   16
 29321 ;; This function calls:
 29322 ;;		_TMR5_SetInterruptHandler
 29323 ;; This function is called by:
 29324 ;;		_SYSTEM_Initialize
 29325 ;; This function uses a reentrant model
 29326 ;;
 29327                           
 29328                           	psect	text115
 29329  01AB0E                     __ptext115:
 29330                           	opt callstack 0
 29331  01AB0E                     _TMR5_Initialize:
 29332                           	opt callstack 13
 29333                           
 29334                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 29335                           
 29336                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29337                           ;incstack = 0
 29338  01AB0E  6A9B               	clrf	155,c	;volatile
 29339                           
 29340                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 29341  01AB10  6A9C               	clrf	156,c	;volatile
 29342                           
 29343                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 29344  01AB12  0E01               	movlw	1
 29345  01AB14  6E9D               	movwf	157,c	;volatile
 29346                           
 29347                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 29348  01AB16  0E63               	movlw	99
 29349  01AB18  6E99               	movwf	153,c	;volatile
 29350                           
 29351                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 29352  01AB1A  0EC0               	movlw	192
 29353  01AB1C  6E98               	movwf	152,c	;volatile
 29354                           
 29355                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29356  01AB1E  5098               	movf	152,w,c	;volatile
 29357  01AB20  006F FE64  F028    	movff	16281,btemp	;volatile
 29358  01AB26  6A29               	clrf	(btemp+1)^0,c
 29359  01AB28  0060  F0A0  F029   	movff	btemp,btemp+1
 29360  01AB2E  6A28               	clrf	btemp^0,c
 29361  01AB30  1028               	iorwf	btemp^0,w,c
 29362  01AB32  6E52               	movwf	_timer5ReloadVal^0,c	;volatile
 29363  01AB34  5029               	movf	(btemp+1)^0,w,c
 29364  01AB36  6E53               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29365                           
 29366                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 29367  01AB38  0139               	movlb	57	; () banked
 29368  01AB3A  9DA8               	bcf	168,6,b	;volatile
 29369                           
 29370                           ; BSR set to: 57
 29371                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 29372  01AB3C  8D98               	bsf	152,6,b	;volatile
 29373                           
 29374                           ; BSR set to: 57
 29375                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29376  01AB3E  0EDA               	movlw	low _TMR5_DefaultInterruptHandler
 29377  01AB40  6EE6               	movwf	postinc1,c
 29378  01AB42  0EAE               	movlw	high _TMR5_DefaultInterruptHandler
 29379  01AB44  6EE6               	movwf	postinc1,c
 29380  01AB46  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29381  01AB48  6EE6               	movwf	postinc1,c
 29382  01AB4A  ECF5  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 29383                           
 29384                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 29385  01AB4E  0E31               	movlw	49
 29386  01AB50  6E9A               	movwf	154,c	;volatile
 29387                           
 29388                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29389  01AB52  0012               	return		;funcret
 29390  01AB54                     __end_of_TMR5_Initialize:
 29391                           	opt callstack 0
 29392                           
 29393 ;; *************** function _TMR5_SetInterruptHandler *****************
 29394 ;; Defined at:
 29395 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 29396 ;; Parameters:    Size  Location     Type
 29397 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29398 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29399 ;; Auto vars:     Size  Location     Type
 29400 ;;		None
 29401 ;; Return value:  Size  Location     Type
 29402 ;;                  1  [STACK] void 
 29403 ;; Registers used:
 29404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29405 ;; Tracked objects:
 29406 ;;		On entry : 3F/39
 29407 ;;		On exit  : 0/0
 29408 ;;		Unchanged: 0/0
 29409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29414 ;;Total ram usage:        0 bytes
 29415 ;; Hardware stack levels used:    1
 29416 ;; Hardware stack levels required when called:   15
 29417 ;; This function calls:
 29418 ;;		Nothing
 29419 ;; This function is called by:
 29420 ;;		_TMR5_Initialize
 29421 ;; This function uses a reentrant model
 29422 ;;
 29423                           
 29424                           	psect	text116
 29425  01B1EA                     __ptext116:
 29426                           	opt callstack 0
 29427  01B1EA                     _TMR5_SetInterruptHandler:
 29428                           	opt callstack 13
 29429                           
 29430                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29431                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29432                           
 29433                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29434                           ;incstack = 0
 29435  01B1EA  50E1               	movf	fsr1l,w,c
 29436  01B1EC  0FFD               	addlw	-3
 29437  01B1EE  6ED9               	movwf	fsr2l,c
 29438  01B1F0  50E2               	movf	fsr1h,w,c
 29439  01B1F2  6EDA               	movwf	fsr2h,c
 29440  01B1F4  0EFF               	movlw	255
 29441  01B1F6  22DA               	addwfc	fsr2h,f,c
 29442  01B1F8  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29443  01B1FE  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29444  01B204  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29445                           
 29446                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29447  01B20A  52E5               	movf	postdec1,f,c
 29448  01B20C  52E5               	movf	postdec1,f,c
 29449  01B20E  52E5               	movf	postdec1,f,c
 29450  01B210  0012               	return		;funcret
 29451  01B212                     __end_of_TMR5_SetInterruptHandler:
 29452                           	opt callstack 0
 29453                           
 29454 ;; *************** function _TMR3_Initialize *****************
 29455 ;; Defined at:
 29456 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29457 ;; Parameters:    Size  Location     Type
 29458 ;;		None
 29459 ;; Auto vars:     Size  Location     Type
 29460 ;;		None
 29461 ;; Return value:  Size  Location     Type
 29462 ;;                  1  [STACK] void 
 29463 ;; Registers used:
 29464 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29465 ;; Tracked objects:
 29466 ;;		On entry : 0/39
 29467 ;;		On exit  : 0/0
 29468 ;;		Unchanged: 0/0
 29469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29474 ;;Total ram usage:        0 bytes
 29475 ;; Hardware stack levels used:    1
 29476 ;; Hardware stack levels required when called:   16
 29477 ;; This function calls:
 29478 ;;		_TMR3_SetInterruptHandler
 29479 ;; This function is called by:
 29480 ;;		_SYSTEM_Initialize
 29481 ;; This function uses a reentrant model
 29482 ;;
 29483                           
 29484                           	psect	text117
 29485  01AB54                     __ptext117:
 29486                           	opt callstack 0
 29487  01AB54                     _TMR3_Initialize:
 29488                           	opt callstack 13
 29489                           
 29490                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29491                           
 29492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29493                           ;incstack = 0
 29494  01AB54  6AA7               	clrf	167,c	;volatile
 29495                           
 29496                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29497  01AB56  6AA8               	clrf	168,c	;volatile
 29498                           
 29499                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29500  01AB58  0E01               	movlw	1
 29501  01AB5A  6EA9               	movwf	169,c	;volatile
 29502                           
 29503                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29504  01AB5C  0E3C               	movlw	60
 29505  01AB5E  6EA5               	movwf	165,c	;volatile
 29506                           
 29507                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29508  01AB60  0EB0               	movlw	176
 29509  01AB62  6EA4               	movwf	164,c	;volatile
 29510                           
 29511                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29512  01AB64  50A4               	movf	164,w,c	;volatile
 29513  01AB66  006F FE94  F028    	movff	16293,btemp	;volatile
 29514  01AB6C  6A29               	clrf	(btemp+1)^0,c
 29515  01AB6E  0060  F0A0  F029   	movff	btemp,btemp+1
 29516  01AB74  6A28               	clrf	btemp^0,c
 29517  01AB76  1028               	iorwf	btemp^0,w,c
 29518  01AB78  6E4E               	movwf	_timer3ReloadVal^0,c	;volatile
 29519  01AB7A  5029               	movf	(btemp+1)^0,w,c
 29520  01AB7C  6E4F               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29521                           
 29522                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29523  01AB7E  0139               	movlb	57	; () banked
 29524  01AB80  9DA6               	bcf	166,6,b	;volatile
 29525                           
 29526                           ; BSR set to: 57
 29527                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29528  01AB82  8D96               	bsf	150,6,b	;volatile
 29529                           
 29530                           ; BSR set to: 57
 29531                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29532  01AB84  0E1C               	movlw	low _TMR3_DefaultInterruptHandler
 29533  01AB86  6EE6               	movwf	postinc1,c
 29534  01AB88  0EB7               	movlw	high _TMR3_DefaultInterruptHandler
 29535  01AB8A  6EE6               	movwf	postinc1,c
 29536  01AB8C  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29537  01AB8E  6EE6               	movwf	postinc1,c
 29538  01AB90  EC09  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
 29539                           
 29540                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29541  01AB94  0E31               	movlw	49
 29542  01AB96  6EA6               	movwf	166,c	;volatile
 29543                           
 29544                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29545  01AB98  0012               	return		;funcret
 29546  01AB9A                     __end_of_TMR3_Initialize:
 29547                           	opt callstack 0
 29548                           
 29549 ;; *************** function _TMR3_SetInterruptHandler *****************
 29550 ;; Defined at:
 29551 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29552 ;; Parameters:    Size  Location     Type
 29553 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29554 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29555 ;; Auto vars:     Size  Location     Type
 29556 ;;		None
 29557 ;; Return value:  Size  Location     Type
 29558 ;;                  1  [STACK] void 
 29559 ;; Registers used:
 29560 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29561 ;; Tracked objects:
 29562 ;;		On entry : 0/1
 29563 ;;		On exit  : 0/0
 29564 ;;		Unchanged: 0/0
 29565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29570 ;;Total ram usage:        0 bytes
 29571 ;; Hardware stack levels used:    1
 29572 ;; Hardware stack levels required when called:   15
 29573 ;; This function calls:
 29574 ;;		Nothing
 29575 ;; This function is called by:
 29576 ;;		_TMR3_Initialize
 29577 ;;		_init_bsoc
 29578 ;; This function uses a reentrant model
 29579 ;;
 29580                           
 29581                           	psect	text118
 29582  01B212                     __ptext118:
 29583                           	opt callstack 0
 29584  01B212                     _TMR3_SetInterruptHandler:
 29585                           	opt callstack 14
 29586                           
 29587                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29588                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29589                           
 29590                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29591                           ;incstack = 0
 29592  01B212  50E1               	movf	fsr1l,w,c
 29593  01B214  0FFD               	addlw	-3
 29594  01B216  6ED9               	movwf	fsr2l,c
 29595  01B218  50E2               	movf	fsr1h,w,c
 29596  01B21A  6EDA               	movwf	fsr2h,c
 29597  01B21C  0EFF               	movlw	255
 29598  01B21E  22DA               	addwfc	fsr2h,f,c
 29599  01B220  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29600  01B226  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29601  01B22C  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29602                           
 29603                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29604  01B232  52E5               	movf	postdec1,f,c
 29605  01B234  52E5               	movf	postdec1,f,c
 29606  01B236  52E5               	movf	postdec1,f,c
 29607  01B238  0012               	return		;funcret
 29608  01B23A                     __end_of_TMR3_SetInterruptHandler:
 29609                           	opt callstack 0
 29610                           
 29611 ;; *************** function _TMR2_Initialize *****************
 29612 ;; Defined at:
 29613 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29614 ;; Parameters:    Size  Location     Type
 29615 ;;		None
 29616 ;; Auto vars:     Size  Location     Type
 29617 ;;		None
 29618 ;; Return value:  Size  Location     Type
 29619 ;;                  1  [STACK] void 
 29620 ;; Registers used:
 29621 ;;		wreg, status,2
 29622 ;; Tracked objects:
 29623 ;;		On entry : 3F/3F
 29624 ;;		On exit  : 3F/39
 29625 ;;		Unchanged: 0/0
 29626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29628 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29629 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29630 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29631 ;;Total ram usage:        0 bytes
 29632 ;; Hardware stack levels used:    1
 29633 ;; Hardware stack levels required when called:   15
 29634 ;; This function calls:
 29635 ;;		Nothing
 29636 ;; This function is called by:
 29637 ;;		_SYSTEM_Initialize
 29638 ;; This function uses a reentrant model
 29639 ;;
 29640                           
 29641                           	psect	text119
 29642  01B5AE                     __ptext119:
 29643                           	opt callstack 0
 29644  01B5AE                     _TMR2_Initialize:
 29645                           	opt callstack 14
 29646                           
 29647                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29648                           
 29649                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29650                           ;incstack = 0
 29651  01B5AE  0E01               	movlw	1
 29652  01B5B0  6EAE               	movwf	174,c	;volatile
 29653                           
 29654                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29655  01B5B2  6AAD               	clrf	173,c	;volatile
 29656                           
 29657                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29658  01B5B4  6AAF               	clrf	175,c	;volatile
 29659                           
 29660                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29661  01B5B6  0E63               	movlw	99
 29662  01B5B8  6EAB               	movwf	171,c	;volatile
 29663                           
 29664                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29665  01B5BA  6AAA               	clrf	170,c	;volatile
 29666                           
 29667                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29668  01B5BC  0139               	movlb	57	; () banked
 29669  01B5BE  95A4               	bcf	164,2,b	;volatile
 29670                           
 29671                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29672  01B5C0  0EC0               	movlw	192
 29673  01B5C2  6EAC               	movwf	172,c	;volatile
 29674                           
 29675                           ; BSR set to: 57
 29676                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29677  01B5C4  0012               	return		;funcret
 29678  01B5C6                     __end_of_TMR2_Initialize:
 29679                           	opt callstack 0
 29680                           
 29681 ;; *************** function _SPI1_Initialize *****************
 29682 ;; Defined at:
 29683 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29684 ;; Parameters:    Size  Location     Type
 29685 ;;		None
 29686 ;; Auto vars:     Size  Location     Type
 29687 ;;		None
 29688 ;; Return value:  Size  Location     Type
 29689 ;;                  1  [STACK] void 
 29690 ;; Registers used:
 29691 ;;		wreg, status,2
 29692 ;; Tracked objects:
 29693 ;;		On entry : 3F/39
 29694 ;;		On exit  : 3F/3D
 29695 ;;		Unchanged: 0/0
 29696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29701 ;;Total ram usage:        0 bytes
 29702 ;; Hardware stack levels used:    1
 29703 ;; Hardware stack levels required when called:   15
 29704 ;; This function calls:
 29705 ;;		Nothing
 29706 ;; This function is called by:
 29707 ;;		_SYSTEM_Initialize
 29708 ;; This function uses a reentrant model
 29709 ;;
 29710                           
 29711                           	psect	text120
 29712  01B5C6                     __ptext120:
 29713                           	opt callstack 0
 29714  01B5C6                     _SPI1_Initialize:
 29715                           	opt callstack 14
 29716                           
 29717                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29718                           
 29719                           ; BSR set to: 57
 29720                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29721                           ;incstack = 0
 29722  01B5C6  0E40               	movlw	64
 29723  01B5C8  013D               	movlb	61	; () banked
 29724  01B5CA  6F15               	movwf	21,b	;volatile
 29725                           
 29726                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29727  01B5CC  0E03               	movlw	3
 29728  01B5CE  6F16               	movwf	22,b	;volatile
 29729                           
 29730                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29731  01B5D0  0E4F               	movlw	79
 29732  01B5D2  6F19               	movwf	25,b	;volatile
 29733                           
 29734                           ; BSR set to: 61
 29735                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29736  01B5D4  6B1C               	clrf	28,b	;volatile
 29737                           
 29738                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29739  01B5D6  0E83               	movlw	131
 29740  01B5D8  6F14               	movwf	20,b	;volatile
 29741                           
 29742                           ; BSR set to: 61
 29743                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29744  01B5DA  0012               	return		;funcret
 29745  01B5DC                     __end_of_SPI1_Initialize:
 29746                           	opt callstack 0
 29747                           
 29748 ;; *************** function _PWM8_Initialize *****************
 29749 ;; Defined at:
 29750 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29751 ;; Parameters:    Size  Location     Type
 29752 ;;		None
 29753 ;; Auto vars:     Size  Location     Type
 29754 ;;		None
 29755 ;; Return value:  Size  Location     Type
 29756 ;;                  1  [STACK] void 
 29757 ;; Registers used:
 29758 ;;		wreg, status,2
 29759 ;; Tracked objects:
 29760 ;;		On entry : 0/3E
 29761 ;;		On exit  : 3F/3F
 29762 ;;		Unchanged: 0/0
 29763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29768 ;;Total ram usage:        0 bytes
 29769 ;; Hardware stack levels used:    1
 29770 ;; Hardware stack levels required when called:   15
 29771 ;; This function calls:
 29772 ;;		Nothing
 29773 ;; This function is called by:
 29774 ;;		_SYSTEM_Initialize
 29775 ;; This function uses a reentrant model
 29776 ;;
 29777                           
 29778                           	psect	text121
 29779  01B5DC                     __ptext121:
 29780                           	opt callstack 0
 29781  01B5DC                     _PWM8_Initialize:
 29782                           	opt callstack 14
 29783                           
 29784                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29785                           
 29786                           ; BSR set to: 61
 29787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29788                           ;incstack = 0
 29789  01B5DC  0E80               	movlw	128
 29790  01B5DE  6E62               	movwf	98,c	;volatile
 29791                           
 29792                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29793  01B5E0  6A61               	clrf	97,c	;volatile
 29794                           
 29795                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29796  01B5E2  0E40               	movlw	64
 29797  01B5E4  6E60               	movwf	96,c	;volatile
 29798                           
 29799                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29800  01B5E6  013F               	movlb	63	; () banked
 29801  01B5E8  515F               	movf	95,w,b	;volatile
 29802  01B5EA  0B3F               	andlw	-193
 29803  01B5EC  0940               	iorlw	64
 29804  01B5EE  6F5F               	movwf	95,b	;volatile
 29805                           
 29806                           ; BSR set to: 63
 29807                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29808  01B5F0  0012               	return		;funcret
 29809  01B5F2                     __end_of_PWM8_Initialize:
 29810                           	opt callstack 0
 29811                           
 29812 ;; *************** function _PMD_Initialize *****************
 29813 ;; Defined at:
 29814 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29815 ;; Parameters:    Size  Location     Type
 29816 ;;		None
 29817 ;; Auto vars:     Size  Location     Type
 29818 ;;		None
 29819 ;; Return value:  Size  Location     Type
 29820 ;;                  1  [STACK] void 
 29821 ;; Registers used:
 29822 ;;		None
 29823 ;; Tracked objects:
 29824 ;;		On entry : 3F/39
 29825 ;;		On exit  : 3F/39
 29826 ;;		Unchanged: 0/0
 29827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29828 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29831 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29832 ;;Total ram usage:        0 bytes
 29833 ;; Hardware stack levels used:    1
 29834 ;; Hardware stack levels required when called:   15
 29835 ;; This function calls:
 29836 ;;		Nothing
 29837 ;; This function is called by:
 29838 ;;		_SYSTEM_Initialize
 29839 ;; This function uses a reentrant model
 29840 ;;
 29841                           
 29842                           	psect	text122
 29843  01B608                     __ptext122:
 29844                           	opt callstack 0
 29845  01B608                     _PMD_Initialize:
 29846                           	opt callstack 14
 29847                           
 29848                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29849                           
 29850                           ; BSR set to: 63
 29851                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29852                           ;incstack = 0
 29853  01B608  0139               	movlb	57	; () banked
 29854  01B60A  6BC0               	clrf	192,b	;volatile
 29855                           
 29856                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29857  01B60C  6BC1               	clrf	193,b	;volatile
 29858                           
 29859                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29860  01B60E  6BC2               	clrf	194,b	;volatile
 29861                           
 29862                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29863  01B610  6BC3               	clrf	195,b	;volatile
 29864                           
 29865                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29866  01B612  6BC4               	clrf	196,b	;volatile
 29867                           
 29868                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29869  01B614  6BC5               	clrf	197,b	;volatile
 29870                           
 29871                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29872  01B616  6BC6               	clrf	198,b	;volatile
 29873                           
 29874                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29875  01B618  6BC7               	clrf	199,b	;volatile
 29876                           
 29877                           ; BSR set to: 57
 29878                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29879  01B61A  0012               	return		;funcret
 29880  01B61C                     __end_of_PMD_Initialize:
 29881                           	opt callstack 0
 29882                           
 29883 ;; *************** function _PIN_MANAGER_Initialize *****************
 29884 ;; Defined at:
 29885 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29886 ;; Parameters:    Size  Location     Type
 29887 ;;		None
 29888 ;; Auto vars:     Size  Location     Type
 29889 ;;		None
 29890 ;; Return value:  Size  Location     Type
 29891 ;;                  1  [STACK] void 
 29892 ;; Registers used:
 29893 ;;		wreg, status,2
 29894 ;; Tracked objects:
 29895 ;;		On entry : 3F/39
 29896 ;;		On exit  : 3F/3A
 29897 ;;		Unchanged: 0/0
 29898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29903 ;;Total ram usage:        0 bytes
 29904 ;; Hardware stack levels used:    1
 29905 ;; Hardware stack levels required when called:   15
 29906 ;; This function calls:
 29907 ;;		Nothing
 29908 ;; This function is called by:
 29909 ;;		_SYSTEM_Initialize
 29910 ;; This function uses a reentrant model
 29911 ;;
 29912                           
 29913                           	psect	text123
 29914  019FD6                     __ptext123:
 29915                           	opt callstack 0
 29916  019FD6                     _PIN_MANAGER_Initialize:
 29917                           	opt callstack 14
 29918                           
 29919                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29920                           
 29921                           ; BSR set to: 57
 29922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29923                           ;incstack = 0
 29924  019FD6  0E07               	movlw	7
 29925  019FD8  6EBE               	movwf	190,c	;volatile
 29926                           
 29927                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29928  019FDA  0E80               	movlw	128
 29929  019FDC  6EBD               	movwf	189,c	;volatile
 29930                           
 29931                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29932  019FDE  6ABA               	clrf	186,c	;volatile
 29933                           
 29934                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x20;
 29935  019FE0  0E20               	movlw	32
 29936  019FE2  6EBF               	movwf	191,c	;volatile
 29937                           
 29938                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29939  019FE4  6ABB               	clrf	187,c	;volatile
 29940                           
 29941                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29942  019FE6  0E07               	movlw	7
 29943  019FE8  6EBC               	movwf	188,c	;volatile
 29944                           
 29945                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29946  019FEA  6AC6               	clrf	198,c	;volatile
 29947                           
 29948                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29949  019FEC  0E0F               	movlw	15
 29950  019FEE  6EC7               	movwf	199,c	;volatile
 29951                           
 29952                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29953  019FF0  68C2               	setf	194,c	;volatile
 29954                           
 29955                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29956  019FF2  0EBF               	movlw	191
 29957  019FF4  6EC3               	movwf	195,c	;volatile
 29958                           
 29959                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29960  019FF6  0E90               	movlw	144
 29961  019FF8  6EC4               	movwf	196,c	;volatile
 29962                           
 29963                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29964  019FFA  0E0C               	movlw	12
 29965  019FFC  6EC5               	movwf	197,c	;volatile
 29966                           
 29967                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29968  019FFE  013A               	movlb	58	; () banked
 29969  01A000  6B70               	clrf	112,b	;volatile
 29970                           
 29971                           ; BSR set to: 58
 29972                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29973  01A002  6B60               	clrf	96,b	;volatile
 29974                           
 29975                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29976  01A004  0E3C               	movlw	60
 29977  01A006  6F50               	movwf	80,b	;volatile
 29978                           
 29979                           ; BSR set to: 58
 29980                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29981  01A008  6B80               	clrf	128,b	;volatile
 29982                           
 29983                           ; BSR set to: 58
 29984                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29985  01A00A  6B90               	clrf	144,b	;volatile
 29986                           
 29987                           ; BSR set to: 58
 29988                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29989  01A00C  6940               	setf	64,b	;volatile
 29990                           
 29991                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29992  01A00E  0E0C               	movlw	12
 29993  01A010  6F71               	movwf	113,b	;volatile
 29994                           
 29995                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 29996  01A012  0E0F               	movlw	15
 29997  01A014  6F91               	movwf	145,b	;volatile
 29998                           
 29999                           ; BSR set to: 58
 30000                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 30001  01A016  6B81               	clrf	129,b	;volatile
 30002                           
 30003                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 30004  01A018  0E83               	movlw	131
 30005  01A01A  6F51               	movwf	81,b	;volatile
 30006                           
 30007                           ; BSR set to: 58
 30008                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 30009  01A01C  6B41               	clrf	65,b	;volatile
 30010                           
 30011                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 30012  01A01E  0E97               	movlw	151
 30013  01A020  6F61               	movwf	97,b	;volatile
 30014                           
 30015                           ; BSR set to: 58
 30016                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30017  01A022  6B82               	clrf	130,b	;volatile
 30018                           
 30019                           ; BSR set to: 58
 30020                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30021  01A024  6B92               	clrf	146,b	;volatile
 30022                           
 30023                           ; BSR set to: 58
 30024                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30025  01A026  6B42               	clrf	66,b	;volatile
 30026                           
 30027                           ; BSR set to: 58
 30028                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30029  01A028  6B52               	clrf	82,b	;volatile
 30030                           
 30031                           ; BSR set to: 58
 30032                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30033  01A02A  6B62               	clrf	98,b	;volatile
 30034                           
 30035                           ; BSR set to: 58
 30036                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30037  01A02C  6B72               	clrf	114,b	;volatile
 30038                           
 30039                           ; BSR set to: 58
 30040                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30041  01A02E  6943               	setf	67,b	;volatile
 30042                           
 30043                           ; BSR set to: 58
 30044                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30045  01A030  6953               	setf	83,b	;volatile
 30046                           
 30047                           ; BSR set to: 58
 30048                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30049  01A032  6963               	setf	99,b	;volatile
 30050                           
 30051                           ; BSR set to: 58
 30052                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30053  01A034  6973               	setf	115,b	;volatile
 30054                           
 30055                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30056  01A036  0E07               	movlw	7
 30057  01A038  6F83               	movwf	131,b	;volatile
 30058                           
 30059                           ; BSR set to: 58
 30060                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30061  01A03A  6993               	setf	147,b	;volatile
 30062                           
 30063                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30064  01A03C  0E0F               	movlw	15
 30065  01A03E  6FE8               	movwf	232,b	;volatile
 30066                           
 30067                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30068  01A040  0E13               	movlw	19
 30069  01A042  6FDE               	movwf	222,b	;volatile
 30070                           
 30071                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30072  01A044  0E16               	movlw	22
 30073  01A046  6F0E               	movwf	14,b	;volatile
 30074                           
 30075                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30076  01A048  0E1E               	movlw	30
 30077  01A04A  6F13               	movwf	19,b	;volatile
 30078                           
 30079                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30080  01A04C  0E08               	movlw	8
 30081  01A04E  6FC0               	movwf	192,b	;volatile
 30082                           
 30083                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30084  01A050  0E10               	movlw	16
 30085  01A052  6F19               	movwf	25,b	;volatile
 30086                           
 30087                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30088  01A054  0E09               	movlw	9
 30089  01A056  6FC1               	movwf	193,b	;volatile
 30090                           
 30091                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30092  01A058  0E1F               	movlw	31
 30093  01A05A  6F15               	movwf	21,b	;volatile
 30094                           
 30095                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30096  01A05C  0E13               	movlw	19
 30097  01A05E  6F16               	movwf	22,b	;volatile
 30098                           
 30099                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30100  01A060  0E17               	movlw	23
 30101  01A062  6FE5               	movwf	229,b	;volatile
 30102                           
 30103                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30104  01A064  0E14               	movlw	20
 30105  01A066  6FDF               	movwf	223,b	;volatile
 30106                           
 30107                           ; BSR set to: 58
 30108                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30109  01A068  0012               	return		;funcret
 30110  01A06A                     __end_of_PIN_MANAGER_Initialize:
 30111                           	opt callstack 0
 30112                           
 30113 ;; *************** function _OSCILLATOR_Initialize *****************
 30114 ;; Defined at:
 30115 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30116 ;; Parameters:    Size  Location     Type
 30117 ;;		None
 30118 ;; Auto vars:     Size  Location     Type
 30119 ;;		None
 30120 ;; Return value:  Size  Location     Type
 30121 ;;                  1  [STACK] void 
 30122 ;; Registers used:
 30123 ;;		wreg, status,2
 30124 ;; Tracked objects:
 30125 ;;		On entry : 3F/3A
 30126 ;;		On exit  : 3F/39
 30127 ;;		Unchanged: 0/0
 30128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30133 ;;Total ram usage:        0 bytes
 30134 ;; Hardware stack levels used:    1
 30135 ;; Hardware stack levels required when called:   15
 30136 ;; This function calls:
 30137 ;;		Nothing
 30138 ;; This function is called by:
 30139 ;;		_SYSTEM_Initialize
 30140 ;; This function uses a reentrant model
 30141 ;;
 30142                           
 30143                           	psect	text124
 30144  01B5F2                     __ptext124:
 30145                           	opt callstack 0
 30146  01B5F2                     _OSCILLATOR_Initialize:
 30147                           	opt callstack 14
 30148                           
 30149                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30150                           
 30151                           ; BSR set to: 58
 30152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30153                           ;incstack = 0
 30154  01B5F2  0E20               	movlw	32
 30155  01B5F4  0139               	movlb	57	; () banked
 30156  01B5F6  6FD9               	movwf	217,b	;volatile
 30157                           
 30158                           ; BSR set to: 57
 30159                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30160  01B5F8  6BDB               	clrf	219,b	;volatile
 30161                           
 30162                           ; BSR set to: 57
 30163                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30164  01B5FA  6BDD               	clrf	221,b	;volatile
 30165                           
 30166                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30167  01B5FC  0E02               	movlw	2
 30168  01B5FE  6FDF               	movwf	223,b	;volatile
 30169                           
 30170                           ; BSR set to: 57
 30171                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30172  01B600  6BDE               	clrf	222,b	;volatile
 30173  01B602                     l169:
 30174                           
 30175                           ; BSR set to: 57
 30176                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30177  01B602  B1DC               	btfsc	220,0,b	;volatile
 30178  01B604  0012               	return	
 30179  01B606  D7FD               	goto	l169
 30180  01B608                     __end_of_OSCILLATOR_Initialize:
 30181                           	opt callstack 0
 30182                           
 30183 ;; *************** function _INTERRUPT_Initialize *****************
 30184 ;; Defined at:
 30185 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30186 ;; Parameters:    Size  Location     Type
 30187 ;;		None
 30188 ;; Auto vars:     Size  Location     Type
 30189 ;;  state           1  [STACK] _Bool 
 30190 ;; Return value:  Size  Location     Type
 30191 ;;                  1  [STACK] void 
 30192 ;; Registers used:
 30193 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30194 ;; Tracked objects:
 30195 ;;		On entry : 0/0
 30196 ;;		On exit  : 3F/39
 30197 ;;		Unchanged: 0/0
 30198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30203 ;;Total ram usage:        0 bytes
 30204 ;; Hardware stack levels used:    1
 30205 ;; Hardware stack levels required when called:   15
 30206 ;; This function calls:
 30207 ;;		Nothing
 30208 ;; This function is called by:
 30209 ;;		_SYSTEM_Initialize
 30210 ;; This function uses a reentrant model
 30211 ;;
 30212                           
 30213                           	psect	text125
 30214  01A56A                     __ptext125:
 30215                           	opt callstack 0
 30216  01A56A                     _INTERRUPT_Initialize:
 30217                           	opt callstack 0
 30218                           
 30219                           ; BSR set to: 57
 30220                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30221  01A56A  52E6               	movf	postinc1,f,c
 30222                           
 30223                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30224                           
 30225                           ;incstack = 0
 30226  01A56C  8AD2               	bsf	210,5,c	;volatile
 30227                           
 30228                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30229  01A56E  AED2               	btfss	16338,7,c	;volatile
 30230  01A570  D003               	goto	u8960
 30231  01A572  6A33               	clrf	(btemp+11)^0,c
 30232  01A574  2A33               	incf	(btemp+11)^0,f,c
 30233  01A576  D001               	goto	u8978
 30234  01A578                     u8960:
 30235  01A578  6A33               	clrf	(btemp+11)^0,c
 30236  01A57A                     u8978:
 30237                           
 30238                           ;stkvar	_state @ sp[(-1)+0]
 30239  01A57A  0EFF               	movlw	-1
 30240  01A57C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 30241                           
 30242                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30243  01A582  9ED2               	bcf	16338,7,c	;volatile
 30244                           
 30245                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30246  01A584  0E55               	movlw	85
 30247  01A586  6ED4               	movwf	212,c	;volatile
 30248                           
 30249                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30250  01A588  0EAA               	movlw	170
 30251  01A58A  6ED4               	movwf	212,c	;volatile
 30252                           
 30253                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30254  01A58C  90D4               	bcf	212,0,c	;volatile
 30255                           
 30256                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30257  01A58E  0138               	movlb	56	; () banked
 30258  01A590  6B9F               	clrf	159,b	;volatile
 30259                           
 30260                           ; BSR set to: 56
 30261                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30262  01A592  6B9E               	clrf	158,b	;volatile
 30263                           
 30264                           ; BSR set to: 56
 30265                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30266  01A594  0E08               	movlw	8
 30267  01A596  6F9D               	movwf	157,b	;volatile
 30268                           
 30269                           ; BSR set to: 56
 30270                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30271  01A598  0E55               	movlw	85
 30272  01A59A  6ED4               	movwf	212,c	;volatile
 30273                           
 30274                           ; BSR set to: 56
 30275                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30276  01A59C  0EAA               	movlw	170
 30277  01A59E  6ED4               	movwf	212,c	;volatile
 30278                           
 30279                           ; BSR set to: 56
 30280                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30281  01A5A0  80D4               	bsf	212,0,c	;volatile
 30282                           
 30283                           ; BSR set to: 56
 30284                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30285                           ;stkvar	_state @ sp[(-1)+0]
 30286  01A5A2  0EFF               	movlw	-1
 30287  01A5A4  B0E3               	btfsc	plusw1,0,c
 30288  01A5A6  D002               	bra	u8985
 30289  01A5A8  9ED2               	bcf	16338,7,c	;volatile
 30290  01A5AA  D001               	bra	u8986
 30291  01A5AC                     u8985:
 30292  01A5AC  8ED2               	bsf	16338,7,c	;volatile
 30293  01A5AE                     u8986:
 30294                           
 30295                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30296  01A5AE  0139               	movlb	57	; () banked
 30297  01A5B0  8782               	bsf	130,3,b	;volatile
 30298                           
 30299                           ; BSR set to: 57
 30300                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30301  01A5B2  8382               	bsf	130,1,b	;volatile
 30302                           
 30303                           ; BSR set to: 57
 30304                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30305  01A5B4  8182               	bsf	130,0,b	;volatile
 30306                           
 30307                           ; BSR set to: 57
 30308                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30309  01A5B6  8582               	bsf	130,2,b	;volatile
 30310                           
 30311                           ; BSR set to: 57
 30312                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30313  01A5B8  8786               	bsf	134,3,b	;volatile
 30314                           
 30315                           ; BSR set to: 57
 30316                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30317  01A5BA  8586               	bsf	134,2,b	;volatile
 30318                           
 30319                           ; BSR set to: 57
 30320                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30321  01A5BC  8783               	bsf	131,3,b	;volatile
 30322                           
 30323                           ; BSR set to: 57
 30324                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30325  01A5BE  8181               	bsf	129,0,b	;volatile
 30326                           
 30327                           ; BSR set to: 57
 30328                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30329  01A5C0  9185               	bcf	133,0,b	;volatile
 30330                           
 30331                           ; BSR set to: 57
 30332                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30333  01A5C2  8189               	bsf	137,0,b	;volatile
 30334                           
 30335                           ; BSR set to: 57
 30336                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30337  01A5C4  9D88               	bcf	136,6,b	;volatile
 30338                           
 30339                           ; BSR set to: 57
 30340                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR1bits.ADIP = 1;
 30341  01A5C6  8581               	bsf	129,2,b	;volatile
 30342                           
 30343                           ; BSR set to: 57
 30344                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADTIP = 1;
 30345  01A5C8  8781               	bsf	129,3,b	;volatile
 30346                           
 30347                           ; BSR set to: 57
 30348                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR6bits.TMR3IP = 0;
 30349  01A5CA  9D86               	bcf	134,6,b	;volatile
 30350                           
 30351                           ; BSR set to: 57
 30352                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30353  01A5CC  52E5               	movf	postdec1,f,c
 30354  01A5CE  0012               	return		;funcret
 30355  01A5D0                     __end_of_INTERRUPT_Initialize:
 30356                           	opt callstack 0
 30357                           
 30358 ;; *************** function _FVR_Initialize *****************
 30359 ;; Defined at:
 30360 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30361 ;; Parameters:    Size  Location     Type
 30362 ;;		None
 30363 ;; Auto vars:     Size  Location     Type
 30364 ;;		None
 30365 ;; Return value:  Size  Location     Type
 30366 ;;                  1  [STACK] void 
 30367 ;; Registers used:
 30368 ;;		wreg, status,2
 30369 ;; Tracked objects:
 30370 ;;		On entry : 3F/39
 30371 ;;		On exit  : 3F/3E
 30372 ;;		Unchanged: 0/0
 30373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30378 ;;Total ram usage:        0 bytes
 30379 ;; Hardware stack levels used:    1
 30380 ;; Hardware stack levels required when called:   15
 30381 ;; This function calls:
 30382 ;;		Nothing
 30383 ;; This function is called by:
 30384 ;;		_SYSTEM_Initialize
 30385 ;; This function uses a reentrant model
 30386 ;;
 30387                           
 30388                           	psect	text126
 30389  01B6F2                     __ptext126:
 30390                           	opt callstack 0
 30391  01B6F2                     _FVR_Initialize:
 30392                           	opt callstack 14
 30393                           
 30394                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30395                           
 30396                           ; BSR set to: 57
 30397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30398                           ;incstack = 0
 30399  01B6F2  0EAF               	movlw	175
 30400  01B6F4  013E               	movlb	62	; () banked
 30401  01B6F6  6FC1               	movwf	193,b	;volatile
 30402                           
 30403                           ; BSR set to: 62
 30404                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30405  01B6F8  0012               	return		;funcret
 30406  01B6FA                     __end_of_FVR_Initialize:
 30407                           	opt callstack 0
 30408                           
 30409 ;; *************** function _EXT_INT_Initialize *****************
 30410 ;; Defined at:
 30411 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30412 ;; Parameters:    Size  Location     Type
 30413 ;;		None
 30414 ;; Auto vars:     Size  Location     Type
 30415 ;;		None
 30416 ;; Return value:  Size  Location     Type
 30417 ;;                  1  [STACK] void 
 30418 ;; Registers used:
 30419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30420 ;; Tracked objects:
 30421 ;;		On entry : 3F/39
 30422 ;;		On exit  : 3F/39
 30423 ;;		Unchanged: 0/0
 30424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30429 ;;Total ram usage:        0 bytes
 30430 ;; Hardware stack levels used:    1
 30431 ;; Hardware stack levels required when called:   16
 30432 ;; This function calls:
 30433 ;;		_INT0_SetInterruptHandler
 30434 ;;		_INT1_SetInterruptHandler
 30435 ;; This function is called by:
 30436 ;;		_SYSTEM_Initialize
 30437 ;; This function uses a reentrant model
 30438 ;;
 30439                           
 30440                           	psect	text127
 30441  01AEA6                     __ptext127:
 30442                           	opt callstack 0
 30443  01AEA6                     _EXT_INT_Initialize:
 30444                           	opt callstack 13
 30445                           
 30446                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30447                           
 30448                           ; BSR set to: 62
 30449                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30450                           ;incstack = 0
 30451  01AEA6  0139               	movlb	57	; () banked
 30452  01AEA8  91A1               	bcf	161,0,b	;volatile
 30453                           
 30454                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30455  01AEAA  90D2               	bcf	210,0,c	;volatile
 30456                           
 30457                           ; BSR set to: 57
 30458                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30459  01AEAC  0E1E               	movlw	low _INT0_DefaultInterruptHandler
 30460  01AEAE  6EE6               	movwf	postinc1,c
 30461  01AEB0  0EB7               	movlw	high _INT0_DefaultInterruptHandler
 30462  01AEB2  6EE6               	movwf	postinc1,c
 30463  01AEB4  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30464  01AEB6  6EE6               	movwf	postinc1,c
 30465  01AEB8  EC31  F0D9         	call	_INT0_SetInterruptHandler	;wreg free
 30466                           
 30467                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30468  01AEBC  0139               	movlb	57	; () banked
 30469  01AEBE  8191               	bsf	145,0,b	;volatile
 30470                           
 30471                           ; BSR set to: 57
 30472                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30473  01AEC0  91A5               	bcf	165,0,b	;volatile
 30474                           
 30475                           ; BSR set to: 57
 30476                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30477  01AEC2  92D2               	bcf	210,1,c	;volatile
 30478                           
 30479                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30480  01AEC4  0E1A               	movlw	low _INT1_DefaultInterruptHandler
 30481  01AEC6  6EE6               	movwf	postinc1,c
 30482  01AEC8  0EB7               	movlw	high _INT1_DefaultInterruptHandler
 30483  01AECA  6EE6               	movwf	postinc1,c
 30484  01AECC  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30485  01AECE  6EE6               	movwf	postinc1,c
 30486  01AED0  EC1D  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
 30487                           
 30488                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30489  01AED4  0139               	movlb	57	; () banked
 30490  01AED6  8195               	bsf	149,0,b	;volatile
 30491                           
 30492                           ; BSR set to: 57
 30493                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30494  01AED8  0012               	return		;funcret
 30495  01AEDA                     __end_of_EXT_INT_Initialize:
 30496                           	opt callstack 0
 30497                           
 30498 ;; *************** function _INT1_SetInterruptHandler *****************
 30499 ;; Defined at:
 30500 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30501 ;; Parameters:    Size  Location     Type
 30502 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30503 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30504 ;; Auto vars:     Size  Location     Type
 30505 ;;		None
 30506 ;; Return value:  Size  Location     Type
 30507 ;;                  1  [STACK] void 
 30508 ;; Registers used:
 30509 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30510 ;; Tracked objects:
 30511 ;;		On entry : 3F/39
 30512 ;;		On exit  : 0/0
 30513 ;;		Unchanged: 0/0
 30514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30519 ;;Total ram usage:        0 bytes
 30520 ;; Hardware stack levels used:    1
 30521 ;; Hardware stack levels required when called:   15
 30522 ;; This function calls:
 30523 ;;		Nothing
 30524 ;; This function is called by:
 30525 ;;		_EXT_INT_Initialize
 30526 ;;		_start_switch_handler
 30527 ;; This function uses a reentrant model
 30528 ;;
 30529                           
 30530                           	psect	text128
 30531  01B23A                     __ptext128:
 30532                           	opt callstack 0
 30533  01B23A                     _INT1_SetInterruptHandler:
 30534                           	opt callstack 14
 30535                           
 30536                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30537                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30538                           
 30539                           ; BSR set to: 57
 30540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30541                           ;incstack = 0
 30542  01B23A  50E1               	movf	fsr1l,w,c
 30543  01B23C  0FFD               	addlw	-3
 30544  01B23E  6ED9               	movwf	fsr2l,c
 30545  01B240  50E2               	movf	fsr1h,w,c
 30546  01B242  6EDA               	movwf	fsr2h,c
 30547  01B244  0EFF               	movlw	255
 30548  01B246  22DA               	addwfc	fsr2h,f,c
 30549  01B248  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30550  01B24E  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30551  01B254  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30552                           
 30553                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30554  01B25A  52E5               	movf	postdec1,f,c
 30555  01B25C  52E5               	movf	postdec1,f,c
 30556  01B25E  52E5               	movf	postdec1,f,c
 30557  01B260  0012               	return		;funcret
 30558  01B262                     __end_of_INT1_SetInterruptHandler:
 30559                           	opt callstack 0
 30560                           
 30561 ;; *************** function _INT0_SetInterruptHandler *****************
 30562 ;; Defined at:
 30563 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30564 ;; Parameters:    Size  Location     Type
 30565 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30566 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30567 ;; Auto vars:     Size  Location     Type
 30568 ;;		None
 30569 ;; Return value:  Size  Location     Type
 30570 ;;                  1  [STACK] void 
 30571 ;; Registers used:
 30572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30573 ;; Tracked objects:
 30574 ;;		On entry : 3F/39
 30575 ;;		On exit  : 0/0
 30576 ;;		Unchanged: 0/0
 30577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30582 ;;Total ram usage:        0 bytes
 30583 ;; Hardware stack levels used:    1
 30584 ;; Hardware stack levels required when called:   15
 30585 ;; This function calls:
 30586 ;;		Nothing
 30587 ;; This function is called by:
 30588 ;;		_EXT_INT_Initialize
 30589 ;; This function uses a reentrant model
 30590 ;;
 30591                           
 30592                           	psect	text129
 30593  01B262                     __ptext129:
 30594                           	opt callstack 0
 30595  01B262                     _INT0_SetInterruptHandler:
 30596                           	opt callstack 13
 30597                           
 30598                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30599                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30600                           
 30601                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30602                           ;incstack = 0
 30603  01B262  50E1               	movf	fsr1l,w,c
 30604  01B264  0FFD               	addlw	-3
 30605  01B266  6ED9               	movwf	fsr2l,c
 30606  01B268  50E2               	movf	fsr1h,w,c
 30607  01B26A  6EDA               	movwf	fsr2h,c
 30608  01B26C  0EFF               	movlw	255
 30609  01B26E  22DA               	addwfc	fsr2h,f,c
 30610  01B270  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30611  01B276  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30612  01B27C  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30613                           
 30614                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30615  01B282  52E5               	movf	postdec1,f,c
 30616  01B284  52E5               	movf	postdec1,f,c
 30617  01B286  52E5               	movf	postdec1,f,c
 30618  01B288  0012               	return		;funcret
 30619  01B28A                     __end_of_INT0_SetInterruptHandler:
 30620                           	opt callstack 0
 30621                           
 30622 ;; *************** function _DMA2_Initialize *****************
 30623 ;; Defined at:
 30624 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30625 ;; Parameters:    Size  Location     Type
 30626 ;;		None
 30627 ;; Auto vars:     Size  Location     Type
 30628 ;;		None
 30629 ;; Return value:  Size  Location     Type
 30630 ;;                  1  [STACK] void 
 30631 ;; Registers used:
 30632 ;;		wreg, status,2
 30633 ;; Tracked objects:
 30634 ;;		On entry : 3F/3D
 30635 ;;		On exit  : 3F/3B
 30636 ;;		Unchanged: 0/0
 30637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30642 ;;Total ram usage:        0 bytes
 30643 ;; Hardware stack levels used:    1
 30644 ;; Hardware stack levels required when called:   15
 30645 ;; This function calls:
 30646 ;;		Nothing
 30647 ;; This function is called by:
 30648 ;;		_SYSTEM_Initialize
 30649 ;; This function uses a reentrant model
 30650 ;;
 30651                           
 30652                           	psect	text130
 30653  01A7B0                     __ptext130:
 30654                           	opt callstack 0
 30655  01A7B0                     _DMA2_Initialize:
 30656                           	opt callstack 14
 30657                           
 30658                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30659                           
 30660                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30661                           ;incstack = 0
 30662  01A7B0  0E00               	movlw	0
 30663  01A7B2  013B               	movlb	59	; () banked
 30664  01A7B4  6FD9               	movwf	217,b	;volatile
 30665  01A7B6  0E10               	movlw	16
 30666  01A7B8  6FDA               	movwf	218,b	;volatile
 30667  01A7BA  0E00               	movlw	0
 30668  01A7BC  6FDB               	movwf	219,b	;volatile
 30669                           
 30670                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30671  01A7BE  0E3F               	movlw	63
 30672  01A7C0  6FD1               	movwf	209,b	;volatile
 30673  01A7C2  0EBB               	movlw	187
 30674  01A7C4  6FD0               	movwf	208,b	;volatile
 30675                           
 30676                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30677  01A7C6  0E03               	movlw	3
 30678  01A7C8  6FDD               	movwf	221,b	;volatile
 30679                           
 30680                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30681  01A7CA  0E00               	movlw	0
 30682  01A7CC  6FD8               	movwf	216,b	;volatile
 30683  01A7CE  0E01               	movlw	1
 30684  01A7D0  6FD7               	movwf	215,b	;volatile
 30685                           
 30686                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30687  01A7D2  0E00               	movlw	0
 30688  01A7D4  6FCF               	movwf	207,b	;volatile
 30689  01A7D6  0E01               	movlw	1
 30690  01A7D8  6FCE               	movwf	206,b	;volatile
 30691                           
 30692                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30693  01A7DA  0E1C               	movlw	28
 30694  01A7DC  6FDF               	movwf	223,b	;volatile
 30695                           
 30696                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30697  01A7DE  0E3D               	movlw	61
 30698  01A7E0  6FDE               	movwf	222,b	;volatile
 30699                           
 30700                           ; BSR set to: 59
 30701                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30702  01A7E2  0139               	movlb	57	; () banked
 30703  01A7E4  97A5               	bcf	165,3,b	;volatile
 30704                           
 30705                           ; BSR set to: 57
 30706                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30707  01A7E6  95A5               	bcf	165,2,b	;volatile
 30708                           
 30709                           ; BSR set to: 57
 30710                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30711  01A7E8  9BA5               	bcf	165,5,b	;volatile
 30712                           
 30713                           ; BSR set to: 57
 30714                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30715  01A7EA  99A5               	bcf	165,4,b	;volatile
 30716                           
 30717                           ; BSR set to: 57
 30718                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30719  01A7EC  9795               	bcf	149,3,b	;volatile
 30720                           
 30721                           ; BSR set to: 57
 30722                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30723  01A7EE  9595               	bcf	149,2,b	;volatile
 30724                           
 30725                           ; BSR set to: 57
 30726                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30727  01A7F0  9B95               	bcf	149,5,b	;volatile
 30728                           
 30729                           ; BSR set to: 57
 30730                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30731  01A7F2  9995               	bcf	149,4,b	;volatile
 30732  01A7F4  9ED2               	bcf	16338,7,c	;# 
 30733  01A7F6  0139               	banksel	14831	;# 
 30734  01A7F8  0E55               	movlw	85	;# 
 30735  01A7FA  6FEF               	movwf	14831,b	;# 
 30736  01A7FC  0EAA               	movlw	170	;# 
 30737  01A7FE  6FEF               	movwf	14831,b	;# 
 30738  01A800  81EF               	bsf	14831,0,b	;# 
 30739  01A802  8ED2               	bsf	16338,7,c	;# 
 30740                           
 30741                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30742  01A804  013B               	movlb	59	; () banked
 30743  01A806  6BDC               	clrf	220,b	;volatile
 30744                           
 30745                           ; BSR set to: 59
 30746                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30747  01A808  0012               	return		;funcret
 30748  01A80A                     __end_of_DMA2_Initialize:
 30749                           	opt callstack 0
 30750                           
 30751 ;; *************** function _DMA1_Initialize *****************
 30752 ;; Defined at:
 30753 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30754 ;; Parameters:    Size  Location     Type
 30755 ;;		None
 30756 ;; Auto vars:     Size  Location     Type
 30757 ;;		None
 30758 ;; Return value:  Size  Location     Type
 30759 ;;                  1  [STACK] void 
 30760 ;; Registers used:
 30761 ;;		wreg, status,2
 30762 ;; Tracked objects:
 30763 ;;		On entry : 3F/3B
 30764 ;;		On exit  : 3F/3B
 30765 ;;		Unchanged: 0/0
 30766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30771 ;;Total ram usage:        0 bytes
 30772 ;; Hardware stack levels used:    1
 30773 ;; Hardware stack levels required when called:   15
 30774 ;; This function calls:
 30775 ;;		Nothing
 30776 ;; This function is called by:
 30777 ;;		_SYSTEM_Initialize
 30778 ;; This function uses a reentrant model
 30779 ;;
 30780                           
 30781                           	psect	text131
 30782  01A42C                     __ptext131:
 30783                           	opt callstack 0
 30784  01A42C                     _DMA1_Initialize:
 30785                           	opt callstack 14
 30786                           
 30787                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30788                           
 30789                           ; BSR set to: 59
 30790                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30791                           ;incstack = 0
 30792  01A42C  0E00               	movlw	0
 30793  01A42E  013B               	movlb	59	; () banked
 30794  01A430  6FF9               	movwf	249,b	;volatile
 30795  01A432  0E10               	movlw	16
 30796  01A434  6FFA               	movwf	250,b	;volatile
 30797  01A436  0E00               	movlw	0
 30798  01A438  6FFB               	movwf	251,b	;volatile
 30799                           
 30800                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30801  01A43A  0E3D               	movlw	61
 30802  01A43C  6FF1               	movwf	241,b	;volatile
 30803  01A43E  0E11               	movlw	17
 30804  01A440  6FF0               	movwf	240,b	;volatile
 30805                           
 30806                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30807  01A442  0E03               	movlw	3
 30808  01A444  6FFD               	movwf	253,b	;volatile
 30809                           
 30810                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30811  01A446  0E00               	movlw	0
 30812  01A448  6FF8               	movwf	248,b	;volatile
 30813  01A44A  0E01               	movlw	1
 30814  01A44C  6FF7               	movwf	247,b	;volatile
 30815                           
 30816                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30817  01A44E  0E00               	movlw	0
 30818  01A450  6FEF               	movwf	239,b	;volatile
 30819  01A452  0E01               	movlw	1
 30820  01A454  6FEE               	movwf	238,b	;volatile
 30821                           
 30822                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30823  01A456  0E15               	movlw	21
 30824  01A458  6FFF               	movwf	255,b	;volatile
 30825                           
 30826                           ; BSR set to: 59
 30827                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30828  01A45A  6BFE               	clrf	254,b	;volatile
 30829                           
 30830                           ; BSR set to: 59
 30831                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30832  01A45C  0139               	movlb	57	; () banked
 30833  01A45E  93A2               	bcf	162,1,b	;volatile
 30834                           
 30835                           ; BSR set to: 57
 30836                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30837  01A460  91A2               	bcf	162,0,b	;volatile
 30838                           
 30839                           ; BSR set to: 57
 30840                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30841  01A462  97A2               	bcf	162,3,b	;volatile
 30842                           
 30843                           ; BSR set to: 57
 30844                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30845  01A464  95A2               	bcf	162,2,b	;volatile
 30846                           
 30847                           ; BSR set to: 57
 30848                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30849  01A466  8392               	bsf	146,1,b	;volatile
 30850                           
 30851                           ; BSR set to: 57
 30852                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30853  01A468  8192               	bsf	146,0,b	;volatile
 30854                           
 30855                           ; BSR set to: 57
 30856                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30857  01A46A  8792               	bsf	146,3,b	;volatile
 30858                           
 30859                           ; BSR set to: 57
 30860                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30861  01A46C  8592               	bsf	146,2,b	;volatile
 30862                           
 30863                           ; BSR set to: 57
 30864                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30865  01A46E  6BF1               	clrf	241,b	;volatile
 30866                           
 30867                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30868  01A470  0E01               	movlw	1
 30869  01A472  6FF2               	movwf	242,b	;volatile
 30870                           
 30871                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30872  01A474  0E04               	movlw	4
 30873  01A476  6FF3               	movwf	243,b	;volatile
 30874                           
 30875                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30876  01A478  0E02               	movlw	2
 30877  01A47A  6FF4               	movwf	244,b	;volatile
 30878                           
 30879                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30880  01A47C  0E03               	movlw	3
 30881  01A47E  6FF7               	movwf	247,b	;volatile
 30882  01A480  9ED2               	bcf	16338,7,c	;# 
 30883  01A482  0139               	banksel	14831	;# 
 30884  01A484  0E55               	movlw	85	;# 
 30885  01A486  6FEF               	movwf	14831,b	;# 
 30886  01A488  0EAA               	movlw	170	;# 
 30887  01A48A  6FEF               	movwf	14831,b	;# 
 30888  01A48C  81EF               	bsf	14831,0,b	;# 
 30889  01A48E  8ED2               	bsf	16338,7,c	;# 
 30890                           
 30891                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30892  01A490  013B               	movlb	59	; () banked
 30893  01A492  6BFC               	clrf	252,b	;volatile
 30894                           
 30895                           ; BSR set to: 59
 30896                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30897  01A494  0012               	return		;funcret
 30898  01A496                     __end_of_DMA1_Initialize:
 30899                           	opt callstack 0
 30900                           
 30901 ;; *************** function _CLKREF_Initialize *****************
 30902 ;; Defined at:
 30903 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30904 ;; Parameters:    Size  Location     Type
 30905 ;;		None
 30906 ;; Auto vars:     Size  Location     Type
 30907 ;;		None
 30908 ;; Return value:  Size  Location     Type
 30909 ;;                  1  [STACK] void 
 30910 ;; Registers used:
 30911 ;;		wreg, status,2
 30912 ;; Tracked objects:
 30913 ;;		On entry : 3F/3B
 30914 ;;		On exit  : 3F/3C
 30915 ;;		Unchanged: 0/0
 30916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30921 ;;Total ram usage:        0 bytes
 30922 ;; Hardware stack levels used:    1
 30923 ;; Hardware stack levels required when called:   15
 30924 ;; This function calls:
 30925 ;;		Nothing
 30926 ;; This function is called by:
 30927 ;;		_SYSTEM_Initialize
 30928 ;; This function uses a reentrant model
 30929 ;;
 30930                           
 30931                           	psect	text132
 30932  01B69A                     __ptext132:
 30933                           	opt callstack 0
 30934  01B69A                     _CLKREF_Initialize:
 30935                           	opt callstack 14
 30936                           
 30937                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30938                           
 30939                           ; BSR set to: 59
 30940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30941                           ;incstack = 0
 30942  01B69A  013C               	movlb	60	; () banked
 30943  01B69C  6BE6               	clrf	230,b	;volatile
 30944                           
 30945                           ; BSR set to: 60
 30946                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30947  01B69E  0E94               	movlw	148
 30948  01B6A0  6FE5               	movwf	229,b	;volatile
 30949                           
 30950                           ; BSR set to: 60
 30951                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30952  01B6A2  0012               	return		;funcret
 30953  01B6A4                     __end_of_CLKREF_Initialize:
 30954                           	opt callstack 0
 30955                           
 30956 ;; *************** function _ADCC_Initialize *****************
 30957 ;; Defined at:
 30958 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30959 ;; Parameters:    Size  Location     Type
 30960 ;;		None
 30961 ;; Auto vars:     Size  Location     Type
 30962 ;;		None
 30963 ;; Return value:  Size  Location     Type
 30964 ;;                  1  [STACK] void 
 30965 ;; Registers used:
 30966 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30967 ;; Tracked objects:
 30968 ;;		On entry : 3F/3E
 30969 ;;		On exit  : 0/0
 30970 ;;		Unchanged: 0/0
 30971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30976 ;;Total ram usage:        0 bytes
 30977 ;; Hardware stack levels used:    1
 30978 ;; Hardware stack levels required when called:   16
 30979 ;; This function calls:
 30980 ;;		_ADCC_SetADIInterruptHandler
 30981 ;;		_ADCC_SetADTIInterruptHandler
 30982 ;; This function is called by:
 30983 ;;		_SYSTEM_Initialize
 30984 ;; This function uses a reentrant model
 30985 ;;
 30986                           
 30987                           	psect	text133
 30988  01A496                     __ptext133:
 30989                           	opt callstack 0
 30990  01A496                     _ADCC_Initialize:
 30991                           	opt callstack 13
 30992                           
 30993                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30994                           
 30995                           ; BSR set to: 60
 30996                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30997                           ;incstack = 0
 30998  01A496  013E               	movlb	62	; () banked
 30999  01A498  6BDE               	clrf	222,b	;volatile
 31000                           
 31001                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 31002  01A49A  6BDF               	clrf	223,b	;volatile
 31003                           
 31004                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 31005  01A49C  6BE0               	clrf	224,b	;volatile
 31006                           
 31007                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 31008  01A49E  6BE1               	clrf	225,b	;volatile
 31009                           
 31010                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 31011  01A4A0  6BE4               	clrf	228,b	;volatile
 31012                           
 31013                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 31014  01A4A2  6BE5               	clrf	229,b	;volatile
 31015                           
 31016                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31017  01A4A4  6BEA               	clrf	234,b	;volatile
 31018                           
 31019                           ; BSR set to: 62
 31020                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31021  01A4A6  0E40               	movlw	64
 31022  01A4A8  6FEC               	movwf	236,b	;volatile
 31023                           
 31024                           ; BSR set to: 62
 31025                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31026  01A4AA  6BF1               	clrf	241,b	;volatile
 31027                           
 31028                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31029  01A4AC  0E20               	movlw	32
 31030  01A4AE  6FF3               	movwf	243,b	;volatile
 31031                           
 31032                           ; BSR set to: 62
 31033                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31034  01A4B0  6BF4               	clrf	244,b	;volatile
 31035                           
 31036                           ; BSR set to: 62
 31037                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31038  01A4B2  6BF5               	clrf	245,b	;volatile
 31039                           
 31040                           ; BSR set to: 62
 31041                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31042  01A4B4  6BF6               	clrf	246,b	;volatile
 31043                           
 31044                           ; BSR set to: 62
 31045                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31046  01A4B6  6BF7               	clrf	247,b	;volatile
 31047                           
 31048                           ; BSR set to: 62
 31049                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31050  01A4B8  6BF9               	clrf	249,b	;volatile
 31051                           
 31052                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31053  01A4BA  0E5B               	movlw	91
 31054  01A4BC  6FFA               	movwf	250,b	;volatile
 31055                           
 31056                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31057  01A4BE  0E27               	movlw	39
 31058  01A4C0  6FFB               	movwf	251,b	;volatile
 31059                           
 31060                           ; BSR set to: 62
 31061                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31062  01A4C2  6BFC               	clrf	252,b	;volatile
 31063                           
 31064                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31065  01A4C4  0E02               	movlw	2
 31066  01A4C6  6FFD               	movwf	253,b	;volatile
 31067                           
 31068                           ; BSR set to: 62
 31069                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31070  01A4C8  6BFE               	clrf	254,b	;volatile
 31071                           
 31072                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31073  01A4CA  0E07               	movlw	7
 31074  01A4CC  6FFF               	movwf	255,b	;volatile
 31075                           
 31076                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31077  01A4CE  0E84               	movlw	132
 31078  01A4D0  6FF8               	movwf	248,b	;volatile
 31079                           
 31080                           ; BSR set to: 62
 31081                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31082  01A4D2  0139               	movlb	57	; () banked
 31083  01A4D4  95A1               	bcf	161,2,b	;volatile
 31084                           
 31085                           ; BSR set to: 57
 31086                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31087  01A4D6  8591               	bsf	145,2,b	;volatile
 31088                           
 31089                           ; BSR set to: 57
 31090                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31091  01A4D8  0E20               	movlw	low _ADCC_DefaultInterruptHandler
 31092  01A4DA  6EE6               	movwf	postinc1,c
 31093  01A4DC  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31094  01A4DE  6EE6               	movwf	postinc1,c
 31095  01A4E0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31096  01A4E2  6EE6               	movwf	postinc1,c
 31097  01A4E4  EC59  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31098                           
 31099                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31100  01A4E8  0139               	movlb	57	; () banked
 31101  01A4EA  97A1               	bcf	161,3,b	;volatile
 31102                           
 31103                           ; BSR set to: 57
 31104                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31105  01A4EC  8791               	bsf	145,3,b	;volatile
 31106                           
 31107                           ; BSR set to: 57
 31108                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31109  01A4EE  0E20               	movlw	low _ADCC_DefaultInterruptHandler
 31110  01A4F0  6EE6               	movwf	postinc1,c
 31111  01A4F2  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31112  01A4F4  6EE6               	movwf	postinc1,c
 31113  01A4F6  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31114  01A4F8  6EE6               	movwf	postinc1,c
 31115  01A4FA  EC45  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31116                           
 31117                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31118  01A4FE  0012               	return		;funcret
 31119  01A500                     __end_of_ADCC_Initialize:
 31120                           	opt callstack 0
 31121                           
 31122 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31123 ;; Defined at:
 31124 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31125 ;; Parameters:    Size  Location     Type
 31126 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31127 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31128 ;; Auto vars:     Size  Location     Type
 31129 ;;		None
 31130 ;; Return value:  Size  Location     Type
 31131 ;;                  1  [STACK] void 
 31132 ;; Registers used:
 31133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31134 ;; Tracked objects:
 31135 ;;		On entry : 0/0
 31136 ;;		On exit  : 0/0
 31137 ;;		Unchanged: 0/0
 31138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31143 ;;Total ram usage:        0 bytes
 31144 ;; Hardware stack levels used:    1
 31145 ;; Hardware stack levels required when called:   15
 31146 ;; This function calls:
 31147 ;;		Nothing
 31148 ;; This function is called by:
 31149 ;;		_ADCC_Initialize
 31150 ;;		_start_adc_scan
 31151 ;; This function uses a reentrant model
 31152 ;;
 31153                           
 31154                           	psect	text134
 31155  01B28A                     __ptext134:
 31156                           	opt callstack 0
 31157  01B28A                     _ADCC_SetADTIInterruptHandler:
 31158                           	opt callstack 14
 31159                           
 31160                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31161                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31162                           
 31163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31164                           ;incstack = 0
 31165  01B28A  50E1               	movf	fsr1l,w,c
 31166  01B28C  0FFD               	addlw	-3
 31167  01B28E  6ED9               	movwf	fsr2l,c
 31168  01B290  50E2               	movf	fsr1h,w,c
 31169  01B292  6EDA               	movwf	fsr2h,c
 31170  01B294  0EFF               	movlw	255
 31171  01B296  22DA               	addwfc	fsr2h,f,c
 31172  01B298  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31173  01B29E  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31174  01B2A4  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31175                           
 31176                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31177  01B2AA  52E5               	movf	postdec1,f,c
 31178  01B2AC  52E5               	movf	postdec1,f,c
 31179  01B2AE  52E5               	movf	postdec1,f,c
 31180  01B2B0  0012               	return		;funcret
 31181  01B2B2                     __end_of_ADCC_SetADTIInterruptHandler:
 31182                           	opt callstack 0
 31183                           
 31184 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31185 ;; Defined at:
 31186 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31187 ;; Parameters:    Size  Location     Type
 31188 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31189 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31190 ;; Auto vars:     Size  Location     Type
 31191 ;;		None
 31192 ;; Return value:  Size  Location     Type
 31193 ;;                  1  [STACK] void 
 31194 ;; Registers used:
 31195 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31196 ;; Tracked objects:
 31197 ;;		On entry : 6/0
 31198 ;;		On exit  : 0/0
 31199 ;;		Unchanged: 0/0
 31200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31205 ;;Total ram usage:        0 bytes
 31206 ;; Hardware stack levels used:    1
 31207 ;; Hardware stack levels required when called:   15
 31208 ;; This function calls:
 31209 ;;		Nothing
 31210 ;; This function is called by:
 31211 ;;		_ADCC_Initialize
 31212 ;;		_start_adc_scan
 31213 ;; This function uses a reentrant model
 31214 ;;
 31215                           
 31216                           	psect	text135
 31217  01B2B2                     __ptext135:
 31218                           	opt callstack 0
 31219  01B2B2                     _ADCC_SetADIInterruptHandler:
 31220                           	opt callstack 14
 31221                           
 31222                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31223                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31224                           
 31225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31226                           ;incstack = 0
 31227  01B2B2  50E1               	movf	fsr1l,w,c
 31228  01B2B4  0FFD               	addlw	-3
 31229  01B2B6  6ED9               	movwf	fsr2l,c
 31230  01B2B8  50E2               	movf	fsr1h,w,c
 31231  01B2BA  6EDA               	movwf	fsr2h,c
 31232  01B2BC  0EFF               	movlw	255
 31233  01B2BE  22DA               	addwfc	fsr2h,f,c
 31234  01B2C0  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31235  01B2C6  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31236  01B2CC  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31237                           
 31238                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31239  01B2D2  52E5               	movf	postdec1,f,c
 31240  01B2D4  52E5               	movf	postdec1,f,c
 31241  01B2D6  52E5               	movf	postdec1,f,c
 31242  01B2D8  0012               	return		;funcret
 31243  01B2DA                     __end_of_ADCC_SetADIInterruptHandler:
 31244                           	opt callstack 0
 31245                           
 31246 ;; *************** function _INT1_ISR *****************
 31247 ;; Defined at:
 31248 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31249 ;; Parameters:    Size  Location     Type
 31250 ;;		None
 31251 ;; Auto vars:     Size  Location     Type
 31252 ;;		None
 31253 ;; Return value:  Size  Location     Type
 31254 ;;                  1    wreg      void 
 31255 ;; Registers used:
 31256 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31257 ;; Tracked objects:
 31258 ;;		On entry : 0/0
 31259 ;;		On exit  : 0/0
 31260 ;;		Unchanged: 0/0
 31261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31262 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31263 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31264 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31265 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31266 ;;Total ram usage:        4 bytes
 31267 ;; Hardware stack levels used:    1
 31268 ;; Hardware stack levels required when called:    5
 31269 ;; This function calls:
 31270 ;;		_INT1_CallBack
 31271 ;; This function is called by:
 31272 ;;		Interrupt level 1
 31273 ;; This function uses a non-reentrant model
 31274 ;;
 31275                           
 31276                           	psect	text136
 31277  01AD20                     __ptext136:
 31278                           	opt callstack 0
 31279  01AD20                     _INT1_ISR:
 31280                           	opt callstack 12
 31281                           
 31282                           ;incstack = 0
 31283  01AD20  006F FF60  F007    	movff	status,??_INT1_ISR
 31284  01AD26  0060  F0A0  F008   	movff	btemp,??_INT1_ISR+1
 31285  01AD2C  0060  F0C8  F009   	movff	btemp+10,??_INT1_ISR+2
 31286  01AD32  0060  F0CC  F00A   	movff	btemp+11,??_INT1_ISR+3
 31287  01AD38  EE16  F0A1         	lfsr	1,___intlo_sp
 31288                           
 31289                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31290  01AD3C  0139               	movlb	57	; () banked
 31291  01AD3E  91A5               	bcf	165,0,b	;volatile
 31292                           
 31293                           ; BSR set to: 57
 31294                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31295  01AD40  ECCE  F0D9         	call	_INT1_CallBack	;wreg free
 31296  01AD44  0060  F028  F033   	movff	??_INT1_ISR+3,btemp+11
 31297  01AD4A  0060  F024  F032   	movff	??_INT1_ISR+2,btemp+10
 31298  01AD50  0060  F020  F028   	movff	??_INT1_ISR+1,btemp
 31299  01AD56  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 31300  01AD5C  0011               	retfie		f
 31301  01AD5E                     __end_of_INT1_ISR:
 31302                           	opt callstack 0
 31303                           
 31304 ;; *************** function _INT1_CallBack *****************
 31305 ;; Defined at:
 31306 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31307 ;; Parameters:    Size  Location     Type
 31308 ;;		None
 31309 ;; Auto vars:     Size  Location     Type
 31310 ;;		None
 31311 ;; Return value:  Size  Location     Type
 31312 ;;                  1  [STACK] void 
 31313 ;; Registers used:
 31314 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31315 ;; Tracked objects:
 31316 ;;		On entry : 3F/39
 31317 ;;		On exit  : 0/0
 31318 ;;		Unchanged: 0/0
 31319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31324 ;;Total ram usage:        0 bytes
 31325 ;; Hardware stack levels used:    1
 31326 ;; Hardware stack levels required when called:    4
 31327 ;; This function calls:
 31328 ;;		Absolute function
 31329 ;;		_INT1_DefaultInterruptHandler
 31330 ;;		_switch_handler
 31331 ;; This function is called by:
 31332 ;;		_INT1_ISR
 31333 ;; This function uses a reentrant model
 31334 ;;
 31335                           
 31336                           	psect	text137
 31337  01B39C                     __ptext137:
 31338                           	opt callstack 0
 31339  01B39C                     _INT1_CallBack:
 31340                           	opt callstack 12
 31341                           
 31342                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31343                           
 31344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31345                           ;incstack = 0
 31346  01B39C  0100               	movlb	0	; () banked
 31347  01B39E  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31348  01B3A0  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31349  01B3A2  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31350  01B3A4  B4D8               	btfsc	status,2,c
 31351  01B3A6  0012               	return	
 31352                           
 31353                           ; BSR set to: 0
 31354                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31355  01B3A8  D801               	call	u957_28
 31356  01B3AA  0012               	return	
 31357  01B3AC                     u957_28:
 31358  01B3AC  0005               	push	
 31359  01B3AE  6EFA               	movwf	pclath,c
 31360  01B3B0  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31361  01B3B2  6EFD               	movwf	tosl,c
 31362  01B3B4  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31363  01B3B6  6EFE               	movwf	tosh,c
 31364  01B3B8  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31365  01B3BA  6EFF               	movwf	tosu,c
 31366  01B3BC  50FA               	movf	pclath,w,c
 31367  01B3BE  0012               	return		;indir
 31368  01B3C0                     __end_of_INT1_CallBack:
 31369                           	opt callstack 0
 31370                           
 31371 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31372 ;; Defined at:
 31373 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31374 ;; Parameters:    Size  Location     Type
 31375 ;;		None
 31376 ;; Auto vars:     Size  Location     Type
 31377 ;;		None
 31378 ;; Return value:  Size  Location     Type
 31379 ;;                  1  [STACK] void 
 31380 ;; Registers used:
 31381 ;;		None
 31382 ;; Tracked objects:
 31383 ;;		On entry : 3F/0
 31384 ;;		On exit  : 0/0
 31385 ;;		Unchanged: 0/0
 31386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31387 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31389 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31390 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31391 ;;Total ram usage:        0 bytes
 31392 ;; Hardware stack levels used:    1
 31393 ;; Hardware stack levels required when called:    3
 31394 ;; This function calls:
 31395 ;;		Nothing
 31396 ;; This function is called by:
 31397 ;;		_EXT_INT_Initialize
 31398 ;;		_INT1_CallBack
 31399 ;; This function uses a reentrant model
 31400 ;;
 31401                           
 31402                           	psect	text138
 31403  01B71A                     __ptext138:
 31404                           	opt callstack 0
 31405  01B71A                     _INT1_DefaultInterruptHandler:
 31406                           	opt callstack 12
 31407                           
 31408                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31409                           
 31410                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31411                           ;incstack = 0
 31412  01B71A  0012               	return		;funcret
 31413  01B71C                     __end_of_INT1_DefaultInterruptHandler:
 31414                           	opt callstack 0
 31415                           
 31416 ;; *************** function _switch_handler *****************
 31417 ;; Defined at:
 31418 ;;		line 58 in file "dio.c"
 31419 ;; Parameters:    Size  Location     Type
 31420 ;;		None
 31421 ;; Auto vars:     Size  Location     Type
 31422 ;;  i               1  [STACK] unsigned char 
 31423 ;;  sw_value        1  [STACK] unsigned char 
 31424 ;; Return value:  Size  Location     Type
 31425 ;;                  1  [STACK] void 
 31426 ;; Registers used:
 31427 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31428 ;; Tracked objects:
 31429 ;;		On entry : 3F/0
 31430 ;;		On exit  : 0/0
 31431 ;;		Unchanged: 0/0
 31432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31437 ;;Total ram usage:        0 bytes
 31438 ;; Hardware stack levels used:    1
 31439 ;; Hardware stack levels required when called:    3
 31440 ;; This function calls:
 31441 ;;		Nothing
 31442 ;; This function is called by:
 31443 ;;		_start_switch_handler
 31444 ;;		_INT1_CallBack
 31445 ;; This function uses a reentrant model
 31446 ;;
 31447                           
 31448                           	psect	text139
 31449  018C34                     __ptext139:
 31450                           	opt callstack 0
 31451  018C34                     _switch_handler:
 31452                           	opt callstack 0
 31453                           
 31454                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31455  018C34  52E6               	movf	postinc1,f,c
 31456  018C36  52E6               	movf	postinc1,f,c
 31457                           
 31458                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31459                           ;stkvar	_i @ sp[(-2)+0]
 31460                           
 31461                           ;incstack = 0
 31462  018C38  0EFE               	movlw	-2
 31463  018C3A  6AE3               	clrf	plusw1,c
 31464  018C3C  9EBD               	bcf	189,7,c	;volatile
 31465  018C3E  9ABF               	bcf	191,5,c	;volatile
 31466                           
 31467                           ;dio.c: 73:  __nop();
 31468  018C40  F000               	nop	
 31469                           
 31470                           ;dio.c: 74:  __nop();
 31471  018C42  F000               	nop	
 31472                           
 31473                           ;dio.c: 75:  __nop();
 31474  018C44  F000               	nop	
 31475  018C46  D019               	goto	l10238
 31476  018C48                     l10226:
 31477                           
 31478                           ;dio.c: 80:    sw_value = PORTFbits.RF3;
 31479  018C48  A6CF               	btfss	207,3,c	;volatile
 31480  018C4A  D011               	goto	u933_20
 31481  018C4C  D00D               	goto	u933_21
 31482  018C4E                     u930_28:
 31483                           
 31484                           ;stkvar	_sw_value @ sp[(-2)+1]
 31485  018C4E  0EFF               	movlw	-1
 31486  018C50  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 31487                           
 31488                           ;dio.c: 81:    break;
 31489  018C56  D027               	goto	l10240
 31490  018C58                     l10228:
 31491                           
 31492                           ;dio.c: 83:    sw_value = PORTFbits.RF2;
 31493  018C58  A4CF               	btfss	207,2,c	;volatile
 31494  018C5A  D009               	goto	u933_20
 31495  018C5C  D005               	goto	u933_21
 31496  018C5E                     l10230:
 31497                           
 31498                           ;dio.c: 86:    sw_value = PORTFbits.RF1;
 31499  018C5E  A2CF               	btfss	207,1,c	;volatile
 31500  018C60  D006               	goto	u933_20
 31501  018C62  D002               	goto	u933_21
 31502  018C64                     l10232:
 31503                           
 31504                           ;dio.c: 89:    sw_value = PORTFbits.RF0;
 31505  018C64  A0CF               	btfss	207,0,c	;volatile
 31506  018C66  D003               	goto	u933_20
 31507  018C68                     u933_21:
 31508  018C68  6A33               	clrf	(btemp+11)^0,c
 31509  018C6A  2A33               	incf	(btemp+11)^0,f,c
 31510  018C6C  D7F0               	goto	u930_28
 31511  018C6E                     u933_20:
 31512  018C6E  6A33               	clrf	(btemp+11)^0,c
 31513  018C70  D7EE               	goto	u930_28
 31514  018C72                     l10234:
 31515                           
 31516                           ;dio.c: 92:    sw_value = 1;
 31517                           ;stkvar	_sw_value @ sp[(-2)+1]
 31518  018C72  0EFF               	movlw	-1
 31519  018C74  6AE3               	clrf	plusw1,c
 31520  018C76  2AE3               	incf	plusw1,f,c
 31521                           
 31522                           ;dio.c: 93:    break;
 31523  018C78  D016               	goto	l10240
 31524  018C7A                     l10238:
 31525                           
 31526                           ;stkvar	_i @ sp[(-2)+0]
 31527  018C7A  0EFE               	movlw	-2
 31528  018C7C  50E3               	movf	plusw1,w,c
 31529  018C7E  6E32               	movwf	(btemp+10)^0,c
 31530  018C80  6A33               	clrf	(btemp+11)^0,c
 31531                           
 31532                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31533                           ; Switch size 1, requested type "simple"
 31534                           ; Number of cases is 1, Range of values is 0 to 0
 31535                           ; switch strategies available:
 31536                           ; Name         Instructions Cycles
 31537                           ; simple_byte            4     3 (average)
 31538                           ;	Chosen strategy is simple_byte
 31539  018C82  5033               	movf	(btemp+11)^0,w,c
 31540  018C84  0A00               	xorlw	0	; case 0
 31541  018C86  A4D8               	btfss	status,2,c
 31542  018C88  D7F4               	goto	l10234
 31543                           
 31544                           ; Switch size 1, requested type "simple"
 31545                           ; Number of cases is 4, Range of values is 0 to 3
 31546                           ; switch strategies available:
 31547                           ; Name         Instructions Cycles
 31548                           ; simple_byte           13     7 (average)
 31549                           ;	Chosen strategy is simple_byte
 31550  018C8A  5032               	movf	(btemp+10)^0,w,c
 31551  018C8C  0A00               	xorlw	0	; case 0
 31552  018C8E  B4D8               	btfsc	status,2,c
 31553  018C90  D7E9               	goto	l10232
 31554  018C92  0A01               	xorlw	1	; case 1
 31555  018C94  B4D8               	btfsc	status,2,c
 31556  018C96  D7E3               	goto	l10230
 31557  018C98  0A03               	xorlw	3	; case 2
 31558  018C9A  B4D8               	btfsc	status,2,c
 31559  018C9C  D7DD               	goto	l10228
 31560  018C9E  0A01               	xorlw	1	; case 3
 31561  018CA0  B4D8               	btfsc	status,2,c
 31562  018CA2  D7D2               	goto	l10226
 31563  018CA4  D7E6               	goto	l10234
 31564  018CA6                     l10240:
 31565                           
 31566                           ;dio.c: 97:   if (sw_value) {
 31567                           ;stkvar	_sw_value @ sp[(-2)+1]
 31568  018CA6  0EFF               	movlw	-1
 31569  018CA8  50E3               	movf	plusw1,w,c
 31570  018CAA  B4D8               	btfsc	status,2,c
 31571  018CAC  D018               	goto	l10246
 31572                           
 31573                           ;dio.c: 98:    if (S.button[i].sw == SW_ON) {
 31574                           ;stkvar	_i @ sp[(-2)+0]
 31575  018CAE  0EFE               	movlw	-2
 31576  018CB0  50E3               	movf	plusw1,w,c
 31577  018CB2  0D05               	mullw	5
 31578  018CB4  0EBE               	movlw	low _S
 31579  018CB6  24F3               	addwf	243,w,c
 31580  018CB8  6ED9               	movwf	fsr2l,c
 31581  018CBA  0E02               	movlw	high _S
 31582  018CBC  20F4               	addwfc	prodh,w,c
 31583  018CBE  6EDA               	movwf	fsr2h,c
 31584  018CC0  04DE               	decf	postinc2,w,c
 31585  018CC2  A4D8               	btfss	status,2,c
 31586  018CC4  D049               	goto	l10254
 31587                           
 31588                           ;dio.c: 99:     S.button[i].sw = SW_OFF;
 31589                           ;stkvar	_i @ sp[(-2)+0]
 31590  018CC6  0EFE               	movlw	-2
 31591  018CC8  50E3               	movf	plusw1,w,c
 31592  018CCA  0D05               	mullw	5
 31593  018CCC  0EBE               	movlw	low _S
 31594  018CCE  24F3               	addwf	243,w,c
 31595  018CD0  6ED9               	movwf	fsr2l,c
 31596  018CD2  0E02               	movlw	high _S
 31597  018CD4  20F4               	addwfc	prodh,w,c
 31598  018CD6  6EDA               	movwf	fsr2h,c
 31599  018CD8  0E00               	movlw	0
 31600  018CDA  6EDF               	movwf	indf2,c
 31601  018CDC  D03D               	goto	l10254
 31602  018CDE                     l10246:
 31603                           
 31604                           ;dio.c: 102:    if (S.button[i].sw == SW_OFF) {
 31605                           ;stkvar	_i @ sp[(-2)+0]
 31606  018CDE  0EFE               	movlw	-2
 31607  018CE0  50E3               	movf	plusw1,w,c
 31608  018CE2  0D05               	mullw	5
 31609  018CE4  0EBE               	movlw	low _S
 31610  018CE6  24F3               	addwf	243,w,c
 31611  018CE8  6ED9               	movwf	fsr2l,c
 31612  018CEA  0E02               	movlw	high _S
 31613  018CEC  20F4               	addwfc	prodh,w,c
 31614  018CEE  6EDA               	movwf	fsr2h,c
 31615  018CF0  50DF               	movf	indf2,w,c
 31616  018CF2  A4D8               	btfss	status,2,c
 31617  018CF4  D031               	goto	l10254
 31618                           
 31619                           ;dio.c: 103:     S.button[i].sw = SW_ON;
 31620                           ;stkvar	_i @ sp[(-2)+0]
 31621  018CF6  0EFE               	movlw	-2
 31622  018CF8  50E3               	movf	plusw1,w,c
 31623  018CFA  0D05               	mullw	5
 31624  018CFC  0EBE               	movlw	low _S
 31625  018CFE  24F3               	addwf	243,w,c
 31626  018D00  6ED9               	movwf	fsr2l,c
 31627  018D02  0E02               	movlw	high _S
 31628  018D04  20F4               	addwfc	prodh,w,c
 31629  018D06  6EDA               	movwf	fsr2h,c
 31630  018D08  0E01               	movlw	1
 31631  018D0A  6EDF               	movwf	indf2,c
 31632                           
 31633                           ;dio.c: 104:     S.button[i].count = V.timerint_count;
 31634  018D0C  EE20  F2BA         	lfsr	2,_V+186	;volatile
 31635                           
 31636                           ;stkvar	_i @ sp[(-2)+0]
 31637  018D10  0EFE               	movlw	-2
 31638  018D12  50E3               	movf	plusw1,w,c
 31639  018D14  0D05               	mullw	5
 31640  018D16  0EBF               	movlw	low (_S+1)
 31641  018D18  24F3               	addwf	243,w,c
 31642  018D1A  6EE9               	movwf	fsr0l,c
 31643  018D1C  0E02               	movlw	high (_S+1)
 31644  018D1E  20F4               	addwfc	prodh,w,c
 31645  018D20  6EEA               	movwf	fsr0h,c
 31646  018D22  006F FF7B FFEE     	movff	postinc2,postinc0
 31647  018D28  006F FF7B FFEE     	movff	postinc2,postinc0
 31648  018D2E  006F FF7B FFEE     	movff	postinc2,postinc0
 31649  018D34  006F FF7B FFEE     	movff	postinc2,postinc0
 31650                           
 31651                           ;dio.c: 105:     S.sw_bitmap |= 1 << i;
 31652                           ;stkvar	_i @ sp[(-2)+0]
 31653  018D3A  0EFE               	movlw	-2
 31654  018D3C  006F FF8C  F033    	movff	plusw1,btemp+11
 31655  018D42  0E01               	movlw	1
 31656  018D44  6E32               	movwf	(btemp+10)^0,c
 31657  018D46  2A33               	incf	(btemp+11)^0,f,c
 31658  018D48  D002               	goto	u937_24
 31659  018D4A                     u937_25:
 31660  018D4A  90D8               	bcf	status,0,c
 31661  018D4C  3632               	rlcf	(btemp+10)^0,f,c
 31662  018D4E                     u937_24:
 31663  018D4E  2E33               	decfsz	(btemp+11)^0,f,c
 31664  018D50  D7FC               	goto	u937_25
 31665  018D52  5032               	movf	(btemp+10)^0,w,c
 31666  018D54  0102               	movlb	2	; () banked
 31667  018D56  13E6               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31668  018D58                     l10254:
 31669                           
 31670                           ;dio.c: 108:  } while (++i < 4);
 31671                           ;stkvar	_i @ sp[(-2)+0]
 31672  018D58  0EFE               	movlw	-2
 31673  018D5A  2AE3               	incf	plusw1,f,c
 31674  018D5C  0EFE               	movlw	-2
 31675  018D5E  006F FF8C  F028    	movff	plusw1,btemp
 31676  018D64  0E03               	movlw	3
 31677  018D66  6428               	cpfsgt	btemp^0,c
 31678  018D68  D788               	goto	l10238
 31679                           
 31680                           ;dio.c: 117:  do { LATDbits.LATD7 = 1; } while(0);
 31681  018D6A  8EBD               	bsf	189,7,c	;volatile
 31682                           
 31683                           ;dio.c: 118:  do { LATFbits.LATF5 = 1; } while(0);
 31684  018D6C  8ABF               	bsf	191,5,c	;volatile
 31685                           
 31686                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31687  018D6E  52E5               	movf	postdec1,f,c
 31688  018D70  52E5               	movf	postdec1,f,c
 31689  018D72  0012               	return		;funcret
 31690  018D74                     __end_of_switch_handler:
 31691                           	opt callstack 0
 31692                           
 31693 ;; *************** function _TMR5_ISR *****************
 31694 ;; Defined at:
 31695 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31696 ;; Parameters:    Size  Location     Type
 31697 ;;		None
 31698 ;; Auto vars:     Size  Location     Type
 31699 ;;		None
 31700 ;; Return value:  Size  Location     Type
 31701 ;;                  1    wreg      void 
 31702 ;; Registers used:
 31703 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 31704 ;; Tracked objects:
 31705 ;;		On entry : 0/0
 31706 ;;		On exit  : 0/0
 31707 ;;		Unchanged: 0/0
 31708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31711 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31712 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31713 ;;Total ram usage:        4 bytes
 31714 ;; Hardware stack levels used:    1
 31715 ;; Hardware stack levels required when called:    5
 31716 ;; This function calls:
 31717 ;;		_TMR5_CallBack
 31718 ;;		_TMR5_WriteTimer
 31719 ;; This function is called by:
 31720 ;;		Interrupt level 1
 31721 ;; This function uses a non-reentrant model
 31722 ;;
 31723                           
 31724                           	psect	text140
 31725  01A80C                     __ptext140:
 31726                           	opt callstack 0
 31727  01A80C                     _TMR5_ISR:
 31728                           	opt callstack 12
 31729                           
 31730                           ;incstack = 0
 31731  01A80C  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 31732  01A812  0060  F0CC  F00E   	movff	btemp+11,??_TMR5_ISR+3
 31733  01A818  EE16  F0A1         	lfsr	1,___intlo_sp
 31734                           
 31735                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 31736  01A81C  0139               	movlb	57	; () banked
 31737  01A81E  9DA8               	bcf	168,6,b	;volatile
 31738                           
 31739                           ; BSR set to: 57
 31740                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 31741  01A820  0060  F14B  FFE6   	movff	_timer5ReloadVal,postinc1
 31742  01A826  0060  F14F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31743  01A82C  EC50  F0D6         	call	_TMR5_WriteTimer	;wreg free
 31744                           
 31745                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 31746  01A830  0102               	movlb	2	; () banked
 31747  01A832  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 31748  01A834  6E0B               	movwf	??_TMR5_ISR^0,c
 31749  01A836  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 31750  01A838  0E05               	movlw	5
 31751  01A83A  260B               	addwf	??_TMR5_ISR^0,f,c
 31752  01A83C  0E00               	movlw	0
 31753  01A83E  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31754  01A840  4A50               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31755  01A842  2A51               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31756  01A844  500B               	movf	??_TMR5_ISR^0,w,c
 31757  01A846  5C50               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31758  01A848  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 31759  01A84A  5851               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31760  01A84C  A0D8               	btfss	status,0,c
 31761  01A84E  D004               	goto	i1l1017
 31762                           
 31763                           ; BSR set to: 2
 31764                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 31765  01A850  ECE0  F0D9         	call	_TMR5_CallBack	;wreg free
 31766                           
 31767                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 31768  01A854  6A50               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31769  01A856  6A51               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31770  01A858                     i1l1017:
 31771  01A858  0060  F038  F033   	movff	??_TMR5_ISR+3,btemp+11
 31772  01A85E  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 31773  01A864  0011               	retfie		f
 31774  01A866                     __end_of_TMR5_ISR:
 31775                           	opt callstack 0
 31776                           
 31777 ;; *************** function _TMR5_WriteTimer *****************
 31778 ;; Defined at:
 31779 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 31780 ;; Parameters:    Size  Location     Type
 31781 ;;  timerVal        2  [STACK] unsigned short 
 31782 ;; Auto vars:     Size  Location     Type
 31783 ;;		None
 31784 ;; Return value:  Size  Location     Type
 31785 ;;                  1  [STACK] void 
 31786 ;; Registers used:
 31787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31788 ;; Tracked objects:
 31789 ;;		On entry : 3F/39
 31790 ;;		On exit  : 0/0
 31791 ;;		Unchanged: 0/0
 31792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31797 ;;Total ram usage:        0 bytes
 31798 ;; Hardware stack levels used:    1
 31799 ;; Hardware stack levels required when called:    3
 31800 ;; This function calls:
 31801 ;;		Nothing
 31802 ;; This function is called by:
 31803 ;;		_TMR5_ISR
 31804 ;; This function uses a reentrant model
 31805 ;;
 31806                           
 31807                           	psect	text141
 31808  01ACA0                     __ptext141:
 31809                           	opt callstack 0
 31810  01ACA0                     _TMR5_WriteTimer:
 31811                           	opt callstack 13
 31812                           
 31813                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31814                           
 31815                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31816                           ;incstack = 0
 31817  01ACA0  A49A               	btfss	154,2,c	;volatile
 31818  01ACA2  D00F               	goto	l10438
 31819                           
 31820                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31821  01ACA4  909A               	bcf	154,0,c	;volatile
 31822                           
 31823                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31824                           ;stkvar	_timerVal @ sp[(0)+-2]
 31825  01ACA6  0EFF               	movlw	255
 31826  01ACA8  24E1               	addwf	fsr1l,w,c
 31827  01ACAA  6ED9               	movwf	fsr2l,c
 31828  01ACAC  0EFF               	movlw	255
 31829  01ACAE  20E2               	addwfc	fsr1h,w,c
 31830  01ACB0  6EDA               	movwf	fsr2h,c
 31831  01ACB2  50DF               	movf	indf2,w,c
 31832  01ACB4  6E99               	movwf	153,c	;volatile
 31833                           
 31834                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31835                           ;stkvar	_timerVal @ sp[(0)+-2]
 31836  01ACB6  0EFE               	movlw	-2
 31837  01ACB8  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31838                           
 31839                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31840  01ACBE  809A               	bsf	154,0,c	;volatile
 31841                           
 31842                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31843  01ACC0  D00C               	goto	l1000
 31844  01ACC2                     l10438:
 31845                           
 31846                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31847                           ;stkvar	_timerVal @ sp[(0)+-2]
 31848  01ACC2  0EFF               	movlw	255
 31849  01ACC4  24E1               	addwf	fsr1l,w,c
 31850  01ACC6  6ED9               	movwf	fsr2l,c
 31851  01ACC8  0EFF               	movlw	255
 31852  01ACCA  20E2               	addwfc	fsr1h,w,c
 31853  01ACCC  6EDA               	movwf	fsr2h,c
 31854  01ACCE  50DF               	movf	indf2,w,c
 31855  01ACD0  6E99               	movwf	153,c	;volatile
 31856                           
 31857                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31858                           ;stkvar	_timerVal @ sp[(0)+-2]
 31859  01ACD2  0EFE               	movlw	-2
 31860  01ACD4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31861  01ACDA                     l1000:
 31862                           
 31863                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31864  01ACDA  52E5               	movf	postdec1,f,c
 31865  01ACDC  52E5               	movf	postdec1,f,c
 31866  01ACDE  0012               	return		;funcret
 31867  01ACE0                     __end_of_TMR5_WriteTimer:
 31868                           	opt callstack 0
 31869                           
 31870 ;; *************** function _TMR5_CallBack *****************
 31871 ;; Defined at:
 31872 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31873 ;; Parameters:    Size  Location     Type
 31874 ;;		None
 31875 ;; Auto vars:     Size  Location     Type
 31876 ;;		None
 31877 ;; Return value:  Size  Location     Type
 31878 ;;                  1  [STACK] void 
 31879 ;; Registers used:
 31880 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31881 ;; Tracked objects:
 31882 ;;		On entry : 3F/2
 31883 ;;		On exit  : 0/0
 31884 ;;		Unchanged: 0/0
 31885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31887 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31889 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31890 ;;Total ram usage:        0 bytes
 31891 ;; Hardware stack levels used:    1
 31892 ;; Hardware stack levels required when called:    4
 31893 ;; This function calls:
 31894 ;;		Absolute function
 31895 ;;		_TMR5_DefaultInterruptHandler
 31896 ;; This function is called by:
 31897 ;;		_TMR5_ISR
 31898 ;; This function uses a reentrant model
 31899 ;;
 31900                           
 31901                           	psect	text142
 31902  01B3C0                     __ptext142:
 31903                           	opt callstack 0
 31904  01B3C0                     _TMR5_CallBack:
 31905                           	opt callstack 12
 31906                           
 31907                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31908                           
 31909                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31910                           ;incstack = 0
 31911  01B3C0  0100               	movlb	0	; () banked
 31912  01B3C2  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31913  01B3C4  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31914  01B3C6  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31915  01B3C8  B4D8               	btfsc	status,2,c
 31916  01B3CA  0012               	return	
 31917                           
 31918                           ; BSR set to: 0
 31919                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31920  01B3CC  D801               	call	u966_28
 31921  01B3CE  0012               	return	
 31922  01B3D0                     u966_28:
 31923  01B3D0  0005               	push	
 31924  01B3D2  6EFA               	movwf	pclath,c
 31925  01B3D4  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31926  01B3D6  6EFD               	movwf	tosl,c
 31927  01B3D8  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31928  01B3DA  6EFE               	movwf	tosh,c
 31929  01B3DC  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31930  01B3DE  6EFF               	movwf	tosu,c
 31931  01B3E0  50FA               	movf	pclath,w,c
 31932  01B3E2  0012               	return		;indir
 31933  01B3E4                     __end_of_TMR5_CallBack:
 31934                           	opt callstack 0
 31935                           
 31936 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31937 ;; Defined at:
 31938 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31939 ;; Parameters:    Size  Location     Type
 31940 ;;		None
 31941 ;; Auto vars:     Size  Location     Type
 31942 ;;		None
 31943 ;; Return value:  Size  Location     Type
 31944 ;;                  1  [STACK] void 
 31945 ;; Registers used:
 31946 ;;		wreg, status,2, status,0, btemp+11
 31947 ;; Tracked objects:
 31948 ;;		On entry : 3F/0
 31949 ;;		On exit  : 3F/2
 31950 ;;		Unchanged: 0/0
 31951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31956 ;;Total ram usage:        0 bytes
 31957 ;; Hardware stack levels used:    1
 31958 ;; Hardware stack levels required when called:    3
 31959 ;; This function calls:
 31960 ;;		Nothing
 31961 ;; This function is called by:
 31962 ;;		_TMR5_Initialize
 31963 ;;		_TMR5_CallBack
 31964 ;; This function uses a reentrant model
 31965 ;;
 31966                           
 31967                           	psect	text143
 31968  01AEDA                     __ptext143:
 31969                           	opt callstack 0
 31970  01AEDA                     _TMR5_DefaultInterruptHandler:
 31971                           	opt callstack 12
 31972                           
 31973                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31974                           
 31975                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31976                           ;incstack = 0
 31977  01AEDA  A0BE               	btfss	190,0,c	;volatile
 31978  01AEDC  D002               	goto	u902_20
 31979  01AEDE  0E01               	movlw	1
 31980  01AEE0  D001               	goto	u902_26
 31981  01AEE2                     u902_20:
 31982  01AEE2  0E00               	movlw	0
 31983  01AEE4                     u902_26:
 31984  01AEE4  0AFF               	xorlw	255
 31985  01AEE6  6E33               	movwf	(btemp+11)^0,c
 31986  01AEE8  50BE               	movf	190,w,c	;volatile
 31987  01AEEA  1833               	xorwf	(btemp+11)^0,w,c
 31988  01AEEC  0BFE               	andlw	-2
 31989  01AEEE  1833               	xorwf	(btemp+11)^0,w,c
 31990  01AEF0  6EBE               	movwf	190,c	;volatile
 31991                           
 31992                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31993  01AEF2  0E01               	movlw	1
 31994  01AEF4  0102               	movlb	2	; () banked
 31995  01AEF6  27BA               	addwf	(_V+186)& (0+255),f,b	;volatile
 31996  01AEF8  0E00               	movlw	0
 31997  01AEFA  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 31998  01AEFC  23BC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 31999  01AEFE  23BD               	addwfc	(_V+189)& (0+255),f,b	;volatile
 32000                           
 32001                           ; BSR set to: 2
 32002                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 32003  01AF00  0E01               	movlw	1
 32004  01AF02  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 32005  01AF04  0E00               	movlw	0
 32006  01AF06  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 32007  01AF08  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 32008  01AF0A  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 32009                           
 32010                           ; BSR set to: 2
 32011                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32012  01AF0C  0012               	return		;funcret
 32013  01AF0E                     __end_of_TMR5_DefaultInterruptHandler:
 32014                           	opt callstack 0
 32015                           
 32016 ;; *************** function _TMR3_ISR *****************
 32017 ;; Defined at:
 32018 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 32019 ;; Parameters:    Size  Location     Type
 32020 ;;		None
 32021 ;; Auto vars:     Size  Location     Type
 32022 ;;		None
 32023 ;; Return value:  Size  Location     Type
 32024 ;;                  1    wreg      void 
 32025 ;; Registers used:
 32026 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32027 ;; Tracked objects:
 32028 ;;		On entry : 0/0
 32029 ;;		On exit  : 3F/0
 32030 ;;		Unchanged: 0/0
 32031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32034 ;;      Temps:         25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32035 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32036 ;;Total ram usage:       25 bytes
 32037 ;; Hardware stack levels used:    1
 32038 ;; Hardware stack levels required when called:   14
 32039 ;; This function calls:
 32040 ;;		_TMR3_CallBack
 32041 ;;		_TMR3_WriteTimer
 32042 ;; This function is called by:
 32043 ;;		Interrupt level 1
 32044 ;; This function uses a non-reentrant model
 32045 ;;
 32046                           
 32047                           	psect	text144
 32048  018844                     __ptext144:
 32049                           	opt callstack 0
 32050  018844                     _TMR3_ISR:
 32051                           	opt callstack 3
 32052                           
 32053                           ; BSR set to: 2
 32054                           ;incstack = 0
 32055  018844  006F FF60  F00F    	movff	status,??_TMR3_ISR
 32056  01884A  006F FFD8  F010    	movff	tblptrl,??_TMR3_ISR+1
 32057  018850  006F FFDC  F011    	movff	tblptrh,??_TMR3_ISR+2
 32058  018856  006F FFE0  F012    	movff	tblptru,??_TMR3_ISR+3
 32059  01885C  006F FFD4  F013    	movff	tablat,??_TMR3_ISR+4
 32060  018862  0060  F0A0  F014   	movff	btemp,??_TMR3_ISR+5
 32061  018868  0060  F0A4  F015   	movff	btemp+1,??_TMR3_ISR+6
 32062  01886E  0060  F0A8  F016   	movff	btemp+2,??_TMR3_ISR+7
 32063  018874  0060  F0AC  F017   	movff	btemp+3,??_TMR3_ISR+8
 32064  01887A  0060  F0B0  F018   	movff	btemp+4,??_TMR3_ISR+9
 32065  018880  0060  F0B4  F019   	movff	btemp+5,??_TMR3_ISR+10
 32066  018886  0060  F0B8  F01A   	movff	btemp+6,??_TMR3_ISR+11
 32067  01888C  0060  F0BC  F01B   	movff	btemp+7,??_TMR3_ISR+12
 32068  018892  0060  F0C0  F01C   	movff	btemp+8,??_TMR3_ISR+13
 32069  018898  0060  F0C4  F01D   	movff	btemp+9,??_TMR3_ISR+14
 32070  01889E  0060  F0C8  F01E   	movff	btemp+10,??_TMR3_ISR+15
 32071  0188A4  0060  F0CC  F01F   	movff	btemp+11,??_TMR3_ISR+16
 32072  0188AA  0060  F0E0  F020   	movff	btemp+16,??_TMR3_ISR+17
 32073  0188B0  0060  F0E4  F021   	movff	btemp+17,??_TMR3_ISR+18
 32074  0188B6  0060  F0E8  F022   	movff	btemp+18,??_TMR3_ISR+19
 32075  0188BC  0060  F0EC  F023   	movff	btemp+19,??_TMR3_ISR+20
 32076  0188C2  0060  F0F0  F024   	movff	btemp+20,??_TMR3_ISR+21
 32077  0188C8  0060  F0F4  F025   	movff	btemp+21,??_TMR3_ISR+22
 32078  0188CE  0060  F0F8  F026   	movff	btemp+22,??_TMR3_ISR+23
 32079  0188D4  0060  F0FC  F027   	movff	btemp+23,??_TMR3_ISR+24
 32080  0188DA  EE16  F0A1         	lfsr	1,___intlo_sp
 32081                           
 32082                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32083  0188DE  0139               	movlb	57	; () banked
 32084  0188E0  9DA6               	bcf	166,6,b	;volatile
 32085                           
 32086                           ; BSR set to: 57
 32087                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32088  0188E2  0060  F13B  FFE6   	movff	_timer3ReloadVal,postinc1
 32089  0188E8  0060  F13F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32090  0188EE  EC70  F0D6         	call	_TMR3_WriteTimer	;wreg free
 32091                           
 32092                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32093  0188F2  0100               	movlb	0	; () banked
 32094  0188F4  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32095  0188F6  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32096  0188F8  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32097  0188FA  E104               	bnz	i1u1205_20
 32098  0188FC  0E28               	movlw	40
 32099  0188FE  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32100  018900  A0D8               	btfss	status,0,c
 32101  018902  D005               	goto	i1l1205
 32102  018904                     i1u1205_20:
 32103                           
 32104                           ; BSR set to: 0
 32105                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32106  018904  ECF2  F0D9         	call	_TMR3_CallBack	;wreg free
 32107                           
 32108                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32109  018908  0100               	movlb	0	; () banked
 32110  01890A  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32111  01890C  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32112  01890E                     i1l1205:
 32113                           
 32114                           ; BSR set to: 0
 32115  01890E  0060  F09C  F03F   	movff	??_TMR3_ISR+24,btemp+23
 32116  018914  0060  F098  F03E   	movff	??_TMR3_ISR+23,btemp+22
 32117  01891A  0060  F094  F03D   	movff	??_TMR3_ISR+22,btemp+21
 32118  018920  0060  F090  F03C   	movff	??_TMR3_ISR+21,btemp+20
 32119  018926  0060  F08C  F03B   	movff	??_TMR3_ISR+20,btemp+19
 32120  01892C  0060  F088  F03A   	movff	??_TMR3_ISR+19,btemp+18
 32121  018932  0060  F084  F039   	movff	??_TMR3_ISR+18,btemp+17
 32122  018938  0060  F080  F038   	movff	??_TMR3_ISR+17,btemp+16
 32123  01893E  0060  F07C  F033   	movff	??_TMR3_ISR+16,btemp+11
 32124  018944  0060  F078  F032   	movff	??_TMR3_ISR+15,btemp+10
 32125  01894A  0060  F074  F031   	movff	??_TMR3_ISR+14,btemp+9
 32126  018950  0060  F070  F030   	movff	??_TMR3_ISR+13,btemp+8
 32127  018956  0060  F06C  F02F   	movff	??_TMR3_ISR+12,btemp+7
 32128  01895C  0060  F068  F02E   	movff	??_TMR3_ISR+11,btemp+6
 32129  018962  0060  F064  F02D   	movff	??_TMR3_ISR+10,btemp+5
 32130  018968  0060  F060  F02C   	movff	??_TMR3_ISR+9,btemp+4
 32131  01896E  0060  F05C  F02B   	movff	??_TMR3_ISR+8,btemp+3
 32132  018974  0060  F058  F02A   	movff	??_TMR3_ISR+7,btemp+2
 32133  01897A  0060  F054  F029   	movff	??_TMR3_ISR+6,btemp+1
 32134  018980  0060  F050  F028   	movff	??_TMR3_ISR+5,btemp
 32135  018986  0060  F04F  FFF5   	movff	??_TMR3_ISR+4,tablat
 32136  01898C  0060  F04B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32137  018992  0060  F047  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32138  018998  0060  F043  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32139  01899E  0060  F03F  FFD8   	movff	??_TMR3_ISR,status
 32140  0189A4  0011               	retfie		f
 32141  0189A6                     __end_of_TMR3_ISR:
 32142                           	opt callstack 0
 32143                           
 32144 ;; *************** function _TMR3_WriteTimer *****************
 32145 ;; Defined at:
 32146 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32147 ;; Parameters:    Size  Location     Type
 32148 ;;  timerVal        2  [STACK] unsigned short 
 32149 ;; Auto vars:     Size  Location     Type
 32150 ;;		None
 32151 ;; Return value:  Size  Location     Type
 32152 ;;                  1  [STACK] void 
 32153 ;; Registers used:
 32154 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32155 ;; Tracked objects:
 32156 ;;		On entry : 3F/39
 32157 ;;		On exit  : 0/0
 32158 ;;		Unchanged: 0/0
 32159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32164 ;;Total ram usage:        0 bytes
 32165 ;; Hardware stack levels used:    1
 32166 ;; Hardware stack levels required when called:    3
 32167 ;; This function calls:
 32168 ;;		Nothing
 32169 ;; This function is called by:
 32170 ;;		_TMR3_ISR
 32171 ;; This function uses a reentrant model
 32172 ;;
 32173                           
 32174                           	psect	text145
 32175  01ACE0                     __ptext145:
 32176                           	opt callstack 0
 32177  01ACE0                     _TMR3_WriteTimer:
 32178                           	opt callstack 13
 32179                           
 32180                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32181                           
 32182                           ; BSR set to: 0
 32183                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32184                           ;incstack = 0
 32185  01ACE0  A4A6               	btfss	166,2,c	;volatile
 32186  01ACE2  D00F               	goto	l10456
 32187                           
 32188                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32189  01ACE4  90A6               	bcf	166,0,c	;volatile
 32190                           
 32191                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32192                           ;stkvar	_timerVal @ sp[(0)+-2]
 32193  01ACE6  0EFF               	movlw	255
 32194  01ACE8  24E1               	addwf	fsr1l,w,c
 32195  01ACEA  6ED9               	movwf	fsr2l,c
 32196  01ACEC  0EFF               	movlw	255
 32197  01ACEE  20E2               	addwfc	fsr1h,w,c
 32198  01ACF0  6EDA               	movwf	fsr2h,c
 32199  01ACF2  50DF               	movf	indf2,w,c
 32200  01ACF4  6EA5               	movwf	165,c	;volatile
 32201                           
 32202                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32203                           ;stkvar	_timerVal @ sp[(0)+-2]
 32204  01ACF6  0EFE               	movlw	-2
 32205  01ACF8  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32206                           
 32207                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32208  01ACFE  80A6               	bsf	166,0,c	;volatile
 32209                           
 32210                           ;mcc_generated_files/tmr3.c: 141:     }
 32211  01AD00  D00C               	goto	l1188
 32212  01AD02                     l10456:
 32213                           
 32214                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32215                           ;stkvar	_timerVal @ sp[(0)+-2]
 32216  01AD02  0EFF               	movlw	255
 32217  01AD04  24E1               	addwf	fsr1l,w,c
 32218  01AD06  6ED9               	movwf	fsr2l,c
 32219  01AD08  0EFF               	movlw	255
 32220  01AD0A  20E2               	addwfc	fsr1h,w,c
 32221  01AD0C  6EDA               	movwf	fsr2h,c
 32222  01AD0E  50DF               	movf	indf2,w,c
 32223  01AD10  6EA5               	movwf	165,c	;volatile
 32224                           
 32225                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32226                           ;stkvar	_timerVal @ sp[(0)+-2]
 32227  01AD12  0EFE               	movlw	-2
 32228  01AD14  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32229  01AD1A                     l1188:
 32230                           
 32231                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32232  01AD1A  52E5               	movf	postdec1,f,c
 32233  01AD1C  52E5               	movf	postdec1,f,c
 32234  01AD1E  0012               	return		;funcret
 32235  01AD20                     __end_of_TMR3_WriteTimer:
 32236                           	opt callstack 0
 32237                           
 32238 ;; *************** function _TMR3_CallBack *****************
 32239 ;; Defined at:
 32240 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32241 ;; Parameters:    Size  Location     Type
 32242 ;;		None
 32243 ;; Auto vars:     Size  Location     Type
 32244 ;;		None
 32245 ;; Return value:  Size  Location     Type
 32246 ;;                  1  [STACK] void 
 32247 ;; Registers used:
 32248 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32249 ;; Tracked objects:
 32250 ;;		On entry : 3F/0
 32251 ;;		On exit  : 0/0
 32252 ;;		Unchanged: 0/0
 32253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32258 ;;Total ram usage:        0 bytes
 32259 ;; Hardware stack levels used:    1
 32260 ;; Hardware stack levels required when called:   13
 32261 ;; This function calls:
 32262 ;;		Absolute function
 32263 ;;		_TMR3_DefaultInterruptHandler
 32264 ;;		_calc_bsoc
 32265 ;; This function is called by:
 32266 ;;		_TMR3_ISR
 32267 ;; This function uses a reentrant model
 32268 ;;
 32269                           
 32270                           	psect	text146
 32271  01B3E4                     __ptext146:
 32272                           	opt callstack 0
 32273  01B3E4                     _TMR3_CallBack:
 32274                           	opt callstack 3
 32275                           
 32276                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32277                           
 32278                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32279                           ;incstack = 0
 32280  01B3E4  0100               	movlb	0	; () banked
 32281  01B3E6  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32282  01B3E8  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32283  01B3EA  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32284  01B3EC  B4D8               	btfsc	status,2,c
 32285  01B3EE  0012               	return	
 32286                           
 32287                           ; BSR set to: 0
 32288                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32289  01B3F0  D801               	call	u1196_28
 32290  01B3F2  0012               	return	
 32291  01B3F4                     u1196_28:
 32292  01B3F4  0005               	push	
 32293  01B3F6  6EFA               	movwf	pclath,c
 32294  01B3F8  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32295  01B3FA  6EFD               	movwf	tosl,c
 32296  01B3FC  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32297  01B3FE  6EFE               	movwf	tosh,c
 32298  01B400  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32299  01B402  6EFF               	movwf	tosu,c
 32300  01B404  50FA               	movf	pclath,w,c
 32301  01B406  0012               	return		;indir
 32302  01B408                     __end_of_TMR3_CallBack:
 32303                           	opt callstack 0
 32304                           
 32305 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32306 ;; Defined at:
 32307 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32308 ;; Parameters:    Size  Location     Type
 32309 ;;		None
 32310 ;; Auto vars:     Size  Location     Type
 32311 ;;		None
 32312 ;; Return value:  Size  Location     Type
 32313 ;;                  1  [STACK] void 
 32314 ;; Registers used:
 32315 ;;		None
 32316 ;; Tracked objects:
 32317 ;;		On entry : 3F/0
 32318 ;;		On exit  : 0/0
 32319 ;;		Unchanged: 0/0
 32320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32325 ;;Total ram usage:        0 bytes
 32326 ;; Hardware stack levels used:    1
 32327 ;; Hardware stack levels required when called:    3
 32328 ;; This function calls:
 32329 ;;		Nothing
 32330 ;; This function is called by:
 32331 ;;		_TMR3_Initialize
 32332 ;;		_TMR3_CallBack
 32333 ;; This function uses a reentrant model
 32334 ;;
 32335                           
 32336                           	psect	text147
 32337  01B71C                     __ptext147:
 32338                           	opt callstack 0
 32339  01B71C                     _TMR3_DefaultInterruptHandler:
 32340                           	opt callstack 12
 32341                           
 32342                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32343                           
 32344                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32345                           ;incstack = 0
 32346  01B71C  0012               	return		;funcret
 32347  01B71E                     __end_of_TMR3_DefaultInterruptHandler:
 32348                           	opt callstack 0
 32349                           
 32350 ;; *************** function _calc_bsoc *****************
 32351 ;; Defined at:
 32352 ;;		line 39 in file "bsoc.c"
 32353 ;; Parameters:    Size  Location     Type
 32354 ;;		None
 32355 ;; Auto vars:     Size  Location     Type
 32356 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32357 ;;		 -> port_data(512), 
 32358 ;; Return value:  Size  Location     Type
 32359 ;;                  1  [STACK] void 
 32360 ;; Registers used:
 32361 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32362 ;; Tracked objects:
 32363 ;;		On entry : 3F/0
 32364 ;;		On exit  : 3F/1
 32365 ;;		Unchanged: 0/0
 32366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32367 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32368 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32369 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32370 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32371 ;;Total ram usage:        0 bytes
 32372 ;; Hardware stack levels used:    1
 32373 ;; Hardware stack levels required when called:   12
 32374 ;; This function calls:
 32375 ;;		_StartTimer
 32376 ;;		___fladd
 32377 ;;		___fldiv
 32378 ;;		___flge
 32379 ;;		___flmul
 32380 ;;		___flneg
 32381 ;;		___fltol
 32382 ;;		_fabsf
 32383 ;;		_port_data_dma_ptr
 32384 ;;		_send_port_data_dma
 32385 ;;		_sprintf
 32386 ;;		_strlen
 32387 ;; This function is called by:
 32388 ;;		_init_bsoc
 32389 ;;		_TMR3_CallBack
 32390 ;; This function uses a reentrant model
 32391 ;;
 32392                           
 32393                           	psect	text148
 32394  014204                     __ptext148:
 32395                           	opt callstack 0
 32396  014204                     _calc_bsoc:
 32397                           	opt callstack 0
 32398                           
 32399                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32400  014204  52E6               	movf	postinc1,f,c
 32401  014206  52E6               	movf	postinc1,f,c
 32402                           
 32403                           ;incstack = 0
 32404                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 32405  014208  82BE               	bsf	190,1,c	;volatile
 32406                           
 32407                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 32408  01420A  0E00               	movlw	0
 32409  01420C  6EE6               	movwf	postinc1,c
 32410  01420E  0E00               	movlw	0
 32411  014210  6EE6               	movwf	postinc1,c
 32412  014212  0E61               	movlw	97
 32413  014214  6EE6               	movwf	postinc1,c
 32414  014216  0E45               	movlw	69
 32415  014218  6EE6               	movwf	postinc1,c
 32416  01421A  0060  F513  FFE6   	movff	_C+68,postinc1
 32417  014220  0060  F517  FFE6   	movff	_C+69,postinc1
 32418  014226  0060  F51B  FFE6   	movff	_C+70,postinc1
 32419  01422C  0060  F51F  FFE6   	movff	_C+71,postinc1
 32420  014232  EC9B  F0A4         	call	___fldiv	;wreg free
 32421  014236  0060  F0A3  FFE6   	movff	btemp,postinc1
 32422  01423C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32423  014242  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32424  014248  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32425  01424E  0060  F633  FFE6   	movff	_C+140,postinc1
 32426  014254  0060  F637  FFE6   	movff	_C+141,postinc1
 32427  01425A  0060  F63B  FFE6   	movff	_C+142,postinc1
 32428  014260  0060  F63F  FFE6   	movff	_C+143,postinc1
 32429  014266  EC24  F09D         	call	___fladd	;wreg free
 32430  01426A  0060  F0A0  F18C   	movff	btemp,_C+140	;volatile
 32431  014270  0060  F0A4  F18D   	movff	btemp+1,_C+141	;volatile
 32432  014276  0060  F0A8  F18E   	movff	btemp+2,_C+142	;volatile
 32433  01427C  0060  F0AC  F18F   	movff	btemp+3,_C+143	;volatile
 32434                           
 32435                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 32436  014282  0060  F633  FFE6   	movff	_C+140,postinc1
 32437  014288  0060  F637  FFE6   	movff	_C+141,postinc1
 32438  01428E  0060  F63B  FFE6   	movff	_C+142,postinc1
 32439  014294  0060  F63F  FFE6   	movff	_C+143,postinc1
 32440  01429A  0060  F623  FFE6   	movff	_C+136,postinc1
 32441  0142A0  0060  F627  FFE6   	movff	_C+137,postinc1
 32442  0142A6  0060  F62B  FFE6   	movff	_C+138,postinc1
 32443  0142AC  0060  F62F  FFE6   	movff	_C+139,postinc1
 32444  0142B2  EC70  F0C3         	call	___flge	;wreg free
 32445  0142B6  B028               	btfsc	btemp& (0+255),0,c
 32446  0142B8  D008               	goto	l12370
 32447                           
 32448                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 32449  0142BA  C188  F18C         	movff	_C+136,_C+140	;volatile
 32450  0142BE  C189  F18D         	movff	_C+137,_C+141	;volatile
 32451  0142C2  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32452  0142C6  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32453  0142CA                     l12370:
 32454                           
 32455                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 32456  0142CA  0ECD               	movlw	205
 32457  0142CC  6EE6               	movwf	postinc1,c
 32458  0142CE  0ECC               	movlw	204
 32459  0142D0  6EE6               	movwf	postinc1,c
 32460  0142D2  0ECC               	movlw	204
 32461  0142D4  6EE6               	movwf	postinc1,c
 32462  0142D6  0E3D               	movlw	61
 32463  0142D8  6EE6               	movwf	postinc1,c
 32464  0142DA  0060  F633  FFE6   	movff	_C+140,postinc1
 32465  0142E0  0060  F637  FFE6   	movff	_C+141,postinc1
 32466  0142E6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32467  0142EC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32468  0142F2  EC70  F0C3         	call	___flge	;wreg free
 32469  0142F6  B028               	btfsc	btemp& (0+255),0,c
 32470  0142F8  D009               	goto	l12374
 32471                           
 32472                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 32473  0142FA  0ECD               	movlw	205
 32474  0142FC  0101               	movlb	1	; () banked
 32475  0142FE  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32476  014300  0ECC               	movlw	204
 32477  014302  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32478  014304  0ECC               	movlw	204
 32479  014306  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32480  014308  0E3D               	movlw	61
 32481  01430A  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32482  01430C                     l12374:
 32483                           
 32484                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 32485  01430C  0E00               	movlw	0
 32486  01430E  6EE6               	movwf	postinc1,c
 32487  014310  0E00               	movlw	0
 32488  014312  6EE6               	movwf	postinc1,c
 32489  014314  0E61               	movlw	97
 32490  014316  6EE6               	movwf	postinc1,c
 32491  014318  0E45               	movlw	69
 32492  01431A  6EE6               	movwf	postinc1,c
 32493  01431C  0060  F523  FFE6   	movff	_C+72,postinc1
 32494  014322  0060  F527  FFE6   	movff	_C+73,postinc1
 32495  014328  0060  F52B  FFE6   	movff	_C+74,postinc1
 32496  01432E  0060  F52F  FFE6   	movff	_C+75,postinc1
 32497  014334  EC9B  F0A4         	call	___fldiv	;wreg free
 32498  014338  0060  F0A3  FFE6   	movff	btemp,postinc1
 32499  01433E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32500  014344  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32501  01434A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32502  014350  0060  F643  FFE6   	movff	_C+144,postinc1
 32503  014356  0060  F647  FFE6   	movff	_C+145,postinc1
 32504  01435C  0060  F64B  FFE6   	movff	_C+146,postinc1
 32505  014362  0060  F64F  FFE6   	movff	_C+147,postinc1
 32506  014368  EC24  F09D         	call	___fladd	;wreg free
 32507  01436C  0060  F0A0  F190   	movff	btemp,_C+144	;volatile
 32508  014372  0060  F0A4  F191   	movff	btemp+1,_C+145	;volatile
 32509  014378  0060  F0A8  F192   	movff	btemp+2,_C+146	;volatile
 32510  01437E  0060  F0AC  F193   	movff	btemp+3,_C+147	;volatile
 32511                           
 32512                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 32513  014384  0E00               	movlw	0
 32514  014386  6EE6               	movwf	postinc1,c
 32515  014388  0E00               	movlw	0
 32516  01438A  6EE6               	movwf	postinc1,c
 32517  01438C  0E61               	movlw	97
 32518  01438E  6EE6               	movwf	postinc1,c
 32519  014390  0E45               	movlw	69
 32520  014392  6EE6               	movwf	postinc1,c
 32521  014394  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32522  01439A  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32523  0143A0  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32524  0143A6  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32525  0143AC  EC9B  F0A4         	call	___fldiv	;wreg free
 32526  0143B0  0060  F0A3  FFE6   	movff	btemp,postinc1
 32527  0143B6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32528  0143BC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32529  0143C2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32530  0143C8  0060  F683  FFE6   	movff	_C+160,postinc1
 32531  0143CE  0060  F687  FFE6   	movff	_C+161,postinc1
 32532  0143D4  0060  F68B  FFE6   	movff	_C+162,postinc1
 32533  0143DA  0060  F68F  FFE6   	movff	_C+163,postinc1
 32534  0143E0  EC24  F09D         	call	___fladd	;wreg free
 32535  0143E4  0060  F0A0  F1A0   	movff	btemp,_C+160	;volatile
 32536  0143EA  0060  F0A4  F1A1   	movff	btemp+1,_C+161	;volatile
 32537  0143F0  0060  F0A8  F1A2   	movff	btemp+2,_C+162	;volatile
 32538  0143F6  0060  F0AC  F1A3   	movff	btemp+3,_C+163	;volatile
 32539                           
 32540                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 32541  0143FC  0E00               	movlw	0
 32542  0143FE  6EE6               	movwf	postinc1,c
 32543  014400  0E00               	movlw	0
 32544  014402  6EE6               	movwf	postinc1,c
 32545  014404  0E61               	movlw	97
 32546  014406  6EE6               	movwf	postinc1,c
 32547  014408  0E45               	movlw	69
 32548  01440A  6EE6               	movwf	postinc1,c
 32549  01440C  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32550  014412  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32551  014418  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32552  01441E  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32553  014424  EC9B  F0A4         	call	___fldiv	;wreg free
 32554  014428  0060  F0A3  FFE6   	movff	btemp,postinc1
 32555  01442E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32556  014434  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32557  01443A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32558  014440  0060  F693  FFE6   	movff	_C+164,postinc1
 32559  014446  0060  F697  FFE6   	movff	_C+165,postinc1
 32560  01444C  0060  F69B  FFE6   	movff	_C+166,postinc1
 32561  014452  0060  F69F  FFE6   	movff	_C+167,postinc1
 32562  014458  EC24  F09D         	call	___fladd	;wreg free
 32563  01445C  0060  F0A0  F1A4   	movff	btemp,_C+164	;volatile
 32564  014462  0060  F0A4  F1A5   	movff	btemp+1,_C+165	;volatile
 32565  014468  0060  F0A8  F1A6   	movff	btemp+2,_C+166	;volatile
 32566  01446E  0060  F0AC  F1A7   	movff	btemp+3,_C+167	;volatile
 32567                           
 32568                           ;bsoc.c: 54:  C.loadkw += (C.p_load / 3600.0);
 32569  014474  0E00               	movlw	0
 32570  014476  6EE6               	movwf	postinc1,c
 32571  014478  0E00               	movlw	0
 32572  01447A  6EE6               	movwf	postinc1,c
 32573  01447C  0E61               	movlw	97
 32574  01447E  6EE6               	movwf	postinc1,c
 32575  014480  0E45               	movlw	69
 32576  014482  6EE6               	movwf	postinc1,c
 32577  014484  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32578  01448A  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32579  014490  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32580  014496  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32581  01449C  EC9B  F0A4         	call	___fldiv	;wreg free
 32582  0144A0  0060  F0A3  FFE6   	movff	btemp,postinc1
 32583  0144A6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32584  0144AC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32585  0144B2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32586  0144B8  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32587  0144BE  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32588  0144C4  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32589  0144CA  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32590  0144D0  EC24  F09D         	call	___fladd	;wreg free
 32591  0144D4  0060  F0A0  F1A8   	movff	btemp,_C+168	;volatile
 32592  0144DA  0060  F0A4  F1A9   	movff	btemp+1,_C+169	;volatile
 32593  0144E0  0060  F0A8  F1AA   	movff	btemp+2,_C+170	;volatile
 32594  0144E6  0060  F0AC  F1AB   	movff	btemp+3,_C+171	;volatile
 32595                           
 32596                           ;bsoc.c: 55:  if (C.p_bat > 0.0)
 32597  0144EC  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32598  0144F2  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32599  0144F8  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32600  0144FE  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32601  014504  0E00               	movlw	0
 32602  014506  6EE6               	movwf	postinc1,c
 32603  014508  0E00               	movlw	0
 32604  01450A  6EE6               	movwf	postinc1,c
 32605  01450C  0E00               	movlw	0
 32606  01450E  6EE6               	movwf	postinc1,c
 32607  014510  0E00               	movlw	0
 32608  014512  6EE6               	movwf	postinc1,c
 32609  014514  EC70  F0C3         	call	___flge	;wreg free
 32610  014518  B028               	btfsc	btemp& (0+255),0,c
 32611  01451A  D03C               	goto	l12386
 32612                           
 32613                           ;bsoc.c: 56:   C.bkwi += (C.p_bat / 3600.0);
 32614  01451C  0E00               	movlw	0
 32615  01451E  6EE6               	movwf	postinc1,c
 32616  014520  0E00               	movlw	0
 32617  014522  6EE6               	movwf	postinc1,c
 32618  014524  0E61               	movlw	97
 32619  014526  6EE6               	movwf	postinc1,c
 32620  014528  0E45               	movlw	69
 32621  01452A  6EE6               	movwf	postinc1,c
 32622  01452C  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32623  014532  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32624  014538  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32625  01453E  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32626  014544  EC9B  F0A4         	call	___fldiv	;wreg free
 32627  014548  0060  F0A3  FFE6   	movff	btemp,postinc1
 32628  01454E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32629  014554  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32630  01455A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32631  014560  0060  F663  FFE6   	movff	_C+152,postinc1
 32632  014566  0060  F667  FFE6   	movff	_C+153,postinc1
 32633  01456C  0060  F66B  FFE6   	movff	_C+154,postinc1
 32634  014572  0060  F66F  FFE6   	movff	_C+155,postinc1
 32635  014578  EC24  F09D         	call	___fladd	;wreg free
 32636  01457C  0060  F0A0  F198   	movff	btemp,_C+152	;volatile
 32637  014582  0060  F0A4  F199   	movff	btemp+1,_C+153	;volatile
 32638  014588  0060  F0A8  F19A   	movff	btemp+2,_C+154	;volatile
 32639  01458E  0060  F0AC  F19B   	movff	btemp+3,_C+155	;volatile
 32640  014594                     l12386:
 32641                           
 32642                           ;bsoc.c: 57:  if (C.p_bat < 0.0)
 32643  014594  0101               	movlb	1	; () banked
 32644  014596  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32645  014598  D04A               	goto	l12390
 32646                           
 32647                           ; BSR set to: 1
 32648                           ;bsoc.c: 58:   C.bkwo += fabsf(C.p_bat / 3600.0);
 32649  01459A  0E00               	movlw	0
 32650  01459C  6EE6               	movwf	postinc1,c
 32651  01459E  0E00               	movlw	0
 32652  0145A0  6EE6               	movwf	postinc1,c
 32653  0145A2  0E61               	movlw	97
 32654  0145A4  6EE6               	movwf	postinc1,c
 32655  0145A6  0E45               	movlw	69
 32656  0145A8  6EE6               	movwf	postinc1,c
 32657  0145AA  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32658  0145B0  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32659  0145B6  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32660  0145BC  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32661  0145C2  EC9B  F0A4         	call	___fldiv	;wreg free
 32662  0145C6  0060  F0A3  FFE6   	movff	btemp,postinc1
 32663  0145CC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32664  0145D2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32665  0145D8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32666  0145DE  ECF9  F0CD         	call	_fabsf	;wreg free
 32667  0145E2  0060  F0A3  FFE6   	movff	btemp,postinc1
 32668  0145E8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32669  0145EE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32670  0145F4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32671  0145FA  0060  F673  FFE6   	movff	_C+156,postinc1
 32672  014600  0060  F677  FFE6   	movff	_C+157,postinc1
 32673  014606  0060  F67B  FFE6   	movff	_C+158,postinc1
 32674  01460C  0060  F67F  FFE6   	movff	_C+159,postinc1
 32675  014612  EC24  F09D         	call	___fladd	;wreg free
 32676  014616  0060  F0A0  F19C   	movff	btemp,_C+156	;volatile
 32677  01461C  0060  F0A4  F19D   	movff	btemp+1,_C+157	;volatile
 32678  014622  0060  F0A8  F19E   	movff	btemp+2,_C+158	;volatile
 32679  014628  0060  F0AC  F19F   	movff	btemp+3,_C+159	;volatile
 32680  01462E                     l12390:
 32681                           
 32682                           ;bsoc.c: 60:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32683  01462E  0E00               	movlw	0
 32684  014630  6EE6               	movwf	postinc1,c
 32685  014632  0E00               	movlw	0
 32686  014634  6EE6               	movwf	postinc1,c
 32687  014636  0EC8               	movlw	200
 32688  014638  6EE6               	movwf	postinc1,c
 32689  01463A  0E42               	movlw	66
 32690  01463C  6EE6               	movwf	postinc1,c
 32691  01463E  0060  F623  FFE6   	movff	_C+136,postinc1
 32692  014644  0060  F627  FFE6   	movff	_C+137,postinc1
 32693  01464A  0060  F62B  FFE6   	movff	_C+138,postinc1
 32694  014650  0060  F62F  FFE6   	movff	_C+139,postinc1
 32695  014656  0060  F633  FFE6   	movff	_C+140,postinc1
 32696  01465C  0060  F637  FFE6   	movff	_C+141,postinc1
 32697  014662  0060  F63B  FFE6   	movff	_C+142,postinc1
 32698  014668  0060  F63F  FFE6   	movff	_C+143,postinc1
 32699  01466E  EC9B  F0A4         	call	___fldiv	;wreg free
 32700  014672  0060  F0A3  FFE6   	movff	btemp,postinc1
 32701  014678  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32702  01467E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32703  014684  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32704  01468A  EC0F  F099         	call	___flmul	;wreg free
 32705  01468E  0060  F0A3  FFE6   	movff	btemp,postinc1
 32706  014694  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32707  01469A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32708  0146A0  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32709  0146A6  ECFF  F0C1         	call	___fltol	;wreg free
 32710  0146AA  0060  F0A0  F032   	movff	btemp,btemp+10
 32711  0146B0  0060  F0A4  F033   	movff	btemp+1,btemp+11
 32712  0146B6  0E01               	movlw	1
 32713  0146B8  2432               	addwf	(btemp+10)^0,w,c
 32714  0146BA  0101               	movlb	1	; () banked
 32715  0146BC  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32716  0146BE  0E00               	movlw	0
 32717  0146C0  2033               	addwfc	(btemp+11)^0,w,c
 32718  0146C2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32719                           
 32720                           ; BSR set to: 1
 32721                           ;bsoc.c: 61:  if (C.soc > 100)
 32722  0146C4  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 32723  0146C6  E104               	bnz	u1192_20
 32724  0146C8  0E65               	movlw	101
 32725  0146CA  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 32726  0146CC  A0D8               	btfss	status,0,c
 32727  0146CE  D004               	goto	l12396
 32728  0146D0                     u1192_20:
 32729                           
 32730                           ; BSR set to: 1
 32731                           ;bsoc.c: 62:   C.soc = 100;
 32732  0146D0  0E00               	movlw	0
 32733  0146D2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32734  0146D4  0E64               	movlw	100
 32735  0146D6  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32736  0146D8                     l12396:
 32737                           
 32738                           ; BSR set to: 1
 32739                           ;bsoc.c: 64:  if (C.c_bat < 0.0) {
 32740  0146D8  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32741  0146DA  D043               	goto	l12400
 32742                           
 32743                           ; BSR set to: 1
 32744                           ;bsoc.c: 65:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32745  0146DC  0060  F513  FFE6   	movff	_C+68,postinc1
 32746  0146E2  0060  F517  FFE6   	movff	_C+69,postinc1
 32747  0146E8  0060  F51B  FFE6   	movff	_C+70,postinc1
 32748  0146EE  0060  F51F  FFE6   	movff	_C+71,postinc1
 32749  0146F4  0060  F633  FFE6   	movff	_C+140,postinc1
 32750  0146FA  0060  F637  FFE6   	movff	_C+141,postinc1
 32751  014700  0060  F63B  FFE6   	movff	_C+142,postinc1
 32752  014706  0060  F63F  FFE6   	movff	_C+143,postinc1
 32753  01470C  EC9B  F0A4         	call	___fldiv	;wreg free
 32754  014710  0060  F0A3  FFE6   	movff	btemp,postinc1
 32755  014716  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32756  01471C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32757  014722  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32758  014728  ECFA  F0D4         	call	___flneg	;wreg free
 32759  01472C  0060  F0A3  FFE6   	movff	btemp,postinc1
 32760  014732  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32761  014738  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32762  01473E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32763  014744  ECFF  F0C1         	call	___fltol	;wreg free
 32764  014748  0060  F0A0  F032   	movff	btemp,btemp+10
 32765  01474E  0060  F0A4  F033   	movff	btemp+1,btemp+11
 32766  014754  0060  F0C8  F1AC   	movff	btemp+10,_C+172	;volatile
 32767  01475A  0060  F0CC  F1AD   	movff	btemp+11,_C+173	;volatile
 32768                           
 32769                           ;bsoc.c: 66:  } else {
 32770  014760  D004               	goto	l12402
 32771  014762                     l12400:
 32772                           
 32773                           ; BSR set to: 1
 32774                           ;bsoc.c: 67:   C.runtime = 120;
 32775  014762  0E00               	movlw	0
 32776  014764  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32777  014766  0E78               	movlw	120
 32778  014768  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32779  01476A                     l12402:
 32780                           
 32781                           ;bsoc.c: 69:  if (C.runtime > 120)
 32782  01476A  0101               	movlb	1	; () banked
 32783  01476C  51AD               	movf	(_C+173)& (0+255),w,b	;volatile
 32784  01476E  E104               	bnz	u1194_20
 32785  014770  0E79               	movlw	121
 32786  014772  5DAC               	subwf	(_C+172)& (0+255),w,b	;volatile
 32787  014774  A0D8               	btfss	status,0,c
 32788  014776  D004               	goto	l12406
 32789  014778                     u1194_20:
 32790                           
 32791                           ; BSR set to: 1
 32792                           ;bsoc.c: 70:   C.runtime = 120;
 32793  014778  0E00               	movlw	0
 32794  01477A  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32795  01477C  0E78               	movlw	120
 32796  01477E  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32797  014780                     l12406:
 32798                           
 32799                           ; BSR set to: 1
 32800                           ;bsoc.c: 72:  V.lowint_count++;
 32801  014780  0E01               	movlw	1
 32802  014782  0102               	movlb	2	; () banked
 32803  014784  27B2               	addwf	(_V+178)& (0+255),f,b	;volatile
 32804  014786  0E00               	movlw	0
 32805  014788  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 32806  01478A  23B4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 32807  01478C  23B5               	addwfc	(_V+181)& (0+255),f,b	;volatile
 32808                           
 32809                           ; BSR set to: 2
 32810                           ;bsoc.c: 74:  log_ptr = port_data_dma_ptr();
 32811  01478E  EC52  F0DB         	call	_port_data_dma_ptr	;wreg free
 32812                           
 32813                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32814  014792  0EFF               	movlw	-1
 32815  014794  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 32816  01479A  0EFE               	movlw	-2
 32817  01479C  0060  F0A3  FFE3   	movff	btemp,plusw1
 32818                           
 32819                           ;bsoc.c: 75:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 32820  0147A2  0060  F613  FFE6   	movff	_C+132,postinc1
 32821  0147A8  0060  F617  FFE6   	movff	_C+133,postinc1
 32822  0147AE  0060  F61B  FFE6   	movff	_C+134,postinc1
 32823  0147B4  0060  F61F  FFE6   	movff	_C+135,postinc1
 32824  0147BA  0060  F6B3  FFE6   	movff	_C+172,postinc1
 32825  0147C0  0060  F6B7  FFE6   	movff	_C+173,postinc1
 32826  0147C6  0060  F6BB  FFE6   	movff	_C+174,postinc1
 32827  0147CC  0060  F6BF  FFE6   	movff	_C+175,postinc1
 32828  0147D2  0060  F643  FFE6   	movff	_C+144,postinc1
 32829  0147D8  0060  F647  FFE6   	movff	_C+145,postinc1
 32830  0147DE  0060  F64B  FFE6   	movff	_C+146,postinc1
 32831  0147E4  0060  F64F  FFE6   	movff	_C+147,postinc1
 32832  0147EA  0060  F633  FFE6   	movff	_C+140,postinc1
 32833  0147F0  0060  F637  FFE6   	movff	_C+141,postinc1
 32834  0147F6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32835  0147FC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32836  014802  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32837  014808  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32838  01480E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32839  014814  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32840  01481A  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32841  014820  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32842  014826  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32843  01482C  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32844  014832  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32845  014838  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32846  01483E  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32847  014844  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32848  01484A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32849  014850  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32850  014856  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32851  01485C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32852  014862  0060  F593  FFE6   	movff	_C+100,postinc1
 32853  014868  0060  F597  FFE6   	movff	_C+101,postinc1
 32854  01486E  0060  F59B  FFE6   	movff	_C+102,postinc1
 32855  014874  0060  F59F  FFE6   	movff	_C+103,postinc1
 32856  01487A  0060  F533  FFE6   	movff	_C+76,postinc1
 32857  014880  0060  F537  FFE6   	movff	_C+77,postinc1
 32858  014886  0060  F53B  FFE6   	movff	_C+78,postinc1
 32859  01488C  0060  F53F  FFE6   	movff	_C+79,postinc1
 32860  014892  0060  F543  FFE6   	movff	_C+80,postinc1
 32861  014898  0060  F547  FFE6   	movff	_C+81,postinc1
 32862  01489E  0060  F54B  FFE6   	movff	_C+82,postinc1
 32863  0148A4  0060  F54F  FFE6   	movff	_C+83,postinc1
 32864  0148AA  0060  F553  FFE6   	movff	_C+84,postinc1
 32865  0148B0  0060  F557  FFE6   	movff	_C+85,postinc1
 32866  0148B6  0060  F55B  FFE6   	movff	_C+86,postinc1
 32867  0148BC  0060  F55F  FFE6   	movff	_C+87,postinc1
 32868  0148C2  0060  FA07  FFE6   	movff	_V+129,postinc1
 32869  0148C8  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32870  0148CE  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32871  0148D4  0060  FA13  FFE6   	movff	_V+132,postinc1
 32872  0148DA  0E67               	movlw	low STR_65
 32873  0148DC  6EE6               	movwf	postinc1,c
 32874  0148DE  0EFC               	movlw	high STR_65
 32875  0148E0  6EE6               	movwf	postinc1,c
 32876                           
 32877                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32878  0148E2  0EC8               	movlw	-56
 32879  0148E4  006F FF8F FFE6     	movff	plusw1,postinc1
 32880  0148EA  006F FF8F FFE6     	movff	plusw1,postinc1
 32881  0148F0  0E38               	movlw	56
 32882  0148F2  6EE6               	movwf	postinc1,c
 32883  0148F4  EC08  F0CA         	call	_sprintf	;wreg free
 32884                           
 32885                           ; BSR set to: 0
 32886                           ;bsoc.c: 81:  StartTimer(TMR_DISPLAY, 125);
 32887  0148F8  0E7D               	movlw	125
 32888  0148FA  6EE6               	movwf	postinc1,c
 32889  0148FC  0E00               	movlw	0
 32890  0148FE  6EE6               	movwf	postinc1,c
 32891  014900  0E0A               	movlw	10
 32892  014902  6EE6               	movwf	postinc1,c
 32893  014904  EC10  F0D6         	call	_StartTimer	;wreg free
 32894                           
 32895                           ;bsoc.c: 82:  send_port_data_dma(strlen((char*) log_ptr));
 32896                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32897  014908  0EFE               	movlw	-2
 32898  01490A  006F FF8F FFE6     	movff	plusw1,postinc1
 32899  014910  006F FF8F FFE6     	movff	plusw1,postinc1
 32900  014916  EC4E  F0CF         	call	_strlen	;wreg free
 32901  01491A  0060  F0A3  FFE6   	movff	btemp,postinc1
 32902  014920  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32903  014926  EC85  F0D4         	call	_send_port_data_dma	;wreg free
 32904                           
 32905                           ; BSR set to: 59
 32906                           ;bsoc.c: 83:  C.update = 0;
 32907  01492A  0101               	movlb	1	; () banked
 32908  01492C  6BB0               	clrf	(_C+176)& (0+255),b	;volatile
 32909                           
 32910                           ; BSR set to: 1
 32911  01492E  92BE               	bcf	190,1,c	;volatile
 32912                           
 32913                           ; BSR set to: 1
 32914                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32915  014930  52E5               	movf	postdec1,f,c
 32916  014932  52E5               	movf	postdec1,f,c
 32917  014934  0012               	return		;funcret
 32918  014936                     __end_of_calc_bsoc:
 32919                           	opt callstack 0
 32920                           
 32921 ;; *************** function _send_port_data_dma *****************
 32922 ;; Defined at:
 32923 ;;		line 258 in file "eadog.c"
 32924 ;; Parameters:    Size  Location     Type
 32925 ;;  dsize           2  [STACK] unsigned short 
 32926 ;; Auto vars:     Size  Location     Type
 32927 ;;		None
 32928 ;; Return value:  Size  Location     Type
 32929 ;;                  1  [STACK] void 
 32930 ;; Registers used:
 32931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32932 ;; Tracked objects:
 32933 ;;		On entry : 0/0
 32934 ;;		On exit  : 3F/3B
 32935 ;;		Unchanged: 0/0
 32936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32941 ;;Total ram usage:        0 bytes
 32942 ;; Hardware stack levels used:    1
 32943 ;; Hardware stack levels required when called:    3
 32944 ;; This function calls:
 32945 ;;		Nothing
 32946 ;; This function is called by:
 32947 ;;		_calc_bsoc
 32948 ;; This function uses a reentrant model
 32949 ;;
 32950                           
 32951                           	psect	text149
 32952  01A90A                     __ptext149:
 32953                           	opt callstack 0
 32954  01A90A                     _send_port_data_dma:
 32955                           	opt callstack 11
 32956                           
 32957                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32958                           ;stkvar	_dsize @ sp[(0)+-2]
 32959                           
 32960                           ; BSR set to: 1
 32961                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32962                           ;incstack = 0
 32963  01A90A  0EFE               	movlw	-2
 32964  01A90C  04E3               	decf	plusw1,w,c
 32965  01A90E  0EFF               	movlw	-1
 32966  01A910  006F FF8C  F028    	movff	plusw1,btemp
 32967  01A916  0E02               	movlw	2
 32968  01A918  5A28               	subwfb	btemp^0,f,c
 32969  01A91A  A0D8               	btfss	status,0,c
 32970  01A91C  D00C               	goto	l9546
 32971                           
 32972                           ;eadog.c: 261:   dsize = 512;
 32973  01A91E  0E00               	movlw	0
 32974  01A920  6E32               	movwf	(btemp+10)^0,c
 32975  01A922  0E02               	movlw	2
 32976  01A924  6E33               	movwf	(btemp+11)^0,c
 32977                           
 32978                           ;stkvar	_dsize @ sp[(0)+-2]
 32979  01A926  0EFE               	movlw	-2
 32980  01A928  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 32981  01A92E  0EFF               	movlw	-1
 32982  01A930  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 32983  01A936                     l9546:
 32984                           
 32985                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 32986  01A936  013B               	movlb	59	; () banked
 32987  01A938  9FDC               	bcf	220,7,b	;volatile
 32988                           
 32989                           ; BSR set to: 59
 32990                           ;eadog.c: 264:  DMA2SSZ = dsize;
 32991                           ;stkvar	_dsize @ sp[(0)+-2]
 32992  01A93A  0EFE               	movlw	-2
 32993  01A93C  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 32994  01A942  0EFF               	movlw	-1
 32995  01A944  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 32996                           
 32997                           ; BSR set to: 59
 32998                           ;eadog.c: 265:  DMA2DSZ = 1;
 32999  01A94A  0E00               	movlw	0
 33000  01A94C  6FCF               	movwf	207,b	;volatile
 33001  01A94E  0E01               	movlw	1
 33002  01A950  6FCE               	movwf	206,b	;volatile
 33003                           
 33004                           ; BSR set to: 59
 33005                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 33006  01A952  8FDC               	bsf	220,7,b	;volatile
 33007                           
 33008                           ; BSR set to: 59
 33009                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 33010  01A954  8DDC               	bsf	220,6,b	;volatile
 33011                           
 33012                           ; BSR set to: 59
 33013                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 33014  01A956  52E5               	movf	postdec1,f,c
 33015  01A958  52E5               	movf	postdec1,f,c
 33016  01A95A  0012               	return		;funcret
 33017  01A95C                     __end_of_send_port_data_dma:
 33018                           	opt callstack 0
 33019                           
 33020 ;; *************** function _port_data_dma_ptr *****************
 33021 ;; Defined at:
 33022 ;;		line 273 in file "eadog.c"
 33023 ;; Parameters:    Size  Location     Type
 33024 ;;		None
 33025 ;; Auto vars:     Size  Location     Type
 33026 ;;		None
 33027 ;; Return value:  Size  Location     Type
 33028 ;;                  2  [STACK] PTR unsigned char 
 33029 ;; Registers used:
 33030 ;;		wreg, status,2, status,0, btemp, btemp+1
 33031 ;; Tracked objects:
 33032 ;;		On entry : 3F/2
 33033 ;;		On exit  : 0/0
 33034 ;;		Unchanged: 0/0
 33035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33040 ;;Total ram usage:        0 bytes
 33041 ;; Hardware stack levels used:    1
 33042 ;; Hardware stack levels required when called:    3
 33043 ;; This function calls:
 33044 ;;		Nothing
 33045 ;; This function is called by:
 33046 ;;		_calc_bsoc
 33047 ;; This function uses a reentrant model
 33048 ;;
 33049                           
 33050                           	psect	text150
 33051  01B6A4                     __ptext150:
 33052                           	opt callstack 0
 33053  01B6A4                     _port_data_dma_ptr:
 33054                           	opt callstack 11
 33055                           
 33056                           ;eadog.c: 275:  return port_data;
 33057                           
 33058                           ; BSR set to: 59
 33059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33060                           ;incstack = 0
 33061  01B6A4  0EFF               	movlw	low _port_data
 33062  01B6A6  6E28               	movwf	btemp^0,c
 33063  01B6A8  0E05               	movlw	high _port_data
 33064  01B6AA  6E29               	movwf	(btemp+1)^0,c
 33065                           
 33066                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33067  01B6AC  0012               	return		;funcret
 33068  01B6AE                     __end_of_port_data_dma_ptr:
 33069                           	opt callstack 0
 33070                           
 33071 ;; *************** function _INT0_ISR *****************
 33072 ;; Defined at:
 33073 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33074 ;; Parameters:    Size  Location     Type
 33075 ;;		None
 33076 ;; Auto vars:     Size  Location     Type
 33077 ;;		None
 33078 ;; Return value:  Size  Location     Type
 33079 ;;                  1    wreg      void 
 33080 ;; Registers used:
 33081 ;;		wreg, status,2, status,0, pclath, tosl
 33082 ;; Tracked objects:
 33083 ;;		On entry : 0/0
 33084 ;;		On exit  : 0/0
 33085 ;;		Unchanged: 0/0
 33086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33091 ;;Total ram usage:        0 bytes
 33092 ;; Hardware stack levels used:    1
 33093 ;; Hardware stack levels required when called:    2
 33094 ;; This function calls:
 33095 ;;		_INT0_CallBack
 33096 ;; This function is called by:
 33097 ;;		Interrupt level 2
 33098 ;; This function uses a non-reentrant model
 33099 ;;
 33100                           
 33101                           	psect	text151
 33102  01B67C                     __ptext151:
 33103                           	opt callstack 0
 33104  01B67C                     _INT0_ISR:
 33105                           	opt callstack 3
 33106                           
 33107                           ;incstack = 0
 33108  01B67C  EE14  F142         	lfsr	1,___inthi_sp
 33109                           
 33110                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33111  01B680  0139               	movlb	57	; () banked
 33112  01B682  91A1               	bcf	161,0,b	;volatile
 33113                           
 33114                           ; BSR set to: 57
 33115                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33116  01B684  EC04  F0DA         	call	_INT0_CallBack	;wreg free
 33117  01B688  0011               	retfie		f
 33118  01B68A                     __end_of_INT0_ISR:
 33119                           	opt callstack 0
 33120                           
 33121 ;; *************** function _INT0_CallBack *****************
 33122 ;; Defined at:
 33123 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33124 ;; Parameters:    Size  Location     Type
 33125 ;;		None
 33126 ;; Auto vars:     Size  Location     Type
 33127 ;;		None
 33128 ;; Return value:  Size  Location     Type
 33129 ;;                  1  [STACK] void 
 33130 ;; Registers used:
 33131 ;;		wreg, status,2, status,0, pclath, tosl
 33132 ;; Tracked objects:
 33133 ;;		On entry : 3F/39
 33134 ;;		On exit  : 0/0
 33135 ;;		Unchanged: 0/0
 33136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33141 ;;Total ram usage:        0 bytes
 33142 ;; Hardware stack levels used:    1
 33143 ;; Hardware stack levels required when called:    1
 33144 ;; This function calls:
 33145 ;;		Absolute function
 33146 ;;		_INT0_DefaultInterruptHandler
 33147 ;; This function is called by:
 33148 ;;		_INT0_ISR
 33149 ;; This function uses a reentrant model
 33150 ;;
 33151                           
 33152                           	psect	text152
 33153  01B408                     __ptext152:
 33154                           	opt callstack 0
 33155  01B408                     _INT0_CallBack:
 33156                           	opt callstack 3
 33157                           
 33158                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33159                           
 33160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33161                           ;incstack = 0
 33162  01B408  0100               	movlb	0	; () banked
 33163  01B40A  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33164  01B40C  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33165  01B40E  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33166  01B410  B4D8               	btfsc	status,2,c
 33167  01B412  0012               	return	
 33168                           
 33169                           ; BSR set to: 0
 33170                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33171  01B414  D801               	call	u955_48
 33172  01B416  0012               	return	
 33173  01B418                     u955_48:
 33174  01B418  0005               	push	
 33175  01B41A  6EFA               	movwf	pclath,c
 33176  01B41C  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33177  01B41E  6EFD               	movwf	tosl,c
 33178  01B420  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33179  01B422  6EFE               	movwf	tosh,c
 33180  01B424  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33181  01B426  6EFF               	movwf	tosu,c
 33182  01B428  50FA               	movf	pclath,w,c
 33183  01B42A  0012               	return		;indir
 33184  01B42C                     __end_of_INT0_CallBack:
 33185                           	opt callstack 0
 33186                           
 33187 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33188 ;; Defined at:
 33189 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33190 ;; Parameters:    Size  Location     Type
 33191 ;;		None
 33192 ;; Auto vars:     Size  Location     Type
 33193 ;;		None
 33194 ;; Return value:  Size  Location     Type
 33195 ;;                  1  [STACK] void 
 33196 ;; Registers used:
 33197 ;;		None
 33198 ;; Tracked objects:
 33199 ;;		On entry : 3F/0
 33200 ;;		On exit  : 0/0
 33201 ;;		Unchanged: 0/0
 33202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33203 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33204 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33206 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33207 ;;Total ram usage:        0 bytes
 33208 ;; Hardware stack levels used:    1
 33209 ;; This function calls:
 33210 ;;		Nothing
 33211 ;; This function is called by:
 33212 ;;		_EXT_INT_Initialize
 33213 ;;		_INT0_CallBack
 33214 ;; This function uses a reentrant model
 33215 ;;
 33216                           
 33217                           	psect	text153
 33218  01B71E                     __ptext153:
 33219                           	opt callstack 0
 33220  01B71E                     _INT0_DefaultInterruptHandler:
 33221                           	opt callstack 3
 33222                           
 33223                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33224                           
 33225                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33226                           ;incstack = 0
 33227  01B71E  0012               	return		;funcret
 33228  01B720                     __end_of_INT0_DefaultInterruptHandler:
 33229                           	opt callstack 0
 33230                           
 33231 ;; *************** function _Default_ISR *****************
 33232 ;; Defined at:
 33233 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33234 ;; Parameters:    Size  Location     Type
 33235 ;;		None
 33236 ;; Auto vars:     Size  Location     Type
 33237 ;;		None
 33238 ;; Return value:  Size  Location     Type
 33239 ;;                  1    wreg      void 
 33240 ;; Registers used:
 33241 ;;		None
 33242 ;; Tracked objects:
 33243 ;;		On entry : 0/0
 33244 ;;		On exit  : 0/0
 33245 ;;		Unchanged: 0/0
 33246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33251 ;;Total ram usage:        0 bytes
 33252 ;; Hardware stack levels used:    1
 33253 ;; This function calls:
 33254 ;;		Nothing
 33255 ;; This function is called by:
 33256 ;;		Interrupt level 2
 33257 ;; This function uses a non-reentrant model
 33258 ;;
 33259                           
 33260                           	psect	text154
 33261  01B714                     __ptext154:
 33262                           	opt callstack 0
 33263  01B714                     _Default_ISR:
 33264                           	opt callstack 5
 33265                           
 33266                           ;incstack = 0
 33267  01B714  EE14  F142         	lfsr	1,___inthi_sp
 33268  01B718  0011               	retfie		f
 33269  01B71A                     __end_of_Default_ISR:
 33270                           	opt callstack 0
 33271                           
 33272 ;; *************** function _ADCC_ISR *****************
 33273 ;; Defined at:
 33274 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33275 ;; Parameters:    Size  Location     Type
 33276 ;;		None
 33277 ;; Auto vars:     Size  Location     Type
 33278 ;;		None
 33279 ;; Return value:  Size  Location     Type
 33280 ;;                  1    wreg      void 
 33281 ;; Registers used:
 33282 ;;		wreg, status,2, status,0, pclath, tosl
 33283 ;; Tracked objects:
 33284 ;;		On entry : 0/0
 33285 ;;		On exit  : 0/0
 33286 ;;		Unchanged: 0/0
 33287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33292 ;;Total ram usage:        0 bytes
 33293 ;; Hardware stack levels used:    1
 33294 ;; Hardware stack levels required when called:    1
 33295 ;; This function calls:
 33296 ;;		Absolute function
 33297 ;;		_ADCC_DefaultInterruptHandler
 33298 ;;		_adc_int_handler
 33299 ;; This function is called by:
 33300 ;;		Interrupt level 2
 33301 ;; This function uses a non-reentrant model
 33302 ;;
 33303                           
 33304                           	psect	text155
 33305  01B028                     __ptext155:
 33306                           	opt callstack 0
 33307  01B028                     _ADCC_ISR:
 33308                           	opt callstack 4
 33309                           
 33310                           ;incstack = 0
 33311  01B028  EE14  F142         	lfsr	1,___inthi_sp
 33312                           
 33313                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33314  01B02C  0139               	movlb	57	; () banked
 33315  01B02E  95A1               	bcf	161,2,b	;volatile
 33316                           
 33317                           ; BSR set to: 57
 33318                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33319  01B030  0100               	movlb	0	; () banked
 33320  01B032  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33321  01B034  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33322  01B036  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33323  01B038  B4D8               	btfsc	status,2,c
 33324  01B03A  0011               	retfie		f
 33325                           
 33326                           ; BSR set to: 0
 33327                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33328  01B03C  D801               	call	i2u998_48
 33329  01B03E  0011               	retfie		f
 33330  01B040                     i2u998_48:
 33331  01B040  0005               	push	
 33332  01B042  6EFA               	movwf	pclath,c
 33333  01B044  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33334  01B046  6EFD               	movwf	tosl,c
 33335  01B048  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33336  01B04A  6EFE               	movwf	tosh,c
 33337  01B04C  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33338  01B04E  6EFF               	movwf	tosu,c
 33339  01B050  50FA               	movf	pclath,w,c
 33340  01B052  0012               	return		;indir
 33341  01B054                     __end_of_ADCC_ISR:
 33342                           	opt callstack 0
 33343                           
 33344 ;; *************** function _adc_int_t_handler *****************
 33345 ;; Defined at:
 33346 ;;		line 143 in file "daq.c"
 33347 ;; Parameters:    Size  Location     Type
 33348 ;;		None
 33349 ;; Auto vars:     Size  Location     Type
 33350 ;;		None
 33351 ;; Return value:  Size  Location     Type
 33352 ;;                  1  [STACK] void 
 33353 ;; Registers used:
 33354 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33355 ;; Tracked objects:
 33356 ;;		On entry : 3F/0
 33357 ;;		On exit  : 1/0
 33358 ;;		Unchanged: 0/0
 33359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33364 ;;Total ram usage:        0 bytes
 33365 ;; Hardware stack levels used:    1
 33366 ;; Hardware stack levels required when called:    1
 33367 ;; This function calls:
 33368 ;;		_ADCC_DischargeSampleCapacitor
 33369 ;;		_ADCC_StartConversion
 33370 ;; This function is called by:
 33371 ;;		_start_adc_scan
 33372 ;;		_ADCC_ThresholdISR
 33373 ;; This function uses a reentrant model
 33374 ;;
 33375                           
 33376                           	psect	text156
 33377  01A3AE                     __ptext156:
 33378                           	opt callstack 0
 33379  01A3AE                     _adc_int_t_handler:
 33380                           	opt callstack 3
 33381                           
 33382                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33383                           
 33384                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33385                           ;incstack = 0
 33386  01A3AE  013E               	movlb	62	; () banked
 33387  01A3B0  51E6               	movf	230,w,b	;volatile
 33388  01A3B2  006F FB9C  F028    	movff	16103,btemp	;volatile
 33389  01A3B8  6A29               	clrf	(btemp+1)^0,c
 33390  01A3BA  0060  F0A0  F029   	movff	btemp,btemp+1
 33391  01A3C0  6A28               	clrf	btemp^0,c
 33392  01A3C2  2628               	addwf	btemp^0,f,c
 33393  01A3C4  0E00               	movlw	0
 33394  01A3C6  2229               	addwfc	(btemp+1)^0,f,c
 33395  01A3C8  0100               	movlb	0	; () banked
 33396  01A3CA  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33397  01A3CC  0D02               	mullw	2
 33398  01A3CE  50F3               	movf	243,w,c
 33399  01A3D0  0FC4               	addlw	low _R
 33400  01A3D2  6ED9               	movwf	fsr2l,c
 33401  01A3D4  6ADA               	clrf	fsr2h,c
 33402  01A3D6  0060  F0A3  FFDE   	movff	btemp,postinc2
 33403  01A3DC  0060  F0A7  FFDD   	movff	btemp+1,postdec2
 33404  01A3E2                     l10818:
 33405                           
 33406                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 33407  01A3E2  0100               	movlb	0	; () banked
 33408  01A3E4  2BE8               	incf	(_R+36)& (0+255),f,b	;volatile
 33409  01A3E6  0E0D               	movlw	13
 33410  01A3E8  65E8               	cpfsgt	(_R+36)& (0+255),b	;volatile
 33411  01A3EA  D003               	goto	l10824
 33412                           
 33413                           ; BSR set to: 0
 33414                           ;daq.c: 151:    R.done = 1;
 33415  01A3EC  0E01               	movlw	1
 33416  01A3EE  6FEB               	movwf	(_R+39)& (0+255),b	;volatile
 33417  01A3F0  0012               	return	
 33418  01A3F2                     l10824:
 33419                           
 33420                           ; BSR set to: 0
 33421                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 33422  01A3F2  0060  F3A0  F033   	movff	_R+36,btemp+11	;volatile
 33423  01A3F8  EE20  F0E9         	lfsr	2,_R+37	;volatile
 33424  01A3FC  006F FF78  F030    	movff	postinc2,btemp+8
 33425  01A402  006F FF74  F031    	movff	postdec2,btemp+9
 33426  01A408  2A33               	incf	(btemp+11)^0,f,c
 33427  01A40A  D003               	goto	u995_44
 33428  01A40C                     u995_45:
 33429  01A40C  90D8               	bcf	status,0,c
 33430  01A40E  3231               	rrcf	(btemp+9)^0,f,c
 33431  01A410  3230               	rrcf	(btemp+8)^0,f,c
 33432  01A412                     u995_44:
 33433  01A412  2E33               	decfsz	(btemp+11)^0,f,c
 33434  01A414  D7FB               	goto	u995_45
 33435  01A416  A030               	btfss	(btemp+8)^0,0,c
 33436  01A418  D7E4               	goto	l10818
 33437                           
 33438                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33439  01A41A  EC69  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33440                           
 33441                           ; BSR set to: 62
 33442                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33443  01A41E  0100               	movlb	0	; () banked
 33444  01A420  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33445  01A422  0B0F               	andlw	15
 33446  01A424  6EE6               	movwf	postinc1,c
 33447  01A426  EC0E  F0DB         	call	_ADCC_StartConversion	;wreg free
 33448                           
 33449                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33450  01A42A  0012               	return		;funcret
 33451  01A42C                     __end_of_adc_int_t_handler:
 33452                           	opt callstack 0
 33453                           
 33454 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33455 ;; Defined at:
 33456 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33457 ;; Parameters:    Size  Location     Type
 33458 ;;		None
 33459 ;; Auto vars:     Size  Location     Type
 33460 ;;		None
 33461 ;; Return value:  Size  Location     Type
 33462 ;;                  1  [STACK] void 
 33463 ;; Registers used:
 33464 ;;		None
 33465 ;; Tracked objects:
 33466 ;;		On entry : 3F/0
 33467 ;;		On exit  : 0/0
 33468 ;;		Unchanged: 0/0
 33469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33474 ;;Total ram usage:        0 bytes
 33475 ;; Hardware stack levels used:    1
 33476 ;; This function calls:
 33477 ;;		Nothing
 33478 ;; This function is called by:
 33479 ;;		_ADCC_Initialize
 33480 ;;		_ADCC_ISR
 33481 ;;		_ADCC_ThresholdISR
 33482 ;; This function uses a reentrant model
 33483 ;;
 33484                           
 33485                           	psect	text157
 33486  01B720                     __ptext157:
 33487                           	opt callstack 0
 33488  01B720                     _ADCC_DefaultInterruptHandler:
 33489                           	opt callstack 4
 33490                           
 33491                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33492                           
 33493                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33494                           ;incstack = 0
 33495  01B720  0012               	return		;funcret
 33496  01B722                     __end_of_ADCC_DefaultInterruptHandler:
 33497                           	opt callstack 0
 33498                           
 33499 ;; *************** function _adc_int_handler *****************
 33500 ;; Defined at:
 33501 ;;		line 133 in file "daq.c"
 33502 ;; Parameters:    Size  Location     Type
 33503 ;;		None
 33504 ;; Auto vars:     Size  Location     Type
 33505 ;;		None
 33506 ;; Return value:  Size  Location     Type
 33507 ;;                  1  [STACK] void 
 33508 ;; Registers used:
 33509 ;;		None
 33510 ;; Tracked objects:
 33511 ;;		On entry : 3F/0
 33512 ;;		On exit  : 0/0
 33513 ;;		Unchanged: 0/0
 33514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33519 ;;Total ram usage:        0 bytes
 33520 ;; Hardware stack levels used:    1
 33521 ;; This function calls:
 33522 ;;		Nothing
 33523 ;; This function is called by:
 33524 ;;		_start_adc_scan
 33525 ;;		_ADCC_ISR
 33526 ;; This function uses a reentrant model
 33527 ;;
 33528                           
 33529                           	psect	text158
 33530  01B722                     __ptext158:
 33531                           	opt callstack 0
 33532  01B722                     _adc_int_handler:
 33533                           	opt callstack 4
 33534                           
 33535                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33536                           
 33537                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33538                           ;incstack = 0
 33539  01B722  0012               	return		;funcret
 33540  01B724                     __end_of_adc_int_handler:
 33541                           	opt callstack 0
 33542                           
 33543 ;; *************** function _ADCC_ThresholdISR *****************
 33544 ;; Defined at:
 33545 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33546 ;; Parameters:    Size  Location     Type
 33547 ;;		None
 33548 ;; Auto vars:     Size  Location     Type
 33549 ;;		None
 33550 ;; Return value:  Size  Location     Type
 33551 ;;                  1    wreg      void 
 33552 ;; Registers used:
 33553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33554 ;; Tracked objects:
 33555 ;;		On entry : 0/0
 33556 ;;		On exit  : 0/0
 33557 ;;		Unchanged: 0/0
 33558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33561 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33562 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33563 ;;Total ram usage:        5 bytes
 33564 ;; Hardware stack levels used:    1
 33565 ;; Hardware stack levels required when called:    2
 33566 ;; This function calls:
 33567 ;;		Absolute function
 33568 ;;		_ADCC_DefaultInterruptHandler
 33569 ;;		_adc_int_t_handler
 33570 ;; This function is called by:
 33571 ;;		Interrupt level 2
 33572 ;; This function uses a non-reentrant model
 33573 ;;
 33574                           
 33575                           	psect	text159
 33576  01A500                     __ptext159:
 33577                           	opt callstack 0
 33578  01A500                     _ADCC_ThresholdISR:
 33579                           	opt callstack 3
 33580                           
 33581                           ;incstack = 0
 33582  01A500  0060  F0A0  F001   	movff	btemp,??_ADCC_ThresholdISR
 33583  01A506  0060  F0A4  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33584  01A50C  0060  F0C0  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33585  01A512  0060  F0C4  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33586  01A518  0060  F0CC  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33587  01A51E  EE14  F142         	lfsr	1,___inthi_sp
 33588                           
 33589                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33590  01A522  0139               	movlb	57	; () banked
 33591  01A524  97A1               	bcf	161,3,b	;volatile
 33592                           
 33593                           ; BSR set to: 57
 33594                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33595  01A526  0100               	movlb	0	; () banked
 33596  01A528  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33597  01A52A  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33598  01A52C  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33599  01A52E  B4D8               	btfsc	status,2,c
 33600  01A530  D00C               	goto	i2u1000_49
 33601                           
 33602                           ; BSR set to: 0
 33603                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33604  01A532  D801               	call	i2u1000_48
 33605  01A534  D00A               	goto	i2u1000_49
 33606  01A536                     i2u1000_48:
 33607  01A536  0005               	push	
 33608  01A538  6EFA               	movwf	pclath,c
 33609  01A53A  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33610  01A53C  6EFD               	movwf	tosl,c
 33611  01A53E  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33612  01A540  6EFE               	movwf	tosh,c
 33613  01A542  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33614  01A544  6EFF               	movwf	tosu,c
 33615  01A546  50FA               	movf	pclath,w,c
 33616  01A548  0012               	return		;indir
 33617  01A54A                     i2u1000_49:
 33618  01A54A  0060  F014  F033   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33619  01A550  0060  F010  F031   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33620  01A556  0060  F00C  F030   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33621  01A55C  0060  F008  F029   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33622  01A562  0060  F004  F028   	movff	??_ADCC_ThresholdISR,btemp
 33623  01A568  0011               	retfie		f
 33624  01A56A                     __end_of_ADCC_ThresholdISR:
 33625                           	opt callstack 0
 33626                           
 33627 ;; *************** function _UART1_rx_vect_isr *****************
 33628 ;; Defined at:
 33629 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33630 ;; Parameters:    Size  Location     Type
 33631 ;;		None
 33632 ;; Auto vars:     Size  Location     Type
 33633 ;;		None
 33634 ;; Return value:  Size  Location     Type
 33635 ;;                  1    wreg      void 
 33636 ;; Registers used:
 33637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33638 ;; Tracked objects:
 33639 ;;		On entry : 0/0
 33640 ;;		On exit  : 0/0
 33641 ;;		Unchanged: 0/0
 33642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33647 ;;Total ram usage:        0 bytes
 33648 ;; Hardware stack levels used:    1
 33649 ;; Hardware stack levels required when called:    1
 33650 ;; This function calls:
 33651 ;;		Absolute function
 33652 ;;		_UART1_Receive_ISR
 33653 ;; This function is called by:
 33654 ;;		Interrupt level 2
 33655 ;; This function uses a non-reentrant model
 33656 ;;
 33657                           
 33658                           	psect	text160
 33659  01B2DC                     __ptext160:
 33660                           	opt callstack 0
 33661  01B2DC                     _UART1_rx_vect_isr:
 33662                           	opt callstack 4
 33663                           
 33664                           ;incstack = 0
 33665  01B2DC  EE14  F142         	lfsr	1,___inthi_sp
 33666                           
 33667                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33668  01B2E0  0100               	movlb	0	; () banked
 33669  01B2E2  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33670  01B2E4  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33671  01B2E6  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33672  01B2E8  B4D8               	btfsc	status,2,c
 33673  01B2EA  0011               	retfie		f
 33674                           
 33675                           ; BSR set to: 0
 33676                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33677  01B2EC  D801               	call	i2u1002_48
 33678  01B2EE  0011               	retfie		f
 33679  01B2F0                     i2u1002_48:
 33680  01B2F0  0005               	push	
 33681  01B2F2  6EFA               	movwf	pclath,c
 33682  01B2F4  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33683  01B2F6  6EFD               	movwf	tosl,c
 33684  01B2F8  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33685  01B2FA  6EFE               	movwf	tosh,c
 33686  01B2FC  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33687  01B2FE  6EFF               	movwf	tosu,c
 33688  01B300  50FA               	movf	pclath,w,c
 33689  01B302  0012               	return		;indir
 33690  01B304                     __end_of_UART1_rx_vect_isr:
 33691                           	opt callstack 0
 33692                           
 33693 ;; *************** function _UART1_Receive_ISR *****************
 33694 ;; Defined at:
 33695 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33696 ;; Parameters:    Size  Location     Type
 33697 ;;		None
 33698 ;; Auto vars:     Size  Location     Type
 33699 ;;		None
 33700 ;; Return value:  Size  Location     Type
 33701 ;;                  1  [STACK] void 
 33702 ;; Registers used:
 33703 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33704 ;; Tracked objects:
 33705 ;;		On entry : 3F/0
 33706 ;;		On exit  : 0/0
 33707 ;;		Unchanged: 0/0
 33708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33713 ;;Total ram usage:        0 bytes
 33714 ;; Hardware stack levels used:    1
 33715 ;; This function calls:
 33716 ;;		Nothing
 33717 ;; This function is called by:
 33718 ;;		_UART1_Initialize
 33719 ;;		_UART1_rx_vect_isr
 33720 ;; This function uses a reentrant model
 33721 ;;
 33722                           
 33723                           	psect	text161
 33724  01B544                     __ptext161:
 33725                           	opt callstack 0
 33726  01B544                     _UART1_Receive_ISR:
 33727                           	opt callstack 4
 33728                           
 33729                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33730                           
 33731                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33732                           ;incstack = 0
 33733  01B544  505F               	movf	_uart1RxHead^0,w,c
 33734  01B546  0F6C               	addlw	low _uart1RxBuffer
 33735  01B548  6ED9               	movwf	fsr2l,c
 33736  01B54A  6ADA               	clrf	fsr2h,c
 33737  01B54C  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33738  01B552  2A5F               	incf	_uart1RxHead^0,f,c	;volatile
 33739                           
 33740                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33741  01B554  0E07               	movlw	7
 33742  01B556  645F               	cpfsgt	_uart1RxHead^0,c
 33743  01B558  D001               	goto	l10400
 33744                           
 33745                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33746  01B55A  6A5F               	clrf	_uart1RxHead^0,c	;volatile
 33747  01B55C                     l10400:
 33748                           
 33749                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33750  01B55C  2A5D               	incf	_uart1RxCount^0,f,c	;volatile
 33751                           
 33752                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33753  01B55E  0012               	return		;funcret
 33754  01B560                     __end_of_UART1_Receive_ISR:
 33755                           	opt callstack 0
 33756                           
 33757 ;; *************** function _UART2_tx_vect_isr *****************
 33758 ;; Defined at:
 33759 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33760 ;; Parameters:    Size  Location     Type
 33761 ;;		None
 33762 ;; Auto vars:     Size  Location     Type
 33763 ;;		None
 33764 ;; Return value:  Size  Location     Type
 33765 ;;                  1    wreg      void 
 33766 ;; Registers used:
 33767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33768 ;; Tracked objects:
 33769 ;;		On entry : 0/0
 33770 ;;		On exit  : 0/0
 33771 ;;		Unchanged: 0/0
 33772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33777 ;;Total ram usage:        0 bytes
 33778 ;; Hardware stack levels used:    1
 33779 ;; Hardware stack levels required when called:    1
 33780 ;; This function calls:
 33781 ;;		Absolute function
 33782 ;;		_UART2_Transmit_ISR
 33783 ;; This function is called by:
 33784 ;;		Interrupt level 2
 33785 ;; This function uses a non-reentrant model
 33786 ;;
 33787                           
 33788                           	psect	text162
 33789  01B304                     __ptext162:
 33790                           	opt callstack 0
 33791  01B304                     _UART2_tx_vect_isr:
 33792                           	opt callstack 4
 33793                           
 33794                           ;incstack = 0
 33795  01B304  EE14  F142         	lfsr	1,___inthi_sp
 33796                           
 33797                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 33798  01B308  0100               	movlb	0	; () banked
 33799  01B30A  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33800  01B30C  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33801  01B30E  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33802  01B310  B4D8               	btfsc	status,2,c
 33803  01B312  0011               	retfie		f
 33804                           
 33805                           ; BSR set to: 0
 33806                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 33807  01B314  D801               	call	i2u1004_48
 33808  01B316  0011               	retfie		f
 33809  01B318                     i2u1004_48:
 33810  01B318  0005               	push	
 33811  01B31A  6EFA               	movwf	pclath,c
 33812  01B31C  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33813  01B31E  6EFD               	movwf	tosl,c
 33814  01B320  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33815  01B322  6EFE               	movwf	tosh,c
 33816  01B324  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33817  01B326  6EFF               	movwf	tosu,c
 33818  01B328  50FA               	movf	pclath,w,c
 33819  01B32A  0012               	return		;indir
 33820  01B32C                     __end_of_UART2_tx_vect_isr:
 33821                           	opt callstack 0
 33822                           
 33823 ;; *************** function _UART2_Transmit_ISR *****************
 33824 ;; Defined at:
 33825 ;;		line 213 in file "mcc_generated_files/uart2.c"
 33826 ;; Parameters:    Size  Location     Type
 33827 ;;		None
 33828 ;; Auto vars:     Size  Location     Type
 33829 ;;		None
 33830 ;; Return value:  Size  Location     Type
 33831 ;;                  1  [STACK] void 
 33832 ;; Registers used:
 33833 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33834 ;; Tracked objects:
 33835 ;;		On entry : 3F/0
 33836 ;;		On exit  : 3B/39
 33837 ;;		Unchanged: 0/0
 33838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33843 ;;Total ram usage:        0 bytes
 33844 ;; Hardware stack levels used:    1
 33845 ;; This function calls:
 33846 ;;		Nothing
 33847 ;; This function is called by:
 33848 ;;		_UART2_Initialize
 33849 ;;		_UART2_tx_vect_isr
 33850 ;; This function uses a reentrant model
 33851 ;;
 33852                           
 33853                           	psect	text163
 33854  01B054                     __ptext163:
 33855                           	opt callstack 0
 33856  01B054                     _UART2_Transmit_ISR:
 33857                           	opt callstack 4
 33858                           
 33859                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33860                           
 33861                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33862                           ;incstack = 0
 33863  01B054  0E40               	movlw	64
 33864  01B056  605A               	cpfslt	_uart2TxBufferRemaining^0,c
 33865  01B058  D010               	goto	l673
 33866                           
 33867                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33868  01B05A  0E54               	movlw	low _uart2TxBuffer
 33869  01B05C  245B               	addwf	_uart2TxTail^0,w,c	;volatile
 33870  01B05E  6ED9               	movwf	fsr2l,c
 33871  01B060  6ADA               	clrf	fsr2h,c
 33872  01B062  0E03               	movlw	high _uart2TxBuffer
 33873  01B064  22DA               	addwfc	fsr2h,f,c
 33874  01B066  50DF               	movf	indf2,w,c
 33875  01B068  013D               	movlb	61	; () banked
 33876  01B06A  6FD2               	movwf	210,b	;volatile
 33877                           
 33878                           ; BSR set to: 61
 33879  01B06C  2A5B               	incf	_uart2TxTail^0,f,c	;volatile
 33880                           
 33881                           ; BSR set to: 61
 33882                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33883  01B06E  0E3F               	movlw	63
 33884  01B070  645B               	cpfsgt	_uart2TxTail^0,c
 33885  01B072  D001               	goto	l10412
 33886                           
 33887                           ; BSR set to: 61
 33888                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33889  01B074  6A5B               	clrf	_uart2TxTail^0,c	;volatile
 33890  01B076                     l10412:
 33891                           
 33892                           ; BSR set to: 61
 33893                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33894  01B076  2A5A               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33895                           
 33896                           ;mcc_generated_files/uart2.c: 224:     }
 33897  01B078  0012               	return	
 33898  01B07A                     l673:
 33899                           
 33900                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33901  01B07A  0139               	movlb	57	; () banked
 33902  01B07C  9796               	bcf	150,3,b	;volatile
 33903                           
 33904                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33905  01B07E  0012               	return		;funcret
 33906  01B080                     __end_of_UART2_Transmit_ISR:
 33907                           	opt callstack 0
 33908                           
 33909 ;; *************** function _UART2_rx_vect_isr *****************
 33910 ;; Defined at:
 33911 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33912 ;; Parameters:    Size  Location     Type
 33913 ;;		None
 33914 ;; Auto vars:     Size  Location     Type
 33915 ;;		None
 33916 ;; Return value:  Size  Location     Type
 33917 ;;                  1    wreg      void 
 33918 ;; Registers used:
 33919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33920 ;; Tracked objects:
 33921 ;;		On entry : 0/0
 33922 ;;		On exit  : 0/0
 33923 ;;		Unchanged: 0/0
 33924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33929 ;;Total ram usage:        0 bytes
 33930 ;; Hardware stack levels used:    1
 33931 ;; Hardware stack levels required when called:    1
 33932 ;; This function calls:
 33933 ;;		Absolute function
 33934 ;;		_UART2_Receive_ISR
 33935 ;; This function is called by:
 33936 ;;		Interrupt level 2
 33937 ;; This function uses a non-reentrant model
 33938 ;;
 33939                           
 33940                           	psect	text164
 33941  01B32C                     __ptext164:
 33942                           	opt callstack 0
 33943  01B32C                     _UART2_rx_vect_isr:
 33944                           	opt callstack 4
 33945                           
 33946                           ;incstack = 0
 33947  01B32C  EE14  F142         	lfsr	1,___inthi_sp
 33948                           
 33949                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33950  01B330  0100               	movlb	0	; () banked
 33951  01B332  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33952  01B334  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33953  01B336  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33954  01B338  B4D8               	btfsc	status,2,c
 33955  01B33A  0011               	retfie		f
 33956                           
 33957                           ; BSR set to: 0
 33958                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33959  01B33C  D801               	call	i2u1006_48
 33960  01B33E  0011               	retfie		f
 33961  01B340                     i2u1006_48:
 33962  01B340  0005               	push	
 33963  01B342  6EFA               	movwf	pclath,c
 33964  01B344  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33965  01B346  6EFD               	movwf	tosl,c
 33966  01B348  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33967  01B34A  6EFE               	movwf	tosh,c
 33968  01B34C  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33969  01B34E  6EFF               	movwf	tosu,c
 33970  01B350  50FA               	movf	pclath,w,c
 33971  01B352  0012               	return		;indir
 33972  01B354                     __end_of_UART2_rx_vect_isr:
 33973                           	opt callstack 0
 33974                           
 33975 ;; *************** function _UART2_Receive_ISR *****************
 33976 ;; Defined at:
 33977 ;;		line 233 in file "mcc_generated_files/uart2.c"
 33978 ;; Parameters:    Size  Location     Type
 33979 ;;		None
 33980 ;; Auto vars:     Size  Location     Type
 33981 ;;		None
 33982 ;; Return value:  Size  Location     Type
 33983 ;;                  1  [STACK] void 
 33984 ;; Registers used:
 33985 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33986 ;; Tracked objects:
 33987 ;;		On entry : 3F/0
 33988 ;;		On exit  : 0/0
 33989 ;;		Unchanged: 0/0
 33990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33991 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33994 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33995 ;;Total ram usage:        0 bytes
 33996 ;; Hardware stack levels used:    1
 33997 ;; This function calls:
 33998 ;;		Nothing
 33999 ;; This function is called by:
 34000 ;;		_UART2_Initialize
 34001 ;;		_UART2_rx_vect_isr
 34002 ;; This function uses a reentrant model
 34003 ;;
 34004                           
 34005                           	psect	text165
 34006  01B50A                     __ptext165:
 34007                           	opt callstack 0
 34008  01B50A                     _UART2_Receive_ISR:
 34009                           	opt callstack 4
 34010                           
 34011                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 34012                           
 34013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34014                           ;incstack = 0
 34015  01B50A  0E00               	movlw	low _uart2RxBuffer
 34016  01B50C  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 34017  01B50E  6ED9               	movwf	fsr2l,c
 34018  01B510  6ADA               	clrf	fsr2h,c
 34019  01B512  0E05               	movlw	high _uart2RxBuffer
 34020  01B514  22DA               	addwfc	fsr2h,f,c
 34021  01B516  006F F743 FFDF     	movff	15824,indf2	;volatile
 34022  01B51C  2A59               	incf	_uart2RxHead^0,f,c	;volatile
 34023                           
 34024                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34025  01B51E  2859               	incf	_uart2RxHead^0,w,c
 34026  01B520  B4D8               	btfsc	status,2,c
 34027                           
 34028                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34029  01B522  6A59               	clrf	_uart2RxHead^0,c	;volatile
 34030                           
 34031                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34032  01B524  2A57               	incf	_uart2RxCount^0,f,c	;volatile
 34033                           
 34034                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34035  01B526  0012               	return		;funcret
 34036  01B528                     __end_of_UART2_Receive_ISR:
 34037                           	opt callstack 0
 34038                           
 34039 ;; *************** function _TMR6_ISR *****************
 34040 ;; Defined at:
 34041 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34042 ;; Parameters:    Size  Location     Type
 34043 ;;		None
 34044 ;; Auto vars:     Size  Location     Type
 34045 ;;		None
 34046 ;; Return value:  Size  Location     Type
 34047 ;;                  1    wreg      void 
 34048 ;; Registers used:
 34049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34050 ;; Tracked objects:
 34051 ;;		On entry : 0/0
 34052 ;;		On exit  : 0/0
 34053 ;;		Unchanged: 0/0
 34054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34057 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34058 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34059 ;;Total ram usage:        1 bytes
 34060 ;; Hardware stack levels used:    1
 34061 ;; Hardware stack levels required when called:    2
 34062 ;; This function calls:
 34063 ;;		_TMR6_CallBack
 34064 ;; This function is called by:
 34065 ;;		Interrupt level 2
 34066 ;; This function uses a non-reentrant model
 34067 ;;
 34068                           
 34069                           	psect	text166
 34070  01B57C                     __ptext166:
 34071                           	opt callstack 0
 34072  01B57C                     _TMR6_ISR:
 34073                           	opt callstack 3
 34074                           
 34075                           ;incstack = 0
 34076  01B57C  0060  F0A0  F006   	movff	btemp,??_TMR6_ISR
 34077  01B582  EE14  F142         	lfsr	1,___inthi_sp
 34078                           
 34079                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34080  01B586  0139               	movlb	57	; () banked
 34081  01B588  91A9               	bcf	169,0,b	;volatile
 34082                           
 34083                           ; BSR set to: 57
 34084                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34085  01B58A  EC16  F0DA         	call	_TMR6_CallBack	;wreg free
 34086  01B58E  0060  F018  F028   	movff	??_TMR6_ISR,btemp
 34087  01B594  0011               	retfie		f
 34088  01B596                     __end_of_TMR6_ISR:
 34089                           	opt callstack 0
 34090                           
 34091 ;; *************** function _TMR6_CallBack *****************
 34092 ;; Defined at:
 34093 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34094 ;; Parameters:    Size  Location     Type
 34095 ;;		None
 34096 ;; Auto vars:     Size  Location     Type
 34097 ;;		None
 34098 ;; Return value:  Size  Location     Type
 34099 ;;                  1  [STACK] void 
 34100 ;; Registers used:
 34101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34102 ;; Tracked objects:
 34103 ;;		On entry : 3F/39
 34104 ;;		On exit  : 0/0
 34105 ;;		Unchanged: 0/0
 34106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34111 ;;Total ram usage:        0 bytes
 34112 ;; Hardware stack levels used:    1
 34113 ;; Hardware stack levels required when called:    1
 34114 ;; This function calls:
 34115 ;;		Absolute function
 34116 ;;		_TMR6_DefaultInterruptHandler
 34117 ;; This function is called by:
 34118 ;;		_TMR6_ISR
 34119 ;; This function uses a reentrant model
 34120 ;;
 34121                           
 34122                           	psect	text167
 34123  01B42C                     __ptext167:
 34124                           	opt callstack 0
 34125  01B42C                     _TMR6_CallBack:
 34126                           	opt callstack 3
 34127                           
 34128                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34129                           
 34130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34131                           ;incstack = 0
 34132  01B42C  0100               	movlb	0	; () banked
 34133  01B42E  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34134  01B430  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34135  01B432  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34136  01B434  B4D8               	btfsc	status,2,c
 34137  01B436  0012               	return	
 34138                           
 34139                           ; BSR set to: 0
 34140                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34141  01B438  D801               	call	u963_48
 34142  01B43A  0012               	return	
 34143  01B43C                     u963_48:
 34144  01B43C  0005               	push	
 34145  01B43E  6EFA               	movwf	pclath,c
 34146  01B440  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34147  01B442  6EFD               	movwf	tosl,c
 34148  01B444  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34149  01B446  6EFE               	movwf	tosh,c
 34150  01B448  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34151  01B44A  6EFF               	movwf	tosu,c
 34152  01B44C  50FA               	movf	pclath,w,c
 34153  01B44E  0012               	return		;indir
 34154  01B450                     __end_of_TMR6_CallBack:
 34155                           	opt callstack 0
 34156                           
 34157 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34158 ;; Defined at:
 34159 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34160 ;; Parameters:    Size  Location     Type
 34161 ;;		None
 34162 ;; Auto vars:     Size  Location     Type
 34163 ;;  i               1  [STACK] unsigned char 
 34164 ;; Return value:  Size  Location     Type
 34165 ;;                  1  [STACK] void 
 34166 ;; Registers used:
 34167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34168 ;; Tracked objects:
 34169 ;;		On entry : 3F/0
 34170 ;;		On exit  : 0/0
 34171 ;;		Unchanged: 0/0
 34172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34177 ;;Total ram usage:        0 bytes
 34178 ;; Hardware stack levels used:    1
 34179 ;; This function calls:
 34180 ;;		Nothing
 34181 ;; This function is called by:
 34182 ;;		_TMR6_Initialize
 34183 ;;		_TMR6_CallBack
 34184 ;; This function uses a reentrant model
 34185 ;;
 34186                           
 34187                           	psect	text168
 34188  01A95C                     __ptext168:
 34189                           	opt callstack 0
 34190  01A95C                     _TMR6_DefaultInterruptHandler:
 34191                           	opt callstack 0
 34192                           
 34193                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34194  01A95C  52E6               	movf	postinc1,f,c
 34195                           
 34196                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34197                           ;stkvar	_i @ sp[(-1)+0]
 34198                           
 34199                           ;incstack = 0
 34200  01A95E  0EFF               	movlw	-1
 34201  01A960  6AE3               	clrf	plusw1,c
 34202  01A962                     l9986:
 34203                           
 34204                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34205                           ;stkvar	_i @ sp[(-1)+0]
 34206  01A962  0EFF               	movlw	-1
 34207  01A964  50E3               	movf	plusw1,w,c
 34208  01A966  0D02               	mullw	2
 34209  01A968  0E94               	movlw	low _tickCount
 34210  01A96A  24F3               	addwf	243,w,c
 34211  01A96C  6ED9               	movwf	fsr2l,c
 34212  01A96E  0E03               	movlw	high _tickCount
 34213  01A970  20F4               	addwfc	prodh,w,c
 34214  01A972  6EDA               	movwf	fsr2h,c
 34215  01A974  50DE               	movf	postinc2,w,c
 34216  01A976  10DE               	iorwf	postinc2,w,c
 34217  01A978  B4D8               	btfsc	status,2,c
 34218  01A97A  D00C               	goto	l9990
 34219                           
 34220                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34221                           ;stkvar	_i @ sp[(-1)+0]
 34222  01A97C  0EFF               	movlw	-1
 34223  01A97E  50E3               	movf	plusw1,w,c
 34224  01A980  0D02               	mullw	2
 34225  01A982  0E94               	movlw	low _tickCount
 34226  01A984  24F3               	addwf	243,w,c
 34227  01A986  6ED9               	movwf	fsr2l,c
 34228  01A988  0E03               	movlw	high _tickCount
 34229  01A98A  20F4               	addwfc	prodh,w,c
 34230  01A98C  6EDA               	movwf	fsr2h,c
 34231  01A98E  06DE               	decf	postinc2,f,c
 34232  01A990  0E00               	movlw	0
 34233  01A992  5ADD               	subwfb	postdec2,f,c
 34234  01A994                     l9990:
 34235                           
 34236                           ;mcc_generated_files/tmr6.c: 207:  }
 34237                           ;stkvar	_i @ sp[(-1)+0]
 34238  01A994  0EFF               	movlw	-1
 34239  01A996  2AE3               	incf	plusw1,f,c
 34240                           
 34241                           ;stkvar	_i @ sp[(-1)+0]
 34242  01A998  0EFF               	movlw	-1
 34243  01A99A  006F FF8C  F028    	movff	plusw1,btemp
 34244  01A9A0  0E0C               	movlw	12
 34245  01A9A2  6428               	cpfsgt	btemp^0,c
 34246  01A9A4  D7DE               	goto	l9986
 34247                           
 34248                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34249  01A9A6  52E5               	movf	postdec1,f,c
 34250  01A9A8  0012               	return		;funcret
 34251  01A9AA                     __end_of_TMR6_DefaultInterruptHandler:
 34252                           	opt callstack 0
 34253                           
 34254 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34255 ;; Defined at:
 34256 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34257 ;; Parameters:    Size  Location     Type
 34258 ;;		None
 34259 ;; Auto vars:     Size  Location     Type
 34260 ;;		None
 34261 ;; Return value:  Size  Location     Type
 34262 ;;                  1    wreg      void 
 34263 ;; Registers used:
 34264 ;;		None
 34265 ;; Tracked objects:
 34266 ;;		On entry : 0/0
 34267 ;;		On exit  : 3F/0
 34268 ;;		Unchanged: 0/0
 34269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34273 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34274 ;;Total ram usage:        0 bytes
 34275 ;; Hardware stack levels used:    1
 34276 ;; This function calls:
 34277 ;;		Nothing
 34278 ;; This function is called by:
 34279 ;;		Interrupt level 2
 34280 ;; This function uses a non-reentrant model
 34281 ;;
 34282                           
 34283                           	psect	text169
 34284  01B68C                     __ptext169:
 34285                           	opt callstack 0
 34286  01B68C                     _DMA1_DMASCNT_ISR:
 34287                           	opt callstack 5
 34288                           
 34289                           ;incstack = 0
 34290  01B68C  EE14  F142         	lfsr	1,___inthi_sp
 34291                           
 34292                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34293  01B690  0139               	movlb	57	; () banked
 34294  01B692  91A2               	bcf	162,0,b	;volatile
 34295                           
 34296                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34297  01B694  0100               	movlb	0	; () banked
 34298  01B696  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34299                           
 34300                           ; BSR set to: 0
 34301  01B698  0011               	retfie		f
 34302  01B69A                     __end_of_DMA1_DMASCNT_ISR:
 34303                           	opt callstack 0
 34304                           
 34305 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34306 ;; Defined at:
 34307 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34308 ;; Parameters:    Size  Location     Type
 34309 ;;		None
 34310 ;; Auto vars:     Size  Location     Type
 34311 ;;		None
 34312 ;; Return value:  Size  Location     Type
 34313 ;;                  1    wreg      void 
 34314 ;; Registers used:
 34315 ;;		None
 34316 ;; Tracked objects:
 34317 ;;		On entry : 0/0
 34318 ;;		On exit  : 3F/39
 34319 ;;		Unchanged: 0/0
 34320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34325 ;;Total ram usage:        0 bytes
 34326 ;; Hardware stack levels used:    1
 34327 ;; This function calls:
 34328 ;;		Nothing
 34329 ;; This function is called by:
 34330 ;;		Interrupt level 2
 34331 ;; This function uses a non-reentrant model
 34332 ;;
 34333                           
 34334                           	psect	text170
 34335  01B6B0                     __ptext170:
 34336                           	opt callstack 0
 34337  01B6B0                     _DMA1_DMADCNT_ISR:
 34338                           	opt callstack 5
 34339                           
 34340                           ; BSR set to: 0
 34341                           ;incstack = 0
 34342  01B6B0  EE14  F142         	lfsr	1,___inthi_sp
 34343                           
 34344                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34345  01B6B4  0139               	movlb	57	; () banked
 34346  01B6B6  93A2               	bcf	162,1,b	;volatile
 34347                           
 34348                           ; BSR set to: 57
 34349  01B6B8  0011               	retfie		f
 34350  01B6BA                     __end_of_DMA1_DMADCNT_ISR:
 34351                           	opt callstack 0
 34352                           
 34353 ;; *************** function _DMA1_DMAA_ISR *****************
 34354 ;; Defined at:
 34355 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34356 ;; Parameters:    Size  Location     Type
 34357 ;;		None
 34358 ;; Auto vars:     Size  Location     Type
 34359 ;;		None
 34360 ;; Return value:  Size  Location     Type
 34361 ;;                  1    wreg      void 
 34362 ;; Registers used:
 34363 ;;		None
 34364 ;; Tracked objects:
 34365 ;;		On entry : 0/0
 34366 ;;		On exit  : 3F/39
 34367 ;;		Unchanged: 0/0
 34368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34373 ;;Total ram usage:        0 bytes
 34374 ;; Hardware stack levels used:    1
 34375 ;; This function calls:
 34376 ;;		Nothing
 34377 ;; This function is called by:
 34378 ;;		Interrupt level 2
 34379 ;; This function uses a non-reentrant model
 34380 ;;
 34381                           
 34382                           	psect	text171
 34383  01B6BC                     __ptext171:
 34384                           	opt callstack 0
 34385  01B6BC                     _DMA1_DMAA_ISR:
 34386                           	opt callstack 5
 34387                           
 34388                           ; BSR set to: 57
 34389                           ;incstack = 0
 34390  01B6BC  EE14  F142         	lfsr	1,___inthi_sp
 34391                           
 34392                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34393  01B6C0  0139               	movlb	57	; () banked
 34394  01B6C2  97A2               	bcf	162,3,b	;volatile
 34395                           
 34396                           ; BSR set to: 57
 34397  01B6C4  0011               	retfie		f
 34398  01B6C6                     __end_of_DMA1_DMAA_ISR:
 34399                           	opt callstack 0
 34400                           
 34401 ;; *************** function _DMA1_DMAOR_ISR *****************
 34402 ;; Defined at:
 34403 ;;		line 155 in file "mcc_generated_files/dma1.c"
 34404 ;; Parameters:    Size  Location     Type
 34405 ;;		None
 34406 ;; Auto vars:     Size  Location     Type
 34407 ;;		None
 34408 ;; Return value:  Size  Location     Type
 34409 ;;                  1    wreg      void 
 34410 ;; Registers used:
 34411 ;;		None
 34412 ;; Tracked objects:
 34413 ;;		On entry : 0/0
 34414 ;;		On exit  : 3F/39
 34415 ;;		Unchanged: 0/0
 34416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34421 ;;Total ram usage:        0 bytes
 34422 ;; Hardware stack levels used:    1
 34423 ;; This function calls:
 34424 ;;		Nothing
 34425 ;; This function is called by:
 34426 ;;		Interrupt level 2
 34427 ;; This function uses a non-reentrant model
 34428 ;;
 34429                           
 34430                           	psect	text172
 34431  01B6C8                     __ptext172:
 34432                           	opt callstack 0
 34433  01B6C8                     _DMA1_DMAOR_ISR:
 34434                           	opt callstack 5
 34435                           
 34436                           ; BSR set to: 57
 34437                           ;incstack = 0
 34438  01B6C8  EE14  F142         	lfsr	1,___inthi_sp
 34439                           
 34440                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34441  01B6CC  0139               	movlb	57	; () banked
 34442  01B6CE  95A2               	bcf	162,2,b	;volatile
 34443                           
 34444                           ; BSR set to: 57
 34445  01B6D0  0011               	retfie		f
 34446  01B6D2                     __end_of_DMA1_DMAOR_ISR:
 34447                           	opt callstack 0
 34448                           
 34449                           ;
 34450                           ; Interrupt Vector Table @ 0x8
 34451                           ;
 34452                           
 34453                           	psect	ivt0x8
 34454  000008                     __pivt0x8:
 34455                           	opt callstack 0
 34456  000008                     ivt0x8_base:
 34457                           	opt callstack 0
 34458                           
 34459                           ; Vector 0 : SWINT
 34460  000008  6DC5               	dw	_Default_ISR shr (0+2)
 34461                           
 34462                           ; Vector 1 : HLVD
 34463  00000A  6DC5               	dw	_Default_ISR shr (0+2)
 34464                           
 34465                           ; Vector 2 : OSF
 34466  00000C  6DC5               	dw	_Default_ISR shr (0+2)
 34467                           
 34468                           ; Vector 3 : CSW
 34469  00000E  6DC5               	dw	_Default_ISR shr (0+2)
 34470                           
 34471                           ; Vector 4 : NVM
 34472  000010  6DC5               	dw	_Default_ISR shr (0+2)
 34473                           
 34474                           ; Vector 5 : SCAN
 34475  000012  6DC5               	dw	_Default_ISR shr (0+2)
 34476                           
 34477                           ; Vector 6 : CRC
 34478  000014  6DC5               	dw	_Default_ISR shr (0+2)
 34479                           
 34480                           ; Vector 7 : IOC
 34481  000016  6DC5               	dw	_Default_ISR shr (0+2)
 34482                           
 34483                           ; Vector 8 : INT0
 34484  000018  6D9F               	dw	_INT0_ISR shr (0+2)
 34485                           
 34486                           ; Vector 9 : ZCD
 34487  00001A  6DC5               	dw	_Default_ISR shr (0+2)
 34488                           
 34489                           ; Vector 10 : AD
 34490  00001C  6C0A               	dw	_ADCC_ISR shr (0+2)
 34491                           
 34492                           ; Vector 11 : ADT
 34493  00001E  6940               	dw	_ADCC_ThresholdISR shr (0+2)
 34494                           
 34495                           ; Vector 12 : CMP1
 34496  000020  6DC5               	dw	_Default_ISR shr (0+2)
 34497                           
 34498                           ; Vector 13 : SMT1
 34499  000022  6DC5               	dw	_Default_ISR shr (0+2)
 34500                           
 34501                           ; Vector 14 : SMT1PRA
 34502  000024  6DC5               	dw	_Default_ISR shr (0+2)
 34503                           
 34504                           ; Vector 15 : SMT1PRW
 34505  000026  6DC5               	dw	_Default_ISR shr (0+2)
 34506                           
 34507                           ; Vector 16 : DMA1SCNT
 34508  000028  6DA3               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34509                           
 34510                           ; Vector 17 : DMA1DCNT
 34511  00002A  6DAC               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34512                           
 34513                           ; Vector 18 : DMA1OR
 34514  00002C  6DB2               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34515                           
 34516                           ; Vector 19 : DMA1A
 34517  00002E  6DAF               	dw	_DMA1_DMAA_ISR shr (0+2)
 34518                           
 34519                           ; Vector 20 : SPI1RX
 34520  000030  6DC5               	dw	_Default_ISR shr (0+2)
 34521                           
 34522                           ; Vector 21 : SPI1TX
 34523  000032  6DC5               	dw	_Default_ISR shr (0+2)
 34524                           
 34525                           ; Vector 22 : SPI1
 34526  000034  6DC5               	dw	_Default_ISR shr (0+2)
 34527                           
 34528                           ; Vector 23 : I2C1RX
 34529  000036  6DC5               	dw	_Default_ISR shr (0+2)
 34530                           
 34531                           ; Vector 24 : I2C1TX
 34532  000038  6DC5               	dw	_Default_ISR shr (0+2)
 34533                           
 34534                           ; Vector 25 : I2C1
 34535  00003A  6DC5               	dw	_Default_ISR shr (0+2)
 34536                           
 34537                           ; Vector 26 : I2C1E
 34538  00003C  6DC5               	dw	_Default_ISR shr (0+2)
 34539                           
 34540                           ; Vector 27 : U1RX
 34541  00003E  6CB7               	dw	_UART1_rx_vect_isr shr (0+2)
 34542                           
 34543                           ; Vector 28 : U1TX
 34544  000040  6DC5               	dw	_Default_ISR shr (0+2)
 34545                           
 34546                           ; Vector 29 : U1E
 34547  000042  6DC5               	dw	_Default_ISR shr (0+2)
 34548                           
 34549                           ; Vector 30 : U1
 34550  000044  6DC5               	dw	_Default_ISR shr (0+2)
 34551                           
 34552                           ; Vector 31 : TMR0
 34553  000046  6DC5               	dw	_Default_ISR shr (0+2)
 34554                           
 34555                           ; Vector 32 : TMR1
 34556  000048  6DC5               	dw	_Default_ISR shr (0+2)
 34557                           
 34558                           ; Vector 33 : TMR1G
 34559  00004A  6DC5               	dw	_Default_ISR shr (0+2)
 34560                           
 34561                           ; Vector 34 : TMR2
 34562  00004C  6DC5               	dw	_Default_ISR shr (0+2)
 34563                           
 34564                           ; Vector 35 : CCP1
 34565  00004E  6DC5               	dw	_Default_ISR shr (0+2)
 34566                           
 34567                           ; Vector 36 : Undefined
 34568  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34569                           
 34570                           ; Vector 37 : NCO1
 34571  000052  6DC5               	dw	_Default_ISR shr (0+2)
 34572                           
 34573                           ; Vector 38 : CWG1
 34574  000054  6DC5               	dw	_Default_ISR shr (0+2)
 34575                           
 34576                           ; Vector 39 : CLC1
 34577  000056  6DC5               	dw	_Default_ISR shr (0+2)
 34578                           
 34579                           ; Vector 40 : INT1
 34580  000058  6B48               	dw	_INT1_ISR shr (0+2)
 34581                           
 34582                           ; Vector 41 : CMP2
 34583  00005A  6DC5               	dw	_Default_ISR shr (0+2)
 34584                           
 34585                           ; Vector 42 : DMA2SCNT
 34586  00005C  6DC5               	dw	_Default_ISR shr (0+2)
 34587                           
 34588                           ; Vector 43 : DMA2DCNT
 34589  00005E  6DC5               	dw	_Default_ISR shr (0+2)
 34590                           
 34591                           ; Vector 44 : DMA2OR
 34592  000060  6DC5               	dw	_Default_ISR shr (0+2)
 34593                           
 34594                           ; Vector 45 : DMA2A
 34595  000062  6DC5               	dw	_Default_ISR shr (0+2)
 34596                           
 34597                           ; Vector 46 : I2C2RX
 34598  000064  6DC5               	dw	_Default_ISR shr (0+2)
 34599                           
 34600                           ; Vector 47 : I2C2TX
 34601  000066  6DC5               	dw	_Default_ISR shr (0+2)
 34602                           
 34603                           ; Vector 48 : I2C2
 34604  000068  6DC5               	dw	_Default_ISR shr (0+2)
 34605                           
 34606                           ; Vector 49 : I2C2E
 34607  00006A  6DC5               	dw	_Default_ISR shr (0+2)
 34608                           
 34609                           ; Vector 50 : U2RX
 34610  00006C  6CCB               	dw	_UART2_rx_vect_isr shr (0+2)
 34611                           
 34612                           ; Vector 51 : U2TX
 34613  00006E  6CC1               	dw	_UART2_tx_vect_isr shr (0+2)
 34614                           
 34615                           ; Vector 52 : U2E
 34616  000070  6DC5               	dw	_Default_ISR shr (0+2)
 34617                           
 34618                           ; Vector 53 : U2
 34619  000072  6DC5               	dw	_Default_ISR shr (0+2)
 34620                           
 34621                           ; Vector 54 : TMR3
 34622  000074  6211               	dw	_TMR3_ISR shr (0+2)
 34623                           
 34624                           ; Vector 55 : TMR3G
 34625  000076  6DC5               	dw	_Default_ISR shr (0+2)
 34626                           
 34627                           ; Vector 56 : TMR4
 34628  000078  6DC5               	dw	_Default_ISR shr (0+2)
 34629                           
 34630                           ; Vector 57 : CCP2
 34631  00007A  6DC5               	dw	_Default_ISR shr (0+2)
 34632                           
 34633                           ; Vector 58 : Undefined
 34634  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34635                           
 34636                           ; Vector 59 : CWG2
 34637  00007E  6DC5               	dw	_Default_ISR shr (0+2)
 34638                           
 34639                           ; Vector 60 : CLC2
 34640  000080  6DC5               	dw	_Default_ISR shr (0+2)
 34641                           
 34642                           ; Vector 61 : INT2
 34643  000082  6DC5               	dw	_Default_ISR shr (0+2)
 34644                           
 34645                           ; Vector 62 : Undefined
 34646  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34647                           
 34648                           ; Vector 63 : Undefined
 34649  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34650                           
 34651                           ; Vector 64 : Undefined
 34652  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34653                           
 34654                           ; Vector 65 : Undefined
 34655  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34656                           
 34657                           ; Vector 66 : Undefined
 34658  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34659                           
 34660                           ; Vector 67 : Undefined
 34661  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34662                           
 34663                           ; Vector 68 : Undefined
 34664  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34665                           
 34666                           ; Vector 69 : Undefined
 34667  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34668                           
 34669                           ; Vector 70 : TMR5
 34670  000094  6A03               	dw	_TMR5_ISR shr (0+2)
 34671                           
 34672                           ; Vector 71 : TMR5G
 34673  000096  6DC5               	dw	_Default_ISR shr (0+2)
 34674                           
 34675                           ; Vector 72 : TMR6
 34676  000098  6D5F               	dw	_TMR6_ISR shr (0+2)
 34677                           
 34678                           ; Vector 73 : CCP3
 34679  00009A  6DC5               	dw	_Default_ISR shr (0+2)
 34680                           
 34681                           ; Vector 74 : CWG3
 34682  00009C  6DC5               	dw	_Default_ISR shr (0+2)
 34683                           
 34684                           ; Vector 75 : CLC3
 34685  00009E  6DC5               	dw	_Default_ISR shr (0+2)
 34686                           
 34687                           ; Vector 76 : Undefined
 34688  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34689                           
 34690                           ; Vector 77 : Undefined
 34691  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34692                           
 34693                           ; Vector 78 : Undefined
 34694  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34695                           
 34696                           ; Vector 79 : Undefined
 34697  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34698                           
 34699                           ; Vector 80 : CCP4
 34700  0000A8  6DC5               	dw	_Default_ISR shr (0+2)
 34701                           
 34702                           ; Vector 81 : CLC4
 34703  0000AA  6DC5               	dw	_Default_ISR shr (0+2)
 34704  0000AC                     ivt0x8_undefint:
 34705                           	opt callstack 0
 34706  0000AC  00FF               	reset	
 34707                           
 34708                           	psect	text173
 34709  000000                     __ptext173:
 34710                           	opt callstack 0
 34711                           
 34712                           	psect	rparam
 34713  0000                     
 34714                           	psect	temp
 34715  000028                     btemp:
 34716                           	opt callstack 0
 34717  000028                     	ds	32
 34718  0000                     wtemp0	set	btemp
 34719  0000                     wtemp1	set	btemp+2
 34720  0000                     wtemp2	set	btemp+4
 34721  0000                     wtemp3	set	btemp+6
 34722  0000                     wtemp4	set	btemp+8
 34723  0000                     wtemp5	set	btemp+10
 34724  0000                     wtemp8	set	btemp+1
 34725  0000                     ttemp0	set	btemp
 34726  0000                     ttemp1	set	btemp+3
 34727  0000                     ttemp2	set	btemp+6
 34728  0000                     ttemp3	set	btemp+9
 34729  0000                     ttemp5	set	btemp+1
 34730  0000                     ttemp6	set	btemp+4
 34731  0000                     ttemp7	set	btemp+8
 34732  0000                     ltemp0	set	btemp
 34733  0000                     ltemp1	set	btemp+4
 34734  0000                     ltemp2	set	btemp+8
 34735  0000                     lltemp0	set	btemp
 34736  0000                     lltemp1	set	btemp+8
 34737  0000                     lltemp2	set	btemp+16
 34738  0000                     lltemp3	set	btemp+24
 34739                           tosu	equ	0x3FFF
 34740                           tosh	equ	0x3FFE
 34741                           tosl	equ	0x3FFD
 34742                           stkptr	equ	0x3FFC
 34743                           pclatu	equ	0x3FFB
 34744                           pclath	equ	0x3FFA
 34745                           pcl	equ	0x3FF9
 34746                           tblptru	equ	0x3FF8
 34747                           tblptrh	equ	0x3FF7
 34748                           tblptrl	equ	0x3FF6
 34749                           tablat	equ	0x3FF5
 34750                           prodh	equ	0x3FF4
 34751                           prodl	equ	0x3FF3
 34752                           indf0	equ	0x3FEF
 34753                           postinc0	equ	0x3FEE
 34754                           postdec0	equ	0x3FED
 34755                           preinc0	equ	0x3FEC
 34756                           plusw0	equ	0x3FEB
 34757                           fsr0h	equ	0x3FEA
 34758                           fsr0l	equ	0x3FE9
 34759                           wreg	equ	0x3FE8
 34760                           indf1	equ	0x3FE7
 34761                           postinc1	equ	0x3FE6
 34762                           postdec1	equ	0x3FE5
 34763                           preinc1	equ	0x3FE4
 34764                           plusw1	equ	0x3FE3
 34765                           fsr1h	equ	0x3FE2
 34766                           fsr1l	equ	0x3FE1
 34767                           bsr	equ	0x3FE0
 34768                           indf2	equ	0x3FDF
 34769                           postinc2	equ	0x3FDE
 34770                           postdec2	equ	0x3FDD
 34771                           preinc2	equ	0x3FDC
 34772                           plusw2	equ	0x3FDB
 34773                           fsr2h	equ	0x3FDA
 34774                           fsr2l	equ	0x3FD9
 34775                           status	equ	0x3FD8


Data Sizes:
    Strings     919
    Constant    492
    Data        1003
    BSS         1298
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     39      63
    BANK0           160      0     154
    BANK1           256      0     255
    BANK2           256      0     231
    BANK3           256      0     254
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S6026_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[190]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[190]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4491tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[190]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[190]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  373863
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35480
                                             14 COMRAM    25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35390
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35390
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     3E2      69       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E7       9       90.2%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     27      3F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     542      58        0.0%
DATA                 0      0     924       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Dec 19 01:31:20 2019

                     _SPI1_Exchange8bit B492                __end_of_set_display_info B4EC  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 009E  
                                     _R 00C4                                       _S 02BE  
                                     _T FB4B                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler B212            __end_of_start_switch_handler B492  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC53                  __end_of_FVR_Initialize B6FA  
                           __CFG_LVP$ON 000000                                     l169 B602  
                                   l807 B4A0                                     l673 B07A  
                                   _GIE 01FE97                                     _abs AA3C  
                                   _pad 90DE                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B5AE                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack B408                       _update_adc_result AD5E  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack B39C                            __CFG_ZCD$OFF 000000  
                                  l1000 ACDA                                    l2106 913A  
                                  l1322 12A2                                    l1340 18DA  
                                  l3021 7BAE                                    l2126 543A  
                                  l2206 0B1A                                    l1350 1AFA  
                                  l2047 6B8C                                    l1351 1CFC  
                                  l2162 123A                                    l2330 3214  
                                  l1338 18D4                         _timer3ReloadVal 004E  
                                  l1188 AD1A                                    l3052 AA7C  
                                  l3044 8100                                    l2244 6C7A  
                                  l1356 2232                                    l1348 1974  
                                  l1437 A760                                    l2191 066A  
                                  l1712 B4E8                                    l3152 8FBC  
                                  l2280 5820                                    l2265 62E8  
                                  l3083 7338                                    l1581 A186  
                                  l2622 9A72                                    l1655 ADB4  
                                  l1672 92FE                                    l1664 7854  
                                  l1825 7F6A                                    l2633 8838  
                                  l1577 9DEE                                    l1665 79B0  
                                  l2626 8764                                    l3434 A3A4  
                                  l3419 7798                                    l2900 41FA  
                                  l2660 8566                                    l1596 AE1E  
                                  l1774 5356                                    l1934 A21A  
                  _ADCC_StartConversion B61C                                    l3447 A320  
                                  l1943 9618                                    l2912 408A  
                                  l1866 9812                                    l8000 4C12  
                                  l2945 4EA6                                    l8010 4C5A  
                                  l8100 32B4                                    l2981 3A3E  
                                  l8102 32BA                                    l8030 4CFC  
                                  l8120 3388                                    l8112 3342  
                                  l8104 32EA                                    l8024 4CE0  
                                  l8016 4CAE                                    l8008 4C48  
                                  l8202 38BE                                    l8130 33DA  
                                  l8122 33B8                                    l8034 4D22  
                                  l8018 4CB2                                    l8220 397E  
                                  l8044 4D6C                                    l9100 71C2  
                                  l8206 38C4                                    l8118 3382  
                                  l7502 3A9E                                    l8070 4E52  
                                  l9102 71E6                                    l8310 9010  
                                  l8302 8FE6                                    l8216 3938  
                                  l7520 3B5C                                    l7512 3AF4  
                                  l8064 4E22                                    l8048 4D72  
                                  l9104 7224                                    l8320 9090  
                                  l8234 39EC                                    l8226 39A8  
                                  l7514 3B24                                    l8058 4DE6  
                                  l8306 8FF8                                    l8236 3A06  
                                  l7532 3BCE                                    l7508 3ADE  
                                  l8076 4E7A                                    l9108 728C  
                                  l8340 9A3C                                    l8412 84FE  
                                  l8404 84D2                                    l8182 3832  
                                  l8094 3274                                    l7710 41DA  
                                  l7702 419A                                    l7622 3F0A  
                                  l7526 3B8E                                    l8078 4E8A  
                                  l9118 7328                                    l8262 89E0  
                                  l8414 8514                                    l8406 84EE  
                                  l9134 760A                                    l8192 3874  
                                  l7704 41AA                                    l7640 403A  
                                  l7616 3EEE                                    l7544 3C36  
                                  l7536 3BE4                                    l8352 8722  
                                  l8256 89CA                                    l8328 90C4  
                                  l8344 9A70                                    l8336 99FA  
                                  l7800 6056                                    l9136 7676  
                                  l8440 822A                                    l7618 3F00  
                                  l7626 3F3C                                    l7538 3C14  
                                  l8370 8836                                    l8362 8800  
                                  l9082 70E8                                    l7474 9EC2  
                                  l8290 8ADA                                    l8282 8AA6  
                                  l8188 384E                                    l9092 717E  
                                  l9084 710A                                    l7476 9EE4  
                                  l8268 8A00                                    l7820 620C  
                                  l8428 8158                                    l8460 8BDA  
                                  l8452 8B2E                                    l7662 40CA  
                                  l7638 4014                                    l7590 3E18  
                                  l7574 3D74                                    l8358 87B2  
                                  l7910 7428                                    l7902 73A0  
                                  l7814 6174                                    l7672 40F2  
                                  l7656 40AC                                    l7648 406E  
                                  l7584 3DE6                                    l7744 AA6C  
                                  l7824 627A                                    l7816 61C4  
                                  l7658 40BE                                    l7594 3E22  
                                  l9098 71AA                                    l8378 AA12  
                                  l7762 80A2                                    l7842 A310  
                                  l7676 40F8                                    l7588 3E06  
                                  l8476 A8FA                                    l8388 8450  
                                  l7598 3E52                                    l7950 4A12  
                                  l9606 7B2C                                    l7870 6F4A  
                                  l7918 74D4                                    l7758 809E  
                                  l7688 4156                                    l7944 49CC  
                                  l9616 7B8E                                    l7864 6F04  
                                  l7768 80F8                                    l9546 A936  
                                  l7698 4182                                    l7970 4AF0  
                                  l7938 498C                                    l7882 701C  
                                  l7858 6EB0                                    l7786 A394  
                                  l9538 B00E                                    l7964 4AAA  
                                  l7948 49E2                                    l9388 B142  
                                  l9476 AE28                                    l7990 4B82  
                                  l7982 4B68                                    l7958 4A6A  
                                  l9582 7A6A                                    l9574 79FE  
                                  l7976 4B2E                                    l7968 4AC0  
                                  l9584 7A78                                    l9594 7ADA  
                                  l9586 7A8E                                    l9596 7AF8  
                                  l9588 7AAC                                    l9598 7B0E  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  STR_3 FFD0                                    STR_4 FF1D  
                                  STR_5 FDF0                                    STR_6 FDF0  
                                  STR_7 FDF0                                    l9990 A994  
                                  STR_8 FF0B                                    STR_9 FD08  
                                  l9986 A962                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5200 9F12                                    u6010 AFC2  
                                  u6020 AFC4                                    u6110 7054  
                                  u5230 AF92                                    u5207 9F04  
                                  u5400 3E6A                                    u6040 6EAA  
                                  u6200 7454                                    u5240 AF94  
                                  u6130 70A6                                    _T6PR 003F93  
                                  u5500 405C                                    u5340 3D9A  
                                  u6060 6F00                                    u6220 750C  
                                  u7020 851C                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5350 3DBA  
                                  u7110 8B28                                    _PMD2 0039C2  
                                  u5351 3DB4                                    u6071 6F0A  
                                  _PMD3 0039C3                                    u5600 4146  
                                  u6080 6F44                                    u6240 755E  
                                  u6160 739A                                    u7040 8546  
                                  u7120 8B5A                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u6090 6F76  
                                  _PMD6 0039C6                                    u7051 8118  
                                  _PMD7 0039C7                                    u5540 40D0  
                                  u5460 3F32                                    u6420 4D64  
                                  u6180 73F0                                    u7060 8152  
                                  u7140 8C12                                    u5605 4136  
                                  u5630 4166                                    u5390 3E4A  
                                  u6190 7422                                    u7070 8184  
                                  u5560 40EA                                    u5368 3DBC  
                                  u7160 A8D6                                    u5800 80F2  
                                  u5465 3F22                                    u7170 A8F6  
                                  u5730 AA50                                    u7090 8262  
                                  u5395 3E3A                                    u6700 3992  
                                  u6460 4DC0                                    u6380 4CDA  
                                  u5740 8022                                    u6605 37EC  
                                  u6470 4DFA                                    u8310 717A  
                                  u5910 611A                                    u5830 A352  
                                  u5670 AF62                                    u6640 38B6  
                                  u9200 7DCE                                    u6480 4E36  
                                  u5840 A354                                    u5680 AF64  
                                  u6465 4DB0                                    u5745 8018  
                                  u6570 33C8                                    u9114 4F1E  
                                  u8330 72D2                                    u5930 61F2  
                                  u9115 4F18                                    u5915 6110  
                                  u9035 B648                                    u8340 72D4  
                                  u6820 903C                                    u5860 5FEE  
                                  u8420 773E                                    u9036 B64A  
                                  u9045 B638                                    u9134 50F4  
                                  u6750 8A2C                                    u5790 80F0  
                                  u5870 603A                                    u8430 776C  
                                  u9046 B63A                                    u9135 50EE  
                                  u5935 61E8                                    u6680 3912  
                                  u6840 90B0                                    u5960 ABD2  
                                  u9400 A1C0                                    u6585 355C  
                                  u5785 80D2                                    u5865 5FE4  
                                  u8425 7738                                    u6690 394C  
                                  u9154 51C2                                    u9074 4ECC  
                                  u6770 8AC6                                    u5970 ABD4  
                                  u6595 3624                                    u9155 51BC  
                                  u9075 4EC6                                    u8427 772A  
                                  u9180 51EC                                    u6940 AA0E  
                                  u8380 76A4                                    u5980 A2CE  
                                  u6685 3902                                    u8437 775E  
                                  u9174 51E4                                    u9094 4EFC  
                                  u6950 8430                                    u5990 A2D0  
                                  u9430 A206                                    u9175 51DE  
                                  u9095 4EF6                                    u5895 6074  
                                  u6880 9A6C                                    u6960 8444  
                                  u5896 607A                                    u5897 6088  
                                  u9290 B45C                                    u6970 847E  
                                  u9418 A1C2                                    u6955 8426  
                                  u8387 7696                                    u8815 AC0E  
                                  u6975 8474                                    u9296 B45E  
                                  u8920 7B22                                    u9448 A208  
                                  _PLLR 01CEE0                                    u8960 A578  
                                  u8985 A5AC                                    u8986 A5AE  
                                  u8978 A57A                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B054  
                         __CFG_FCMEN$ON 000000                                    _dbuf 03AE  
                                  _cp_h FC63                                    _cp_l FC5F  
                                  _atoi 70CE                                    _ctoa A21E  
                                  _main 1244                                    _dtoa 535C  
                                  _nanf A696                                    _seed 01F7  
                                  _prec 004A                                    _nout 00C0  
                                  _spin FBDB                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6B90                                    btemp 0028  
                                  _utoa 62A4                                    _xtoa 57DC  
                __end_of_check_adc_scan B6E2                           ___fpclassifyf 7F74  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0052  
             __end_of_SPI1_Exchange8bit B4B0               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize AB54             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B2DC                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0001                        __end_of_INT0_ISR B68A  
                      __end_of_INT1_ISR AD5E          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9DF6           __end_of_OSCILLATOR_Initialize B608  
                                 l10122 7E1C                                   l10114 7DF0  
                                 l10042 4EE2                                   l10202 AD7E  
                                 l10052 5000                                   l10036 4EB2  
                                 l10230 8C5E                                   l10126 7E30  
                                 l10400 B55C                                   l10232 8C64  
                                 l10240 8CA6                                   l10064 510C  
                                 l10056 50DA                                   l10160 ADCA  
                                 l10234 8C72                                   l10226 8C48  
                                 l10082 5324                                   l10090 5336  
                                 l10412 B076                                   l10228 8C58  
                                 l10076 5288                                   l10068 51A8  
                                 l12004 59DC                                   l12012 5A62  
                                 l10340 A0DA                                   l10254 8D58  
                                 l10246 8CDE                                   l10238 8C7A  
                                 l12200 2E8E                                   l12104 268A  
                                 l10336 A072                                   l11410 9F4E  
                                 l12122 280E                                   l12114 2722  
                                 l10602 693A                                   l10266 A1D4  
                                 l11420 910A                                   l12028 5B4C  
                                 l12300 9D0E                                   l10438 ACC2  
                                 l11414 9F8C                                   l11430 9180  
                                 l12214 300A                                   l12150 2AA8  
                                 l12126 2862                                   l12062 2354  
                                 l10614 698C                                   l12400 4762  
                                 l10456 AD02                                   l10712 5F2C  
                                 l10552 83D8                                   l11424 9132  
                                 l11440 992C                                   l12064 238E  
                                 l10608 6964                                   l10560 982E  
                                 l12402 476A                                   l11434 91CA  
                                 l11426 9144                                   l11522 5474  
                                 l11514 542A                                   l12234 319C  
                                 l12170 2C08                                   l12146 2A74  
                                 l12138 29BC                                   l12066 23A4  
                                 l12330 9216                                   l10634 6A0C  
                                 l10626 69E6                                   l10618 6998  
                                 l10730 9582                                   l11604 01EA  
                                 l11612 0258                                   l12228 3142  
                                 l12180 2CB6                                   l12084 24D6  
                                 l12244 31C0                                   l10740 95F2  
                                 l12406 4780                                   l11526 5492  
                                 l11702 06F0                                   l11622 02FC  
                                 l11630 032A                                   l11606 0216  
                                 l12238 31A0                                   l12190 2DD8  
                                 l12086 2510                                   l11462 673A  
                                 l10590 68FA                                   l10718 9526  
                                 l10566 98D4                                   l10824 A3F2  
                                 l11560 5792                                   l11536 56A4  
                                 l11608 022C                                   l12088 2526  
                                 l11456 667C                                   l10672 9B7E  
                                 l10592 68FE                                   l10656 6B54  
                                 l10818 A3E2                                   l12370 42CA  
                                 l11490 A268                                   l11642 0406  
                                 l12530 794C                                   l10658 6B7C  
                                 l11556 5756                                   l11820 0FF0  
                                 l11804 0F3A                                   l11740 0B12  
                                 l11732 0A48                                   l11708 077A  
                                 l11660 0554                                   l11644 0470  
                                 l11900 6D1C                                   l11476 6852  
                                 l11468 67A4                                   l12284 9E4E  
                                 l12516 7824                                   l10668 9B40  
                                 l10588 68EA                                   PRLOCK 0039EF  
                                 l12390 462E                                   l12374 430C  
                                 l10758 AC98                                   l11398 8ED2  
                                 l11830 1092                                   l11742 0B34  
                                 l11718 0926                                   l11638 0396  
                                 l11574 00AC                                   l11910 6DD2  
                                 l10598 692E                                   l11488 A23C  
                                 l11840 10E2                                   l11680 05F6  
                                 l11672 0594                                   l11664 057C  
                                 l11648 04D2                                   l12800 2208  
                                 l12704 18DE                                   l12386 4594  
                                 l11818 0FD6                                   l11682 0602  
                                 l11666 058E                                   l11586 00F0  
                                 l11594 0146                                   l11914 6E0E  
                                 l11906 6DA6                                   l12298 9CCC  
                                 l12810 225E                                   l12706 190C  
                                 l12396 46D8                                   l11756 0C32  
                                 l12636 146E                                   l12580 128C  
                                 l12742 1F40                                   l12726 1966  
                                 l12718 1940                                   l11856 119A  
                                 l11768 0CBA                                   l11776 0D24  
                                 l11784 0D90                                   l11792 0EA2  
                                 l11936 6334                                   l11928 62D8  
                                 l12752 20BC                                   l12584 12AA  
                                 l11698 06B8                                   l11946 652A  
                                 l12738 1EDE                                   l12754 20E6  
                                 l12586 12BC                                   l12578 1284  
                                 l11892 6CB0                                   l11876 6BFC  
                                 l11980 5886                                   l12772 215C  
                                 l12684 16C6                                   l11974 584A  
                                 l12790 21C4                                   l12782 219A  
                                 l11896 6CEC                                   l11968 5810  
                                 l12768 2138                                   l12696 17A0  
                                 l11988 58E6                                   l12796 21E2  
                                 l12788 21AC                         __end_of___aodiv 70CE  
                          _Volts_to_SOC A06A                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4204  
                                 _ADCLK 003EFF                         __end_of___aomod 7582  
                                 _ADPCH 003EF1                         __end_of___fldiv 4EB0  
                                 _ADREF 003EFD                         __end_of___awdiv 8AF4  
                       __end_of___flneg AA3C                                   STR_10 FD35  
                                 STR_11 FD4B                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FE99                                   STR_23 FEBF  
                                 STR_31 FE27                                   STR_15 FD61  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE3A                                   STR_16 FD1F  
                                 STR_41 FF83                                   STR_25 FE60  
                                 STR_33 FE4D                                   STR_17 FCBC  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE86  
                                 STR_34 FD9E                                   STR_18 FCD6  
                                 STR_51 FFBD                                   STR_43 FFFB  
                                 STR_19 FF83                                   STR_27 FE73  
                                 STR_35 FDDA                                   STR_44 FFF8  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD8A                         __end_of___awmod 90DE  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD76                                   STR_54 FF93  
                                 STR_70 FFDA                                   STR_46 FFB1  
                                 STR_38 FDB2                                   STR_71 FFE2  
                                 STR_47 FFC7                                   STR_39 FDC6  
                                 STR_55 FCF0                                   STR_64 FCBB  
                                 STR_80 FFEF                                   STR_48 FE01  
                                 _ADRPT 003EEC                                   STR_49 FE01  
                                 STR_57 FE14                                   STR_65 FC67  
                                 STR_90 FFF2                                   STR_74 FFE9  
                                 STR_66 FFD6                                   STR_58 FDEE  
                                 STR_83 FFEC                                   STR_67 FFDE  
                                 STR_76 FFE9                                   STR_85 FFEC  
                                 STR_93 FFF5                                   STR_78 FFEF  
                                 STR_95 FFF5                                   STR_88 FFF2  
                       __end_of___flmul 3A48                                   STR_97 FFE6  
                                 STR_99 FFE6                         __end_of___flsub AAC8  
                       __end_of___fltol 8570                                   u10310 8EC6  
                                 u11110 10B8                                   u10330 8F42  
                                 u11130 116E                                   u11050 0EE4  
                                 u11210 6D12                                   u11140 1170  
                                 u11220 6D58                                   u11301 656C  
                                 u10510 53FE                                   u11310 6582  
                                 u12030 799C                                   u12110 17CE  
                                 u11311 6580                                   u10600 5716  
                                 u11320 6596                                   u11400 5934  
                                 u12040 799E                                   u12200 2142  
                                 u10530 5410                                   u11250 6E34  
                                 u11330 659A                                   u10450 68C6  
                                 u12210 2154                                   u11227 6D4A  
                       __end_of___lodiv 828A                                   u10620 572C  
                                 u10700 0196                                   u11500 5ADC  
                                 u11420 5992                                   u10550 5460  
                                 u10390 99A6                                   u11270 62BE  
                                 u11430 5994                                   u11350 57F6  
                                 u12206 2144                                   u10560 56B8  
                                 u10480 538C                                   u12216 2156  
                                 u10490 538E                                   u10810 0562  
                                 u10730 02A6                                   u11450 5A5E  
                                 u11610 256E                                   u12090 158C  
                                 _U1P1H 003DED                                   u10571 56E8  
                                 u10580 56FE                                   u10740 02A8  
                                 u10660 00DA                                   u11460 5A7E  
                                 u11380 58DE                                   u11700 28EA  
                                 u11620 2570                                   _U1P2H 003DEF  
                                 u10581 56FC                                   u10397 9998  
                                 u10590 5712                                   u11390 5932  
                                 u11630 2596                                   u12190 2128  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u11471 5AAE                                   u11455 5A40  
                                 _T3CLK 003FA9                                   u10840 05C6  
                                 u11480 5AC4                                   u11800 2EE2  
                                 u11560 23EC                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11481 5AC2  
                                 u10690 0194                                   u11490 5AD8  
                                 u11730 2B62                                   u11570 23EE  
                                 _U1P3L 003DF0                                   u10780 050E  
                                 u11820 3092                                   u11740 2B64  
                                 u11580 2414                                   u12196 212A  
                                 u10950 0A18                                   _U2P1L 003DD4  
                                 u10880 0648                                   u11680 2776  
                                 u11840 9E2E                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 8C34  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0006  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result AD98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR B714  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 89A6                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A866  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR B596  
                          _DMA1CON1bits 003BFD                                   _fabsf 9BF2  
                                 _flags 004C                __size_of_calc_model_data 03A2  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 8EA2              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha ABDE                                   _fputs 9F3E  
                       __end_of_isdigit AFCE                         __end_of_ivln2_h FC5F  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand AE72  
                                 _width 0048                                   _putch B560  
                       __end_of_islower AF6E                         __end_of_isspace A90A  
              _INT1_SetInterruptHandler B23A                         __end_of_isupper AF9E  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0028                                   ltemp1 002C  
                                 ltemp2 0030                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0028                                   ttemp1 002B  
                                 ttemp2 002E                                   ttemp3 0031  
                                 ttemp5 0029                                   ttemp6 002C  
                                 ttemp7 0030                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B1C2             _UART1_SetRxInterruptHandler B19A  
                                 wtemp0 0028                                   wtemp1 002A  
                                 wtemp2 002C                                   wtemp3 002E  
                                 wtemp4 0030                                   wtemp5 0032  
                                 wtemp8 0029                         __end_of_sprintf 951A  
                       __end_of_tolower A3AE                         __end_of_strncmp 77A2  
                       __end_of_toupper A32A               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B304                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize AB0E                   __end_of_ringBufS_init B122  
                       __initialization 9302                       _UART2_rx_vect_isr B32C  
                          __end_of_cp_h FC67                            __end_of_cp_l FC63  
                          __end_of_atoi 7342                            __end_of_ctoa A2A6  
                          __end_of_main 2272                            __end_of_dtoa 57DC  
                          __end_of_nanf A6F8                            __end_of_spin FC53  
                          __end_of_stoa 6E4E                            __end_of_utoa 65E4  
                          __end_of_xtoa 5B96                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0001                 __end_of_TMR2_Initialize B5C6  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button ACA0  
              _TMR5_SetInterruptHandler B1EA                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr B6A4                      esr_check@esr_state 0054  
                   ??_UART2_rx_vect_isr 0006                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B080                         _PWM8_Initialize B5DC  
                      _UART1_Initialize AAC8                       _UART2_tx_vect_isr B304  
                    _UART2_Transmit_ISR B054                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A5D0                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue ABDE                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0001  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1017 A858  
                                _RB6PPS 003A0E                                  i1l1205 890E  
                  _start_switch_handler B472                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize AB9A  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B66C                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u902_20 AEE2  
                                u902_26 AEE4                                  u930_28 8C4E  
                                u933_20 8C6E                                  u933_21 8C68  
                                u937_24 8D4E                                  u937_25 8D4A  
                  __size_of_hid_display 0102                                  u963_48 B43C  
                                u955_48 B418                                  u957_28 B3AC  
                                u966_28 B3D0                                  u995_44 A412  
                                u995_45 A40C                        __end_of___xxtofl 7BB8  
 __end_of_ADCC_DischargeSampleCapacitor B6DA  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B6D2                __end_of_send_lcd_cmd_dma A8B8  
                       _TMR3_WriteTimer ACE0                     ??_UART2_tx_vect_isr 0006  
             __end_of_UART2_rx_vect_isr B354              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B69A                        _UART2_Initialize A6F8  
                                _WaitMs AE06                         _conv_raw_result 4EB0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 86E0                                  ___fleq 99B8  
                     _ADCC_ThresholdISR A500                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A0FC                                  _efgtoa 0000  
                                _floorf 5F38                      ?_ADCC_ThresholdISR 0001  
                                _memset 65E4                    __size_of_help_button 0038  
                                clear_0 9396                                  clear_1 93AA  
                                clear_2 93BC                                  clear_3 93C8  
                                clear_4 93D4                                  clear_5 93E0  
                                clear_6 93EC                                  clear_7 93F8  
             __end_of_port_data_dma_ptr B6AE                                  _printf A634  
                    _eaDogM_WriteString 9DF6                                  _strcpy 98E4  
                             ?_ADCC_ISR 0001                                  _strlen 9E9C  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize A496                          _PMD_Initialize B608  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr B32C  
                                lltemp0 0028                                  lltemp1 0030  
                                lltemp2 0038                                  lltemp3 0040  
                   ??_ADCC_ThresholdISR 0001                  __end_of_start_adc_scan A634  
                          __mediumconst FA7A                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay A7B0                        __end_of_spinners 98E4  
                      __end_of_vfprintf 9D4C                              _StartTimer AC20  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize AB54  
                     _SYSTEM_Initialize A9AA                              __accesstop 0060  
               __end_of__initialization 940A                               ?_INT0_ISR 0001  
                             ?_INT1_ISR 0001                    __end_of_display_help B6F2  
                  __end_of_display_info B6EA               __end_of_CLKREF_Initialize B6A4  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer ACA0                   _set_temp_display_help B64E  
                      _clear_hid_pflags B378                   __end_of_TMR3_CallBack B408  
             __end_of_ADCC_ThresholdISR A56A                      __size_of_calc_bsoc 0732  
                __end_of_ringBufS_flush A18E                          __pcstackCOMRAM 0001  
                            ___inthi_sp 1142                              ___intlo_sp 18A1  
                          __pidataBANK0 ADD0                            __pidataBANK1 961C  
                          __pidataBANK2 9A7C             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 9CA0                               ?_TMR3_ISR 0001  
                             ?_TMR5_ISR 0001                               ?_TMR6_ISR 0001  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8FC6  
                         __end_of_fputs 9FD6                           __end_of_srand AEA6  
                 __end_of_TMR5_CallBack B3E4                           __end_of_putch B57A  
               __end_of_PWM8_Initialize B5F2                 __end_of_TMR6_Initialize B0AA  
                     _adc_int_t_handler A3AE                  __end_of_PMD_Initialize B61C  
                            __end_of_bp FC5B                              ??_ADCC_ISR 0001  
                 __end_of_TMR6_CallBack B450             __size_of_EXT_INT_Initialize 0034  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B6BC  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan B6FA  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize A9F4  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer AD20                              __pbssBANK0 0060  
                            __pbssBANK1 01F7                              __pbssBANK2 02BE  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 77A2  
               __end_of_conv_raw_result 535C                      __size_of_esr_check 02C0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0001  
                            ??_INT1_ISR 0007                       __end_of_TimerDone B14A  
                      _DMA1_DMADCNT_ISR B6B0                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma AF0E  
                 __end_of_wait_lcd_done B544        __end_of_TMR3_SetInterruptHandler B23A  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler B1EA  
                            ??_TMR3_ISR 000F                 __end_of_ADCC_Initialize A500  
                            ??_TMR5_ISR 000B               __end_of_adc_int_t_handler A42C  
                            ??_TMR6_ISR 0006                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler B2B2  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler B28A  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR B544  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan B700                          ?_DMA1_DMAA_ISR 0001  
                      _DMA1_DMASCNT_ISR B68C                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1192_20 46D0                                 u1194_20 4778  
                               u1196_28 B3F4                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0001              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4936                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch AFFC                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer ACE0                 __size_of_switch_handler 0140  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one B64E  
            __end_of_set_load_relay_two B63E       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 828A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim B596  
                               __Lparam 0000                __end_of_UART1_Initialize AB0E  
                     __end_of_hid_input A21E                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 6E4E                                 ___fladd 3A48  
                               ___aomod 7342                                 ___fldiv 4936  
                               ___awdiv 89A6                                 ___flneg A9F4  
                               ___awmod 8FC6                                 ___flmul 321E  
                               ___flsub AA82                                 ___fltol 83FE  
                               ___lodiv 810A                                 ___lomod 8AF4  
             __end_of_UART1_Receive_ISR B560                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 97FE  
                               __pcinit 9302                __end_of_mode_lamp_bright B67A  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand B65E                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B354  
                               __ptext2 B472                                 __ptext3 AE72  
                               __ptext4 97FE                                 __ptext5 AF0E  
                               __ptext6 9714                                 __ptext7 B0AA  
                               __ptext8 B0D2                                 __ptext9 B492  
                     __end_of_esr_check 6B90                       _UART2_Receive_ISR B50A  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize B5F2                                 us614999 70B8  
                               us710999 8274                            __size_of_abs 0046  
                               us625999 7570                                 us715999 8C24  
                          __size_of_pad 0114                       __end_of_init_bsoc 86E0  
                               _isalpha AB9A                                 _isdigit AF9E  
                               _ivln2_h FC5B                               _T3CONbits 003FA6  
                               _mode_sw 0056                       __end_of_lp_filter 7F74  
                               _islower AF3E                                 _isspace A8B8  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize A756                                 _isupper AF6E  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 9410  
                               _tolower A32A                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 7582                                 _toupper A2A6  
                  end_of_initialization 940A               __size_of_convert_adc_data 00B8  
                    _check_enter_button AC60                               i1u1205_20 8904  
                             i2u1000_48 A536                               i2u1000_49 A54A  
   __end_of_UART2_SetRxInterruptHandler B19A             _UART2_SetRxInterruptHandler B172  
                             i2u1002_48 B2F0                               i2u1004_48 B318  
                             i2u1006_48 B340                       __end_of_set_vterm B4CE  
                     __end_of_vfpfcnvrt 321E                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd B70C               __end_of_UART2_Receive_ISR B528  
                        wdtdelay@dcount 009A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0007                   _INT1_InterruptHandler 00BA  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc B712  
              _TMR3_SetInterruptHandler B212                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler B1C2                            _display_help B6EA  
                 _TMR5_InterruptHandler 00A5                            _display_info B6E2  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B39C  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler B2DA  
           _ADCC_SetADIInterruptHandler B2B2                              _update_lcd 91F2  
                       _calc_model_data 5B96                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B354  
                       _DMA1_Initialize A42C                              _start_bsoc B450  
                       _SPI1_Initialize B5C6                   __end_of_get_vterm_ptr AFFC  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs AE3C            __end_of_INTERRUPT_Initialize A5D0  
                            _vterm_dump 8D74                          __end_of___flge 8842  
                        __end_of___fleq 9A7C    __end_of_INT0_DefaultInterruptHandler B720  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler B71E  
            __size_of_UART1_Receive_ISR 001C                         _DMA2_Initialize A7B0  
                         __pidataBIGRAM 7BB8                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 62A4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 68D0  
                        __end_of_printf A696                __end_of_DMA1_DMADCNT_ISR B6BA  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack B42C  
                        __end_of_strcpy 99B8                          __end_of_strlen 9F3E  
                   start_initialization 9302    __end_of_TMR5_DefaultInterruptHandler AF0E  
 __size_of_TMR5_DefaultInterruptHandler 0034            _TMR5_DefaultInterruptHandler AEDA  
       __size_of_PIN_MANAGER_Initialize 0094                             __end_of_abs AA82  
                 __end_of_INT1_CallBack B3C0               __size_of_set_display_info 001E  
                           __end_of_pad 91F2                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B0FA                          _switch_handler 8C34  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 810A  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR B69A  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR B6C8  
                   __end_of_hid_display 961C              __end_of_send_port_data_dma A95C  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone B122  
                         _ringBufS_init B0FA                             __pdataBANK0 00C4  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize AEDA                 __end_of_calc_model_data 5F38  
                   __end_of_help_button ADD0         __end_of_eaDogM_WriteStringAtPos AE72  
                   __end_of_BVSOC_TABLE FB4B                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize A496  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 0048  
      __end_of_INT0_SetInterruptHandler B28A                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8D74  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B5DC  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FBDB                        _convert_adc_data 9B3A  
                             _calc_bsoc 4204               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9714                  __end_of_DMA1_DMAOR_ISR B6D2  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A80A                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize 9FD6                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B706                           __pmediumconst FA7A  
                             __ptext100 5B96                               __ptext101 B70C  
                             __ptext110 B172                               __ptext102 B450  
                             __ptext111 AAC8                               __ptext103 7DB8  
                             __ptext120 B5C6                               __ptext112 B19A  
                             __ptext104 AA82                               __ptext121 B5DC  
                             __ptext113 B080                               __ptext105 3A48  
                             __ptext130 A7B0                               __ptext122 B608  
                             __ptext114 B1C2                               __ptext106 321E  
                             __ptext131 A42C                               __ptext123 9FD6  
                             __ptext115 AB0E                               __ptext107 A9AA  
                             __ptext140 A80C                               __ptext132 B69A  
                             __ptext124 B5F2                               __ptext116 B1EA  
                             __ptext108 A6F8                               __ptext141 ACA0  
                             __ptext133 A496                               __ptext125 A56A  
                             __ptext117 AB54                               __ptext109 B14A  
                             __ptext150 B6A4                               __ptext142 B3C0  
                             __ptext134 B28A                               __ptext126 B6F2  
                             __ptext118 B212                               __ptext151 B67C  
                             __ptext143 AEDA                               __ptext135 B2B2  
                             __ptext127 AEA6                               __ptext119 B5AE  
                             __ptext160 B2DC                               __ptext152 B408  
                             __ptext144 8844                               __ptext136 AD20  
                             __ptext128 B23A                               __ptext161 B544  
                             __ptext153 B71E                               __ptext145 ACE0  
                             __ptext137 B39C                               __ptext129 B262  
                             __ptext170 B6B0                               __ptext162 B304  
                             __ptext154 B714                               __ptext146 B3E4  
                             __ptext138 B71A                               __ptext171 B6BC  
                             __ptext163 B054                               __ptext155 B028  
                             __ptext147 B71C                               __ptext139 8C34  
                             __ptext172 B6C8                               __ptext164 B32C  
                             __ptext156 A3AE                               __ptext148 4204  
                             __ptext173 0000                               __ptext165 B50A  
                             __ptext157 B720                               __ptext149 A90A  
                             __ptext166 B57C                               __ptext158 B722  
                             __ptext167 B42C                               __ptext159 A500  
                             __ptext168 A95C                               __ptext169 B68C  
                             _hid_input A18E                      __end_of_StartTimer AC60  
                    _set_load_relay_one B63E                      _set_load_relay_two B62E  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR B028  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 68D0                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 8570  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 7DB8                             _hid_display 951A  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize A56A                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0001  
                              _INT0_ISR B67C                                _INT1_ISR AD20  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE                                _LATFbits 003FBF  
     __size_of_INT1_SetInterruptHandler 0028                                _IPR1bits 003981  
                              _IPR2bits 003982                                _PIE1bits 003991  
                              _IPR3bits 003983                                _PIE2bits 003992  
                              _IPR5bits 003985                                _PIE3bits 003993  
                             _tickCount 0394                                _IPR6bits 003986  
                              _PIE5bits 003995                                _IPR8bits 003988  
                              _PIE6bits 003996                                _IPR9bits 003989  
                              _PIE8bits 003998                     __CFG_BORV$VBOR_2P45 000000  
                              _PIE9bits 003999                               _ring_buf1 0443  
                             _ring_buf2 0400                                _PIR1bits 0039A1  
                              _PIR2bits 0039A2                                _SPI1BAUD 003D19  
                              _PIR4bits 0039A4                                _SPI1CON0 003D14  
                              _SPI1CON1 003D15                                _SPI1CON2 003D16  
                         _TMR3_CallBack B3E4                                _PIR5bits 0039A5  
                              _PIR6bits 0039A6                                _PIR8bits 0039A8  
                              _PIR9bits 0039A9                __size_of_TMR5_Initialize 0046  
                              i2u998_48 B040                               _set_vterm B4B0  
                   __size_of_update_lcd 0110                             _help_button AD98  
                              _TMR3_ISR 8844                             _BVSOC_TABLE FA7B  
                              _TMR5_ISR A80C                                _TMR6_ISR B57C  
                             _port_data 05FF                     __size_of_static_soc 0024  
                             _vfpfcnvrt 2272                            _SPI1INTFbits 003D1A  
                   __size_of_start_bsoc 0022                           _TMR5_CallBack B3C0  
                            _ADCON0bits 003EF8                      __end_of_check_help 79B4  
                             _start_lcd B706                 __size_of_FVR_Initialize 0008  
             __size_of_send_lcd_cmd_dma 0052                           _TMR6_CallBack B42C  
                 __size_of_send_lcd_cmd 0028       __size_of_TMR5_SetInterruptHandler 0028  
                             _stop_bsoc B70C                        _set_display_info B4CE  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 9316  
                             copy_data1 933C                               copy_data2 935E  
                             copy_data3 9380                _INT0_SetInterruptHandler B262  
                   __size_of_vterm_dump 012E     __end_of_UART2_SetTxInterruptHandler B172  
           _UART2_SetTxInterruptHandler B14A                            _uart1RxCount 005D  
                          _uart2RxCount 0057                                __Hrparam 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
              __size_of_TMR3_WriteTimer 0040                                __Lrparam 0000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04AC                           _wait_lcd_done B528  
                          _send_lcd_cmd B0D2                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler B722                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                    __end_of_get_switch B028                   __end_of_DMA1_DMAA_ISR B6C6  
                    ___fpclassifyf@F463 0082    __size_of_UART1_SetRxInterruptHandler 0028  
                       lp_filter@smooth 0300                                ___xxtofl 79B4  
                     ?_DMA1_DMADCNT_ISR 0001             __size_of_check_enter_button 0040  
              __size_of_ADCC_Initialize 006A             __end_of_eaDogM_WriteCommand B66C  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 0007  
                              __ptext10 B0FA                                __ptext11 8570  
                              __ptext20 B6D2                                __ptext12 A06A  
                              __ptext21 B6FA                                __ptext13 951A  
                              __ptext30 9410                                __ptext22 B6DA  
                              __ptext14 A18E                                __ptext31 AFCE  
                              __ptext23 B62E                                __ptext15 AFFC  
                              __ptext40 B706                                __ptext32 AE06  
                              __ptext24 B63E                                __ptext16 68D0  
                              __ptext41 A0FC                                __ptext33 91F2  
                              __ptext25 B65E                                __ptext17 AD5E  
                              __ptext50 62A4                                __ptext42 65E4  
                              __ptext34 AE3C                                __ptext26 9B3A  
                              __ptext18 A5D0                                __ptext51 8AF4  
                              __ptext43 A634                                __ptext35 A866  
                              __ptext27 B378                                __ptext19 B61C  
                              __ptext60 7F74                                __ptext52 810A  
                              __ptext44 9CA0                                __ptext36 B528  
                              __ptext28 77A2                                __ptext61 83FE  
                              __ptext53 7582                                __ptext45 2272  
                              __ptext37 A756                                __ptext29 8D74  
                              __ptext70 A21E                                __ptext62 A9F4  
                              __ptext54 6B90                                __ptext46 57DC  
                              __ptext38 9DF6                                __ptext71 90DE  
                              __ptext63 99B8                                __ptext55 0000  
                              __ptext47 A2A6                                __ptext39 B700  
                              __ptext80 B4B0                                __ptext72 9E9C  
                              __ptext64 8FC6                                __ptext56 A32A  
                              __ptext48 AF3E                                __ptext81 B64E  
                              __ptext73 9F3E                                __ptext65 89A6  
                              __ptext57 AF6E                                __ptext49 AB9A  
                              __ptext90 B6EA                                __ptext82 B4CE  
                              __ptext74 8EA2                                __ptext66 535C  
                              __ptext58 98E4                                __ptext91 AC60  
                              __ptext83 B596                                __ptext75 B560  
                              __ptext67 AA3C                                __ptext59 5F38  
                              __ptext92 828A                                __ptext84 B66C  
                              __ptext76 9D4C                                __ptext68 7342  
                              __ptext93 9BF2                                __ptext85 ABDE  
                              __ptext77 70CE                                __ptext69 6E4E  
                              __ptext94 4EB0                                __ptext86 AD98  
                              __ptext78 A8B8                                __ptext95 A696  
                              __ptext87 B122                                __ptext79 AF9E  
                              __ptext96 B4EC                                __ptext88 AC20  
                              __ptext97 79B4                                __ptext89 B6E2  
                              __ptext98 4936                                __ptext99 86E0  
                      __size_of_isupper 0030                                us1116999 6BA2  
                              us1047999 5376                                us1128999 630A  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                              us1137999 585C                        __size_of_strncmp 0220  
                      __size_of_toupper 0084                        _ringBufS_put_dma 9D4C  
                  __end_of_Volts_to_SOC A0FC                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 102E  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0001  
                 __end_of_init_port_dma AF3E                             _IVTLOCKbits 003FD4  
              __size_of_TMR5_WriteTimer 0040               _ADCC_ADI_InterruptHandler 00AE  
                             stoa@F1166 00EC                      ??_DMA1_DMASCNT_ISR 0007  
          __end_of_ADCC_StartConversion B62E                                _spi_link 0060  
                              _wdtdelay A756              __end_of_UART2_Transmit_ISR B080  
                              _spinners 97FE                                _vfprintf 9CA0  
              __end_of_convert_adc_data 9BF2              __end_of_PWM8_LoadDutyValue AC20  
  __end_of_TMR3_DefaultInterruptHandler B71E   __size_of_TMR3_DefaultInterruptHandler 0002  
          _TMR3_DefaultInterruptHandler B71C    __end_of_INT1_DefaultInterruptHandler B71C  
 __size_of_INT1_DefaultInterruptHandler 0002            _INT1_DefaultInterruptHandler B71A  
                    _send_port_data_dma A90A                           ??_Default_ISR 0001  
                           _uart1RxHead 005F                  __size_of_get_vterm_ptr 002E  
                           _uart2RxHead 0059                             _uart1RxTail 005E  
                        _get_raw_result B4EC                             _uart2TxHead 005C  
                           _uart2RxTail 0058                               spinners@s 0074  
                           _uart2TxTail 005B                            _wait_lcd_set B700  
                      Volts_to_SOC@slot 0055                      _EXT_INT_Initialize AEA6  
  __end_of_TMR6_DefaultInterruptHandler A9AA   __size_of_TMR6_DefaultInterruptHandler 004E  
          _TMR6_DefaultInterruptHandler A95C    __end_of_ADCC_DefaultInterruptHandler B722  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler B720  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long B0AA          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help B65E                   __end_of_calc_ror_data 83FE  
                     __CFG_CLKOUTEN$OFF 000000              __end_of_eaDogM_WriteString 9E9C  
                 __end_of_mode_lamp_dim B5AE                 __end_of_adc_int_handler B724  
                __size_of_INT0_CallBack 0024                              _SPI1SCKPPS 003ADE  
                            _SPI1SDIPPS 003ADF                  __size_of_INT1_CallBack 0024  
                    __end_of_update_lcd 9302                  _uart2TxBufferRemaining 005A  
                    __end_of_static_soc B378                      __end_of_start_bsoc B472  
                        _FVR_Initialize B6F2                  __end_of_get_raw_result B50A  
                      _send_lcd_cmd_dma A866                  __size_of___fpclassifyf 0196  
                 TMR5_ISR@CountCallBack 0050        __end_of_INT1_SetInterruptHandler B262  
             __size_of_UART1_Initialize 0046                        ??_DMA1_DMAOR_ISR 0007  
             __end_of_send_lcd_cmd_long B0D2                 __size_of_start_adc_scan 0064  
                   __end_of_Default_ISR B71A          __end_of_PIN_MANAGER_Initialize A06A  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 8EA2  
               _eaDogM_WriteStringAtPos AE3C                           _get_vterm_ptr AFCE  
                        _check_adc_scan B6DA               __size_of_UART2_Initialize 005E  
