

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Dec 15 00:59:31 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1,group=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1,inline
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1,inline
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1,group=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1,group=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1,group=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1,group=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=4,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=4,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=4,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=4,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=4,class=CODE,delta=1
   179                           	psect	text155,global,reloc=4,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=4,class=CODE,delta=1
   184                           	psect	text160,global,reloc=4,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=4,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=4,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=4,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=4,class=CODE,delta=1
   194                           	psect	text170,global,reloc=4,class=CODE,delta=1
   195                           	psect	text171,global,reloc=4,class=CODE,delta=1
   196                           	psect	text172,global,reloc=4,class=CODE,delta=1
   197                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   198                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   199                           	psect	text173,global,reloc=4,class=CODE,delta=1
   200                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   201                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   202  0000                     
   203                           ; Version 2.10
   204                           ; Generated 31/07/2019 GMT
   205                           ; 
   206                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   207                           ; All rights reserved.
   208                           ; 
   209                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   210                           ; 
   211                           ; Redistribution and use in source and binary forms, with or without modification, are
   212                           ; permitted provided that the following conditions are met:
   213                           ; 
   214                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   215                           ;        conditions and the following disclaimer.
   216                           ; 
   217                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   218                           ;        of conditions and the following disclaimer in the documentation and/or other
   219                           ;        materials provided with the distribution.
   220                           ; 
   221                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   222                           ;        software without specific prior written permission.
   223                           ; 
   224                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   225                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   226                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   227                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   228                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   229                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   230                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   231                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   232                           ; 
   233                           ; 
   234                           ; Code-generator required, PIC18F57K42 Definitions
   235                           ; 
   236                           ; SFR Addresses
   237  0000                     
   238 ;;_esr_temp	offset	0
   239 ;;_i_esr	offset	4
   240 ;;_shape	offset	6
   241 ;;_k	offset	7
   242 ;;_j	offset	8
   243 ;;_i	offset	9
   244 ;;_inp_index	offset	10
   245 ;;_mode	offset	11
   246 ;;_i_ror	offset	12
   247 ;;_s	offset=-2 (param)
   248 ;;_c	offset	0
   249 ;;_shape	offset=-1 (param)
   250 ;;_reset	offset=-2 (param)
   251 ;;_cmd	offset=-1 (param)
   252 ;;_cmd	offset=-1 (param)
   253 ;;_data	offset=-1 (param)
   254 ;;__this	offset=-2 (param)
   255 ;;_cvoltage	offset=-4 (param)
   256 ;;_h	offset=-1 (param)
   257 ;;_h	offset=-1 (param)
   258 ;;_i	offset=-1 (param)
   259 ;;_fsm	offset=-1 (param)
   260 ;;_channel	offset=-1 (param)
   261 ;;_mode	offset=-1 (param)
   262 ;;_mode	offset=-1 (param)
   263 ;;_cmd	offset=-1 (param)
   264 ;;_i	offset	0
   265 ;;_h	offset=-1 (param)
   266 ;;_flipper	offset=-1 (param)
   267 ;;_f	offset	0
   268 ;;_ap	offset	6
   269 ;;_s	offset=-3 (param)
   270 ;;_fmt	offset=-5 (param)
   271 ;;_line	offset=-1 (param)
   272 ;;_vterm	offset=-2 (param)
   273 ;;_numMilliseconds	offset=-2 (param)
   274 ;;_vterm	offset=-1 (param)
   275 ;;_r	offset=-1 (param)
   276 ;;_c	offset=-2 (param)
   277 ;;_strPtr	offset=-4 (param)
   278 ;;_strPtr	offset=-1 (param)
   279 ;;_delay	offset=-4 (param)
   280 ;;_strPtr	offset=-2 (param)
   281 ;;__this	offset=-2 (param)
   282 ;;_clearBuffer	offset=-3 (param)
   283 ;;_s	offset	0
   284 ;;_k	offset	2
   285 ;;_dest	offset=-2 (param)
   286 ;;_c	offset=-4 (param)
   287 ;;_n	offset=-6 (param)
   288 ;;_ap	offset	0
   289 ;;_fmt	offset=-3 (param)
   290 ;;_cfmt	offset	0
   291 ;;_fp	offset=-2 (param)
   292 ;;_fmt	offset=-4 (param)
   293 ;;_ap	offset=-6 (param)
   294 ;;_vfpfcnvrt$5387	offset	0
   295 ;;_vfpfcnvrt$5398	offset	2
   296 ;;_vfpfcnvrt$5386	offset	4
   297 ;;_llu	offset	6
   298 ;;_ll	offset	14
   299 ;;_f	offset	22
   300 ;;_ct	offset	26
   301 ;;_cp	offset	29
   302 ;;_c	offset	31
   303 ;;_fp	offset=-2 (param)
   304 ;;_fmt	offset=-4 (param)
   305 ;;_ap	offset=-6 (param)
   306 ;;_xtoa$5372	offset	0
   307 ;;_xtoa$5371	offset	2
   308 ;;_n	offset	4
   309 ;;_c	offset	12
   310 ;;_i	offset	14
   311 ;;_w	offset	16
   312 ;;_p	offset	18
   313 ;;_fp	offset=-2 (param)
   314 ;;_d	offset=-10 (param)
   315 ;;_x	offset=-11 (param)
   316 ;;_toupper$6178	offset	0
   317 ;;_c	offset=-2 (param)
   318 ;;_c	offset=-2 (param)
   319 ;;_c	offset=-2 (param)
   320 ;;_n	offset	0
   321 ;;_i	offset	8
   322 ;;_w	offset	10
   323 ;;_p	offset	12
   324 ;;_fp	offset=-2 (param)
   325 ;;_d	offset=-10 (param)
   326 ;;_counter	offset	0
   327 ;;_dividend	offset=-8 (param)
   328 ;;_divisor	offset=-16 (param)
   329 ;;_quotient	offset	0
   330 ;;_counter	offset	8
   331 ;;_dividend	offset=-8 (param)
   332 ;;_divisor	offset=-16 (param)
   333 ;;_r	offset	0
   334 ;;_l	offset	2
   335 ;;__l	offset=-2 (param)
   336 ;;__r	offset=-4 (param)
   337 ;;_n	offset=-6 (param)
   338 ;;_nuls	offset	0
   339 ;;_l	offset	7
   340 ;;_p	offset	9
   341 ;;_cp	offset	11
   342 ;;_w	offset	13
   343 ;;_i	offset	15
   344 ;;_fp	offset=-2 (param)
   345 ;;_s	offset=-4 (param)
   346 ;;_efgtoa$5344	offset	0
   347 ;;_efgtoa$5343	offset	2
   348 ;;_efgtoa$5342	offset	4
   349 ;;_efgtoa$5338	offset	6
   350 ;;_efgtoa$5334	offset	8
   351 ;;_efgtoa$5333	offset	10
   352 ;;_u	offset	12
   353 ;;_g	offset	16
   354 ;;_l	offset	20
   355 ;;_h	offset	24
   356 ;;_ou	offset	28
   357 ;;_n	offset	32
   358 ;;_e	offset	34
   359 ;;_i	offset	36
   360 ;;_w	offset	38
   361 ;;_p	offset	40
   362 ;;_sign	offset	42
   363 ;;_d	offset	44
   364 ;;_ne	offset	46
   365 ;;_m	offset	48
   366 ;;_pp	offset	50
   367 ;;_t	offset	52
   368 ;;_mode	offset	54
   369 ;;_nmode	offset	55
   370 ;;_fp	offset=-2 (param)
   371 ;;_f	offset=-6 (param)
   372 ;;_c	offset=-7 (param)
   373 ;;_tolower$6163	offset	0
   374 ;;_c	offset=-2 (param)
   375 ;;_c	offset=-2 (param)
   376 ;;_d	offset	0
   377 ;;_s	offset	2
   378 ;;_dest	offset=-2 (param)
   379 ;;_src	offset=-4 (param)
   380 ;;_u	offset	0
   381 ;;_m	offset	4
   382 ;;_e	offset	8
   383 ;;_x	offset=-4 (param)
   384 ;;_u	offset	0
   385 ;;_e	offset	4
   386 ;;_x	offset=-4 (param)
   387 ;;_exp1	offset	0
   388 ;;_sign1	offset	1
   389 ;;_f1	offset=-4 (param)
   390 ;;_f1	offset=-4 (param)
   391 ;;_ff1	offset=-4 (param)
   392 ;;_ff2	offset=-8 (param)
   393 ;;_sign	offset	0
   394 ;;_counter	offset	1
   395 ;;_dividend	offset=-2 (param)
   396 ;;_divisor	offset=-4 (param)
   397 ;;_quotient	offset	0
   398 ;;_sign	offset	2
   399 ;;_counter	offset	3
   400 ;;_dividend	offset=-2 (param)
   401 ;;_divisor	offset=-4 (param)
   402 ;;_dtoa$5310	offset	0
   403 ;;_n	offset	2
   404 ;;_i	offset	10
   405 ;;_s	offset	12
   406 ;;_w	offset	14
   407 ;;_p	offset	16
   408 ;;_fp	offset=-2 (param)
   409 ;;_d	offset=-10 (param)
   410 ;;_a	offset=-2 (param)
   411 ;;_sign	offset	0
   412 ;;_counter	offset	1
   413 ;;_dividend	offset=-8 (param)
   414 ;;_divisor	offset=-16 (param)
   415 ;;_quotient	offset	0
   416 ;;_sign	offset	8
   417 ;;_counter	offset	9
   418 ;;_dividend	offset=-8 (param)
   419 ;;_divisor	offset=-16 (param)
   420 ;;_w	offset	0
   421 ;;_fp	offset=-2 (param)
   422 ;;_c	offset=-3 (param)
   423 ;;_w	offset	0
   424 ;;_i	offset	2
   425 ;;_fp	offset=-2 (param)
   426 ;;_buf	offset=-4 (param)
   427 ;;_p	offset=-6 (param)
   428 ;;_a	offset	0
   429 ;;_s	offset=-2 (param)
   430 ;;_i	offset	0
   431 ;;_c	offset	2
   432 ;;_s	offset=-2 (param)
   433 ;;_fp	offset=-4 (param)
   434 ;;_c	offset=-2 (param)
   435 ;;_fp	offset=-4 (param)
   436 ;;_c	offset=-1 (param)
   437 ;;__this	offset=-2 (param)
   438 ;;_c	offset=-3 (param)
   439 ;;_atoi$5894	offset	0
   440 ;;_atoi$5892	offset	2
   441 ;;_atoi$5893	offset	4
   442 ;;_n	offset	5
   443 ;;_neg	offset	7
   444 ;;_s	offset=-2 (param)
   445 ;;_isspace$5943	offset	0
   446 ;;_c	offset=-2 (param)
   447 ;;_c	offset=-2 (param)
   448 ;;_vterm	offset=-1 (param)
   449 ;;_new_response_info	offset=-1 (param)
   450 ;;_new_response_info	offset=-1 (param)
   451 ;;_level	offset=-2 (param)
   452 ;;_dutyValue	offset=-2 (param)
   453 ;;_timer	offset=-1 (param)
   454 ;;_timer	offset=-1 (param)
   455 ;;_count	offset=-3 (param)
   456 ;;_h	offset=-1 (param)
   457 ;;_u	offset	0
   458 ;;_x	offset=-4 (param)
   459 ;;_chan	offset=-1 (param)
   460 ;;_to_what	offset=-2 (param)
   461 ;;_u	offset	0
   462 ;;_s	offset=-2 (param)
   463 ;;_index	offset=-1 (param)
   464 ;;_arg	offset	0
   465 ;;_exp	offset	4
   466 ;;_sign	offset=-1 (param)
   467 ;;_val	offset=-5 (param)
   468 ;;_grs	offset	0
   469 ;;_rem	offset	4
   470 ;;_new_exp	offset	8
   471 ;;_aexp	offset	10
   472 ;;_bexp	offset	11
   473 ;;_sign	offset	12
   474 ;;_b	offset=-4 (param)
   475 ;;_a	offset=-8 (param)
   476 ;;_ff1	offset=-4 (param)
   477 ;;_ff2	offset=-8 (param)
   478 ;;_lp_speed	offset	0
   479 ;;_new	offset=-4 (param)
   480 ;;_bn	offset=-5 (param)
   481 ;;_slow	offset=-6 (param)
   482 ;;_b	offset=-4 (param)
   483 ;;_a	offset=-8 (param)
   484 ;;_grs	offset	0
   485 ;;_bexp	offset	1
   486 ;;_aexp	offset	2
   487 ;;_signs	offset	3
   488 ;;_b	offset=-4 (param)
   489 ;;_a	offset=-8 (param)
   490 ;;_prod	offset	0
   491 ;;_grs	offset	4
   492 ;;_temp	offset	8
   493 ;;_bexp	offset	10
   494 ;;_aexp	offset	11
   495 ;;_sign	offset	12
   496 ;;_b	offset=-4 (param)
   497 ;;_a	offset=-8 (param)
   498 ;;_InterruptHandler	offset=-3 (param)
   499 ;;_InterruptHandler	offset=-3 (param)
   500 ;;_InterruptHandler	offset=-3 (param)
   501 ;;_InterruptHandler	offset=-3 (param)
   502 ;;_InterruptHandler	offset=-3 (param)
   503 ;;_InterruptHandler	offset=-3 (param)
   504 ;;_state	offset	0
   505 ;;_InterruptHandler	offset=-3 (param)
   506 ;;_InterruptHandler	offset=-3 (param)
   507 ;;_InterruptHandler	offset=-3 (param)
   508 ;;_InterruptHandler	offset=-3 (param)
   509 ;;_i	offset	0
   510 ;;_sw_value	offset	1
   511 ;;_timerVal	offset=-2 (param)
   512 ;;_timerVal	offset=-2 (param)
   513 ;;_log_ptr	offset	0
   514 ;;_f	offset	0
   515 ;;_ap	offset	6
   516 ;;_s	offset=-3 (param)
   517 ;;_fmt	offset=-5 (param)
   518 ;;_cfmt	offset	0
   519 ;;_fp	offset=-2 (param)
   520 ;;_fmt	offset=-4 (param)
   521 ;;_ap	offset=-6 (param)
   522 ;;_vfpfcnvrt$5387	offset	0
   523 ;;_vfpfcnvrt$5398	offset	2
   524 ;;_vfpfcnvrt$5386	offset	4
   525 ;;_llu	offset	6
   526 ;;_ll	offset	14
   527 ;;_f	offset	22
   528 ;;_ct	offset	26
   529 ;;_cp	offset	29
   530 ;;_c	offset	31
   531 ;;_fp	offset=-2 (param)
   532 ;;_fmt	offset=-4 (param)
   533 ;;_ap	offset=-6 (param)
   534 ;;_xtoa$5372	offset	0
   535 ;;_xtoa$5371	offset	2
   536 ;;_n	offset	4
   537 ;;_c	offset	12
   538 ;;_i	offset	14
   539 ;;_w	offset	16
   540 ;;_p	offset	18
   541 ;;_fp	offset=-2 (param)
   542 ;;_d	offset=-10 (param)
   543 ;;_x	offset=-11 (param)
   544 ;;_toupper$6178	offset	0
   545 ;;_c	offset=-2 (param)
   546 ;;_c	offset=-2 (param)
   547 ;;_c	offset=-2 (param)
   548 ;;_n	offset	0
   549 ;;_i	offset	8
   550 ;;_w	offset	10
   551 ;;_p	offset	12
   552 ;;_fp	offset=-2 (param)
   553 ;;_d	offset=-10 (param)
   554 ;;_counter	offset	0
   555 ;;_dividend	offset=-8 (param)
   556 ;;_divisor	offset=-16 (param)
   557 ;;_quotient	offset	0
   558 ;;_counter	offset	8
   559 ;;_dividend	offset=-8 (param)
   560 ;;_divisor	offset=-16 (param)
   561 ;;_r	offset	0
   562 ;;_l	offset	2
   563 ;;__l	offset=-2 (param)
   564 ;;__r	offset=-4 (param)
   565 ;;_n	offset=-6 (param)
   566 ;;_nuls	offset	0
   567 ;;_l	offset	7
   568 ;;_p	offset	9
   569 ;;_cp	offset	11
   570 ;;_w	offset	13
   571 ;;_i	offset	15
   572 ;;_fp	offset=-2 (param)
   573 ;;_s	offset=-4 (param)
   574 ;;_efgtoa$5344	offset	0
   575 ;;_efgtoa$5343	offset	2
   576 ;;_efgtoa$5342	offset	4
   577 ;;_efgtoa$5338	offset	6
   578 ;;_efgtoa$5334	offset	8
   579 ;;_efgtoa$5333	offset	10
   580 ;;_u	offset	12
   581 ;;_g	offset	16
   582 ;;_l	offset	20
   583 ;;_h	offset	24
   584 ;;_ou	offset	28
   585 ;;_n	offset	32
   586 ;;_e	offset	34
   587 ;;_i	offset	36
   588 ;;_w	offset	38
   589 ;;_p	offset	40
   590 ;;_sign	offset	42
   591 ;;_d	offset	44
   592 ;;_ne	offset	46
   593 ;;_m	offset	48
   594 ;;_pp	offset	50
   595 ;;_t	offset	52
   596 ;;_mode	offset	54
   597 ;;_nmode	offset	55
   598 ;;_fp	offset=-2 (param)
   599 ;;_f	offset=-6 (param)
   600 ;;_c	offset=-7 (param)
   601 ;;_tolower$6163	offset	0
   602 ;;_c	offset=-2 (param)
   603 ;;_c	offset=-2 (param)
   604 ;;_d	offset	0
   605 ;;_s	offset	2
   606 ;;_dest	offset=-2 (param)
   607 ;;_src	offset=-4 (param)
   608 ;;_u	offset	0
   609 ;;_m	offset	4
   610 ;;_e	offset	8
   611 ;;_x	offset=-4 (param)
   612 ;;_u	offset	0
   613 ;;_e	offset	4
   614 ;;_x	offset=-4 (param)
   615 ;;_exp1	offset	0
   616 ;;_sign1	offset	1
   617 ;;_f1	offset=-4 (param)
   618 ;;_b	offset=-4 (param)
   619 ;;_a	offset=-8 (param)
   620 ;;_grs	offset	0
   621 ;;_bexp	offset	1
   622 ;;_aexp	offset	2
   623 ;;_signs	offset	3
   624 ;;_b	offset=-4 (param)
   625 ;;_a	offset=-8 (param)
   626 ;;_f1	offset=-4 (param)
   627 ;;_prod	offset	0
   628 ;;_grs	offset	4
   629 ;;_temp	offset	8
   630 ;;_bexp	offset	10
   631 ;;_aexp	offset	11
   632 ;;_sign	offset	12
   633 ;;_b	offset=-4 (param)
   634 ;;_a	offset=-8 (param)
   635 ;;_ff1	offset=-4 (param)
   636 ;;_ff2	offset=-8 (param)
   637 ;;_ff1	offset=-4 (param)
   638 ;;_ff2	offset=-8 (param)
   639 ;;_grs	offset	0
   640 ;;_rem	offset	4
   641 ;;_new_exp	offset	8
   642 ;;_aexp	offset	10
   643 ;;_bexp	offset	11
   644 ;;_sign	offset	12
   645 ;;_b	offset=-4 (param)
   646 ;;_a	offset=-8 (param)
   647 ;;_sign	offset	0
   648 ;;_counter	offset	1
   649 ;;_dividend	offset=-2 (param)
   650 ;;_divisor	offset=-4 (param)
   651 ;;_quotient	offset	0
   652 ;;_sign	offset	2
   653 ;;_counter	offset	3
   654 ;;_dividend	offset=-2 (param)
   655 ;;_divisor	offset=-4 (param)
   656 ;;_dtoa$5310	offset	0
   657 ;;_n	offset	2
   658 ;;_i	offset	10
   659 ;;_s	offset	12
   660 ;;_w	offset	14
   661 ;;_p	offset	16
   662 ;;_fp	offset=-2 (param)
   663 ;;_d	offset=-10 (param)
   664 ;;_a	offset=-2 (param)
   665 ;;_sign	offset	0
   666 ;;_counter	offset	1
   667 ;;_dividend	offset=-8 (param)
   668 ;;_divisor	offset=-16 (param)
   669 ;;_quotient	offset	0
   670 ;;_sign	offset	8
   671 ;;_counter	offset	9
   672 ;;_dividend	offset=-8 (param)
   673 ;;_divisor	offset=-16 (param)
   674 ;;_w	offset	0
   675 ;;_fp	offset=-2 (param)
   676 ;;_c	offset=-3 (param)
   677 ;;_w	offset	0
   678 ;;_i	offset	2
   679 ;;_fp	offset=-2 (param)
   680 ;;_buf	offset=-4 (param)
   681 ;;_p	offset=-6 (param)
   682 ;;_a	offset	0
   683 ;;_s	offset=-2 (param)
   684 ;;_i	offset	0
   685 ;;_c	offset	2
   686 ;;_s	offset=-2 (param)
   687 ;;_fp	offset=-4 (param)
   688 ;;_c	offset=-2 (param)
   689 ;;_fp	offset=-4 (param)
   690 ;;_c	offset=-1 (param)
   691 ;;__this	offset=-2 (param)
   692 ;;_c	offset=-3 (param)
   693 ;;_atoi$5894	offset	0
   694 ;;_atoi$5892	offset	2
   695 ;;_atoi$5893	offset	4
   696 ;;_n	offset	5
   697 ;;_neg	offset	7
   698 ;;_s	offset=-2 (param)
   699 ;;_isspace$5943	offset	0
   700 ;;_c	offset=-2 (param)
   701 ;;_c	offset=-2 (param)
   702 ;;_dsize	offset=-2 (param)
   703 ;;_u	offset	0
   704 ;;_x	offset=-4 (param)
   705 ;;_timer	offset=-1 (param)
   706 ;;_count	offset=-3 (param)
   707 ;;_channel	offset=-1 (param)
   708 ;;_i	offset	0
   709                           
   710                           	psect	idataBIGRAM
   711  017BB8                     __pidataBIGRAM:
   712                           	opt callstack 0
   713                           
   714                           ;initializer for _port_data
   715  017BB8  FF                 	db	255
   716  017BB9  00                 	db	0
   717  017BBA  FF                 	db	255
   718  017BBB  00                 	db	0
   719  017BBC  FF                 	db	255
   720  017BBD  00                 	db	0
   721  017BBE  FF                 	db	255
   722  017BBF  00                 	db	0
   723  017BC0  FF                 	db	255
   724  017BC1  00                 	db	0
   725  017BC2  FF                 	db	255
   726  017BC3  00                 	db	0
   727  017BC4  FF                 	db	255
   728  017BC5  00                 	db	0
   729  017BC6  FF                 	db	255
   730  017BC7  00                 	db	0
   731  017BC8  00                 	db	0
   732  017BC9  00                 	db	0
   733  017BCA  00                 	db	0
   734  017BCB  00                 	db	0
   735  017BCC  00                 	db	0
   736  017BCD  00                 	db	0
   737  017BCE  00                 	db	0
   738  017BCF  00                 	db	0
   739  017BD0  00                 	db	0
   740  017BD1  00                 	db	0
   741  017BD2  00                 	db	0
   742  017BD3  00                 	db	0
   743  017BD4  00                 	db	0
   744  017BD5  00                 	db	0
   745  017BD6  00                 	db	0
   746  017BD7  00                 	db	0
   747  017BD8  00                 	db	0
   748  017BD9  00                 	db	0
   749  017BDA  00                 	db	0
   750  017BDB  00                 	db	0
   751  017BDC  00                 	db	0
   752  017BDD  00                 	db	0
   753  017BDE  00                 	db	0
   754  017BDF  00                 	db	0
   755  017BE0  00                 	db	0
   756  017BE1  00                 	db	0
   757  017BE2  00                 	db	0
   758  017BE3  00                 	db	0
   759  017BE4  00                 	db	0
   760  017BE5  00                 	db	0
   761  017BE6  00                 	db	0
   762  017BE7  00                 	db	0
   763  017BE8  00                 	db	0
   764  017BE9  00                 	db	0
   765  017BEA  00                 	db	0
   766  017BEB  00                 	db	0
   767  017BEC  00                 	db	0
   768  017BED  00                 	db	0
   769  017BEE  00                 	db	0
   770  017BEF  00                 	db	0
   771  017BF0  00                 	db	0
   772  017BF1  00                 	db	0
   773  017BF2  00                 	db	0
   774  017BF3  00                 	db	0
   775  017BF4  00                 	db	0
   776  017BF5  00                 	db	0
   777  017BF6  00                 	db	0
   778  017BF7  00                 	db	0
   779  017BF8  00                 	db	0
   780  017BF9  00                 	db	0
   781  017BFA  00                 	db	0
   782  017BFB  00                 	db	0
   783  017BFC  00                 	db	0
   784  017BFD  00                 	db	0
   785  017BFE  00                 	db	0
   786  017BFF  00                 	db	0
   787  017C00  00                 	db	0
   788  017C01  00                 	db	0
   789  017C02  00                 	db	0
   790  017C03  00                 	db	0
   791  017C04  00                 	db	0
   792  017C05  00                 	db	0
   793  017C06  00                 	db	0
   794  017C07  00                 	db	0
   795  017C08  00                 	db	0
   796  017C09  00                 	db	0
   797  017C0A  00                 	db	0
   798  017C0B  00                 	db	0
   799  017C0C  00                 	db	0
   800  017C0D  00                 	db	0
   801  017C0E  00                 	db	0
   802  017C0F  00                 	db	0
   803  017C10  00                 	db	0
   804  017C11  00                 	db	0
   805  017C12  00                 	db	0
   806  017C13  00                 	db	0
   807  017C14  00                 	db	0
   808  017C15  00                 	db	0
   809  017C16  00                 	db	0
   810  017C17  00                 	db	0
   811  017C18  00                 	db	0
   812  017C19  00                 	db	0
   813  017C1A  00                 	db	0
   814  017C1B  00                 	db	0
   815  017C1C  00                 	db	0
   816  017C1D  00                 	db	0
   817  017C1E  00                 	db	0
   818  017C1F  00                 	db	0
   819  017C20  00                 	db	0
   820  017C21  00                 	db	0
   821  017C22  00                 	db	0
   822  017C23  00                 	db	0
   823  017C24  00                 	db	0
   824  017C25  00                 	db	0
   825  017C26  00                 	db	0
   826  017C27  00                 	db	0
   827  017C28  00                 	db	0
   828  017C29  00                 	db	0
   829  017C2A  00                 	db	0
   830  017C2B  00                 	db	0
   831  017C2C  00                 	db	0
   832  017C2D  00                 	db	0
   833  017C2E  00                 	db	0
   834  017C2F  00                 	db	0
   835  017C30  00                 	db	0
   836  017C31  00                 	db	0
   837  017C32  00                 	db	0
   838  017C33  00                 	db	0
   839  017C34  00                 	db	0
   840  017C35  00                 	db	0
   841  017C36  00                 	db	0
   842  017C37  00                 	db	0
   843  017C38  00                 	db	0
   844  017C39  00                 	db	0
   845  017C3A  00                 	db	0
   846  017C3B  00                 	db	0
   847  017C3C  00                 	db	0
   848  017C3D  00                 	db	0
   849  017C3E  00                 	db	0
   850  017C3F  00                 	db	0
   851  017C40  00                 	db	0
   852  017C41  00                 	db	0
   853  017C42  00                 	db	0
   854  017C43  00                 	db	0
   855  017C44  00                 	db	0
   856  017C45  00                 	db	0
   857  017C46  00                 	db	0
   858  017C47  00                 	db	0
   859  017C48  00                 	db	0
   860  017C49  00                 	db	0
   861  017C4A  00                 	db	0
   862  017C4B  00                 	db	0
   863  017C4C  00                 	db	0
   864  017C4D  00                 	db	0
   865  017C4E  00                 	db	0
   866  017C4F  00                 	db	0
   867  017C50  00                 	db	0
   868  017C51  00                 	db	0
   869  017C52  00                 	db	0
   870  017C53  00                 	db	0
   871  017C54  00                 	db	0
   872  017C55  00                 	db	0
   873  017C56  00                 	db	0
   874  017C57  00                 	db	0
   875  017C58  00                 	db	0
   876  017C59  00                 	db	0
   877  017C5A  00                 	db	0
   878  017C5B  00                 	db	0
   879  017C5C  00                 	db	0
   880  017C5D  00                 	db	0
   881  017C5E  00                 	db	0
   882  017C5F  00                 	db	0
   883  017C60  00                 	db	0
   884  017C61  00                 	db	0
   885  017C62  00                 	db	0
   886  017C63  00                 	db	0
   887  017C64  00                 	db	0
   888  017C65  00                 	db	0
   889  017C66  00                 	db	0
   890  017C67  00                 	db	0
   891  017C68  00                 	db	0
   892  017C69  00                 	db	0
   893  017C6A  00                 	db	0
   894  017C6B  00                 	db	0
   895  017C6C  00                 	db	0
   896  017C6D  00                 	db	0
   897  017C6E  00                 	db	0
   898  017C6F  00                 	db	0
   899  017C70  00                 	db	0
   900  017C71  00                 	db	0
   901  017C72  00                 	db	0
   902  017C73  00                 	db	0
   903  017C74  00                 	db	0
   904  017C75  00                 	db	0
   905  017C76  00                 	db	0
   906  017C77  00                 	db	0
   907  017C78  00                 	db	0
   908  017C79  00                 	db	0
   909  017C7A  00                 	db	0
   910  017C7B  00                 	db	0
   911  017C7C  00                 	db	0
   912  017C7D  00                 	db	0
   913  017C7E  00                 	db	0
   914  017C7F  00                 	db	0
   915  017C80  00                 	db	0
   916  017C81  00                 	db	0
   917  017C82  00                 	db	0
   918  017C83  00                 	db	0
   919  017C84  00                 	db	0
   920  017C85  00                 	db	0
   921  017C86  00                 	db	0
   922  017C87  00                 	db	0
   923  017C88  00                 	db	0
   924  017C89  00                 	db	0
   925  017C8A  00                 	db	0
   926  017C8B  00                 	db	0
   927  017C8C  00                 	db	0
   928  017C8D  00                 	db	0
   929  017C8E  00                 	db	0
   930  017C8F  00                 	db	0
   931  017C90  00                 	db	0
   932  017C91  00                 	db	0
   933  017C92  00                 	db	0
   934  017C93  00                 	db	0
   935  017C94  00                 	db	0
   936  017C95  00                 	db	0
   937  017C96  00                 	db	0
   938  017C97  00                 	db	0
   939  017C98  00                 	db	0
   940  017C99  00                 	db	0
   941  017C9A  00                 	db	0
   942  017C9B  00                 	db	0
   943  017C9C  00                 	db	0
   944  017C9D  00                 	db	0
   945  017C9E  00                 	db	0
   946  017C9F  00                 	db	0
   947  017CA0  00                 	db	0
   948  017CA1  00                 	db	0
   949  017CA2  00                 	db	0
   950  017CA3  00                 	db	0
   951  017CA4  00                 	db	0
   952  017CA5  00                 	db	0
   953  017CA6  00                 	db	0
   954  017CA7  00                 	db	0
   955  017CA8  00                 	db	0
   956  017CA9  00                 	db	0
   957  017CAA  00                 	db	0
   958  017CAB  00                 	db	0
   959  017CAC  00                 	db	0
   960  017CAD  00                 	db	0
   961  017CAE  00                 	db	0
   962  017CAF  00                 	db	0
   963  017CB0  00                 	db	0
   964  017CB1  00                 	db	0
   965  017CB2  00                 	db	0
   966  017CB3  00                 	db	0
   967  017CB4  00                 	db	0
   968  017CB5  00                 	db	0
   969  017CB6  00                 	db	0
   970  017CB7  00                 	db	0
   971  017CB8  00                 	db	0
   972  017CB9  00                 	db	0
   973  017CBA  00                 	db	0
   974  017CBB  00                 	db	0
   975  017CBC  00                 	db	0
   976  017CBD  00                 	db	0
   977  017CBE  00                 	db	0
   978  017CBF  00                 	db	0
   979  017CC0  00                 	db	0
   980  017CC1  00                 	db	0
   981  017CC2  00                 	db	0
   982  017CC3  00                 	db	0
   983  017CC4  00                 	db	0
   984  017CC5  00                 	db	0
   985  017CC6  00                 	db	0
   986  017CC7  00                 	db	0
   987  017CC8  00                 	db	0
   988  017CC9  00                 	db	0
   989  017CCA  00                 	db	0
   990  017CCB  00                 	db	0
   991  017CCC  00                 	db	0
   992  017CCD  00                 	db	0
   993  017CCE  00                 	db	0
   994  017CCF  00                 	db	0
   995  017CD0  00                 	db	0
   996  017CD1  00                 	db	0
   997  017CD2  00                 	db	0
   998  017CD3  00                 	db	0
   999  017CD4  00                 	db	0
  1000  017CD5  00                 	db	0
  1001  017CD6  00                 	db	0
  1002  017CD7  00                 	db	0
  1003  017CD8  00                 	db	0
  1004  017CD9  00                 	db	0
  1005  017CDA  00                 	db	0
  1006  017CDB  00                 	db	0
  1007  017CDC  00                 	db	0
  1008  017CDD  00                 	db	0
  1009  017CDE  00                 	db	0
  1010  017CDF  00                 	db	0
  1011  017CE0  00                 	db	0
  1012  017CE1  00                 	db	0
  1013  017CE2  00                 	db	0
  1014  017CE3  00                 	db	0
  1015  017CE4  00                 	db	0
  1016  017CE5  00                 	db	0
  1017  017CE6  00                 	db	0
  1018  017CE7  00                 	db	0
  1019  017CE8  00                 	db	0
  1020  017CE9  00                 	db	0
  1021  017CEA  00                 	db	0
  1022  017CEB  00                 	db	0
  1023  017CEC  00                 	db	0
  1024  017CED  00                 	db	0
  1025  017CEE  00                 	db	0
  1026  017CEF  00                 	db	0
  1027  017CF0  00                 	db	0
  1028  017CF1  00                 	db	0
  1029  017CF2  00                 	db	0
  1030  017CF3  00                 	db	0
  1031  017CF4  00                 	db	0
  1032  017CF5  00                 	db	0
  1033  017CF6  00                 	db	0
  1034  017CF7  00                 	db	0
  1035  017CF8  00                 	db	0
  1036  017CF9  00                 	db	0
  1037  017CFA  00                 	db	0
  1038  017CFB  00                 	db	0
  1039  017CFC  00                 	db	0
  1040  017CFD  00                 	db	0
  1041  017CFE  00                 	db	0
  1042  017CFF  00                 	db	0
  1043  017D00  00                 	db	0
  1044  017D01  00                 	db	0
  1045  017D02  00                 	db	0
  1046  017D03  00                 	db	0
  1047  017D04  00                 	db	0
  1048  017D05  00                 	db	0
  1049  017D06  00                 	db	0
  1050  017D07  00                 	db	0
  1051  017D08  00                 	db	0
  1052  017D09  00                 	db	0
  1053  017D0A  00                 	db	0
  1054  017D0B  00                 	db	0
  1055  017D0C  00                 	db	0
  1056  017D0D  00                 	db	0
  1057  017D0E  00                 	db	0
  1058  017D0F  00                 	db	0
  1059  017D10  00                 	db	0
  1060  017D11  00                 	db	0
  1061  017D12  00                 	db	0
  1062  017D13  00                 	db	0
  1063  017D14  00                 	db	0
  1064  017D15  00                 	db	0
  1065  017D16  00                 	db	0
  1066  017D17  00                 	db	0
  1067  017D18  00                 	db	0
  1068  017D19  00                 	db	0
  1069  017D1A  00                 	db	0
  1070  017D1B  00                 	db	0
  1071  017D1C  00                 	db	0
  1072  017D1D  00                 	db	0
  1073  017D1E  00                 	db	0
  1074  017D1F  00                 	db	0
  1075  017D20  00                 	db	0
  1076  017D21  00                 	db	0
  1077  017D22  00                 	db	0
  1078  017D23  00                 	db	0
  1079  017D24  00                 	db	0
  1080  017D25  00                 	db	0
  1081  017D26  00                 	db	0
  1082  017D27  00                 	db	0
  1083  017D28  00                 	db	0
  1084  017D29  00                 	db	0
  1085  017D2A  00                 	db	0
  1086  017D2B  00                 	db	0
  1087  017D2C  00                 	db	0
  1088  017D2D  00                 	db	0
  1089  017D2E  00                 	db	0
  1090  017D2F  00                 	db	0
  1091  017D30  00                 	db	0
  1092  017D31  00                 	db	0
  1093  017D32  00                 	db	0
  1094  017D33  00                 	db	0
  1095  017D34  00                 	db	0
  1096  017D35  00                 	db	0
  1097  017D36  00                 	db	0
  1098  017D37  00                 	db	0
  1099  017D38  00                 	db	0
  1100  017D39  00                 	db	0
  1101  017D3A  00                 	db	0
  1102  017D3B  00                 	db	0
  1103  017D3C  00                 	db	0
  1104  017D3D  00                 	db	0
  1105  017D3E  00                 	db	0
  1106  017D3F  00                 	db	0
  1107  017D40  00                 	db	0
  1108  017D41  00                 	db	0
  1109  017D42  00                 	db	0
  1110  017D43  00                 	db	0
  1111  017D44  00                 	db	0
  1112  017D45  00                 	db	0
  1113  017D46  00                 	db	0
  1114  017D47  00                 	db	0
  1115  017D48  00                 	db	0
  1116  017D49  00                 	db	0
  1117  017D4A  00                 	db	0
  1118  017D4B  00                 	db	0
  1119  017D4C  00                 	db	0
  1120  017D4D  00                 	db	0
  1121  017D4E  00                 	db	0
  1122  017D4F  00                 	db	0
  1123  017D50  00                 	db	0
  1124  017D51  00                 	db	0
  1125  017D52  00                 	db	0
  1126  017D53  00                 	db	0
  1127  017D54  00                 	db	0
  1128  017D55  00                 	db	0
  1129  017D56  00                 	db	0
  1130  017D57  00                 	db	0
  1131  017D58  00                 	db	0
  1132  017D59  00                 	db	0
  1133  017D5A  00                 	db	0
  1134  017D5B  00                 	db	0
  1135  017D5C  00                 	db	0
  1136  017D5D  00                 	db	0
  1137  017D5E  00                 	db	0
  1138  017D5F  00                 	db	0
  1139  017D60  00                 	db	0
  1140  017D61  00                 	db	0
  1141  017D62  00                 	db	0
  1142  017D63  00                 	db	0
  1143  017D64  00                 	db	0
  1144  017D65  00                 	db	0
  1145  017D66  00                 	db	0
  1146  017D67  00                 	db	0
  1147  017D68  00                 	db	0
  1148  017D69  00                 	db	0
  1149  017D6A  00                 	db	0
  1150  017D6B  00                 	db	0
  1151  017D6C  00                 	db	0
  1152  017D6D  00                 	db	0
  1153  017D6E  00                 	db	0
  1154  017D6F  00                 	db	0
  1155  017D70  00                 	db	0
  1156  017D71  00                 	db	0
  1157  017D72  00                 	db	0
  1158  017D73  00                 	db	0
  1159  017D74  00                 	db	0
  1160  017D75  00                 	db	0
  1161  017D76  00                 	db	0
  1162  017D77  00                 	db	0
  1163  017D78  00                 	db	0
  1164  017D79  00                 	db	0
  1165  017D7A  00                 	db	0
  1166  017D7B  00                 	db	0
  1167  017D7C  00                 	db	0
  1168  017D7D  00                 	db	0
  1169  017D7E  00                 	db	0
  1170  017D7F  00                 	db	0
  1171  017D80  00                 	db	0
  1172  017D81  00                 	db	0
  1173  017D82  00                 	db	0
  1174  017D83  00                 	db	0
  1175  017D84  00                 	db	0
  1176  017D85  00                 	db	0
  1177  017D86  00                 	db	0
  1178  017D87  00                 	db	0
  1179  017D88  00                 	db	0
  1180  017D89  00                 	db	0
  1181  017D8A  00                 	db	0
  1182  017D8B  00                 	db	0
  1183  017D8C  00                 	db	0
  1184  017D8D  00                 	db	0
  1185  017D8E  00                 	db	0
  1186  017D8F  00                 	db	0
  1187  017D90  00                 	db	0
  1188  017D91  00                 	db	0
  1189  017D92  00                 	db	0
  1190  017D93  00                 	db	0
  1191  017D94  00                 	db	0
  1192  017D95  00                 	db	0
  1193  017D96  00                 	db	0
  1194  017D97  00                 	db	0
  1195  017D98  00                 	db	0
  1196  017D99  00                 	db	0
  1197  017D9A  00                 	db	0
  1198  017D9B  00                 	db	0
  1199  017D9C  00                 	db	0
  1200  017D9D  00                 	db	0
  1201  017D9E  00                 	db	0
  1202  017D9F  00                 	db	0
  1203  017DA0  00                 	db	0
  1204  017DA1  00                 	db	0
  1205  017DA2  00                 	db	0
  1206  017DA3  00                 	db	0
  1207  017DA4  00                 	db	0
  1208  017DA5  00                 	db	0
  1209  017DA6  00                 	db	0
  1210  017DA7  00                 	db	0
  1211  017DA8  00                 	db	0
  1212  017DA9  00                 	db	0
  1213  017DAA  00                 	db	0
  1214  017DAB  00                 	db	0
  1215  017DAC  00                 	db	0
  1216  017DAD  00                 	db	0
  1217  017DAE  00                 	db	0
  1218  017DAF  00                 	db	0
  1219  017DB0  00                 	db	0
  1220  017DB1  00                 	db	0
  1221  017DB2  00                 	db	0
  1222  017DB3  00                 	db	0
  1223  017DB4  00                 	db	0
  1224  017DB5  00                 	db	0
  1225  017DB6  00                 	db	0
  1226  017DB7  00                 	db	0
  1227                           
  1228                           	psect	idataBANK0
  1229  01ADCC                     __pidataBANK0:
  1230                           	opt callstack 0
  1231                           
  1232                           ;initializer for _R
  1233  01ADCC  0000               	dw	0
  1234  01ADCE  0000               	dw	0
  1235  01ADD0  0000               	dw	0
  1236  01ADD2  0000               	dw	0
  1237  01ADD4  0000               	dw	0
  1238  01ADD6  0000               	dw	0
  1239  01ADD8  0000               	dw	0
  1240  01ADDA  0000               	dw	0
  1241  01ADDC  0000               	dw	0
  1242  01ADDE  0000               	dw	0
  1243  01ADE0  0000               	dw	0
  1244  01ADE2  0000               	dw	0
  1245  01ADE4  0000               	dw	0
  1246  01ADE6  0000               	dw	0
  1247  01ADE8  0000               	dw	0
  1248  01ADEA  0000               	dw	0
  1249  01ADEC  0F67               	dw	3943
  1250  01ADEE  0F8F               	dw	3983
  1251  01ADF0  00                 	db	0
  1252  01ADF1  0000               	dw	0
  1253  01ADF3  00                 	db	0
  1254                           
  1255                           ;initializer for stoa@F1166
  1256  01ADF4  28                 	db	40
  1257  01ADF5  6E                 	db	110
  1258  01ADF6  75                 	db	117
  1259  01ADF7  6C                 	db	108
  1260  01ADF8  6C                 	db	108
  1261  01ADF9  29                 	db	41
  1262  01ADFA  00                 	db	0
  1263                           
  1264                           ;initializer for _H
  1265  01ADFB  00                 	db	0
  1266  01ADFC  00                 	db	0
  1267  01ADFD  01                 	db	1
  1268  01ADFE  00                 	db	0
  1269  01ADFF  01                 	db	1
  1270  01AE00  00                 	db	0
  1271  01AE01  00                 	db	0
  1272                           
  1273                           	psect	idataBANK1
  1274  019618                     __pidataBANK1:
  1275                           	opt callstack 0
  1276                           
  1277                           ;initializer for _C
  1278  019618  0000               	dw	0
  1279  01961A  0000               	dw	0
  1280  01961C  0000               	dw	0
  1281  01961E  0000               	dw	0
  1282  019620  0000               	dw	0
  1283  019622  0000               	dw	0
  1284  019624  0000               	dw	0
  1285  019626  0000               	dw	0
  1286  019628  0000               	dw	0
  1287  01962A  0000               	dw	0
  1288  01962C  0000               	dw	0
  1289  01962E  0000               	dw	0
  1290  019630  0000               	dw	0
  1291  019632  0000               	dw	0
  1292  019634  0000               	dw	0
  1293  019636  0000               	dw	0
  1294  019638  0000               	dw	0
  1295  01963A  0000               	dw	0
  1296  01963C  0000               	dw	0
  1297  01963E  0000               	dw	0
  1298  019640  0000               	dw	0
  1299  019642  0000               	dw	0
  1300  019644  0000               	dw	0
  1301  019646  0000               	dw	0
  1302  019648  0000               	dw	0
  1303  01964A  0000               	dw	0
  1304  01964C  0000               	dw	0
  1305  01964E  0000               	dw	0
  1306  019650  0000               	dw	0
  1307  019652  0000               	dw	0
  1308  019654  0000               	dw	0
  1309  019656  0000               	dw	0
  1310  019658  0000               	dw	0
  1311  01965A  0000               	dw	0
  1312  01965C  0000               	dw	0
  1313  01965E  0000               	dw	0
  1314  019660  0000               	dw	0
  1315  019662  0000               	dw	0
  1316  019664  0000               	dw	0
  1317  019666  0000               	dw	0
  1318  019668  0000               	dw	0
  1319  01966A  0000               	dw	0
  1320  01966C  0000               	dw	0
  1321  01966E  0000               	dw	0
  1322  019670  0000               	dw	0
  1323  019672  0000               	dw	0
  1324  019674  0000               	dw	0
  1325  019676  0000               	dw	0
  1326  019678  0000               	dw	0
  1327  01967A  0000               	dw	0
  1328  01967C  0000               	dw	0
  1329  01967E  0000               	dw	0
  1330  019680  0000               	dw	0
  1331  019682  0000               	dw	0
  1332  019684  0000               	dw	0
  1333  019686  0000               	dw	0
  1334  019688  0000               	dw	0
  1335  01968A  0000               	dw	0
  1336  01968C  0000               	dw	0
  1337  01968E  0000               	dw	0
  1338  019690  0000               	dw	0
  1339  019692  0000               	dw	0
  1340  019694  0000               	dw	0
  1341  019696  0000               	dw	0
  1342  019698  0000               	dw	0
  1343  01969A  0000               	dw	0
  1344  01969C  0000               	dw	0
  1345  01969E  0000               	dw	0
  1346  0196A0  0000               	dw	0
  1347  0196A2  42FA               	dw	17146
  1348  0196A4  00                 	db	0
  1349  0196A5  00                 	db	0
  1350  0196A6  00                 	db	0
  1351  0196A7  00                 	db	0
  1352  0196A8  00                 	db	0
  1353  0196A9  00                 	db	0
  1354  0196AA  00                 	db	0
  1355  0196AB  00                 	db	0
  1356  0196AC  00                 	db	0
  1357  0196AD  00                 	db	0
  1358  0196AE  00                 	db	0
  1359  0196AF  00                 	db	0
  1360  0196B0  00                 	db	0
  1361  0196B1  00                 	db	0
  1362  0196B2  00                 	db	0
  1363  0196B3  00                 	db	0
  1364  0196B4  00                 	db	0
  1365  0196B5  00                 	db	0
  1366  0196B6  00                 	db	0
  1367  0196B7  00                 	db	0
  1368  0196B8  00                 	db	0
  1369  0196B9  00                 	db	0
  1370  0196BA  00                 	db	0
  1371  0196BB  00                 	db	0
  1372  0196BC  00                 	db	0
  1373  0196BD  00                 	db	0
  1374  0196BE  00                 	db	0
  1375  0196BF  00                 	db	0
  1376  0196C0  00                 	db	0
  1377  0196C1  00                 	db	0
  1378  0196C2  00                 	db	0
  1379  0196C3  00                 	db	0
  1380  0196C4  00                 	db	0
  1381  0196C5  00                 	db	0
  1382  0196C6  00                 	db	0
  1383  0196C7  00                 	db	0
  1384  0196C8  00                 	db	0
  1385  0196C9  00                 	db	0
  1386  0196CA  00                 	db	0
  1387  0196CB  00                 	db	0
  1388  0196CC  00                 	db	0
  1389  0196CD  00                 	db	0
  1390  0196CE  00                 	db	0
  1391  0196CF  00                 	db	0
  1392  0196D0  00                 	db	0
  1393  0196D1  00                 	db	0
  1394  0196D2  00                 	db	0
  1395  0196D3  00                 	db	0
  1396  0196D4  00                 	db	0
  1397  0196D5  00                 	db	0
  1398  0196D6  00                 	db	0
  1399  0196D7  00                 	db	0
  1400  0196D8  00                 	db	0
  1401  0196D9  00                 	db	0
  1402  0196DA  00                 	db	0
  1403  0196DB  00                 	db	0
  1404  0196DC  00                 	db	0
  1405  0196DD  00                 	db	0
  1406  0196DE  00                 	db	0
  1407  0196DF  00                 	db	0
  1408  0196E0  00                 	db	0
  1409  0196E1  00                 	db	0
  1410  0196E2  00                 	db	0
  1411  0196E3  00                 	db	0
  1412  0196E4  00                 	db	0
  1413  0196E5  00                 	db	0
  1414  0196E6  00                 	db	0
  1415  0196E7  00                 	db	0
  1416  0196E8  00                 	db	0
  1417  0196E9  00                 	db	0
  1418  0196EA  00                 	db	0
  1419  0196EB  00                 	db	0
  1420  0196EC  00                 	db	0
  1421  0196ED  00                 	db	0
  1422  0196EE  00                 	db	0
  1423  0196EF  00                 	db	0
  1424  0196F0  00                 	db	0
  1425  0196F1  00                 	db	0
  1426  0196F2  00                 	db	0
  1427  0196F3  00                 	db	0
  1428  0196F4  00                 	db	0
  1429  0196F5  00                 	db	0
  1430  0196F6  00                 	db	0
  1431  0196F7  00                 	db	0
  1432  0196F8  00                 	db	0
  1433  0196F9  00                 	db	0
  1434  0196FA  00                 	db	0
  1435  0196FB  00                 	db	0
  1436  0196FC  00                 	db	0
  1437  0196FD  00                 	db	0
  1438  0196FE  00                 	db	0
  1439  0196FF  00                 	db	0
  1440  019700  00                 	db	0
  1441  019701  00                 	db	0
  1442  019702  00                 	db	0
  1443  019703  00                 	db	0
  1444  019704  00                 	db	0
  1445  019705  00                 	db	0
  1446  019706  00                 	db	0
  1447  019707  00                 	db	0
  1448  019708  00                 	db	0
  1449  019709  00                 	db	0
  1450  01970A  00                 	db	0
  1451  01970B  00                 	db	0
  1452  01970C  00                 	db	0
  1453  01970D  00                 	db	0
  1454  01970E  00                 	db	0
  1455                           
  1456                           	psect	idataBANK2
  1457  019A78                     __pidataBANK2:
  1458                           	opt callstack 0
  1459                           
  1460                           ;initializer for _V
  1461  019A78  00                 	db	0
  1462  019A79  00                 	db	0
  1463  019A7A  00                 	db	0
  1464  019A7B  00                 	db	0
  1465  019A7C  00                 	db	0
  1466  019A7D  00                 	db	0
  1467  019A7E  00                 	db	0
  1468  019A7F  00                 	db	0
  1469  019A80  00                 	db	0
  1470  019A81  00                 	db	0
  1471  019A82  00                 	db	0
  1472  019A83  00                 	db	0
  1473  019A84  00                 	db	0
  1474  019A85  00                 	db	0
  1475  019A86  00                 	db	0
  1476  019A87  00                 	db	0
  1477  019A88  00                 	db	0
  1478  019A89  00                 	db	0
  1479  019A8A  00                 	db	0
  1480  019A8B  00                 	db	0
  1481  019A8C  00                 	db	0
  1482  019A8D  00                 	db	0
  1483  019A8E  00                 	db	0
  1484  019A8F  00                 	db	0
  1485  019A90  00                 	db	0
  1486  019A91  00                 	db	0
  1487  019A92  00                 	db	0
  1488  019A93  00                 	db	0
  1489  019A94  00                 	db	0
  1490  019A95  00                 	db	0
  1491  019A96  00                 	db	0
  1492  019A97  00                 	db	0
  1493  019A98  00                 	db	0
  1494  019A99  00                 	db	0
  1495  019A9A  00                 	db	0
  1496  019A9B  00                 	db	0
  1497  019A9C  00                 	db	0
  1498  019A9D  00                 	db	0
  1499  019A9E  00                 	db	0
  1500  019A9F  00                 	db	0
  1501  019AA0  00                 	db	0
  1502  019AA1  00                 	db	0
  1503  019AA2  00                 	db	0
  1504  019AA3  00                 	db	0
  1505  019AA4  00                 	db	0
  1506  019AA5  00                 	db	0
  1507  019AA6  00                 	db	0
  1508  019AA7  00                 	db	0
  1509  019AA8  00                 	db	0
  1510  019AA9  00                 	db	0
  1511  019AAA  00                 	db	0
  1512  019AAB  00                 	db	0
  1513  019AAC  00                 	db	0
  1514  019AAD  00                 	db	0
  1515  019AAE  00                 	db	0
  1516  019AAF  00                 	db	0
  1517  019AB0  00                 	db	0
  1518  019AB1  00                 	db	0
  1519  019AB2  00                 	db	0
  1520  019AB3  00                 	db	0
  1521  019AB4  00                 	db	0
  1522  019AB5  00                 	db	0
  1523  019AB6  00                 	db	0
  1524  019AB7  00                 	db	0
  1525  019AB8  00                 	db	0
  1526  019AB9  00                 	db	0
  1527  019ABA  00                 	db	0
  1528  019ABB  00                 	db	0
  1529  019ABC  00                 	db	0
  1530  019ABD  00                 	db	0
  1531  019ABE  00                 	db	0
  1532  019ABF  00                 	db	0
  1533  019AC0  00                 	db	0
  1534  019AC1  00                 	db	0
  1535  019AC2  00                 	db	0
  1536  019AC3  00                 	db	0
  1537  019AC4  00                 	db	0
  1538  019AC5  00                 	db	0
  1539  019AC6  00                 	db	0
  1540  019AC7  00                 	db	0
  1541  019AC8  00                 	db	0
  1542  019AC9  00                 	db	0
  1543  019ACA  00                 	db	0
  1544  019ACB  00                 	db	0
  1545  019ACC  00                 	db	0
  1546  019ACD  00                 	db	0
  1547  019ACE  00                 	db	0
  1548  019ACF  00                 	db	0
  1549  019AD0  00                 	db	0
  1550  019AD1  00                 	db	0
  1551  019AD2  00                 	db	0
  1552  019AD3  00                 	db	0
  1553  019AD4  00                 	db	0
  1554  019AD5  00                 	db	0
  1555  019AD6  00                 	db	0
  1556  019AD7  00                 	db	0
  1557  019AD8  00                 	db	0
  1558  019AD9  00                 	db	0
  1559  019ADA  00                 	db	0
  1560  019ADB  00                 	db	0
  1561  019ADC  00                 	db	0
  1562  019ADD  00                 	db	0
  1563  019ADE  00                 	db	0
  1564  019ADF  00                 	db	0
  1565  019AE0  00                 	db	0
  1566  019AE1  00                 	db	0
  1567  019AE2  00                 	db	0
  1568  019AE3  00                 	db	0
  1569  019AE4  00                 	db	0
  1570  019AE5  00                 	db	0
  1571  019AE6  00                 	db	0
  1572  019AE7  00                 	db	0
  1573  019AE8  00                 	db	0
  1574  019AE9  00                 	db	0
  1575  019AEA  00                 	db	0
  1576  019AEB  00                 	db	0
  1577  019AEC  00                 	db	0
  1578  019AED  00                 	db	0
  1579  019AEE  00                 	db	0
  1580  019AEF  00                 	db	0
  1581  019AF0  00                 	db	0
  1582  019AF1  00                 	db	0
  1583  019AF2  00                 	db	0
  1584  019AF3  00                 	db	0
  1585  019AF4  00                 	db	0
  1586  019AF5  00                 	db	0
  1587  019AF6  00                 	db	0
  1588  019AF7  00                 	db	0
  1589  019AF8  00                 	db	0
  1590  019AF9  0000               	dw	0
  1591  019AFB  0000               	dw	0
  1592  019AFD  0000               	dw	0
  1593  019AFF  0000               	dw	0
  1594  019B01  00                 	db	0
  1595  019B02  00                 	db	0
  1596  019B03  00                 	db	0
  1597  019B04  00                 	db	0
  1598  019B05  00                 	db	0
  1599  019B06  00                 	db	0
  1600  019B07  0000               	dw	0
  1601  019B09  0000               	dw	0
  1602  019B0B  0000               	dw	0
  1603  019B0D  0000               	dw	0
  1604  019B0F  0000               	dw	0
  1605  019B11  0000               	dw	0
  1606  019B13  00                 	db	0
  1607  019B14  00                 	db	0
  1608  019B15  00                 	db	0
  1609  019B16  00                 	db	0
  1610  019B17  00                 	db	0
  1611  019B18  00                 	db	0
  1612  019B19  00                 	db	0
  1613  019B1A  00                 	db	0
  1614  019B1B  00                 	db	0
  1615  019B1C  00                 	db	0
  1616  019B1D  00                 	db	0
  1617  019B1E  0000               	dw	0
  1618  019B20  0000               	dw	0
  1619  019B22  2D                 	db	45
  1620  019B23  00                 	db	0
  1621  019B24  00                 	db	0
  1622  019B25  0000               	dw	0
  1623  019B27  0000               	dw	0
  1624  019B29  0000               	dw	0
  1625  019B2B  0000               	dw	0
  1626  019B2D  0000               	dw	0
  1627  019B2F  0000               	dw	0
  1628  019B31  0000               	dw	0
  1629  019B33  0000               	dw	0
  1630                           
  1631                           	psect	mediumconst
  1632  00FA7A                     __pmediumconst:
  1633                           	opt callstack 0
  1634  00FA7A  00                 	db	0
  1635  00FA7B                     _BVSOC_TABLE:
  1636                           	opt callstack 0
  1637  00FA7B  59D8               	dw	23000
  1638  00FA7D  0000               	dw	0
  1639  00FA7F  0005               	dw	5
  1640  00FA81  0000               	dw	0
  1641  00FA83  5B68               	dw	23400
  1642  00FA85  0000               	dw	0
  1643  00FA87  000A               	dw	10
  1644  00FA89  0000               	dw	0
  1645  00FA8B  5C30               	dw	23600
  1646  00FA8D  0000               	dw	0
  1647  00FA8F  0014               	dw	20
  1648  00FA91  0000               	dw	0
  1649  00FA93  5E38               	dw	24120
  1650  00FA95  0000               	dw	0
  1651  00FA97  0019               	dw	25
  1652  00FA99  0000               	dw	0
  1653  00FA9B  5E88               	dw	24200
  1654  00FA9D  0000               	dw	0
  1655  00FA9F  001E               	dw	30
  1656  00FAA1  0000               	dw	0
  1657  00FAA3  5F78               	dw	24440
  1658  00FAA5  0000               	dw	0
  1659  00FAA7  0028               	dw	40
  1660  00FAA9  0000               	dw	0
  1661  00FAAB  5FDC               	dw	24540
  1662  00FAAD  0000               	dw	0
  1663  00FAAF  002D               	dw	45
  1664  00FAB1  0000               	dw	0
  1665  00FAB3  6018               	dw	24600
  1666  00FAB5  0000               	dw	0
  1667  00FAB7  0032               	dw	50
  1668  00FAB9  0000               	dw	0
  1669  00FABB  6046               	dw	24646
  1670  00FABD  0000               	dw	0
  1671  00FABF  0035               	dw	53
  1672  00FAC1  0000               	dw	0
  1673  00FAC3  607C               	dw	24700
  1674  00FAC5  0000               	dw	0
  1675  00FAC7  0037               	dw	55
  1676  00FAC9  0000               	dw	0
  1677  00FACB  60AE               	dw	24750
  1678  00FACD  0000               	dw	0
  1679  00FACF  0039               	dw	57
  1680  00FAD1  0000               	dw	0
  1681  00FAD3  60E0               	dw	24800
  1682  00FAD5  0000               	dw	0
  1683  00FAD7  003C               	dw	60
  1684  00FAD9  0000               	dw	0
  1685  00FADB  6112               	dw	24850
  1686  00FADD  0000               	dw	0
  1687  00FADF  003F               	dw	63
  1688  00FAE1  0000               	dw	0
  1689  00FAE3  615D               	dw	24925
  1690  00FAE5  0000               	dw	0
  1691  00FAE7  0043               	dw	67
  1692  00FAE9  0000               	dw	0
  1693  00FAEB  61A8               	dw	25000
  1694  00FAED  0000               	dw	0
  1695  00FAEF  0046               	dw	70
  1696  00FAF1  0000               	dw	0
  1697  00FAF3  61BC               	dw	25020
  1698  00FAF5  0000               	dw	0
  1699  00FAF7  0048               	dw	72
  1700  00FAF9  0000               	dw	0
  1701  00FAFB  61D0               	dw	25040
  1702  00FAFD  0000               	dw	0
  1703  00FAFF  004B               	dw	75
  1704  00FB01  0000               	dw	0
  1705  00FB03  61DA               	dw	25050
  1706  00FB05  0000               	dw	0
  1707  00FB07  0050               	dw	80
  1708  00FB09  0000               	dw	0
  1709  00FB0B  61E4               	dw	25060
  1710  00FB0D  0000               	dw	0
  1711  00FB0F  0055               	dw	85
  1712  00FB11  0000               	dw	0
  1713  00FB13  61F8               	dw	25080
  1714  00FB15  0000               	dw	0
  1715  00FB17  005A               	dw	90
  1716  00FB19  0000               	dw	0
  1717  00FB1B  6208               	dw	25096
  1718  00FB1D  0000               	dw	0
  1719  00FB1F  005C               	dw	92
  1720  00FB21  0000               	dw	0
  1721  00FB23  6222               	dw	25122
  1722  00FB25  0000               	dw	0
  1723  00FB27  005D               	dw	93
  1724  00FB29  0000               	dw	0
  1725  00FB2B  6234               	dw	25140
  1726  00FB2D  0000               	dw	0
  1727  00FB2F  005F               	dw	95
  1728  00FB31  0000               	dw	0
  1729  00FB33  6248               	dw	25160
  1730  00FB35  0000               	dw	0
  1731  00FB37  0061               	dw	97
  1732  00FB39  0000               	dw	0
  1733  00FB3B  625C               	dw	25180
  1734  00FB3D  0000               	dw	0
  1735  00FB3F  0064               	dw	100
  1736  00FB41  0000               	dw	0
  1737  00FB43  6784               	dw	26500
  1738  00FB45  0000               	dw	0
  1739  00FB47  0062               	dw	98
  1740  00FB49  0000               	dw	0
  1741  00FB4B                     __end_of_BVSOC_TABLE:
  1742                           	opt callstack 0
  1743  00FB4B                     _T:
  1744                           	opt callstack 0
  1745  00FB4B  63                 	db	99
  1746  00FB4C  6F                 	db	111
  1747  00FB4D  6D                 	db	109
  1748  00FB4E  6D                 	db	109
  1749  00FB4F  61                 	db	97
  1750  00FB50  6E                 	db	110
  1751  00FB51  64                 	db	100
  1752  00FB52  73                 	db	115
  1753  00FB53  20                 	db	32
  1754  00FB54  31                 	db	49
  1755  00FB55  00                 	db	0
  1756  00FB56  00                 	db	0
  1757  00FB57  00                 	db	0
  1758  00FB58  00                 	db	0
  1759  00FB59  00                 	db	0
  1760  00FB5A  00                 	db	0
  1761  00FB5B  00                 	db	0
  1762  00FB5C  00                 	db	0
  1763  00FB5D  64                 	db	100
  1764  00FB5E  69                 	db	105
  1765  00FB5F  73                 	db	115
  1766  00FB60  70                 	db	112
  1767  00FB61  6C                 	db	108
  1768  00FB62  61                 	db	97
  1769  00FB63  79                 	db	121
  1770  00FB64  73                 	db	115
  1771  00FB65  20                 	db	32
  1772  00FB66  31                 	db	49
  1773  00FB67  00                 	db	0
  1774  00FB68  00                 	db	0
  1775  00FB69  00                 	db	0
  1776  00FB6A  00                 	db	0
  1777  00FB6B  00                 	db	0
  1778  00FB6C  00                 	db	0
  1779  00FB6D  00                 	db	0
  1780  00FB6E  00                 	db	0
  1781  00FB6F  63                 	db	99
  1782  00FB70  6F                 	db	111
  1783  00FB71  6D                 	db	109
  1784  00FB72  6D                 	db	109
  1785  00FB73  61                 	db	97
  1786  00FB74  6E                 	db	110
  1787  00FB75  64                 	db	100
  1788  00FB76  73                 	db	115
  1789  00FB77  20                 	db	32
  1790  00FB78  32                 	db	50
  1791  00FB79  00                 	db	0
  1792  00FB7A  00                 	db	0
  1793  00FB7B  00                 	db	0
  1794  00FB7C  00                 	db	0
  1795  00FB7D  00                 	db	0
  1796  00FB7E  00                 	db	0
  1797  00FB7F  00                 	db	0
  1798  00FB80  00                 	db	0
  1799  00FB81  64                 	db	100
  1800  00FB82  69                 	db	105
  1801  00FB83  73                 	db	115
  1802  00FB84  70                 	db	112
  1803  00FB85  6C                 	db	108
  1804  00FB86  61                 	db	97
  1805  00FB87  79                 	db	121
  1806  00FB88  73                 	db	115
  1807  00FB89  20                 	db	32
  1808  00FB8A  32                 	db	50
  1809  00FB8B  00                 	db	0
  1810  00FB8C  00                 	db	0
  1811  00FB8D  00                 	db	0
  1812  00FB8E  00                 	db	0
  1813  00FB8F  00                 	db	0
  1814  00FB90  00                 	db	0
  1815  00FB91  00                 	db	0
  1816  00FB92  00                 	db	0
  1817  00FB93  63                 	db	99
  1818  00FB94  6F                 	db	111
  1819  00FB95  6D                 	db	109
  1820  00FB96  6D                 	db	109
  1821  00FB97  61                 	db	97
  1822  00FB98  6E                 	db	110
  1823  00FB99  64                 	db	100
  1824  00FB9A  73                 	db	115
  1825  00FB9B  20                 	db	32
  1826  00FB9C  33                 	db	51
  1827  00FB9D  00                 	db	0
  1828  00FB9E  00                 	db	0
  1829  00FB9F  00                 	db	0
  1830  00FBA0  00                 	db	0
  1831  00FBA1  00                 	db	0
  1832  00FBA2  00                 	db	0
  1833  00FBA3  00                 	db	0
  1834  00FBA4  00                 	db	0
  1835  00FBA5  64                 	db	100
  1836  00FBA6  69                 	db	105
  1837  00FBA7  73                 	db	115
  1838  00FBA8  70                 	db	112
  1839  00FBA9  6C                 	db	108
  1840  00FBAA  61                 	db	97
  1841  00FBAB  79                 	db	121
  1842  00FBAC  73                 	db	115
  1843  00FBAD  20                 	db	32
  1844  00FBAE  33                 	db	51
  1845  00FBAF  00                 	db	0
  1846  00FBB0  00                 	db	0
  1847  00FBB1  00                 	db	0
  1848  00FBB2  00                 	db	0
  1849  00FBB3  00                 	db	0
  1850  00FBB4  00                 	db	0
  1851  00FBB5  00                 	db	0
  1852  00FBB6  00                 	db	0
  1853  00FBB7  63                 	db	99
  1854  00FBB8  6F                 	db	111
  1855  00FBB9  6D                 	db	109
  1856  00FBBA  6D                 	db	109
  1857  00FBBB  61                 	db	97
  1858  00FBBC  6E                 	db	110
  1859  00FBBD  64                 	db	100
  1860  00FBBE  73                 	db	115
  1861  00FBBF  20                 	db	32
  1862  00FBC0  34                 	db	52
  1863  00FBC1  00                 	db	0
  1864  00FBC2  00                 	db	0
  1865  00FBC3  00                 	db	0
  1866  00FBC4  00                 	db	0
  1867  00FBC5  00                 	db	0
  1868  00FBC6  00                 	db	0
  1869  00FBC7  00                 	db	0
  1870  00FBC8  00                 	db	0
  1871  00FBC9  64                 	db	100
  1872  00FBCA  69                 	db	105
  1873  00FBCB  73                 	db	115
  1874  00FBCC  70                 	db	112
  1875  00FBCD  6C                 	db	108
  1876  00FBCE  61                 	db	97
  1877  00FBCF  79                 	db	121
  1878  00FBD0  73                 	db	115
  1879  00FBD1  20                 	db	32
  1880  00FBD2  34                 	db	52
  1881  00FBD3  00                 	db	0
  1882  00FBD4  00                 	db	0
  1883  00FBD5  00                 	db	0
  1884  00FBD6  00                 	db	0
  1885  00FBD7  00                 	db	0
  1886  00FBD8  00                 	db	0
  1887  00FBD9  00                 	db	0
  1888  00FBDA  00                 	db	0
  1889  00FBDB                     __end_of_T:
  1890                           	opt callstack 0
  1891  00FBDB                     _spin:
  1892                           	opt callstack 0
  1893  00FBDB  7C                 	db	124
  1894  00FBDC  7C                 	db	124
  1895  00FBDD  2F                 	db	47
  1896  00FBDE  2F                 	db	47
  1897  00FBDF  2D                 	db	45
  1898  00FBE0  2D                 	db	45
  1899  00FBE1  00                 	db	0
  1900  00FBE2  00                 	db	0
  1901  00FBE3  00                 	db	0
  1902  00FBE4  00                 	db	0
  1903  00FBE5  00                 	db	0
  1904  00FBE6  00                 	db	0
  1905  00FBE7  00                 	db	0
  1906  00FBE8  00                 	db	0
  1907  00FBE9  00                 	db	0
  1908  00FBEA  00                 	db	0
  1909  00FBEB  00                 	db	0
  1910  00FBEC  00                 	db	0
  1911  00FBED  00                 	db	0
  1912  00FBEE  00                 	db	0
  1913  00FBEF  7C                 	db	124
  1914  00FBF0  7C                 	db	124
  1915  00FBF1  2F                 	db	47
  1916  00FBF2  2F                 	db	47
  1917  00FBF3  2D                 	db	45
  1918  00FBF4  2D                 	db	45
  1919  00FBF5  5C                 	db	92
  1920  00FBF6  5C                 	db	92
  1921  00FBF7  00                 	db	0
  1922  00FBF8  00                 	db	0
  1923  00FBF9  00                 	db	0
  1924  00FBFA  00                 	db	0
  1925  00FBFB  00                 	db	0
  1926  00FBFC  00                 	db	0
  1927  00FBFD  00                 	db	0
  1928  00FBFE  00                 	db	0
  1929  00FBFF  00                 	db	0
  1930  00FC00  00                 	db	0
  1931  00FC01  00                 	db	0
  1932  00FC02  00                 	db	0
  1933  00FC03  4F                 	db	79
  1934  00FC04  4F                 	db	79
  1935  00FC05  4F                 	db	79
  1936  00FC06  4F                 	db	79
  1937  00FC07  4F                 	db	79
  1938  00FC08  4F                 	db	79
  1939  00FC09  2D                 	db	45
  1940  00FC0A  2D                 	db	45
  1941  00FC0B  5F                 	db	95
  1942  00FC0C  5F                 	db	95
  1943  00FC0D  2D                 	db	45
  1944  00FC0E  00                 	db	0
  1945  00FC0F  00                 	db	0
  1946  00FC10  00                 	db	0
  1947  00FC11  00                 	db	0
  1948  00FC12  00                 	db	0
  1949  00FC13  00                 	db	0
  1950  00FC14  00                 	db	0
  1951  00FC15  00                 	db	0
  1952  00FC16  00                 	db	0
  1953  00FC17  76                 	db	118
  1954  00FC18  76                 	db	118
  1955  00FC19  3C                 	db	60
  1956  00FC1A  3C                 	db	60
  1957  00FC1B  5E                 	db	94
  1958  00FC1C  5E                 	db	94
  1959  00FC1D  3E                 	db	62
  1960  00FC1E  3E                 	db	62
  1961  00FC1F  00                 	db	0
  1962  00FC20  00                 	db	0
  1963  00FC21  00                 	db	0
  1964  00FC22  00                 	db	0
  1965  00FC23  00                 	db	0
  1966  00FC24  00                 	db	0
  1967  00FC25  00                 	db	0
  1968  00FC26  00                 	db	0
  1969  00FC27  00                 	db	0
  1970  00FC28  00                 	db	0
  1971  00FC29  00                 	db	0
  1972  00FC2A  00                 	db	0
  1973  00FC2B  2E                 	db	46
  1974  00FC2C  2E                 	db	46
  1975  00FC2D  2A                 	db	42
  1976  00FC2E  2A                 	db	42
  1977  00FC2F  78                 	db	120
  1978  00FC30  23                 	db	35
  1979  00FC31  78                 	db	120
  1980  00FC32  23                 	db	35
  1981  00FC33  58                 	db	88
  1982  00FC34  58                 	db	88
  1983  00FC35  7C                 	db	124
  1984  00FC36  7C                 	db	124
  1985  00FC37  2D                 	db	45
  1986  00FC38  2D                 	db	45
  1987  00FC39  00                 	db	0
  1988  00FC3A  00                 	db	0
  1989  00FC3B  00                 	db	0
  1990  00FC3C  00                 	db	0
  1991  00FC3D  00                 	db	0
  1992  00FC3E  00                 	db	0
  1993  00FC3F  2E                 	db	46
  1994  00FC40  2E                 	db	46
  1995  00FC41  6F                 	db	111
  1996  00FC42  6F                 	db	111
  1997  00FC43  4F                 	db	79
  1998  00FC44  4F                 	db	79
  1999  00FC45  6F                 	db	111
  2000  00FC46  6F                 	db	111
  2001  00FC47  00                 	db	0
  2002  00FC48  00                 	db	0
  2003  00FC49  00                 	db	0
  2004  00FC4A  00                 	db	0
  2005  00FC4B  00                 	db	0
  2006  00FC4C  00                 	db	0
  2007  00FC4D  00                 	db	0
  2008  00FC4E  00                 	db	0
  2009  00FC4F  00                 	db	0
  2010  00FC50  00                 	db	0
  2011  00FC51  00                 	db	0
  2012  00FC52  00                 	db	0
  2013  00FC53                     __end_of_spin:
  2014                           	opt callstack 0
  2015  00FC53  0000               	dw	0
  2016  00FC55  3F80               	dw	16256
  2017  00FC57  0000               	dw	0
  2018  00FC59  3FC0               	dw	16320
  2019  00FC5B                     __end_of_bp:
  2020                           	opt callstack 0
  2021  00FC5B  AA00               	dw	43520
  2022  00FC5D  3FB8               	dw	16312
  2023  00FC5F                     __end_of_ivln2_h:
  2024                           	opt callstack 0
  2025  00FC5F  23C6               	dw	9158
  2026  00FC61  B8F6               	dw	47350
  2027  00FC63                     __end_of_cp_l:
  2028                           	opt callstack 0
  2029  00FC63  4000               	dw	16384
  2030  00FC65  3F76               	dw	16246
  2031  00FC67                     __end_of_cp_h:
  2032                           	opt callstack 0
  2033  0000                     _IVTADL	set	14493
  2034  0000                     _IVTADH	set	14494
  2035  0000                     _IVTADU	set	14495
  2036  0000                     _PIR6bits	set	14758
  2037  0000                     _PIR4bits	set	14756
  2038  0000                     _PIE8bits	set	14744
  2039  0000                     _PIR8bits	set	14760
  2040  0000                     _SCANPR	set	14839
  2041  0000                     _DMA2PR	set	14836
  2042  0000                     _DMA1PR	set	14835
  2043  0000                     _MAINPR	set	14834
  2044  0000                     _ISRPR	set	14833
  2045  0000                     _PIE2bits	set	14738
  2046  0000                     _PIR2bits	set	14754
  2047  0000                     _PIE9bits	set	14745
  2048  0000                     _PIR9bits	set	14761
  2049  0000                     _PIE6bits	set	14742
  2050  0000                     _PIE3bits	set	14739
  2051  0000                     _PMD7	set	14791
  2052  0000                     _PMD6	set	14790
  2053  0000                     _PMD5	set	14789
  2054  0000                     _PMD4	set	14788
  2055  0000                     _PMD3	set	14787
  2056  0000                     _PMD2	set	14786
  2057  0000                     _PMD1	set	14785
  2058  0000                     _PMD0	set	14784
  2059  0000                     _OSCTUNE	set	14814
  2060  0000                     _OSCFRQ	set	14815
  2061  0000                     _OSCEN	set	14813
  2062  0000                     _OSCCON3	set	14811
  2063  0000                     _OSCCON1	set	14809
  2064  0000                     _IPR8bits	set	14728
  2065  0000                     _IPR9bits	set	14729
  2066  0000                     _IPR5bits	set	14725
  2067  0000                     _IPR1bits	set	14721
  2068  0000                     _IPR3bits	set	14723
  2069  0000                     _IPR6bits	set	14726
  2070  0000                     _IPR2bits	set	14722
  2071  0000                     _PIE5bits	set	14741
  2072  0000                     _PIE1bits	set	14737
  2073  0000                     _PIR5bits	set	14757
  2074  0000                     _PIR1bits	set	14753
  2075  0000                     _PLLR	set	118496
  2076  0000                     _SPI1SDIPPS	set	15071
  2077  0000                     _U1RXPPS	set	15077
  2078  0000                     _RC6PPS	set	14870
  2079  0000                     _RC5PPS	set	14869
  2080  0000                     _INT1PPS	set	15041
  2081  0000                     _RD1PPS	set	14873
  2082  0000                     _INT0PPS	set	15040
  2083  0000                     _RC3PPS	set	14867
  2084  0000                     _RB6PPS	set	14862
  2085  0000                     _SPI1SCKPPS	set	15070
  2086  0000                     _U2RXPPS	set	15080
  2087  0000                     _SLRCONF	set	14995
  2088  0000                     _SLRCONE	set	14979
  2089  0000                     _SLRCOND	set	14963
  2090  0000                     _SLRCONC	set	14947
  2091  0000                     _SLRCONB	set	14931
  2092  0000                     _SLRCONA	set	14915
  2093  0000                     _ODCOND	set	14962
  2094  0000                     _ODCONC	set	14946
  2095  0000                     _ODCONB	set	14930
  2096  0000                     _ODCONA	set	14914
  2097  0000                     _ODCONF	set	14994
  2098  0000                     _ODCONE	set	14978
  2099  0000                     _WPUC	set	14945
  2100  0000                     _WPUA	set	14913
  2101  0000                     _WPUB	set	14929
  2102  0000                     _WPUE	set	14977
  2103  0000                     _WPUF	set	14993
  2104  0000                     _WPUD	set	14961
  2105  0000                     _ANSELA	set	14912
  2106  0000                     _ANSELF	set	14992
  2107  0000                     _ANSELE	set	14976
  2108  0000                     _ANSELB	set	14928
  2109  0000                     _ANSELC	set	14944
  2110  0000                     _ANSELD	set	14960
  2111  0000                     _DMA2SSA	set	15321
  2112  0000                     _DMA1SSA	set	15353
  2113  0000                     _DMA2DSZ	set	15310
  2114  0000                     _DMA2SSZ	set	15319
  2115  0000                     _DMA2DSA	set	15312
  2116  0000                     _DMA1DSZ	set	15342
  2117  0000                     _DMA1SSZ	set	15351
  2118  0000                     _DMA1DSA	set	15344
  2119  0000                     _DMA2CON0bits	set	15324
  2120  0000                     _DMA2CON1bits	set	15325
  2121  0000                     _DMA1CON0bits	set	15356
  2122  0000                     _DMA1CON1bits	set	15357
  2123  0000                     _DMA2CON0	set	15324
  2124  0000                     _DMA2AIRQ	set	15326
  2125  0000                     _DMA2SIRQ	set	15327
  2126  0000                     _DMA2CON1	set	15325
  2127  0000                     _DMA1CON0	set	15356
  2128  0000                     _DMA1AIRQ	set	15358
  2129  0000                     _DMA1SIRQ	set	15359
  2130  0000                     _DMA1CON1	set	15357
  2131  0000                     _CLKRCON	set	15589
  2132  0000                     _CLKRCLK	set	15590
  2133  0000                     _SPI1INTFbits	set	15642
  2134  0000                     _SPI1RXB	set	15632
  2135  0000                     _SPI1TXB	set	15633
  2136  0000                     _SPI1TCNTL	set	15634
  2137  0000                     _SPI1CON0	set	15636
  2138  0000                     _SPI1CLK	set	15644
  2139  0000                     _SPI1BAUD	set	15641
  2140  0000                     _SPI1CON2	set	15638
  2141  0000                     _SPI1CON1	set	15637
  2142  0000                     _U2RXB	set	15824
  2143  0000                     _U2TXB	set	15826
  2144  0000                     _U2ERRIE	set	15842
  2145  0000                     _U2ERRIR	set	15841
  2146  0000                     _U2UIR	set	15840
  2147  0000                     _U2FIFO	set	15839
  2148  0000                     _U2BRGH	set	15838
  2149  0000                     _U2BRGL	set	15837
  2150  0000                     _U2CON2	set	15836
  2151  0000                     _U2CON1	set	15835
  2152  0000                     _U2CON0	set	15834
  2153  0000                     _U2P3L	set	15832
  2154  0000                     _U2P2L	set	15830
  2155  0000                     _U2P1L	set	15828
  2156  0000                     _U1RXB	set	15848
  2157  0000                     _U1ERRIE	set	15866
  2158  0000                     _U1ERRIR	set	15865
  2159  0000                     _U1UIR	set	15864
  2160  0000                     _U1FIFO	set	15863
  2161  0000                     _U1BRGH	set	15862
  2162  0000                     _U1BRGL	set	15861
  2163  0000                     _U1CON2	set	15860
  2164  0000                     _U1CON1	set	15859
  2165  0000                     _U1CON0	set	15858
  2166  0000                     _U1P3H	set	15857
  2167  0000                     _U1P3L	set	15856
  2168  0000                     _U1P2H	set	15855
  2169  0000                     _U1P2L	set	15854
  2170  0000                     _U1P1H	set	15853
  2171  0000                     _U1P1L	set	15852
  2172  0000                     _FVRCON	set	16065
  2173  0000                     _ADFLTRL	set	16102
  2174  0000                     _ADFLTRH	set	16103
  2175  0000                     _ADCON0bits	set	16120
  2176  0000                     _ADCON0	set	16120
  2177  0000                     _ADCLK	set	16127
  2178  0000                     _ADACT	set	16126
  2179  0000                     _ADREF	set	16125
  2180  0000                     _ADSTAT	set	16124
  2181  0000                     _ADCON3	set	16123
  2182  0000                     _ADCON2	set	16122
  2183  0000                     _ADCON1	set	16121
  2184  0000                     _ADPREH	set	16119
  2185  0000                     _ADPREL	set	16118
  2186  0000                     _ADCAP	set	16117
  2187  0000                     _ADACQH	set	16116
  2188  0000                     _ADACQL	set	16115
  2189  0000                     _ADPCH	set	16113
  2190  0000                     _ADRPT	set	16108
  2191  0000                     _ADACCU	set	16106
  2192  0000                     _ADSTPTH	set	16101
  2193  0000                     _ADSTPTL	set	16100
  2194  0000                     _ADUTHH	set	16097
  2195  0000                     _ADUTHL	set	16096
  2196  0000                     _ADLTHH	set	16095
  2197  0000                     _ADLTHL	set	16094
  2198  0000                     _CCPTMRS1bits	set	16223
  2199  0000                     _PORTFbits	set	16335
  2200  0000                     _LATCbits	set	16316
  2201  0000                     _LATDbits	set	16317
  2202  0000                     _PORTBbits	set	16331
  2203  0000                     _T3CONbits	set	16294
  2204  0000                     _T3CON	set	16294
  2205  0000                     _TMR3L	set	16292
  2206  0000                     _TMR3H	set	16293
  2207  0000                     _T3CLK	set	16297
  2208  0000                     _T3GATE	set	16296
  2209  0000                     _T3GCON	set	16295
  2210  0000                     _T2CON	set	16300
  2211  0000                     _T2TMR	set	16298
  2212  0000                     _T2PR	set	16299
  2213  0000                     _T2RST	set	16303
  2214  0000                     _T2HLT	set	16301
  2215  0000                     _T2CLKCON	set	16302
  2216  0000                     _PWM8DCL	set	16224
  2217  0000                     _PWM8DCH	set	16225
  2218  0000                     _PWM8CON	set	16226
  2219  0000                     _LATEbits	set	16318
  2220  0000                     _T5CONbits	set	16282
  2221  0000                     _T5CON	set	16282
  2222  0000                     _TMR5L	set	16280
  2223  0000                     _TMR5H	set	16281
  2224  0000                     _T5CLK	set	16285
  2225  0000                     _T5GATE	set	16284
  2226  0000                     _T5GCON	set	16283
  2227  0000                     _T6CON	set	16276
  2228  0000                     _T6TMR	set	16274
  2229  0000                     _T6PR	set	16275
  2230  0000                     _T6RST	set	16279
  2231  0000                     _T6HLT	set	16277
  2232  0000                     _T6CLKCON	set	16278
  2233  0000                     _TRISD	set	16325
  2234  0000                     _TRISC	set	16324
  2235  0000                     _TRISB	set	16323
  2236  0000                     _TRISA	set	16322
  2237  0000                     _TRISF	set	16327
  2238  0000                     _TRISE	set	16326
  2239  0000                     _LATC	set	16316
  2240  0000                     _LATB	set	16315
  2241  0000                     _LATF	set	16319
  2242  0000                     _LATA	set	16314
  2243  0000                     _LATD	set	16317
  2244  0000                     _LATE	set	16318
  2245  0000                     _IVTLOCKbits	set	16340
  2246  0000                     _IVTLOCK	set	16340
  2247  0000                     _INTCON0bits	set	16338
  2248  0000                     _GIE	set	130711
  2249  00FC67                     STR_65:
  2250                           
  2251                           ; BSR set to: 57
  2252  00FC67  20                 	db	32
  2253  00FC68  25                 	db	37
  2254  00FC69  6C                 	db	108	;'l'
  2255  00FC6A  75                 	db	117	;'u'
  2256  00FC6B  2C                 	db	44
  2257  00FC6C  25                 	db	37
  2258  00FC6D  34                 	db	52	;'4'
  2259  00FC6E  2E                 	db	46
  2260  00FC6F  34                 	db	52	;'4'
  2261  00FC70  66                 	db	102	;'f'
  2262  00FC71  2C                 	db	44
  2263  00FC72  25                 	db	37
  2264  00FC73  34                 	db	52	;'4'
  2265  00FC74  2E                 	db	46
  2266  00FC75  34                 	db	52	;'4'
  2267  00FC76  66                 	db	102	;'f'
  2268  00FC77  2C                 	db	44
  2269  00FC78  25                 	db	37
  2270  00FC79  34                 	db	52	;'4'
  2271  00FC7A  2E                 	db	46
  2272  00FC7B  34                 	db	52	;'4'
  2273  00FC7C  66                 	db	102	;'f'
  2274  00FC7D  2C                 	db	44
  2275  00FC7E  25                 	db	37
  2276  00FC7F  34                 	db	52	;'4'
  2277  00FC80  2E                 	db	46
  2278  00FC81  34                 	db	52	;'4'
  2279  00FC82  66                 	db	102	;'f'
  2280  00FC83  2C                 	db	44
  2281  00FC84  25                 	db	37
  2282  00FC85  34                 	db	52	;'4'
  2283  00FC86  2E                 	db	46
  2284  00FC87  33                 	db	51	;'3'
  2285  00FC88  66                 	db	102	;'f'
  2286  00FC89  2C                 	db	44
  2287  00FC8A  25                 	db	37
  2288  00FC8B  34                 	db	52	;'4'
  2289  00FC8C  2E                 	db	46
  2290  00FC8D  33                 	db	51	;'3'
  2291  00FC8E  66                 	db	102	;'f'
  2292  00FC8F  2C                 	db	44
  2293  00FC90  25                 	db	37
  2294  00FC91  34                 	db	52	;'4'
  2295  00FC92  2E                 	db	46
  2296  00FC93  33                 	db	51	;'3'
  2297  00FC94  66                 	db	102	;'f'
  2298  00FC95  2C                 	db	44
  2299  00FC96  25                 	db	37
  2300  00FC97  34                 	db	52	;'4'
  2301  00FC98  2E                 	db	46
  2302  00FC99  33                 	db	51	;'3'
  2303  00FC9A  66                 	db	102	;'f'
  2304  00FC9B  2C                 	db	44
  2305  00FC9C  25                 	db	37
  2306  00FC9D  34                 	db	52	;'4'
  2307  00FC9E  2E                 	db	46
  2308  00FC9F  33                 	db	51	;'3'
  2309  00FCA0  66                 	db	102	;'f'
  2310  00FCA1  2C                 	db	44
  2311  00FCA2  25                 	db	37
  2312  00FCA3  34                 	db	52	;'4'
  2313  00FCA4  2E                 	db	46
  2314  00FCA5  33                 	db	51	;'3'
  2315  00FCA6  66                 	db	102	;'f'
  2316  00FCA7  2C                 	db	44
  2317  00FCA8  25                 	db	37
  2318  00FCA9  34                 	db	52	;'4'
  2319  00FCAA  2E                 	db	46
  2320  00FCAB  33                 	db	51	;'3'
  2321  00FCAC  64                 	db	100	;'d'
  2322  00FCAD  2C                 	db	44
  2323  00FCAE  25                 	db	37
  2324  00FCAF  34                 	db	52	;'4'
  2325  00FCB0  2E                 	db	46
  2326  00FCB1  33                 	db	51	;'3'
  2327  00FCB2  64                 	db	100	;'d'
  2328  00FCB3  2C                 	db	44
  2329  00FCB4  25                 	db	37
  2330  00FCB5  32                 	db	50	;'2'
  2331  00FCB6  2E                 	db	46
  2332  00FCB7  36                 	db	54	;'6'
  2333  00FCB8  66                 	db	102	;'f'
  2334  00FCB9  0D                 	db	13
  2335  00FCBA  0A                 	db	10
  2336  00FCBB  00                 	db	0
  2337  00FCBC                     STR_17:
  2338                           
  2339                           ; BSR set to: 57
  2340  00FCBC  52                 	db	82	;'R'
  2341  00FCBD  31                 	db	49	;'1'
  2342  00FCBE  20                 	db	32
  2343  00FCBF  25                 	db	37
  2344  00FCC0  32                 	db	50	;'2'
  2345  00FCC1  2E                 	db	46
  2346  00FCC2  33                 	db	51	;'3'
  2347  00FCC3  66                 	db	102	;'f'
  2348  00FCC4  20                 	db	32
  2349  00FCC5  25                 	db	37
  2350  00FCC6  33                 	db	51	;'3'
  2351  00FCC7  2E                 	db	46
  2352  00FCC8  34                 	db	52	;'4'
  2353  00FCC9  66                 	db	102	;'f'
  2354  00FCCA  20                 	db	32
  2355  00FCCB  20                 	db	32
  2356  00FCCC  20                 	db	32
  2357  00FCCD  20                 	db	32
  2358  00FCCE  20                 	db	32
  2359  00FCCF  20                 	db	32
  2360  00FCD0  20                 	db	32
  2361  00FCD1  20                 	db	32
  2362  00FCD2  20                 	db	32
  2363  00FCD3  20                 	db	32
  2364  00FCD4  20                 	db	32
  2365  00FCD5  00                 	db	0
  2366  00FCD6                     STR_18:
  2367                           
  2368                           ; BSR set to: 57
  2369  00FCD6  52                 	db	82	;'R'
  2370  00FCD7  32                 	db	50	;'2'
  2371  00FCD8  20                 	db	32
  2372  00FCD9  25                 	db	37
  2373  00FCDA  32                 	db	50	;'2'
  2374  00FCDB  2E                 	db	46
  2375  00FCDC  33                 	db	51	;'3'
  2376  00FCDD  66                 	db	102	;'f'
  2377  00FCDE  20                 	db	32
  2378  00FCDF  25                 	db	37
  2379  00FCE0  33                 	db	51	;'3'
  2380  00FCE1  2E                 	db	46
  2381  00FCE2  34                 	db	52	;'4'
  2382  00FCE3  66                 	db	102	;'f'
  2383  00FCE4  20                 	db	32
  2384  00FCE5  20                 	db	32
  2385  00FCE6  20                 	db	32
  2386  00FCE7  20                 	db	32
  2387  00FCE8  20                 	db	32
  2388  00FCE9  20                 	db	32
  2389  00FCEA  20                 	db	32
  2390  00FCEB  20                 	db	32
  2391  00FCEC  20                 	db	32
  2392  00FCED  20                 	db	32
  2393  00FCEE  20                 	db	32
  2394  00FCEF  00                 	db	0
  2395  00FCF0                     
  2396                           ; BSR set to: 57
  2397  00FCF0  20                 	db	32
  2398  00FCF1  4D                 	db	77	;'M'
  2399  00FCF2  65                 	db	101	;'e'
  2400  00FCF3  73                 	db	115	;'s'
  2401  00FCF4  67                 	db	103	;'g'
  2402  00FCF5  20                 	db	32
  2403  00FCF6  25                 	db	37
  2404  00FCF7  64                 	db	100	;'d'
  2405  00FCF8  20                 	db	32
  2406  00FCF9  53                 	db	83	;'S'
  2407  00FCFA  74                 	db	116	;'t'
  2408  00FCFB  61                 	db	97	;'a'
  2409  00FCFC  63                 	db	99	;'c'
  2410  00FCFD  6B                 	db	107	;'k'
  2411  00FCFE  20                 	db	32
  2412  00FCFF  25                 	db	37
  2413  00FD00  64                 	db	100	;'d'
  2414  00FD01  20                 	db	32
  2415  00FD02  20                 	db	32
  2416  00FD03  20                 	db	32
  2417  00FD04  20                 	db	32
  2418  00FD05  20                 	db	32
  2419  00FD06  20                 	db	32
  2420  00FD07  00                 	db	0
  2421  00FD08                     STR_9:
  2422                           
  2423                           ; BSR set to: 57
  2424  00FD08  53                 	db	83	;'S'
  2425  00FD09  20                 	db	32
  2426  00FD0A  53                 	db	83	;'S'
  2427  00FD0B  25                 	db	37
  2428  00FD0C  63                 	db	99	;'c'
  2429  00FD0D  43                 	db	67	;'C'
  2430  00FD0E  20                 	db	32
  2431  00FD0F  25                 	db	37
  2432  00FD10  64                 	db	100	;'d'
  2433  00FD11  20                 	db	32
  2434  00FD12  25                 	db	37
  2435  00FD13  32                 	db	50	;'2'
  2436  00FD14  2E                 	db	46
  2437  00FD15  34                 	db	52	;'4'
  2438  00FD16  66                 	db	102	;'f'
  2439  00FD17  20                 	db	32
  2440  00FD18  20                 	db	32
  2441  00FD19  20                 	db	32
  2442  00FD1A  20                 	db	32
  2443  00FD1B  20                 	db	32
  2444  00FD1C  20                 	db	32
  2445  00FD1D  20                 	db	32
  2446  00FD1E  00                 	db	0
  2447  00FD1F                     STR_16:
  2448                           
  2449                           ; BSR set to: 57
  2450  00FD1F  45                 	db	69	;'E'
  2451  00FD20  53                 	db	83	;'S'
  2452  00FD21  52                 	db	82	;'R'
  2453  00FD22  20                 	db	32
  2454  00FD23  20                 	db	32
  2455  00FD24  25                 	db	37
  2456  00FD25  32                 	db	50	;'2'
  2457  00FD26  2E                 	db	46
  2458  00FD27  36                 	db	54	;'6'
  2459  00FD28  66                 	db	102	;'f'
  2460  00FD29  20                 	db	32
  2461  00FD2A  20                 	db	32
  2462  00FD2B  20                 	db	32
  2463  00FD2C  20                 	db	32
  2464  00FD2D  20                 	db	32
  2465  00FD2E  20                 	db	32
  2466  00FD2F  20                 	db	32
  2467  00FD30  20                 	db	32
  2468  00FD31  20                 	db	32
  2469  00FD32  20                 	db	32
  2470  00FD33  20                 	db	32
  2471  00FD34  00                 	db	0
  2472  00FD35                     STR_10:
  2473                           
  2474                           ; BSR set to: 57
  2475  00FD35  53                 	db	83	;'S'
  2476  00FD36  74                 	db	116	;'t'
  2477  00FD37  61                 	db	97	;'a'
  2478  00FD38  74                 	db	116	;'t'
  2479  00FD39  69                 	db	105	;'i'
  2480  00FD3A  63                 	db	99	;'c'
  2481  00FD3B  20                 	db	32
  2482  00FD3C  53                 	db	83	;'S'
  2483  00FD3D  4F                 	db	79	;'O'
  2484  00FD3E  43                 	db	67	;'C'
  2485  00FD3F  20                 	db	32
  2486  00FD40  25                 	db	37
  2487  00FD41  64                 	db	100	;'d'
  2488  00FD42  20                 	db	32
  2489  00FD43  20                 	db	32
  2490  00FD44  20                 	db	32
  2491  00FD45  20                 	db	32
  2492  00FD46  20                 	db	32
  2493  00FD47  20                 	db	32
  2494  00FD48  20                 	db	32
  2495  00FD49  20                 	db	32
  2496  00FD4A  00                 	db	0
  2497  00FD4B                     STR_11:
  2498                           
  2499                           ; BSR set to: 57
  2500  00FD4B  42                 	db	66	;'B'
  2501  00FD4C  61                 	db	97	;'a'
  2502  00FD4D  74                 	db	116	;'t'
  2503  00FD4E  74                 	db	116	;'t'
  2504  00FD4F  65                 	db	101	;'e'
  2505  00FD50  72                 	db	114	;'r'
  2506  00FD51  79                 	db	121	;'y'
  2507  00FD52  20                 	db	32
  2508  00FD53  41                 	db	65	;'A'
  2509  00FD54  68                 	db	104	;'h'
  2510  00FD55  20                 	db	32
  2511  00FD56  25                 	db	37
  2512  00FD57  33                 	db	51	;'3'
  2513  00FD58  2E                 	db	46
  2514  00FD59  32                 	db	50	;'2'
  2515  00FD5A  66                 	db	102	;'f'
  2516  00FD5B  20                 	db	32
  2517  00FD5C  20                 	db	32
  2518  00FD5D  20                 	db	32
  2519  00FD5E  20                 	db	32
  2520  00FD5F  20                 	db	32
  2521  00FD60  00                 	db	0
  2522  00FD61                     STR_15:
  2523                           
  2524                           ; BSR set to: 57
  2525  00FD61  43                 	db	67	;'C'
  2526  00FD62  68                 	db	104	;'h'
  2527  00FD63  65                 	db	101	;'e'
  2528  00FD64  63                 	db	99	;'c'
  2529  00FD65  6B                 	db	107	;'k'
  2530  00FD66  69                 	db	105	;'i'
  2531  00FD67  6E                 	db	110	;'n'
  2532  00FD68  67                 	db	103	;'g'
  2533  00FD69  20                 	db	32
  2534  00FD6A  25                 	db	37
  2535  00FD6B  63                 	db	99	;'c'
  2536  00FD6C  20                 	db	32
  2537  00FD6D  25                 	db	37
  2538  00FD6E  63                 	db	99	;'c'
  2539  00FD6F  20                 	db	32
  2540  00FD70  20                 	db	32
  2541  00FD71  20                 	db	32
  2542  00FD72  20                 	db	32
  2543  00FD73  20                 	db	32
  2544  00FD74  20                 	db	32
  2545  00FD75  00                 	db	0
  2546  00FD76                     STR_37:
  2547                           
  2548                           ; BSR set to: 57
  2549  00FD76  45                 	db	69	;'E'
  2550  00FD77  53                 	db	83	;'S'
  2551  00FD78  52                 	db	82	;'R'
  2552  00FD79  20                 	db	32
  2553  00FD7A  20                 	db	32
  2554  00FD7B  25                 	db	37
  2555  00FD7C  32                 	db	50	;'2'
  2556  00FD7D  2E                 	db	46
  2557  00FD7E  36                 	db	54	;'6'
  2558  00FD7F  66                 	db	102	;'f'
  2559  00FD80  20                 	db	32
  2560  00FD81  20                 	db	32
  2561  00FD82  20                 	db	32
  2562  00FD83  20                 	db	32
  2563  00FD84  20                 	db	32
  2564  00FD85  20                 	db	32
  2565  00FD86  20                 	db	32
  2566  00FD87  20                 	db	32
  2567  00FD88  20                 	db	32
  2568  00FD89  00                 	db	0
  2569  00FD8A                     STR_36:
  2570                           
  2571                           ; BSR set to: 57
  2572  00FD8A  53                 	db	83	;'S'
  2573  00FD8B  25                 	db	37
  2574  00FD8C  63                 	db	99	;'c'
  2575  00FD8D  43                 	db	67	;'C'
  2576  00FD8E  20                 	db	32
  2577  00FD8F  25                 	db	37
  2578  00FD90  64                 	db	100	;'d'
  2579  00FD91  20                 	db	32
  2580  00FD92  52                 	db	82	;'R'
  2581  00FD93  55                 	db	85	;'U'
  2582  00FD94  4E                 	db	78	;'N'
  2583  00FD95  20                 	db	32
  2584  00FD96  25                 	db	37
  2585  00FD97  64                 	db	100	;'d'
  2586  00FD98  20                 	db	32
  2587  00FD99  20                 	db	32
  2588  00FD9A  20                 	db	32
  2589  00FD9B  20                 	db	32
  2590  00FD9C  20                 	db	32
  2591  00FD9D  00                 	db	0
  2592  00FD9E                     STR_34:
  2593                           
  2594                           ; BSR set to: 57
  2595  00FD9E  42                 	db	66	;'B'
  2596  00FD9F  41                 	db	65	;'A'
  2597  00FDA0  54                 	db	84	;'T'
  2598  00FDA1  54                 	db	84	;'T'
  2599  00FDA2  20                 	db	32
  2600  00FDA3  50                 	db	80	;'P'
  2601  00FDA4  57                 	db	87	;'W'
  2602  00FDA5  52                 	db	82	;'R'
  2603  00FDA6  20                 	db	32
  2604  00FDA7  25                 	db	37
  2605  00FDA8  33                 	db	51	;'3'
  2606  00FDA9  2E                 	db	46
  2607  00FDAA  32                 	db	50	;'2'
  2608  00FDAB  66                 	db	102	;'f'
  2609  00FDAC  20                 	db	32
  2610  00FDAD  20                 	db	32
  2611  00FDAE  20                 	db	32
  2612  00FDAF  20                 	db	32
  2613  00FDB0  20                 	db	32
  2614  00FDB1  00                 	db	0
  2615  00FDB2                     STR_38:
  2616                           
  2617                           ; BSR set to: 57
  2618  00FDB2  52                 	db	82	;'R'
  2619  00FDB3  31                 	db	49	;'1'
  2620  00FDB4  20                 	db	32
  2621  00FDB5  25                 	db	37
  2622  00FDB6  32                 	db	50	;'2'
  2623  00FDB7  2E                 	db	46
  2624  00FDB8  33                 	db	51	;'3'
  2625  00FDB9  66                 	db	102	;'f'
  2626  00FDBA  20                 	db	32
  2627  00FDBB  25                 	db	37
  2628  00FDBC  33                 	db	51	;'3'
  2629  00FDBD  2E                 	db	46
  2630  00FDBE  34                 	db	52	;'4'
  2631  00FDBF  66                 	db	102	;'f'
  2632  00FDC0  20                 	db	32
  2633  00FDC1  20                 	db	32
  2634  00FDC2  20                 	db	32
  2635  00FDC3  20                 	db	32
  2636  00FDC4  20                 	db	32
  2637  00FDC5  00                 	db	0
  2638  00FDC6                     STR_39:
  2639                           
  2640                           ; BSR set to: 57
  2641  00FDC6  52                 	db	82	;'R'
  2642  00FDC7  32                 	db	50	;'2'
  2643  00FDC8  20                 	db	32
  2644  00FDC9  25                 	db	37
  2645  00FDCA  32                 	db	50	;'2'
  2646  00FDCB  2E                 	db	46
  2647  00FDCC  33                 	db	51	;'3'
  2648  00FDCD  66                 	db	102	;'f'
  2649  00FDCE  20                 	db	32
  2650  00FDCF  25                 	db	37
  2651  00FDD0  33                 	db	51	;'3'
  2652  00FDD1  2E                 	db	46
  2653  00FDD2  34                 	db	52	;'4'
  2654  00FDD3  66                 	db	102	;'f'
  2655  00FDD4  20                 	db	32
  2656  00FDD5  20                 	db	32
  2657  00FDD6  20                 	db	32
  2658  00FDD7  20                 	db	32
  2659  00FDD8  20                 	db	32
  2660  00FDD9  00                 	db	0
  2661  00FDDA                     STR_35:
  2662                           
  2663                           ; BSR set to: 57
  2664  00FDDA  42                 	db	66	;'B'
  2665  00FDDB  41                 	db	65	;'A'
  2666  00FDDC  48                 	db	72	;'H'
  2667  00FDDD  20                 	db	32
  2668  00FDDE  25                 	db	37
  2669  00FDDF  33                 	db	51	;'3'
  2670  00FDE0  2E                 	db	46
  2671  00FDE1  32                 	db	50	;'2'
  2672  00FDE2  66                 	db	102	;'f'
  2673  00FDE3  20                 	db	32
  2674  00FDE4  50                 	db	80	;'P'
  2675  00FDE5  25                 	db	37
  2676  00FDE6  33                 	db	51	;'3'
  2677  00FDE7  2E                 	db	46
  2678  00FDE8  32                 	db	50	;'2'
  2679  00FDE9  66                 	db	102	;'f'
  2680  00FDEA  20                 	db	32
  2681  00FDEB  20                 	db	32
  2682  00FDEC  20                 	db	32
  2683  00FDED  00                 	db	0
  2684  00FDEE                     STR_58:
  2685                           
  2686                           ; BSR set to: 57
  2687  00FDEE  20                 	db	32
  2688  00FDEF  20                 	db	32
  2689  00FDF0  20                 	db	32
  2690  00FDF1  20                 	db	32
  2691  00FDF2  20                 	db	32
  2692  00FDF3  20                 	db	32
  2693  00FDF4  20                 	db	32
  2694  00FDF5  20                 	db	32
  2695  00FDF6  20                 	db	32
  2696  00FDF7  20                 	db	32
  2697  00FDF8  20                 	db	32
  2698  00FDF9  20                 	db	32
  2699  00FDFA  20                 	db	32
  2700  00FDFB  20                 	db	32
  2701  00FDFC  20                 	db	32
  2702  00FDFD  20                 	db	32
  2703  00FDFE  20                 	db	32
  2704  00FDFF  20                 	db	32
  2705  00FE00  00                 	db	0
  2706  00FE01                     STR_48:
  2707                           
  2708                           ; BSR set to: 57
  2709  00FE01  48                 	db	72	;'H'
  2710  00FE02  45                 	db	69	;'E'
  2711  00FE03  4C                 	db	76	;'L'
  2712  00FE04  50                 	db	80	;'P'
  2713  00FE05  20                 	db	32
  2714  00FE06  25                 	db	37
  2715  00FE07  73                 	db	115	;'s'
  2716  00FE08  20                 	db	32
  2717  00FE09  20                 	db	32
  2718  00FE0A  20                 	db	32
  2719  00FE0B  20                 	db	32
  2720  00FE0C  20                 	db	32
  2721  00FE0D  20                 	db	32
  2722  00FE0E  20                 	db	32
  2723  00FE0F  20                 	db	32
  2724  00FE10  20                 	db	32
  2725  00FE11  20                 	db	32
  2726  00FE12  20                 	db	32
  2727  00FE13  00                 	db	0
  2728  00FE14                     
  2729                           ; BSR set to: 57
  2730  00FE14  44                 	db	68	;'D'
  2731  00FE15  49                 	db	73	;'I'
  2732  00FE16  53                 	db	83	;'S'
  2733  00FE17  50                 	db	80	;'P'
  2734  00FE18  4C                 	db	76	;'L'
  2735  00FE19  41                 	db	65	;'A'
  2736  00FE1A  59                 	db	89	;'Y'
  2737  00FE1B  20                 	db	32
  2738  00FE1C  25                 	db	37
  2739  00FE1D  73                 	db	115	;'s'
  2740  00FE1E  20                 	db	32
  2741  00FE1F  20                 	db	32
  2742  00FE20  20                 	db	32
  2743  00FE21  20                 	db	32
  2744  00FE22  20                 	db	32
  2745  00FE23  20                 	db	32
  2746  00FE24  20                 	db	32
  2747  00FE25  20                 	db	32
  2748  00FE26  00                 	db	0
  2749  00FE27                     STR_31:
  2750                           
  2751                           ; BSR set to: 57
  2752  00FE27  42                 	db	66	;'B'
  2753  00FE28  41                 	db	65	;'A'
  2754  00FE29  54                 	db	84	;'T'
  2755  00FE2A  20                 	db	32
  2756  00FE2B  49                 	db	73	;'I'
  2757  00FE2C  57                 	db	87	;'W'
  2758  00FE2D  48                 	db	72	;'H'
  2759  00FE2E  20                 	db	32
  2760  00FE2F  25                 	db	37
  2761  00FE30  34                 	db	52	;'4'
  2762  00FE31  2E                 	db	46
  2763  00FE32  31                 	db	49	;'1'
  2764  00FE33  66                 	db	102	;'f'
  2765  00FE34  20                 	db	32
  2766  00FE35  20                 	db	32
  2767  00FE36  20                 	db	32
  2768  00FE37  20                 	db	32
  2769  00FE38  20                 	db	32
  2770  00FE39  00                 	db	0
  2771  00FE3A                     STR_32:
  2772                           
  2773                           ; BSR set to: 57
  2774  00FE3A  42                 	db	66	;'B'
  2775  00FE3B  41                 	db	65	;'A'
  2776  00FE3C  54                 	db	84	;'T'
  2777  00FE3D  20                 	db	32
  2778  00FE3E  4F                 	db	79	;'O'
  2779  00FE3F  57                 	db	87	;'W'
  2780  00FE40  48                 	db	72	;'H'
  2781  00FE41  20                 	db	32
  2782  00FE42  25                 	db	37
  2783  00FE43  34                 	db	52	;'4'
  2784  00FE44  2E                 	db	46
  2785  00FE45  31                 	db	49	;'1'
  2786  00FE46  66                 	db	102	;'f'
  2787  00FE47  20                 	db	32
  2788  00FE48  20                 	db	32
  2789  00FE49  20                 	db	32
  2790  00FE4A  20                 	db	32
  2791  00FE4B  20                 	db	32
  2792  00FE4C  00                 	db	0
  2793  00FE4D                     STR_33:
  2794                           
  2795                           ; BSR set to: 57
  2796  00FE4D  42                 	db	66	;'B'
  2797  00FE4E  41                 	db	65	;'A'
  2798  00FE4F  54                 	db	84	;'T'
  2799  00FE50  20                 	db	32
  2800  00FE51  54                 	db	84	;'T'
  2801  00FE52  57                 	db	87	;'W'
  2802  00FE53  48                 	db	72	;'H'
  2803  00FE54  20                 	db	32
  2804  00FE55  25                 	db	37
  2805  00FE56  34                 	db	52	;'4'
  2806  00FE57  2E                 	db	46
  2807  00FE58  31                 	db	49	;'1'
  2808  00FE59  66                 	db	102	;'f'
  2809  00FE5A  20                 	db	32
  2810  00FE5B  20                 	db	32
  2811  00FE5C  20                 	db	32
  2812  00FE5D  20                 	db	32
  2813  00FE5E  20                 	db	32
  2814  00FE5F  00                 	db	0
  2815  00FE60                     STR_25:
  2816                           
  2817                           ; BSR set to: 57
  2818  00FE60  50                 	db	80	;'P'
  2819  00FE61  56                 	db	86	;'V'
  2820  00FE62  20                 	db	32
  2821  00FE63  20                 	db	32
  2822  00FE64  20                 	db	32
  2823  00FE65  57                 	db	87	;'W'
  2824  00FE66  48                 	db	72	;'H'
  2825  00FE67  20                 	db	32
  2826  00FE68  25                 	db	37
  2827  00FE69  33                 	db	51	;'3'
  2828  00FE6A  2E                 	db	46
  2829  00FE6B  32                 	db	50	;'2'
  2830  00FE6C  66                 	db	102	;'f'
  2831  00FE6D  20                 	db	32
  2832  00FE6E  20                 	db	32
  2833  00FE6F  20                 	db	32
  2834  00FE70  20                 	db	32
  2835  00FE71  20                 	db	32
  2836  00FE72  00                 	db	0
  2837  00FE73                     STR_27:
  2838                           
  2839                           ; BSR set to: 57
  2840  00FE73  49                 	db	73	;'I'
  2841  00FE74  4E                 	db	78	;'N'
  2842  00FE75  56                 	db	86	;'V'
  2843  00FE76  20                 	db	32
  2844  00FE77  20                 	db	32
  2845  00FE78  57                 	db	87	;'W'
  2846  00FE79  48                 	db	72	;'H'
  2847  00FE7A  20                 	db	32
  2848  00FE7B  25                 	db	37
  2849  00FE7C  33                 	db	51	;'3'
  2850  00FE7D  2E                 	db	46
  2851  00FE7E  32                 	db	50	;'2'
  2852  00FE7F  66                 	db	102	;'f'
  2853  00FE80  20                 	db	32
  2854  00FE81  20                 	db	32
  2855  00FE82  20                 	db	32
  2856  00FE83  20                 	db	32
  2857  00FE84  20                 	db	32
  2858  00FE85  00                 	db	0
  2859  00FE86                     STR_26:
  2860                           
  2861                           ; BSR set to: 57
  2862  00FE86  4C                 	db	76	;'L'
  2863  00FE87  4F                 	db	79	;'O'
  2864  00FE88  41                 	db	65	;'A'
  2865  00FE89  44                 	db	68	;'D'
  2866  00FE8A  20                 	db	32
  2867  00FE8B  57                 	db	87	;'W'
  2868  00FE8C  48                 	db	72	;'H'
  2869  00FE8D  20                 	db	32
  2870  00FE8E  25                 	db	37
  2871  00FE8F  33                 	db	51	;'3'
  2872  00FE90  2E                 	db	46
  2873  00FE91  32                 	db	50	;'2'
  2874  00FE92  66                 	db	102	;'f'
  2875  00FE93  20                 	db	32
  2876  00FE94  20                 	db	32
  2877  00FE95  20                 	db	32
  2878  00FE96  20                 	db	32
  2879  00FE97  20                 	db	32
  2880  00FE98  00                 	db	0
  2881  00FE99                     STR_22:
  2882                           
  2883                           ; BSR set to: 57
  2884  00FE99  50                 	db	80	;'P'
  2885  00FE9A  56                 	db	86	;'V'
  2886  00FE9B  20                 	db	32
  2887  00FE9C  20                 	db	32
  2888  00FE9D  20                 	db	32
  2889  00FE9E  50                 	db	80	;'P'
  2890  00FE9F  57                 	db	87	;'W'
  2891  00FEA0  52                 	db	82	;'R'
  2892  00FEA1  20                 	db	32
  2893  00FEA2  25                 	db	37
  2894  00FEA3  33                 	db	51	;'3'
  2895  00FEA4  2E                 	db	46
  2896  00FEA5  32                 	db	50	;'2'
  2897  00FEA6  66                 	db	102	;'f'
  2898  00FEA7  20                 	db	32
  2899  00FEA8  20                 	db	32
  2900  00FEA9  20                 	db	32
  2901  00FEAA  20                 	db	32
  2902  00FEAB  00                 	db	0
  2903  00FEAC                     STR_24:
  2904                           
  2905                           ; BSR set to: 57
  2906  00FEAC  49                 	db	73	;'I'
  2907  00FEAD  4E                 	db	78	;'N'
  2908  00FEAE  56                 	db	86	;'V'
  2909  00FEAF  20                 	db	32
  2910  00FEB0  20                 	db	32
  2911  00FEB1  50                 	db	80	;'P'
  2912  00FEB2  57                 	db	87	;'W'
  2913  00FEB3  52                 	db	82	;'R'
  2914  00FEB4  20                 	db	32
  2915  00FEB5  25                 	db	37
  2916  00FEB6  33                 	db	51	;'3'
  2917  00FEB7  2E                 	db	46
  2918  00FEB8  32                 	db	50	;'2'
  2919  00FEB9  66                 	db	102	;'f'
  2920  00FEBA  20                 	db	32
  2921  00FEBB  20                 	db	32
  2922  00FEBC  20                 	db	32
  2923  00FEBD  20                 	db	32
  2924  00FEBE  00                 	db	0
  2925  00FEBF                     STR_23:
  2926                           
  2927                           ; BSR set to: 57
  2928  00FEBF  4C                 	db	76	;'L'
  2929  00FEC0  4F                 	db	79	;'O'
  2930  00FEC1  41                 	db	65	;'A'
  2931  00FEC2  44                 	db	68	;'D'
  2932  00FEC3  20                 	db	32
  2933  00FEC4  50                 	db	80	;'P'
  2934  00FEC5  57                 	db	87	;'W'
  2935  00FEC6  52                 	db	82	;'R'
  2936  00FEC7  20                 	db	32
  2937  00FEC8  25                 	db	37
  2938  00FEC9  33                 	db	51	;'3'
  2939  00FECA  2E                 	db	46
  2940  00FECB  32                 	db	50	;'2'
  2941  00FECC  66                 	db	102	;'f'
  2942  00FECD  20                 	db	32
  2943  00FECE  20                 	db	32
  2944  00FECF  20                 	db	32
  2945  00FED0  20                 	db	32
  2946  00FED1  00                 	db	0
  2947  00FED2                     STR_29:
  2948                           
  2949                           ; BSR set to: 57
  2950  00FED2  42                 	db	66	;'B'
  2951  00FED3  56                 	db	86	;'V'
  2952  00FED4  20                 	db	32
  2953  00FED5  25                 	db	37
  2954  00FED6  32                 	db	50	;'2'
  2955  00FED7  2E                 	db	46
  2956  00FED8  32                 	db	50	;'2'
  2957  00FED9  66                 	db	102	;'f'
  2958  00FEDA  20                 	db	32
  2959  00FEDB  42                 	db	66	;'B'
  2960  00FEDC  41                 	db	65	;'A'
  2961  00FEDD  20                 	db	32
  2962  00FEDE  25                 	db	37
  2963  00FEDF  32                 	db	50	;'2'
  2964  00FEE0  2E                 	db	46
  2965  00FEE1  32                 	db	50	;'2'
  2966  00FEE2  66                 	db	102	;'f'
  2967  00FEE3  20                 	db	32
  2968  00FEE4  00                 	db	0
  2969  00FEE5                     STR_30:
  2970                           
  2971                           ; BSR set to: 57
  2972  00FEE5  43                 	db	67	;'C'
  2973  00FEE6  56                 	db	86	;'V'
  2974  00FEE7  20                 	db	32
  2975  00FEE8  25                 	db	37
  2976  00FEE9  32                 	db	50	;'2'
  2977  00FEEA  2E                 	db	46
  2978  00FEEB  32                 	db	50	;'2'
  2979  00FEEC  66                 	db	102	;'f'
  2980  00FEED  20                 	db	32
  2981  00FEEE  4C                 	db	76	;'L'
  2982  00FEEF  41                 	db	65	;'A'
  2983  00FEF0  20                 	db	32
  2984  00FEF1  25                 	db	37
  2985  00FEF2  32                 	db	50	;'2'
  2986  00FEF3  2E                 	db	46
  2987  00FEF4  32                 	db	50	;'2'
  2988  00FEF5  66                 	db	102	;'f'
  2989  00FEF6  20                 	db	32
  2990  00FEF7  00                 	db	0
  2991  00FEF8                     STR_28:
  2992                           
  2993                           ; BSR set to: 57
  2994  00FEF8  50                 	db	80	;'P'
  2995  00FEF9  56                 	db	86	;'V'
  2996  00FEFA  20                 	db	32
  2997  00FEFB  25                 	db	37
  2998  00FEFC  32                 	db	50	;'2'
  2999  00FEFD  2E                 	db	46
  3000  00FEFE  32                 	db	50	;'2'
  3001  00FEFF  66                 	db	102	;'f'
  3002  00FF00  20                 	db	32
  3003  00FF01  50                 	db	80	;'P'
  3004  00FF02  41                 	db	65	;'A'
  3005  00FF03  20                 	db	32
  3006  00FF04  25                 	db	37
  3007  00FF05  32                 	db	50	;'2'
  3008  00FF06  2E                 	db	46
  3009  00FF07  32                 	db	50	;'2'
  3010  00FF08  66                 	db	102	;'f'
  3011  00FF09  20                 	db	32
  3012  00FF0A  00                 	db	0
  3013  00FF0B                     STR_8:
  3014                           
  3015                           ; BSR set to: 57
  3016  00FF0B  42                 	db	66	;'B'
  3017  00FF0C  56                 	db	86	;'V'
  3018  00FF0D  20                 	db	32
  3019  00FF0E  25                 	db	37
  3020  00FF0F  32                 	db	50	;'2'
  3021  00FF10  2E                 	db	46
  3022  00FF11  34                 	db	52	;'4'
  3023  00FF12  66                 	db	102	;'f'
  3024  00FF13  20                 	db	32
  3025  00FF14  20                 	db	32
  3026  00FF15  20                 	db	32
  3027  00FF16  20                 	db	32
  3028  00FF17  20                 	db	32
  3029  00FF18  20                 	db	32
  3030  00FF19  20                 	db	32
  3031  00FF1A  20                 	db	32
  3032  00FF1B  20                 	db	32
  3033  00FF1C  00                 	db	0
  3034  00FF1D                     STR_4:
  3035                           
  3036                           ; BSR set to: 57
  3037  00FF1D  20                 	db	32
  3038  00FF1E  4E                 	db	78	;'N'
  3039  00FF1F  53                 	db	83	;'S'
  3040  00FF20  41                 	db	65	;'A'
  3041  00FF21  53                 	db	83	;'S'
  3042  00FF22  50                 	db	80	;'P'
  3043  00FF23  4F                 	db	79	;'O'
  3044  00FF24  4F                 	db	79	;'O'
  3045  00FF25  4B                 	db	75	;'K'
  3046  00FF26  20                 	db	32
  3047  00FF27  20                 	db	32
  3048  00FF28  20                 	db	32
  3049  00FF29  20                 	db	32
  3050  00FF2A  20                 	db	32
  3051  00FF2B  20                 	db	32
  3052  00FF2C  20                 	db	32
  3053  00FF2D  00                 	db	0
  3054  00FF2E                     STR_12:
  3055                           
  3056                           ; BSR set to: 57
  3057  00FF2E  42                 	db	66	;'B'
  3058  00FF2F  61                 	db	97	;'a'
  3059  00FF30  74                 	db	116	;'t'
  3060  00FF31  74                 	db	116	;'t'
  3061  00FF32  65                 	db	101	;'e'
  3062  00FF33  72                 	db	114	;'r'
  3063  00FF34  79                 	db	121	;'y'
  3064  00FF35  20                 	db	32
  3065  00FF36  45                 	db	69	;'E'
  3066  00FF37  53                 	db	83	;'S'
  3067  00FF38  52                 	db	82	;'R'
  3068  00FF39  20                 	db	32
  3069  00FF3A  20                 	db	32
  3070  00FF3B  20                 	db	32
  3071  00FF3C  20                 	db	32
  3072  00FF3D  20                 	db	32
  3073  00FF3E  00                 	db	0
  3074  00FF3F                     STR_13:
  3075                           
  3076                           ; BSR set to: 57
  3077  00FF3F  43                 	db	67	;'C'
  3078  00FF40  61                 	db	97	;'a'
  3079  00FF41  6C                 	db	108	;'l'
  3080  00FF42  63                 	db	99	;'c'
  3081  00FF43  75                 	db	117	;'u'
  3082  00FF44  6C                 	db	108	;'l'
  3083  00FF45  61                 	db	97	;'a'
  3084  00FF46  74                 	db	116	;'t'
  3085  00FF47  69                 	db	105	;'i'
  3086  00FF48  6F                 	db	111	;'o'
  3087  00FF49  6E                 	db	110	;'n'
  3088  00FF4A  20                 	db	32
  3089  00FF4B  20                 	db	32
  3090  00FF4C  20                 	db	32
  3091  00FF4D  20                 	db	32
  3092  00FF4E  20                 	db	32
  3093  00FF4F  00                 	db	0
  3094  00FF50                     STR_1:
  3095                           
  3096                           ; BSR set to: 57
  3097  00FF50  20                 	db	32
  3098  00FF51  4D                 	db	77	;'M'
  3099  00FF52  42                 	db	66	;'B'
  3100  00FF53  4D                 	db	77	;'M'
  3101  00FF54  43                 	db	67	;'C'
  3102  00FF55  20                 	db	32
  3103  00FF56  53                 	db	83	;'S'
  3104  00FF57  4F                 	db	79	;'O'
  3105  00FF58  4C                 	db	76	;'L'
  3106  00FF59  41                 	db	65	;'A'
  3107  00FF5A  52                 	db	82	;'R'
  3108  00FF5B  4D                 	db	77	;'M'
  3109  00FF5C  4F                 	db	79	;'O'
  3110  00FF5D  4E                 	db	78	;'N'
  3111  00FF5E  20                 	db	32
  3112  00FF5F  20                 	db	32
  3113  00FF60  00                 	db	0
  3114  00FF61                     STR_21:
  3115                           
  3116                           ; BSR set to: 57
  3117  00FF61  25                 	db	37
  3118  00FF62  64                 	db	100	;'d'
  3119  00FF63  20                 	db	32
  3120  00FF64  25                 	db	37
  3121  00FF65  32                 	db	50	;'2'
  3122  00FF66  2E                 	db	46
  3123  00FF67  34                 	db	52	;'4'
  3124  00FF68  66                 	db	102	;'f'
  3125  00FF69  2C                 	db	44
  3126  00FF6A  20                 	db	32
  3127  00FF6B  25                 	db	37
  3128  00FF6C  64                 	db	100	;'d'
  3129  00FF6D  20                 	db	32
  3130  00FF6E  20                 	db	32
  3131  00FF6F  20                 	db	32
  3132  00FF70  23                 	db	35
  3133  00FF71  00                 	db	0
  3134  00FF72                     STR_14:
  3135                           
  3136                           ; BSR set to: 57
  3137  00FF72  43                 	db	67	;'C'
  3138  00FF73  68                 	db	104	;'h'
  3139  00FF74  65                 	db	101	;'e'
  3140  00FF75  63                 	db	99	;'c'
  3141  00FF76  6B                 	db	107	;'k'
  3142  00FF77  20                 	db	32
  3143  00FF78  33                 	db	51	;'3'
  3144  00FF79  30                 	db	48	;'0'
  3145  00FF7A  20                 	db	32
  3146  00FF7B  73                 	db	115	;'s'
  3147  00FF7C  65                 	db	101	;'e'
  3148  00FF7D  63                 	db	99	;'c'
  3149  00FF7E  6F                 	db	111	;'o'
  3150  00FF7F  6E                 	db	110	;'n'
  3151  00FF80  64                 	db	100	;'d'
  3152  00FF81  73                 	db	115	;'s'
  3153  00FF82  00                 	db	0
  3154  00FF83                     STR_19:
  3155                           
  3156                           ; BSR set to: 57
  3157  00FF83  25                 	db	37
  3158  00FF84  64                 	db	100	;'d'
  3159  00FF85  20                 	db	32
  3160  00FF86  25                 	db	37
  3161  00FF87  32                 	db	50	;'2'
  3162  00FF88  2E                 	db	46
  3163  00FF89  34                 	db	52	;'4'
  3164  00FF8A  66                 	db	102	;'f'
  3165  00FF8B  20                 	db	32
  3166  00FF8C  20                 	db	32
  3167  00FF8D  20                 	db	32
  3168  00FF8E  25                 	db	37
  3169  00FF8F  64                 	db	100	;'d'
  3170  00FF90  20                 	db	32
  3171  00FF91  20                 	db	32
  3172  00FF92  00                 	db	0
  3173  00FF93                     STR_52:
  3174                           
  3175                           ; BSR set to: 57
  3176  00FF93  76                 	db	118	;'v'
  3177  00FF94  74                 	db	116	;'t'
  3178  00FF95  65                 	db	101	;'e'
  3179  00FF96  72                 	db	114	;'r'
  3180  00FF97  6D                 	db	109	;'m'
  3181  00FF98  20                 	db	32
  3182  00FF99  25                 	db	37
  3183  00FF9A  78                 	db	120	;'x'
  3184  00FF9B  3A                 	db	58	;':'
  3185  00FF9C  25                 	db	37
  3186  00FF9D  78                 	db	120	;'x'
  3187  00FF9E  20                 	db	32
  3188  00FF9F  20                 	db	32
  3189  00FFA0  20                 	db	32
  3190  00FFA1  00                 	db	0
  3191  00FFA2                     STR_2:
  3192                           
  3193                           ; BSR set to: 57
  3194  00FFA2  20                 	db	32
  3195  00FFA3  56                 	db	86	;'V'
  3196  00FFA4  65                 	db	101	;'e'
  3197  00FFA5  72                 	db	114	;'r'
  3198  00FFA6  73                 	db	115	;'s'
  3199  00FFA7  69                 	db	105	;'i'
  3200  00FFA8  6F                 	db	111	;'o'
  3201  00FFA9  6E                 	db	110	;'n'
  3202  00FFAA  20                 	db	32
  3203  00FFAB  25                 	db	37
  3204  00FFAC  73                 	db	115	;'s'
  3205  00FFAD  20                 	db	32
  3206  00FFAE  20                 	db	32
  3207  00FFAF  20                 	db	32
  3208  00FFB0  00                 	db	0
  3209  00FFB1                     STR_46:
  3210                           
  3211                           ; BSR set to: 57
  3212  00FFB1  44                 	db	68	;'D'
  3213  00FFB2  65                 	db	101	;'e'
  3214  00FFB3  63                 	db	99	;'c'
  3215  00FFB4  20                 	db	32
  3216  00FFB5  31                 	db	49	;'1'
  3217  00FFB6  34                 	db	52	;'4'
  3218  00FFB7  20                 	db	32
  3219  00FFB8  32                 	db	50	;'2'
  3220  00FFB9  30                 	db	48	;'0'
  3221  00FFBA  31                 	db	49	;'1'
  3222  00FFBB  39                 	db	57	;'9'
  3223  00FFBC  00                 	db	0
  3224  00FFBD                     STR_50:
  3225                           
  3226                           ; BSR set to: 57
  3227  00FFBD  25                 	db	37
  3228  00FFBE  73                 	db	115	;'s'
  3229  00FFBF  20                 	db	32
  3230  00FFC0  20                 	db	32
  3231  00FFC1  20                 	db	32
  3232  00FFC2  20                 	db	32
  3233  00FFC3  20                 	db	32
  3234  00FFC4  20                 	db	32
  3235  00FFC5  20                 	db	32
  3236  00FFC6  00                 	db	0
  3237  00FFC7                     STR_47:
  3238                           
  3239                           ; BSR set to: 57
  3240  00FFC7  31                 	db	49	;'1'
  3241  00FFC8  36                 	db	54	;'6'
  3242  00FFC9  3A                 	db	58	;':'
  3243  00FFCA  35                 	db	53	;'5'
  3244  00FFCB  39                 	db	57	;'9'
  3245  00FFCC  3A                 	db	58	;':'
  3246  00FFCD  31                 	db	49	;'1'
  3247  00FFCE  39                 	db	57	;'9'
  3248  00FFCF  00                 	db	0
  3249  00FFD0                     STR_3:
  3250                           
  3251                           ; BSR set to: 57
  3252  00FFD0  31                 	db	49	;'1'
  3253  00FFD1  2E                 	db	46
  3254  00FFD2  30                 	db	48	;'0'
  3255  00FFD3  30                 	db	48	;'0'
  3256  00FFD4  36                 	db	54	;'6'
  3257  00FFD5  00                 	db	0
  3258  00FFD6                     STR_66:
  3259                           
  3260                           ; BSR set to: 57
  3261  00FFD6  49                 	db	73	;'I'
  3262  00FFD7  4E                 	db	78	;'N'
  3263  00FFD8  46                 	db	70	;'F'
  3264  00FFD9  00                 	db	0
  3265  00FFDA                     STR_70:
  3266                           
  3267                           ; BSR set to: 57
  3268  00FFDA  4E                 	db	78	;'N'
  3269  00FFDB  41                 	db	65	;'A'
  3270  00FFDC  4E                 	db	78	;'N'
  3271  00FFDD  00                 	db	0
  3272  00FFDE                     STR_67:
  3273                           
  3274                           ; BSR set to: 57
  3275  00FFDE  69                 	db	105	;'i'
  3276  00FFDF  6E                 	db	110	;'n'
  3277  00FFE0  66                 	db	102	;'f'
  3278  00FFE1  00                 	db	0
  3279  00FFE2                     STR_71:
  3280                           
  3281                           ; BSR set to: 57
  3282  00FFE2  6E                 	db	110	;'n'
  3283  00FFE3  61                 	db	97	;'a'
  3284  00FFE4  6E                 	db	110	;'n'
  3285  00FFE5  00                 	db	0
  3286  00FFE6                     STR_97:
  3287                           
  3288                           ; BSR set to: 57
  3289  00FFE6  6C                 	db	108	;'l'
  3290  00FFE7  58                 	db	88	;'X'
  3291  00FFE8  00                 	db	0
  3292  00FFE9                     STR_74:
  3293                           
  3294                           ; BSR set to: 57
  3295  00FFE9  6C                 	db	108	;'l'
  3296  00FFEA  64                 	db	100	;'d'
  3297  00FFEB  00                 	db	0
  3298  00FFEC                     STR_83:
  3299                           
  3300                           ; BSR set to: 57
  3301  00FFEC  6C                 	db	108	;'l'
  3302  00FFED  66                 	db	102	;'f'
  3303  00FFEE  00                 	db	0
  3304  00FFEF                     STR_78:
  3305                           
  3306                           ; BSR set to: 57
  3307  00FFEF  6C                 	db	108	;'l'
  3308  00FFF0  69                 	db	105	;'i'
  3309  00FFF1  00                 	db	0
  3310  00FFF2                     STR_88:
  3311                           
  3312                           ; BSR set to: 57
  3313  00FFF2  6C                 	db	108	;'l'
  3314  00FFF3  75                 	db	117	;'u'
  3315  00FFF4  00                 	db	0
  3316  00FFF5                     STR_93:
  3317                           
  3318                           ; BSR set to: 57
  3319  00FFF5  6C                 	db	108	;'l'
  3320  00FFF6  78                 	db	120	;'x'
  3321  00FFF7  00                 	db	0
  3322  00FFF8                     STR_44:
  3323                           
  3324                           ; BSR set to: 57
  3325  00FFF8  25                 	db	37
  3326  00FFF9  63                 	db	99	;'c'
  3327  00FFFA  00                 	db	0
  3328  00FFFB                     STR_43:
  3329                           
  3330                           ; BSR set to: 57
  3331  00FFFB  25                 	db	37
  3332  00FFFC  73                 	db	115	;'s'
  3333  00FFFD  00                 	db	0
  3334  0000                     
  3335                           ; #config settings
  3336  00FFFE  00                 	db	0	; dummy byte at the end
  3337  0000                     
  3338                           	psect	cinit
  3339  0192FE                     __pcinit:
  3340                           	opt callstack 0
  3341  0192FE                     start_initialization:
  3342                           	opt callstack 0
  3343  0192FE                     __initialization:
  3344                           	opt callstack 0
  3345                           
  3346                           ; Initialize objects allocated to BIGRAM (512 bytes)
  3347                           ; load TBLPTR registers with __pidataBIGRAM
  3348  0192FE  0EB8               	movlw	low __pidataBIGRAM
  3349  019300  6EF6               	movwf	tblptrl,c
  3350  019302  0E7B               	movlw	high __pidataBIGRAM
  3351  019304  6EF7               	movwf	tblptrh,c
  3352  019306  0E01               	movlw	low (__pidataBIGRAM shr (0+16))
  3353  019308  6EF8               	movwf	tblptru,c
  3354  01930A  EE01  F1FF         	lfsr	0,__pdataBIGRAM
  3355  01930E  EE20 F200          	lfsr	2,512
  3356  019312                     copy_data0:
  3357  019312  0009               	tblrd		*+
  3358  019314  006F FFD7 FFEE     	movff	tablat,postinc0
  3359  01931A  50DD               	movf	postdec2,w,c
  3360  01931C  50D9               	movf	fsr2l,w,c
  3361  01931E  E1F9               	bnz	copy_data0
  3362  019320  50DA               	movf	fsr2h,w,c
  3363  019322  E1F7               	bnz	copy_data0
  3364                           
  3365                           ; Initialize objects allocated to BANK2 (189 bytes)
  3366                           ; load TBLPTR registers with __pidataBANK2
  3367  019324  0E78               	movlw	low __pidataBANK2
  3368  019326  6EF6               	movwf	tblptrl,c
  3369  019328  0E9A               	movlw	high __pidataBANK2
  3370  01932A  6EF7               	movwf	tblptrh,c
  3371  01932C  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  3372  01932E  6EF8               	movwf	tblptru,c
  3373  019330  EE00  F200         	lfsr	0,__pdataBANK2
  3374  019334  EE20 F0BD          	lfsr	2,189
  3375  019338                     copy_data1:
  3376  019338  0009               	tblrd		*+
  3377  01933A  006F FFD7 FFEE     	movff	tablat,postinc0
  3378  019340  50DD               	movf	postdec2,w,c
  3379  019342  50D9               	movf	fsr2l,w,c
  3380  019344  E1F9               	bnz	copy_data1
  3381                           
  3382                           ; Initialize objects allocated to BANK1 (247 bytes)
  3383                           ; load TBLPTR registers with __pidataBANK1
  3384  019346  0E18               	movlw	low __pidataBANK1
  3385  019348  6EF6               	movwf	tblptrl,c
  3386  01934A  0E96               	movlw	high __pidataBANK1
  3387  01934C  6EF7               	movwf	tblptrh,c
  3388  01934E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  3389  019350  6EF8               	movwf	tblptru,c
  3390  019352  EE00  F100         	lfsr	0,__pdataBANK1
  3391  019356  EE20 F0F7          	lfsr	2,247
  3392  01935A                     copy_data2:
  3393  01935A  0009               	tblrd		*+
  3394  01935C  006F FFD7 FFEE     	movff	tablat,postinc0
  3395  019362  50DD               	movf	postdec2,w,c
  3396  019364  50D9               	movf	fsr2l,w,c
  3397  019366  E1F9               	bnz	copy_data2
  3398                           
  3399                           ; Initialize objects allocated to BANK0 (54 bytes)
  3400                           ; load TBLPTR registers with __pidataBANK0
  3401  019368  0ECC               	movlw	low __pidataBANK0
  3402  01936A  6EF6               	movwf	tblptrl,c
  3403  01936C  0EAD               	movlw	high __pidataBANK0
  3404  01936E  6EF7               	movwf	tblptrh,c
  3405  019370  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  3406  019372  6EF8               	movwf	tblptru,c
  3407  019374  EE00  F0C4         	lfsr	0,__pdataBANK0
  3408  019378  EE20 F036          	lfsr	2,54
  3409  01937C                     copy_data3:
  3410  01937C  0009               	tblrd		*+
  3411  01937E  006F FFD7 FFEE     	movff	tablat,postinc0
  3412  019384  50DD               	movf	postdec2,w,c
  3413  019386  50D9               	movf	fsr2l,w,c
  3414  019388  E1F9               	bnz	copy_data3
  3415                           
  3416                           ; Clear objects allocated to BIGRAM (482 bytes)
  3417  01938A  EE01  F3FF         	lfsr	0,__pbssBIGRAM
  3418  01938E  EE20 F1E2          	lfsr	2,482
  3419  019392                     clear_0:
  3420  019392  6AEE               	clrf	postinc0,c
  3421  019394  50DD               	movf	postdec2,w,c
  3422  019396  50D9               	movf	fsr2l,w,c
  3423  019398  E1FC               	bnz	clear_0
  3424  01939A  50DA               	movf	fsr2h,w,c
  3425  01939C  E1FA               	bnz	clear_0
  3426                           
  3427                           ; Clear objects allocated to BANK5 (255 bytes)
  3428  01939E  EE01  F100         	lfsr	0,__pbssBANK5
  3429  0193A2  EE20 F0FF          	lfsr	2,255
  3430  0193A6                     clear_1:
  3431  0193A6  6AEE               	clrf	postinc0,c
  3432  0193A8  50DD               	movf	postdec2,w,c
  3433  0193AA  50D9               	movf	fsr2l,w,c
  3434  0193AC  E1FC               	bnz	clear_1
  3435  0193AE  50DA               	movf	fsr2h,w,c
  3436  0193B0  E1FA               	bnz	clear_1
  3437                           
  3438                           ; Clear objects allocated to BANK4 (134 bytes)
  3439  0193B2  EE01  F000         	lfsr	0,__pbssBANK4
  3440  0193B6  0E86               	movlw	134
  3441  0193B8                     clear_2:
  3442  0193B8  6AEE               	clrf	postinc0,c
  3443  0193BA  06E8               	decf	wreg,f,c
  3444  0193BC  E1FD               	bnz	clear_2
  3445                           
  3446                           ; Clear objects allocated to BANK3 (228 bytes)
  3447  0193BE  EE00  F300         	lfsr	0,__pbssBANK3
  3448  0193C2  0EE4               	movlw	228
  3449  0193C4                     clear_3:
  3450  0193C4  6AEE               	clrf	postinc0,c
  3451  0193C6  06E8               	decf	wreg,f,c
  3452  0193C8  E1FD               	bnz	clear_3
  3453                           
  3454                           ; Clear objects allocated to BANK2 (67 bytes)
  3455  0193CA  EE00  F2BD         	lfsr	0,__pbssBANK2
  3456  0193CE  0E43               	movlw	67
  3457  0193D0                     clear_4:
  3458  0193D0  6AEE               	clrf	postinc0,c
  3459  0193D2  06E8               	decf	wreg,f,c
  3460  0193D4  E1FD               	bnz	clear_4
  3461                           
  3462                           ; Clear objects allocated to BANK1 (8 bytes)
  3463  0193D6  EE00  F1F7         	lfsr	0,__pbssBANK1
  3464  0193DA  0E08               	movlw	8
  3465  0193DC                     clear_5:
  3466  0193DC  6AEE               	clrf	postinc0,c
  3467  0193DE  06E8               	decf	wreg,f,c
  3468  0193E0  E1FD               	bnz	clear_5
  3469                           
  3470                           ; Clear objects allocated to BANK0 (100 bytes)
  3471  0193E2  EE00  F060         	lfsr	0,__pbssBANK0
  3472  0193E6  0E64               	movlw	100
  3473  0193E8                     clear_6:
  3474  0193E8  6AEE               	clrf	postinc0,c
  3475  0193EA  06E8               	decf	wreg,f,c
  3476  0193EC  E1FD               	bnz	clear_6
  3477                           
  3478                           ; Clear objects allocated to COMRAM (24 bytes)
  3479  0193EE  EE00  F048         	lfsr	0,__pbssCOMRAM
  3480  0193F2  0E18               	movlw	24
  3481  0193F4                     clear_7:
  3482  0193F4  6AEE               	clrf	postinc0,c
  3483  0193F6  06E8               	decf	wreg,f,c
  3484  0193F8  E1FD               	bnz	clear_7
  3485                           
  3486                           ;
  3487                           ; Setup IVTBASE
  3488                           ;
  3489  0193FA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  3490  0193FC  6ED5               	movwf	213,c
  3491  0193FE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  3492  019400  6ED6               	movwf	214,c
  3493  019402  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  3494  019404  6ED7               	movwf	215,c
  3495  019406                     end_of_initialization:
  3496                           	opt callstack 0
  3497  019406                     __end_of__initialization:
  3498                           	opt callstack 0
  3499  019406  0100               	movlb	0
  3500  019408  EF22  F089         	goto	_main	;jump to C main() function
  3501                           
  3502                           	psect	bssCOMRAM
  3503  000048                     __pbssCOMRAM:
  3504                           	opt callstack 0
  3505  000048                     _width:
  3506                           	opt callstack 0
  3507  000048                     	ds	2
  3508  00004A                     _prec:
  3509                           	opt callstack 0
  3510  00004A                     	ds	2
  3511  00004C                     _flags:
  3512                           	opt callstack 0
  3513  00004C                     	ds	2
  3514  00004E                     _timer3ReloadVal:
  3515                           	opt callstack 0
  3516  00004E                     	ds	2
  3517  000050                     TMR5_ISR@CountCallBack:
  3518                           	opt callstack 0
  3519  000050                     	ds	2
  3520  000052                     _timer5ReloadVal:
  3521                           	opt callstack 0
  3522  000052                     	ds	2
  3523  000054                     esr_check@esr_state:
  3524                           	opt callstack 0
  3525  000054                     	ds	1
  3526  000055                     Volts_to_SOC@slot:
  3527                           	opt callstack 0
  3528  000055                     	ds	1
  3529  000056                     _mode_sw:
  3530                           	opt callstack 0
  3531  000056                     	ds	1
  3532  000057                     _uart2RxCount:
  3533                           	opt callstack 0
  3534  000057                     	ds	1
  3535  000058                     _uart2RxTail:
  3536                           	opt callstack 0
  3537  000058                     	ds	1
  3538  000059                     _uart2RxHead:
  3539                           	opt callstack 0
  3540  000059                     	ds	1
  3541  00005A                     _uart2TxBufferRemaining:
  3542                           	opt callstack 0
  3543  00005A                     	ds	1
  3544  00005B                     _uart2TxTail:
  3545                           	opt callstack 0
  3546  00005B                     	ds	1
  3547  00005C                     _uart2TxHead:
  3548                           	opt callstack 0
  3549  00005C                     	ds	1
  3550  00005D                     _uart1RxCount:
  3551                           	opt callstack 0
  3552  00005D                     	ds	1
  3553  00005E                     _uart1RxTail:
  3554                           	opt callstack 0
  3555  00005E                     	ds	1
  3556  00005F                     _uart1RxHead:
  3557                           	opt callstack 0
  3558  00005F                     	ds	1
  3559                           
  3560                           	psect	bssBANK0
  3561  000060                     __pbssBANK0:
  3562                           	opt callstack 0
  3563  000060                     _spi_link:
  3564                           	opt callstack 0
  3565  000060                     	ds	12
  3566  00006C                     _uart1RxBuffer:
  3567                           	opt callstack 0
  3568  00006C                     	ds	8
  3569  000074                     spinners@s:
  3570                           	opt callstack 0
  3571  000074                     	ds	6
  3572  00007A                     floorf@F524:
  3573                           	opt callstack 0
  3574  00007A                     	ds	4
  3575  00007E                     fabsf@F463:
  3576                           	opt callstack 0
  3577  00007E                     	ds	4
  3578  000082                     ___fpclassifyf@F463:
  3579                           	opt callstack 0
  3580  000082                     	ds	4
  3581  000086                     calc_ror_data@bcror:
  3582                           	opt callstack 0
  3583  000086                     	ds	4
  3584  00008A                     calc_ror_data@bvror:
  3585                           	opt callstack 0
  3586  00008A                     	ds	4
  3587  00008E                     calc_model_data@bcror:
  3588                           	opt callstack 0
  3589  00008E                     	ds	4
  3590  000092                     calc_model_data@bvror:
  3591                           	opt callstack 0
  3592  000092                     	ds	4
  3593  000096                     _utctime:
  3594                           	opt callstack 0
  3595  000096                     	ds	4
  3596  00009A                     wdtdelay@dcount:
  3597                           	opt callstack 0
  3598  00009A                     	ds	4
  3599  00009E                     _P:
  3600                           	opt callstack 0
  3601  00009E                     	ds	4
  3602  0000A2                     _TMR3_InterruptHandler:
  3603                           	opt callstack 0
  3604  0000A2                     	ds	3
  3605  0000A5                     _TMR5_InterruptHandler:
  3606                           	opt callstack 0
  3607  0000A5                     	ds	3
  3608  0000A8                     _TMR6_InterruptHandler:
  3609                           	opt callstack 0
  3610  0000A8                     	ds	3
  3611  0000AB                     _ADCC_ADTI_InterruptHandler:
  3612                           	opt callstack 0
  3613  0000AB                     	ds	3
  3614  0000AE                     _ADCC_ADI_InterruptHandler:
  3615                           	opt callstack 0
  3616  0000AE                     	ds	3
  3617  0000B1                     _UART1_RxInterruptHandler:
  3618                           	opt callstack 0
  3619  0000B1                     	ds	3
  3620  0000B4                     _UART2_TxInterruptHandler:
  3621                           	opt callstack 0
  3622  0000B4                     	ds	3
  3623  0000B7                     _UART2_RxInterruptHandler:
  3624                           	opt callstack 0
  3625  0000B7                     	ds	3
  3626  0000BA                     _INT1_InterruptHandler:
  3627                           	opt callstack 0
  3628  0000BA                     	ds	3
  3629  0000BD                     _INT0_InterruptHandler:
  3630                           	opt callstack 0
  3631  0000BD                     	ds	3
  3632  0000C0                     _nout:
  3633                           	opt callstack 0
  3634  0000C0                     	ds	2
  3635  0000C2                     TMR3_ISR@CountCallBack:
  3636                           	opt callstack 0
  3637  0000C2                     	ds	2
  3638                           
  3639                           	psect	dataBANK0
  3640  0000C4                     __pdataBANK0:
  3641                           	opt callstack 0
  3642  0000C4                     _R:
  3643                           	opt callstack 0
  3644  0000C4                     	ds	40
  3645  0000EC                     stoa@F1166:
  3646                           	opt callstack 0
  3647  0000EC                     	ds	7
  3648  0000F3                     _H:
  3649                           	opt callstack 0
  3650  0000F3                     	ds	7
  3651                           
  3652                           	psect	bssBANK1
  3653  0001F7                     __pbssBANK1:
  3654                           	opt callstack 0
  3655  0001F7                     _seed:
  3656                           	opt callstack 0
  3657  0001F7                     	ds	8
  3658                           
  3659                           	psect	dataBANK1
  3660  000100                     __pdataBANK1:
  3661                           	opt callstack 0
  3662  000100                     _C:
  3663                           	opt callstack 0
  3664  000100                     	ds	247
  3665                           
  3666                           	psect	bssBANK2
  3667  0002BD                     __pbssBANK2:
  3668                           	opt callstack 0
  3669  0002BD                     _S:
  3670                           	opt callstack 0
  3671  0002BD                     	ds	41
  3672  0002E6                     _tickCount:
  3673                           	opt callstack 0
  3674  0002E6                     	ds	26
  3675                           
  3676                           	psect	dataBANK2
  3677  000200                     __pdataBANK2:
  3678                           	opt callstack 0
  3679  000200                     _V:
  3680                           	opt callstack 0
  3681  000200                     	ds	189
  3682                           
  3683                           	psect	bssBANK3
  3684  000300                     __pbssBANK3:
  3685                           	opt callstack 0
  3686  000300                     lp_filter@smooth:
  3687                           	opt callstack 0
  3688  000300                     	ds	84
  3689  000354                     _uart2TxBuffer:
  3690                           	opt callstack 0
  3691  000354                     	ds	64
  3692  000394                     _dbuf:
  3693                           	opt callstack 0
  3694  000394                     	ds	80
  3695                           
  3696                           	psect	bssBANK4
  3697  000400                     __pbssBANK4:
  3698                           	opt callstack 0
  3699  000400                     _ring_buf2:
  3700                           	opt callstack 0
  3701  000400                     	ds	67
  3702  000443                     _ring_buf1:
  3703                           	opt callstack 0
  3704  000443                     	ds	67
  3705                           
  3706                           	psect	bssBANK5
  3707  000500                     __pbssBANK5:
  3708                           	opt callstack 0
  3709  000500                     _uart2RxBuffer:
  3710                           	opt callstack 0
  3711  000500                     	ds	255
  3712                           
  3713                           	psect	bssBIGRAM
  3714  0007FF                     __pbssBIGRAM:
  3715                           	opt callstack 0
  3716  0007FF                     _D:
  3717                           	opt callstack 0
  3718  0007FF                     	ds	482
  3719                           
  3720                           	psect	dataBIGRAM
  3721  0005FF                     __pdataBIGRAM:
  3722                           	opt callstack 0
  3723  0005FF                     _port_data:
  3724                           	opt callstack 0
  3725  0005FF                     	ds	512
  3726                           
  3727                           	psect	cstackCOMRAM
  3728  000001                     __pcstackCOMRAM:
  3729                           	opt callstack 0
  3730  000001                     ??_ADCC_ThresholdISR:
  3731  000001                     
  3732                           ; 1 bytes @ 0x0
  3733  000001                     	ds	5
  3734  000006                     ??_TMR6_ISR:
  3735                           
  3736                           ; 1 bytes @ 0x5
  3737  000006                     	ds	1
  3738  000007                     ??_INT1_ISR:
  3739  000007                     
  3740                           ; 1 bytes @ 0x6
  3741  000007                     	ds	4
  3742  00000B                     ??_TMR5_ISR:
  3743                           
  3744                           ; 1 bytes @ 0xA
  3745  00000B                     	ds	4
  3746  00000F                     ??_TMR3_ISR:
  3747                           
  3748                           ; 1 bytes @ 0xE
  3749  00000F                     	ds	25
  3750                           
  3751 ;;
  3752 ;;Main: autosize = 13, tempsize = 0, incstack = 0, save=0
  3753 ;;
  3754 ;; *************** function _main *****************
  3755 ;; Defined at:
  3756 ;;		line 175 in file "main.c"
  3757 ;; Parameters:    Size  Location     Type
  3758 ;;		None
  3759 ;; Auto vars:     Size  Location     Type
  3760 ;;  esr_temp        4  [STACK] float 
  3761 ;;  i_esr           2  [STACK] unsigned short 
  3762 ;;  shape           1  [STACK] unsigned char 
  3763 ;;  k               1  [STACK] unsigned char 
  3764 ;;  j               1  [STACK] unsigned char 
  3765 ;;  i               1  [STACK] unsigned char 
  3766 ;;  inp_index       1  [STACK] unsigned char 
  3767 ;;  mode            1  [STACK] enum E17013
  3768 ;;  i_ror           1  [STACK] unsigned char 
  3769 ;; Return value:  Size  Location     Type
  3770 ;;                  1  [STACK] void 
  3771 ;; Registers used:
  3772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3773 ;; Tracked objects:
  3774 ;;		On entry : 0/0
  3775 ;;		On exit  : 0/0
  3776 ;;		Unchanged: 0/0
  3777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3782 ;;Total ram usage:        0 bytes
  3783 ;; Hardware stack levels required when called:   28
  3784 ;; This function calls:
  3785 ;;		_SYSTEM_Initialize
  3786 ;;		_StartTimer
  3787 ;;		_TimerDone
  3788 ;;		_WaitMs
  3789 ;;		___fladd
  3790 ;;		___flge
  3791 ;;		___fltol
  3792 ;;		_calc_model_data
  3793 ;;		_calc_ror_data
  3794 ;;		_check_adc_scan
  3795 ;;		_check_enter_button
  3796 ;;		_check_help
  3797 ;;		_clear_adc_scan
  3798 ;;		_clear_hid_pflags
  3799 ;;		_conv_raw_result
  3800 ;;		_convert_adc_data
  3801 ;;		_eaDogM_WriteCommand
  3802 ;;		_esr_check
  3803 ;;		_fabsf
  3804 ;;		_get_raw_result
  3805 ;;		_get_switch
  3806 ;;		_get_vterm_ptr
  3807 ;;		_hid_display
  3808 ;;		_init_bsoc
  3809 ;;		_init_display
  3810 ;;		_init_port_dma
  3811 ;;		_lp_filter
  3812 ;;		_mode_lamp_dim
  3813 ;;		_set_display_info
  3814 ;;		_set_load_relay_one
  3815 ;;		_set_load_relay_two
  3816 ;;		_set_vterm
  3817 ;;		_spinners
  3818 ;;		_sprintf
  3819 ;;		_srand
  3820 ;;		_start_adc_scan
  3821 ;;		_start_switch_handler
  3822 ;;		_static_soc
  3823 ;;		_update_lcd
  3824 ;; This function is called by:
  3825 ;;		Startup code after reset
  3826 ;; This function uses a reentrant model
  3827 ;;
  3828                           
  3829                           	psect	text0
  3830  011244                     __ptext0:
  3831                           	opt callstack 0
  3832  011244                     _main:
  3833                           	opt callstack 0
  3834                           
  3835                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  3836  011244  0E0D               	movlw	13
  3837  011246  26E1               	addwf	fsr1l,f,c
  3838  011248  0E00               	movlw	0
  3839  01124A  22E2               	addwfc	fsr1h,f,c
  3840                           
  3841                           ;main.c: 177:  UI_STATES mode;;main.c: 178:  uint8_t inp_index = 0, i = C_BATT, j = C_PV
      +                          , k = V_CC, i_ror;
  3842                           ;stkvar	_inp_index @ sp[(-13)+10]
  3843                           
  3844                           ;incstack = 0
  3845  01124C  0EFD               	movlw	-3
  3846  01124E  6AE3               	clrf	plusw1,c
  3847                           
  3848                           ;stkvar	_i @ sp[(-13)+9]
  3849  011250  0EFC               	movlw	-4
  3850  011252  6AE3               	clrf	plusw1,c
  3851                           
  3852                           ;stkvar	_j @ sp[(-13)+8]
  3853  011254  0EFB               	movlw	-5
  3854  011256  6AE3               	clrf	plusw1,c
  3855  011258  2AE3               	incf	plusw1,f,c
  3856                           
  3857                           ;stkvar	_k @ sp[(-13)+7]
  3858  01125A  0EFA               	movlw	-6
  3859  01125C  6AE3               	clrf	plusw1,c
  3860  01125E  82E3               	bsf	plusw1,1,c
  3861                           
  3862                           ;main.c: 181:  SYSTEM_Initialize();
  3863  011260  ECD3  F0D4         	call	_SYSTEM_Initialize	;wreg free
  3864                           
  3865                           ; BSR set to: 60
  3866                           ;main.c: 184:  (INTCON0bits.GIEH = 1);
  3867  011264  8ED2               	bsf	210,7,c	;volatile
  3868                           
  3869                           ; BSR set to: 60
  3870                           ;main.c: 187:  (INTCON0bits.GIEL = 1);
  3871  011266  8CD2               	bsf	210,6,c	;volatile
  3872                           
  3873                           ; BSR set to: 60
  3874                           ;main.c: 189:  V.ui_state = UI_STATE_INIT;
  3875  011268  0102               	movlb	2	; () banked
  3876  01126A  6B00               	clrf	_V& (0+255),b	;volatile
  3877                           
  3878                           ; BSR set to: 2
  3879                           ;main.c: 194:  WaitMs(300);
  3880  01126C  0E2C               	movlw	44
  3881  01126E  6EE6               	movwf	postinc1,c
  3882  011270  0E01               	movlw	1
  3883  011272  6EE6               	movwf	postinc1,c
  3884  011274  EC01  F0D7         	call	_WaitMs	;wreg free
  3885                           
  3886                           ;main.c: 195:  if (PORTBbits.RB0) {
  3887  011278  A0CB               	btfss	203,0,c	;volatile
  3888  01127A  D004               	goto	l12564
  3889                           
  3890                           ;main.c: 196:   mode = UI_STATE_HOST;
  3891                           ;stkvar	_mode @ sp[(-13)+11]
  3892  01127C  0EFE               	movlw	-2
  3893  01127E  6AE3               	clrf	plusw1,c
  3894  011280  2AE3               	incf	plusw1,f,c
  3895                           
  3896                           ;main.c: 197:  } else {
  3897  011282  D004               	goto	l12566
  3898  011284                     l12564:
  3899                           
  3900                           ;main.c: 198:   mode = UI_STATE_LOG;
  3901                           ;stkvar	_mode @ sp[(-13)+11]
  3902  011284  0EFE               	movlw	-2
  3903  011286  6AE3               	clrf	plusw1,c
  3904  011288  80E3               	bsf	plusw1,0,c
  3905  01128A  82E3               	bsf	plusw1,1,c	;indir
  3906  01128C                     l12566:
  3907                           
  3908                           ;main.c: 201:  if (mode == UI_STATE_HOST) {
  3909                           ;stkvar	_mode @ sp[(-13)+11]
  3910  01128C  0EFE               	movlw	-2
  3911  01128E  04E3               	decf	plusw1,w,c
  3912  011290  A4D8               	btfss	status,2,c
  3913  011292  D007               	goto	l1322
  3914                           
  3915                           ;main.c: 202:   do { LATDbits.LATD0 = 1; } while(0);
  3916  011294  80BD               	bsf	189,0,c	;volatile
  3917                           
  3918                           ;main.c: 203:   V.mode_pwm = 70;
  3919  011296  0E00               	movlw	0
  3920  011298  0102               	movlb	2	; () banked
  3921  01129A  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  3922  01129C  0E46               	movlw	70
  3923  01129E  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  3924                           
  3925                           ;main.c: 204:  } else {
  3926  0112A0  D004               	goto	l12570
  3927  0112A2                     l1322:
  3928  0112A2  90BD               	bcf	189,0,c	;volatile
  3929                           
  3930                           ;main.c: 206:   V.mode_pwm = 0;
  3931  0112A4  0102               	movlb	2	; () banked
  3932  0112A6  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  3933  0112A8  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  3934  0112AA                     l12570:
  3935                           
  3936                           ; BSR set to: 2
  3937                           ;main.c: 208:  mode_lamp_dim(V.mode_pwm);
  3938  0112AA  0060  FA57  FFE6   	movff	_V+149,postinc1
  3939  0112B0  0060  FA5B  FFE6   	movff	_V+150,postinc1
  3940  0112B6  ECC9  F0DA         	call	_mode_lamp_dim	;wreg free
  3941  0112BA  D311               	goto	l12690
  3942  0112BC                     l12572:
  3943                           
  3944                           ; BSR set to: 2
  3945                           ;main.c: 216:    init_port_dma();
  3946  0112BC  EC85  F0D7         	call	_init_port_dma	;wreg free
  3947                           
  3948                           ; BSR set to: 59
  3949                           ;main.c: 218:    init_display();
  3950  0112C0  EC88  F0CB         	call	_init_display	;wreg free
  3951                           
  3952                           ; BSR set to: 61
  3953                           ;main.c: 219:    eaDogM_WriteCommand(0b00001100);
  3954  0112C4  0E0C               	movlw	12
  3955  0112C6  6EE6               	movwf	postinc1,c
  3956  0112C8  EC2D  F0DB         	call	_eaDogM_WriteCommand	;wreg free
  3957                           
  3958                           ; BSR set to: 0
  3959                           ;main.c: 223:    set_load_relay_one(1);
  3960  0112CC  0E01               	movlw	1
  3961  0112CE  6EE6               	movwf	postinc1,c
  3962  0112D0  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  3963                           
  3964                           ;main.c: 224:    set_load_relay_two(1);
  3965  0112D4  0E01               	movlw	1
  3966  0112D6  6EE6               	movwf	postinc1,c
  3967  0112D8  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  3968                           
  3969                           ;main.c: 226:    V.ui_state = mode;
  3970                           ;stkvar	_mode @ sp[(-13)+11]
  3971  0112DC  0EFE               	movlw	-2
  3972  0112DE  006F FF8C  F200    	movff	plusw1,_V	;volatile
  3973                           
  3974                           ;main.c: 227:    srand(1957);
  3975  0112E4  0EA5               	movlw	165
  3976  0112E6  6EE6               	movwf	postinc1,c
  3977  0112E8  0E07               	movlw	7
  3978  0112EA  6EE6               	movwf	postinc1,c
  3979  0112EC  EC37  F0D7         	call	_srand	;wreg free
  3980                           
  3981                           ; BSR set to: 1
  3982                           ;main.c: 228:    set_vterm(0);
  3983  0112F0  0E00               	movlw	0
  3984  0112F2  6EE6               	movwf	postinc1,c
  3985  0112F4  EC56  F0DA         	call	_set_vterm	;wreg free
  3986                           
  3987                           ;main.c: 229:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  3988  0112F8  0E50               	movlw	low STR_1
  3989  0112FA  6EE6               	movwf	postinc1,c
  3990  0112FC  0EFF               	movlw	high STR_1
  3991  0112FE  6EE6               	movwf	postinc1,c
  3992  011300  0E00               	movlw	0
  3993  011302  6EE6               	movwf	postinc1,c
  3994  011304  0E00               	movlw	0
  3995  011306  6EE6               	movwf	postinc1,c
  3996  011308  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  3997  01130C  0060  F0A3  FFE6   	movff	btemp,postinc1
  3998  011312  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  3999  011318  0E04               	movlw	4
  4000  01131A  6EE6               	movwf	postinc1,c
  4001  01131C  EC06  F0CA         	call	_sprintf	;wreg free
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;main.c: 230:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "1.006");
  4005  011320  0ED0               	movlw	low STR_3
  4006  011322  6EE6               	movwf	postinc1,c
  4007  011324  0EFF               	movlw	high STR_3
  4008  011326  6EE6               	movwf	postinc1,c
  4009  011328  0EA2               	movlw	low STR_2
  4010  01132A  6EE6               	movwf	postinc1,c
  4011  01132C  0EFF               	movlw	high STR_2
  4012  01132E  6EE6               	movwf	postinc1,c
  4013  011330  0E00               	movlw	0
  4014  011332  6EE6               	movwf	postinc1,c
  4015  011334  0E01               	movlw	1
  4016  011336  6EE6               	movwf	postinc1,c
  4017  011338  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4018  01133C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4019  011342  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4020  011348  0E06               	movlw	6
  4021  01134A  6EE6               	movwf	postinc1,c
  4022  01134C  EC06  F0CA         	call	_sprintf	;wreg free
  4023                           
  4024                           ; BSR set to: 0
  4025                           ;main.c: 231:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  4026  011350  0E1D               	movlw	low STR_4
  4027  011352  6EE6               	movwf	postinc1,c
  4028  011354  0EFF               	movlw	high STR_4
  4029  011356  6EE6               	movwf	postinc1,c
  4030  011358  0E00               	movlw	0
  4031  01135A  6EE6               	movwf	postinc1,c
  4032  01135C  0E02               	movlw	2
  4033  01135E  6EE6               	movwf	postinc1,c
  4034  011360  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4035  011364  0060  F0A3  FFE6   	movff	btemp,postinc1
  4036  01136A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4037  011370  0E04               	movlw	4
  4038  011372  6EE6               	movwf	postinc1,c
  4039  011374  EC06  F0CA         	call	_sprintf	;wreg free
  4040                           
  4041                           ; BSR set to: 0
  4042                           ;main.c: 232:    sprintf(get_vterm_ptr(0, 2), "                ");
  4043  011378  0EF0               	movlw	low (STR_58+2)
  4044  01137A  6EE6               	movwf	postinc1,c
  4045  01137C  0EFD               	movlw	high (STR_58+2)
  4046  01137E  6EE6               	movwf	postinc1,c
  4047  011380  0E02               	movlw	2
  4048  011382  6EE6               	movwf	postinc1,c
  4049  011384  0E00               	movlw	0
  4050  011386  6EE6               	movwf	postinc1,c
  4051  011388  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4052  01138C  0060  F0A3  FFE6   	movff	btemp,postinc1
  4053  011392  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4054  011398  0E04               	movlw	4
  4055  01139A  6EE6               	movwf	postinc1,c
  4056  01139C  EC06  F0CA         	call	_sprintf	;wreg free
  4057                           
  4058                           ; BSR set to: 0
  4059                           ;main.c: 233:    sprintf(get_vterm_ptr(1, 2), "                ");
  4060  0113A0  0EF0               	movlw	low (STR_58+2)
  4061  0113A2  6EE6               	movwf	postinc1,c
  4062  0113A4  0EFD               	movlw	high (STR_58+2)
  4063  0113A6  6EE6               	movwf	postinc1,c
  4064  0113A8  0E02               	movlw	2
  4065  0113AA  6EE6               	movwf	postinc1,c
  4066  0113AC  0E01               	movlw	1
  4067  0113AE  6EE6               	movwf	postinc1,c
  4068  0113B0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4069  0113B4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4070  0113BA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4071  0113C0  0E04               	movlw	4
  4072  0113C2  6EE6               	movwf	postinc1,c
  4073  0113C4  EC06  F0CA         	call	_sprintf	;wreg free
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;main.c: 234:    sprintf(get_vterm_ptr(2, 2), "                ");
  4077  0113C8  0EF0               	movlw	low (STR_58+2)
  4078  0113CA  6EE6               	movwf	postinc1,c
  4079  0113CC  0EFD               	movlw	high (STR_58+2)
  4080  0113CE  6EE6               	movwf	postinc1,c
  4081  0113D0  0E02               	movlw	2
  4082  0113D2  6EE6               	movwf	postinc1,c
  4083  0113D4  0E02               	movlw	2
  4084  0113D6  6EE6               	movwf	postinc1,c
  4085  0113D8  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4086  0113DC  0060  F0A3  FFE6   	movff	btemp,postinc1
  4087  0113E2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4088  0113E8  0E04               	movlw	4
  4089  0113EA  6EE6               	movwf	postinc1,c
  4090  0113EC  EC06  F0CA         	call	_sprintf	;wreg free
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;main.c: 235:    update_lcd(0);
  4094  0113F0  0E00               	movlw	0
  4095  0113F2  6EE6               	movwf	postinc1,c
  4096  0113F4  ECF7  F0C8         	call	_update_lcd	;wreg free
  4097                           
  4098                           ;main.c: 236:    WaitMs(1000);
  4099  0113F8  0EE8               	movlw	232
  4100  0113FA  6EE6               	movwf	postinc1,c
  4101  0113FC  0E03               	movlw	3
  4102  0113FE  6EE6               	movwf	postinc1,c
  4103  011400  EC01  F0D7         	call	_WaitMs	;wreg free
  4104                           
  4105                           ;main.c: 237:    StartTimer(TMR_DISPLAY, 250);
  4106  011404  0EFA               	movlw	250
  4107  011406  6EE6               	movwf	postinc1,c
  4108  011408  0E00               	movlw	0
  4109  01140A  6EE6               	movwf	postinc1,c
  4110  01140C  0E0A               	movlw	10
  4111  01140E  6EE6               	movwf	postinc1,c
  4112  011410  EC0E  F0D6         	call	_StartTimer	;wreg free
  4113                           
  4114                           ;main.c: 238:    StartTimer(TMR_ADC, 200);
  4115  011414  0EC8               	movlw	200
  4116  011416  6EE6               	movwf	postinc1,c
  4117  011418  0E00               	movlw	0
  4118  01141A  6EE6               	movwf	postinc1,c
  4119  01141C  0E01               	movlw	1
  4120  01141E  6EE6               	movwf	postinc1,c
  4121  011420  EC0E  F0D6         	call	_StartTimer	;wreg free
  4122                           
  4123                           ;main.c: 239:    StartTimer(TMR_INFO, 3000);
  4124  011424  0EB8               	movlw	184
  4125  011426  6EE6               	movwf	postinc1,c
  4126  011428  0E0B               	movlw	11
  4127  01142A  6EE6               	movwf	postinc1,c
  4128  01142C  0E07               	movlw	7
  4129  01142E  6EE6               	movwf	postinc1,c
  4130  011430  EC0E  F0D6         	call	_StartTimer	;wreg free
  4131                           
  4132                           ;main.c: 240:    StartTimer(TMR_FLIPPER, 1500);
  4133  011434  0EDC               	movlw	220
  4134  011436  6EE6               	movwf	postinc1,c
  4135  011438  0E05               	movlw	5
  4136  01143A  6EE6               	movwf	postinc1,c
  4137  01143C  0E0B               	movlw	11
  4138  01143E  6EE6               	movwf	postinc1,c
  4139  011440  EC0E  F0D6         	call	_StartTimer	;wreg free
  4140                           
  4141                           ;main.c: 241:    StartTimer(TMR_HELPDIS, 3000);
  4142  011444  0EB8               	movlw	184
  4143  011446  6EE6               	movwf	postinc1,c
  4144  011448  0E0B               	movlw	11
  4145  01144A  6EE6               	movwf	postinc1,c
  4146  01144C  0E09               	movlw	9
  4147  01144E  6EE6               	movwf	postinc1,c
  4148  011450  EC0E  F0D6         	call	_StartTimer	;wreg free
  4149                           
  4150                           ;main.c: 243:    start_adc_scan();
  4151  011454  ECE6  F0D2         	call	_start_adc_scan	;wreg free
  4152                           
  4153                           ;main.c: 244:    start_switch_handler();
  4154  011458  EC37  F0DA         	call	_start_switch_handler	;wreg free
  4155                           
  4156                           ; BSR set to: 57
  4157                           ;main.c: 245:    WaitMs(1000);
  4158  01145C  0EE8               	movlw	232
  4159  01145E  6EE6               	movwf	postinc1,c
  4160  011460  0E03               	movlw	3
  4161  011462  6EE6               	movwf	postinc1,c
  4162  011464  EC01  F0D7         	call	_WaitMs	;wreg free
  4163                           
  4164                           ;main.c: 250:    i_ror = 1;
  4165                           ;stkvar	_i_ror @ sp[(-13)+12]
  4166  011468  0EFF               	movlw	-1
  4167  01146A  6AE3               	clrf	plusw1,c
  4168  01146C  2AE3               	incf	plusw1,f,c
  4169  01146E                     l12622:
  4170                           
  4171                           ;main.c: 252:     calc_ror_data();
  4172  01146E  EC45  F0C1         	call	_calc_ror_data	;wreg free
  4173                           
  4174                           ;main.c: 253:     sprintf(get_vterm_ptr(1, 0), "BV %2.4f         ", conv_raw_result(V_BA
      +                          T, CONV));
  4175  011472  0E00               	movlw	0
  4176  011474  6EE6               	movwf	postinc1,c
  4177  011476  0E04               	movlw	4
  4178  011478  6EE6               	movwf	postinc1,c
  4179  01147A  EC58  F0A7         	call	_conv_raw_result	;wreg free
  4180  01147E  0060  F0A3  FFE6   	movff	btemp,postinc1
  4181  011484  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4182  01148A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  4183  011490  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  4184  011496  0E0B               	movlw	low STR_8
  4185  011498  6EE6               	movwf	postinc1,c
  4186  01149A  0EFF               	movlw	high STR_8
  4187  01149C  6EE6               	movwf	postinc1,c
  4188  01149E  0E00               	movlw	0
  4189  0114A0  6EE6               	movwf	postinc1,c
  4190  0114A2  0E01               	movlw	1
  4191  0114A4  6EE6               	movwf	postinc1,c
  4192  0114A6  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4193  0114AA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4194  0114B0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4195  0114B6  0E08               	movlw	8
  4196  0114B8  6EE6               	movwf	postinc1,c
  4197  0114BA  EC06  F0CA         	call	_sprintf	;wreg free
  4198                           
  4199                           ; BSR set to: 0
  4200                           ;main.c: 254:     sprintf(get_vterm_ptr(2, 0), "S S%cC %d %2.4f       ", spinners(5, 0),
      +                           i_ror, C.bv_ror);
  4201  0114BE  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4202  0114C4  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4203  0114CA  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4204  0114D0  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4205                           
  4206                           ;stkvar	_i_ror @ sp[(-17)+12]
  4207  0114D6  0EFB               	movlw	-5
  4208  0114D8  50E3               	movf	plusw1,w,c
  4209  0114DA  6EE6               	movwf	postinc1,c
  4210  0114DC  0E00               	movlw	0
  4211  0114DE  6EE6               	movwf	postinc1,c
  4212  0114E0  0E00               	movlw	0
  4213  0114E2  6EE6               	movwf	postinc1,c
  4214  0114E4  0E05               	movlw	5
  4215  0114E6  6EE6               	movwf	postinc1,c
  4216  0114E8  ECFD  F0CB         	call	_spinners	;wreg free
  4217  0114EC  5028               	movf	btemp^0,w,c
  4218  0114EE  6EE6               	movwf	postinc1,c
  4219  0114F0  0E00               	movlw	0
  4220  0114F2  6EE6               	movwf	postinc1,c
  4221  0114F4  0E08               	movlw	low STR_9
  4222  0114F6  6EE6               	movwf	postinc1,c
  4223  0114F8  0EFD               	movlw	high STR_9
  4224  0114FA  6EE6               	movwf	postinc1,c
  4225  0114FC  0E00               	movlw	0
  4226  0114FE  6EE6               	movwf	postinc1,c
  4227  011500  0E02               	movlw	2
  4228  011502  6EE6               	movwf	postinc1,c
  4229  011504  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4230  011508  0060  F0A3  FFE6   	movff	btemp,postinc1
  4231  01150E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4232  011514  0E0C               	movlw	12
  4233  011516  6EE6               	movwf	postinc1,c
  4234  011518  EC06  F0CA         	call	_sprintf	;wreg free
  4235                           
  4236                           ; BSR set to: 0
  4237                           ;main.c: 255:     update_lcd(0);
  4238  01151C  0E00               	movlw	0
  4239  01151E  6EE6               	movwf	postinc1,c
  4240  011520  ECF7  F0C8         	call	_update_lcd	;wreg free
  4241                           
  4242                           ;main.c: 256:     WaitMs(2000);
  4243  011524  0ED0               	movlw	208
  4244  011526  6EE6               	movwf	postinc1,c
  4245  011528  0E07               	movlw	7
  4246  01152A  6EE6               	movwf	postinc1,c
  4247  01152C  EC01  F0D7         	call	_WaitMs	;wreg free
  4248                           
  4249                           ;main.c: 257:     clear_adc_scan();
  4250  011530  EC7B  F0DB         	call	_clear_adc_scan	;wreg free
  4251                           
  4252                           ; BSR set to: 0
  4253                           ;main.c: 258:     start_adc_scan();
  4254  011534  ECE6  F0D2         	call	_start_adc_scan	;wreg free
  4255                           
  4256                           ;main.c: 259:     WaitMs(500);
  4257  011538  0EF4               	movlw	244
  4258  01153A  6EE6               	movwf	postinc1,c
  4259  01153C  0E01               	movlw	1
  4260  01153E  6EE6               	movwf	postinc1,c
  4261  011540  EC01  F0D7         	call	_WaitMs	;wreg free
  4262                           
  4263                           ;main.c: 260:    } while ((i_ror++ < 30) && (C.bv_ror > 0.0140));
  4264                           ;stkvar	_i_ror @ sp[(-13)+12]
  4265  011544  0EFF               	movlw	-1
  4266  011546  006F FF8C  F033    	movff	plusw1,btemp+11
  4267  01154C  2A33               	incf	(btemp+11)^0,f,c
  4268  01154E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4269  011554  0633               	decf	(btemp+11)^0,f,c
  4270  011556  0E1E               	movlw	30
  4271  011558  6033               	cpfslt	(btemp+11)^0,c
  4272  01155A  D018               	goto	u12090
  4273  01155C  0060  F5A3  FFE6   	movff	_C+104,postinc1
  4274  011562  0060  F5A7  FFE6   	movff	_C+105,postinc1
  4275  011568  0060  F5AB  FFE6   	movff	_C+106,postinc1
  4276  01156E  0060  F5AF  FFE6   	movff	_C+107,postinc1
  4277  011574  0E42               	movlw	66
  4278  011576  6EE6               	movwf	postinc1,c
  4279  011578  0E60               	movlw	96
  4280  01157A  6EE6               	movwf	postinc1,c
  4281  01157C  0E65               	movlw	101
  4282  01157E  6EE6               	movwf	postinc1,c
  4283  011580  0E3C               	movlw	60
  4284  011582  6EE6               	movwf	postinc1,c
  4285  011584  EC70  F0C3         	call	___flge	;wreg free
  4286  011588  A028               	btfss	btemp& (0+255),0,c
  4287  01158A  D771               	goto	l12622
  4288  01158C                     u12090:
  4289                           
  4290                           ;main.c: 262:    static_soc();
  4291  01158C  ECA8  F0D9         	call	_static_soc	;wreg free
  4292                           
  4293                           ; BSR set to: 1
  4294                           ;main.c: 263:    init_bsoc();
  4295  011590  ECB8  F0C2         	call	_init_bsoc	;wreg free
  4296                           
  4297                           ;main.c: 264:    set_load_relay_one(0);
  4298  011594  0E00               	movlw	0
  4299  011596  6EE6               	movwf	postinc1,c
  4300  011598  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  4301                           
  4302                           ;main.c: 265:    set_load_relay_two(0);
  4303  01159C  0E00               	movlw	0
  4304  01159E  6EE6               	movwf	postinc1,c
  4305  0115A0  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  4306                           
  4307                           ;main.c: 266:    sprintf(get_vterm_ptr(0, 0), "Static SOC %d        ", C.soc);
  4308  0115A4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  4309  0115AA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  4310  0115B0  0E35               	movlw	low STR_10
  4311  0115B2  6EE6               	movwf	postinc1,c
  4312  0115B4  0EFD               	movlw	high STR_10
  4313  0115B6  6EE6               	movwf	postinc1,c
  4314  0115B8  0E00               	movlw	0
  4315  0115BA  6EE6               	movwf	postinc1,c
  4316  0115BC  0E00               	movlw	0
  4317  0115BE  6EE6               	movwf	postinc1,c
  4318  0115C0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4319  0115C4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4320  0115CA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4321  0115D0  0E06               	movlw	6
  4322  0115D2  6EE6               	movwf	postinc1,c
  4323  0115D4  EC06  F0CA         	call	_sprintf	;wreg free
  4324                           
  4325                           ; BSR set to: 0
  4326                           ;main.c: 267:    sprintf(get_vterm_ptr(1, 0), "Battery Ah %3.2f     ", C.dynamic_ah);
  4327  0115D8  0060  F633  FFE6   	movff	_C+140,postinc1
  4328  0115DE  0060  F637  FFE6   	movff	_C+141,postinc1
  4329  0115E4  0060  F63B  FFE6   	movff	_C+142,postinc1
  4330  0115EA  0060  F63F  FFE6   	movff	_C+143,postinc1
  4331  0115F0  0E4B               	movlw	low STR_11
  4332  0115F2  6EE6               	movwf	postinc1,c
  4333  0115F4  0EFD               	movlw	high STR_11
  4334  0115F6  6EE6               	movwf	postinc1,c
  4335  0115F8  0E00               	movlw	0
  4336  0115FA  6EE6               	movwf	postinc1,c
  4337  0115FC  0E01               	movlw	1
  4338  0115FE  6EE6               	movwf	postinc1,c
  4339  011600  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4340  011604  0060  F0A3  FFE6   	movff	btemp,postinc1
  4341  01160A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4342  011610  0E08               	movlw	8
  4343  011612  6EE6               	movwf	postinc1,c
  4344  011614  EC06  F0CA         	call	_sprintf	;wreg free
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;main.c: 268:    update_lcd(0);
  4348  011618  0E00               	movlw	0
  4349  01161A  6EE6               	movwf	postinc1,c
  4350  01161C  ECF7  F0C8         	call	_update_lcd	;wreg free
  4351                           
  4352                           ;main.c: 269:    WaitMs(2000);
  4353  011620  0ED0               	movlw	208
  4354  011622  6EE6               	movwf	postinc1,c
  4355  011624  0E07               	movlw	7
  4356  011626  6EE6               	movwf	postinc1,c
  4357  011628  EC01  F0D7         	call	_WaitMs	;wreg free
  4358                           
  4359                           ;main.c: 270:    sprintf(get_vterm_ptr(0, 0), "Battery ESR     ");
  4360  01162C  0E2E               	movlw	low STR_12
  4361  01162E  6EE6               	movwf	postinc1,c
  4362  011630  0EFF               	movlw	high STR_12
  4363  011632  6EE6               	movwf	postinc1,c
  4364  011634  0E00               	movlw	0
  4365  011636  6EE6               	movwf	postinc1,c
  4366  011638  0E00               	movlw	0
  4367  01163A  6EE6               	movwf	postinc1,c
  4368  01163C  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4369  011640  0060  F0A3  FFE6   	movff	btemp,postinc1
  4370  011646  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4371  01164C  0E04               	movlw	4
  4372  01164E  6EE6               	movwf	postinc1,c
  4373  011650  EC06  F0CA         	call	_sprintf	;wreg free
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;main.c: 271:    sprintf(get_vterm_ptr(1, 0), "Calculation     ");
  4377  011654  0E3F               	movlw	low STR_13
  4378  011656  6EE6               	movwf	postinc1,c
  4379  011658  0EFF               	movlw	high STR_13
  4380  01165A  6EE6               	movwf	postinc1,c
  4381  01165C  0E00               	movlw	0
  4382  01165E  6EE6               	movwf	postinc1,c
  4383  011660  0E01               	movlw	1
  4384  011662  6EE6               	movwf	postinc1,c
  4385  011664  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4386  011668  0060  F0A3  FFE6   	movff	btemp,postinc1
  4387  01166E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4388  011674  0E04               	movlw	4
  4389  011676  6EE6               	movwf	postinc1,c
  4390  011678  EC06  F0CA         	call	_sprintf	;wreg free
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;main.c: 272:    sprintf(get_vterm_ptr(2, 0), "Check 30 seconds");
  4394  01167C  0E72               	movlw	low STR_14
  4395  01167E  6EE6               	movwf	postinc1,c
  4396  011680  0EFF               	movlw	high STR_14
  4397  011682  6EE6               	movwf	postinc1,c
  4398  011684  0E00               	movlw	0
  4399  011686  6EE6               	movwf	postinc1,c
  4400  011688  0E02               	movlw	2
  4401  01168A  6EE6               	movwf	postinc1,c
  4402  01168C  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4403  011690  0060  F0A3  FFE6   	movff	btemp,postinc1
  4404  011696  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4405  01169C  0E04               	movlw	4
  4406  01169E  6EE6               	movwf	postinc1,c
  4407  0116A0  EC06  F0CA         	call	_sprintf	;wreg free
  4408                           
  4409                           ; BSR set to: 0
  4410                           ;main.c: 273:    update_lcd(0);
  4411  0116A4  0E00               	movlw	0
  4412  0116A6  6EE6               	movwf	postinc1,c
  4413  0116A8  ECF7  F0C8         	call	_update_lcd	;wreg free
  4414                           
  4415                           ;main.c: 274:    uint16_t i_esr = 1;
  4416  0116AC  0E01               	movlw	1
  4417  0116AE  6E32               	movwf	(btemp+10)^0,c
  4418  0116B0  0E00               	movlw	0
  4419  0116B2  6E33               	movwf	(btemp+11)^0,c
  4420                           
  4421                           ;stkvar	_i_esr @ sp[(-13)+4]
  4422  0116B4  0EF7               	movlw	-9
  4423  0116B6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
  4424  0116BC  0EF8               	movlw	-8
  4425  0116BE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4426                           
  4427                           ;main.c: 276:    float esr_temp;;main.c: 277:    while ((esr_temp = esr_check(0)) < 0.0)
      +                           {
  4428  0116C4  D06D               	goto	l12682
  4429  0116C6                     l12670:
  4430                           
  4431                           ;main.c: 278:     WaitMs(110);
  4432  0116C6  0E6E               	movlw	110
  4433  0116C8  6EE6               	movwf	postinc1,c
  4434  0116CA  0E00               	movlw	0
  4435  0116CC  6EE6               	movwf	postinc1,c
  4436  0116CE  EC01  F0D7         	call	_WaitMs	;wreg free
  4437                           
  4438                           ;main.c: 279:     shape = (uint8_t) fabsf(esr_temp);
  4439                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4440  0116D2  0EF3               	movlw	-13
  4441  0116D4  006F FF8F FFE6     	movff	plusw1,postinc1
  4442  0116DA  006F FF8F FFE6     	movff	plusw1,postinc1
  4443  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  4444  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  4445  0116EC  ECF7  F0CD         	call	_fabsf	;wreg free
  4446  0116F0  0060  F0A3  FFE6   	movff	btemp,postinc1
  4447  0116F6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4448  0116FC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  4449  011702  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  4450  011708  ECFF  F0C1         	call	___fltol	;wreg free
  4451  01170C  0060  F0A0  F033   	movff	btemp,btemp+11
  4452                           
  4453                           ;stkvar	_shape @ sp[(-13)+6]
  4454  011712  0EF9               	movlw	-7
  4455  011714  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  4456                           
  4457                           ;main.c: 280:     sprintf(get_vterm_ptr(2, 0), "Checking %c %c      ", spinners(0, 0), s
      +                          pinners(shape, 0));
  4458  01171A  0E00               	movlw	0
  4459  01171C  6EE6               	movwf	postinc1,c
  4460                           
  4461                           ;stkvar	_shape @ sp[(-14)+6]
  4462  01171E  0EF8               	movlw	-8
  4463  011720  50E3               	movf	plusw1,w,c
  4464  011722  6EE6               	movwf	postinc1,c
  4465  011724  ECFD  F0CB         	call	_spinners	;wreg free
  4466  011728  5028               	movf	btemp^0,w,c
  4467  01172A  6EE6               	movwf	postinc1,c
  4468  01172C  0E00               	movlw	0
  4469  01172E  6EE6               	movwf	postinc1,c
  4470  011730  0E00               	movlw	0
  4471  011732  6EE6               	movwf	postinc1,c
  4472  011734  0E00               	movlw	0
  4473  011736  6EE6               	movwf	postinc1,c
  4474  011738  ECFD  F0CB         	call	_spinners	;wreg free
  4475  01173C  5028               	movf	btemp^0,w,c
  4476  01173E  6EE6               	movwf	postinc1,c
  4477  011740  0E00               	movlw	0
  4478  011742  6EE6               	movwf	postinc1,c
  4479  011744  0E61               	movlw	low STR_15
  4480  011746  6EE6               	movwf	postinc1,c
  4481  011748  0EFD               	movlw	high STR_15
  4482  01174A  6EE6               	movwf	postinc1,c
  4483  01174C  0E00               	movlw	0
  4484  01174E  6EE6               	movwf	postinc1,c
  4485  011750  0E02               	movlw	2
  4486  011752  6EE6               	movwf	postinc1,c
  4487  011754  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4488  011758  0060  F0A3  FFE6   	movff	btemp,postinc1
  4489  01175E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4490  011764  0E08               	movlw	8
  4491  011766  6EE6               	movwf	postinc1,c
  4492  011768  EC06  F0CA         	call	_sprintf	;wreg free
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;main.c: 281:     update_lcd(0);
  4496  01176C  0E00               	movlw	0
  4497  01176E  6EE6               	movwf	postinc1,c
  4498  011770  ECF7  F0C8         	call	_update_lcd	;wreg free
  4499                           
  4500                           ;main.c: 283:     if (i_esr++ > 512)
  4501                           ;stkvar	_i_esr @ sp[(-13)+4]
  4502  011774  50E1               	movf	fsr1l,w,c
  4503  011776  0FF7               	addlw	-9
  4504  011778  6ED9               	movwf	fsr2l,c
  4505  01177A  50E2               	movf	fsr1h,w,c
  4506  01177C  6EDA               	movwf	fsr2h,c
  4507  01177E  0EFF               	movlw	255
  4508  011780  22DA               	addwfc	fsr2h,f,c
  4509  011782  006F FF7C  F032    	movff	indf2,btemp+10
  4510  011788  0E01               	movlw	1
  4511  01178A  26DE               	addwf	postinc2,f,c
  4512  01178C  006F FF7C  F033    	movff	indf2,btemp+11
  4513  011792  0E00               	movlw	0
  4514  011794  22DD               	addwfc	postdec2,f,c
  4515  011796  0432               	decf	(btemp+10)^0,w,c
  4516  011798  0E02               	movlw	2
  4517  01179A  5833               	subwfb	(btemp+11)^0,w,c
  4518  01179C  B0D8               	btfsc	status,0,c
  4519  01179E  D017               	goto	u12110
  4520  0117A0                     l12682:
  4521                           
  4522                           ;main.c: 277:    while ((esr_temp = esr_check(0)) < 0.0) {
  4523  0117A0  0E00               	movlw	0
  4524  0117A2  6EE6               	movwf	postinc1,c
  4525  0117A4  EC68  F0B4         	call	_esr_check	;wreg free
  4526                           
  4527                           ;stkvar	_esr_temp @ sp[(-13)+0]
  4528  0117A8  0EF3               	movlw	-13
  4529  0117AA  0060  F0A3  FFE3   	movff	btemp,plusw1
  4530  0117B0  0EF4               	movlw	-12
  4531  0117B2  0060  F0A7  FFE3   	movff	btemp+1,plusw1
  4532  0117B8  0EF5               	movlw	-11
  4533  0117BA  0060  F0AB  FFE3   	movff	btemp+2,plusw1
  4534  0117C0  0EF6               	movlw	-10
  4535  0117C2  0060  F0AF  FFE3   	movff	btemp+3,plusw1
  4536  0117C8  0EF6               	movlw	-10
  4537  0117CA  BEE3               	btfsc	plusw1,7,c
  4538  0117CC  D77C               	goto	l12670
  4539  0117CE                     u12110:
  4540                           
  4541                           ;main.c: 286:    sprintf(get_vterm_ptr(0, 0), "ESR  %2.6f           ", C.esr);
  4542  0117CE  0060  F613  FFE6   	movff	_C+132,postinc1
  4543  0117D4  0060  F617  FFE6   	movff	_C+133,postinc1
  4544  0117DA  0060  F61B  FFE6   	movff	_C+134,postinc1
  4545  0117E0  0060  F61F  FFE6   	movff	_C+135,postinc1
  4546  0117E6  0E1F               	movlw	low STR_16
  4547  0117E8  6EE6               	movwf	postinc1,c
  4548  0117EA  0EFD               	movlw	high STR_16
  4549  0117EC  6EE6               	movwf	postinc1,c
  4550  0117EE  0E00               	movlw	0
  4551  0117F0  6EE6               	movwf	postinc1,c
  4552  0117F2  0E00               	movlw	0
  4553  0117F4  6EE6               	movwf	postinc1,c
  4554  0117F6  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4555  0117FA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4556  011800  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4557  011806  0E08               	movlw	8
  4558  011808  6EE6               	movwf	postinc1,c
  4559  01180A  EC06  F0CA         	call	_sprintf	;wreg free
  4560                           
  4561                           ;main.c: 287:    sprintf(get_vterm_ptr(1, 0), "R1 %2.3f %3.4f           ", C.bv_one_load
      +                          , C.load_i1);
  4562  01180E  0060  F78F  FFE6   	movff	_C+227,postinc1
  4563  011814  0060  F793  FFE6   	movff	_C+228,postinc1
  4564  01181A  0060  F797  FFE6   	movff	_C+229,postinc1
  4565  011820  0060  F79B  FFE6   	movff	_C+230,postinc1
  4566  011826  0060  F7BF  FFE6   	movff	_C+239,postinc1
  4567  01182C  0060  F7C3  FFE6   	movff	_C+240,postinc1
  4568  011832  0060  F7C7  FFE6   	movff	_C+241,postinc1
  4569  011838  0060  F7CB  FFE6   	movff	_C+242,postinc1
  4570  01183E  0EBC               	movlw	low STR_17
  4571  011840  6EE6               	movwf	postinc1,c
  4572  011842  0EFC               	movlw	high STR_17
  4573  011844  6EE6               	movwf	postinc1,c
  4574  011846  0E00               	movlw	0
  4575  011848  6EE6               	movwf	postinc1,c
  4576  01184A  0E01               	movlw	1
  4577  01184C  6EE6               	movwf	postinc1,c
  4578  01184E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4579  011852  0060  F0A3  FFE6   	movff	btemp,postinc1
  4580  011858  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4581  01185E  0E0C               	movlw	12
  4582  011860  6EE6               	movwf	postinc1,c
  4583  011862  EC06  F0CA         	call	_sprintf	;wreg free
  4584                           
  4585                           ;main.c: 288:    sprintf(get_vterm_ptr(2, 0), "R2 %2.3f %3.4f           ", C.bv_full_loa
      +                          d, C.load_i2);
  4586  011866  0060  F79F  FFE6   	movff	_C+231,postinc1
  4587  01186C  0060  F7A3  FFE6   	movff	_C+232,postinc1
  4588  011872  0060  F7A7  FFE6   	movff	_C+233,postinc1
  4589  011878  0060  F7AB  FFE6   	movff	_C+234,postinc1
  4590  01187E  0060  F7CF  FFE6   	movff	_C+243,postinc1
  4591  011884  0060  F7D3  FFE6   	movff	_C+244,postinc1
  4592  01188A  0060  F7D7  FFE6   	movff	_C+245,postinc1
  4593  011890  0060  F7DB  FFE6   	movff	_C+246,postinc1
  4594  011896  0ED6               	movlw	low STR_18
  4595  011898  6EE6               	movwf	postinc1,c
  4596  01189A  0EFC               	movlw	high STR_18
  4597  01189C  6EE6               	movwf	postinc1,c
  4598  01189E  0E00               	movlw	0
  4599  0118A0  6EE6               	movwf	postinc1,c
  4600  0118A2  0E02               	movlw	2
  4601  0118A4  6EE6               	movwf	postinc1,c
  4602  0118A6  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4603  0118AA  0060  F0A3  FFE6   	movff	btemp,postinc1
  4604  0118B0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4605  0118B6  0E0C               	movlw	12
  4606  0118B8  6EE6               	movwf	postinc1,c
  4607  0118BA  EC06  F0CA         	call	_sprintf	;wreg free
  4608                           
  4609                           ;main.c: 289:    update_lcd(0);
  4610  0118BE  0E00               	movlw	0
  4611  0118C0  6EE6               	movwf	postinc1,c
  4612  0118C2  ECF7  F0C8         	call	_update_lcd	;wreg free
  4613                           
  4614                           ;main.c: 290:    WaitMs(5000);
  4615  0118C6  0E88               	movlw	136
  4616  0118C8  6EE6               	movwf	postinc1,c
  4617  0118CA  0E13               	movlw	19
  4618  0118CC  6EE6               	movwf	postinc1,c
  4619  0118CE  EC01  F0D7         	call	_WaitMs	;wreg free
  4620                           
  4621                           ;main.c: 291:    break;
  4622  0118D2  D01C               	goto	l12692
  4623  0118D4                     l1338:
  4624                           
  4625                           ; BSR set to: 2
  4626                           ;main.c: 297:    P.SYSTEM_STABLE = 1;
  4627  0118D4  0100               	movlb	0	; () banked
  4628  0118D6  819F               	bsf	(_P+1)& (0+255),0,b	;volatile
  4629                           
  4630                           ;main.c: 298:    break;
  4631  0118D8  D019               	goto	l12692
  4632  0118DA                     l1340:
  4633                           
  4634                           ; BSR set to: 2
  4635                           ;main.c: 301:    V.ui_state = UI_STATE_INIT;
  4636  0118DA  6B00               	clrf	_V& (0+255),b	;volatile
  4637                           
  4638                           ;main.c: 302:    break;
  4639  0118DC  D017               	goto	l12692
  4640  0118DE                     l12690:
  4641  0118DE  0102               	movlb	2	; () banked
  4642  0118E0  5100               	movf	_V& (0+255),w,b	;volatile
  4643  0118E2  6E32               	movwf	(btemp+10)^0,c
  4644  0118E4  6A33               	clrf	(btemp+11)^0,c
  4645                           
  4646                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4647                           ; Switch size 1, requested type "simple"
  4648                           ; Number of cases is 1, Range of values is 0 to 0
  4649                           ; switch strategies available:
  4650                           ; Name         Instructions Cycles
  4651                           ; simple_byte            4     3 (average)
  4652                           ;	Chosen strategy is simple_byte
  4653  0118E6  5033               	movf	(btemp+11)^0,w,c
  4654  0118E8  0A00               	xorlw	0	; case 0
  4655  0118EA  A4D8               	btfss	status,2,c
  4656  0118EC  D7F6               	goto	l1340
  4657                           
  4658                           ; BSR set to: 2
  4659                           ; Switch size 1, requested type "simple"
  4660                           ; Number of cases is 5, Range of values is 0 to 5
  4661                           ; switch strategies available:
  4662                           ; Name         Instructions Cycles
  4663                           ; simple_byte           16     9 (average)
  4664                           ;	Chosen strategy is simple_byte
  4665  0118EE  5032               	movf	(btemp+10)^0,w,c
  4666  0118F0  0A00               	xorlw	0	; case 0
  4667  0118F2  B4D8               	btfsc	status,2,c
  4668  0118F4  D4E3               	goto	l12572
  4669  0118F6  0A01               	xorlw	1	; case 1
  4670  0118F8  B4D8               	btfsc	status,2,c
  4671  0118FA  D008               	goto	l12692
  4672  0118FC  0A02               	xorlw	2	; case 3
  4673  0118FE  B4D8               	btfsc	status,2,c
  4674  011900  D005               	goto	l12692
  4675  011902  0A07               	xorlw	7	; case 4
  4676  011904  B4D8               	btfsc	status,2,c
  4677  011906  D7E6               	goto	l1338
  4678  011908  0A01               	xorlw	1	; case 5
  4679  01190A  D7E7               	goto	l1340
  4680  01190C                     l12692:
  4681                           
  4682                           ;main.c: 305:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  4683  01190C  0E01               	movlw	1
  4684  01190E  6EE6               	movwf	postinc1,c
  4685  011910  EC8F  F0D8         	call	_TimerDone	;wreg free
  4686  011914  5028               	movf	btemp^0,w,c
  4687  011916  B4D8               	btfsc	status,2,c
  4688  011918  D013               	goto	l12704
  4689  01191A  EC6B  F0DB         	call	_check_adc_scan	;wreg free
  4690  01191E  5028               	movf	btemp^0,w,c
  4691  011920  B4D8               	btfsc	status,2,c
  4692  011922  D00E               	goto	l12704
  4693                           
  4694                           ;main.c: 309:    convert_adc_data();
  4695  011924  EC9B  F0CD         	call	_convert_adc_data	;wreg free
  4696                           
  4697                           ;main.c: 313:    clear_adc_scan();
  4698  011928  EC7B  F0DB         	call	_clear_adc_scan	;wreg free
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;main.c: 314:    start_adc_scan();
  4702  01192C  ECE6  F0D2         	call	_start_adc_scan	;wreg free
  4703                           
  4704                           ;main.c: 315:    StartTimer(TMR_ADC, 200);
  4705  011930  0EC8               	movlw	200
  4706  011932  6EE6               	movwf	postinc1,c
  4707  011934  0E00               	movlw	0
  4708  011936  6EE6               	movwf	postinc1,c
  4709  011938  0E01               	movlw	1
  4710  01193A  6EE6               	movwf	postinc1,c
  4711  01193C  EC0E  F0D6         	call	_StartTimer	;wreg free
  4712  011940                     l12704:
  4713                           
  4714                           ;main.c: 322:   if (TimerDone(TMR_DISPLAY)) {
  4715                           
  4716                           ;main.c: 318:   if (V.ticks) {
  4717  011940  0E0A               	movlw	10
  4718  011942  6EE6               	movwf	postinc1,c
  4719  011944  EC8F  F0D8         	call	_TimerDone	;wreg free
  4720  011948  5028               	movf	btemp^0,w,c
  4721  01194A  B4D8               	btfsc	status,2,c
  4722  01194C  EFAA  F090         	goto	l12754
  4723                           
  4724                           ;main.c: 323:    if (TimerDone(TMR_HELPDIS)) {
  4725  011950  0E09               	movlw	9
  4726  011952  6EE6               	movwf	postinc1,c
  4727  011954  EC8F  F0D8         	call	_TimerDone	;wreg free
  4728  011958  5028               	movf	btemp^0,w,c
  4729  01195A  B4D8               	btfsc	status,2,c
  4730  01195C  D004               	goto	l12712
  4731                           
  4732                           ;main.c: 324:     set_display_info(DIS_STR);
  4733  01195E  0E00               	movlw	0
  4734  011960  6EE6               	movwf	postinc1,c
  4735  011962  EC65  F0DA         	call	_set_display_info	;wreg free
  4736  011966                     l12712:
  4737                           
  4738                           ;main.c: 326:    calc_model_data();
  4739  011966  ECCB  F0AD         	call	_calc_model_data	;wreg free
  4740                           
  4741                           ; BSR set to: 1
  4742                           ;main.c: 333:     hid_display(&H);
  4743                           
  4744                           ;main.c: 328:    if (0) {
  4745  01196A  0EF3               	movlw	_H& (0+255)
  4746  01196C  6EE6               	movwf	postinc1,c
  4747  01196E  EC8B  F0CA         	call	_hid_display	;wreg free
  4748                           
  4749                           ;main.c: 334:     switch (H.hid_display) {
  4750  011972  D3A4               	goto	l12738
  4751  011974                     l1348:
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;main.c: 336:      V.calib = 0;
  4755  011974  0102               	movlb	2	; () banked
  4756  011976  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4757                           
  4758                           ; BSR set to: 2
  4759                           ;main.c: 337:      sprintf(get_vterm_ptr(0, 0), "PV   PWR %3.2f    ", C.p_pv);
  4760  011978  0060  F5E3  FFE6   	movff	_C+120,postinc1
  4761  01197E  0060  F5E7  FFE6   	movff	_C+121,postinc1
  4762  011984  0060  F5EB  FFE6   	movff	_C+122,postinc1
  4763  01198A  0060  F5EF  FFE6   	movff	_C+123,postinc1
  4764  011990  0E99               	movlw	low STR_22
  4765  011992  6EE6               	movwf	postinc1,c
  4766  011994  0EFE               	movlw	high STR_22
  4767  011996  6EE6               	movwf	postinc1,c
  4768  011998  0E00               	movlw	0
  4769  01199A  6EE6               	movwf	postinc1,c
  4770  01199C  0E00               	movlw	0
  4771  01199E  6EE6               	movwf	postinc1,c
  4772  0119A0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4773  0119A4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4774  0119AA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4775  0119B0  0E08               	movlw	8
  4776  0119B2  6EE6               	movwf	postinc1,c
  4777  0119B4  EC06  F0CA         	call	_sprintf	;wreg free
  4778                           
  4779                           ;main.c: 338:      sprintf(get_vterm_ptr(1, 0), "LOAD PWR %3.2f    ", C.p_load);
  4780  0119B8  0060  F5C3  FFE6   	movff	_C+112,postinc1
  4781  0119BE  0060  F5C7  FFE6   	movff	_C+113,postinc1
  4782  0119C4  0060  F5CB  FFE6   	movff	_C+114,postinc1
  4783  0119CA  0060  F5CF  FFE6   	movff	_C+115,postinc1
  4784  0119D0  0EBF               	movlw	low STR_23
  4785  0119D2  6EE6               	movwf	postinc1,c
  4786  0119D4  0EFE               	movlw	high STR_23
  4787  0119D6  6EE6               	movwf	postinc1,c
  4788  0119D8  0E00               	movlw	0
  4789  0119DA  6EE6               	movwf	postinc1,c
  4790  0119DC  0E01               	movlw	1
  4791  0119DE  6EE6               	movwf	postinc1,c
  4792  0119E0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4793  0119E4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4794  0119EA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4795  0119F0  0E08               	movlw	8
  4796  0119F2  6EE6               	movwf	postinc1,c
  4797  0119F4  EC06  F0CA         	call	_sprintf	;wreg free
  4798                           
  4799                           ;main.c: 339:      sprintf(get_vterm_ptr(2, 0), "INV  PWR %3.2f    ", C.p_inverter);
  4800  0119F8  0060  F5D3  FFE6   	movff	_C+116,postinc1
  4801  0119FE  0060  F5D7  FFE6   	movff	_C+117,postinc1
  4802  011A04  0060  F5DB  FFE6   	movff	_C+118,postinc1
  4803  011A0A  0060  F5DF  FFE6   	movff	_C+119,postinc1
  4804  011A10  0EAC               	movlw	low STR_24
  4805  011A12  6EE6               	movwf	postinc1,c
  4806  011A14  0EFE               	movlw	high STR_24
  4807  011A16  6EE6               	movwf	postinc1,c
  4808  011A18  0E00               	movlw	0
  4809  011A1A  6EE6               	movwf	postinc1,c
  4810  011A1C  0E02               	movlw	2
  4811  011A1E  6EE6               	movwf	postinc1,c
  4812  011A20  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4813  011A24  0060  F0A3  FFE6   	movff	btemp,postinc1
  4814  011A2A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4815  011A30  0E08               	movlw	8
  4816  011A32  6EE6               	movwf	postinc1,c
  4817  011A34  EC06  F0CA         	call	_sprintf	;wreg free
  4818                           
  4819                           ;main.c: 341:      sprintf(get_vterm_ptr(0, 1), "PV   WH %3.2f     ", C.pvkw);
  4820  011A38  0060  F683  FFE6   	movff	_C+160,postinc1
  4821  011A3E  0060  F687  FFE6   	movff	_C+161,postinc1
  4822  011A44  0060  F68B  FFE6   	movff	_C+162,postinc1
  4823  011A4A  0060  F68F  FFE6   	movff	_C+163,postinc1
  4824  011A50  0E60               	movlw	low STR_25
  4825  011A52  6EE6               	movwf	postinc1,c
  4826  011A54  0EFE               	movlw	high STR_25
  4827  011A56  6EE6               	movwf	postinc1,c
  4828  011A58  0E01               	movlw	1
  4829  011A5A  6EE6               	movwf	postinc1,c
  4830  011A5C  0E00               	movlw	0
  4831  011A5E  6EE6               	movwf	postinc1,c
  4832  011A60  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4833  011A64  0060  F0A3  FFE6   	movff	btemp,postinc1
  4834  011A6A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4835  011A70  0E08               	movlw	8
  4836  011A72  6EE6               	movwf	postinc1,c
  4837  011A74  EC06  F0CA         	call	_sprintf	;wreg free
  4838                           
  4839                           ;main.c: 342:      sprintf(get_vterm_ptr(1, 1), "LOAD WH %3.2f     ", C.loadkw);
  4840  011A78  0060  F6A3  FFE6   	movff	_C+168,postinc1
  4841  011A7E  0060  F6A7  FFE6   	movff	_C+169,postinc1
  4842  011A84  0060  F6AB  FFE6   	movff	_C+170,postinc1
  4843  011A8A  0060  F6AF  FFE6   	movff	_C+171,postinc1
  4844  011A90  0E86               	movlw	low STR_26
  4845  011A92  6EE6               	movwf	postinc1,c
  4846  011A94  0EFE               	movlw	high STR_26
  4847  011A96  6EE6               	movwf	postinc1,c
  4848  011A98  0E01               	movlw	1
  4849  011A9A  6EE6               	movwf	postinc1,c
  4850  011A9C  0E01               	movlw	1
  4851  011A9E  6EE6               	movwf	postinc1,c
  4852  011AA0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4853  011AA4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4854  011AAA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4855  011AB0  0E08               	movlw	8
  4856  011AB2  6EE6               	movwf	postinc1,c
  4857  011AB4  EC06  F0CA         	call	_sprintf	;wreg free
  4858                           
  4859                           ;main.c: 343:      sprintf(get_vterm_ptr(2, 1), "INV  WH %3.2f     ", C.invkw);
  4860  011AB8  0060  F693  FFE6   	movff	_C+164,postinc1
  4861  011ABE  0060  F697  FFE6   	movff	_C+165,postinc1
  4862  011AC4  0060  F69B  FFE6   	movff	_C+166,postinc1
  4863  011ACA  0060  F69F  FFE6   	movff	_C+167,postinc1
  4864  011AD0  0E73               	movlw	low STR_27
  4865  011AD2  6EE6               	movwf	postinc1,c
  4866  011AD4  0EFE               	movlw	high STR_27
  4867  011AD6  6EE6               	movwf	postinc1,c
  4868  011AD8  0E01               	movlw	1
  4869  011ADA  6EE6               	movwf	postinc1,c
  4870  011ADC  0E02               	movlw	2
  4871  011ADE  6EE6               	movwf	postinc1,c
  4872  011AE0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4873  011AE4  0060  F0A3  FFE6   	movff	btemp,postinc1
  4874  011AEA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4875  011AF0  0E08               	movlw	8
  4876  011AF2  6EE6               	movwf	postinc1,c
  4877  011AF4  EC06  F0CA         	call	_sprintf	;wreg free
  4878                           
  4879                           ;main.c: 344:      break;
  4880  011AF8  D2F6               	goto	l12740
  4881  011AFA                     l1350:
  4882                           
  4883                           ; BSR set to: 0
  4884                           ;main.c: 346:      V.calib = 0;
  4885  011AFA  0102               	movlb	2	; () banked
  4886  011AFC  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  4887                           
  4888                           ; BSR set to: 2
  4889                           ;main.c: 347:      sprintf(get_vterm_ptr(0, 0), "PV %2.2f PA %2.2f ", C.calc[V_PV], C.ca
      +                          lc[C_PV]);
  4890  011AFE  0060  F413  FFE6   	movff	_C+4,postinc1
  4891  011B04  0060  F417  FFE6   	movff	_C+5,postinc1
  4892  011B0A  0060  F41B  FFE6   	movff	_C+6,postinc1
  4893  011B10  0060  F41F  FFE6   	movff	_C+7,postinc1
  4894  011B16  0060  F453  FFE6   	movff	_C+20,postinc1
  4895  011B1C  0060  F457  FFE6   	movff	_C+21,postinc1
  4896  011B22  0060  F45B  FFE6   	movff	_C+22,postinc1
  4897  011B28  0060  F45F  FFE6   	movff	_C+23,postinc1
  4898  011B2E  0EF8               	movlw	low STR_28
  4899  011B30  6EE6               	movwf	postinc1,c
  4900  011B32  0EFE               	movlw	high STR_28
  4901  011B34  6EE6               	movwf	postinc1,c
  4902  011B36  0E00               	movlw	0
  4903  011B38  6EE6               	movwf	postinc1,c
  4904  011B3A  0E00               	movlw	0
  4905  011B3C  6EE6               	movwf	postinc1,c
  4906  011B3E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4907  011B42  0060  F0A3  FFE6   	movff	btemp,postinc1
  4908  011B48  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4909  011B4E  0E0C               	movlw	12
  4910  011B50  6EE6               	movwf	postinc1,c
  4911  011B52  EC06  F0CA         	call	_sprintf	;wreg free
  4912                           
  4913                           ;main.c: 348:      sprintf(get_vterm_ptr(1, 0), "BV %2.2f BA %2.2f ", C.calc[V_BAT], C.c
      +                          alc[C_BATT]);
  4914  011B56  0060  F403  FFE6   	movff	_C,postinc1
  4915  011B5C  0060  F407  FFE6   	movff	_C+1,postinc1
  4916  011B62  0060  F40B  FFE6   	movff	_C+2,postinc1
  4917  011B68  0060  F40F  FFE6   	movff	_C+3,postinc1
  4918  011B6E  0060  F443  FFE6   	movff	_C+16,postinc1
  4919  011B74  0060  F447  FFE6   	movff	_C+17,postinc1
  4920  011B7A  0060  F44B  FFE6   	movff	_C+18,postinc1
  4921  011B80  0060  F44F  FFE6   	movff	_C+19,postinc1
  4922  011B86  0ED2               	movlw	low STR_29
  4923  011B88  6EE6               	movwf	postinc1,c
  4924  011B8A  0EFE               	movlw	high STR_29
  4925  011B8C  6EE6               	movwf	postinc1,c
  4926  011B8E  0E00               	movlw	0
  4927  011B90  6EE6               	movwf	postinc1,c
  4928  011B92  0E01               	movlw	1
  4929  011B94  6EE6               	movwf	postinc1,c
  4930  011B96  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4931  011B9A  0060  F0A3  FFE6   	movff	btemp,postinc1
  4932  011BA0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4933  011BA6  0E0C               	movlw	12
  4934  011BA8  6EE6               	movwf	postinc1,c
  4935  011BAA  EC06  F0CA         	call	_sprintf	;wreg free
  4936                           
  4937                           ;main.c: 349:      sprintf(get_vterm_ptr(2, 0), "CV %2.2f LA %2.2f ", C.calc[V_CC], C.c_
      +                          load);
  4938  011BAE  0060  F503  FFE6   	movff	_C+64,postinc1
  4939  011BB4  0060  F507  FFE6   	movff	_C+65,postinc1
  4940  011BBA  0060  F50B  FFE6   	movff	_C+66,postinc1
  4941  011BC0  0060  F50F  FFE6   	movff	_C+67,postinc1
  4942  011BC6  0060  F423  FFE6   	movff	_C+8,postinc1
  4943  011BCC  0060  F427  FFE6   	movff	_C+9,postinc1
  4944  011BD2  0060  F42B  FFE6   	movff	_C+10,postinc1
  4945  011BD8  0060  F42F  FFE6   	movff	_C+11,postinc1
  4946  011BDE  0EE5               	movlw	low STR_30
  4947  011BE0  6EE6               	movwf	postinc1,c
  4948  011BE2  0EFE               	movlw	high STR_30
  4949  011BE4  6EE6               	movwf	postinc1,c
  4950  011BE6  0E00               	movlw	0
  4951  011BE8  6EE6               	movwf	postinc1,c
  4952  011BEA  0E02               	movlw	2
  4953  011BEC  6EE6               	movwf	postinc1,c
  4954  011BEE  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4955  011BF2  0060  F0A3  FFE6   	movff	btemp,postinc1
  4956  011BF8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4957  011BFE  0E0C               	movlw	12
  4958  011C00  6EE6               	movwf	postinc1,c
  4959  011C02  EC06  F0CA         	call	_sprintf	;wreg free
  4960                           
  4961                           ;main.c: 351:      sprintf(get_vterm_ptr(0, 1), "BAT IWH %4.1f     ", C.bkwi);
  4962  011C06  0060  F663  FFE6   	movff	_C+152,postinc1
  4963  011C0C  0060  F667  FFE6   	movff	_C+153,postinc1
  4964  011C12  0060  F66B  FFE6   	movff	_C+154,postinc1
  4965  011C18  0060  F66F  FFE6   	movff	_C+155,postinc1
  4966  011C1E  0E27               	movlw	low STR_31
  4967  011C20  6EE6               	movwf	postinc1,c
  4968  011C22  0EFE               	movlw	high STR_31
  4969  011C24  6EE6               	movwf	postinc1,c
  4970  011C26  0E01               	movlw	1
  4971  011C28  6EE6               	movwf	postinc1,c
  4972  011C2A  0E00               	movlw	0
  4973  011C2C  6EE6               	movwf	postinc1,c
  4974  011C2E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4975  011C32  0060  F0A3  FFE6   	movff	btemp,postinc1
  4976  011C38  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4977  011C3E  0E08               	movlw	8
  4978  011C40  6EE6               	movwf	postinc1,c
  4979  011C42  EC06  F0CA         	call	_sprintf	;wreg free
  4980                           
  4981                           ;main.c: 352:      sprintf(get_vterm_ptr(1, 1), "BAT OWH %4.1f     ", C.bkwo);
  4982  011C46  0060  F673  FFE6   	movff	_C+156,postinc1
  4983  011C4C  0060  F677  FFE6   	movff	_C+157,postinc1
  4984  011C52  0060  F67B  FFE6   	movff	_C+158,postinc1
  4985  011C58  0060  F67F  FFE6   	movff	_C+159,postinc1
  4986  011C5E  0E3A               	movlw	low STR_32
  4987  011C60  6EE6               	movwf	postinc1,c
  4988  011C62  0EFE               	movlw	high STR_32
  4989  011C64  6EE6               	movwf	postinc1,c
  4990  011C66  0E01               	movlw	1
  4991  011C68  6EE6               	movwf	postinc1,c
  4992  011C6A  0E01               	movlw	1
  4993  011C6C  6EE6               	movwf	postinc1,c
  4994  011C6E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  4995  011C72  0060  F0A3  FFE6   	movff	btemp,postinc1
  4996  011C78  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  4997  011C7E  0E08               	movlw	8
  4998  011C80  6EE6               	movwf	postinc1,c
  4999  011C82  EC06  F0CA         	call	_sprintf	;wreg free
  5000                           
  5001                           ;main.c: 353:      sprintf(get_vterm_ptr(2, 1), "BAT TWH %4.1f     ", C.bkwi + C.bkwo);
  5002  011C86  0060  F673  FFE6   	movff	_C+156,postinc1
  5003  011C8C  0060  F677  FFE6   	movff	_C+157,postinc1
  5004  011C92  0060  F67B  FFE6   	movff	_C+158,postinc1
  5005  011C98  0060  F67F  FFE6   	movff	_C+159,postinc1
  5006  011C9E  0060  F663  FFE6   	movff	_C+152,postinc1
  5007  011CA4  0060  F667  FFE6   	movff	_C+153,postinc1
  5008  011CAA  0060  F66B  FFE6   	movff	_C+154,postinc1
  5009  011CB0  0060  F66F  FFE6   	movff	_C+155,postinc1
  5010  011CB6  EC24  F09D         	call	___fladd	;wreg free
  5011  011CBA  0060  F0A3  FFE6   	movff	btemp,postinc1
  5012  011CC0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5013  011CC6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  5014  011CCC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  5015  011CD2  0E4D               	movlw	low STR_33
  5016  011CD4  6EE6               	movwf	postinc1,c
  5017  011CD6  0EFE               	movlw	high STR_33
  5018  011CD8  6EE6               	movwf	postinc1,c
  5019  011CDA  0E01               	movlw	1
  5020  011CDC  6EE6               	movwf	postinc1,c
  5021  011CDE  0E02               	movlw	2
  5022  011CE0  6EE6               	movwf	postinc1,c
  5023  011CE2  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5024  011CE6  0060  F0A3  FFE6   	movff	btemp,postinc1
  5025  011CEC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5026  011CF2  0E08               	movlw	8
  5027  011CF4  6EE6               	movwf	postinc1,c
  5028  011CF6  EC06  F0CA         	call	_sprintf	;wreg free
  5029                           
  5030                           ;main.c: 354:      break;
  5031  011CFA  D1F5               	goto	l12740
  5032  011CFC                     l1351:
  5033                           
  5034                           ; BSR set to: 0
  5035                           ;main.c: 356:      V.calib = 0;
  5036  011CFC  0102               	movlb	2	; () banked
  5037  011CFE  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5038                           
  5039                           ; BSR set to: 2
  5040                           ;main.c: 357:      sprintf(get_vterm_ptr(0, 0), "BATT PWR %3.2f     ", C.p_bat);
  5041  011D00  0060  F5F3  FFE6   	movff	_C+124,postinc1
  5042  011D06  0060  F5F7  FFE6   	movff	_C+125,postinc1
  5043  011D0C  0060  F5FB  FFE6   	movff	_C+126,postinc1
  5044  011D12  0060  F5FF  FFE6   	movff	_C+127,postinc1
  5045  011D18  0E9E               	movlw	low STR_34
  5046  011D1A  6EE6               	movwf	postinc1,c
  5047  011D1C  0EFD               	movlw	high STR_34
  5048  011D1E  6EE6               	movwf	postinc1,c
  5049  011D20  0E00               	movlw	0
  5050  011D22  6EE6               	movwf	postinc1,c
  5051  011D24  0E00               	movlw	0
  5052  011D26  6EE6               	movwf	postinc1,c
  5053  011D28  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5054  011D2C  0060  F0A3  FFE6   	movff	btemp,postinc1
  5055  011D32  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5056  011D38  0E08               	movlw	8
  5057  011D3A  6EE6               	movwf	postinc1,c
  5058  011D3C  EC06  F0CA         	call	_sprintf	;wreg free
  5059                           
  5060                           ;main.c: 358:      sprintf(get_vterm_ptr(1, 0), "BAH %3.2f P%3.2f   ", C.dynamic_ah, C.p
      +                          v_ah);
  5061  011D40  0060  F643  FFE6   	movff	_C+144,postinc1
  5062  011D46  0060  F647  FFE6   	movff	_C+145,postinc1
  5063  011D4C  0060  F64B  FFE6   	movff	_C+146,postinc1
  5064  011D52  0060  F64F  FFE6   	movff	_C+147,postinc1
  5065  011D58  0060  F633  FFE6   	movff	_C+140,postinc1
  5066  011D5E  0060  F637  FFE6   	movff	_C+141,postinc1
  5067  011D64  0060  F63B  FFE6   	movff	_C+142,postinc1
  5068  011D6A  0060  F63F  FFE6   	movff	_C+143,postinc1
  5069  011D70  0EDA               	movlw	low STR_35
  5070  011D72  6EE6               	movwf	postinc1,c
  5071  011D74  0EFD               	movlw	high STR_35
  5072  011D76  6EE6               	movwf	postinc1,c
  5073  011D78  0E00               	movlw	0
  5074  011D7A  6EE6               	movwf	postinc1,c
  5075  011D7C  0E01               	movlw	1
  5076  011D7E  6EE6               	movwf	postinc1,c
  5077  011D80  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5078  011D84  0060  F0A3  FFE6   	movff	btemp,postinc1
  5079  011D8A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5080  011D90  0E0C               	movlw	12
  5081  011D92  6EE6               	movwf	postinc1,c
  5082  011D94  EC06  F0CA         	call	_sprintf	;wreg free
  5083                           
  5084                           ;main.c: 359:      sprintf(get_vterm_ptr(2, 0), "S%cC %d RUN %d     ", spinners(5, 0), C
      +                          .soc, C.runtime);
  5085  011D98  0060  F6B3  FFE6   	movff	_C+172,postinc1
  5086  011D9E  0060  F6B7  FFE6   	movff	_C+173,postinc1
  5087  011DA4  0060  F6BB  FFE6   	movff	_C+174,postinc1
  5088  011DAA  0060  F6BF  FFE6   	movff	_C+175,postinc1
  5089  011DB0  0E00               	movlw	0
  5090  011DB2  6EE6               	movwf	postinc1,c
  5091  011DB4  0E05               	movlw	5
  5092  011DB6  6EE6               	movwf	postinc1,c
  5093  011DB8  ECFD  F0CB         	call	_spinners	;wreg free
  5094  011DBC  5028               	movf	btemp^0,w,c
  5095  011DBE  6EE6               	movwf	postinc1,c
  5096  011DC0  0E00               	movlw	0
  5097  011DC2  6EE6               	movwf	postinc1,c
  5098  011DC4  0E8A               	movlw	low STR_36
  5099  011DC6  6EE6               	movwf	postinc1,c
  5100  011DC8  0EFD               	movlw	high STR_36
  5101  011DCA  6EE6               	movwf	postinc1,c
  5102  011DCC  0E00               	movlw	0
  5103  011DCE  6EE6               	movwf	postinc1,c
  5104  011DD0  0E02               	movlw	2
  5105  011DD2  6EE6               	movwf	postinc1,c
  5106  011DD4  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5107  011DD8  0060  F0A3  FFE6   	movff	btemp,postinc1
  5108  011DDE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5109  011DE4  0E0A               	movlw	10
  5110  011DE6  6EE6               	movwf	postinc1,c
  5111  011DE8  EC06  F0CA         	call	_sprintf	;wreg free
  5112                           
  5113                           ;main.c: 361:      sprintf(get_vterm_ptr(0, 1), "ESR  %2.6f         ", C.esr);
  5114  011DEC  0060  F613  FFE6   	movff	_C+132,postinc1
  5115  011DF2  0060  F617  FFE6   	movff	_C+133,postinc1
  5116  011DF8  0060  F61B  FFE6   	movff	_C+134,postinc1
  5117  011DFE  0060  F61F  FFE6   	movff	_C+135,postinc1
  5118  011E04  0E76               	movlw	low STR_37
  5119  011E06  6EE6               	movwf	postinc1,c
  5120  011E08  0EFD               	movlw	high STR_37
  5121  011E0A  6EE6               	movwf	postinc1,c
  5122  011E0C  0E01               	movlw	1
  5123  011E0E  6EE6               	movwf	postinc1,c
  5124  011E10  0E00               	movlw	0
  5125  011E12  6EE6               	movwf	postinc1,c
  5126  011E14  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5127  011E18  0060  F0A3  FFE6   	movff	btemp,postinc1
  5128  011E1E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5129  011E24  0E08               	movlw	8
  5130  011E26  6EE6               	movwf	postinc1,c
  5131  011E28  EC06  F0CA         	call	_sprintf	;wreg free
  5132                           
  5133                           ;main.c: 362:      sprintf(get_vterm_ptr(1, 1), "R1 %2.3f %3.4f     ", C.bv_one_load, C.
      +                          load_i1);
  5134  011E2C  0060  F78F  FFE6   	movff	_C+227,postinc1
  5135  011E32  0060  F793  FFE6   	movff	_C+228,postinc1
  5136  011E38  0060  F797  FFE6   	movff	_C+229,postinc1
  5137  011E3E  0060  F79B  FFE6   	movff	_C+230,postinc1
  5138  011E44  0060  F7BF  FFE6   	movff	_C+239,postinc1
  5139  011E4A  0060  F7C3  FFE6   	movff	_C+240,postinc1
  5140  011E50  0060  F7C7  FFE6   	movff	_C+241,postinc1
  5141  011E56  0060  F7CB  FFE6   	movff	_C+242,postinc1
  5142  011E5C  0EB2               	movlw	low STR_38
  5143  011E5E  6EE6               	movwf	postinc1,c
  5144  011E60  0EFD               	movlw	high STR_38
  5145  011E62  6EE6               	movwf	postinc1,c
  5146  011E64  0E01               	movlw	1
  5147  011E66  6EE6               	movwf	postinc1,c
  5148  011E68  0E01               	movlw	1
  5149  011E6A  6EE6               	movwf	postinc1,c
  5150  011E6C  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5151  011E70  0060  F0A3  FFE6   	movff	btemp,postinc1
  5152  011E76  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5153  011E7C  0E0C               	movlw	12
  5154  011E7E  6EE6               	movwf	postinc1,c
  5155  011E80  EC06  F0CA         	call	_sprintf	;wreg free
  5156                           
  5157                           ;main.c: 363:      sprintf(get_vterm_ptr(2, 1), "R2 %2.3f %3.4f     ", C.bv_full_load, C
      +                          .load_i2);
  5158  011E84  0060  F79F  FFE6   	movff	_C+231,postinc1
  5159  011E8A  0060  F7A3  FFE6   	movff	_C+232,postinc1
  5160  011E90  0060  F7A7  FFE6   	movff	_C+233,postinc1
  5161  011E96  0060  F7AB  FFE6   	movff	_C+234,postinc1
  5162  011E9C  0060  F7CF  FFE6   	movff	_C+243,postinc1
  5163  011EA2  0060  F7D3  FFE6   	movff	_C+244,postinc1
  5164  011EA8  0060  F7D7  FFE6   	movff	_C+245,postinc1
  5165  011EAE  0060  F7DB  FFE6   	movff	_C+246,postinc1
  5166  011EB4  0EC6               	movlw	low STR_39
  5167  011EB6  6EE6               	movwf	postinc1,c
  5168  011EB8  0EFD               	movlw	high STR_39
  5169  011EBA  6EE6               	movwf	postinc1,c
  5170  011EBC  0E01               	movlw	1
  5171  011EBE  6EE6               	movwf	postinc1,c
  5172  011EC0  0E02               	movlw	2
  5173  011EC2  6EE6               	movwf	postinc1,c
  5174  011EC4  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5175  011EC8  0060  F0A3  FFE6   	movff	btemp,postinc1
  5176  011ECE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5177  011ED4  0E0C               	movlw	12
  5178  011ED6  6EE6               	movwf	postinc1,c
  5179  011ED8  EC06  F0CA         	call	_sprintf	;wreg free
  5180                           
  5181                           ;main.c: 364:      break;
  5182  011EDC  D104               	goto	l12740
  5183  011EDE                     l12724:
  5184                           
  5185                           ; BSR set to: 0
  5186                           ;main.c: 366:      if (!V.calib) {
  5187  011EDE  0102               	movlb	2	; () banked
  5188  011EE0  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  5189  011EE2  A4D8               	btfss	status,2,c
  5190  011EE4  D02D               	goto	l12728
  5191                           
  5192                           ; BSR set to: 2
  5193                           ;main.c: 367:       lp_filter(0.0, i, -1);
  5194  011EE6  0EFF               	movlw	255
  5195  011EE8  6EE6               	movwf	postinc1,c
  5196                           
  5197                           ;stkvar	_i @ sp[(-14)+9]
  5198  011EEA  0EFB               	movlw	-5
  5199  011EEC  50E3               	movf	plusw1,w,c
  5200  011EEE  6EE6               	movwf	postinc1,c
  5201  011EF0  0E00               	movlw	0
  5202  011EF2  6EE6               	movwf	postinc1,c
  5203  011EF4  0E00               	movlw	0
  5204  011EF6  6EE6               	movwf	postinc1,c
  5205  011EF8  0E00               	movlw	0
  5206  011EFA  6EE6               	movwf	postinc1,c
  5207  011EFC  0E00               	movlw	0
  5208  011EFE  6EE6               	movwf	postinc1,c
  5209  011F00  ECDC  F0BE         	call	_lp_filter	;wreg free
  5210                           
  5211                           ;main.c: 368:       lp_filter(0.0, j, -1);
  5212  011F04  0EFF               	movlw	255
  5213  011F06  6EE6               	movwf	postinc1,c
  5214                           
  5215                           ;stkvar	_j @ sp[(-14)+8]
  5216  011F08  0EFA               	movlw	-6
  5217  011F0A  50E3               	movf	plusw1,w,c
  5218  011F0C  6EE6               	movwf	postinc1,c
  5219  011F0E  0E00               	movlw	0
  5220  011F10  6EE6               	movwf	postinc1,c
  5221  011F12  0E00               	movlw	0
  5222  011F14  6EE6               	movwf	postinc1,c
  5223  011F16  0E00               	movlw	0
  5224  011F18  6EE6               	movwf	postinc1,c
  5225  011F1A  0E00               	movlw	0
  5226  011F1C  6EE6               	movwf	postinc1,c
  5227  011F1E  ECDC  F0BE         	call	_lp_filter	;wreg free
  5228                           
  5229                           ;main.c: 369:       lp_filter(0.0, k, -1);
  5230  011F22  0EFF               	movlw	255
  5231  011F24  6EE6               	movwf	postinc1,c
  5232                           
  5233                           ;stkvar	_k @ sp[(-14)+7]
  5234  011F26  0EF9               	movlw	-7
  5235  011F28  50E3               	movf	plusw1,w,c
  5236  011F2A  6EE6               	movwf	postinc1,c
  5237  011F2C  0E00               	movlw	0
  5238  011F2E  6EE6               	movwf	postinc1,c
  5239  011F30  0E00               	movlw	0
  5240  011F32  6EE6               	movwf	postinc1,c
  5241  011F34  0E00               	movlw	0
  5242  011F36  6EE6               	movwf	postinc1,c
  5243  011F38  0E00               	movlw	0
  5244  011F3A  6EE6               	movwf	postinc1,c
  5245  011F3C  ECDC  F0BE         	call	_lp_filter	;wreg free
  5246  011F40                     l12728:
  5247                           
  5248                           ;main.c: 371:      V.calib = 1;
  5249  011F40  0E01               	movlw	1
  5250  011F42  0102               	movlb	2	; () banked
  5251  011F44  6FAC               	movwf	(_V+172)& (0+255),b	;volatile
  5252                           
  5253                           ; BSR set to: 2
  5254                           ;main.c: 372:      sprintf(get_vterm_ptr(0, 0), "%d %2.4f   %d  ", get_raw_result(i), C.
      +                          calc[i], get_switch(SSELECT));
  5255  011F46  0E02               	movlw	2
  5256  011F48  6EE6               	movwf	postinc1,c
  5257  011F4A  ECFC  F0D7         	call	_get_switch	;wreg free
  5258  011F4E  5028               	movf	btemp^0,w,c
  5259  011F50  6EE6               	movwf	postinc1,c
  5260  011F52  0E00               	movlw	0
  5261  011F54  6EE6               	movwf	postinc1,c
  5262                           
  5263                           ;stkvar	_i @ sp[(-15)+9]
  5264  011F56  0EFA               	movlw	-6
  5265  011F58  50E3               	movf	plusw1,w,c
  5266  011F5A  0D04               	mullw	4
  5267  011F5C  0E00               	movlw	low _C
  5268  011F5E  24F3               	addwf	243,w,c
  5269  011F60  6ED9               	movwf	fsr2l,c
  5270  011F62  0E01               	movlw	high _C
  5271  011F64  20F4               	addwfc	prodh,w,c
  5272  011F66  6EDA               	movwf	fsr2h,c
  5273  011F68  006F FF7B FFE6     	movff	postinc2,postinc1
  5274  011F6E  006F FF7B FFE6     	movff	postinc2,postinc1
  5275  011F74  006F FF7B FFE6     	movff	postinc2,postinc1
  5276  011F7A  006F FF7B FFE6     	movff	postinc2,postinc1
  5277                           
  5278                           ;stkvar	_i @ sp[(-19)+9]
  5279  011F80  0EF6               	movlw	-10
  5280  011F82  50E3               	movf	plusw1,w,c
  5281  011F84  6EE6               	movwf	postinc1,c
  5282  011F86  EC74  F0DA         	call	_get_raw_result	;wreg free
  5283  011F8A  0060  F0A3  FFE6   	movff	btemp,postinc1
  5284  011F90  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5285  011F96  0E83               	movlw	low STR_19
  5286  011F98  6EE6               	movwf	postinc1,c
  5287  011F9A  0EFF               	movlw	high STR_19
  5288  011F9C  6EE6               	movwf	postinc1,c
  5289  011F9E  0E00               	movlw	0
  5290  011FA0  6EE6               	movwf	postinc1,c
  5291  011FA2  0E00               	movlw	0
  5292  011FA4  6EE6               	movwf	postinc1,c
  5293  011FA6  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5294  011FAA  0060  F0A3  FFE6   	movff	btemp,postinc1
  5295  011FB0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5296  011FB6  0E0C               	movlw	12
  5297  011FB8  6EE6               	movwf	postinc1,c
  5298  011FBA  EC06  F0CA         	call	_sprintf	;wreg free
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;main.c: 373:      sprintf(get_vterm_ptr(1, 0), "%d %2.4f   %d  ", get_raw_result(j), C.
      +                          calc[j], get_switch(SENTER));
  5302  011FBE  0E03               	movlw	3
  5303  011FC0  6EE6               	movwf	postinc1,c
  5304  011FC2  ECFC  F0D7         	call	_get_switch	;wreg free
  5305  011FC6  5028               	movf	btemp^0,w,c
  5306  011FC8  6EE6               	movwf	postinc1,c
  5307  011FCA  0E00               	movlw	0
  5308  011FCC  6EE6               	movwf	postinc1,c
  5309                           
  5310                           ;stkvar	_j @ sp[(-15)+8]
  5311  011FCE  0EF9               	movlw	-7
  5312  011FD0  50E3               	movf	plusw1,w,c
  5313  011FD2  0D04               	mullw	4
  5314  011FD4  0E00               	movlw	low _C
  5315  011FD6  24F3               	addwf	243,w,c
  5316  011FD8  6ED9               	movwf	fsr2l,c
  5317  011FDA  0E01               	movlw	high _C
  5318  011FDC  20F4               	addwfc	prodh,w,c
  5319  011FDE  6EDA               	movwf	fsr2h,c
  5320  011FE0  006F FF7B FFE6     	movff	postinc2,postinc1
  5321  011FE6  006F FF7B FFE6     	movff	postinc2,postinc1
  5322  011FEC  006F FF7B FFE6     	movff	postinc2,postinc1
  5323  011FF2  006F FF7B FFE6     	movff	postinc2,postinc1
  5324                           
  5325                           ;stkvar	_j @ sp[(-19)+8]
  5326  011FF8  0EF5               	movlw	-11
  5327  011FFA  50E3               	movf	plusw1,w,c
  5328  011FFC  6EE6               	movwf	postinc1,c
  5329  011FFE  EC74  F0DA         	call	_get_raw_result	;wreg free
  5330  012002  0060  F0A3  FFE6   	movff	btemp,postinc1
  5331  012008  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5332  01200E  0E83               	movlw	low STR_19
  5333  012010  6EE6               	movwf	postinc1,c
  5334  012012  0EFF               	movlw	high STR_19
  5335  012014  6EE6               	movwf	postinc1,c
  5336  012016  0E00               	movlw	0
  5337  012018  6EE6               	movwf	postinc1,c
  5338  01201A  0E01               	movlw	1
  5339  01201C  6EE6               	movwf	postinc1,c
  5340  01201E  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5341  012022  0060  F0A3  FFE6   	movff	btemp,postinc1
  5342  012028  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5343  01202E  0E0C               	movlw	12
  5344  012030  6EE6               	movwf	postinc1,c
  5345  012032  EC06  F0CA         	call	_sprintf	;wreg free
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;main.c: 374:      sprintf(get_vterm_ptr(2, 0), "%d %2.4f, %d   #", get_raw_result(k), C
      +                          .calc[k], inp_index + 1);
  5349                           ;stkvar	_inp_index @ sp[(-13)+10]
  5350  012036  0EFD               	movlw	-3
  5351  012038  50E3               	movf	plusw1,w,c
  5352  01203A  6E32               	movwf	(btemp+10)^0,c
  5353  01203C  6A33               	clrf	(btemp+11)^0,c
  5354  01203E  0E01               	movlw	1
  5355  012040  2632               	addwf	(btemp+10)^0,f,c
  5356  012042  0E00               	movlw	0
  5357  012044  2233               	addwfc	(btemp+11)^0,f,c
  5358  012046  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  5359  01204C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  5360                           
  5361                           ;stkvar	_k @ sp[(-15)+7]
  5362  012052  0EF8               	movlw	-8
  5363  012054  50E3               	movf	plusw1,w,c
  5364  012056  0D04               	mullw	4
  5365  012058  0E00               	movlw	low _C
  5366  01205A  24F3               	addwf	243,w,c
  5367  01205C  6ED9               	movwf	fsr2l,c
  5368  01205E  0E01               	movlw	high _C
  5369  012060  20F4               	addwfc	prodh,w,c
  5370  012062  6EDA               	movwf	fsr2h,c
  5371  012064  006F FF7B FFE6     	movff	postinc2,postinc1
  5372  01206A  006F FF7B FFE6     	movff	postinc2,postinc1
  5373  012070  006F FF7B FFE6     	movff	postinc2,postinc1
  5374  012076  006F FF7B FFE6     	movff	postinc2,postinc1
  5375                           
  5376                           ;stkvar	_k @ sp[(-19)+7]
  5377  01207C  0EF4               	movlw	-12
  5378  01207E  50E3               	movf	plusw1,w,c
  5379  012080  6EE6               	movwf	postinc1,c
  5380  012082  EC74  F0DA         	call	_get_raw_result	;wreg free
  5381  012086  0060  F0A3  FFE6   	movff	btemp,postinc1
  5382  01208C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5383  012092  0E61               	movlw	low STR_21
  5384  012094  6EE6               	movwf	postinc1,c
  5385  012096  0EFF               	movlw	high STR_21
  5386  012098  6EE6               	movwf	postinc1,c
  5387  01209A  0E00               	movlw	0
  5388  01209C  6EE6               	movwf	postinc1,c
  5389  01209E  0E02               	movlw	2
  5390  0120A0  6EE6               	movwf	postinc1,c
  5391  0120A2  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  5392  0120A6  0060  F0A3  FFE6   	movff	btemp,postinc1
  5393  0120AC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  5394  0120B2  0E0C               	movlw	12
  5395  0120B4  6EE6               	movwf	postinc1,c
  5396  0120B6  EC06  F0CA         	call	_sprintf	;wreg free
  5397                           
  5398                           ;main.c: 375:      break;
  5399  0120BA  D015               	goto	l12740
  5400  0120BC                     l12738:
  5401  0120BC  0100               	movlb	0	; () banked
  5402  0120BE  51F3               	movf	_H& (0+255),w,b
  5403  0120C0  6E32               	movwf	(btemp+10)^0,c
  5404  0120C2  6A33               	clrf	(btemp+11)^0,c
  5405                           
  5406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5407                           ; Switch size 1, requested type "simple"
  5408                           ; Number of cases is 1, Range of values is 0 to 0
  5409                           ; switch strategies available:
  5410                           ; Name         Instructions Cycles
  5411                           ; simple_byte            4     3 (average)
  5412                           ;	Chosen strategy is simple_byte
  5413  0120C4  5033               	movf	(btemp+11)^0,w,c
  5414  0120C6  0A00               	xorlw	0	; case 0
  5415  0120C8  A4D8               	btfss	status,2,c
  5416  0120CA  D00D               	goto	l12740
  5417                           
  5418                           ; BSR set to: 0
  5419                           ; Switch size 1, requested type "simple"
  5420                           ; Number of cases is 4, Range of values is 0 to 3
  5421                           ; switch strategies available:
  5422                           ; Name         Instructions Cycles
  5423                           ; simple_byte           13     7 (average)
  5424                           ;	Chosen strategy is simple_byte
  5425  0120CC  5032               	movf	(btemp+10)^0,w,c
  5426  0120CE  0A00               	xorlw	0	; case 0
  5427  0120D0  B4D8               	btfsc	status,2,c
  5428  0120D2  D513               	goto	l1350
  5429  0120D4  0A01               	xorlw	1	; case 1
  5430  0120D6  B4D8               	btfsc	status,2,c
  5431  0120D8  D44D               	goto	l1348
  5432  0120DA  0A03               	xorlw	3	; case 2
  5433  0120DC  B4D8               	btfsc	status,2,c
  5434  0120DE  D60E               	goto	l1351
  5435  0120E0  0A01               	xorlw	1	; case 3
  5436  0120E2  B4D8               	btfsc	status,2,c
  5437  0120E4  D6FC               	goto	l12724
  5438  0120E6                     l12740:
  5439                           
  5440                           ; BSR set to: 0
  5441                           ;main.c: 379:     clear_hid_pflags(&H);
  5442  0120E6  0EF3               	movlw	_H& (0+255)
  5443  0120E8  6EE6               	movwf	postinc1,c
  5444  0120EA  ECBA  F0D9         	call	_clear_hid_pflags	;wreg free
  5445                           
  5446                           ;main.c: 381:    StartTimer(TMR_DISPLAY, 250);
  5447  0120EE  0EFA               	movlw	250
  5448  0120F0  6EE6               	movwf	postinc1,c
  5449  0120F2  0E00               	movlw	0
  5450  0120F4  6EE6               	movwf	postinc1,c
  5451  0120F6  0E0A               	movlw	10
  5452  0120F8  6EE6               	movwf	postinc1,c
  5453  0120FA  EC0E  F0D6         	call	_StartTimer	;wreg free
  5454                           
  5455                           ;main.c: 382:    if (check_enter_button(&H) && (H.hid_display != HID_AUX)) {
  5456  0120FE  0EF3               	movlw	_H& (0+255)
  5457  012100  6EE6               	movwf	postinc1,c
  5458  012102  EC2E  F0D6         	call	_check_enter_button	;wreg free
  5459  012106  5028               	movf	btemp^0,w,c
  5460  012108  B4D8               	btfsc	status,2,c
  5461  01210A  D012               	goto	l12750
  5462  01210C  0E03               	movlw	3
  5463  01210E  0100               	movlb	0	; () banked
  5464  012110  19F3               	xorwf	_H& (0+255),w,b
  5465  012112  B4D8               	btfsc	status,2,c
  5466  012114  D00D               	goto	l12750
  5467                           
  5468                           ; BSR set to: 0
  5469                           ;main.c: 383:     V.screen = ~V.screen;
  5470  012116  0102               	movlb	2	; () banked
  5471  012118  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5472  01211A  D002               	goto	u12190
  5473  01211C  0E01               	movlw	1
  5474  01211E  D001               	goto	u12196
  5475  012120                     u12190:
  5476  012120  0E00               	movlw	0
  5477  012122                     u12196:
  5478  012122  0AFF               	xorlw	255
  5479  012124  6E33               	movwf	(btemp+11)^0,c
  5480  012126  519C               	movf	(_V+156)& (0+255),w,b	;volatile
  5481  012128  1833               	xorwf	(btemp+11)^0,w,c
  5482  01212A  0BFE               	andlw	-2
  5483  01212C  1833               	xorwf	(btemp+11)^0,w,c
  5484  01212E  6F9C               	movwf	(_V+156)& (0+255),b	;volatile
  5485  012130                     l12750:
  5486                           
  5487                           ;main.c: 385:    set_vterm(V.screen);
  5488  012130  0102               	movlb	2	; () banked
  5489  012132  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5490  012134  D002               	goto	u12200
  5491  012136  0E01               	movlw	1
  5492  012138  D001               	goto	u12206
  5493  01213A                     u12200:
  5494  01213A  0E00               	movlw	0
  5495  01213C                     u12206:
  5496  01213C  6EE6               	movwf	postinc1,c
  5497  01213E  EC56  F0DA         	call	_set_vterm	;wreg free
  5498                           
  5499                           ;main.c: 386:    update_lcd(V.screen);
  5500  012142  0102               	movlb	2	; () banked
  5501  012144  A19C               	btfss	(_V+156)& (0+255),0,b	;volatile
  5502  012146  D002               	goto	u12210
  5503  012148  0E01               	movlw	1
  5504  01214A  D001               	goto	u12216
  5505  01214C                     u12210:
  5506  01214C  0E00               	movlw	0
  5507  01214E                     u12216:
  5508  01214E  6EE6               	movwf	postinc1,c
  5509  012150  ECF7  F0C8         	call	_update_lcd	;wreg free
  5510  012154                     l12754:
  5511                           
  5512                           ;main.c: 392:   check_help(V.flipper);
  5513  012154  0102               	movlb	2	; () banked
  5514  012156  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  5515  012158  6EE6               	movwf	postinc1,c
  5516  01215A  ECD1  F0BB         	call	_check_help	;wreg free
  5517                           
  5518                           ;main.c: 394:   if (check_enter_button(&H)) {
  5519  01215E  0EF3               	movlw	_H& (0+255)
  5520  012160  6EE6               	movwf	postinc1,c
  5521  012162  EC2E  F0D6         	call	_check_enter_button	;wreg free
  5522  012166  5028               	movf	btemp^0,w,c
  5523  012168  B4D8               	btfsc	status,2,c
  5524  01216A  D062               	goto	l1356
  5525                           
  5526                           ;main.c: 395:    V.calib = 0;
  5527  01216C  0102               	movlb	2	; () banked
  5528  01216E  6BAC               	clrf	(_V+172)& (0+255),b	;volatile
  5529                           
  5530                           ; BSR set to: 2
  5531                           ;main.c: 396:    inp_index += 3;
  5532                           ;stkvar	_inp_index @ sp[(-13)+10]
  5533  012170  0EFD               	movlw	-3
  5534  012172  006F FF8C  F028    	movff	plusw1,btemp
  5535  012178  0E03               	movlw	3
  5536  01217A  2628               	addwf	btemp^0,f,c
  5537  01217C  0EFD               	movlw	-3
  5538  01217E  0060  F0A3  FFE3   	movff	btemp,plusw1
  5539                           
  5540                           ;main.c: 397:    if (inp_index > 9)
  5541                           ;stkvar	_inp_index @ sp[(-13)+10]
  5542  012184  0EFD               	movlw	-3
  5543  012186  006F FF8C  F028    	movff	plusw1,btemp
  5544  01218C  0E09               	movlw	9
  5545  01218E  6428               	cpfsgt	btemp^0,c
  5546  012190  D03A               	goto	l12782
  5547                           
  5548                           ; BSR set to: 2
  5549                           ;main.c: 398:     inp_index = 0;
  5550                           ;stkvar	_inp_index @ sp[(-13)+10]
  5551  012192  0EFD               	movlw	-3
  5552  012194  6AE3               	clrf	plusw1,c
  5553  012196  D037               	goto	l12782
  5554  012198                     l12764:
  5555                           
  5556                           ; BSR set to: 2
  5557                           ;main.c: 401:     i = C_BATT;
  5558                           ;stkvar	_i @ sp[(-13)+9]
  5559  012198  0EFC               	movlw	-4
  5560  01219A  6AE3               	clrf	plusw1,c
  5561                           
  5562                           ; BSR set to: 2
  5563                           ;main.c: 402:     j = C_PV;
  5564                           ;stkvar	_j @ sp[(-13)+8]
  5565  01219C  0EFB               	movlw	-5
  5566  01219E  6AE3               	clrf	plusw1,c
  5567  0121A0  2AE3               	incf	plusw1,f,c
  5568                           
  5569                           ; BSR set to: 2
  5570                           ;main.c: 403:     k = V_CC;
  5571                           ;stkvar	_k @ sp[(-13)+7]
  5572  0121A2  0EFA               	movlw	-6
  5573  0121A4  6AE3               	clrf	plusw1,c
  5574  0121A6  82E3               	bsf	plusw1,1,c
  5575                           
  5576                           ;main.c: 404:     break;
  5577  0121A8  D043               	goto	l1356
  5578  0121AA                     l12770:
  5579                           
  5580                           ; BSR set to: 2
  5581                           ;main.c: 406:     i = V_BAT;
  5582                           ;stkvar	_i @ sp[(-13)+9]
  5583  0121AA  0EFC               	movlw	-4
  5584  0121AC  6AE3               	clrf	plusw1,c
  5585  0121AE  84E3               	bsf	plusw1,2,c
  5586                           
  5587                           ;main.c: 407:     j = V_PV;
  5588                           ;stkvar	_j @ sp[(-13)+8]
  5589  0121B0  0EFB               	movlw	-5
  5590  0121B2  6AE3               	clrf	plusw1,c
  5591  0121B4  80E3               	bsf	plusw1,0,c
  5592  0121B6  84E3               	bsf	plusw1,2,c	;indir
  5593                           
  5594                           ;main.c: 408:     k = V_CBUS;
  5595                           ;stkvar	_k @ sp[(-13)+7]
  5596  0121B8  0EFA               	movlw	-6
  5597  0121BA  6AE3               	clrf	plusw1,c
  5598  0121BC  82E3               	bsf	plusw1,1,c
  5599  0121BE  84E3               	bsf	plusw1,2,c	;indir
  5600                           
  5601                           ;main.c: 409:     break;
  5602  0121C0  D037               	goto	l1356
  5603  0121C2                     l12772:
  5604                           
  5605                           ; BSR set to: 2
  5606                           ;main.c: 411:     i = V_BBAT;
  5607                           ;stkvar	_i @ sp[(-13)+9]
  5608  0121C2  0EFC               	movlw	-4
  5609  0121C4  6AE3               	clrf	plusw1,c
  5610  0121C6  82E3               	bsf	plusw1,1,c
  5611  0121C8  86E3               	bsf	plusw1,3,c	;indir
  5612                           
  5613                           ; BSR set to: 2
  5614                           ;main.c: 412:     j = V_TEMP;
  5615  0121CA  0E0B               	movlw	11
  5616  0121CC  6E33               	movwf	(btemp+11)^0,c
  5617                           
  5618                           ;stkvar	_j @ sp[(-13)+8]
  5619  0121CE  0EFB               	movlw	-5
  5620  0121D0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5621                           
  5622                           ; BSR set to: 2
  5623                           ;main.c: 413:     k = V_INVERTER;
  5624                           ;stkvar	_k @ sp[(-13)+7]
  5625  0121D6  0EFA               	movlw	-6
  5626  0121D8  6AE3               	clrf	plusw1,c
  5627  0121DA  84E3               	bsf	plusw1,2,c
  5628  0121DC  86E3               	bsf	plusw1,3,c	;indir
  5629                           
  5630                           ;main.c: 414:     break;
  5631  0121DE  D028               	goto	l1356
  5632  0121E0                     l12778:
  5633                           
  5634                           ; BSR set to: 2
  5635                           ;main.c: 416:     i = channel_ANB5;
  5636  0121E0  0E0D               	movlw	13
  5637  0121E2  6E33               	movwf	(btemp+11)^0,c
  5638                           
  5639                           ;stkvar	_i @ sp[(-13)+9]
  5640  0121E4  0EFC               	movlw	-4
  5641  0121E6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5642                           
  5643                           ;main.c: 417:     j = channel_ANB5;
  5644  0121EC  0E0D               	movlw	13
  5645  0121EE  6E33               	movwf	(btemp+11)^0,c
  5646                           
  5647                           ;stkvar	_j @ sp[(-13)+8]
  5648  0121F0  0EFB               	movlw	-5
  5649  0121F2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5650                           
  5651                           ;main.c: 418:     k = channel_ANB5;
  5652  0121F8  0E0D               	movlw	13
  5653  0121FA  6E33               	movwf	(btemp+11)^0,c
  5654                           
  5655                           ;stkvar	_k @ sp[(-13)+7]
  5656  0121FC  0EFA               	movlw	-6
  5657  0121FE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  5658                           
  5659                           ;main.c: 419:     break;
  5660  012204  D015               	goto	l1356
  5661  012206                     l12782:
  5662                           
  5663                           ; BSR set to: 2
  5664                           ;stkvar	_inp_index @ sp[(-13)+10]
  5665  012206  0EFD               	movlw	-3
  5666  012208  50E3               	movf	plusw1,w,c
  5667  01220A  6E32               	movwf	(btemp+10)^0,c
  5668  01220C  6A33               	clrf	(btemp+11)^0,c
  5669                           
  5670                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5671                           ; Switch size 1, requested type "simple"
  5672                           ; Number of cases is 1, Range of values is 0 to 0
  5673                           ; switch strategies available:
  5674                           ; Name         Instructions Cycles
  5675                           ; simple_byte            4     3 (average)
  5676                           ;	Chosen strategy is simple_byte
  5677  01220E  5033               	movf	(btemp+11)^0,w,c
  5678  012210  0A00               	xorlw	0	; case 0
  5679  012212  A4D8               	btfss	status,2,c
  5680  012214  D00D               	goto	l1356
  5681                           
  5682                           ; BSR set to: 2
  5683                           ; Switch size 1, requested type "simple"
  5684                           ; Number of cases is 4, Range of values is 0 to 9
  5685                           ; switch strategies available:
  5686                           ; Name         Instructions Cycles
  5687                           ; simple_byte           13     7 (average)
  5688                           ;	Chosen strategy is simple_byte
  5689  012216  5032               	movf	(btemp+10)^0,w,c
  5690  012218  0A00               	xorlw	0	; case 0
  5691  01221A  B4D8               	btfsc	status,2,c
  5692  01221C  D7BD               	goto	l12764
  5693  01221E  0A03               	xorlw	3	; case 3
  5694  012220  B4D8               	btfsc	status,2,c
  5695  012222  D7C3               	goto	l12770
  5696  012224  0A05               	xorlw	5	; case 6
  5697  012226  B4D8               	btfsc	status,2,c
  5698  012228  D7CC               	goto	l12772
  5699  01222A  0A0F               	xorlw	15	; case 9
  5700  01222C  B4D8               	btfsc	status,2,c
  5701  01222E  D7D8               	goto	l12778
  5702  012230                     l1356:
  5703                           
  5704                           ;main.c: 428:   if (V.set_sequ) {
  5705  012230  0102               	movlb	2	; () banked
  5706  012232  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  5707  012234  EF6F  F08C         	goto	l12690
  5708                           
  5709                           ; BSR set to: 2
  5710                           ;main.c: 429:    if (TimerDone(TMR_INFO)) {
  5711  012238  0E07               	movlw	7
  5712  01223A  6EE6               	movwf	postinc1,c
  5713  01223C  EC8F  F0D8         	call	_TimerDone	;wreg free
  5714  012240  5028               	movf	btemp^0,w,c
  5715  012242  B4D8               	btfsc	status,2,c
  5716  012244  D00C               	goto	l12792
  5717                           
  5718                           ;main.c: 430:     V.set_sequ = 0;
  5719  012246  0102               	movlb	2	; () banked
  5720  012248  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  5721                           
  5722                           ; BSR set to: 2
  5723                           ;main.c: 431:     set_vterm(0);
  5724  01224A  0E00               	movlw	0
  5725  01224C  6EE6               	movwf	postinc1,c
  5726  01224E  EC56  F0DA         	call	_set_vterm	;wreg free
  5727                           
  5728                           ;main.c: 432:     update_lcd(0);
  5729  012252  0E00               	movlw	0
  5730  012254  6EE6               	movwf	postinc1,c
  5731  012256  ECF7  F0C8         	call	_update_lcd	;wreg free
  5732                           
  5733                           ;main.c: 433:    } else {
  5734  01225A  EF6F  F08C         	goto	l12690
  5735  01225E                     l12792:
  5736                           
  5737                           ;main.c: 434:     set_vterm(2);
  5738  01225E  0E02               	movlw	2
  5739  012260  6EE6               	movwf	postinc1,c
  5740  012262  EC56  F0DA         	call	_set_vterm	;wreg free
  5741                           
  5742                           ;main.c: 435:     update_lcd(2);
  5743  012266  0E02               	movlw	2
  5744  012268  6EE6               	movwf	postinc1,c
  5745  01226A  ECF7  F0C8         	call	_update_lcd	;wreg free
  5746  01226E  EF6F  F08C         	goto	l12690
  5747  012272                     __end_of_main:
  5748                           	opt callstack 0
  5749                           
  5750 ;; *************** function _static_soc *****************
  5751 ;; Defined at:
  5752 ;;		line 116 in file "mbmc.c"
  5753 ;; Parameters:    Size  Location     Type
  5754 ;;		None
  5755 ;; Auto vars:     Size  Location     Type
  5756 ;;		None
  5757 ;; Return value:  Size  Location     Type
  5758 ;;                  1  [STACK] void 
  5759 ;; Registers used:
  5760 ;;		wreg, status,2
  5761 ;; Tracked objects:
  5762 ;;		On entry : 0/0
  5763 ;;		On exit  : 3F/1
  5764 ;;		Unchanged: 0/0
  5765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5770 ;;Total ram usage:        0 bytes
  5771 ;; Hardware stack levels used:    1
  5772 ;; Hardware stack levels required when called:   15
  5773 ;; This function calls:
  5774 ;;		Nothing
  5775 ;; This function is called by:
  5776 ;;		_main
  5777 ;; This function uses a reentrant model
  5778 ;;
  5779                           
  5780                           	psect	text1
  5781  01B350                     __ptext1:
  5782                           	opt callstack 0
  5783  01B350                     _static_soc:
  5784                           	opt callstack 15
  5785                           
  5786                           ;mbmc.c: 118:  C.runtime = 120;
  5787                           
  5788                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5789                           ;incstack = 0
  5790  01B350  0E00               	movlw	0
  5791  01B352  0101               	movlb	1	; () banked
  5792  01B354  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
  5793  01B356  0E78               	movlw	120
  5794  01B358  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
  5795                           
  5796                           ;mbmc.c: 119:  C.soc = 100;
  5797  01B35A  0E00               	movlw	0
  5798  01B35C  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
  5799  01B35E  0E64               	movlw	100
  5800  01B360  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
  5801                           
  5802                           ; BSR set to: 1
  5803                           ;mbmc.c: 120:  C.dynamic_ah = C.bank_ah;
  5804  01B362  C188  F18C         	movff	_C+136,_C+140	;volatile
  5805  01B366  C189  F18D         	movff	_C+137,_C+141	;volatile
  5806  01B36A  C18A  F18E         	movff	_C+138,_C+142	;volatile
  5807  01B36E  C18B  F18F         	movff	_C+139,_C+143	;volatile
  5808                           
  5809                           ; BSR set to: 1
  5810                           ; _static_soc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5811  01B372  0012               	return		;funcret
  5812  01B374                     __end_of_static_soc:
  5813                           	opt callstack 0
  5814                           
  5815 ;; *************** function _start_switch_handler *****************
  5816 ;; Defined at:
  5817 ;;		line 119 in file "dio.c"
  5818 ;; Parameters:    Size  Location     Type
  5819 ;;		None
  5820 ;; Auto vars:     Size  Location     Type
  5821 ;;		None
  5822 ;; Return value:  Size  Location     Type
  5823 ;;                  1  [STACK] void 
  5824 ;; Registers used:
  5825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
  5826 ;; Tracked objects:
  5827 ;;		On entry : 1/0
  5828 ;;		On exit  : 3F/39
  5829 ;;		Unchanged: 0/0
  5830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5835 ;;Total ram usage:        0 bytes
  5836 ;; Hardware stack levels used:    1
  5837 ;; Hardware stack levels required when called:   16
  5838 ;; This function calls:
  5839 ;;		_INT1_SetInterruptHandler
  5840 ;; This function is called by:
  5841 ;;		_main
  5842 ;; This function uses a reentrant model
  5843 ;;
  5844                           
  5845                           	psect	text2
  5846  01B46E                     __ptext2:
  5847                           	opt callstack 0
  5848  01B46E                     _start_switch_handler:
  5849                           	opt callstack 14
  5850                           
  5851                           ;dio.c: 121:  (PIE5bits.INT1IE = 0);
  5852                           
  5853                           ; BSR set to: 1
  5854                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5855                           ;incstack = 0
  5856  01B46E  0139               	movlb	57	; () banked
  5857  01B470  9195               	bcf	149,0,b	;volatile
  5858                           
  5859                           ; BSR set to: 57
  5860                           ;dio.c: 122:  INT1_SetInterruptHandler(switch_handler);
  5861  01B472  0E34               	movlw	low _switch_handler
  5862  01B474  6EE6               	movwf	postinc1,c
  5863  01B476  0E8C               	movlw	high _switch_handler
  5864  01B478  6EE6               	movwf	postinc1,c
  5865  01B47A  0E01               	movlw	low (_switch_handler shr (0+16))
  5866  01B47C  6EE6               	movwf	postinc1,c
  5867  01B47E  EC1B  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
  5868                           
  5869                           ;dio.c: 123:  S.button[SNULL].sw = SW_INVALID;
  5870  01B482  0E02               	movlw	2
  5871  01B484  0102               	movlb	2	; () banked
  5872  01B486  6FE0               	movwf	(_S+35)& (0+255),b	;volatile
  5873                           
  5874                           ; BSR set to: 2
  5875                           ;dio.c: 124:  (PIE5bits.INT1IE = 1);
  5876  01B488  0139               	movlb	57	; () banked
  5877  01B48A  8195               	bsf	149,0,b	;volatile
  5878                           
  5879                           ; BSR set to: 57
  5880                           ; _start_switch_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
  5881  01B48C  0012               	return		;funcret
  5882  01B48E                     __end_of_start_switch_handler:
  5883                           	opt callstack 0
  5884                           
  5885 ;; *************** function _srand *****************
  5886 ;; Defined at:
  5887 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  5888 ;; Parameters:    Size  Location     Type
  5889 ;;  s               2  [STACK] unsigned int 
  5890 ;; Auto vars:     Size  Location     Type
  5891 ;;		None
  5892 ;; Return value:  Size  Location     Type
  5893 ;;                  1  [STACK] void 
  5894 ;; Registers used:
  5895 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  5896 ;; Tracked objects:
  5897 ;;		On entry : 0/0
  5898 ;;		On exit  : 3F/1
  5899 ;;		Unchanged: 0/0
  5900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5905 ;;Total ram usage:        0 bytes
  5906 ;; Hardware stack levels used:    1
  5907 ;; Hardware stack levels required when called:   15
  5908 ;; This function calls:
  5909 ;;		Nothing
  5910 ;; This function is called by:
  5911 ;;		_main
  5912 ;; This function uses a reentrant model
  5913 ;;
  5914                           
  5915                           	psect	text3
  5916  01AE6E                     __ptext3:
  5917                           	opt callstack 0
  5918  01AE6E                     _srand:
  5919                           	opt callstack 15
  5920                           
  5921                           ;stkvar	_s @ sp[(0)+-2]
  5922                           
  5923                           ; BSR set to: 57
  5924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5925                           ;incstack = 0
  5926  01AE6E  0EFE               	movlw	-2
  5927  01AE70  50E3               	movf	plusw1,w,c
  5928  01AE72  0FFF               	addlw	255
  5929  01AE74  6E32               	movwf	(btemp+10)^0,c
  5930  01AE76  0EFF               	movlw	-1
  5931  01AE78  006F FF8C  F033    	movff	plusw1,btemp+11
  5932  01AE7E  0EFF               	movlw	255
  5933  01AE80  2233               	addwfc	(btemp+11)^0,f,c
  5934  01AE82  0060  F0C8  F1F7   	movff	btemp+10,_seed
  5935  01AE88  0060  F0CC  F1F8   	movff	btemp+11,_seed+1
  5936  01AE8E  0101               	movlb	1	; () banked
  5937  01AE90  6BF9               	clrf	(_seed+2)& (0+255),b
  5938  01AE92  6BFA               	clrf	(_seed+3)& (0+255),b
  5939  01AE94  6BFB               	clrf	(_seed+4)& (0+255),b
  5940  01AE96  6BFC               	clrf	(_seed+5)& (0+255),b
  5941  01AE98  6BFD               	clrf	(_seed+6)& (0+255),b
  5942  01AE9A  6BFE               	clrf	(_seed+7)& (0+255),b
  5943                           
  5944                           ; BSR set to: 1
  5945                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  5946  01AE9C  52E5               	movf	postdec1,f,c
  5947  01AE9E  52E5               	movf	postdec1,f,c
  5948  01AEA0  0012               	return		;funcret
  5949  01AEA2                     __end_of_srand:
  5950                           	opt callstack 0
  5951                           
  5952 ;; *************** function _spinners *****************
  5953 ;; Defined at:
  5954 ;;		line 134 in file "mbmc.c"
  5955 ;; Parameters:    Size  Location     Type
  5956 ;;  shape           1  [STACK] unsigned char 
  5957 ;;  reset           1  [STACK] unsigned char 
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;  c               1  [STACK] unsigned char 
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1  [STACK] unsigned char 
  5962 ;; Registers used:
  5963 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+9, btemp+10, btemp+11, tbl
      +ptrl, tblptrh, tblptru, prodl, prodh
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5972 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5973 ;;Total ram usage:        0 bytes
  5974 ;; Hardware stack levels used:    1
  5975 ;; Hardware stack levels required when called:   16
  5976 ;; This function calls:
  5977 ;;		_strlen
  5978 ;; This function is called by:
  5979 ;;		_main
  5980 ;; This function uses a reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text4
  5984  0197FA                     __ptext4:
  5985                           	opt callstack 0
  5986  0197FA                     _spinners:
  5987                           	opt callstack 0
  5988                           
  5989                           ; BSR set to: 1
  5990                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5991  0197FA  52E6               	movf	postinc1,f,c
  5992                           
  5993                           ;mbmc.c: 134: char spinners(uint8_t shape, uint8_t reset);mbmc.c: 135: {;mbmc.c: 136:  s
      +                          tatic uint8_t s[6];;mbmc.c: 137:  char c;;mbmc.c: 139:  if (shape > (6 - 1))
  5994                           ;stkvar	_shape @ sp[(-1)+-1]
  5995                           
  5996                           ;incstack = 0
  5997  0197FC  0EFE               	movlw	-2
  5998  0197FE  006F FF8C  F028    	movff	plusw1,btemp
  5999  019804  0E05               	movlw	5
  6000  019806  6428               	cpfsgt	btemp^0,c
  6001  019808  D002               	goto	l1866
  6002                           
  6003                           ;mbmc.c: 140:   shape = 0;
  6004                           ;stkvar	_shape @ sp[(-1)+-1]
  6005  01980A  0EFE               	movlw	-2
  6006  01980C  6AE3               	clrf	plusw1,c
  6007  01980E                     l1866:
  6008                           
  6009                           ;mbmc.c: 141:  if (reset)
  6010                           ;stkvar	_reset @ sp[(-1)+-2]
  6011  01980E  0EFD               	movlw	-3
  6012  019810  50E3               	movf	plusw1,w,c
  6013  019812  B4D8               	btfsc	status,2,c
  6014  019814  D00A               	goto	l10550
  6015                           
  6016                           ;mbmc.c: 142:   s[shape] = 0;
  6017                           ;stkvar	_shape @ sp[(-1)+-1]
  6018  019816  0EFE               	movlw	-2
  6019  019818  006F FF8C  F033    	movff	plusw1,btemp+11
  6020  01981E  5033               	movf	(btemp+11)^0,w,c
  6021  019820  0F74               	addlw	low spinners@s
  6022  019822  6ED9               	movwf	fsr2l,c
  6023  019824  6ADA               	clrf	fsr2h,c
  6024  019826  0E00               	movlw	0
  6025  019828  6EDF               	movwf	indf2,c
  6026  01982A                     l10550:
  6027                           
  6028                           ;mbmc.c: 143:  c = spin[shape][s[shape]];
  6029                           ;stkvar	_shape @ sp[(-1)+-1]
  6030  01982A  0EFE               	movlw	-2
  6031  01982C  50E3               	movf	plusw1,w,c
  6032  01982E  0D14               	mullw	20
  6033  019830  0EDB               	movlw	low _spin
  6034  019832  6E32               	movwf	(btemp+10)^0,c
  6035  019834  0EFB               	movlw	high _spin
  6036  019836  6E33               	movwf	(btemp+11)^0,c
  6037  019838  50F3               	movf	243,w,c
  6038  01983A  2632               	addwf	(btemp+10)^0,f,c
  6039  01983C  50F4               	movf	244,w,c
  6040  01983E  2233               	addwfc	(btemp+11)^0,f,c
  6041                           
  6042                           ;stkvar	_shape @ sp[(-1)+-1]
  6043  019840  0EFE               	movlw	-2
  6044  019842  006F FF8C  F031    	movff	plusw1,btemp+9
  6045  019848  5031               	movf	(btemp+9)^0,w,c
  6046  01984A  0F74               	addlw	low spinners@s
  6047  01984C  6ED9               	movwf	fsr2l,c
  6048  01984E  6ADA               	clrf	fsr2h,c
  6049  019850  50DF               	movf	indf2,w,c
  6050  019852  2632               	addwf	(btemp+10)^0,f,c
  6051  019854  0E00               	movlw	0
  6052  019856  2233               	addwfc	(btemp+11)^0,f,c
  6053  019858  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
  6054  01985E  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
  6055  019864                     	if	0	;tblptru may be non-zero
  6056  019864                     	endif
  6057  019864                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6058  019864  0E00               	movlw	low (__mediumconst shr (0+16))
  6059  019866  6EF8               	movwf	tblptru,c
  6060  019868                     	endif
  6061                           
  6062                           ;stkvar	_c @ sp[(-1)+0]
  6063  019868  0008               	tblrd		*
  6064  01986A  0EFF               	movlw	-1
  6065  01986C  006F FFD7 FFE3     	movff	tablat,plusw1
  6066                           
  6067                           ;mbmc.c: 144:  if (++s[shape] >= strlen(spin[shape]))
  6068                           ;stkvar	_shape @ sp[(-1)+-1]
  6069  019872  0EFE               	movlw	-2
  6070  019874  50E3               	movf	plusw1,w,c
  6071  019876  0D14               	mullw	20
  6072  019878  0EDB               	movlw	low _spin
  6073  01987A  6E32               	movwf	(btemp+10)^0,c
  6074  01987C  0EFB               	movlw	high _spin
  6075  01987E  6E33               	movwf	(btemp+11)^0,c
  6076  019880  50F3               	movf	243,w,c
  6077  019882  2632               	addwf	(btemp+10)^0,f,c
  6078  019884  50F4               	movf	244,w,c
  6079  019886  2233               	addwfc	(btemp+11)^0,f,c
  6080  019888  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  6081  01988E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  6082  019894  EC4C  F0CF         	call	_strlen	;wreg free
  6083                           
  6084                           ;stkvar	_shape @ sp[(-1)+-1]
  6085  019898  0EFE               	movlw	-2
  6086  01989A  006F FF8C  F033    	movff	plusw1,btemp+11
  6087  0198A0  5033               	movf	(btemp+11)^0,w,c
  6088  0198A2  0F74               	addlw	low spinners@s
  6089  0198A4  6ED9               	movwf	fsr2l,c
  6090  0198A6  6ADA               	clrf	fsr2h,c
  6091  0198A8  2ADF               	incf	indf2,f,c
  6092  0198AA  50DF               	movf	indf2,w,c
  6093  0198AC  6E32               	movwf	(btemp+10)^0,c
  6094  0198AE  6A33               	clrf	(btemp+11)^0,c
  6095  0198B0  5028               	movf	btemp^0,w,c
  6096  0198B2  5C32               	subwf	(btemp+10)^0,w,c
  6097  0198B4  5029               	movf	(btemp+1)^0,w,c
  6098  0198B6  5833               	subwfb	(btemp+11)^0,w,c
  6099  0198B8  A0D8               	btfss	status,0,c
  6100  0198BA  D00A               	goto	l10556
  6101                           
  6102                           ;mbmc.c: 145:   s[shape] = 0;
  6103                           ;stkvar	_shape @ sp[(-1)+-1]
  6104  0198BC  0EFE               	movlw	-2
  6105  0198BE  006F FF8C  F033    	movff	plusw1,btemp+11
  6106  0198C4  5033               	movf	(btemp+11)^0,w,c
  6107  0198C6  0F74               	addlw	low spinners@s
  6108  0198C8  6ED9               	movwf	fsr2l,c
  6109  0198CA  6ADA               	clrf	fsr2h,c
  6110  0198CC  0E00               	movlw	0
  6111  0198CE  6EDF               	movwf	indf2,c
  6112  0198D0                     l10556:
  6113                           
  6114                           ;mbmc.c: 146:  return c;
  6115                           ;stkvar	_c @ sp[(-1)+0]
  6116  0198D0  0EFF               	movlw	-1
  6117  0198D2  006F FF8C  F028    	movff	plusw1,btemp
  6118                           
  6119                           ; _spinners: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, args
      +                          ize = 2, vargsize = 0
  6120  0198D8  52E5               	movf	postdec1,f,c
  6121  0198DA  52E5               	movf	postdec1,f,c
  6122  0198DC  52E5               	movf	postdec1,f,c
  6123  0198DE  0012               	return		;funcret
  6124  0198E0                     __end_of_spinners:
  6125                           	opt callstack 0
  6126                           
  6127 ;; *************** function _init_port_dma *****************
  6128 ;; Defined at:
  6129 ;;		line 90 in file "eadog.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;		None
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1  [STACK] void 
  6136 ;; Registers used:
  6137 ;;		wreg, status,2
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/2
  6140 ;;		On exit  : 3F/3B
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6143 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6146 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6147 ;;Total ram usage:        0 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:   15
  6150 ;; This function calls:
  6151 ;;		Nothing
  6152 ;; This function is called by:
  6153 ;;		_main
  6154 ;; This function uses a reentrant model
  6155 ;;
  6156                           
  6157                           	psect	text5
  6158  01AF0A                     __ptext5:
  6159                           	opt callstack 0
  6160  01AF0A                     _init_port_dma:
  6161                           	opt callstack 15
  6162                           
  6163                           ;eadog.c: 92:  DMA2CON1bits.DMODE = 0;
  6164                           
  6165                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6166                           ;incstack = 0
  6167  01AF0A  0E3F               	movlw	-193
  6168  01AF0C  013B               	movlb	59	; () banked
  6169  01AF0E  17DD               	andwf	221,f,b	;volatile
  6170                           
  6171                           ; BSR set to: 59
  6172                           ;eadog.c: 93:  DMA2CON1bits.DSTP = 0;
  6173  01AF10  9BDD               	bcf	221,5,b	;volatile
  6174                           
  6175                           ;eadog.c: 94:  DMA2CON1bits.SMODE = 1;
  6176  01AF12  51DD               	movf	221,w,b	;volatile
  6177  01AF14  0BF9               	andlw	-7
  6178  01AF16  0902               	iorlw	2
  6179  01AF18  6FDD               	movwf	221,b	;volatile
  6180                           
  6181                           ;eadog.c: 95:  DMA2CON1bits.SMR = 0;
  6182  01AF1A  0EE7               	movlw	-25
  6183  01AF1C  17DD               	andwf	221,f,b	;volatile
  6184                           
  6185                           ; BSR set to: 59
  6186                           ;eadog.c: 96:  DMA2CON1bits.SSTP = 1;
  6187  01AF1E  81DD               	bsf	221,0,b	;volatile
  6188                           
  6189                           ; BSR set to: 59
  6190                           ;eadog.c: 97:  DMA2CON0bits.SIRQEN = 0;
  6191  01AF20  9DDC               	bcf	220,6,b	;volatile
  6192                           
  6193                           ;eadog.c: 98:  DMA2DSA = 0x3DEA;
  6194  01AF22  0E3D               	movlw	61
  6195  01AF24  6FD1               	movwf	209,b	;volatile
  6196  01AF26  0EEA               	movlw	234
  6197  01AF28  6FD0               	movwf	208,b	;volatile
  6198                           
  6199                           ;eadog.c: 99:  DMA2SSA = (uint32_t) port_data;
  6200  01AF2A  0EFF               	movlw	low _port_data
  6201  01AF2C  6FD9               	movwf	217,b	;volatile
  6202  01AF2E  0E05               	movlw	high _port_data
  6203  01AF30  6FDA               	movwf	218,b	;volatile
  6204  01AF32  0E00               	movlw	low (_port_data shr (0+16))
  6205  01AF34  6FDB               	movwf	219,b	;volatile
  6206                           
  6207                           ; BSR set to: 59
  6208                           ;eadog.c: 100:  DMA2CON0bits.DGO = 0;
  6209  01AF36  9BDC               	bcf	220,5,b	;volatile
  6210                           
  6211                           ; BSR set to: 59
  6212                           ; _init_port_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  6213  01AF38  0012               	return		;funcret
  6214  01AF3A                     __end_of_init_port_dma:
  6215                           	opt callstack 0
  6216                           
  6217 ;; *************** function _init_display *****************
  6218 ;; Defined at:
  6219 ;;		line 38 in file "eadog.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1  [STACK] void 
  6226 ;; Registers used:
  6227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6228 ;; Tracked objects:
  6229 ;;		On entry : 3F/3B
  6230 ;;		On exit  : 3F/3D
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6237 ;;Total ram usage:        0 bytes
  6238 ;; Hardware stack levels used:    1
  6239 ;; Hardware stack levels required when called:   17
  6240 ;; This function calls:
  6241 ;;		_ringBufS_init
  6242 ;;		_send_lcd_cmd
  6243 ;;		_send_lcd_cmd_long
  6244 ;;		_wdtdelay
  6245 ;; This function is called by:
  6246 ;;		_main
  6247 ;; This function uses a reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text6
  6251  019710                     __ptext6:
  6252                           	opt callstack 0
  6253  019710                     _init_display:
  6254                           	opt callstack 13
  6255                           
  6256                           ;eadog.c: 40:  spi_link.tx1a = &ring_buf1;
  6257                           
  6258                           ; BSR set to: 59
  6259                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6260                           ;incstack = 0
  6261  019710  0E43               	movlw	low _ring_buf1
  6262  019712  0100               	movlb	0	; () banked
  6263  019714  6F66               	movwf	(_spi_link+6)& (0+255),b	;volatile
  6264  019716  0E04               	movlw	high _ring_buf1
  6265  019718  6F67               	movwf	(_spi_link+7)& (0+255),b	;volatile
  6266                           
  6267                           ;eadog.c: 41:  spi_link.tx1b = &ring_buf2;
  6268  01971A  0E00               	movlw	low _ring_buf2
  6269  01971C  6F64               	movwf	(_spi_link+4)& (0+255),b	;volatile
  6270  01971E  0E04               	movlw	high _ring_buf2
  6271  019720  6F65               	movwf	(_spi_link+5)& (0+255),b	;volatile
  6272                           
  6273                           ; BSR set to: 0
  6274                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1a);
  6275  019722  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  6276  019728  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  6277  01972E  EC7B  F0D8         	call	_ringBufS_init	;wreg free
  6278                           
  6279                           ;eadog.c: 43:  ringBufS_init(spi_link.tx1b);
  6280  019732  0060  F193  FFE6   	movff	_spi_link+4,postinc1
  6281  019738  0060  F197  FFE6   	movff	_spi_link+5,postinc1
  6282  01973E  EC7B  F0D8         	call	_ringBufS_init	;wreg free
  6283                           
  6284                           ;eadog.c: 45:  LATEbits.LATE2 = 1;
  6285  019742  84BE               	bsf	190,2,c	;volatile
  6286  019744  84BC               	bsf	188,2,c	;volatile
  6287                           
  6288                           ;eadog.c: 59:  wdtdelay(350000);
  6289  019746  0E30               	movlw	48
  6290  019748  6EE6               	movwf	postinc1,c
  6291  01974A  0E57               	movlw	87
  6292  01974C  6EE6               	movwf	postinc1,c
  6293  01974E  0E05               	movlw	5
  6294  019750  6EE6               	movwf	postinc1,c
  6295  019752  0E00               	movlw	0
  6296  019754  6EE6               	movwf	postinc1,c
  6297  019756  ECA9  F0D3         	call	_wdtdelay	;wreg free
  6298                           
  6299                           ; BSR set to: 0
  6300                           ;eadog.c: 60:  send_lcd_cmd(0x39);
  6301  01975A  0E39               	movlw	57
  6302  01975C  6EE6               	movwf	postinc1,c
  6303  01975E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6304                           
  6305                           ; BSR set to: 0
  6306                           ;eadog.c: 61:  send_lcd_cmd(0x1d);
  6307  019762  0E1D               	movlw	29
  6308  019764  6EE6               	movwf	postinc1,c
  6309  019766  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6310                           
  6311                           ; BSR set to: 0
  6312                           ;eadog.c: 62:  send_lcd_cmd(0x50);
  6313  01976A  0E50               	movlw	80
  6314  01976C  6EE6               	movwf	postinc1,c
  6315  01976E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6316                           
  6317                           ; BSR set to: 0
  6318                           ;eadog.c: 63:  send_lcd_cmd(0x6c);
  6319  019772  0E6C               	movlw	108
  6320  019774  6EE6               	movwf	postinc1,c
  6321  019776  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6322                           
  6323                           ; BSR set to: 0
  6324                           ;eadog.c: 64:  send_lcd_cmd(0x76);
  6325  01977A  0E76               	movlw	118
  6326  01977C  6EE6               	movwf	postinc1,c
  6327  01977E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6328                           
  6329                           ; BSR set to: 0
  6330                           ;eadog.c: 65:  send_lcd_cmd_long(0x38);
  6331  019782  0E38               	movlw	56
  6332  019784  6EE6               	movwf	postinc1,c
  6333  019786  EC53  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6334                           
  6335                           ; BSR set to: 0
  6336                           ;eadog.c: 66:  send_lcd_cmd(0x0f);
  6337  01978A  0E0F               	movlw	15
  6338  01978C  6EE6               	movwf	postinc1,c
  6339  01978E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6340                           
  6341                           ; BSR set to: 0
  6342                           ;eadog.c: 67:  send_lcd_cmd_long(0x01);
  6343  019792  0E01               	movlw	1
  6344  019794  6EE6               	movwf	postinc1,c
  6345  019796  EC53  F0D8         	call	_send_lcd_cmd_long	;wreg free
  6346                           
  6347                           ; BSR set to: 0
  6348                           ;eadog.c: 68:  send_lcd_cmd(0x02);
  6349  01979A  0E02               	movlw	2
  6350  01979C  6EE6               	movwf	postinc1,c
  6351  01979E  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6352                           
  6353                           ; BSR set to: 0
  6354                           ;eadog.c: 69:  send_lcd_cmd(0x06);
  6355  0197A2  0E06               	movlw	6
  6356  0197A4  6EE6               	movwf	postinc1,c
  6357  0197A6  EC67  F0D8         	call	_send_lcd_cmd	;wreg free
  6358                           
  6359                           ; BSR set to: 0
  6360                           ;eadog.c: 70:  wdtdelay(30);
  6361  0197AA  0E1E               	movlw	30
  6362  0197AC  6EE6               	movwf	postinc1,c
  6363  0197AE  0E00               	movlw	0
  6364  0197B0  6EE6               	movwf	postinc1,c
  6365  0197B2  0E00               	movlw	0
  6366  0197B4  6EE6               	movwf	postinc1,c
  6367  0197B6  0E00               	movlw	0
  6368  0197B8  6EE6               	movwf	postinc1,c
  6369  0197BA  ECA9  F0D3         	call	_wdtdelay	;wreg free
  6370                           
  6371                           ; BSR set to: 0
  6372                           ;eadog.c: 71:  SPI1CON2 = 0x02;
  6373  0197BE  0E02               	movlw	2
  6374  0197C0  013D               	movlb	61	; () banked
  6375  0197C2  6F16               	movwf	22,b	;volatile
  6376                           
  6377                           ; BSR set to: 61
  6378                           ;eadog.c: 72:  SPI1CON1 = 0x40;
  6379  0197C4  0E40               	movlw	64
  6380  0197C6  6F15               	movwf	21,b	;volatile
  6381                           
  6382                           ; BSR set to: 61
  6383                           ;eadog.c: 73:  SPI1CON0 = 0x83;
  6384  0197C8  0E83               	movlw	131
  6385  0197CA  6F14               	movwf	20,b	;volatile
  6386                           
  6387                           ; BSR set to: 61
  6388                           ;eadog.c: 75:  SPI1INTFbits.SPI1TXUIF = 0;
  6389  0197CC  931A               	bcf	26,1,b	;volatile
  6390                           
  6391                           ; BSR set to: 61
  6392                           ;eadog.c: 76:  DMA1CON1bits.DMODE = 0;
  6393  0197CE  0E3F               	movlw	-193
  6394  0197D0  013B               	movlb	59	; () banked
  6395  0197D2  17FD               	andwf	253,f,b	;volatile
  6396                           
  6397                           ; BSR set to: 59
  6398                           ;eadog.c: 77:  DMA1CON1bits.DSTP = 0;
  6399  0197D4  9BFD               	bcf	253,5,b	;volatile
  6400                           
  6401                           ; BSR set to: 59
  6402                           ;eadog.c: 78:  DMA1CON1bits.SMODE = 1;
  6403  0197D6  51FD               	movf	253,w,b	;volatile
  6404  0197D8  0BF9               	andlw	-7
  6405  0197DA  0902               	iorlw	2
  6406  0197DC  6FFD               	movwf	253,b	;volatile
  6407                           
  6408                           ; BSR set to: 59
  6409                           ;eadog.c: 79:  DMA1CON1bits.SMR = 0;
  6410  0197DE  0EE7               	movlw	-25
  6411  0197E0  17FD               	andwf	253,f,b	;volatile
  6412                           
  6413                           ; BSR set to: 59
  6414                           ;eadog.c: 80:  DMA1CON1bits.SSTP = 1;
  6415  0197E2  81FD               	bsf	253,0,b	;volatile
  6416                           
  6417                           ; BSR set to: 59
  6418                           ;eadog.c: 81:  DMA1SSA = (uint32_t) & ring_buf1;
  6419  0197E4  0E43               	movlw	low _ring_buf1
  6420  0197E6  6FF9               	movwf	249,b	;volatile
  6421  0197E8  0E04               	movlw	high _ring_buf1
  6422  0197EA  6FFA               	movwf	250,b	;volatile
  6423  0197EC  0E00               	movlw	low (_ring_buf1 shr (0+16))
  6424  0197EE  6FFB               	movwf	251,b	;volatile
  6425                           
  6426                           ; BSR set to: 59
  6427                           ;eadog.c: 82:  DMA1CON0bits.DGO = 0;
  6428  0197F0  9BFC               	bcf	252,5,b	;volatile
  6429                           
  6430                           ; BSR set to: 59
  6431                           ;eadog.c: 83:  SPI1INTFbits.SPI1TXUIF = 1;
  6432  0197F2  013D               	movlb	61	; () banked
  6433  0197F4  831A               	bsf	26,1,b	;volatile
  6434                           
  6435                           ; BSR set to: 61
  6436                           ;eadog.c: 84:  LATEbits.LATE2 = 0;
  6437  0197F6  94BE               	bcf	190,2,c	;volatile
  6438                           
  6439                           ; BSR set to: 61
  6440                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6441  0197F8  0012               	return		;funcret
  6442  0197FA                     __end_of_init_display:
  6443                           	opt callstack 0
  6444                           
  6445 ;; *************** function _send_lcd_cmd_long *****************
  6446 ;; Defined at:
  6447 ;;		line 129 in file "eadog.c"
  6448 ;; Parameters:    Size  Location     Type
  6449 ;;  cmd             1  [STACK] const unsigned char 
  6450 ;; Auto vars:     Size  Location     Type
  6451 ;;		None
  6452 ;; Return value:  Size  Location     Type
  6453 ;;                  1  [STACK] void 
  6454 ;; Registers used:
  6455 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6456 ;; Tracked objects:
  6457 ;;		On entry : 3F/0
  6458 ;;		On exit  : 3F/0
  6459 ;;		Unchanged: 0/0
  6460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6465 ;;Total ram usage:        0 bytes
  6466 ;; Hardware stack levels used:    1
  6467 ;; Hardware stack levels required when called:   16
  6468 ;; This function calls:
  6469 ;;		_SPI1_Exchange8bit
  6470 ;;		_wdtdelay
  6471 ;; This function is called by:
  6472 ;;		_init_display
  6473 ;; This function uses a reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text7
  6477  01B0A6                     __ptext7:
  6478                           	opt callstack 0
  6479  01B0A6                     _send_lcd_cmd_long:
  6480                           	opt callstack 13
  6481                           
  6482                           ; BSR set to: 61
  6483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6484                           ;incstack = 0
  6485                           ;eadog.c: 129: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 130: {;eadog.c:
      +                           131:  do { LATCbits.LATC1 = 0; } while(0);
  6486  01B0A6  92BC               	bcf	188,1,c	;volatile
  6487                           
  6488                           ;eadog.c: 132:  do { LATCbits.LATC2 = 0; } while(0);
  6489  01B0A8  94BC               	bcf	188,2,c	;volatile
  6490                           
  6491                           ;eadog.c: 133:  SPI1_Exchange8bit(cmd);
  6492                           ;stkvar	_cmd @ sp[(0)+-1]
  6493  01B0AA  0EFF               	movlw	-1
  6494  01B0AC  50E3               	movf	plusw1,w,c
  6495  01B0AE  6EE6               	movwf	postinc1,c
  6496  01B0B0  EC47  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6497                           
  6498                           ; BSR set to: 57
  6499                           ;eadog.c: 134:  wdtdelay(800);
  6500  01B0B4  0E20               	movlw	32
  6501  01B0B6  6EE6               	movwf	postinc1,c
  6502  01B0B8  0E03               	movlw	3
  6503  01B0BA  6EE6               	movwf	postinc1,c
  6504  01B0BC  0E00               	movlw	0
  6505  01B0BE  6EE6               	movwf	postinc1,c
  6506  01B0C0  0E00               	movlw	0
  6507  01B0C2  6EE6               	movwf	postinc1,c
  6508  01B0C4  ECA9  F0D3         	call	_wdtdelay	;wreg free
  6509                           
  6510                           ; BSR set to: 0
  6511  01B0C8  82BC               	bsf	188,1,c	;volatile
  6512                           
  6513                           ; BSR set to: 0
  6514                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6515  01B0CA  52E5               	movf	postdec1,f,c
  6516  01B0CC  0012               	return		;funcret
  6517  01B0CE                     __end_of_send_lcd_cmd_long:
  6518                           	opt callstack 0
  6519                           
  6520 ;; *************** function _send_lcd_cmd *****************
  6521 ;; Defined at:
  6522 ;;		line 117 in file "eadog.c"
  6523 ;; Parameters:    Size  Location     Type
  6524 ;;  cmd             1  [STACK] const unsigned char 
  6525 ;; Auto vars:     Size  Location     Type
  6526 ;;		None
  6527 ;; Return value:  Size  Location     Type
  6528 ;;                  1  [STACK] void 
  6529 ;; Registers used:
  6530 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  6531 ;; Tracked objects:
  6532 ;;		On entry : 3F/0
  6533 ;;		On exit  : 3F/0
  6534 ;;		Unchanged: 0/0
  6535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6540 ;;Total ram usage:        0 bytes
  6541 ;; Hardware stack levels used:    1
  6542 ;; Hardware stack levels required when called:   16
  6543 ;; This function calls:
  6544 ;;		_SPI1_Exchange8bit
  6545 ;;		_wdtdelay
  6546 ;; This function is called by:
  6547 ;;		_init_display
  6548 ;; This function uses a reentrant model
  6549 ;;
  6550                           
  6551                           	psect	text8
  6552  01B0CE                     __ptext8:
  6553                           	opt callstack 0
  6554  01B0CE                     _send_lcd_cmd:
  6555                           	opt callstack 13
  6556                           
  6557                           ; BSR set to: 0
  6558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6559                           ;incstack = 0
  6560                           ;eadog.c: 117: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 118: {;eadog.c: 119:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  6561  01B0CE  92BC               	bcf	188,1,c	;volatile
  6562                           
  6563                           ;eadog.c: 120:  do { LATCbits.LATC2 = 0; } while(0);
  6564  01B0D0  94BC               	bcf	188,2,c	;volatile
  6565                           
  6566                           ;eadog.c: 121:  SPI1_Exchange8bit(cmd);
  6567                           ;stkvar	_cmd @ sp[(0)+-1]
  6568  01B0D2  0EFF               	movlw	-1
  6569  01B0D4  50E3               	movf	plusw1,w,c
  6570  01B0D6  6EE6               	movwf	postinc1,c
  6571  01B0D8  EC47  F0DA         	call	_SPI1_Exchange8bit	;wreg free
  6572                           
  6573                           ; BSR set to: 57
  6574                           ;eadog.c: 122:  wdtdelay(30);
  6575  01B0DC  0E1E               	movlw	30
  6576  01B0DE  6EE6               	movwf	postinc1,c
  6577  01B0E0  0E00               	movlw	0
  6578  01B0E2  6EE6               	movwf	postinc1,c
  6579  01B0E4  0E00               	movlw	0
  6580  01B0E6  6EE6               	movwf	postinc1,c
  6581  01B0E8  0E00               	movlw	0
  6582  01B0EA  6EE6               	movwf	postinc1,c
  6583  01B0EC  ECA9  F0D3         	call	_wdtdelay	;wreg free
  6584                           
  6585                           ; BSR set to: 0
  6586  01B0F0  82BC               	bsf	188,1,c	;volatile
  6587                           
  6588                           ; BSR set to: 0
  6589                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  6590  01B0F2  52E5               	movf	postdec1,f,c
  6591  01B0F4  0012               	return		;funcret
  6592  01B0F6                     __end_of_send_lcd_cmd:
  6593                           	opt callstack 0
  6594                           
  6595 ;; *************** function _SPI1_Exchange8bit *****************
  6596 ;; Defined at:
  6597 ;;		line 79 in file "mcc_generated_files/spi1.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;  data            1  [STACK] unsigned char 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;		None
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  1  [STACK] unsigned char 
  6604 ;; Registers used:
  6605 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 3F/39
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6612 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6614 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6615 ;;Total ram usage:        0 bytes
  6616 ;; Hardware stack levels used:    1
  6617 ;; Hardware stack levels required when called:   15
  6618 ;; This function calls:
  6619 ;;		Nothing
  6620 ;; This function is called by:
  6621 ;;		_send_lcd_cmd
  6622 ;;		_send_lcd_cmd_long
  6623 ;; This function uses a reentrant model
  6624 ;;
  6625                           
  6626                           	psect	text9
  6627  01B48E                     __ptext9:
  6628                           	opt callstack 0
  6629  01B48E                     _SPI1_Exchange8bit:
  6630                           	opt callstack 13
  6631                           
  6632                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  6633                           
  6634                           ; BSR set to: 0
  6635                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6636                           ;incstack = 0
  6637  01B48E  0E01               	movlw	1
  6638  01B490  013D               	movlb	61	; () banked
  6639  01B492  6F12               	movwf	18,b	;volatile
  6640                           
  6641                           ; BSR set to: 61
  6642                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  6643                           ;stkvar	_data @ sp[(0)+-1]
  6644  01B494  0EFF               	movlw	-1
  6645  01B496  006F FF8F FD11     	movff	plusw1,15633	;volatile
  6646  01B49C                     l807:
  6647                           
  6648                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  6649  01B49C  0139               	movlb	57	; () banked
  6650  01B49E  A9A2               	btfss	162,4,b	;volatile
  6651  01B4A0  D7FD               	goto	l807
  6652                           
  6653                           ; BSR set to: 57
  6654                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  6655  01B4A2  006F F440  F028    	movff	15632,btemp	;volatile
  6656                           
  6657                           ; BSR set to: 57
  6658                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  6659  01B4A8  52E5               	movf	postdec1,f,c
  6660  01B4AA  0012               	return		;funcret
  6661  01B4AC                     __end_of_SPI1_Exchange8bit:
  6662                           	opt callstack 0
  6663                           
  6664 ;; *************** function _ringBufS_init *****************
  6665 ;; Defined at:
  6666 ;;		line 22 in file "ringbufs.c"
  6667 ;; Parameters:    Size  Location     Type
  6668 ;;  _this           2  [STACK] PTR volatile struct ring
  6669 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6670 ;; Auto vars:     Size  Location     Type
  6671 ;;		None
  6672 ;; Return value:  Size  Location     Type
  6673 ;;                  1  [STACK] void 
  6674 ;; Registers used:
  6675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6676 ;; Tracked objects:
  6677 ;;		On entry : 0/0
  6678 ;;		On exit  : 0/0
  6679 ;;		Unchanged: 0/0
  6680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6681 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6682 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6683 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6684 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6685 ;;Total ram usage:        0 bytes
  6686 ;; Hardware stack levels used:    1
  6687 ;; Hardware stack levels required when called:   16
  6688 ;; This function calls:
  6689 ;;		_memset
  6690 ;; This function is called by:
  6691 ;;		_init_display
  6692 ;; This function uses a reentrant model
  6693 ;;
  6694                           
  6695                           	psect	text10
  6696  01B0F6                     __ptext10:
  6697                           	opt callstack 0
  6698  01B0F6                     _ringBufS_init:
  6699                           	opt callstack 13
  6700                           
  6701                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  6702                           
  6703                           ; BSR set to: 57
  6704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6705                           ;incstack = 0
  6706  01B0F6  0E43               	movlw	67
  6707  01B0F8  6EE6               	movwf	postinc1,c
  6708  01B0FA  0E00               	movlw	0
  6709  01B0FC  6EE6               	movwf	postinc1,c
  6710  01B0FE  0E00               	movlw	0
  6711  01B100  6EE6               	movwf	postinc1,c
  6712  01B102  0E00               	movlw	0
  6713  01B104  6EE6               	movwf	postinc1,c
  6714                           
  6715                           ;stkvar	__this @ sp[(-4)+-2]
  6716  01B106  0EFA               	movlw	-6
  6717  01B108  006F FF8F FFE6     	movff	plusw1,postinc1
  6718  01B10E  006F FF8F FFE6     	movff	plusw1,postinc1
  6719  01B114  ECF2  F0B2         	call	_memset	;wreg free
  6720                           
  6721                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  6722  01B118  52E5               	movf	postdec1,f,c
  6723  01B11A  52E5               	movf	postdec1,f,c
  6724  01B11C  0012               	return		;funcret
  6725  01B11E                     __end_of_ringBufS_init:
  6726                           	opt callstack 0
  6727                           
  6728 ;; *************** function _init_bsoc *****************
  6729 ;; Defined at:
  6730 ;;		line 89 in file "bsoc.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;		None
  6733 ;; Auto vars:     Size  Location     Type
  6734 ;;		None
  6735 ;; Return value:  Size  Location     Type
  6736 ;;                  1  [STACK] void 
  6737 ;; Registers used:
  6738 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
  6739 ;; Tracked objects:
  6740 ;;		On entry : 3F/1
  6741 ;;		On exit  : 0/0
  6742 ;;		Unchanged: 0/0
  6743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6744 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6745 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6746 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6747 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6748 ;;Total ram usage:        0 bytes
  6749 ;; Hardware stack levels used:    1
  6750 ;; Hardware stack levels required when called:   18
  6751 ;; This function calls:
  6752 ;;		_TMR3_SetInterruptHandler
  6753 ;;		_Volts_to_SOC
  6754 ;;		___fldiv
  6755 ;;		___flmul
  6756 ;;		___fltol
  6757 ;;		___xxtofl
  6758 ;;		_conv_raw_result
  6759 ;; This function is called by:
  6760 ;;		_main
  6761 ;; This function uses a reentrant model
  6762 ;;
  6763                           
  6764                           	psect	text11
  6765  018570                     __ptext11:
  6766                           	opt callstack 0
  6767  018570                     _init_bsoc:
  6768                           	opt callstack 12
  6769                           
  6770                           ;bsoc.c: 94:  C.soc = Volts_to_SOC((uint32_t) conv_raw_result(V_BAT, CONV) * 1000.0);
  6771                           
  6772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6773                           ;incstack = 0
  6774  018570  0E00               	movlw	0
  6775  018572  6EE6               	movwf	postinc1,c
  6776  018574  0E00               	movlw	0
  6777  018576  6EE6               	movwf	postinc1,c
  6778  018578  0E7A               	movlw	122
  6779  01857A  6EE6               	movwf	postinc1,c
  6780  01857C  0E44               	movlw	68
  6781  01857E  6EE6               	movwf	postinc1,c
  6782  018580  0E00               	movlw	0
  6783  018582  6EE6               	movwf	postinc1,c
  6784  018584  0E04               	movlw	4
  6785  018586  6EE6               	movwf	postinc1,c
  6786  018588  EC58  F0A7         	call	_conv_raw_result	;wreg free
  6787  01858C  0060  F0A3  FFE6   	movff	btemp,postinc1
  6788  018592  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6789  018598  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6790  01859E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6791  0185A4  ECFF  F0C1         	call	___fltol	;wreg free
  6792  0185A8  0060  F0A3  FFE6   	movff	btemp,postinc1
  6793  0185AE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6794  0185B4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6795  0185BA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6796  0185C0  0E00               	movlw	0
  6797  0185C2  6EE6               	movwf	postinc1,c
  6798  0185C4  ECDA  F0BC         	call	___xxtofl	;wreg free
  6799  0185C8  0060  F0A3  FFE6   	movff	btemp,postinc1
  6800  0185CE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6801  0185D4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6802  0185DA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6803  0185E0  EC0F  F099         	call	___flmul	;wreg free
  6804  0185E4  0060  F0A3  FFE6   	movff	btemp,postinc1
  6805  0185EA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6806  0185F0  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6807  0185F6  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6808  0185FC  ECFF  F0C1         	call	___fltol	;wreg free
  6809  018600  0060  F0A3  FFE6   	movff	btemp,postinc1
  6810  018606  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6811  01860C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6812  018612  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6813  018618  ECE9  F0CF         	call	_Volts_to_SOC	;wreg free
  6814  01861C  0060  F0A0  F1AE   	movff	btemp,_C+174	;volatile
  6815  018622  0060  F0A4  F1AF   	movff	btemp+1,_C+175	;volatile
  6816                           
  6817                           ;bsoc.c: 95:  C.dynamic_ah = C.bank_ah * (C.soc / 100.0);
  6818  018628  0060  F623  FFE6   	movff	_C+136,postinc1
  6819  01862E  0060  F627  FFE6   	movff	_C+137,postinc1
  6820  018634  0060  F62B  FFE6   	movff	_C+138,postinc1
  6821  01863A  0060  F62F  FFE6   	movff	_C+139,postinc1
  6822  018640  0E00               	movlw	0
  6823  018642  6EE6               	movwf	postinc1,c
  6824  018644  0E00               	movlw	0
  6825  018646  6EE6               	movwf	postinc1,c
  6826  018648  0EC8               	movlw	200
  6827  01864A  6EE6               	movwf	postinc1,c
  6828  01864C  0E42               	movlw	66
  6829  01864E  6EE6               	movwf	postinc1,c
  6830  018650  0101               	movlb	1	; () banked
  6831  018652  51AE               	movf	(_C+174)& (0+255),w,b	;volatile
  6832  018654  6E30               	movwf	(btemp+8)^0,c
  6833  018656  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
  6834  018658  6E31               	movwf	(btemp+9)^0,c
  6835  01865A  6A32               	clrf	(btemp+10)^0,c
  6836  01865C  6A33               	clrf	(btemp+11)^0,c
  6837  01865E  0060  F0C3  FFE6   	movff	btemp+8,postinc1
  6838  018664  0060  F0C7  FFE6   	movff	btemp+9,postinc1
  6839  01866A  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  6840  018670  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  6841  018676  0E00               	movlw	0
  6842  018678  6EE6               	movwf	postinc1,c
  6843  01867A  ECDA  F0BC         	call	___xxtofl	;wreg free
  6844  01867E  0060  F0A3  FFE6   	movff	btemp,postinc1
  6845  018684  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6846  01868A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6847  018690  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6848  018696  EC9B  F0A4         	call	___fldiv	;wreg free
  6849  01869A  0060  F0A3  FFE6   	movff	btemp,postinc1
  6850  0186A0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  6851  0186A6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  6852  0186AC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  6853  0186B2  EC0F  F099         	call	___flmul	;wreg free
  6854  0186B6  0060  F0A0  F18C   	movff	btemp,_C+140	;volatile
  6855  0186BC  0060  F0A4  F18D   	movff	btemp+1,_C+141	;volatile
  6856  0186C2  0060  F0A8  F18E   	movff	btemp+2,_C+142	;volatile
  6857  0186C8  0060  F0AC  F18F   	movff	btemp+3,_C+143	;volatile
  6858                           
  6859                           ;bsoc.c: 96:  TMR3_SetInterruptHandler(calc_bsoc);
  6860  0186CE  0E04               	movlw	low _calc_bsoc
  6861  0186D0  6EE6               	movwf	postinc1,c
  6862  0186D2  0E42               	movlw	high _calc_bsoc
  6863  0186D4  6EE6               	movwf	postinc1,c
  6864  0186D6  0E01               	movlw	low (_calc_bsoc shr (0+16))
  6865  0186D8  6EE6               	movwf	postinc1,c
  6866  0186DA  EC07  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
  6867                           
  6868                           ; _init_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6869  0186DE  0012               	return		;funcret
  6870  0186E0                     __end_of_init_bsoc:
  6871                           	opt callstack 0
  6872                           
  6873 ;; *************** function _Volts_to_SOC *****************
  6874 ;; Defined at:
  6875 ;;		line 153 in file "bsoc.c"
  6876 ;; Parameters:    Size  Location     Type
  6877 ;;  cvoltage        4  [STACK] unsigned long 
  6878 ;; Auto vars:     Size  Location     Type
  6879 ;;		None
  6880 ;; Return value:  Size  Location     Type
  6881 ;;                  2  [STACK] unsigned short 
  6882 ;; Registers used:
  6883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, tblptrl, tblptrh, tblptru, prodl, prodh
  6884 ;; Tracked objects:
  6885 ;;		On entry : 0/1
  6886 ;;		On exit  : 0/0
  6887 ;;		Unchanged: 0/0
  6888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6893 ;;Total ram usage:        0 bytes
  6894 ;; Hardware stack levels used:    1
  6895 ;; Hardware stack levels required when called:   15
  6896 ;; This function calls:
  6897 ;;		Nothing
  6898 ;; This function is called by:
  6899 ;;		_init_bsoc
  6900 ;; This function uses a reentrant model
  6901 ;;
  6902                           
  6903                           	psect	text12
  6904  019FD2                     __ptext12:
  6905                           	opt callstack 0
  6906  019FD2                     _Volts_to_SOC:
  6907                           	opt callstack 14
  6908                           
  6909                           ;bsoc.c: 153: uint16_t Volts_to_SOC(uint32_t cvoltage);bsoc.c: 154: {;bsoc.c: 155:  stat
      +                          ic uint8_t slot;;bsoc.c: 157:  C.soc = 0;
  6910                           
  6911                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6912                           ;incstack = 0
  6913  019FD2  0101               	movlb	1	; () banked
  6914  019FD4  6BAE               	clrf	(_C+174)& (0+255),b	;volatile
  6915  019FD6  6BAF               	clrf	(_C+175)& (0+255),b	;volatile
  6916                           
  6917                           ;bsoc.c: 158:  for (slot = 0; slot < 26; slot++) {
  6918  019FD8  6A55               	clrf	Volts_to_SOC@slot^0,c
  6919  019FDA                     l10326:
  6920                           
  6921                           ;bsoc.c: 159:   if (cvoltage > BVSOC_TABLE[slot][0]) {
  6922                           ;stkvar	_cvoltage @ sp[(0)+-4]
  6923  019FDA  5055               	movf	Volts_to_SOC@slot^0,w,c
  6924  019FDC  0D08               	mullw	8
  6925  019FDE  0E7B               	movlw	low _BVSOC_TABLE
  6926  019FE0  24F3               	addwf	243,w,c
  6927  019FE2  6EF6               	movwf	tblptrl,c
  6928  019FE4  0EFA               	movlw	high _BVSOC_TABLE
  6929  019FE6  20F4               	addwfc	244,w,c
  6930  019FE8  6EF7               	movwf	tblptrh,c
  6931  019FEA                     	if	1	;There are 3 active tblptr bytes
  6932  019FEA  6AF8               	clrf	tblptru,c
  6933  019FEC  0E00               	movlw	low (__mediumconst shr (0+16))
  6934  019FEE  22F8               	addwfc	tblptru,f,c
  6935  019FF0                     	endif
  6936  019FF0  0EFC               	movlw	-4
  6937  019FF2  50E3               	movf	plusw1,w,c
  6938  019FF4  0009               	tblrd		*+
  6939  019FF6  5CF5               	subwf	tablat,w,c
  6940  019FF8  0EFD               	movlw	-3
  6941  019FFA  50E3               	movf	plusw1,w,c
  6942  019FFC  0009               	tblrd		*+
  6943  019FFE  58F5               	subwfb	tablat,w,c
  6944  01A000  0EFE               	movlw	-2
  6945  01A002  50E3               	movf	plusw1,w,c
  6946  01A004  0009               	tblrd		*+
  6947  01A006  58F5               	subwfb	tablat,w,c
  6948  01A008  0EFF               	movlw	-1
  6949  01A00A  50E3               	movf	plusw1,w,c
  6950  01A00C  0009               	tblrd		*+
  6951  01A00E  58F5               	subwfb	tablat,w,c
  6952  01A010  B0D8               	btfsc	status,0,c
  6953  01A012  D017               	goto	l10330
  6954                           
  6955                           ;bsoc.c: 160:    C.soc = BVSOC_TABLE[slot][1];
  6956  01A014  5055               	movf	Volts_to_SOC@slot^0,w,c
  6957  01A016  0D08               	mullw	8
  6958  01A018  0E04               	movlw	4
  6959  01A01A  26F3               	addwf	243,f,c
  6960  01A01C  0E00               	movlw	0
  6961  01A01E  22F4               	addwfc	244,f,c
  6962  01A020  0E7B               	movlw	low _BVSOC_TABLE
  6963  01A022  24F3               	addwf	243,w,c
  6964  01A024  6EF6               	movwf	tblptrl,c
  6965  01A026  0EFA               	movlw	high _BVSOC_TABLE
  6966  01A028  20F4               	addwfc	244,w,c
  6967  01A02A  6EF7               	movwf	tblptrh,c
  6968  01A02C                     	if	1	;There are 3 active tblptr bytes
  6969  01A02C  6AF8               	clrf	tblptru,c
  6970  01A02E  0E00               	movlw	low (__mediumconst shr (0+16))
  6971  01A030  22F8               	addwfc	tblptru,f,c
  6972  01A032                     	endif
  6973  01A032  0009               	tblrd		*+
  6974  01A034  006F FFD4  F1AE    	movff	tablat,_C+174	;volatile
  6975  01A03A  000A               	tblrd		*-
  6976  01A03C  006F FFD4  F1AF    	movff	tablat,_C+175	;volatile
  6977  01A042                     l10330:
  6978                           
  6979                           ;bsoc.c: 162:  }
  6980  01A042  2A55               	incf	Volts_to_SOC@slot^0,f,c
  6981  01A044  0E19               	movlw	25
  6982  01A046  6455               	cpfsgt	Volts_to_SOC@slot^0,c
  6983  01A048  D7C8               	goto	l10326
  6984                           
  6985                           ;bsoc.c: 164:  return C.soc;
  6986  01A04A  EE20  F1AE         	lfsr	2,_C+174	;volatile
  6987  01A04E  006F FF78  F028    	movff	postinc2,btemp
  6988  01A054  006F FF74  F029    	movff	postdec2,btemp+1
  6989                           
  6990                           ; _Volts_to_SOC: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, 
      +                          argsize = 4, vargsize = 0
  6991  01A05A  52E5               	movf	postdec1,f,c
  6992  01A05C  52E5               	movf	postdec1,f,c
  6993  01A05E  52E5               	movf	postdec1,f,c
  6994  01A060  52E5               	movf	postdec1,f,c
  6995  01A062  0012               	return		;funcret
  6996  01A064                     __end_of_Volts_to_SOC:
  6997                           	opt callstack 0
  6998                           
  6999 ;; *************** function _hid_display *****************
  7000 ;; Defined at:
  7001 ;;		line 17 in file "hid.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  h               1  [STACK] PTR struct H_data
  7004 ;;		 -> H(7), 
  7005 ;; Auto vars:     Size  Location     Type
  7006 ;;		None
  7007 ;; Return value:  Size  Location     Type
  7008 ;;                  1  [STACK] PTR struct H_data
  7009 ;; Registers used:
  7010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
  7011 ;; Tracked objects:
  7012 ;;		On entry : 3F/1
  7013 ;;		On exit  : 0/0
  7014 ;;		Unchanged: 0/0
  7015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7020 ;;Total ram usage:        0 bytes
  7021 ;; Hardware stack levels used:    1
  7022 ;; Hardware stack levels required when called:   17
  7023 ;; This function calls:
  7024 ;;		_hid_input
  7025 ;; This function is called by:
  7026 ;;		_main
  7027 ;; This function uses a reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text13
  7031  019516                     __ptext13:
  7032                           	opt callstack 0
  7033  019516                     _hid_display:
  7034                           	opt callstack 13
  7035                           
  7036                           ;hid.c: 17: H_data* hid_display(H_data* h);hid.c: 18: {;hid.c: 19:  hid_input(h);
  7037                           ;stkvar	_h @ sp[(0)+-1]
  7038                           
  7039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7040                           ;incstack = 0
  7041  019516  0EFF               	movlw	-1
  7042  019518  50E3               	movf	plusw1,w,c
  7043  01951A  6EE6               	movwf	postinc1,c
  7044  01951C  ECC4  F0D0         	call	_hid_input	;wreg free
  7045                           
  7046                           ;hid.c: 21:  switch (h->h_state) {
  7047  019520  D066               	goto	l10730
  7048  019522                     l10708:
  7049                           
  7050                           ;hid.c: 23:   h->h_state = H_STATE_DISPLAY;
  7051                           ;stkvar	_h @ sp[(0)+-1]
  7052  019522  0EFF               	movlw	-1
  7053  019524  50E3               	movf	plusw1,w,c
  7054  019526  6ED9               	movwf	fsr2l,c
  7055  019528  6ADA               	clrf	fsr2h,c
  7056  01952A  0E01               	movlw	1
  7057  01952C  26D9               	addwf	fsr2l,f,c
  7058  01952E  0E01               	movlw	1
  7059  019530  6EDF               	movwf	indf2,c
  7060                           
  7061                           ;hid.c: 24:   h->hid_display = HID_MAIN;
  7062                           ;stkvar	_h @ sp[(0)+-1]
  7063  019532  0EFF               	movlw	-1
  7064  019534  50E3               	movf	plusw1,w,c
  7065  019536  6ED9               	movwf	fsr2l,c
  7066  019538  6ADA               	clrf	fsr2h,c
  7067  01953A  0E00               	movlw	0
  7068  01953C  6EDF               	movwf	indf2,c
  7069                           
  7070                           ;hid.c: 25:   h->wait_enter = 1;
  7071                           ;stkvar	_h @ sp[(0)+-1]
  7072  01953E  0EFF               	movlw	-1
  7073  019540  50E3               	movf	plusw1,w,c
  7074  019542  6ED9               	movwf	fsr2l,c
  7075  019544  6ADA               	clrf	fsr2h,c
  7076  019546  0E04               	movlw	4
  7077  019548  26D9               	addwf	fsr2l,f,c
  7078  01954A  0E01               	movlw	1
  7079  01954C  6EDF               	movwf	indf2,c
  7080                           
  7081                           ;hid.c: 26:   h->wait_select = 1;
  7082                           ;stkvar	_h @ sp[(0)+-1]
  7083  01954E  0EFF               	movlw	-1
  7084  019550  50E3               	movf	plusw1,w,c
  7085  019552  6ED9               	movwf	fsr2l,c
  7086  019554  6ADA               	clrf	fsr2h,c
  7087  019556  0E02               	movlw	2
  7088  019558  26D9               	addwf	fsr2l,f,c
  7089  01955A  0E01               	movlw	1
  7090  01955C  6EDF               	movwf	indf2,c
  7091                           
  7092                           ;hid.c: 27:   h->select_p = SW_OFF;
  7093                           ;stkvar	_h @ sp[(0)+-1]
  7094  01955E  0EFF               	movlw	-1
  7095  019560  50E3               	movf	plusw1,w,c
  7096  019562  6ED9               	movwf	fsr2l,c
  7097  019564  6ADA               	clrf	fsr2h,c
  7098  019566  0E03               	movlw	3
  7099  019568  26D9               	addwf	fsr2l,f,c
  7100  01956A  0E00               	movlw	0
  7101  01956C  6EDF               	movwf	indf2,c
  7102                           
  7103                           ;hid.c: 28:   h->enter_p = SW_OFF;
  7104                           ;stkvar	_h @ sp[(0)+-1]
  7105  01956E  0EFF               	movlw	-1
  7106  019570  50E3               	movf	plusw1,w,c
  7107  019572  6ED9               	movwf	fsr2l,c
  7108  019574  6ADA               	clrf	fsr2h,c
  7109  019576  0E05               	movlw	5
  7110  019578  26D9               	addwf	fsr2l,f,c
  7111  01957A  0E00               	movlw	0
  7112  01957C  D036               	goto	L1
  7113  01957E                     l10720:
  7114                           
  7115                           ;hid.c: 32:   if (!h->wait_select && (h->select_p == SW_OFF)) {
  7116                           ;stkvar	_h @ sp[(0)+-1]
  7117  01957E  0EFF               	movlw	-1
  7118  019580  50E3               	movf	plusw1,w,c
  7119  019582  6ED9               	movwf	fsr2l,c
  7120  019584  6ADA               	clrf	fsr2h,c
  7121  019586  0E02               	movlw	2
  7122  019588  26D9               	addwf	fsr2l,f,c
  7123  01958A  50DF               	movf	indf2,w,c
  7124  01958C  A4D8               	btfss	status,2,c
  7125  01958E  D042               	goto	l1937
  7126                           
  7127                           ;stkvar	_h @ sp[(0)+-1]
  7128  019590  0EFF               	movlw	-1
  7129  019592  50E3               	movf	plusw1,w,c
  7130  019594  6ED9               	movwf	fsr2l,c
  7131  019596  6ADA               	clrf	fsr2h,c
  7132  019598  0E03               	movlw	3
  7133  01959A  26D9               	addwf	fsr2l,f,c
  7134  01959C  50DF               	movf	indf2,w,c
  7135  01959E  A4D8               	btfss	status,2,c
  7136  0195A0  D039               	goto	l1937
  7137                           
  7138                           ;hid.c: 33:    h->sequence = ++h->sequence & 0x3;
  7139                           ;stkvar	_h @ sp[(0)+-1]
  7140  0195A2  0EFF               	movlw	-1
  7141  0195A4  50E3               	movf	plusw1,w,c
  7142  0195A6  6ED9               	movwf	fsr2l,c
  7143  0195A8  6ADA               	clrf	fsr2h,c
  7144  0195AA  0E06               	movlw	6
  7145  0195AC  26D9               	addwf	fsr2l,f,c
  7146                           
  7147                           ;stkvar	_h @ sp[(0)+-1]
  7148  0195AE  0EFF               	movlw	-1
  7149  0195B0  50E3               	movf	plusw1,w,c
  7150  0195B2  6EE9               	movwf	fsr0l,c
  7151  0195B4  6AEA               	clrf	fsr0h,c
  7152  0195B6  0E06               	movlw	6
  7153  0195B8  26E9               	addwf	fsr0l,f,c
  7154  0195BA  2AEF               	incf	indf0,f,c
  7155  0195BC  50EF               	movf	indf0,w,c
  7156  0195BE  0B03               	andlw	3
  7157  0195C0  6EDF               	movwf	indf2,c
  7158                           
  7159                           ;hid.c: 34:    h->hid_display = h->sequence;
  7160                           ;stkvar	_h @ sp[(0)+-1]
  7161  0195C2  0EFF               	movlw	-1
  7162  0195C4  50E3               	movf	plusw1,w,c
  7163  0195C6  6ED9               	movwf	fsr2l,c
  7164  0195C8  6ADA               	clrf	fsr2h,c
  7165  0195CA  0E06               	movlw	6
  7166  0195CC  26D9               	addwf	fsr2l,f,c
  7167                           
  7168                           ;stkvar	_h @ sp[(0)+-1]
  7169  0195CE  0EFF               	movlw	-1
  7170  0195D0  50E3               	movf	plusw1,w,c
  7171  0195D2  6EE9               	movwf	fsr0l,c
  7172  0195D4  6AEA               	clrf	fsr0h,c
  7173  0195D6  006F FF7F FFEF     	movff	indf2,indf0
  7174                           
  7175                           ;hid.c: 35:    h->wait_select = 1;
  7176                           ;stkvar	_h @ sp[(0)+-1]
  7177  0195DC  0EFF               	movlw	-1
  7178  0195DE  50E3               	movf	plusw1,w,c
  7179  0195E0  6ED9               	movwf	fsr2l,c
  7180  0195E2  6ADA               	clrf	fsr2h,c
  7181  0195E4  0E02               	movlw	2
  7182  0195E6  26D9               	addwf	fsr2l,f,c
  7183  0195E8  0E01               	movlw	1
  7184  0195EA                     L1:
  7185  0195EA  6EDF               	movwf	indf2,c
  7186  0195EC  D013               	goto	l1937
  7187  0195EE                     l10730:
  7188                           
  7189                           ;stkvar	_h @ sp[(0)+-1]
  7190  0195EE  0EFF               	movlw	-1
  7191  0195F0  50E3               	movf	plusw1,w,c
  7192  0195F2  6ED9               	movwf	fsr2l,c
  7193  0195F4  6ADA               	clrf	fsr2h,c
  7194  0195F6  0E01               	movlw	1
  7195  0195F8  26D9               	addwf	fsr2l,f,c
  7196  0195FA  50DF               	movf	indf2,w,c
  7197  0195FC  6E32               	movwf	(btemp+10)^0,c
  7198  0195FE  6A33               	clrf	(btemp+11)^0,c
  7199                           
  7200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7201                           ; Switch size 1, requested type "simple"
  7202                           ; Number of cases is 1, Range of values is 0 to 0
  7203                           ; switch strategies available:
  7204                           ; Name         Instructions Cycles
  7205                           ; simple_byte            4     3 (average)
  7206                           ;	Chosen strategy is simple_byte
  7207  019600  5033               	movf	(btemp+11)^0,w,c
  7208  019602  0A00               	xorlw	0	; case 0
  7209  019604  A4D8               	btfss	status,2,c
  7210  019606  D7BB               	goto	l10720
  7211                           
  7212                           ; Switch size 1, requested type "simple"
  7213                           ; Number of cases is 2, Range of values is 0 to 1
  7214                           ; switch strategies available:
  7215                           ; Name         Instructions Cycles
  7216                           ; simple_byte            7     4 (average)
  7217                           ;	Chosen strategy is simple_byte
  7218  019608  5032               	movf	(btemp+10)^0,w,c
  7219  01960A  0A00               	xorlw	0	; case 0
  7220  01960C  B4D8               	btfsc	status,2,c
  7221  01960E  D789               	goto	l10708
  7222  019610  0A01               	xorlw	1	; case 1
  7223  019612  D7B5               	goto	l10720
  7224  019614                     l1937:
  7225                           
  7226                           ; _hid_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7227  019614  52E5               	movf	postdec1,f,c
  7228  019616  0012               	return		;funcret
  7229  019618                     __end_of_hid_display:
  7230                           	opt callstack 0
  7231                           
  7232 ;; *************** function _hid_input *****************
  7233 ;; Defined at:
  7234 ;;		line 3 in file "hid.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  h               1  [STACK] PTR struct H_data
  7237 ;;		 -> H(7), 
  7238 ;; Auto vars:     Size  Location     Type
  7239 ;;		None
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1  [STACK] PTR struct H_data
  7242 ;; Registers used:
  7243 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11, prodl, prodh
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/1
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7252 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7253 ;;Total ram usage:        0 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:   16
  7256 ;; This function calls:
  7257 ;;		_get_switch
  7258 ;; This function is called by:
  7259 ;;		_hid_display
  7260 ;; This function uses a reentrant model
  7261 ;;
  7262                           
  7263                           	psect	text14
  7264  01A188                     __ptext14:
  7265                           	opt callstack 0
  7266  01A188                     _hid_input:
  7267                           	opt callstack 13
  7268                           
  7269                           ;hid.c: 3: H_data* hid_input(H_data* h);hid.c: 4: {;hid.c: 5:  if (get_switch(SSELECT)) 
      +                          {
  7270                           
  7271                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7272                           ;incstack = 0
  7273  01A188  0E02               	movlw	2
  7274  01A18A  6EE6               	movwf	postinc1,c
  7275  01A18C  ECFC  F0D7         	call	_get_switch	;wreg free
  7276  01A190  5028               	movf	btemp^0,w,c
  7277  01A192  B4D8               	btfsc	status,2,c
  7278  01A194  D01C               	goto	l10256
  7279                           
  7280                           ;hid.c: 6:   h->wait_select = 0;
  7281                           ;stkvar	_h @ sp[(0)+-1]
  7282  01A196  0EFF               	movlw	-1
  7283  01A198  50E3               	movf	plusw1,w,c
  7284  01A19A  6ED9               	movwf	fsr2l,c
  7285  01A19C  6ADA               	clrf	fsr2h,c
  7286  01A19E  0E02               	movlw	2
  7287  01A1A0  26D9               	addwf	fsr2l,f,c
  7288  01A1A2  0E00               	movlw	0
  7289  01A1A4  6EDF               	movwf	indf2,c
  7290                           
  7291                           ;hid.c: 7:   h->select_p = get_switch(SSELECT);
  7292  01A1A6  0E02               	movlw	2
  7293  01A1A8  6EE6               	movwf	postinc1,c
  7294  01A1AA  ECFC  F0D7         	call	_get_switch	;wreg free
  7295  01A1AE  5028               	movf	btemp^0,w,c
  7296  01A1B0  B4D8               	btfsc	status,2,c
  7297  01A1B2  D003               	goto	u9400
  7298  01A1B4  6A33               	clrf	(btemp+11)^0,c
  7299  01A1B6  2A33               	incf	(btemp+11)^0,f,c
  7300  01A1B8  D001               	goto	u9418
  7301  01A1BA                     u9400:
  7302  01A1BA  6A33               	clrf	(btemp+11)^0,c
  7303  01A1BC                     u9418:
  7304                           
  7305                           ;stkvar	_h @ sp[(0)+-1]
  7306  01A1BC  0EFF               	movlw	-1
  7307  01A1BE  50E3               	movf	plusw1,w,c
  7308  01A1C0  6ED9               	movwf	fsr2l,c
  7309  01A1C2  6ADA               	clrf	fsr2h,c
  7310  01A1C4  0E03               	movlw	3
  7311  01A1C6  26D9               	addwf	fsr2l,f,c
  7312  01A1C8  0060  F0CF  FFDF   	movff	btemp+11,indf2
  7313  01A1CE                     l10256:
  7314                           
  7315                           ;hid.c: 10:  if (get_switch(SENTER)) {
  7316  01A1CE  0E03               	movlw	3
  7317  01A1D0  6EE6               	movwf	postinc1,c
  7318  01A1D2  ECFC  F0D7         	call	_get_switch	;wreg free
  7319  01A1D6  5028               	movf	btemp^0,w,c
  7320  01A1D8  B4D8               	btfsc	status,2,c
  7321  01A1DA  D01C               	goto	l1928
  7322                           
  7323                           ;hid.c: 11:   h->wait_enter = 0;
  7324                           ;stkvar	_h @ sp[(0)+-1]
  7325  01A1DC  0EFF               	movlw	-1
  7326  01A1DE  50E3               	movf	plusw1,w,c
  7327  01A1E0  6ED9               	movwf	fsr2l,c
  7328  01A1E2  6ADA               	clrf	fsr2h,c
  7329  01A1E4  0E04               	movlw	4
  7330  01A1E6  26D9               	addwf	fsr2l,f,c
  7331  01A1E8  0E00               	movlw	0
  7332  01A1EA  6EDF               	movwf	indf2,c
  7333                           
  7334                           ;hid.c: 12:   h->enter_p = get_switch(SENTER);
  7335  01A1EC  0E03               	movlw	3
  7336  01A1EE  6EE6               	movwf	postinc1,c
  7337  01A1F0  ECFC  F0D7         	call	_get_switch	;wreg free
  7338  01A1F4  5028               	movf	btemp^0,w,c
  7339  01A1F6  B4D8               	btfsc	status,2,c
  7340  01A1F8  D003               	goto	u9430
  7341  01A1FA  6A33               	clrf	(btemp+11)^0,c
  7342  01A1FC  2A33               	incf	(btemp+11)^0,f,c
  7343  01A1FE  D001               	goto	u9448
  7344  01A200                     u9430:
  7345  01A200  6A33               	clrf	(btemp+11)^0,c
  7346  01A202                     u9448:
  7347                           
  7348                           ;stkvar	_h @ sp[(0)+-1]
  7349  01A202  0EFF               	movlw	-1
  7350  01A204  50E3               	movf	plusw1,w,c
  7351  01A206  6ED9               	movwf	fsr2l,c
  7352  01A208  6ADA               	clrf	fsr2h,c
  7353  01A20A  0E05               	movlw	5
  7354  01A20C  26D9               	addwf	fsr2l,f,c
  7355  01A20E  0060  F0CF  FFDF   	movff	btemp+11,indf2
  7356  01A214                     l1928:
  7357                           
  7358                           ; _hid_input: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7359  01A214  52E5               	movf	postdec1,f,c
  7360  01A216  0012               	return		;funcret
  7361  01A218                     __end_of_hid_input:
  7362                           	opt callstack 0
  7363                           
  7364 ;; *************** function _get_switch *****************
  7365 ;; Defined at:
  7366 ;;		line 18 in file "dio.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  i               1  [STACK] unsigned char 
  7369 ;; Auto vars:     Size  Location     Type
  7370 ;;		None
  7371 ;; Return value:  Size  Location     Type
  7372 ;;                  1  [STACK] enum E17021
  7373 ;; Registers used:
  7374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7375 ;; Tracked objects:
  7376 ;;		On entry : 0/2
  7377 ;;		On exit  : 0/0
  7378 ;;		Unchanged: 0/0
  7379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7384 ;;Total ram usage:        0 bytes
  7385 ;; Hardware stack levels used:    1
  7386 ;; Hardware stack levels required when called:   15
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_main
  7391 ;;		_hid_input
  7392 ;; This function uses a reentrant model
  7393 ;;
  7394                           
  7395                           	psect	text15
  7396  01AFF8                     __ptext15:
  7397                           	opt callstack 0
  7398  01AFF8                     _get_switch:
  7399                           	opt callstack 13
  7400                           
  7401                           ;dio.c: 18: SW_STATES get_switch(uint8_t i);dio.c: 19: {;dio.c: 20:  if (i >= 4)
  7402                           ;stkvar	_i @ sp[(0)+-1]
  7403                           
  7404                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7405                           ;incstack = 0
  7406  01AFF8  0EFF               	movlw	-1
  7407  01AFFA  006F FF8C  F028    	movff	plusw1,btemp
  7408  01B000  0E03               	movlw	3
  7409  01B002  6428               	cpfsgt	btemp^0,c
  7410  01B004  D002               	goto	l9528
  7411                           
  7412                           ;dio.c: 21:   return SW_OFF;
  7413  01B006  0E00               	movlw	0
  7414  01B008  D00A               	goto	L2
  7415  01B00A                     l9528:
  7416                           
  7417                           ;dio.c: 23:  return S.button[i].sw;
  7418                           ;stkvar	_i @ sp[(0)+-1]
  7419  01B00A  0EFF               	movlw	-1
  7420  01B00C  50E3               	movf	plusw1,w,c
  7421  01B00E  0D05               	mullw	5
  7422  01B010  0EBD               	movlw	low _S
  7423  01B012  24F3               	addwf	243,w,c
  7424  01B014  6ED9               	movwf	fsr2l,c
  7425  01B016  0E02               	movlw	high _S
  7426  01B018  20F4               	addwfc	prodh,w,c
  7427  01B01A  6EDA               	movwf	fsr2h,c
  7428  01B01C  50DF               	movf	indf2,w,c
  7429  01B01E                     L2:
  7430  01B01E  6E28               	movwf	btemp^0,c
  7431                           
  7432                           ; _get_switch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  7433  01B020  52E5               	movf	postdec1,f,c
  7434  01B022  0012               	return		;funcret
  7435  01B024                     __end_of_get_switch:
  7436                           	opt callstack 0
  7437                           
  7438 ;; *************** function _esr_check *****************
  7439 ;; Defined at:
  7440 ;;		line 173 in file "bsoc.c"
  7441 ;; Parameters:    Size  Location     Type
  7442 ;;  fsm             1  [STACK] unsigned char 
  7443 ;; Auto vars:     Size  Location     Type
  7444 ;;		None
  7445 ;; Return value:  Size  Location     Type
  7446 ;;                  4  [STACK] float 
  7447 ;; Registers used:
  7448 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7449 ;; Tracked objects:
  7450 ;;		On entry : 0/0
  7451 ;;		On exit  : 0/0
  7452 ;;		Unchanged: 0/0
  7453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7458 ;;Total ram usage:        0 bytes
  7459 ;; Hardware stack levels used:    1
  7460 ;; Hardware stack levels required when called:   18
  7461 ;; This function calls:
  7462 ;;		_StartTimer
  7463 ;;		_TimerDone
  7464 ;;		___fldiv
  7465 ;;		___flsub
  7466 ;;		_conv_raw_result
  7467 ;;		_fabsf
  7468 ;;		_set_load_relay_one
  7469 ;;		_set_load_relay_two
  7470 ;;		_update_adc_result
  7471 ;; This function is called by:
  7472 ;;		_main
  7473 ;; This function uses a reentrant model
  7474 ;;
  7475                           
  7476                           	psect	text16
  7477  0168D0                     __ptext16:
  7478                           	opt callstack 0
  7479  0168D0                     _esr_check:
  7480                           	opt callstack 12
  7481                           
  7482                           ;bsoc.c: 173: float esr_check(uint8_t fsm);bsoc.c: 174: {;bsoc.c: 175:  static uint8_t e
      +                          sr_state = 0;;bsoc.c: 177:  if (fsm) {
  7483                           ;stkvar	_fsm @ sp[(0)+-1]
  7484                           
  7485                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7486                           ;incstack = 0
  7487  0168D0  0EFF               	movlw	-1
  7488  0168D2  50E3               	movf	plusw1,w,c
  7489  0168D4  B4D8               	btfsc	status,2,c
  7490  0168D6  D13E               	goto	l10646
  7491                           
  7492                           ;bsoc.c: 178:   esr_state = 0;
  7493  0168D8  6A54               	clrf	esr_check@esr_state^0,c
  7494                           
  7495                           ;bsoc.c: 179:   return -10.0;
  7496  0168DA  0E00               	movlw	0
  7497  0168DC  6E28               	movwf	btemp^0,c
  7498  0168DE  0E00               	movlw	0
  7499  0168E0  6E29               	movwf	(btemp+1)^0,c
  7500  0168E2  0E20               	movlw	32
  7501  0168E4  6E2A               	movwf	(btemp+2)^0,c
  7502  0168E6  0EC1               	movlw	193
  7503  0168E8  D150               	goto	L3
  7504  0168EA                     l10578:
  7505                           
  7506                           ;bsoc.c: 184:   StartTimer(TMR_ESR, 10000);
  7507  0168EA  0E10               	movlw	16
  7508  0168EC  6EE6               	movwf	postinc1,c
  7509  0168EE  0E27               	movlw	39
  7510  0168F0  6EE6               	movwf	postinc1,c
  7511  0168F2  0E0C               	movlw	12
  7512  0168F4  6EE6               	movwf	postinc1,c
  7513  0168F6  EC0E  F0D6         	call	_StartTimer	;wreg free
  7514  0168FA                     l10580:
  7515                           
  7516                           ;bsoc.c: 185:   esr_state++;
  7517  0168FA  2A54               	incf	esr_check@esr_state^0,f,c
  7518                           
  7519                           ;bsoc.c: 186:   break;
  7520  0168FC  D13F               	goto	l10648
  7521  0168FE                     l10582:
  7522                           
  7523                           ;bsoc.c: 191:   set_load_relay_one(0);
  7524  0168FE  0E00               	movlw	0
  7525  016900  6EE6               	movwf	postinc1,c
  7526  016902  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  7527                           
  7528                           ;bsoc.c: 192:   set_load_relay_two(0);
  7529  016906  0E00               	movlw	0
  7530  016908  6EE6               	movwf	postinc1,c
  7531  01690A  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  7532                           
  7533                           ;bsoc.c: 193:   if (TimerDone(TMR_ESR)) {
  7534  01690E  0E0C               	movlw	12
  7535  016910  6EE6               	movwf	postinc1,c
  7536  016912  EC8F  F0D8         	call	_TimerDone	;wreg free
  7537  016916  5028               	movf	btemp^0,w,c
  7538  016918  B4D8               	btfsc	status,2,c
  7539  01691A  D009               	goto	l10588
  7540                           
  7541                           ;bsoc.c: 194:    StartTimer(TMR_ESR, 10000);
  7542  01691C  0E10               	movlw	16
  7543  01691E  6EE6               	movwf	postinc1,c
  7544  016920  0E27               	movlw	39
  7545  016922  6EE6               	movwf	postinc1,c
  7546  016924  0E0C               	movlw	12
  7547  016926  6EE6               	movwf	postinc1,c
  7548  016928  EC0E  F0D6         	call	_StartTimer	;wreg free
  7549                           
  7550                           ;bsoc.c: 195:   } else {
  7551  01692C  D006               	goto	l10592
  7552  01692E                     l10588:
  7553                           
  7554                           ;bsoc.c: 196:    return -2.0;
  7555  01692E  0E00               	movlw	0
  7556  016930  6E28               	movwf	btemp^0,c
  7557  016932  0E00               	movlw	0
  7558  016934  6E29               	movwf	(btemp+1)^0,c
  7559  016936  0E00               	movlw	0
  7560  016938  D066               	goto	L5
  7561  01693A                     l10592:
  7562                           
  7563                           ;bsoc.c: 201:   update_adc_result();
  7564  01693A  ECAD  F0D6         	call	_update_adc_result	;wreg free
  7565                           
  7566                           ;bsoc.c: 202:   C.bv_noload = conv_raw_result(V_BAT, CONV);
  7567  01693E  0E00               	movlw	0
  7568  016940  6EE6               	movwf	postinc1,c
  7569  016942  0E04               	movlw	4
  7570  016944  6EE6               	movwf	postinc1,c
  7571  016946  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7572  01694A  0060  F0A0  F1EB   	movff	btemp,_C+235	;volatile
  7573  016950  0060  F0A4  F1EC   	movff	btemp+1,_C+236	;volatile
  7574  016956  0060  F0A8  F1ED   	movff	btemp+2,_C+237	;volatile
  7575  01695C  0060  F0AC  F1EE   	movff	btemp+3,_C+238	;volatile
  7576  016962  D7CB               	goto	l10580
  7577  016964                     l10598:
  7578                           
  7579                           ;bsoc.c: 206:   set_load_relay_one(1);
  7580  016964  0E01               	movlw	1
  7581  016966  6EE6               	movwf	postinc1,c
  7582  016968  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  7583                           
  7584                           ;bsoc.c: 207:   if (TimerDone(TMR_ESR)) {
  7585  01696C  0E0C               	movlw	12
  7586  01696E  6EE6               	movwf	postinc1,c
  7587  016970  EC8F  F0D8         	call	_TimerDone	;wreg free
  7588  016974  5028               	movf	btemp^0,w,c
  7589  016976  B4D8               	btfsc	status,2,c
  7590  016978  D009               	goto	l10604
  7591                           
  7592                           ;bsoc.c: 208:    StartTimer(TMR_ESR, 10000);
  7593  01697A  0E10               	movlw	16
  7594  01697C  6EE6               	movwf	postinc1,c
  7595  01697E  0E27               	movlw	39
  7596  016980  6EE6               	movwf	postinc1,c
  7597  016982  0E0C               	movlw	12
  7598  016984  6EE6               	movwf	postinc1,c
  7599  016986  EC0E  F0D6         	call	_StartTimer	;wreg free
  7600                           
  7601                           ;bsoc.c: 209:   } else {
  7602  01698A  D006               	goto	l10608
  7603  01698C                     l10604:
  7604                           
  7605                           ;bsoc.c: 210:    return -3.0;
  7606  01698C  0E00               	movlw	0
  7607  01698E  6E28               	movwf	btemp^0,c
  7608  016990  0E00               	movlw	0
  7609  016992  6E29               	movwf	(btemp+1)^0,c
  7610  016994  0E40               	movlw	64
  7611  016996  D037               	goto	L5
  7612  016998                     l10608:
  7613                           
  7614                           ;bsoc.c: 213:   update_adc_result();
  7615  016998  ECAD  F0D6         	call	_update_adc_result	;wreg free
  7616                           
  7617                           ;bsoc.c: 214:   C.bv_one_load = conv_raw_result(V_BAT, CONV);
  7618  01699C  0E00               	movlw	0
  7619  01699E  6EE6               	movwf	postinc1,c
  7620  0169A0  0E04               	movlw	4
  7621  0169A2  6EE6               	movwf	postinc1,c
  7622  0169A4  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7623  0169A8  0060  F0A0  F1EF   	movff	btemp,_C+239	;volatile
  7624  0169AE  0060  F0A4  F1F0   	movff	btemp+1,_C+240	;volatile
  7625  0169B4  0060  F0A8  F1F1   	movff	btemp+2,_C+241	;volatile
  7626  0169BA  0060  F0AC  F1F2   	movff	btemp+3,_C+242	;volatile
  7627                           
  7628                           ;bsoc.c: 215:   C.load_i1 = conv_raw_result(C_BATT, CONV);
  7629  0169C0  0E00               	movlw	0
  7630  0169C2  6EE6               	movwf	postinc1,c
  7631  0169C4  0E00               	movlw	0
  7632  0169C6  6EE6               	movwf	postinc1,c
  7633  0169C8  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7634  0169CC  0060  F0A0  F1E3   	movff	btemp,_C+227	;volatile
  7635  0169D2  0060  F0A4  F1E4   	movff	btemp+1,_C+228	;volatile
  7636  0169D8  0060  F0A8  F1E5   	movff	btemp+2,_C+229	;volatile
  7637  0169DE  0060  F0AC  F1E6   	movff	btemp+3,_C+230	;volatile
  7638  0169E4  D78A               	goto	l10580
  7639  0169E6                     l10616:
  7640                           
  7641                           ;bsoc.c: 219:   set_load_relay_two(1);
  7642  0169E6  0E01               	movlw	1
  7643  0169E8  6EE6               	movwf	postinc1,c
  7644  0169EA  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  7645                           
  7646                           ;bsoc.c: 220:   if (!TimerDone(TMR_ESR))
  7647  0169EE  0E0C               	movlw	12
  7648  0169F0  6EE6               	movwf	postinc1,c
  7649  0169F2  EC8F  F0D8         	call	_TimerDone	;wreg free
  7650  0169F6  5028               	movf	btemp^0,w,c
  7651  0169F8  A4D8               	btfss	status,2,c
  7652  0169FA  D008               	goto	l10624
  7653                           
  7654                           ;bsoc.c: 221:    return -4.0;
  7655  0169FC  0E00               	movlw	0
  7656  0169FE  6E28               	movwf	btemp^0,c
  7657  016A00  0E00               	movlw	0
  7658  016A02  6E29               	movwf	(btemp+1)^0,c
  7659  016A04  0E80               	movlw	128
  7660  016A06                     L5:
  7661  016A06  6E2A               	movwf	(btemp+2)^0,c
  7662  016A08  0EC0               	movlw	192
  7663  016A0A  D0BF               	goto	L3
  7664  016A0C                     l10624:
  7665                           
  7666                           ;bsoc.c: 223:   update_adc_result();
  7667  016A0C  ECAD  F0D6         	call	_update_adc_result	;wreg free
  7668                           
  7669                           ;bsoc.c: 224:   C.bv_full_load = conv_raw_result(V_BAT, CONV);
  7670  016A10  0E00               	movlw	0
  7671  016A12  6EE6               	movwf	postinc1,c
  7672  016A14  0E04               	movlw	4
  7673  016A16  6EE6               	movwf	postinc1,c
  7674  016A18  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7675  016A1C  0060  F0A0  F1F3   	movff	btemp,_C+243	;volatile
  7676  016A22  0060  F0A4  F1F4   	movff	btemp+1,_C+244	;volatile
  7677  016A28  0060  F0A8  F1F5   	movff	btemp+2,_C+245	;volatile
  7678  016A2E  0060  F0AC  F1F6   	movff	btemp+3,_C+246	;volatile
  7679                           
  7680                           ;bsoc.c: 225:   C.load_i2 = conv_raw_result(C_BATT, CONV);
  7681  016A34  0E00               	movlw	0
  7682  016A36  6EE6               	movwf	postinc1,c
  7683  016A38  0E00               	movlw	0
  7684  016A3A  6EE6               	movwf	postinc1,c
  7685  016A3C  EC58  F0A7         	call	_conv_raw_result	;wreg free
  7686  016A40  0060  F0A0  F1E7   	movff	btemp,_C+231	;volatile
  7687  016A46  0060  F0A4  F1E8   	movff	btemp+1,_C+232	;volatile
  7688  016A4C  0060  F0A8  F1E9   	movff	btemp+2,_C+233	;volatile
  7689  016A52  0060  F0AC  F1EA   	movff	btemp+3,_C+234	;volatile
  7690                           
  7691                           ;bsoc.c: 227:   C.esr = fabsf((C.bv_one_load - C.bv_full_load) / (C.load_i1 - C.load_i2)
      +                          );
  7692  016A58  0060  F79F  FFE6   	movff	_C+231,postinc1
  7693  016A5E  0060  F7A3  FFE6   	movff	_C+232,postinc1
  7694  016A64  0060  F7A7  FFE6   	movff	_C+233,postinc1
  7695  016A6A  0060  F7AB  FFE6   	movff	_C+234,postinc1
  7696  016A70  0060  F78F  FFE6   	movff	_C+227,postinc1
  7697  016A76  0060  F793  FFE6   	movff	_C+228,postinc1
  7698  016A7C  0060  F797  FFE6   	movff	_C+229,postinc1
  7699  016A82  0060  F79B  FFE6   	movff	_C+230,postinc1
  7700  016A88  EC3F  F0D5         	call	___flsub	;wreg free
  7701  016A8C  0060  F0A3  FFE6   	movff	btemp,postinc1
  7702  016A92  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7703  016A98  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7704  016A9E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7705  016AA4  0060  F7CF  FFE6   	movff	_C+243,postinc1
  7706  016AAA  0060  F7D3  FFE6   	movff	_C+244,postinc1
  7707  016AB0  0060  F7D7  FFE6   	movff	_C+245,postinc1
  7708  016AB6  0060  F7DB  FFE6   	movff	_C+246,postinc1
  7709  016ABC  0060  F7BF  FFE6   	movff	_C+239,postinc1
  7710  016AC2  0060  F7C3  FFE6   	movff	_C+240,postinc1
  7711  016AC8  0060  F7C7  FFE6   	movff	_C+241,postinc1
  7712  016ACE  0060  F7CB  FFE6   	movff	_C+242,postinc1
  7713  016AD4  EC3F  F0D5         	call	___flsub	;wreg free
  7714  016AD8  0060  F0A3  FFE6   	movff	btemp,postinc1
  7715  016ADE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7716  016AE4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7717  016AEA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7718  016AF0  EC9B  F0A4         	call	___fldiv	;wreg free
  7719  016AF4  0060  F0A3  FFE6   	movff	btemp,postinc1
  7720  016AFA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  7721  016B00  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  7722  016B06  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  7723  016B0C  ECF7  F0CD         	call	_fabsf	;wreg free
  7724  016B10  0060  F0A0  F184   	movff	btemp,_C+132	;volatile
  7725  016B16  0060  F0A4  F185   	movff	btemp+1,_C+133	;volatile
  7726  016B1C  0060  F0A8  F186   	movff	btemp+2,_C+134	;volatile
  7727  016B22  0060  F0AC  F187   	movff	btemp+3,_C+135	;volatile
  7728                           
  7729                           ;bsoc.c: 228:   set_load_relay_one(0);
  7730  016B28  0E00               	movlw	0
  7731  016B2A  6EE6               	movwf	postinc1,c
  7732  016B2C  EC1D  F0DB         	call	_set_load_relay_one	;wreg free
  7733                           
  7734                           ;bsoc.c: 229:   set_load_relay_two(0);
  7735  016B30  0E00               	movlw	0
  7736  016B32  6EE6               	movwf	postinc1,c
  7737  016B34  EC15  F0DB         	call	_set_load_relay_two	;wreg free
  7738                           
  7739                           ;bsoc.c: 230:   esr_state = 0;
  7740  016B38  6A54               	clrf	esr_check@esr_state^0,c
  7741                           
  7742                           ;bsoc.c: 231:   return C.esr;
  7743  016B3A  0060  F610  F028   	movff	_C+132,btemp	;volatile
  7744  016B40  0060  F614  F029   	movff	_C+133,btemp+1	;volatile
  7745  016B46  0060  F618  F02A   	movff	_C+134,btemp+2	;volatile
  7746  016B4C  0060  F61C  F02B   	movff	_C+135,btemp+3	;volatile
  7747  016B52  D01C               	goto	l2041
  7748  016B54                     l10646:
  7749  016B54  5054               	movf	esr_check@esr_state^0,w,c
  7750  016B56  6E32               	movwf	(btemp+10)^0,c
  7751  016B58  6A33               	clrf	(btemp+11)^0,c
  7752                           
  7753                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7754                           ; Switch size 1, requested type "simple"
  7755                           ; Number of cases is 1, Range of values is 0 to 0
  7756                           ; switch strategies available:
  7757                           ; Name         Instructions Cycles
  7758                           ; simple_byte            4     3 (average)
  7759                           ;	Chosen strategy is simple_byte
  7760  016B5A  5033               	movf	(btemp+11)^0,w,c
  7761  016B5C  0A00               	xorlw	0	; case 0
  7762  016B5E  A4D8               	btfss	status,2,c
  7763  016B60  D00D               	goto	l10648
  7764                           
  7765                           ; Switch size 1, requested type "simple"
  7766                           ; Number of cases is 4, Range of values is 0 to 3
  7767                           ; switch strategies available:
  7768                           ; Name         Instructions Cycles
  7769                           ; simple_byte           13     7 (average)
  7770                           ;	Chosen strategy is simple_byte
  7771  016B62  5032               	movf	(btemp+10)^0,w,c
  7772  016B64  0A00               	xorlw	0	; case 0
  7773  016B66  B4D8               	btfsc	status,2,c
  7774  016B68  D6C0               	goto	l10578
  7775  016B6A  0A01               	xorlw	1	; case 1
  7776  016B6C  B4D8               	btfsc	status,2,c
  7777  016B6E  D6C7               	goto	l10582
  7778  016B70  0A03               	xorlw	3	; case 2
  7779  016B72  B4D8               	btfsc	status,2,c
  7780  016B74  D6F7               	goto	l10598
  7781  016B76  0A01               	xorlw	1	; case 3
  7782  016B78  B4D8               	btfsc	status,2,c
  7783  016B7A  D735               	goto	l10616
  7784  016B7C                     l10648:
  7785                           
  7786                           ;bsoc.c: 236:  return -1.0;
  7787  016B7C  0E00               	movlw	0
  7788  016B7E  6E28               	movwf	btemp^0,c
  7789  016B80  0E00               	movlw	0
  7790  016B82  6E29               	movwf	(btemp+1)^0,c
  7791  016B84  0E80               	movlw	128
  7792  016B86  6E2A               	movwf	(btemp+2)^0,c
  7793  016B88  0EBF               	movlw	191
  7794  016B8A                     L3:
  7795  016B8A  6E2B               	movwf	(btemp+3)^0,c
  7796  016B8C                     l2041:
  7797                           
  7798                           ; _esr_check: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7799  016B8C  52E5               	movf	postdec1,f,c
  7800  016B8E  0012               	return		;funcret
  7801  016B90                     __end_of_esr_check:
  7802                           	opt callstack 0
  7803                           
  7804 ;; *************** function _update_adc_result *****************
  7805 ;; Defined at:
  7806 ;;		line 71 in file "daq.c"
  7807 ;; Parameters:    Size  Location     Type
  7808 ;;		None
  7809 ;; Auto vars:     Size  Location     Type
  7810 ;;		None
  7811 ;; Return value:  Size  Location     Type
  7812 ;;                  1  [STACK] _Bool 
  7813 ;; Registers used:
  7814 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  7815 ;; Tracked objects:
  7816 ;;		On entry : 0/0
  7817 ;;		On exit  : 0/0
  7818 ;;		Unchanged: 0/0
  7819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7820 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7821 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7822 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7823 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7824 ;;Total ram usage:        0 bytes
  7825 ;; Hardware stack levels used:    1
  7826 ;; Hardware stack levels required when called:   17
  7827 ;; This function calls:
  7828 ;;		_StartTimer
  7829 ;;		_TimerDone
  7830 ;;		_check_adc_scan
  7831 ;;		_clear_adc_scan
  7832 ;;		_start_adc_scan
  7833 ;; This function is called by:
  7834 ;;		_esr_check
  7835 ;; This function uses a reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text17
  7839  01AD5A                     __ptext17:
  7840                           	opt callstack 0
  7841  01AD5A                     _update_adc_result:
  7842                           	opt callstack 12
  7843                           
  7844                           ;daq.c: 73:  if (R.done) {
  7845                           
  7846                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7847                           ;incstack = 0
  7848  01AD5A  0100               	movlb	0	; () banked
  7849  01AD5C  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7850  01AD5E  B4D8               	btfsc	status,2,c
  7851  01AD60  0012               	return	
  7852                           
  7853                           ; BSR set to: 0
  7854                           ;daq.c: 74:   clear_adc_scan();
  7855  01AD62  EC7B  F0DB         	call	_clear_adc_scan	;wreg free
  7856                           
  7857                           ; BSR set to: 0
  7858                           ;daq.c: 75:   start_adc_scan();
  7859  01AD66  ECE6  F0D2         	call	_start_adc_scan	;wreg free
  7860                           
  7861                           ;daq.c: 76:   StartTimer(TMR_ADC, 200);
  7862  01AD6A  0EC8               	movlw	200
  7863  01AD6C  6EE6               	movwf	postinc1,c
  7864  01AD6E  0E00               	movlw	0
  7865  01AD70  6EE6               	movwf	postinc1,c
  7866  01AD72  0E01               	movlw	1
  7867  01AD74  6EE6               	movwf	postinc1,c
  7868  01AD76  EC0E  F0D6         	call	_StartTimer	;wreg free
  7869  01AD7A                     l10194:
  7870  01AD7A  0E01               	movlw	1
  7871  01AD7C  6EE6               	movwf	postinc1,c
  7872  01AD7E  EC8F  F0D8         	call	_TimerDone	;wreg free
  7873  01AD82  5028               	movf	btemp^0,w,c
  7874  01AD84  A4D8               	btfss	status,2,c
  7875  01AD86  0012               	return	
  7876  01AD88  EC6B  F0DB         	call	_check_adc_scan	;wreg free
  7877  01AD8C  5028               	movf	btemp^0,w,c
  7878  01AD8E  A4D8               	btfss	status,2,c
  7879  01AD90  0012               	return	
  7880  01AD92  D7F3               	goto	l10194
  7881  01AD94                     __end_of_update_adc_result:
  7882                           	opt callstack 0
  7883                           
  7884 ;; *************** function _start_adc_scan *****************
  7885 ;; Defined at:
  7886 ;;		line 32 in file "daq.c"
  7887 ;; Parameters:    Size  Location     Type
  7888 ;;		None
  7889 ;; Auto vars:     Size  Location     Type
  7890 ;;		None
  7891 ;; Return value:  Size  Location     Type
  7892 ;;                  1  [STACK] _Bool 
  7893 ;; Registers used:
  7894 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  7895 ;; Tracked objects:
  7896 ;;		On entry : 0/0
  7897 ;;		On exit  : 1/0
  7898 ;;		Unchanged: 0/0
  7899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7900 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7903 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7904 ;;Total ram usage:        0 bytes
  7905 ;; Hardware stack levels used:    1
  7906 ;; Hardware stack levels required when called:   16
  7907 ;; This function calls:
  7908 ;;		_ADCC_DischargeSampleCapacitor
  7909 ;;		_ADCC_SetADIInterruptHandler
  7910 ;;		_ADCC_SetADTIInterruptHandler
  7911 ;;		_ADCC_StartConversion
  7912 ;; This function is called by:
  7913 ;;		_main
  7914 ;;		_update_adc_result
  7915 ;; This function uses a reentrant model
  7916 ;;
  7917                           
  7918                           	psect	text18
  7919  01A5CC                     __ptext18:
  7920                           	opt callstack 0
  7921  01A5CC                     _start_adc_scan:
  7922                           	opt callstack 14
  7923                           
  7924                           ;daq.c: 34:  if (R.done)
  7925                           
  7926                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7927                           ;incstack = 0
  7928  01A5CC  0100               	movlb	0	; () banked
  7929  01A5CE  51EB               	movf	(_R+39)& (0+255),w,b	;volatile
  7930  01A5D0  A4D8               	btfss	status,2,c
  7931  01A5D2  0012               	return	
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;daq.c: 37:  R.scan_index = 0;
  7935  01A5D4  6BE8               	clrf	(_R+36)& (0+255),b	;volatile
  7936                           
  7937                           ; BSR set to: 0
  7938                           ;daq.c: 38:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  7939  01A5D6  013A               	movlb	58	; () banked
  7940  01A5D8  5140               	movf	64,w,b	;volatile
  7941  01A5DA  006E F940  F028    	movff	14928,btemp	;volatile
  7942  01A5E0  6A29               	clrf	(btemp+1)^0,c
  7943  01A5E2  0060  F0A0  F029   	movff	btemp,btemp+1
  7944  01A5E8  6A28               	clrf	btemp^0,c
  7945  01A5EA  2628               	addwf	btemp^0,f,c
  7946  01A5EC  0E00               	movlw	0
  7947  01A5EE  2229               	addwfc	(btemp+1)^0,f,c
  7948  01A5F0  0E77               	movlw	119
  7949  01A5F2  1428               	andwf	btemp^0,w,c
  7950  01A5F4  0100               	movlb	0	; () banked
  7951  01A5F6  6FE9               	movwf	(_R+37)& (0+255),b	;volatile
  7952  01A5F8  0E3C               	movlw	60
  7953  01A5FA  1429               	andwf	(btemp+1)^0,w,c
  7954  01A5FC  6FEA               	movwf	(_R+38)& (0+255),b	;volatile
  7955                           
  7956                           ; BSR set to: 0
  7957                           ;daq.c: 39:  ADCC_SetADIInterruptHandler(adc_int_handler);
  7958  01A5FE  0E1E               	movlw	low _adc_int_handler
  7959  01A600  6EE6               	movwf	postinc1,c
  7960  01A602  0EB7               	movlw	high _adc_int_handler
  7961  01A604  6EE6               	movwf	postinc1,c
  7962  01A606  0E01               	movlw	low (_adc_int_handler shr (0+16))
  7963  01A608  6EE6               	movwf	postinc1,c
  7964  01A60A  EC57  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
  7965                           
  7966                           ;daq.c: 40:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  7967  01A60E  0EA8               	movlw	low _adc_int_t_handler
  7968  01A610  6EE6               	movwf	postinc1,c
  7969  01A612  0EA3               	movlw	high _adc_int_t_handler
  7970  01A614  6EE6               	movwf	postinc1,c
  7971  01A616  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  7972  01A618  6EE6               	movwf	postinc1,c
  7973  01A61A  EC43  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  7974                           
  7975                           ;daq.c: 41:  ADCC_DischargeSampleCapacitor();
  7976  01A61E  EC67  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  7977                           
  7978                           ; BSR set to: 62
  7979                           ;daq.c: 42:  ADCC_StartConversion(R.scan_index & 0xf);
  7980  01A622  0100               	movlb	0	; () banked
  7981  01A624  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
  7982  01A626  0B0F               	andlw	15
  7983  01A628  6EE6               	movwf	postinc1,c
  7984  01A62A  EC0C  F0DB         	call	_ADCC_StartConversion	;wreg free
  7985                           
  7986                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  7987  01A62E  0012               	return		;funcret
  7988  01A630                     __end_of_start_adc_scan:
  7989                           	opt callstack 0
  7990                           
  7991 ;; *************** function _ADCC_StartConversion *****************
  7992 ;; Defined at:
  7993 ;;		line 128 in file "mcc_generated_files/adcc.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;  channel         1  [STACK] enum E16136
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1  [STACK] void 
  8000 ;; Registers used:
  8001 ;;		fsr1l, fsr1h
  8002 ;; Tracked objects:
  8003 ;;		On entry : 3F/0
  8004 ;;		On exit  : 3F/3E
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8011 ;;Total ram usage:        0 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:   15
  8014 ;; This function calls:
  8015 ;;		Nothing
  8016 ;; This function is called by:
  8017 ;;		_start_adc_scan
  8018 ;;		_adc_int_t_handler
  8019 ;; This function uses a reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text19
  8023  01B618                     __ptext19:
  8024                           	opt callstack 0
  8025  01B618                     _ADCC_StartConversion:
  8026                           	opt callstack 0
  8027                           
  8028                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  8029                           ;stkvar	_channel @ sp[(0)+-1]
  8030                           
  8031                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8032                           ;incstack = 0
  8033 ;; hardware stack exceeded
  8034  01B618  0EFF               	movlw	-1
  8035  01B61A  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  8036                           
  8037                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  8038  01B620  013E               	movlb	62	; () banked
  8039  01B622  8FF8               	bsf	248,7,b	;volatile
  8040                           
  8041                           ; BSR set to: 62
  8042                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  8043  01B624  81F8               	bsf	248,0,b	;volatile
  8044                           
  8045                           ; BSR set to: 62
  8046                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  8047  01B626  52E5               	movf	postdec1,f,c
  8048  01B628  0012               	return		;funcret
  8049  01B62A                     __end_of_ADCC_StartConversion:
  8050                           	opt callstack 0
  8051                           
  8052 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  8053 ;; Defined at:
  8054 ;;		line 189 in file "mcc_generated_files/adcc.c"
  8055 ;; Parameters:    Size  Location     Type
  8056 ;;		None
  8057 ;; Auto vars:     Size  Location     Type
  8058 ;;		None
  8059 ;; Return value:  Size  Location     Type
  8060 ;;                  1  [STACK] void 
  8061 ;; Registers used:
  8062 ;;		wreg, status,2
  8063 ;; Tracked objects:
  8064 ;;		On entry : 0/0
  8065 ;;		On exit  : 3F/3E
  8066 ;;		Unchanged: 0/0
  8067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;Total ram usage:        0 bytes
  8073 ;; Hardware stack levels used:    1
  8074 ;; Hardware stack levels required when called:   15
  8075 ;; This function calls:
  8076 ;;		Nothing
  8077 ;; This function is called by:
  8078 ;;		_start_adc_scan
  8079 ;;		_adc_int_t_handler
  8080 ;; This function uses a reentrant model
  8081 ;;
  8082                           
  8083                           	psect	text20
  8084  01B6CE                     __ptext20:
  8085                           	opt callstack 0
  8086  01B6CE                     _ADCC_DischargeSampleCapacitor:
  8087                           	opt callstack 0
  8088                           
  8089                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  8090                           
  8091                           ; BSR set to: 62
  8092                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8093                           ;incstack = 0
  8094 ;; hardware stack exceeded
  8095  01B6CE  0E3B               	movlw	59
  8096  01B6D0  013E               	movlb	62	; () banked
  8097  01B6D2  6FF1               	movwf	241,b	;volatile
  8098                           
  8099                           ; BSR set to: 62
  8100                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  8101  01B6D4  0012               	return		;funcret
  8102  01B6D6                     __end_of_ADCC_DischargeSampleCapacitor:
  8103                           	opt callstack 0
  8104                           
  8105 ;; *************** function _clear_adc_scan *****************
  8106 ;; Defined at:
  8107 ;;		line 63 in file "daq.c"
  8108 ;; Parameters:    Size  Location     Type
  8109 ;;		None
  8110 ;; Auto vars:     Size  Location     Type
  8111 ;;		None
  8112 ;; Return value:  Size  Location     Type
  8113 ;;                  1  [STACK] void 
  8114 ;; Registers used:
  8115 ;;		None
  8116 ;; Tracked objects:
  8117 ;;		On entry : 0/0
  8118 ;;		On exit  : 3F/0
  8119 ;;		Unchanged: 0/0
  8120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8125 ;;Total ram usage:        0 bytes
  8126 ;; Hardware stack levels used:    1
  8127 ;; Hardware stack levels required when called:   15
  8128 ;; This function calls:
  8129 ;;		Nothing
  8130 ;; This function is called by:
  8131 ;;		_main
  8132 ;;		_update_adc_result
  8133 ;; This function uses a reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text21
  8137  01B6F6                     __ptext21:
  8138                           	opt callstack 0
  8139  01B6F6                     _clear_adc_scan:
  8140                           	opt callstack 13
  8141                           
  8142                           ;daq.c: 65:  R.done = 0;
  8143                           
  8144                           ; BSR set to: 62
  8145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8146                           ;incstack = 0
  8147  01B6F6  0100               	movlb	0	; () banked
  8148  01B6F8  6BEB               	clrf	(_R+39)& (0+255),b	;volatile
  8149                           
  8150                           ; BSR set to: 0
  8151                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8152  01B6FA  0012               	return		;funcret
  8153  01B6FC                     __end_of_clear_adc_scan:
  8154                           	opt callstack 0
  8155                           
  8156 ;; *************** function _check_adc_scan *****************
  8157 ;; Defined at:
  8158 ;;		line 55 in file "daq.c"
  8159 ;; Parameters:    Size  Location     Type
  8160 ;;		None
  8161 ;; Auto vars:     Size  Location     Type
  8162 ;;		None
  8163 ;; Return value:  Size  Location     Type
  8164 ;;                  1  [STACK] _Bool 
  8165 ;; Registers used:
  8166 ;;		btemp
  8167 ;; Tracked objects:
  8168 ;;		On entry : 0/0
  8169 ;;		On exit  : 0/0
  8170 ;;		Unchanged: 0/0
  8171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8173 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8175 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8176 ;;Total ram usage:        0 bytes
  8177 ;; Hardware stack levels used:    1
  8178 ;; Hardware stack levels required when called:   15
  8179 ;; This function calls:
  8180 ;;		Nothing
  8181 ;; This function is called by:
  8182 ;;		_main
  8183 ;;		_update_adc_result
  8184 ;; This function uses a reentrant model
  8185 ;;
  8186                           
  8187                           	psect	text22
  8188  01B6D6                     __ptext22:
  8189                           	opt callstack 0
  8190  01B6D6                     _check_adc_scan:
  8191                           	opt callstack 13
  8192                           
  8193                           ;daq.c: 57:  return R.done;
  8194                           
  8195                           ; BSR set to: 0
  8196                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8197                           ;incstack = 0
  8198  01B6D6  0060  F3AC  F028   	movff	_R+39,btemp	;volatile
  8199                           
  8200                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  8201  01B6DC  0012               	return		;funcret
  8202  01B6DE                     __end_of_check_adc_scan:
  8203                           	opt callstack 0
  8204                           
  8205 ;; *************** function _set_load_relay_two *****************
  8206 ;; Defined at:
  8207 ;;		line 128 in file "mbmc.c"
  8208 ;; Parameters:    Size  Location     Type
  8209 ;;  mode            1  [STACK] _Bool 
  8210 ;; Auto vars:     Size  Location     Type
  8211 ;;		None
  8212 ;; Return value:  Size  Location     Type
  8213 ;;                  1  [STACK] void 
  8214 ;; Registers used:
  8215 ;;		wreg, fsr1l, fsr1h
  8216 ;; Tracked objects:
  8217 ;;		On entry : 0/0
  8218 ;;		On exit  : 0/0
  8219 ;;		Unchanged: 0/0
  8220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8225 ;;Total ram usage:        0 bytes
  8226 ;; Hardware stack levels used:    1
  8227 ;; Hardware stack levels required when called:   15
  8228 ;; This function calls:
  8229 ;;		Nothing
  8230 ;; This function is called by:
  8231 ;;		_main
  8232 ;;		_esr_check
  8233 ;; This function uses a reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text23
  8237  01B62A                     __ptext23:
  8238                           	opt callstack 0
  8239  01B62A                     _set_load_relay_two:
  8240                           	opt callstack 15
  8241                           
  8242                           ;mbmc.c: 128: void set_load_relay_two(_Bool mode);mbmc.c: 129: {;mbmc.c: 130:  LATDbits.
      +                          LATD5 = mode;
  8243                           ;stkvar	_mode @ sp[(0)+-1]
  8244                           
  8245                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8246                           ;incstack = 0
  8247  01B62A  0EFF               	movlw	-1
  8248  01B62C  B0E3               	btfsc	plusw1,0,c
  8249  01B62E  D002               	bra	u9045
  8250  01B630  9ABD               	bcf	189,5,c	;volatile
  8251  01B632  D001               	bra	u9046
  8252  01B634                     u9045:
  8253  01B634  8ABD               	bsf	189,5,c	;volatile
  8254  01B636                     u9046:
  8255                           
  8256                           ; _set_load_relay_two: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8257  01B636  52E5               	movf	postdec1,f,c
  8258  01B638  0012               	return		;funcret
  8259  01B63A                     __end_of_set_load_relay_two:
  8260                           	opt callstack 0
  8261                           
  8262 ;; *************** function _set_load_relay_one *****************
  8263 ;; Defined at:
  8264 ;;		line 123 in file "mbmc.c"
  8265 ;; Parameters:    Size  Location     Type
  8266 ;;  mode            1  [STACK] _Bool 
  8267 ;; Auto vars:     Size  Location     Type
  8268 ;;		None
  8269 ;; Return value:  Size  Location     Type
  8270 ;;                  1  [STACK] void 
  8271 ;; Registers used:
  8272 ;;		wreg, fsr1l, fsr1h
  8273 ;; Tracked objects:
  8274 ;;		On entry : 0/0
  8275 ;;		On exit  : 0/0
  8276 ;;		Unchanged: 0/0
  8277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8281 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8282 ;;Total ram usage:        0 bytes
  8283 ;; Hardware stack levels used:    1
  8284 ;; Hardware stack levels required when called:   15
  8285 ;; This function calls:
  8286 ;;		Nothing
  8287 ;; This function is called by:
  8288 ;;		_main
  8289 ;;		_esr_check
  8290 ;; This function uses a reentrant model
  8291 ;;
  8292                           
  8293                           	psect	text24
  8294  01B63A                     __ptext24:
  8295                           	opt callstack 0
  8296  01B63A                     _set_load_relay_one:
  8297                           	opt callstack 15
  8298                           
  8299                           ;mbmc.c: 123: void set_load_relay_one(_Bool mode);mbmc.c: 124: {;mbmc.c: 125:  LATDbits.
      +                          LATD4 = mode;
  8300                           ;stkvar	_mode @ sp[(0)+-1]
  8301                           
  8302                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8303                           ;incstack = 0
  8304  01B63A  0EFF               	movlw	-1
  8305  01B63C  B0E3               	btfsc	plusw1,0,c
  8306  01B63E  D002               	bra	u9035
  8307  01B640  98BD               	bcf	189,4,c	;volatile
  8308  01B642  D001               	bra	u9036
  8309  01B644                     u9035:
  8310  01B644  88BD               	bsf	189,4,c	;volatile
  8311  01B646                     u9036:
  8312                           
  8313                           ; _set_load_relay_one: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8314  01B646  52E5               	movf	postdec1,f,c
  8315  01B648  0012               	return		;funcret
  8316  01B64A                     __end_of_set_load_relay_one:
  8317                           	opt callstack 0
  8318                           
  8319 ;; *************** function _eaDogM_WriteCommand *****************
  8320 ;; Defined at:
  8321 ;;		line 175 in file "eadog.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  cmd             1  [STACK] const unsigned char 
  8324 ;; Auto vars:     Size  Location     Type
  8325 ;;		None
  8326 ;; Return value:  Size  Location     Type
  8327 ;;                  1  [STACK] void 
  8328 ;; Registers used:
  8329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8330 ;; Tracked objects:
  8331 ;;		On entry : 3F/3D
  8332 ;;		On exit  : 3F/0
  8333 ;;		Unchanged: 0/0
  8334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8339 ;;Total ram usage:        0 bytes
  8340 ;; Hardware stack levels used:    1
  8341 ;; Hardware stack levels required when called:   25
  8342 ;; This function calls:
  8343 ;;		_send_lcd_cmd_dma
  8344 ;; This function is called by:
  8345 ;;		_main
  8346 ;; This function uses a reentrant model
  8347 ;;
  8348                           
  8349                           	psect	text25
  8350  01B65A                     __ptext25:
  8351                           	opt callstack 0
  8352  01B65A                     _eaDogM_WriteCommand:
  8353                           	opt callstack 5
  8354                           
  8355                           ;eadog.c: 175: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 176: {;eadog.c: 177:
      +                            send_lcd_cmd_dma(cmd);
  8356                           ;stkvar	_cmd @ sp[(0)+-1]
  8357                           
  8358                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8359                           ;incstack = 0
  8360  01B65A  0EFF               	movlw	-1
  8361  01B65C  50E3               	movf	plusw1,w,c
  8362  01B65E  6EE6               	movwf	postinc1,c
  8363  01B660  EC31  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  8364                           
  8365                           ; BSR set to: 0
  8366                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8367  01B664  52E5               	movf	postdec1,f,c
  8368  01B666  0012               	return		;funcret
  8369  01B668                     __end_of_eaDogM_WriteCommand:
  8370                           	opt callstack 0
  8371                           
  8372 ;; *************** function _convert_adc_data *****************
  8373 ;; Defined at:
  8374 ;;		line 51 in file "mbmc.c"
  8375 ;; Parameters:    Size  Location     Type
  8376 ;;		None
  8377 ;; Auto vars:     Size  Location     Type
  8378 ;;  i               1  [STACK] unsigned char 
  8379 ;; Return value:  Size  Location     Type
  8380 ;;                  1  [STACK] void 
  8381 ;; Registers used:
  8382 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8383 ;; Tracked objects:
  8384 ;;		On entry : 0/0
  8385 ;;		On exit  : 0/0
  8386 ;;		Unchanged: 0/0
  8387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8392 ;;Total ram usage:        0 bytes
  8393 ;; Hardware stack levels used:    1
  8394 ;; Hardware stack levels required when called:   18
  8395 ;; This function calls:
  8396 ;;		_conv_raw_result
  8397 ;;		_lp_filter
  8398 ;; This function is called by:
  8399 ;;		_main
  8400 ;; This function uses a reentrant model
  8401 ;;
  8402                           
  8403                           	psect	text26
  8404  019B36                     __ptext26:
  8405                           	opt callstack 0
  8406  019B36                     _convert_adc_data:
  8407                           	opt callstack 0
  8408                           
  8409                           ; BSR set to: 0
  8410                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8411  019B36  52E6               	movf	postinc1,f,c
  8412                           
  8413                           ;mbmc.c: 53:  uint8_t i = 0;
  8414                           ;stkvar	_i @ sp[(-1)+0]
  8415                           
  8416                           ;incstack = 0
  8417  019B38  0EFF               	movlw	-1
  8418  019B3A  6AE3               	clrf	plusw1,c
  8419  019B3C                     l10658:
  8420                           
  8421                           ;mbmc.c: 56:   if (V.calib) {
  8422  019B3C  0102               	movlb	2	; () banked
  8423  019B3E  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
  8424  019B40  B4D8               	btfsc	status,2,c
  8425  019B42  D01B               	goto	l10662
  8426                           
  8427                           ; BSR set to: 2
  8428                           ;mbmc.c: 57:    C.calc[i] = lp_filter(conv_raw_result(i, O_CONV), i, 1);
  8429  019B44  0E01               	movlw	1
  8430  019B46  6EE6               	movwf	postinc1,c
  8431                           
  8432                           ;stkvar	_i @ sp[(-2)+0]
  8433  019B48  0EFE               	movlw	-2
  8434  019B4A  50E3               	movf	plusw1,w,c
  8435  019B4C  6EE6               	movwf	postinc1,c
  8436  019B4E  0E01               	movlw	1
  8437  019B50  6EE6               	movwf	postinc1,c
  8438                           
  8439                           ;stkvar	_i @ sp[(-4)+0]
  8440  019B52  0EFC               	movlw	-4
  8441  019B54  50E3               	movf	plusw1,w,c
  8442  019B56  6EE6               	movwf	postinc1,c
  8443  019B58  EC58  F0A7         	call	_conv_raw_result	;wreg free
  8444  019B5C  0060  F0A3  FFE6   	movff	btemp,postinc1
  8445  019B62  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8446  019B68  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  8447  019B6E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  8448  019B74  ECDC  F0BE         	call	_lp_filter	;wreg free
  8449  019B78  D01A               	goto	L6
  8450  019B7A                     l10662:
  8451                           
  8452                           ; BSR set to: 2
  8453                           ;mbmc.c: 59:    C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  8454  019B7A  0E00               	movlw	0
  8455  019B7C  6EE6               	movwf	postinc1,c
  8456                           
  8457                           ;stkvar	_i @ sp[(-2)+0]
  8458  019B7E  0EFE               	movlw	-2
  8459  019B80  50E3               	movf	plusw1,w,c
  8460  019B82  6EE6               	movwf	postinc1,c
  8461  019B84  0E00               	movlw	0
  8462  019B86  6EE6               	movwf	postinc1,c
  8463                           
  8464                           ;stkvar	_i @ sp[(-4)+0]
  8465  019B88  0EFC               	movlw	-4
  8466  019B8A  50E3               	movf	plusw1,w,c
  8467  019B8C  6EE6               	movwf	postinc1,c
  8468  019B8E  EC58  F0A7         	call	_conv_raw_result	;wreg free
  8469  019B92  0060  F0A3  FFE6   	movff	btemp,postinc1
  8470  019B98  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8471  019B9E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
  8472  019BA4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
  8473  019BAA  ECDC  F0BE         	call	_lp_filter	;wreg free
  8474  019BAE                     L6:
  8475                           
  8476                           ;stkvar	_i @ sp[(-1)+0]
  8477  019BAE  0EFF               	movlw	-1
  8478  019BB0  50E3               	movf	plusw1,w,c
  8479  019BB2  0D04               	mullw	4
  8480  019BB4  0E00               	movlw	low _C
  8481  019BB6  24F3               	addwf	243,w,c
  8482  019BB8  6ED9               	movwf	fsr2l,c
  8483  019BBA  0E01               	movlw	high _C
  8484  019BBC  20F4               	addwfc	prodh,w,c
  8485  019BBE  6EDA               	movwf	fsr2h,c
  8486  019BC0  0060  F0A3  FFDE   	movff	btemp,postinc2
  8487  019BC6  0060  F0A7  FFDE   	movff	btemp+1,postinc2
  8488  019BCC  0060  F0AB  FFDE   	movff	btemp+2,postinc2
  8489  019BD2  0060  F0AF  FFDE   	movff	btemp+3,postinc2
  8490                           
  8491                           ;mbmc.c: 61:  } while (++i < 16);
  8492                           ;stkvar	_i @ sp[(-1)+0]
  8493  019BD8  0EFF               	movlw	-1
  8494  019BDA  2AE3               	incf	plusw1,f,c
  8495  019BDC  0EFF               	movlw	-1
  8496  019BDE  006F FF8C  F028    	movff	plusw1,btemp
  8497  019BE4  0E0F               	movlw	15
  8498  019BE6  6428               	cpfsgt	btemp^0,c
  8499  019BE8  D7A9               	goto	l10658
  8500                           
  8501                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  8502  019BEA  52E5               	movf	postdec1,f,c
  8503  019BEC  0012               	return		;funcret
  8504  019BEE                     __end_of_convert_adc_data:
  8505                           	opt callstack 0
  8506                           
  8507 ;; *************** function _clear_hid_pflags *****************
  8508 ;; Defined at:
  8509 ;;		line 51 in file "hid.c"
  8510 ;; Parameters:    Size  Location     Type
  8511 ;;  h               1  [STACK] PTR struct H_data
  8512 ;;		 -> H(7), 
  8513 ;; Auto vars:     Size  Location     Type
  8514 ;;		None
  8515 ;; Return value:  Size  Location     Type
  8516 ;;                  1  [STACK] void 
  8517 ;; Registers used:
  8518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8519 ;; Tracked objects:
  8520 ;;		On entry : 3F/0
  8521 ;;		On exit  : 0/0
  8522 ;;		Unchanged: 0/0
  8523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8528 ;;Total ram usage:        0 bytes
  8529 ;; Hardware stack levels used:    1
  8530 ;; Hardware stack levels required when called:   15
  8531 ;; This function calls:
  8532 ;;		Nothing
  8533 ;; This function is called by:
  8534 ;;		_main
  8535 ;; This function uses a reentrant model
  8536 ;;
  8537                           
  8538                           	psect	text27
  8539  01B374                     __ptext27:
  8540                           	opt callstack 0
  8541  01B374                     _clear_hid_pflags:
  8542                           	opt callstack 15
  8543                           
  8544                           ;hid.c: 51: void clear_hid_pflags(H_data* h);hid.c: 52: {;hid.c: 53:  h->select_p = SW_O
      +                          FF;
  8545                           ;stkvar	_h @ sp[(0)+-1]
  8546                           
  8547                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8548                           ;incstack = 0
  8549  01B374  0EFF               	movlw	-1
  8550  01B376  50E3               	movf	plusw1,w,c
  8551  01B378  6ED9               	movwf	fsr2l,c
  8552  01B37A  6ADA               	clrf	fsr2h,c
  8553  01B37C  0E03               	movlw	3
  8554  01B37E  26D9               	addwf	fsr2l,f,c
  8555  01B380  0E00               	movlw	0
  8556  01B382  6EDF               	movwf	indf2,c
  8557                           
  8558                           ;hid.c: 54:  h->enter_p = SW_OFF;
  8559                           ;stkvar	_h @ sp[(0)+-1]
  8560  01B384  0EFF               	movlw	-1
  8561  01B386  50E3               	movf	plusw1,w,c
  8562  01B388  6ED9               	movwf	fsr2l,c
  8563  01B38A  6ADA               	clrf	fsr2h,c
  8564  01B38C  0E05               	movlw	5
  8565  01B38E  26D9               	addwf	fsr2l,f,c
  8566  01B390  0E00               	movlw	0
  8567  01B392  6EDF               	movwf	indf2,c
  8568                           
  8569                           ; _clear_hid_pflags: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8570  01B394  52E5               	movf	postdec1,f,c
  8571  01B396  0012               	return		;funcret
  8572  01B398                     __end_of_clear_hid_pflags:
  8573                           	opt callstack 0
  8574                           
  8575 ;; *************** function _check_help *****************
  8576 ;; Defined at:
  8577 ;;		line 40 in file "mconfig.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;  flipper         1  [STACK] const _Bool 
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;  estatus         1    0        _Bool 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1  [STACK] _Bool 
  8584 ;; Registers used:
  8585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8586 ;; Tracked objects:
  8587 ;;		On entry : 3F/2
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8595 ;;Total ram usage:        0 bytes
  8596 ;; Hardware stack levels used:    1
  8597 ;; Hardware stack levels required when called:   27
  8598 ;; This function calls:
  8599 ;;		_StartTimer
  8600 ;;		_TimerDone
  8601 ;;		_display_help
  8602 ;;		_display_info
  8603 ;;		_get_vterm_ptr
  8604 ;;		_help_button
  8605 ;;		_mode_lamp_bright
  8606 ;;		_mode_lamp_dim
  8607 ;;		_set_display_info
  8608 ;;		_set_temp_display_help
  8609 ;;		_set_vterm
  8610 ;;		_sprintf
  8611 ;;		_update_lcd
  8612 ;;		_vterm_dump
  8613 ;; This function is called by:
  8614 ;;		_main
  8615 ;; This function uses a reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text28
  8619  0177A2                     __ptext28:
  8620                           	opt callstack 0
  8621  0177A2                     _check_help:
  8622                           	opt callstack 3
  8623                           
  8624                           ;mconfig.c: 46:  if (help_button() && display_info() != DIS_HELP) {
  8625                           
  8626                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8627                           ;incstack = 0
  8628  0177A2  ECCA  F0D6         	call	_help_button	;wreg free
  8629  0177A6  5028               	movf	btemp^0,w,c
  8630  0177A8  B4D8               	btfsc	status,2,c
  8631  0177AA  D0D0               	goto	l12516
  8632  0177AC  EC6F  F0DB         	call	_display_info	;wreg free
  8633  0177B0  0428               	decf	btemp^0,w,c
  8634  0177B2  B4D8               	btfsc	status,2,c
  8635  0177B4  D0CB               	goto	l12516
  8636                           
  8637                           ;mconfig.c: 47:   StartTimer(TMR_FLIPPER, 1500);
  8638  0177B6  0EDC               	movlw	220
  8639  0177B8  6EE6               	movwf	postinc1,c
  8640  0177BA  0E05               	movlw	5
  8641  0177BC  6EE6               	movwf	postinc1,c
  8642  0177BE  0E0B               	movlw	11
  8643  0177C0  6EE6               	movwf	postinc1,c
  8644  0177C2  EC0E  F0D6         	call	_StartTimer	;wreg free
  8645                           
  8646                           ;mconfig.c: 48:   if (V.debug)
  8647  0177C6  0102               	movlb	2	; () banked
  8648  0177C8  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  8649                           
  8650                           ; BSR set to: 2
  8651                           ;mconfig.c: 49:    vterm_dump();
  8652  0177CA  ECB8  F0C6         	call	_vterm_dump	;wreg free
  8653                           
  8654                           ;mconfig.c: 51:   set_vterm(1);
  8655  0177CE  0E01               	movlw	1
  8656  0177D0  6EE6               	movwf	postinc1,c
  8657  0177D2  EC56  F0DA         	call	_set_vterm	;wreg free
  8658                           
  8659                           ;mconfig.c: 52:   set_temp_display_help(display_info());
  8660  0177D6  EC6F  F0DB         	call	_display_info	;wreg free
  8661  0177DA  5028               	movf	btemp^0,w,c
  8662  0177DC  6EE6               	movwf	postinc1,c
  8663  0177DE  EC25  F0DB         	call	_set_temp_display_help	;wreg free
  8664                           
  8665                           ; BSR set to: 2
  8666                           ;mconfig.c: 53:   set_display_info(DIS_HELP);
  8667  0177E2  0E01               	movlw	1
  8668  0177E4  6EE6               	movwf	postinc1,c
  8669  0177E6  EC65  F0DA         	call	_set_display_info	;wreg free
  8670                           
  8671                           ;mconfig.c: 54:   if (flipper) {
  8672                           ;stkvar	_flipper @ sp[(0)+-1]
  8673  0177EA  0EFF               	movlw	-1
  8674  0177EC  50E3               	movf	plusw1,w,c
  8675  0177EE  B4D8               	btfsc	status,2,c
  8676  0177F0  D019               	goto	l12502
  8677                           
  8678                           ;mconfig.c: 55:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  8679  0177F2  0EB1               	movlw	low STR_46
  8680  0177F4  6EE6               	movwf	postinc1,c
  8681  0177F6  0EFF               	movlw	high STR_46
  8682  0177F8  6EE6               	movwf	postinc1,c
  8683  0177FA  0E01               	movlw	low STR_48
  8684  0177FC  6EE6               	movwf	postinc1,c
  8685  0177FE  0EFE               	movlw	high STR_48
  8686  017800  6EE6               	movwf	postinc1,c
  8687  017802  0E01               	movlw	1
  8688  017804  6EE6               	movwf	postinc1,c
  8689  017806  0E00               	movlw	0
  8690  017808  6EE6               	movwf	postinc1,c
  8691  01780A  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8692  01780E  0060  F0A3  FFE6   	movff	btemp,postinc1
  8693  017814  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8694  01781A  0E06               	movlw	6
  8695  01781C  6EE6               	movwf	postinc1,c
  8696  01781E  EC06  F0CA         	call	_sprintf	;wreg free
  8697                           
  8698                           ;mconfig.c: 56:   } else {
  8699  017822  D018               	goto	l1664
  8700  017824                     l12502:
  8701                           
  8702                           ;mconfig.c: 57:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  8703  017824  0EC7               	movlw	low STR_47
  8704  017826  6EE6               	movwf	postinc1,c
  8705  017828  0EFF               	movlw	high STR_47
  8706  01782A  6EE6               	movwf	postinc1,c
  8707  01782C  0E01               	movlw	low STR_48
  8708  01782E  6EE6               	movwf	postinc1,c
  8709  017830  0EFE               	movlw	high STR_48
  8710  017832  6EE6               	movwf	postinc1,c
  8711  017834  0E01               	movlw	1
  8712  017836  6EE6               	movwf	postinc1,c
  8713  017838  0E00               	movlw	0
  8714  01783A  6EE6               	movwf	postinc1,c
  8715  01783C  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8716  017840  0060  F0A3  FFE6   	movff	btemp,postinc1
  8717  017846  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8718  01784C  0E06               	movlw	6
  8719  01784E  6EE6               	movwf	postinc1,c
  8720  017850  EC06  F0CA         	call	_sprintf	;wreg free
  8721  017854                     l1664:
  8722                           
  8723                           ; BSR set to: 0
  8724                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  8725  017854  0102               	movlb	2	; () banked
  8726  017856  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8727  017858  32E8               	rrcf	wreg,f,c
  8728  01785A  32E8               	rrcf	wreg,f,c
  8729  01785C  0B03               	andlw	3
  8730  01785E  0D24               	mullw	36
  8731  017860  0E12               	movlw	18
  8732  017862  26F3               	addwf	243,f,c
  8733  017864  0E00               	movlw	0
  8734  017866  22F4               	addwfc	244,f,c
  8735  017868  0E4B               	movlw	low _T
  8736  01786A  6E32               	movwf	(btemp+10)^0,c
  8737  01786C  0EFB               	movlw	high _T
  8738  01786E  6E33               	movwf	(btemp+11)^0,c
  8739  017870  50F3               	movf	243,w,c
  8740  017872  2632               	addwf	(btemp+10)^0,f,c
  8741  017874  50F4               	movf	244,w,c
  8742  017876  2233               	addwfc	(btemp+11)^0,f,c
  8743  017878  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  8744  01787E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  8745  017884  0EBD               	movlw	low STR_50
  8746  017886  6EE6               	movwf	postinc1,c
  8747  017888  0EFF               	movlw	high STR_50
  8748  01788A  6EE6               	movwf	postinc1,c
  8749  01788C  0E01               	movlw	1
  8750  01788E  6EE6               	movwf	postinc1,c
  8751  017890  0E01               	movlw	1
  8752  017892  6EE6               	movwf	postinc1,c
  8753  017894  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8754  017898  0060  F0A3  FFE6   	movff	btemp,postinc1
  8755  01789E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8756  0178A4  0E06               	movlw	6
  8757  0178A6  6EE6               	movwf	postinc1,c
  8758  0178A8  EC06  F0CA         	call	_sprintf	;wreg free
  8759                           
  8760                           ;mconfig.c: 60:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  8761  0178AC  0102               	movlb	2	; () banked
  8762  0178AE  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  8763  0178B0  32E8               	rrcf	wreg,f,c
  8764  0178B2  32E8               	rrcf	wreg,f,c
  8765  0178B4  0B03               	andlw	3
  8766  0178B6  0D24               	mullw	36
  8767  0178B8  0E4B               	movlw	low _T
  8768  0178BA  6E32               	movwf	(btemp+10)^0,c
  8769  0178BC  0EFB               	movlw	high _T
  8770  0178BE  6E33               	movwf	(btemp+11)^0,c
  8771  0178C0  50F3               	movf	243,w,c
  8772  0178C2  2632               	addwf	(btemp+10)^0,f,c
  8773  0178C4  50F4               	movf	244,w,c
  8774  0178C6  2233               	addwfc	(btemp+11)^0,f,c
  8775  0178C8  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  8776  0178CE  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  8777  0178D4  0EBD               	movlw	low STR_50
  8778  0178D6  6EE6               	movwf	postinc1,c
  8779  0178D8  0EFF               	movlw	high STR_50
  8780  0178DA  6EE6               	movwf	postinc1,c
  8781  0178DC  0E01               	movlw	1
  8782  0178DE  6EE6               	movwf	postinc1,c
  8783  0178E0  0E02               	movlw	2
  8784  0178E2  6EE6               	movwf	postinc1,c
  8785  0178E4  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8786  0178E8  0060  F0A3  FFE6   	movff	btemp,postinc1
  8787  0178EE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8788  0178F4  0E06               	movlw	6
  8789  0178F6  6EE6               	movwf	postinc1,c
  8790  0178F8  EC06  F0CA         	call	_sprintf	;wreg free
  8791                           
  8792                           ; BSR set to: 0
  8793                           ;mconfig.c: 61:   V.help_id++;
  8794  0178FC  EE20  F29B         	lfsr	2,_V+155	;volatile
  8795  017900  38DF               	swapf	223,w,c
  8796  017902  6E33               	movwf	(btemp+11)^0,c
  8797  017904  3233               	rrcf	(btemp+11)^0,f,c
  8798  017906  3033               	rrcf	(btemp+11)^0,w,c
  8799  017908  0B03               	andlw	3
  8800  01790A  6E33               	movwf	(btemp+11)^0,c
  8801  01790C  2A33               	incf	(btemp+11)^0,f,c
  8802  01790E  3A33               	swapf	(btemp+11)^0,f,c
  8803  017910  3633               	rlcf	(btemp+11)^0,f,c
  8804  017912  3633               	rlcf	(btemp+11)^0,f,c
  8805  017914  50DF               	movf	223,w,c
  8806  017916  1833               	xorwf	(btemp+11)^0,w,c
  8807  017918  0B3F               	andlw	-193
  8808  01791A  1833               	xorwf	(btemp+11)^0,w,c
  8809  01791C  6EDF               	movwf	223,c
  8810                           
  8811                           ; BSR set to: 0
  8812                           ;mconfig.c: 62:   StartTimer(TMR_HELPDIS, 3000);
  8813  01791E  0EB8               	movlw	184
  8814  017920  6EE6               	movwf	postinc1,c
  8815  017922  0E0B               	movlw	11
  8816  017924  6EE6               	movwf	postinc1,c
  8817  017926  0E09               	movlw	9
  8818  017928  6EE6               	movwf	postinc1,c
  8819  01792A  EC0E  F0D6         	call	_StartTimer	;wreg free
  8820                           
  8821                           ;mconfig.c: 63:   StartTimer(TMR_INFO, 3000);
  8822  01792E  0EB8               	movlw	184
  8823  017930  6EE6               	movwf	postinc1,c
  8824  017932  0E0B               	movlw	11
  8825  017934  6EE6               	movwf	postinc1,c
  8826  017936  0E07               	movlw	7
  8827  017938  6EE6               	movwf	postinc1,c
  8828  01793A  EC0E  F0D6         	call	_StartTimer	;wreg free
  8829                           
  8830                           ;mconfig.c: 64:   mode_lamp_bright();
  8831  01793E  EC34  F0DB         	call	_mode_lamp_bright	;wreg free
  8832                           
  8833                           ;mconfig.c: 65:   update_lcd(1);
  8834  017942  0E01               	movlw	1
  8835  017944  6EE6               	movwf	postinc1,c
  8836  017946  ECF7  F0C8         	call	_update_lcd	;wreg free
  8837                           
  8838                           ;mconfig.c: 67:  } else {
  8839  01794A  D032               	goto	l1665
  8840  01794C                     l12516:
  8841                           
  8842                           ;mconfig.c: 68:   if (TimerDone(TMR_HELPDIS)) {
  8843  01794C  0E09               	movlw	9
  8844  01794E  6EE6               	movwf	postinc1,c
  8845  017950  EC8F  F0D8         	call	_TimerDone	;wreg free
  8846  017954  5028               	movf	btemp^0,w,c
  8847  017956  B4D8               	btfsc	status,2,c
  8848  017958  D02B               	goto	l1665
  8849                           
  8850                           ;mconfig.c: 69:    set_vterm(0);
  8851  01795A  0E00               	movlw	0
  8852  01795C  6EE6               	movwf	postinc1,c
  8853  01795E  EC56  F0DA         	call	_set_vterm	;wreg free
  8854                           
  8855                           ;mconfig.c: 70:    V.help = 0;
  8856  017962  0102               	movlb	2	; () banked
  8857  017964  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  8858                           
  8859                           ; BSR set to: 2
  8860                           ;mconfig.c: 71:    set_display_info(display_help());
  8861  017966  EC73  F0DB         	call	_display_help	;wreg free
  8862  01796A  5028               	movf	btemp^0,w,c
  8863  01796C  6EE6               	movwf	postinc1,c
  8864  01796E  EC65  F0DA         	call	_set_display_info	;wreg free
  8865                           
  8866                           ;mconfig.c: 72:    mode_lamp_dim(V.mode_pwm);
  8867  017972  0060  FA57  FFE6   	movff	_V+149,postinc1
  8868  017978  0060  FA5B  FFE6   	movff	_V+150,postinc1
  8869  01797E  ECC9  F0DA         	call	_mode_lamp_dim	;wreg free
  8870                           
  8871                           ;mconfig.c: 73:    if (TimerDone(TMR_FLIPPER)) {
  8872  017982  0E0B               	movlw	11
  8873  017984  6EE6               	movwf	postinc1,c
  8874  017986  EC8F  F0D8         	call	_TimerDone	;wreg free
  8875  01798A  5028               	movf	btemp^0,w,c
  8876  01798C  B4D8               	btfsc	status,2,c
  8877  01798E  D010               	goto	l1665
  8878                           
  8879                           ;mconfig.c: 74:     V.flipper = !V.flipper;
  8880  017990  0102               	movlb	2	; () banked
  8881  017992  51AB               	movf	(_V+171)& (0+255),w,b	;volatile
  8882  017994  A4D8               	btfss	status,2,c
  8883  017996  D002               	goto	u12030
  8884  017998  0E01               	movlw	1
  8885  01799A  D001               	goto	u12040
  8886  01799C                     u12030:
  8887  01799C  0E00               	movlw	0
  8888  01799E                     u12040:
  8889  01799E  6FAB               	movwf	(_V+171)& (0+255),b	;volatile
  8890                           
  8891                           ; BSR set to: 2
  8892                           ;mconfig.c: 75:     StartTimer(TMR_FLIPPER, 1500);
  8893  0179A0  0EDC               	movlw	220
  8894  0179A2  6EE6               	movwf	postinc1,c
  8895  0179A4  0E05               	movlw	5
  8896  0179A6  6EE6               	movwf	postinc1,c
  8897  0179A8  0E0B               	movlw	11
  8898  0179AA  6EE6               	movwf	postinc1,c
  8899  0179AC  EC0E  F0D6         	call	_StartTimer	;wreg free
  8900  0179B0                     l1665:
  8901                           
  8902                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  8903  0179B0  52E5               	movf	postdec1,f,c
  8904  0179B2  0012               	return		;funcret
  8905  0179B4                     __end_of_check_help:
  8906                           	opt callstack 0
  8907                           
  8908 ;; *************** function _vterm_dump *****************
  8909 ;; Defined at:
  8910 ;;		line 121 in file "mconfig.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;		None
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;		None
  8915 ;; Return value:  Size  Location     Type
  8916 ;;                  1  [STACK] void 
  8917 ;; Registers used:
  8918 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  8919 ;; Tracked objects:
  8920 ;;		On entry : 3F/2
  8921 ;;		On exit  : 0/0
  8922 ;;		Unchanged: 0/0
  8923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8924 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8925 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8927 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8928 ;;Total ram usage:        0 bytes
  8929 ;; Hardware stack levels used:    1
  8930 ;; Hardware stack levels required when called:   26
  8931 ;; This function calls:
  8932 ;;		_WaitMs
  8933 ;;		_eaDogM_WriteStringAtPos
  8934 ;;		_get_vterm_ptr
  8935 ;;		_sprintf
  8936 ;;		_wait_lcd_done
  8937 ;; This function is called by:
  8938 ;;		_check_help
  8939 ;; This function uses a reentrant model
  8940 ;;
  8941                           
  8942                           	psect	text29
  8943  018D70                     __ptext29:
  8944                           	opt callstack 0
  8945  018D70                     _vterm_dump:
  8946                           	opt callstack 3
  8947                           
  8948                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  8949                           
  8950                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8951                           ;incstack = 0
  8952  018D70  0E01               	movlw	1
  8953  018D72  6EE6               	movwf	postinc1,c
  8954  018D74  0E00               	movlw	0
  8955  018D76  6EE6               	movwf	postinc1,c
  8956  018D78  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8957  018D7C  0060  F0A3  FFE6   	movff	btemp,postinc1
  8958  018D82  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8959  018D88  0E00               	movlw	0
  8960  018D8A  6EE6               	movwf	postinc1,c
  8961  018D8C  0E00               	movlw	0
  8962  018D8E  6EE6               	movwf	postinc1,c
  8963  018D90  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  8964  018D94  0060  F0A3  FFE6   	movff	btemp,postinc1
  8965  018D9A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  8966  018DA0  0E93               	movlw	low STR_52
  8967  018DA2  6EE6               	movwf	postinc1,c
  8968  018DA4  0EFF               	movlw	high STR_52
  8969  018DA6  6EE6               	movwf	postinc1,c
  8970  018DA8  0E01               	movlw	low (_V+1)
  8971  018DAA  6EE6               	movwf	postinc1,c
  8972  018DAC  0E02               	movlw	high (_V+1)
  8973  018DAE  6EE6               	movwf	postinc1,c
  8974  018DB0  0E08               	movlw	8
  8975  018DB2  6EE6               	movwf	postinc1,c
  8976  018DB4  EC06  F0CA         	call	_sprintf	;wreg free
  8977                           
  8978                           ; BSR set to: 0
  8979                           ;mconfig.c: 124:  wait_lcd_done();
  8980  018DB8  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  8984  018DBC  0E01               	movlw	low (_V+1)
  8985  018DBE  6EE6               	movwf	postinc1,c
  8986  018DC0  0E02               	movlw	high (_V+1)
  8987  018DC2  6EE6               	movwf	postinc1,c
  8988  018DC4  0E00               	movlw	0
  8989  018DC6  6EE6               	movwf	postinc1,c
  8990  018DC8  0E00               	movlw	0
  8991  018DCA  6EE6               	movwf	postinc1,c
  8992  018DCC  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  8993                           
  8994                           ; BSR set to: 59
  8995                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  8996  018DD0  0E01               	movlw	1
  8997  018DD2  6EE6               	movwf	postinc1,c
  8998  018DD4  0E01               	movlw	1
  8999  018DD6  6EE6               	movwf	postinc1,c
  9000  018DD8  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  9001  018DDC  0060  F0A3  FFE6   	movff	btemp,postinc1
  9002  018DE2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9003  018DE8  0E00               	movlw	0
  9004  018DEA  6EE6               	movwf	postinc1,c
  9005  018DEC  0E01               	movlw	1
  9006  018DEE  6EE6               	movwf	postinc1,c
  9007  018DF0  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  9008  018DF4  0060  F0A3  FFE6   	movff	btemp,postinc1
  9009  018DFA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9010  018E00  0E93               	movlw	low STR_52
  9011  018E02  6EE6               	movwf	postinc1,c
  9012  018E04  0EFF               	movlw	high STR_52
  9013  018E06  6EE6               	movwf	postinc1,c
  9014  018E08  0E01               	movlw	low (_V+1)
  9015  018E0A  6EE6               	movwf	postinc1,c
  9016  018E0C  0E02               	movlw	high (_V+1)
  9017  018E0E  6EE6               	movwf	postinc1,c
  9018  018E10  0E08               	movlw	8
  9019  018E12  6EE6               	movwf	postinc1,c
  9020  018E14  EC06  F0CA         	call	_sprintf	;wreg free
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;mconfig.c: 127:  wait_lcd_done();
  9024  018E18  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9025                           
  9026                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  9027  018E1C  0E01               	movlw	low (_V+1)
  9028  018E1E  6EE6               	movwf	postinc1,c
  9029  018E20  0E02               	movlw	high (_V+1)
  9030  018E22  6EE6               	movwf	postinc1,c
  9031  018E24  0E00               	movlw	0
  9032  018E26  6EE6               	movwf	postinc1,c
  9033  018E28  0E01               	movlw	1
  9034  018E2A  6EE6               	movwf	postinc1,c
  9035  018E2C  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9036                           
  9037                           ;mconfig.c: 129:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  9038  018E30  0E01               	movlw	1
  9039  018E32  6EE6               	movwf	postinc1,c
  9040  018E34  0E02               	movlw	2
  9041  018E36  6EE6               	movwf	postinc1,c
  9042  018E38  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  9043  018E3C  0060  F0A3  FFE6   	movff	btemp,postinc1
  9044  018E42  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9045  018E48  0E00               	movlw	0
  9046  018E4A  6EE6               	movwf	postinc1,c
  9047  018E4C  0E02               	movlw	2
  9048  018E4E  6EE6               	movwf	postinc1,c
  9049  018E50  ECE5  F0D7         	call	_get_vterm_ptr	;wreg free
  9050  018E54  0060  F0A3  FFE6   	movff	btemp,postinc1
  9051  018E5A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9052  018E60  0E93               	movlw	low STR_52
  9053  018E62  6EE6               	movwf	postinc1,c
  9054  018E64  0EFF               	movlw	high STR_52
  9055  018E66  6EE6               	movwf	postinc1,c
  9056  018E68  0E01               	movlw	low (_V+1)
  9057  018E6A  6EE6               	movwf	postinc1,c
  9058  018E6C  0E02               	movlw	high (_V+1)
  9059  018E6E  6EE6               	movwf	postinc1,c
  9060  018E70  0E08               	movlw	8
  9061  018E72  6EE6               	movwf	postinc1,c
  9062  018E74  EC06  F0CA         	call	_sprintf	;wreg free
  9063                           
  9064                           ; BSR set to: 0
  9065                           ;mconfig.c: 130:  wait_lcd_done();
  9066  018E78  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9067                           
  9068                           ; BSR set to: 0
  9069                           ;mconfig.c: 131:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  9070  018E7C  0E01               	movlw	low (_V+1)
  9071  018E7E  6EE6               	movwf	postinc1,c
  9072  018E80  0E02               	movlw	high (_V+1)
  9073  018E82  6EE6               	movwf	postinc1,c
  9074  018E84  0E00               	movlw	0
  9075  018E86  6EE6               	movwf	postinc1,c
  9076  018E88  0E02               	movlw	2
  9077  018E8A  6EE6               	movwf	postinc1,c
  9078  018E8C  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9079                           
  9080                           ; BSR set to: 59
  9081                           ;mconfig.c: 132:  WaitMs(3000);
  9082  018E90  0EB8               	movlw	184
  9083  018E92  6EE6               	movwf	postinc1,c
  9084  018E94  0E0B               	movlw	11
  9085  018E96  6EE6               	movwf	postinc1,c
  9086  018E98  EC01  F0D7         	call	_WaitMs	;wreg free
  9087                           
  9088                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9089  018E9C  0012               	return		;funcret
  9090  018E9E                     __end_of_vterm_dump:
  9091                           	opt callstack 0
  9092                           
  9093 ;; *************** function _sprintf *****************
  9094 ;; Defined at:
  9095 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  s               2  [STACK] PTR unsigned char 
  9098 ;;		 -> D.lcd(480), D(482), port_data(512), V(189), 
  9099 ;;  fmt             2  [STACK] PTR const unsigned char 
  9100 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
  9101 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
  9102 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
  9103 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
  9104 ;;		 -> STR_48(19), STR_42(17), STR_41(16), STR_40(16), 
  9105 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
  9106 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
  9107 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
  9108 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
  9109 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
  9110 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
  9111 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
  9112 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
  9113 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
  9114 ;;		 -> STR_2(15), STR_1(17), 
  9115 ;; Auto vars:     Size  Location     Type
  9116 ;;  f               6  [STACK] struct _IO_FILE
  9117 ;;  ap              2  [STACK] PTR void [1]
  9118 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9119 ;;  ret             2    0        int 
  9120 ;; Return value:  Size  Location     Type
  9121 ;;                  2  [STACK] int 
  9122 ;; Registers used:
  9123 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9124 ;; Tracked objects:
  9125 ;;		On entry : 0/1
  9126 ;;		On exit  : 3F/0
  9127 ;;		Unchanged: 0/0
  9128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9133 ;;Total ram usage:        0 bytes
  9134 ;; Hardware stack levels used:    1
  9135 ;; Hardware stack levels required when called:   23
  9136 ;; This function calls:
  9137 ;;		_vfprintf
  9138 ;; This function is called by:
  9139 ;;		_main
  9140 ;;		_check_help
  9141 ;;		_vterm_dump
  9142 ;;		_calc_bsoc
  9143 ;; This function uses a reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text30
  9147  01940C                     __ptext30:
  9148                           	opt callstack 0
  9149  01940C                     _sprintf:
  9150                           	opt callstack 0
  9151                           
  9152                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9153  01940C  0E08               	movlw	8
  9154  01940E  26E1               	addwf	fsr1l,f,c
  9155  019410  0E00               	movlw	0
  9156  019412  22E2               	addwfc	fsr1h,f,c
  9157                           
  9158                           ;incstack = 0
  9159 ;; hardware stack exceeded
  9160  019414  0EFE               	movlw	254
  9161  019416  6E32               	movwf	(btemp+10)^0,c
  9162  019418  0EFF               	movlw	255
  9163  01941A  6E33               	movwf	(btemp+11)^0,c
  9164                           
  9165                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  9166  01941C  0EF5               	movlw	245
  9167  01941E  24E1               	addwf	fsr1l,w,c
  9168  019420  6E30               	movwf	(btemp+8)^0,c
  9169  019422  0EFF               	movlw	255
  9170  019424  20E2               	addwfc	fsr1h,w,c
  9171  019426  6E31               	movwf	(btemp+9)^0,c
  9172  019428  5032               	movf	(btemp+10)^0,w,c
  9173  01942A  2630               	addwf	(btemp+8)^0,f,c
  9174  01942C  5033               	movf	(btemp+11)^0,w,c
  9175  01942E  2231               	addwfc	(btemp+9)^0,f,c
  9176                           
  9177                           ;stkvar	_ap @ sp[(-8)+6]
  9178  019430  0EFF               	movlw	-1
  9179  019432  0060  F0C7  FFE3   	movff	btemp+9,plusw1
  9180  019438  0EFE               	movlw	-2
  9181  01943A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
  9182                           
  9183                           ;stkvar	_s @ sp[(-8)+-3]
  9184  019440  0EF5               	movlw	-11
  9185  019442  006F FF8C  F032    	movff	plusw1,btemp+10
  9186  019448  0EF6               	movlw	-10
  9187  01944A  006F FF8C  F033    	movff	plusw1,btemp+11
  9188                           
  9189                           ;stkvar	_f @ sp[(-8)+0]
  9190  019450  0EF9               	movlw	-7
  9191  019452  0060  F0CF  FFE3   	movff	btemp+11,plusw1
  9192  019458  0EF8               	movlw	-8
  9193  01945A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
  9194                           
  9195                           ;stkvar	_f @ sp[(-8)+0]
  9196  019460  0EFA               	movlw	250
  9197  019462  24E1               	addwf	fsr1l,w,c
  9198  019464  6ED9               	movwf	fsr2l,c
  9199  019466  0EFF               	movlw	255
  9200  019468  20E2               	addwfc	fsr1h,w,c
  9201  01946A  6EDA               	movwf	fsr2h,c
  9202  01946C  0E00               	movlw	0
  9203  01946E  6EDE               	movwf	postinc2,c
  9204  019470  0E00               	movlw	0
  9205  019472  6EDD               	movwf	postdec2,c
  9206                           
  9207                           ;stkvar	_f @ sp[(-8)+0]
  9208  019474  0EFC               	movlw	252
  9209  019476  24E1               	addwf	fsr1l,w,c
  9210  019478  6ED9               	movwf	fsr2l,c
  9211  01947A  0EFF               	movlw	255
  9212  01947C  20E2               	addwfc	fsr1h,w,c
  9213  01947E  6EDA               	movwf	fsr2h,c
  9214  019480  0E00               	movlw	0
  9215  019482  6EDE               	movwf	postinc2,c
  9216  019484  0E00               	movlw	0
  9217  019486  6EDD               	movwf	postdec2,c
  9218                           
  9219                           ;stkvar	_ap @ sp[(-8)+6]
  9220  019488  0EFE               	movlw	254
  9221  01948A  24E1               	addwf	fsr1l,w,c
  9222  01948C  6E28               	movwf	btemp^0,c
  9223  01948E  0EFF               	movlw	255
  9224  019490  20E2               	addwfc	fsr1h,w,c
  9225  019492  6E29               	movwf	(btemp+1)^0,c
  9226  019494  0060  F0A3  FFE6   	movff	btemp,postinc1
  9227  01949A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9228                           
  9229                           ;stkvar	_fmt @ sp[(-10)+-5]
  9230  0194A0  0EF1               	movlw	-15
  9231  0194A2  006F FF8F FFE6     	movff	plusw1,postinc1
  9232  0194A8  006F FF8F FFE6     	movff	plusw1,postinc1
  9233                           
  9234                           ;stkvar	_f @ sp[(-12)+0]
  9235  0194AE  0EF4               	movlw	244
  9236  0194B0  24E1               	addwf	fsr1l,w,c
  9237  0194B2  6E28               	movwf	btemp^0,c
  9238  0194B4  0EFF               	movlw	255
  9239  0194B6  20E2               	addwfc	fsr1h,w,c
  9240  0194B8  6E29               	movwf	(btemp+1)^0,c
  9241  0194BA  0060  F0A3  FFE6   	movff	btemp,postinc1
  9242  0194C0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
  9243  0194C6  EC4E  F0CE         	call	_vfprintf	;wreg free
  9244                           
  9245                           ; BSR set to: 0
  9246                           ;stkvar	_f @ sp[(-8)+0]
  9247  0194CA  0EFA               	movlw	250
  9248  0194CC  24E1               	addwf	fsr1l,w,c
  9249  0194CE  6ED9               	movwf	fsr2l,c
  9250  0194D0  0EFF               	movlw	255
  9251  0194D2  20E2               	addwfc	fsr1h,w,c
  9252  0194D4  6EDA               	movwf	fsr2h,c
  9253  0194D6  006F FF78  F032    	movff	postinc2,btemp+10
  9254  0194DC  006F FF74  F033    	movff	postdec2,btemp+11
  9255                           
  9256                           ;stkvar	_s @ sp[(-8)+-3]
  9257  0194E2  0EF5               	movlw	-11
  9258  0194E4  006F FF8C  F030    	movff	plusw1,btemp+8
  9259  0194EA  0EF6               	movlw	-10
  9260  0194EC  006F FF8C  F031    	movff	plusw1,btemp+9
  9261  0194F2  5032               	movf	(btemp+10)^0,w,c
  9262  0194F4  2430               	addwf	(btemp+8)^0,w,c
  9263  0194F6  6ED9               	movwf	fsr2l,c
  9264  0194F8  5033               	movf	(btemp+11)^0,w,c
  9265  0194FA  2031               	addwfc	(btemp+9)^0,w,c
  9266  0194FC  6EDA               	movwf	fsr2h,c
  9267  0194FE  0E00               	movlw	0
  9268  019500  6EDF               	movwf	indf2,c
  9269                           
  9270                           ; BSR set to: 0
  9271                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 56, args
      +                          ize = 4, vargsize = 0
  9272  019502  0EF8               	movlw	248
  9273  019504  26E1               	addwf	fsr1l,f,c
  9274  019506  0EFF               	movlw	255
  9275  019508  22E2               	addwfc	fsr1h,f,c
  9276  01950A  52E5               	movf	postdec1,f,c
  9277  01950C  50E7               	movf	indf1,w,c
  9278  01950E  5EE1               	subwf	fsr1l,f,c
  9279  019510  0E00               	movlw	0
  9280  019512  5AE2               	subwfb	fsr1h,f,c
  9281  019514  0012               	return		;funcret
  9282  019516                     __end_of_sprintf:
  9283                           	opt callstack 0
  9284                           
  9285 ;; *************** function _get_vterm_ptr *****************
  9286 ;; Defined at:
  9287 ;;		line 116 in file "mconfig.c"
  9288 ;; Parameters:    Size  Location     Type
  9289 ;;  line            1  [STACK] const unsigned char 
  9290 ;;  vterm           1  [STACK] const unsigned char 
  9291 ;; Auto vars:     Size  Location     Type
  9292 ;;		None
  9293 ;; Return value:  Size  Location     Type
  9294 ;;                  2  [STACK] PTR unsigned char 
  9295 ;; Registers used:
  9296 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  9297 ;; Tracked objects:
  9298 ;;		On entry : 0/1
  9299 ;;		On exit  : 0/0
  9300 ;;		Unchanged: 0/0
  9301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9306 ;;Total ram usage:        0 bytes
  9307 ;; Hardware stack levels used:    1
  9308 ;; Hardware stack levels required when called:   15
  9309 ;; This function calls:
  9310 ;;		Nothing
  9311 ;; This function is called by:
  9312 ;;		_main
  9313 ;;		_check_help
  9314 ;;		_vterm_dump
  9315 ;; This function uses a reentrant model
  9316 ;;
  9317                           
  9318                           	psect	text31
  9319  01AFCA                     __ptext31:
  9320                           	opt callstack 0
  9321  01AFCA                     _get_vterm_ptr:
  9322                           	opt callstack 15
  9323                           
  9324                           ;mconfig.c: 116: char * get_vterm_ptr(const uint8_t line, const uint8_t vterm);mconfig.c
      +                          : 117: {;mconfig.c: 118:  return D.lcd[vterm & 0x03][line & 0x03];
  9325                           ;stkvar	_vterm @ sp[(0)+-2]
  9326                           
  9327                           ; BSR set to: 0
  9328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9329                           ;incstack = 0
  9330  01AFCA  0EFE               	movlw	-2
  9331  01AFCC  50E3               	movf	plusw1,w,c
  9332  01AFCE  0B03               	andlw	3
  9333  01AFD0  0D78               	mullw	120
  9334  01AFD2  0EFF               	movlw	low _D
  9335  01AFD4  6E28               	movwf	btemp^0,c
  9336  01AFD6  0E07               	movlw	high _D
  9337  01AFD8  6E29               	movwf	(btemp+1)^0,c
  9338  01AFDA  50F3               	movf	243,w,c
  9339  01AFDC  2628               	addwf	btemp^0,f,c
  9340  01AFDE  50F4               	movf	244,w,c
  9341  01AFE0  2229               	addwfc	(btemp+1)^0,f,c
  9342                           
  9343                           ;stkvar	_line @ sp[(0)+-1]
  9344  01AFE2  0EFF               	movlw	-1
  9345  01AFE4  50E3               	movf	plusw1,w,c
  9346  01AFE6  0B03               	andlw	3
  9347  01AFE8  0D28               	mullw	40
  9348  01AFEA  50F3               	movf	243,w,c
  9349  01AFEC  2628               	addwf	btemp^0,f,c
  9350  01AFEE  50F4               	movf	244,w,c
  9351  01AFF0  2229               	addwfc	(btemp+1)^0,f,c
  9352                           
  9353                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9354  01AFF2  52E5               	movf	postdec1,f,c
  9355  01AFF4  52E5               	movf	postdec1,f,c
  9356  01AFF6  0012               	return		;funcret
  9357  01AFF8                     __end_of_get_vterm_ptr:
  9358                           	opt callstack 0
  9359                           
  9360 ;; *************** function _WaitMs *****************
  9361 ;; Defined at:
  9362 ;;		line 32 in file "timers.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  numMilliseco    2  [STACK] const unsigned short 
  9365 ;; Auto vars:     Size  Location     Type
  9366 ;;		None
  9367 ;; Return value:  Size  Location     Type
  9368 ;;                  1  [STACK] void 
  9369 ;; Registers used:
  9370 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  9371 ;; Tracked objects:
  9372 ;;		On entry : 0/2
  9373 ;;		On exit  : 0/0
  9374 ;;		Unchanged: 0/0
  9375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9376 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9377 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9378 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9379 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9380 ;;Total ram usage:        0 bytes
  9381 ;; Hardware stack levels used:    1
  9382 ;; Hardware stack levels required when called:   16
  9383 ;; This function calls:
  9384 ;;		_StartTimer
  9385 ;;		_TimerDone
  9386 ;; This function is called by:
  9387 ;;		_main
  9388 ;;		_vterm_dump
  9389 ;; This function uses a reentrant model
  9390 ;;
  9391                           
  9392                           	psect	text32
  9393  01AE02                     __ptext32:
  9394                           	opt callstack 0
  9395  01AE02                     _WaitMs:
  9396                           	opt callstack 12
  9397                           
  9398                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  9399                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  9400                           
  9401                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9402                           ;incstack = 0
  9403  01AE02  0EFE               	movlw	-2
  9404  01AE04  006F FF8F FFE6     	movff	plusw1,postinc1
  9405  01AE0A  006F FF8F FFE6     	movff	plusw1,postinc1
  9406  01AE10  0E00               	movlw	0
  9407  01AE12  6EE6               	movwf	postinc1,c
  9408  01AE14  EC0E  F0D6         	call	_StartTimer	;wreg free
  9409                           
  9410                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9411  01AE18  D005               	goto	l9466
  9412  01AE1A                     l1596:
  9413                           
  9414                           ;timers.c: 36:   __nop();
  9415  01AE1A  F000               	nop	
  9416                           
  9417                           ;timers.c: 37:   __nop();
  9418  01AE1C  F000               	nop	
  9419                           
  9420                           ;timers.c: 38:   __nop();
  9421  01AE1E  F000               	nop	
  9422                           
  9423                           ;timers.c: 39:   __nop();
  9424  01AE20  F000               	nop	
  9425  01AE22  0004               	clrwdt		;# 
  9426  01AE24                     l9466:
  9427                           
  9428                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  9429  01AE24  0E00               	movlw	0
  9430  01AE26  6EE6               	movwf	postinc1,c
  9431  01AE28  EC8F  F0D8         	call	_TimerDone	;wreg free
  9432  01AE2C  5028               	movf	btemp^0,w,c
  9433  01AE2E  B4D8               	btfsc	status,2,c
  9434  01AE30  D7F4               	goto	l1596
  9435                           
  9436                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  9437  01AE32  52E5               	movf	postdec1,f,c
  9438  01AE34  52E5               	movf	postdec1,f,c
  9439  01AE36  0012               	return		;funcret
  9440  01AE38                     __end_of_WaitMs:
  9441                           	opt callstack 0
  9442                           
  9443 ;; *************** function _update_lcd *****************
  9444 ;; Defined at:
  9445 ;;		line 85 in file "mconfig.c"
  9446 ;; Parameters:    Size  Location     Type
  9447 ;;  vterm           1  [STACK] unsigned char 
  9448 ;; Auto vars:     Size  Location     Type
  9449 ;;		None
  9450 ;; Return value:  Size  Location     Type
  9451 ;;                  1  [STACK] unsigned char 
  9452 ;; Registers used:
  9453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9454 ;; Tracked objects:
  9455 ;;		On entry : 0/0
  9456 ;;		On exit  : 0/0
  9457 ;;		Unchanged: 0/0
  9458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9463 ;;Total ram usage:        0 bytes
  9464 ;; Hardware stack levels used:    1
  9465 ;; Hardware stack levels required when called:   26
  9466 ;; This function calls:
  9467 ;;		_eaDogM_WriteStringAtPos
  9468 ;;		_wait_lcd_done
  9469 ;; This function is called by:
  9470 ;;		_main
  9471 ;;		_check_help
  9472 ;; This function uses a reentrant model
  9473 ;;
  9474                           
  9475                           	psect	text33
  9476  0191EE                     __ptext33:
  9477                           	opt callstack 0
  9478  0191EE                     _update_lcd:
  9479                           	opt callstack 4
  9480                           
  9481                           ;mconfig.c: 85: uint8_t update_lcd(uint8_t vterm);mconfig.c: 86: {;mconfig.c: 87:  vterm
      +                           = vterm & 0x03;
  9482                           ;stkvar	_vterm @ sp[(0)+-1]
  9483                           
  9484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9485                           ;incstack = 0
  9486  0191EE  0EFF               	movlw	-1
  9487  0191F0  006F FF8C  F028    	movff	plusw1,btemp
  9488  0191F6  0E03               	movlw	3
  9489  0191F8  1628               	andwf	btemp^0,f,c
  9490  0191FA  0EFF               	movlw	-1
  9491  0191FC  0060  F0A3  FFE3   	movff	btemp,plusw1
  9492                           
  9493                           ;mconfig.c: 89:  if (D.vterm >= 1 && vterm == 0)
  9494  019202  EE22  F1DF         	lfsr	2,_D+480
  9495  019206  A0DF               	btfss	indf2,0,c
  9496  019208  D004               	goto	l12316
  9497                           
  9498                           ;stkvar	_vterm @ sp[(0)+-1]
  9499  01920A  0EFF               	movlw	-1
  9500  01920C  50E3               	movf	plusw1,w,c
  9501  01920E  B4D8               	btfsc	status,2,c
  9502  019210  D074               	goto	l1672
  9503  019212                     l12316:
  9504                           
  9505                           ;mconfig.c: 92:  D.lcd[vterm][0][16] = 0;
  9506                           ;stkvar	_vterm @ sp[(0)+-1]
  9507  019212  0EFF               	movlw	-1
  9508  019214  50E3               	movf	plusw1,w,c
  9509  019216  0D78               	mullw	120
  9510  019218  0E0F               	movlw	low (_D+16)
  9511  01921A  24F3               	addwf	243,w,c
  9512  01921C  6ED9               	movwf	fsr2l,c
  9513  01921E  0E08               	movlw	high (_D+16)
  9514  019220  20F4               	addwfc	prodh,w,c
  9515  019222  6EDA               	movwf	fsr2h,c
  9516  019224  0E00               	movlw	0
  9517  019226  6EDF               	movwf	indf2,c
  9518                           
  9519                           ;mconfig.c: 93:  D.lcd[vterm][1][16] = 0;
  9520                           ;stkvar	_vterm @ sp[(0)+-1]
  9521  019228  0EFF               	movlw	-1
  9522  01922A  50E3               	movf	plusw1,w,c
  9523  01922C  0D78               	mullw	120
  9524  01922E  0E37               	movlw	low (_D+56)
  9525  019230  24F3               	addwf	243,w,c
  9526  019232  6ED9               	movwf	fsr2l,c
  9527  019234  0E08               	movlw	high (_D+56)
  9528  019236  20F4               	addwfc	prodh,w,c
  9529  019238  6EDA               	movwf	fsr2h,c
  9530  01923A  0E00               	movlw	0
  9531  01923C  6EDF               	movwf	indf2,c
  9532                           
  9533                           ;mconfig.c: 94:  D.lcd[vterm][2][16] = 0;
  9534                           ;stkvar	_vterm @ sp[(0)+-1]
  9535  01923E  0EFF               	movlw	-1
  9536  019240  50E3               	movf	plusw1,w,c
  9537  019242  0D78               	mullw	120
  9538  019244  0E5F               	movlw	low (_D+96)
  9539  019246  24F3               	addwf	243,w,c
  9540  019248  6ED9               	movwf	fsr2l,c
  9541  01924A  0E08               	movlw	high (_D+96)
  9542  01924C  20F4               	addwfc	prodh,w,c
  9543  01924E  6EDA               	movwf	fsr2h,c
  9544  019250  0E00               	movlw	0
  9545  019252  6EDF               	movwf	indf2,c
  9546                           
  9547                           ;mconfig.c: 95:  wait_lcd_done();
  9548  019254  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9549                           
  9550                           ; BSR set to: 0
  9551                           ;mconfig.c: 96:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  9552                           ;stkvar	_vterm @ sp[(0)+-1]
  9553  019258  0EFF               	movlw	-1
  9554  01925A  50E3               	movf	plusw1,w,c
  9555  01925C  0D78               	mullw	120
  9556  01925E  0EFF               	movlw	low _D
  9557  019260  6E32               	movwf	(btemp+10)^0,c
  9558  019262  0E07               	movlw	high _D
  9559  019264  6E33               	movwf	(btemp+11)^0,c
  9560  019266  50F3               	movf	243,w,c
  9561  019268  2632               	addwf	(btemp+10)^0,f,c
  9562  01926A  50F4               	movf	244,w,c
  9563  01926C  2233               	addwfc	(btemp+11)^0,f,c
  9564  01926E  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9565  019274  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9566  01927A  0E00               	movlw	0
  9567  01927C  6EE6               	movwf	postinc1,c
  9568  01927E  0E00               	movlw	0
  9569  019280  6EE6               	movwf	postinc1,c
  9570  019282  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9571                           
  9572                           ; BSR set to: 59
  9573                           ;mconfig.c: 97:  wait_lcd_done();
  9574  019286  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;mconfig.c: 98:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  9578                           ;stkvar	_vterm @ sp[(0)+-1]
  9579  01928A  0EFF               	movlw	-1
  9580  01928C  50E3               	movf	plusw1,w,c
  9581  01928E  0D78               	mullw	120
  9582  019290  0EFF               	movlw	low _D
  9583  019292  6E32               	movwf	(btemp+10)^0,c
  9584  019294  0E07               	movlw	high _D
  9585  019296  6E33               	movwf	(btemp+11)^0,c
  9586  019298  0E28               	movlw	40
  9587  01929A  2632               	addwf	(btemp+10)^0,f,c
  9588  01929C  0E00               	movlw	0
  9589  01929E  2233               	addwfc	(btemp+11)^0,f,c
  9590  0192A0  50F3               	movf	243,w,c
  9591  0192A2  2632               	addwf	(btemp+10)^0,f,c
  9592  0192A4  50F4               	movf	244,w,c
  9593  0192A6  2233               	addwfc	(btemp+11)^0,f,c
  9594  0192A8  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9595  0192AE  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9596  0192B4  0E00               	movlw	0
  9597  0192B6  6EE6               	movwf	postinc1,c
  9598  0192B8  0E01               	movlw	1
  9599  0192BA  6EE6               	movwf	postinc1,c
  9600  0192BC  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9601                           
  9602                           ; BSR set to: 59
  9603                           ;mconfig.c: 99:  wait_lcd_done();
  9604  0192C0  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9605                           
  9606                           ; BSR set to: 0
  9607                           ;mconfig.c: 100:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  9608                           ;stkvar	_vterm @ sp[(0)+-1]
  9609  0192C4  0EFF               	movlw	-1
  9610  0192C6  50E3               	movf	plusw1,w,c
  9611  0192C8  0D78               	mullw	120
  9612  0192CA  0EFF               	movlw	low _D
  9613  0192CC  6E32               	movwf	(btemp+10)^0,c
  9614  0192CE  0E07               	movlw	high _D
  9615  0192D0  6E33               	movwf	(btemp+11)^0,c
  9616  0192D2  0E50               	movlw	80
  9617  0192D4  2632               	addwf	(btemp+10)^0,f,c
  9618  0192D6  0E00               	movlw	0
  9619  0192D8  2233               	addwfc	(btemp+11)^0,f,c
  9620  0192DA  50F3               	movf	243,w,c
  9621  0192DC  2632               	addwf	(btemp+10)^0,f,c
  9622  0192DE  50F4               	movf	244,w,c
  9623  0192E0  2233               	addwfc	(btemp+11)^0,f,c
  9624  0192E2  0060  F0CB  FFE6   	movff	btemp+10,postinc1
  9625  0192E8  0060  F0CF  FFE6   	movff	btemp+11,postinc1
  9626  0192EE  0E00               	movlw	0
  9627  0192F0  6EE6               	movwf	postinc1,c
  9628  0192F2  0E02               	movlw	2
  9629  0192F4  6EE6               	movwf	postinc1,c
  9630  0192F6  EC1C  F0D7         	call	_eaDogM_WriteStringAtPos	;wreg free
  9631  0192FA                     l1672:
  9632                           
  9633                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  9634  0192FA  52E5               	movf	postdec1,f,c
  9635  0192FC  0012               	return		;funcret
  9636  0192FE                     __end_of_update_lcd:
  9637                           	opt callstack 0
  9638                           
  9639 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9640 ;; Defined at:
  9641 ;;		line 278 in file "eadog.c"
  9642 ;; Parameters:    Size  Location     Type
  9643 ;;  r               1  [STACK] const unsigned char 
  9644 ;;  c               1  [STACK] const unsigned char 
  9645 ;;  strPtr          2  [STACK] PTR unsigned char 
  9646 ;;		 -> D.lcd(480), D(482), V(189), 
  9647 ;; Auto vars:     Size  Location     Type
  9648 ;;		None
  9649 ;; Return value:  Size  Location     Type
  9650 ;;                  1  [STACK] void 
  9651 ;; Registers used:
  9652 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9653 ;; Tracked objects:
  9654 ;;		On entry : 3F/0
  9655 ;;		On exit  : 3F/3B
  9656 ;;		Unchanged: 0/0
  9657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9662 ;;Total ram usage:        0 bytes
  9663 ;; Hardware stack levels used:    1
  9664 ;; Hardware stack levels required when called:   25
  9665 ;; This function calls:
  9666 ;;		_eaDogM_WriteString
  9667 ;;		_send_lcd_cmd_dma
  9668 ;; This function is called by:
  9669 ;;		_update_lcd
  9670 ;;		_vterm_dump
  9671 ;; This function uses a reentrant model
  9672 ;;
  9673                           
  9674                           	psect	text34
  9675  01AE38                     __ptext34:
  9676                           	opt callstack 0
  9677  01AE38                     _eaDogM_WriteStringAtPos:
  9678                           	opt callstack 4
  9679                           
  9680                           ;eadog.c: 278: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 279: {;eadog.c: 280:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9681                           ;stkvar	_c @ sp[(0)+-2]
  9682                           
  9683                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9684                           ;incstack = 0
  9685  01AE38  0EFE               	movlw	-2
  9686  01AE3A  006F FF8C  F033    	movff	plusw1,btemp+11
  9687                           
  9688                           ;stkvar	_r @ sp[(0)+-1]
  9689  01AE40  0EFF               	movlw	-1
  9690  01AE42  50E3               	movf	plusw1,w,c
  9691  01AE44  0D10               	mullw	16
  9692  01AE46  50F3               	movf	243,w,c
  9693  01AE48  2433               	addwf	(btemp+11)^0,w,c
  9694  01AE4A  0F80               	addlw	128
  9695  01AE4C  6EE6               	movwf	postinc1,c
  9696  01AE4E  EC31  F0D4         	call	_send_lcd_cmd_dma	;wreg free
  9697                           
  9698                           ;eadog.c: 281:  eaDogM_WriteString(strPtr);
  9699                           ;stkvar	_strPtr @ sp[(0)+-4]
  9700  01AE52  0EFC               	movlw	-4
  9701  01AE54  006F FF8F FFE6     	movff	plusw1,postinc1
  9702  01AE5A  006F FF8F FFE6     	movff	plusw1,postinc1
  9703  01AE60  ECF9  F0CE         	call	_eaDogM_WriteString	;wreg free
  9704                           
  9705                           ; BSR set to: 59
  9706                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  9707  01AE64  52E5               	movf	postdec1,f,c
  9708  01AE66  52E5               	movf	postdec1,f,c
  9709  01AE68  52E5               	movf	postdec1,f,c
  9710  01AE6A  52E5               	movf	postdec1,f,c
  9711  01AE6C  0012               	return		;funcret
  9712  01AE6E                     __end_of_eaDogM_WriteStringAtPos:
  9713                           	opt callstack 0
  9714                           
  9715 ;; *************** function _send_lcd_cmd_dma *****************
  9716 ;; Defined at:
  9717 ;;		line 220 in file "eadog.c"
  9718 ;; Parameters:    Size  Location     Type
  9719 ;;  strPtr          1  [STACK] unsigned char 
  9720 ;; Auto vars:     Size  Location     Type
  9721 ;;		None
  9722 ;; Return value:  Size  Location     Type
  9723 ;;                  1  [STACK] void 
  9724 ;; Registers used:
  9725 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9726 ;; Tracked objects:
  9727 ;;		On entry : 0/3D
  9728 ;;		On exit  : 3F/0
  9729 ;;		Unchanged: 0/0
  9730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9735 ;;Total ram usage:        0 bytes
  9736 ;; Hardware stack levels used:    1
  9737 ;; Hardware stack levels required when called:   24
  9738 ;; This function calls:
  9739 ;;		_printf
  9740 ;;		_ringBufS_flush
  9741 ;;		_start_lcd
  9742 ;;		_wait_lcd_done
  9743 ;;		_wait_lcd_set
  9744 ;; This function is called by:
  9745 ;;		_eaDogM_WriteCommand
  9746 ;;		_eaDogM_WriteStringAtPos
  9747 ;; This function uses a reentrant model
  9748 ;;
  9749                           
  9750                           	psect	text35
  9751  01A862                     __ptext35:
  9752                           	opt callstack 0
  9753  01A862                     _send_lcd_cmd_dma:
  9754                           	opt callstack 4
  9755                           
  9756                           ;eadog.c: 220: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 221: {;eadog.c: 223:  wait
      +                          _lcd_set();
  9757                           
  9758                           ; BSR set to: 59
  9759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9760                           ;incstack = 0
  9761  01A862  EC7E  F0DB         	call	_wait_lcd_set	;wreg free
  9762                           
  9763                           ; BSR set to: 0
  9764                           ;eadog.c: 225:  ringBufS_flush(spi_link.tx1a, 0);
  9765  01A866  0E00               	movlw	0
  9766  01A868  6EE6               	movwf	postinc1,c
  9767  01A86A  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
  9768  01A870  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
  9769  01A876  EC32  F0D0         	call	_ringBufS_flush	;wreg free
  9770  01A87A  92BC               	bcf	188,1,c	;volatile
  9771  01A87C  94BC               	bcf	188,2,c	;volatile
  9772                           
  9773                           ;eadog.c: 228:  DMA1CON0bits.EN = 0;
  9774  01A87E  013B               	movlb	59	; () banked
  9775  01A880  9FFC               	bcf	252,7,b	;volatile
  9776                           
  9777                           ; BSR set to: 59
  9778                           ;eadog.c: 229:  DMA1SSZ = 1;
  9779  01A882  0E00               	movlw	0
  9780  01A884  6FF8               	movwf	248,b	;volatile
  9781  01A886  0E01               	movlw	1
  9782  01A888  6FF7               	movwf	247,b	;volatile
  9783                           
  9784                           ; BSR set to: 59
  9785                           ;eadog.c: 230:  DMA1CON0bits.EN = 1;
  9786  01A88A  8FFC               	bsf	252,7,b	;volatile
  9787                           
  9788                           ; BSR set to: 59
  9789                           ;eadog.c: 231:  printf("%c", strPtr);
  9790                           ;stkvar	_strPtr @ sp[(0)+-1]
  9791  01A88C  0EFF               	movlw	-1
  9792  01A88E  50E3               	movf	plusw1,w,c
  9793  01A890  6EE6               	movwf	postinc1,c
  9794  01A892  0E00               	movlw	0
  9795  01A894  6EE6               	movwf	postinc1,c
  9796  01A896  0EF8               	movlw	low STR_44
  9797  01A898  6EE6               	movwf	postinc1,c
  9798  01A89A  0EFF               	movlw	high STR_44
  9799  01A89C  6EE6               	movwf	postinc1,c
  9800  01A89E  0E04               	movlw	4
  9801  01A8A0  6EE6               	movwf	postinc1,c
  9802  01A8A2  EC18  F0D3         	call	_printf	;wreg free
  9803                           
  9804                           ; BSR set to: 0
  9805                           ;eadog.c: 232:  start_lcd();
  9806  01A8A6  EC81  F0DB         	call	_start_lcd	;wreg free
  9807                           
  9808                           ; BSR set to: 59
  9809                           ;eadog.c: 233:  wait_lcd_done();
  9810  01A8AA  EC92  F0DA         	call	_wait_lcd_done	;wreg free
  9811                           
  9812                           ; BSR set to: 0
  9813  01A8AE  82BC               	bsf	188,1,c	;volatile
  9814                           
  9815                           ; BSR set to: 0
  9816                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9817  01A8B0  52E5               	movf	postdec1,f,c
  9818  01A8B2  0012               	return		;funcret
  9819  01A8B4                     __end_of_send_lcd_cmd_dma:
  9820                           	opt callstack 0
  9821                           
  9822 ;; *************** function _wait_lcd_done *****************
  9823 ;; Defined at:
  9824 ;;		line 156 in file "eadog.c"
  9825 ;; Parameters:    Size  Location     Type
  9826 ;;		None
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;		None
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  1  [STACK] void 
  9831 ;; Registers used:
  9832 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 3F/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9839 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9841 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9842 ;;Total ram usage:        0 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:   16
  9845 ;; This function calls:
  9846 ;;		_wdtdelay
  9847 ;; This function is called by:
  9848 ;;		_send_lcd_cmd_dma
  9849 ;;		_update_lcd
  9850 ;;		_vterm_dump
  9851 ;; This function uses a reentrant model
  9852 ;;
  9853                           
  9854                           	psect	text36
  9855  01B524                     __ptext36:
  9856                           	opt callstack 0
  9857  01B524                     _wait_lcd_done:
  9858                           	opt callstack 13
  9859                           
  9860                           ;eadog.c: 158:  while (spi_link.LCD_DATA);
  9861                           
  9862                           ; BSR set to: 0
  9863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9864                           ;incstack = 0
  9865  01B524  0100               	movlb	0	; () banked
  9866  01B526  B760               	btfsc	_spi_link& (0+255),3,b	;volatile
  9867  01B528  D7FD               	goto	_wait_lcd_done
  9868                           
  9869                           ; BSR set to: 0
  9870                           ;eadog.c: 159:  wdtdelay(50);
  9871  01B52A  0E32               	movlw	50
  9872  01B52C  6EE6               	movwf	postinc1,c
  9873  01B52E  0E00               	movlw	0
  9874  01B530  6EE6               	movwf	postinc1,c
  9875  01B532  0E00               	movlw	0
  9876  01B534  6EE6               	movwf	postinc1,c
  9877  01B536  0E00               	movlw	0
  9878  01B538  6EE6               	movwf	postinc1,c
  9879  01B53A  ECA9  F0D3         	call	_wdtdelay	;wreg free
  9880                           
  9881                           ; BSR set to: 0
  9882                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9883  01B53E  0012               	return		;funcret
  9884  01B540                     __end_of_wait_lcd_done:
  9885                           	opt callstack 0
  9886                           
  9887 ;; *************** function _wdtdelay *****************
  9888 ;; Defined at:
  9889 ;;		line 23 in file "eadog.c"
  9890 ;; Parameters:    Size  Location     Type
  9891 ;;  delay           4  [STACK] const unsigned long 
  9892 ;; Auto vars:     Size  Location     Type
  9893 ;;		None
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  1  [STACK] void 
  9896 ;; Registers used:
  9897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 3F/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9907 ;;Total ram usage:        0 bytes
  9908 ;; Hardware stack levels used:    1
  9909 ;; Hardware stack levels required when called:   15
  9910 ;; This function calls:
  9911 ;;		Nothing
  9912 ;; This function is called by:
  9913 ;;		_init_display
  9914 ;;		_send_lcd_cmd
  9915 ;;		_send_lcd_cmd_long
  9916 ;;		_wait_lcd_done
  9917 ;; This function uses a reentrant model
  9918 ;;
  9919                           
  9920                           	psect	text37
  9921  01A752                     __ptext37:
  9922                           	opt callstack 0
  9923  01A752                     _wdtdelay:
  9924                           	opt callstack 13
  9925                           
  9926                           ;eadog.c: 23: void wdtdelay(const uint32_t delay);eadog.c: 24: {;eadog.c: 25:  static ui
      +                          nt32_t dcount;;eadog.c: 27:  for (dcount = 0; dcount <= delay; dcount++) {
  9927                           
  9928                           ; BSR set to: 0
  9929                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9930                           ;incstack = 0
  9931  01A752  0100               	movlb	0	; () banked
  9932  01A754  6B9A               	clrf	wdtdelay@dcount& (0+255),b
  9933  01A756  6B9B               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9934  01A758  6B9C               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9935  01A75A  6B9D               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9936  01A75C                     l1437:
  9937                           
  9938                           ; BSR set to: 0
  9939                           ;eadog.c: 28:   __nop();
  9940  01A75C  F000               	nop	
  9941  01A75E  0004               	clrwdt		;# 
  9942                           
  9943                           ;eadog.c: 30:  };
  9944  01A760  0E01               	movlw	1
  9945  01A762  0100               	movlb	0	; () banked
  9946  01A764  279A               	addwf	wdtdelay@dcount& (0+255),f,b
  9947  01A766  0E00               	movlw	0
  9948  01A768  239B               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9949  01A76A  239C               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9950  01A76C  239D               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9951                           
  9952                           ; BSR set to: 0
  9953                           ;stkvar	_delay @ sp[(0)+-4]
  9954  01A76E  0EFC               	movlw	-4
  9955  01A770  006F FF8C  F028    	movff	plusw1,btemp
  9956  01A776  519A               	movf	wdtdelay@dcount& (0+255),w,b
  9957  01A778  5C28               	subwf	btemp^0,w,c
  9958  01A77A  0EFD               	movlw	-3
  9959  01A77C  006F FF8C  F028    	movff	plusw1,btemp
  9960  01A782  519B               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9961  01A784  5828               	subwfb	btemp^0,w,c
  9962  01A786  0EFE               	movlw	-2
  9963  01A788  006F FF8C  F028    	movff	plusw1,btemp
  9964  01A78E  519C               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9965  01A790  5828               	subwfb	btemp^0,w,c
  9966  01A792  0EFF               	movlw	-1
  9967  01A794  006F FF8C  F028    	movff	plusw1,btemp
  9968  01A79A  519D               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9969  01A79C  5828               	subwfb	btemp^0,w,c
  9970  01A79E  B0D8               	btfsc	status,0,c
  9971  01A7A0  D7DD               	goto	l1437
  9972                           
  9973                           ; BSR set to: 0
  9974                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9975  01A7A2  52E5               	movf	postdec1,f,c
  9976  01A7A4  52E5               	movf	postdec1,f,c
  9977  01A7A6  52E5               	movf	postdec1,f,c
  9978  01A7A8  52E5               	movf	postdec1,f,c
  9979  01A7AA  0012               	return		;funcret
  9980  01A7AC                     __end_of_wdtdelay:
  9981                           	opt callstack 0
  9982                           
  9983 ;; *************** function _eaDogM_WriteString *****************
  9984 ;; Defined at:
  9985 ;;		line 199 in file "eadog.c"
  9986 ;; Parameters:    Size  Location     Type
  9987 ;;  strPtr          2  [STACK] PTR unsigned char 
  9988 ;;		 -> D.lcd(480), D(482), V(189), 
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;		None
  9991 ;; Return value:  Size  Location     Type
  9992 ;;                  1  [STACK] void 
  9993 ;; Registers used:
  9994 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  9995 ;; Tracked objects:
  9996 ;;		On entry : 3F/0
  9997 ;;		On exit  : 3F/3B
  9998 ;;		Unchanged: 0/0
  9999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10004 ;;Total ram usage:        0 bytes
 10005 ;; Hardware stack levels used:    1
 10006 ;; Hardware stack levels required when called:   24
 10007 ;; This function calls:
 10008 ;;		_printf
 10009 ;;		_ringBufS_flush
 10010 ;;		_start_lcd
 10011 ;;		_strlen
 10012 ;;		_wait_lcd_set
 10013 ;; This function is called by:
 10014 ;;		_eaDogM_WriteStringAtPos
 10015 ;; This function uses a reentrant model
 10016 ;;
 10017                           
 10018                           	psect	text38
 10019  019DF2                     __ptext38:
 10020                           	opt callstack 0
 10021  019DF2                     _eaDogM_WriteString:
 10022                           	opt callstack 4
 10023                           
 10024                           ;eadog.c: 199: void eaDogM_WriteString(char *strPtr);eadog.c: 200: {;eadog.c: 202:  wait
      +                          _lcd_set();
 10025                           
 10026                           ; BSR set to: 0
 10027                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10028                           ;incstack = 0
 10029  019DF2  EC7E  F0DB         	call	_wait_lcd_set	;wreg free
 10030                           
 10031                           ; BSR set to: 0
 10032                           ;eadog.c: 204:  ringBufS_flush(spi_link.tx1a, 0);
 10033  019DF6  0E00               	movlw	0
 10034  019DF8  6EE6               	movwf	postinc1,c
 10035  019DFA  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 10036  019E00  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 10037  019E06  EC32  F0D0         	call	_ringBufS_flush	;wreg free
 10038  019E0A  94BC               	bcf	188,2,c	;volatile
 10039                           
 10040                           ;eadog.c: 206:  if (strlen(strPtr) > 64) strPtr[64] = 0;
 10041                           ;stkvar	_strPtr @ sp[(0)+-2]
 10042  019E0C  0EFE               	movlw	-2
 10043  019E0E  006F FF8F FFE6     	movff	plusw1,postinc1
 10044  019E14  006F FF8F FFE6     	movff	plusw1,postinc1
 10045  019E1A  EC4C  F0CF         	call	_strlen	;wreg free
 10046  019E1E  5029               	movf	(btemp+1)^0,w,c
 10047  019E20  E104               	bnz	u11840
 10048  019E22  0E41               	movlw	65
 10049  019E24  5C28               	subwf	btemp^0,w,c
 10050  019E26  A0D8               	btfss	status,0,c
 10051  019E28  D010               	goto	l12270
 10052  019E2A                     u11840:
 10053                           
 10054                           ;stkvar	_strPtr @ sp[(0)+-2]
 10055  019E2A  0EFE               	movlw	-2
 10056  019E2C  006F FF8C  F032    	movff	plusw1,btemp+10
 10057  019E32  0EFF               	movlw	-1
 10058  019E34  006F FF8C  F033    	movff	plusw1,btemp+11
 10059  019E3A  0E40               	movlw	64
 10060  019E3C  2432               	addwf	(btemp+10)^0,w,c
 10061  019E3E  6ED9               	movwf	fsr2l,c
 10062  019E40  0E00               	movlw	0
 10063  019E42  2033               	addwfc	(btemp+11)^0,w,c
 10064  019E44  6EDA               	movwf	fsr2h,c
 10065  019E46  0E00               	movlw	0
 10066  019E48  6EDF               	movwf	indf2,c
 10067  019E4A                     l12270:
 10068                           
 10069                           ;eadog.c: 207:  DMA1CON0bits.EN = 0;
 10070  019E4A  013B               	movlb	59	; () banked
 10071  019E4C  9FFC               	bcf	252,7,b	;volatile
 10072                           
 10073                           ; BSR set to: 59
 10074                           ;eadog.c: 208:  DMA1SSZ = strlen(strPtr);
 10075                           ;stkvar	_strPtr @ sp[(0)+-2]
 10076  019E4E  0EFE               	movlw	-2
 10077  019E50  006F FF8F FFE6     	movff	plusw1,postinc1
 10078  019E56  006F FF8F FFE6     	movff	plusw1,postinc1
 10079  019E5C  EC4C  F0CF         	call	_strlen	;wreg free
 10080  019E60  0060  F0A3  FBF7   	movff	btemp,15351	;volatile
 10081  019E66  0060  F0A7  FBF8   	movff	btemp+1,15352	;volatile
 10082                           
 10083                           ;eadog.c: 209:  DMA1CON0bits.EN = 1;
 10084  019E6C  013B               	movlb	59	; () banked
 10085  019E6E  8FFC               	bsf	252,7,b	;volatile
 10086                           
 10087                           ; BSR set to: 59
 10088                           ;eadog.c: 210:  printf("%s", strPtr);
 10089                           ;stkvar	_strPtr @ sp[(0)+-2]
 10090  019E70  0EFE               	movlw	-2
 10091  019E72  006F FF8F FFE6     	movff	plusw1,postinc1
 10092  019E78  006F FF8F FFE6     	movff	plusw1,postinc1
 10093  019E7E  0EFB               	movlw	low STR_43
 10094  019E80  6EE6               	movwf	postinc1,c
 10095  019E82  0EFF               	movlw	high STR_43
 10096  019E84  6EE6               	movwf	postinc1,c
 10097  019E86  0E04               	movlw	4
 10098  019E88  6EE6               	movwf	postinc1,c
 10099  019E8A  EC18  F0D3         	call	_printf	;wreg free
 10100                           
 10101                           ; BSR set to: 0
 10102                           ;eadog.c: 211:  start_lcd();
 10103  019E8E  EC81  F0DB         	call	_start_lcd	;wreg free
 10104                           
 10105                           ; BSR set to: 59
 10106                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 10107  019E92  52E5               	movf	postdec1,f,c
 10108  019E94  52E5               	movf	postdec1,f,c
 10109  019E96  0012               	return		;funcret
 10110  019E98                     __end_of_eaDogM_WriteString:
 10111                           	opt callstack 0
 10112                           
 10113 ;; *************** function _wait_lcd_set *****************
 10114 ;; Defined at:
 10115 ;;		line 146 in file "eadog.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;		None
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;		None
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1  [STACK] void 
 10122 ;; Registers used:
 10123 ;;		None
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/3D
 10126 ;;		On exit  : 3F/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10133 ;;Total ram usage:        0 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; Hardware stack levels required when called:   15
 10136 ;; This function calls:
 10137 ;;		Nothing
 10138 ;; This function is called by:
 10139 ;;		_eaDogM_WriteString
 10140 ;;		_send_lcd_cmd_dma
 10141 ;; This function uses a reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text39
 10145  01B6FC                     __ptext39:
 10146                           	opt callstack 0
 10147  01B6FC                     _wait_lcd_set:
 10148                           	opt callstack 12
 10149                           
 10150                           ;eadog.c: 148:  spi_link.LCD_DATA = 1;
 10151                           
 10152                           ; BSR set to: 59
 10153                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10154                           ;incstack = 0
 10155  01B6FC  0100               	movlb	0	; () banked
 10156  01B6FE  8760               	bsf	_spi_link& (0+255),3,b	;volatile
 10157                           
 10158                           ; BSR set to: 0
 10159                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 10160  01B700  0012               	return		;funcret
 10161  01B702                     __end_of_wait_lcd_set:
 10162                           	opt callstack 0
 10163                           
 10164 ;; *************** function _start_lcd *****************
 10165 ;; Defined at:
 10166 ;;		line 141 in file "eadog.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;		None
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;		None
 10171 ;; Return value:  Size  Location     Type
 10172 ;;                  1  [STACK] void 
 10173 ;; Registers used:
 10174 ;;		None
 10175 ;; Tracked objects:
 10176 ;;		On entry : 3F/0
 10177 ;;		On exit  : 3F/3B
 10178 ;;		Unchanged: 0/0
 10179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10180 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10181 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10182 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10183 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10184 ;;Total ram usage:        0 bytes
 10185 ;; Hardware stack levels used:    1
 10186 ;; Hardware stack levels required when called:   15
 10187 ;; This function calls:
 10188 ;;		Nothing
 10189 ;; This function is called by:
 10190 ;;		_eaDogM_WriteString
 10191 ;;		_send_lcd_cmd_dma
 10192 ;; This function uses a reentrant model
 10193 ;;
 10194                           
 10195                           	psect	text40
 10196  01B702                     __ptext40:
 10197                           	opt callstack 0
 10198  01B702                     _start_lcd:
 10199                           	opt callstack 12
 10200                           
 10201                           ;eadog.c: 143:  DMA1CON0bits.DMA1SIRQEN = 1;
 10202                           
 10203                           ; BSR set to: 0
 10204                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10205                           ;incstack = 0
 10206  01B702  013B               	movlb	59	; () banked
 10207  01B704  8DFC               	bsf	252,6,b	;volatile
 10208                           
 10209                           ; BSR set to: 59
 10210                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 10211  01B706  0012               	return		;funcret
 10212  01B708                     __end_of_start_lcd:
 10213                           	opt callstack 0
 10214                           
 10215 ;; *************** function _ringBufS_flush *****************
 10216 ;; Defined at:
 10217 ;;		line 76 in file "ringbufs.c"
 10218 ;; Parameters:    Size  Location     Type
 10219 ;;  _this           2  [STACK] PTR struct ringBufS_t
 10220 ;;		 -> ring_buf1(67), 
 10221 ;;  clearBuffer     1  [STACK] const char 
 10222 ;; Auto vars:     Size  Location     Type
 10223 ;;		None
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  1  [STACK] void 
 10226 ;; Registers used:
 10227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10228 ;; Tracked objects:
 10229 ;;		On entry : 3F/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10237 ;;Total ram usage:        0 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:   16
 10240 ;; This function calls:
 10241 ;;		_memset
 10242 ;; This function is called by:
 10243 ;;		_eaDogM_WriteString
 10244 ;;		_send_lcd_cmd_dma
 10245 ;; This function uses a reentrant model
 10246 ;;
 10247                           
 10248                           	psect	text41
 10249  01A064                     __ptext41:
 10250                           	opt callstack 0
 10251  01A064                     _ringBufS_flush:
 10252                           	opt callstack 11
 10253                           
 10254                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
 10255                           ;stkvar	__this @ sp[(0)+-2]
 10256                           
 10257                           ; BSR set to: 59
 10258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10259                           ;incstack = 0
 10260  01A064  0EFE               	movlw	-2
 10261  01A066  006F FF8C  F032    	movff	plusw1,btemp+10
 10262  01A06C  0EFF               	movlw	-1
 10263  01A06E  006F FF8C  F033    	movff	plusw1,btemp+11
 10264  01A074  0E42               	movlw	66
 10265  01A076  2432               	addwf	(btemp+10)^0,w,c
 10266  01A078  6ED9               	movwf	fsr2l,c
 10267  01A07A  0E00               	movlw	0
 10268  01A07C  2033               	addwfc	(btemp+11)^0,w,c
 10269  01A07E  6EDA               	movwf	fsr2h,c
 10270  01A080  0E00               	movlw	0
 10271  01A082  6EDF               	movwf	indf2,c
 10272                           
 10273                           ;ringbufs.c: 79:  _this->head = 0;
 10274                           ;stkvar	__this @ sp[(0)+-2]
 10275  01A084  0EFE               	movlw	-2
 10276  01A086  006F FF8C  F032    	movff	plusw1,btemp+10
 10277  01A08C  0EFF               	movlw	-1
 10278  01A08E  006F FF8C  F033    	movff	plusw1,btemp+11
 10279  01A094  0E40               	movlw	64
 10280  01A096  2432               	addwf	(btemp+10)^0,w,c
 10281  01A098  6ED9               	movwf	fsr2l,c
 10282  01A09A  0E00               	movlw	0
 10283  01A09C  2033               	addwfc	(btemp+11)^0,w,c
 10284  01A09E  6EDA               	movwf	fsr2h,c
 10285  01A0A0  0E00               	movlw	0
 10286  01A0A2  6EDF               	movwf	indf2,c
 10287                           
 10288                           ;ringbufs.c: 80:  _this->tail = 0;
 10289                           ;stkvar	__this @ sp[(0)+-2]
 10290  01A0A4  0EFE               	movlw	-2
 10291  01A0A6  006F FF8C  F032    	movff	plusw1,btemp+10
 10292  01A0AC  0EFF               	movlw	-1
 10293  01A0AE  006F FF8C  F033    	movff	plusw1,btemp+11
 10294  01A0B4  0E41               	movlw	65
 10295  01A0B6  2432               	addwf	(btemp+10)^0,w,c
 10296  01A0B8  6ED9               	movwf	fsr2l,c
 10297  01A0BA  0E00               	movlw	0
 10298  01A0BC  2033               	addwfc	(btemp+11)^0,w,c
 10299  01A0BE  6EDA               	movwf	fsr2h,c
 10300  01A0C0  0E00               	movlw	0
 10301  01A0C2  6EDF               	movwf	indf2,c
 10302                           
 10303                           ;ringbufs.c: 81:  if (clearBuffer) {
 10304                           ;stkvar	_clearBuffer @ sp[(0)+-3]
 10305  01A0C4  0EFD               	movlw	-3
 10306  01A0C6  50E3               	movf	plusw1,w,c
 10307  01A0C8  B4D8               	btfsc	status,2,c
 10308  01A0CA  D011               	goto	l1581
 10309                           
 10310                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
 10311  01A0CC  0E40               	movlw	64
 10312  01A0CE  6EE6               	movwf	postinc1,c
 10313  01A0D0  0E00               	movlw	0
 10314  01A0D2  6EE6               	movwf	postinc1,c
 10315  01A0D4  0E00               	movlw	0
 10316  01A0D6  6EE6               	movwf	postinc1,c
 10317  01A0D8  0E00               	movlw	0
 10318  01A0DA  6EE6               	movwf	postinc1,c
 10319                           
 10320                           ;stkvar	__this @ sp[(-4)+-2]
 10321  01A0DC  0EFA               	movlw	-6
 10322  01A0DE  006F FF8F FFE6     	movff	plusw1,postinc1
 10323  01A0E4  006F FF8F FFE6     	movff	plusw1,postinc1
 10324  01A0EA  ECF2  F0B2         	call	_memset	;wreg free
 10325  01A0EE                     l1581:
 10326                           
 10327                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
 10328  01A0EE  52E5               	movf	postdec1,f,c
 10329  01A0F0  52E5               	movf	postdec1,f,c
 10330  01A0F2  52E5               	movf	postdec1,f,c
 10331  01A0F4  0012               	return		;funcret
 10332  01A0F6                     __end_of_ringBufS_flush:
 10333                           	opt callstack 0
 10334                           
 10335 ;; *************** function _memset *****************
 10336 ;; Defined at:
 10337 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
 10338 ;; Parameters:    Size  Location     Type
 10339 ;;  dest            2  [STACK] PTR void 
 10340 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10341 ;;  c               2  [STACK] int 
 10342 ;;  n               2  [STACK] unsigned int 
 10343 ;; Auto vars:     Size  Location     Type
 10344 ;;  s               2  [STACK] PTR unsigned char 
 10345 ;;		 -> ring_buf2(67), ring_buf1(67), 
 10346 ;;  k               2  [STACK] unsigned int 
 10347 ;; Return value:  Size  Location     Type
 10348 ;;                  2  [STACK] PTR void 
 10349 ;; Registers used:
 10350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
 10351 ;; Tracked objects:
 10352 ;;		On entry : 0/0
 10353 ;;		On exit  : 0/0
 10354 ;;		Unchanged: 0/0
 10355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10360 ;;Total ram usage:        0 bytes
 10361 ;; Hardware stack levels used:    1
 10362 ;; Hardware stack levels required when called:   15
 10363 ;; This function calls:
 10364 ;;		Nothing
 10365 ;; This function is called by:
 10366 ;;		_ringBufS_init
 10367 ;;		_ringBufS_flush
 10368 ;; This function uses a reentrant model
 10369 ;;
 10370                           
 10371                           	psect	text42
 10372  0165E4                     __ptext42:
 10373                           	opt callstack 0
 10374  0165E4                     _memset:
 10375                           	opt callstack 0
 10376                           
 10377                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10378  0165E4  52E6               	movf	postinc1,f,c
 10379  0165E6  52E6               	movf	postinc1,f,c
 10380  0165E8  52E6               	movf	postinc1,f,c
 10381  0165EA  52E6               	movf	postinc1,f,c
 10382                           
 10383                           ;stkvar	_dest @ sp[(-4)+-2]
 10384                           
 10385                           ;incstack = 0
 10386  0165EC  0EFA               	movlw	-6
 10387  0165EE  006F FF8C  F032    	movff	plusw1,btemp+10
 10388  0165F4  0EFB               	movlw	-5
 10389  0165F6  006F FF8C  F033    	movff	plusw1,btemp+11
 10390                           
 10391                           ;stkvar	_s @ sp[(-4)+0]
 10392  0165FC  0EFD               	movlw	-3
 10393  0165FE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10394  016604  0EFC               	movlw	-4
 10395  016606  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10396                           
 10397                           ;stkvar	_n @ sp[(-4)+-6]
 10398  01660C  0EF6               	movlw	-10
 10399  01660E  006F FF8C  F028    	movff	plusw1,btemp
 10400  016614  0EF7               	movlw	-9
 10401  016616  50E3               	movf	plusw1,w,c
 10402  016618  1028               	iorwf	btemp^0,w,c
 10403  01661A  B4D8               	btfsc	status,2,c
 10404  01661C  D154               	goto	u10450
 10405                           
 10406                           ;stkvar	_c @ sp[(-4)+-4]
 10407                           ;stkvar	_s @ sp[(-4)+0]
 10408  01661E  0EFC               	movlw	-4
 10409  016620  006F FF8F FFD9     	movff	plusw1,fsr2l
 10410  016626  0EFD               	movlw	-3
 10411  016628  006F FF8F FFDA     	movff	plusw1,fsr2h
 10412  01662E  0EF8               	movlw	-8
 10413  016630  006F FF8F FFDF     	movff	plusw1,indf2
 10414                           
 10415                           ;stkvar	_c @ sp[(-4)+-4]
 10416                           ;stkvar	_n @ sp[(-4)+-6]
 10417                           ;stkvar	_s @ sp[(-4)+0]
 10418  016636  0EFC               	movlw	-4
 10419  016638  006F FF8C  F032    	movff	plusw1,btemp+10
 10420  01663E  0EFD               	movlw	-3
 10421  016640  006F FF8C  F033    	movff	plusw1,btemp+11
 10422  016646  0EF6               	movlw	-10
 10423  016648  50E3               	movf	plusw1,w,c
 10424  01664A  2632               	addwf	(btemp+10)^0,f,c
 10425  01664C  0EF7               	movlw	-9
 10426  01664E  50E3               	movf	plusw1,w,c
 10427  016650  2233               	addwfc	(btemp+11)^0,f,c
 10428  016652  0EFF               	movlw	255
 10429  016654  2432               	addwf	(btemp+10)^0,w,c
 10430  016656  6ED9               	movwf	fsr2l,c
 10431  016658  0EFF               	movlw	255
 10432  01665A  2033               	addwfc	(btemp+11)^0,w,c
 10433  01665C  6EDA               	movwf	fsr2h,c
 10434  01665E  0EF8               	movlw	-8
 10435  016660  006F FF8F FFDF     	movff	plusw1,indf2
 10436                           
 10437                           ;stkvar	_n @ sp[(-4)+-6]
 10438  016666  0EF7               	movlw	-9
 10439  016668  50E3               	movf	plusw1,w,c
 10440  01666A  E108               	bnz	l11442
 10441  01666C  0EF6               	movlw	-10
 10442  01666E  006F FF8C  F028    	movff	plusw1,btemp
 10443  016674  0E03               	movlw	3
 10444  016676  5E28               	subwf	btemp^0,f,c
 10445  016678  A0D8               	btfss	status,0,c
 10446  01667A  D125               	goto	u10450
 10447  01667C                     l11442:
 10448                           
 10449                           ;stkvar	_c @ sp[(-4)+-4]
 10450                           ;stkvar	_s @ sp[(-4)+0]
 10451  01667C  0EFC               	movlw	-4
 10452  01667E  006F FF8C  F032    	movff	plusw1,btemp+10
 10453  016684  0EFD               	movlw	-3
 10454  016686  006F FF8C  F033    	movff	plusw1,btemp+11
 10455  01668C  0E01               	movlw	1
 10456  01668E  2432               	addwf	(btemp+10)^0,w,c
 10457  016690  6ED9               	movwf	fsr2l,c
 10458  016692  0E00               	movlw	0
 10459  016694  2033               	addwfc	(btemp+11)^0,w,c
 10460  016696  6EDA               	movwf	fsr2h,c
 10461  016698  0EF8               	movlw	-8
 10462  01669A  006F FF8F FFDF     	movff	plusw1,indf2
 10463                           
 10464                           ;stkvar	_c @ sp[(-4)+-4]
 10465                           ;stkvar	_s @ sp[(-4)+0]
 10466  0166A0  0EFC               	movlw	-4
 10467  0166A2  006F FF8C  F032    	movff	plusw1,btemp+10
 10468  0166A8  0EFD               	movlw	-3
 10469  0166AA  006F FF8C  F033    	movff	plusw1,btemp+11
 10470  0166B0  0E02               	movlw	2
 10471  0166B2  2432               	addwf	(btemp+10)^0,w,c
 10472  0166B4  6ED9               	movwf	fsr2l,c
 10473  0166B6  0E00               	movlw	0
 10474  0166B8  2033               	addwfc	(btemp+11)^0,w,c
 10475  0166BA  6EDA               	movwf	fsr2h,c
 10476  0166BC  0EF8               	movlw	-8
 10477  0166BE  006F FF8F FFDF     	movff	plusw1,indf2
 10478                           
 10479                           ;stkvar	_c @ sp[(-4)+-4]
 10480                           ;stkvar	_n @ sp[(-4)+-6]
 10481                           ;stkvar	_s @ sp[(-4)+0]
 10482  0166C4  0EFC               	movlw	-4
 10483  0166C6  006F FF8C  F032    	movff	plusw1,btemp+10
 10484  0166CC  0EFD               	movlw	-3
 10485  0166CE  006F FF8C  F033    	movff	plusw1,btemp+11
 10486  0166D4  0EF6               	movlw	-10
 10487  0166D6  50E3               	movf	plusw1,w,c
 10488  0166D8  2632               	addwf	(btemp+10)^0,f,c
 10489  0166DA  0EF7               	movlw	-9
 10490  0166DC  50E3               	movf	plusw1,w,c
 10491  0166DE  2233               	addwfc	(btemp+11)^0,f,c
 10492  0166E0  0EFE               	movlw	254
 10493  0166E2  2432               	addwf	(btemp+10)^0,w,c
 10494  0166E4  6ED9               	movwf	fsr2l,c
 10495  0166E6  0EFF               	movlw	255
 10496  0166E8  2033               	addwfc	(btemp+11)^0,w,c
 10497  0166EA  6EDA               	movwf	fsr2h,c
 10498  0166EC  0EF8               	movlw	-8
 10499  0166EE  006F FF8F FFDF     	movff	plusw1,indf2
 10500                           
 10501                           ;stkvar	_c @ sp[(-4)+-4]
 10502                           ;stkvar	_n @ sp[(-4)+-6]
 10503                           ;stkvar	_s @ sp[(-4)+0]
 10504  0166F4  0EFC               	movlw	-4
 10505  0166F6  006F FF8C  F032    	movff	plusw1,btemp+10
 10506  0166FC  0EFD               	movlw	-3
 10507  0166FE  006F FF8C  F033    	movff	plusw1,btemp+11
 10508  016704  0EF6               	movlw	-10
 10509  016706  50E3               	movf	plusw1,w,c
 10510  016708  2632               	addwf	(btemp+10)^0,f,c
 10511  01670A  0EF7               	movlw	-9
 10512  01670C  50E3               	movf	plusw1,w,c
 10513  01670E  2233               	addwfc	(btemp+11)^0,f,c
 10514  016710  0EFD               	movlw	253
 10515  016712  2432               	addwf	(btemp+10)^0,w,c
 10516  016714  6ED9               	movwf	fsr2l,c
 10517  016716  0EFF               	movlw	255
 10518  016718  2033               	addwfc	(btemp+11)^0,w,c
 10519  01671A  6EDA               	movwf	fsr2h,c
 10520  01671C  0EF8               	movlw	-8
 10521  01671E  006F FF8F FFDF     	movff	plusw1,indf2
 10522                           
 10523                           ;stkvar	_n @ sp[(-4)+-6]
 10524  016724  0EF7               	movlw	-9
 10525  016726  50E3               	movf	plusw1,w,c
 10526  016728  E108               	bnz	l11448
 10527  01672A  0EF6               	movlw	-10
 10528  01672C  006F FF8C  F028    	movff	plusw1,btemp
 10529  016732  0E07               	movlw	7
 10530  016734  5E28               	subwf	btemp^0,f,c
 10531  016736  A0D8               	btfss	status,0,c
 10532  016738  D0C6               	goto	u10450
 10533  01673A                     l11448:
 10534                           
 10535                           ;stkvar	_c @ sp[(-4)+-4]
 10536                           ;stkvar	_s @ sp[(-4)+0]
 10537  01673A  0EFC               	movlw	-4
 10538  01673C  006F FF8C  F032    	movff	plusw1,btemp+10
 10539  016742  0EFD               	movlw	-3
 10540  016744  006F FF8C  F033    	movff	plusw1,btemp+11
 10541  01674A  0E03               	movlw	3
 10542  01674C  2432               	addwf	(btemp+10)^0,w,c
 10543  01674E  6ED9               	movwf	fsr2l,c
 10544  016750  0E00               	movlw	0
 10545  016752  2033               	addwfc	(btemp+11)^0,w,c
 10546  016754  6EDA               	movwf	fsr2h,c
 10547  016756  0EF8               	movlw	-8
 10548  016758  006F FF8F FFDF     	movff	plusw1,indf2
 10549                           
 10550                           ;stkvar	_c @ sp[(-4)+-4]
 10551                           ;stkvar	_n @ sp[(-4)+-6]
 10552                           ;stkvar	_s @ sp[(-4)+0]
 10553  01675E  0EFC               	movlw	-4
 10554  016760  006F FF8C  F032    	movff	plusw1,btemp+10
 10555  016766  0EFD               	movlw	-3
 10556  016768  006F FF8C  F033    	movff	plusw1,btemp+11
 10557  01676E  0EF6               	movlw	-10
 10558  016770  50E3               	movf	plusw1,w,c
 10559  016772  2632               	addwf	(btemp+10)^0,f,c
 10560  016774  0EF7               	movlw	-9
 10561  016776  50E3               	movf	plusw1,w,c
 10562  016778  2233               	addwfc	(btemp+11)^0,f,c
 10563  01677A  0EFC               	movlw	252
 10564  01677C  2432               	addwf	(btemp+10)^0,w,c
 10565  01677E  6ED9               	movwf	fsr2l,c
 10566  016780  0EFF               	movlw	255
 10567  016782  2033               	addwfc	(btemp+11)^0,w,c
 10568  016784  6EDA               	movwf	fsr2h,c
 10569  016786  0EF8               	movlw	-8
 10570  016788  006F FF8F FFDF     	movff	plusw1,indf2
 10571                           
 10572                           ;stkvar	_n @ sp[(-4)+-6]
 10573  01678E  0EF7               	movlw	-9
 10574  016790  50E3               	movf	plusw1,w,c
 10575  016792  E108               	bnz	l11454
 10576  016794  0EF6               	movlw	-10
 10577  016796  006F FF8C  F028    	movff	plusw1,btemp
 10578  01679C  0E09               	movlw	9
 10579  01679E  5E28               	subwf	btemp^0,f,c
 10580  0167A0  A0D8               	btfss	status,0,c
 10581  0167A2  D091               	goto	u10450
 10582  0167A4                     l11454:
 10583                           
 10584                           ;stkvar	_s @ sp[(-4)+0]
 10585  0167A4  0EFC               	movlw	-4
 10586  0167A6  006F FF8C  F032    	movff	plusw1,btemp+10
 10587  0167AC  1E32               	comf	(btemp+10)^0,f,c
 10588  0167AE  0EFD               	movlw	-3
 10589  0167B0  006F FF8C  F033    	movff	plusw1,btemp+11
 10590  0167B6  1E33               	comf	(btemp+11)^0,f,c
 10591  0167B8  2A32               	incf	(btemp+10)^0,f,c
 10592  0167BA  B4D8               	btfsc	status,2,c
 10593  0167BC  2A33               	incf	(btemp+11)^0,f,c
 10594  0167BE  0E03               	movlw	3
 10595  0167C0  1632               	andwf	(btemp+10)^0,f,c
 10596  0167C2  0E00               	movlw	0
 10597  0167C4  1633               	andwf	(btemp+11)^0,f,c
 10598                           
 10599                           ;stkvar	_k @ sp[(-4)+2]
 10600  0167C6  0EFE               	movlw	-2
 10601  0167C8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10602  0167CE  0EFF               	movlw	-1
 10603  0167D0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10604                           
 10605                           ;stkvar	_k @ sp[(-4)+2]
 10606                           ;stkvar	_s @ sp[(-4)+0]
 10607  0167D6  0EFC               	movlw	-4
 10608  0167D8  50E3               	movf	plusw1,w,c
 10609  0167DA  6E28               	movwf	btemp^0,c
 10610  0167DC  0EFE               	movlw	-2
 10611  0167DE  50E3               	movf	plusw1,w,c
 10612  0167E0  2628               	addwf	btemp^0,f,c
 10613  0167E2  0EFC               	movlw	-4
 10614  0167E4  0060  F0A3  FFE3   	movff	btemp,plusw1
 10615  0167EA  0EFD               	movlw	-3
 10616  0167EC  50E3               	movf	plusw1,w,c
 10617  0167EE  6E28               	movwf	btemp^0,c
 10618  0167F0  0EFF               	movlw	-1
 10619  0167F2  50E3               	movf	plusw1,w,c
 10620  0167F4  2228               	addwfc	btemp^0,f,c
 10621  0167F6  0EFD               	movlw	-3
 10622  0167F8  0060  F0A3  FFE3   	movff	btemp,plusw1
 10623                           
 10624                           ;stkvar	_k @ sp[(-4)+2]
 10625                           ;stkvar	_n @ sp[(-4)+-6]
 10626  0167FE  0EF6               	movlw	-10
 10627  016800  50E3               	movf	plusw1,w,c
 10628  016802  6E28               	movwf	btemp^0,c
 10629  016804  0EFE               	movlw	-2
 10630  016806  50E3               	movf	plusw1,w,c
 10631  016808  5E28               	subwf	btemp^0,f,c
 10632  01680A  0EF6               	movlw	-10
 10633  01680C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10634  016812  0EF7               	movlw	-9
 10635  016814  50E3               	movf	plusw1,w,c
 10636  016816  6E28               	movwf	btemp^0,c
 10637  016818  0EFF               	movlw	-1
 10638  01681A  50E3               	movf	plusw1,w,c
 10639  01681C  5A28               	subwfb	btemp^0,f,c
 10640  01681E  0EF7               	movlw	-9
 10641  016820  0060  F0A3  FFE3   	movff	btemp,plusw1
 10642  016826  0EFC               	movlw	252
 10643  016828  6E32               	movwf	(btemp+10)^0,c
 10644  01682A  0EFF               	movlw	255
 10645  01682C  6E33               	movwf	(btemp+11)^0,c
 10646                           
 10647                           ;stkvar	_n @ sp[(-4)+-6]
 10648  01682E  0EF6               	movlw	-10
 10649  016830  006F FF8C  F028    	movff	plusw1,btemp
 10650  016836  5032               	movf	(btemp+10)^0,w,c
 10651  016838  1628               	andwf	btemp^0,f,c
 10652  01683A  0EF6               	movlw	-10
 10653  01683C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10654  016842  0EF7               	movlw	-9
 10655  016844  006F FF8C  F028    	movff	plusw1,btemp
 10656  01684A  5033               	movf	(btemp+11)^0,w,c
 10657  01684C  1628               	andwf	btemp^0,f,c
 10658  01684E  0EF7               	movlw	-9
 10659  016850  D02E               	goto	L7
 10660  016852                     l11462:
 10661                           
 10662                           ;stkvar	_c @ sp[(-4)+-4]
 10663                           ;stkvar	_s @ sp[(-4)+0]
 10664  016852  0EFC               	movlw	-4
 10665  016854  006F FF8F FFD9     	movff	plusw1,fsr2l
 10666  01685A  0EFD               	movlw	-3
 10667  01685C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10668  016862  0EF8               	movlw	-8
 10669  016864  006F FF8F FFDF     	movff	plusw1,indf2
 10670                           
 10671                           ;stkvar	_n @ sp[(-4)+-6]
 10672  01686A  0EF6               	movlw	-10
 10673  01686C  006F FF8C  F028    	movff	plusw1,btemp
 10674  016872  0E01               	movlw	1
 10675  016874  5E28               	subwf	btemp^0,f,c
 10676  016876  0EF6               	movlw	-10
 10677  016878  0060  F0A3  FFE3   	movff	btemp,plusw1
 10678  01687E  0EF7               	movlw	-9
 10679  016880  006F FF8C  F028    	movff	plusw1,btemp
 10680  016886  0E00               	movlw	0
 10681  016888  5A28               	subwfb	btemp^0,f,c
 10682  01688A  0EF7               	movlw	-9
 10683  01688C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10684                           
 10685                           ;stkvar	_s @ sp[(-4)+0]
 10686  016892  0EFC               	movlw	-4
 10687  016894  50E3               	movf	plusw1,w,c
 10688  016896  0F01               	addlw	1
 10689  016898  6E28               	movwf	btemp^0,c
 10690  01689A  0EFC               	movlw	-4
 10691  01689C  0060  F0A3  FFE3   	movff	btemp,plusw1
 10692  0168A2  6A28               	clrf	btemp^0,c
 10693  0168A4  0EFD               	movlw	-3
 10694  0168A6  50E3               	movf	plusw1,w,c
 10695  0168A8  2028               	addwfc	btemp^0,w,c
 10696  0168AA  6E28               	movwf	btemp^0,c
 10697  0168AC  0EFD               	movlw	-3
 10698  0168AE                     L7:
 10699  0168AE  0060  F0A3  FFE3   	movff	btemp,plusw1
 10700                           
 10701                           ;stkvar	_n @ sp[(-4)+-6]
 10702  0168B4  0EF6               	movlw	-10
 10703  0168B6  006F FF8C  F028    	movff	plusw1,btemp
 10704  0168BC  0EF7               	movlw	-9
 10705  0168BE  50E3               	movf	plusw1,w,c
 10706  0168C0  1028               	iorwf	btemp^0,w,c
 10707  0168C2  A4D8               	btfss	status,2,c
 10708  0168C4  D7C6               	goto	l11462
 10709  0168C6                     u10450:
 10710                           
 10711                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10712  0168C6  0EF6               	movlw	246
 10713  0168C8  26E1               	addwf	fsr1l,f,c
 10714  0168CA  0EFF               	movlw	255
 10715  0168CC  22E2               	addwfc	fsr1h,f,c
 10716  0168CE  0012               	return		;funcret
 10717  0168D0                     __end_of_memset:
 10718                           	opt callstack 0
 10719                           
 10720 ;; *************** function _printf *****************
 10721 ;; Defined at:
 10722 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
 10723 ;; Parameters:    Size  Location     Type
 10724 ;;  fmt             2  [STACK] PTR const unsigned char 
 10725 ;;		 -> STR_45(3), STR_44(3), STR_43(3), 
 10726 ;; Auto vars:     Size  Location     Type
 10727 ;;  ap              2  [STACK] PTR void [1]
 10728 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10729 ;;  ret             2    0        int 
 10730 ;; Return value:  Size  Location     Type
 10731 ;;                  2  [STACK] int 
 10732 ;; Registers used:
 10733 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10734 ;; Tracked objects:
 10735 ;;		On entry : 3F/3B
 10736 ;;		On exit  : 3F/0
 10737 ;;		Unchanged: 0/0
 10738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10743 ;;Total ram usage:        0 bytes
 10744 ;; Hardware stack levels used:    1
 10745 ;; Hardware stack levels required when called:   23
 10746 ;; This function calls:
 10747 ;;		_vfprintf
 10748 ;; This function is called by:
 10749 ;;		_eaDogM_WriteString
 10750 ;;		_send_lcd_cmd_dma
 10751 ;; This function uses a reentrant model
 10752 ;;
 10753                           
 10754                           	psect	text43
 10755  01A630                     __ptext43:
 10756                           	opt callstack 0
 10757  01A630                     _printf:
 10758                           	opt callstack 0
 10759                           
 10760                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10761  01A630  52E6               	movf	postinc1,f,c
 10762  01A632  52E6               	movf	postinc1,f,c
 10763                           
 10764                           ;stkvar	?_printf @ sp[(-2)+-3]
 10765                           
 10766                           ;incstack = 0
 10767  01A634  0EFB               	movlw	251
 10768  01A636  24E1               	addwf	fsr1l,w,c
 10769  01A638  6E32               	movwf	(btemp+10)^0,c
 10770  01A63A  0EFF               	movlw	255
 10771  01A63C  20E2               	addwfc	fsr1h,w,c
 10772  01A63E  6E33               	movwf	(btemp+11)^0,c
 10773                           
 10774                           ;stkvar	_ap @ sp[(-2)+0]
 10775  01A640  0EFF               	movlw	-1
 10776  01A642  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10777  01A648  0EFE               	movlw	-2
 10778  01A64A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10779                           
 10780                           ;stkvar	_ap @ sp[(-2)+0]
 10781  01A650  0EFE               	movlw	254
 10782  01A652  24E1               	addwf	fsr1l,w,c
 10783  01A654  6E28               	movwf	btemp^0,c
 10784  01A656  0EFF               	movlw	255
 10785  01A658  20E2               	addwfc	fsr1h,w,c
 10786  01A65A  6E29               	movwf	(btemp+1)^0,c
 10787  01A65C  0060  F0A3  FFE6   	movff	btemp,postinc1
 10788  01A662  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 10789                           
 10790                           ;stkvar	_fmt @ sp[(-4)+-3]
 10791  01A668  0EF9               	movlw	-7
 10792  01A66A  006F FF8F FFE6     	movff	plusw1,postinc1
 10793  01A670  006F FF8F FFE6     	movff	plusw1,postinc1
 10794  01A676  0E00               	movlw	0
 10795  01A678  6EE6               	movwf	postinc1,c
 10796  01A67A  0E00               	movlw	0
 10797  01A67C  6EE6               	movwf	postinc1,c
 10798  01A67E  EC4E  F0CE         	call	_vfprintf	;wreg free
 10799                           
 10800                           ; BSR set to: 0
 10801                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
 10802  01A682  52E5               	movf	postdec1,f,c
 10803  01A684  52E5               	movf	postdec1,f,c
 10804  01A686  52E5               	movf	postdec1,f,c
 10805  01A688  50E7               	movf	indf1,w,c
 10806  01A68A  5EE1               	subwf	fsr1l,f,c
 10807  01A68C  0E00               	movlw	0
 10808  01A68E  5AE2               	subwfb	fsr1h,f,c
 10809  01A690  0012               	return		;funcret
 10810  01A692                     __end_of_printf:
 10811                           	opt callstack 0
 10812                           
 10813 ;; *************** function _vfprintf *****************
 10814 ;; Defined at:
 10815 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10816 ;; Parameters:    Size  Location     Type
 10817 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10818 ;;		 -> f(6), NULL(0), 
 10819 ;;  fmt             2  [STACK] PTR const unsigned char 
 10820 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10821 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10822 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10823 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10824 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10825 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10826 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10827 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10828 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10829 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10830 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10831 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10832 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10833 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10834 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10835 ;;		 -> STR_1(17), 
 10836 ;;  ap              2  [STACK] PTR PTR void 
 10837 ;;		 -> ap(2), ap(2), 
 10838 ;; Auto vars:     Size  Location     Type
 10839 ;;  cfmt            2  [STACK] PTR unsigned char 
 10840 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 10841 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 10842 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 10843 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 10844 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 10845 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 10846 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 10847 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 10848 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 10849 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 10850 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 10851 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 10852 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 10853 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 10854 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 10855 ;;		 -> STR_1(17), 
 10856 ;; Return value:  Size  Location     Type
 10857 ;;                  2  [STACK] int 
 10858 ;; Registers used:
 10859 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 10860 ;; Tracked objects:
 10861 ;;		On entry : 0/1
 10862 ;;		On exit  : 3F/0
 10863 ;;		Unchanged: 0/0
 10864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10869 ;;Total ram usage:        0 bytes
 10870 ;; Hardware stack levels used:    1
 10871 ;; Hardware stack levels required when called:   22
 10872 ;; This function calls:
 10873 ;;		_vfpfcnvrt
 10874 ;; This function is called by:
 10875 ;;		_sprintf
 10876 ;;		_printf
 10877 ;; This function uses a reentrant model
 10878 ;;
 10879                           
 10880                           	psect	text44
 10881  019C9C                     __ptext44:
 10882                           	opt callstack 0
 10883  019C9C                     _vfprintf:
 10884                           	opt callstack 0
 10885                           
 10886                           ; BSR set to: 0
 10887                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10888  019C9C  52E6               	movf	postinc1,f,c
 10889  019C9E  52E6               	movf	postinc1,f,c
 10890                           
 10891                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10892                           ;stkvar	_fmt @ sp[(-2)+-4]
 10893                           
 10894                           ;incstack = 0
 10895 ;; hardware stack exceeded
 10896  019CA0  0EFA               	movlw	-6
 10897  019CA2  006F FF8C  F032    	movff	plusw1,btemp+10
 10898  019CA8  0EFB               	movlw	-5
 10899  019CAA  006F FF8C  F033    	movff	plusw1,btemp+11
 10900                           
 10901                           ;stkvar	_cfmt @ sp[(-2)+0]
 10902  019CB0  0EFF               	movlw	-1
 10903  019CB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 10904  019CB8  0EFE               	movlw	-2
 10905  019CBA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 10906                           
 10907                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10908  019CC0  0100               	movlb	0	; () banked
 10909  019CC2  6BC0               	clrf	_nout& (0+255),b
 10910  019CC4  6BC1               	clrf	(_nout+1)& (0+255),b
 10911                           
 10912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10913  019CC6  D021               	goto	l12286
 10914  019CC8                     l12284:
 10915                           
 10916                           ; BSR set to: 0
 10917                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10918                           ;stkvar	_ap @ sp[(-2)+-6]
 10919  019CC8  0EF8               	movlw	-8
 10920  019CCA  006F FF8F FFE6     	movff	plusw1,postinc1
 10921  019CD0  006F FF8F FFE6     	movff	plusw1,postinc1
 10922                           
 10923                           ;stkvar	_cfmt @ sp[(-4)+0]
 10924  019CD6  0EFC               	movlw	252
 10925  019CD8  24E1               	addwf	fsr1l,w,c
 10926  019CDA  6E28               	movwf	btemp^0,c
 10927  019CDC  0EFF               	movlw	255
 10928  019CDE  20E2               	addwfc	fsr1h,w,c
 10929  019CE0  6E29               	movwf	(btemp+1)^0,c
 10930  019CE2  0060  F0A3  FFE6   	movff	btemp,postinc1
 10931  019CE8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 10932                           
 10933                           ;stkvar	_fp @ sp[(-6)+-2]
 10934  019CEE  0EF8               	movlw	-8
 10935  019CF0  006F FF8F FFE6     	movff	plusw1,postinc1
 10936  019CF6  006F FF8F FFE6     	movff	plusw1,postinc1
 10937  019CFC  EC39  F091         	call	_vfpfcnvrt	;wreg free
 10938  019D00  5028               	movf	btemp^0,w,c
 10939  019D02  0100               	movlb	0	; () banked
 10940  019D04  27C0               	addwf	_nout& (0+255),f,b
 10941  019D06  5029               	movf	(btemp+1)^0,w,c
 10942  019D08  23C1               	addwfc	(_nout+1)& (0+255),f,b
 10943  019D0A                     l12286:
 10944                           
 10945                           ; BSR set to: 0
 10946                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10947                           ;stkvar	_cfmt @ sp[(-2)+0]
 10948  019D0A  50E1               	movf	fsr1l,w,c
 10949  019D0C  0FFE               	addlw	-2
 10950  019D0E  6ED9               	movwf	fsr2l,c
 10951  019D10  50E2               	movf	fsr1h,w,c
 10952  019D12  6EDA               	movwf	fsr2h,c
 10953  019D14  0EFF               	movlw	255
 10954  019D16  22DA               	addwfc	fsr2h,f,c
 10955  019D18  006F FF7B FFF6     	movff	postinc2,tblptrl
 10956  019D1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 10957  019D24                     	if	0	;tblptru may be non-zero
 10958  019D24                     	endif
 10959  019D24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10960  019D24  0E00               	movlw	low (__mediumconst shr (0+16))
 10961  019D26  6EF8               	movwf	tblptru,c
 10962  019D28                     	endif
 10963  019D28  0008               	tblrd		*
 10964  019D2A  50F5               	movf	tablat,w,c
 10965  019D2C  0900               	iorlw	0
 10966  019D2E  A4D8               	btfss	status,2,c
 10967  019D30  D7CB               	goto	l12284
 10968                           
 10969                           ; BSR set to: 0
 10970                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10971  019D32  0060  F300  F028   	movff	_nout,btemp
 10972  019D38  0060  F304  F029   	movff	_nout+1,btemp+1
 10973                           
 10974                           ; BSR set to: 0
 10975                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
 10976  019D3E  0EF8               	movlw	248
 10977  019D40  26E1               	addwf	fsr1l,f,c
 10978  019D42  0EFF               	movlw	255
 10979  019D44  22E2               	addwfc	fsr1h,f,c
 10980  019D46  0012               	return		;funcret
 10981  019D48                     __end_of_vfprintf:
 10982                           	opt callstack 0
 10983                           
 10984 ;; *************** function _vfpfcnvrt *****************
 10985 ;; Defined at:
 10986 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10987 ;; Parameters:    Size  Location     Type
 10988 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10989 ;;		 -> f(6), NULL(0), 
 10990 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10991 ;;		 -> cfmt(2), 
 10992 ;;  ap              2  [STACK] PTR PTR void 
 10993 ;;		 -> ap(2), ap(2), 
 10994 ;; Auto vars:     Size  Location     Type
 10995 ;;  llu             8  [STACK] unsigned long long 
 10996 ;;  ll              8  [STACK] long long 
 10997 ;;  f               4  [STACK] long long 
 10998 ;;  ct              3  [STACK] unsigned char [3]
 10999 ;;  vp              3    0        PTR void 
 11000 ;;  cp              2  [STACK] PTR unsigned char 
 11001 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 11002 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 11003 ;;		 -> V(189), 
 11004 ;;  i               2    0        int 
 11005 ;;  done            2    0        int 
 11006 ;;  c               1  [STACK] unsigned char 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  2  [STACK] int 
 11009 ;; Registers used:
 11010 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11020 ;;Total ram usage:        0 bytes
 11021 ;; Hardware stack levels used:    1
 11022 ;; Hardware stack levels required when called:   21
 11023 ;; This function calls:
 11024 ;;		_atoi
 11025 ;;		_ctoa
 11026 ;;		_dtoa
 11027 ;;		_efgtoa
 11028 ;;		_fputc
 11029 ;;		_isdigit
 11030 ;;		_isupper
 11031 ;;		_stoa
 11032 ;;		_strncmp
 11033 ;;		_tolower
 11034 ;;		_utoa
 11035 ;;		_xtoa
 11036 ;; This function is called by:
 11037 ;;		_vfprintf
 11038 ;; This function uses a reentrant model
 11039 ;;
 11040                           
 11041                           	psect	text45
 11042  012272                     __ptext45:
 11043                           	opt callstack 0
 11044  012272                     _vfpfcnvrt:
 11045                           	opt callstack 0
 11046                           
 11047                           ; BSR set to: 0
 11048                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11049  012272  0E20               	movlw	32
 11050  012274  26E1               	addwf	fsr1l,f,c
 11051  012276  0E00               	movlw	0
 11052  012278  22E2               	addwfc	fsr1h,f,c
 11053                           
 11054                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 11055                           ;stkvar	_fmt @ sp[(-32)+-4]
 11056                           
 11057                           ;incstack = 0
 11058 ;; hardware stack exceeded
 11059  01227A  0EDC               	movlw	-36
 11060  01227C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11061  012282  0EDD               	movlw	-35
 11062  012284  006F FF8F FFDA     	movff	plusw1,fsr2h
 11063  01228A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11064  012290  006F FF77 FFF7     	movff	postdec2,tblptrh
 11065  012296                     	if	0	;tblptru may be non-zero
 11066  012296                     	endif
 11067  012296                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11068  012296  0E00               	movlw	low (__mediumconst shr (0+16))
 11069  012298  6EF8               	movwf	tblptru,c
 11070  01229A                     	endif
 11071  01229A  0008               	tblrd		*
 11072  01229C  50F5               	movf	tablat,w,c
 11073  01229E  0A25               	xorlw	37
 11074  0122A0  A4D8               	btfss	status,2,c
 11075  0122A2  EFE0  F098         	goto	l12230
 11076                           
 11077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 11078                           ;stkvar	_fmt @ sp[(-32)+-4]
 11079  0122A6  0EDC               	movlw	-36
 11080  0122A8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11081  0122AE  0EDD               	movlw	-35
 11082  0122B0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11083  0122B6  2ADE               	incf	postinc2,f,c
 11084  0122B8  0E00               	movlw	0
 11085  0122BA  22DD               	addwfc	postdec2,f,c
 11086                           
 11087                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 11088  0122BC  6A48               	clrf	_width^0,c
 11089  0122BE  6A49               	clrf	(_width+1)^0,c
 11090  0122C0  6A4C               	clrf	_flags^0,c
 11091  0122C2  6A4D               	clrf	(_flags+1)^0,c
 11092                           
 11093                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 11094  0122C4  684A               	setf	_prec^0,c
 11095  0122C6  684B               	setf	(_prec+1)^0,c
 11096                           
 11097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 11098                           ;stkvar	_fmt @ sp[(-32)+-4]
 11099  0122C8  0EDC               	movlw	-36
 11100  0122CA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11101  0122D0  0EDD               	movlw	-35
 11102  0122D2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11103  0122D8  006F FF7B FFF6     	movff	postinc2,tblptrl
 11104  0122DE  006F FF77 FFF7     	movff	postdec2,tblptrh
 11105  0122E4                     	if	0	;tblptru may be non-zero
 11106  0122E4                     	endif
 11107  0122E4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11108  0122E4  0E00               	movlw	low (__mediumconst shr (0+16))
 11109  0122E6  6EF8               	movwf	tblptru,c
 11110  0122E8                     	endif
 11111  0122E8  0008               	tblrd		*
 11112  0122EA  50F5               	movf	tablat,w,c
 11113  0122EC  0A2A               	xorlw	42
 11114  0122EE  A4D8               	btfss	status,2,c
 11115  0122F0  D031               	goto	l12048
 11116                           
 11117                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 11118                           ;stkvar	_fmt @ sp[(-32)+-4]
 11119  0122F2  0EDC               	movlw	-36
 11120  0122F4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11121  0122FA  0EDD               	movlw	-35
 11122  0122FC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11123  012302  2ADE               	incf	postinc2,f,c
 11124  012304  0E00               	movlw	0
 11125  012306  22DD               	addwfc	postdec2,f,c
 11126                           
 11127                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 11128                           ;stkvar	_ap @ sp[(-32)+-6]
 11129  012308  0EDA               	movlw	-38
 11130  01230A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11131  012310  0EDB               	movlw	-37
 11132  012312  006F FF8F FFDA     	movff	plusw1,fsr2h
 11133  012318  0E02               	movlw	2
 11134  01231A  5EDE               	subwf	postinc2,f,c
 11135  01231C  0E00               	movlw	0
 11136  01231E  5ADD               	subwfb	postdec2,f,c
 11137  012320  006F FF78  F032    	movff	postinc2,btemp+10
 11138  012326  006F FF74  F033    	movff	postdec2,btemp+11
 11139  01232C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11140  012332  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11141  012338  006F FF78  F048    	movff	postinc2,_width
 11142  01233E  006F FF74  F049    	movff	postdec2,_width+1
 11143                           
 11144                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 11145  012344  AE49               	btfss	(_width+1)^0,7,c
 11146  012346  D066               	goto	u11580
 11147                           
 11148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 11149  012348  804C               	bsf	_flags^0,0,c
 11150                           
 11151                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 11152  01234A  6C48               	negf	_width^0,c
 11153  01234C  1E49               	comf	(_width+1)^0,f,c
 11154  01234E  B0D8               	btfsc	status,0,c
 11155  012350  2A49               	incf	(_width+1)^0,f,c
 11156  012352  D060               	goto	u11580
 11157  012354                     l12048:
 11158                           
 11159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 11160                           ;stkvar	_fmt @ sp[(-32)+-4]
 11161  012354  0EDC               	movlw	-36
 11162  012356  006F FF8F FFD9     	movff	plusw1,fsr2l
 11163  01235C  0EDD               	movlw	-35
 11164  01235E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11165  012364  006F FF78  F032    	movff	postinc2,btemp+10
 11166  01236A  006F FF74  F033    	movff	postdec2,btemp+11
 11167  012370  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11168  012376  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11169  01237C  EC67  F0B8         	call	_atoi	;wreg free
 11170  012380  0060  F0A0  F048   	movff	btemp,_width
 11171  012386  0060  F0A4  F049   	movff	btemp+1,_width+1
 11172                           
 11173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11174  01238C  D00B               	goto	l12052
 11175  01238E                     l12050:
 11176                           
 11177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 11178                           ;stkvar	_fmt @ sp[(-32)+-4]
 11179  01238E  0EDC               	movlw	-36
 11180  012390  006F FF8F FFD9     	movff	plusw1,fsr2l
 11181  012396  0EDD               	movlw	-35
 11182  012398  006F FF8F FFDA     	movff	plusw1,fsr2h
 11183  01239E  2ADE               	incf	postinc2,f,c
 11184  0123A0  0E00               	movlw	0
 11185  0123A2  22DD               	addwfc	postdec2,f,c
 11186  0123A4                     l12052:
 11187  0123A4  0ED0               	movlw	208
 11188  0123A6  6E32               	movwf	(btemp+10)^0,c
 11189  0123A8  0EFF               	movlw	255
 11190  0123AA  6E33               	movwf	(btemp+11)^0,c
 11191                           
 11192                           ;stkvar	_fmt @ sp[(-32)+-4]
 11193  0123AC  0EDC               	movlw	-36
 11194  0123AE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11195  0123B4  0EDD               	movlw	-35
 11196  0123B6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11197  0123BC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11198  0123C2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11199  0123C8                     	if	0	;tblptru may be non-zero
 11200  0123C8                     	endif
 11201  0123C8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11202  0123C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11203  0123CA  6EF8               	movwf	tblptru,c
 11204  0123CC                     	endif
 11205  0123CC  0008               	tblrd		*
 11206  0123CE  50F5               	movf	tablat,w,c
 11207  0123D0  6E30               	movwf	(btemp+8)^0,c
 11208  0123D2  6A31               	clrf	(btemp+9)^0,c
 11209  0123D4  5032               	movf	(btemp+10)^0,w,c
 11210  0123D6  2630               	addwf	(btemp+8)^0,f,c
 11211  0123D8  5033               	movf	(btemp+11)^0,w,c
 11212  0123DA  2231               	addwfc	(btemp+9)^0,f,c
 11213  0123DC  5031               	movf	(btemp+9)^0,w,c
 11214  0123DE  E106               	bnz	u11560
 11215  0123E0  0E0A               	movlw	10
 11216  0123E2  5C30               	subwf	(btemp+8)^0,w,c
 11217  0123E4  B0D8               	btfsc	status,0,c
 11218  0123E6  D002               	goto	u11560
 11219  0123E8  0E01               	movlw	1
 11220  0123EA  D001               	goto	u11570
 11221  0123EC                     u11560:
 11222  0123EC  0E00               	movlw	0
 11223  0123EE                     u11570:
 11224  0123EE  6E32               	movwf	(btemp+10)^0,c
 11225  0123F0  6A33               	clrf	(btemp+11)^0,c
 11226                           
 11227                           ;stkvar	_vfpfcnvrt$5386 @ sp[(-32)+4]
 11228  0123F2  0EE4               	movlw	-28
 11229  0123F4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11230  0123FA  0EE5               	movlw	-27
 11231  0123FC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11232                           
 11233                           ;stkvar	_vfpfcnvrt$5386 @ sp[(-32)+4]
 11234  012402  0EE4               	movlw	-28
 11235  012404  006F FF8C  F028    	movff	plusw1,btemp
 11236  01240A  0EE5               	movlw	-27
 11237  01240C  50E3               	movf	plusw1,w,c
 11238  01240E  1028               	iorwf	btemp^0,w,c
 11239  012410  A4D8               	btfss	status,2,c
 11240  012412  D7BD               	goto	l12050
 11241  012414                     u11580:
 11242                           
 11243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
 11244                           ;stkvar	_fmt @ sp[(-32)+-4]
 11245  012414  0EDC               	movlw	-36
 11246  012416  006F FF8F FFD9     	movff	plusw1,fsr2l
 11247  01241C  0EDD               	movlw	-35
 11248  01241E  006F FF8F FFDA     	movff	plusw1,fsr2h
 11249  012424  006F FF7B FFF6     	movff	postinc2,tblptrl
 11250  01242A  006F FF77 FFF7     	movff	postdec2,tblptrh
 11251  012430                     	if	0	;tblptru may be non-zero
 11252  012430                     	endif
 11253  012430                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11254  012430  0E00               	movlw	low (__mediumconst shr (0+16))
 11255  012432  6EF8               	movwf	tblptru,c
 11256  012434                     	endif
 11257  012434  0008               	tblrd		*
 11258  012436  50F5               	movf	tablat,w,c
 11259  012438  0A2E               	xorlw	46
 11260  01243A  A4D8               	btfss	status,2,c
 11261  01243C  D0AC               	goto	u11630
 11262                           
 11263                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
 11264  01243E  6A4A               	clrf	_prec^0,c
 11265  012440  6A4B               	clrf	(_prec+1)^0,c
 11266                           
 11267                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
 11268                           ;stkvar	_fmt @ sp[(-32)+-4]
 11269  012442  0EDC               	movlw	-36
 11270  012444  006F FF8F FFD9     	movff	plusw1,fsr2l
 11271  01244A  0EDD               	movlw	-35
 11272  01244C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11273  012452  2ADE               	incf	postinc2,f,c
 11274  012454  0E00               	movlw	0
 11275  012456  22DD               	addwfc	postdec2,f,c
 11276                           
 11277                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
 11278                           ;stkvar	_fmt @ sp[(-32)+-4]
 11279  012458  0EDC               	movlw	-36
 11280  01245A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11281  012460  0EDD               	movlw	-35
 11282  012462  006F FF8F FFDA     	movff	plusw1,fsr2h
 11283  012468  006F FF7B FFF6     	movff	postinc2,tblptrl
 11284  01246E  006F FF77 FFF7     	movff	postdec2,tblptrh
 11285  012474                     	if	0	;tblptru may be non-zero
 11286  012474                     	endif
 11287  012474                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11288  012474  0E00               	movlw	low (__mediumconst shr (0+16))
 11289  012476  6EF8               	movwf	tblptru,c
 11290  012478                     	endif
 11291  012478  0008               	tblrd		*
 11292  01247A  50F5               	movf	tablat,w,c
 11293  01247C  0A2A               	xorlw	42
 11294  01247E  A4D8               	btfss	status,2,c
 11295  012480  D02A               	goto	l12070
 11296                           
 11297                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
 11298                           ;stkvar	_fmt @ sp[(-32)+-4]
 11299  012482  0EDC               	movlw	-36
 11300  012484  006F FF8F FFD9     	movff	plusw1,fsr2l
 11301  01248A  0EDD               	movlw	-35
 11302  01248C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11303  012492  2ADE               	incf	postinc2,f,c
 11304  012494  0E00               	movlw	0
 11305  012496  22DD               	addwfc	postdec2,f,c
 11306                           
 11307                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
 11308                           ;stkvar	_ap @ sp[(-32)+-6]
 11309  012498  0EDA               	movlw	-38
 11310  01249A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11311  0124A0  0EDB               	movlw	-37
 11312  0124A2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11313  0124A8  0E02               	movlw	2
 11314  0124AA  5EDE               	subwf	postinc2,f,c
 11315  0124AC  0E00               	movlw	0
 11316  0124AE  5ADD               	subwfb	postdec2,f,c
 11317  0124B0  006F FF78  F032    	movff	postinc2,btemp+10
 11318  0124B6  006F FF74  F033    	movff	postdec2,btemp+11
 11319  0124BC  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11320  0124C2  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11321  0124C8  006F FF78  F04A    	movff	postinc2,_prec
 11322  0124CE  006F FF74  F04B    	movff	postdec2,_prec+1
 11323                           
 11324                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
 11325  0124D4  D060               	goto	u11630
 11326  0124D6                     l12070:
 11327                           
 11328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
 11329                           ;stkvar	_fmt @ sp[(-32)+-4]
 11330  0124D6  0EDC               	movlw	-36
 11331  0124D8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11332  0124DE  0EDD               	movlw	-35
 11333  0124E0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11334  0124E6  006F FF78  F032    	movff	postinc2,btemp+10
 11335  0124EC  006F FF74  F033    	movff	postdec2,btemp+11
 11336  0124F2  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11337  0124F8  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11338  0124FE  EC67  F0B8         	call	_atoi	;wreg free
 11339  012502  0060  F0A0  F04A   	movff	btemp,_prec
 11340  012508  0060  F0A4  F04B   	movff	btemp+1,_prec+1
 11341                           
 11342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 11343  01250E  D00B               	goto	l12074
 11344  012510                     l12072:
 11345                           
 11346                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
 11347                           ;stkvar	_fmt @ sp[(-32)+-4]
 11348  012510  0EDC               	movlw	-36
 11349  012512  006F FF8F FFD9     	movff	plusw1,fsr2l
 11350  012518  0EDD               	movlw	-35
 11351  01251A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11352  012520  2ADE               	incf	postinc2,f,c
 11353  012522  0E00               	movlw	0
 11354  012524  22DD               	addwfc	postdec2,f,c
 11355  012526                     l12074:
 11356  012526  0ED0               	movlw	208
 11357  012528  6E32               	movwf	(btemp+10)^0,c
 11358  01252A  0EFF               	movlw	255
 11359  01252C  6E33               	movwf	(btemp+11)^0,c
 11360                           
 11361                           ;stkvar	_fmt @ sp[(-32)+-4]
 11362  01252E  0EDC               	movlw	-36
 11363  012530  006F FF8F FFD9     	movff	plusw1,fsr2l
 11364  012536  0EDD               	movlw	-35
 11365  012538  006F FF8F FFDA     	movff	plusw1,fsr2h
 11366  01253E  006F FF7B FFF6     	movff	postinc2,tblptrl
 11367  012544  006F FF77 FFF7     	movff	postdec2,tblptrh
 11368  01254A                     	if	0	;tblptru may be non-zero
 11369  01254A                     	endif
 11370  01254A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11371  01254A  0E00               	movlw	low (__mediumconst shr (0+16))
 11372  01254C  6EF8               	movwf	tblptru,c
 11373  01254E                     	endif
 11374  01254E  0008               	tblrd		*
 11375  012550  50F5               	movf	tablat,w,c
 11376  012552  6E30               	movwf	(btemp+8)^0,c
 11377  012554  6A31               	clrf	(btemp+9)^0,c
 11378  012556  5032               	movf	(btemp+10)^0,w,c
 11379  012558  2630               	addwf	(btemp+8)^0,f,c
 11380  01255A  5033               	movf	(btemp+11)^0,w,c
 11381  01255C  2231               	addwfc	(btemp+9)^0,f,c
 11382  01255E  5031               	movf	(btemp+9)^0,w,c
 11383  012560  E106               	bnz	u11610
 11384  012562  0E0A               	movlw	10
 11385  012564  5C30               	subwf	(btemp+8)^0,w,c
 11386  012566  B0D8               	btfsc	status,0,c
 11387  012568  D002               	goto	u11610
 11388  01256A  0E01               	movlw	1
 11389  01256C  D001               	goto	u11620
 11390  01256E                     u11610:
 11391  01256E  0E00               	movlw	0
 11392  012570                     u11620:
 11393  012570  6E32               	movwf	(btemp+10)^0,c
 11394  012572  6A33               	clrf	(btemp+11)^0,c
 11395                           
 11396                           ;stkvar	_vfpfcnvrt$5387 @ sp[(-32)+0]
 11397  012574  0EE0               	movlw	-32
 11398  012576  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11399  01257C  0EE1               	movlw	-31
 11400  01257E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11401                           
 11402                           ;stkvar	_vfpfcnvrt$5387 @ sp[(-32)+0]
 11403  012584  0EE0               	movlw	-32
 11404  012586  006F FF8C  F028    	movff	plusw1,btemp
 11405  01258C  0EE1               	movlw	-31
 11406  01258E  50E3               	movf	plusw1,w,c
 11407  012590  1028               	iorwf	btemp^0,w,c
 11408  012592  A4D8               	btfss	status,2,c
 11409  012594  D7BD               	goto	l12072
 11410  012596                     u11630:
 11411                           
 11412                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
 11413                           ;stkvar	_fmt @ sp[(-32)+-4]
 11414  012596  0EDC               	movlw	-36
 11415  012598  006F FF8F FFD9     	movff	plusw1,fsr2l
 11416  01259E  0EDD               	movlw	-35
 11417  0125A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11418  0125A6  006F FF7B FFF6     	movff	postinc2,tblptrl
 11419  0125AC  006F FF77 FFF7     	movff	postdec2,tblptrh
 11420  0125B2                     	if	0	;tblptru may be non-zero
 11421  0125B2                     	endif
 11422  0125B2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11423  0125B2  0E00               	movlw	low (__mediumconst shr (0+16))
 11424  0125B4  6EF8               	movwf	tblptru,c
 11425  0125B6                     	endif
 11426  0125B6  0008               	tblrd		*
 11427  0125B8  50F5               	movf	tablat,w,c
 11428  0125BA  6EE6               	movwf	postinc1,c
 11429  0125BC  0E00               	movlw	0
 11430  0125BE  6EE6               	movwf	postinc1,c
 11431  0125C0  EC92  F0D1         	call	_tolower	;wreg free
 11432                           
 11433                           ;stkvar	_ct @ sp[(-32)+26]
 11434  0125C4  0EFA               	movlw	-6
 11435  0125C6  0060  F0A3  FFE3   	movff	btemp,plusw1
 11436                           
 11437                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
 11438                           ;stkvar	_ct @ sp[(-32)+26]
 11439  0125CC  0EFA               	movlw	-6
 11440  0125CE  50E3               	movf	plusw1,w,c
 11441  0125D0  B4D8               	btfsc	status,2,c
 11442  0125D2  D05B               	goto	l12090
 11443                           
 11444                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
 11445                           ;stkvar	_ct @ sp[(-32)+26]
 11446  0125D4  0EFB               	movlw	251
 11447  0125D6  24E1               	addwf	fsr1l,w,c
 11448  0125D8  6ED9               	movwf	fsr2l,c
 11449  0125DA  0EFF               	movlw	255
 11450  0125DC  20E2               	addwfc	fsr1h,w,c
 11451  0125DE  6EDA               	movwf	fsr2h,c
 11452                           
 11453                           ;stkvar	_fmt @ sp[(-32)+-4]
 11454  0125E0  0EDC               	movlw	-36
 11455  0125E2  006F FF8F FFE9     	movff	plusw1,fsr0l
 11456  0125E8  0EDD               	movlw	-35
 11457  0125EA  006F FF8F FFEA     	movff	plusw1,fsr0h
 11458  0125F0  006F FFB8  F032    	movff	postinc0,btemp+10
 11459  0125F6  006F FFB4  F033    	movff	postdec0,btemp+11
 11460  0125FC  0E01               	movlw	1
 11461  0125FE  2632               	addwf	(btemp+10)^0,f,c
 11462  012600  0E00               	movlw	0
 11463  012602  2233               	addwfc	(btemp+11)^0,f,c
 11464  012604  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11465  01260A  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11466  012610                     	if	0	;tblptru may be non-zero
 11467  012610                     	endif
 11468  012610                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11469  012610  0E00               	movlw	low (__mediumconst shr (0+16))
 11470  012612  6EF8               	movwf	tblptru,c
 11471  012614                     	endif
 11472  012614  0008               	tblrd		*
 11473  012616  50F5               	movf	tablat,w,c
 11474  012618  6EE6               	movwf	postinc1,c
 11475  01261A  0E00               	movlw	0
 11476  01261C  6EE6               	movwf	postinc1,c
 11477  01261E  EC92  F0D1         	call	_tolower	;wreg free
 11478  012622  5028               	movf	btemp^0,w,c
 11479  012624  6EDF               	movwf	indf2,c
 11480                           
 11481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
 11482                           ;stkvar	_ct @ sp[(-32)+26]
 11483  012626  0EFB               	movlw	251
 11484  012628  24E1               	addwf	fsr1l,w,c
 11485  01262A  6ED9               	movwf	fsr2l,c
 11486  01262C  0EFF               	movlw	255
 11487  01262E  20E2               	addwfc	fsr1h,w,c
 11488  012630  6EDA               	movwf	fsr2h,c
 11489  012632  50DF               	movf	indf2,w,c
 11490  012634  B4D8               	btfsc	status,2,c
 11491  012636  D029               	goto	l12090
 11492                           
 11493                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
 11494                           ;stkvar	_ct @ sp[(-32)+26]
 11495  012638  0EFC               	movlw	252
 11496  01263A  24E1               	addwf	fsr1l,w,c
 11497  01263C  6ED9               	movwf	fsr2l,c
 11498  01263E  0EFF               	movlw	255
 11499  012640  20E2               	addwfc	fsr1h,w,c
 11500  012642  6EDA               	movwf	fsr2h,c
 11501                           
 11502                           ;stkvar	_fmt @ sp[(-32)+-4]
 11503  012644  0EDC               	movlw	-36
 11504  012646  006F FF8F FFE9     	movff	plusw1,fsr0l
 11505  01264C  0EDD               	movlw	-35
 11506  01264E  006F FF8F FFEA     	movff	plusw1,fsr0h
 11507  012654  006F FFB8  F032    	movff	postinc0,btemp+10
 11508  01265A  006F FFB4  F033    	movff	postdec0,btemp+11
 11509  012660  0E02               	movlw	2
 11510  012662  2632               	addwf	(btemp+10)^0,f,c
 11511  012664  0E00               	movlw	0
 11512  012666  2233               	addwfc	(btemp+11)^0,f,c
 11513  012668  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11514  01266E  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11515  012674                     	if	0	;tblptru may be non-zero
 11516  012674                     	endif
 11517  012674                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11518  012674  0E00               	movlw	low (__mediumconst shr (0+16))
 11519  012676  6EF8               	movwf	tblptru,c
 11520  012678                     	endif
 11521  012678  0008               	tblrd		*
 11522  01267A  50F5               	movf	tablat,w,c
 11523  01267C  6EE6               	movwf	postinc1,c
 11524  01267E  0E00               	movlw	0
 11525  012680  6EE6               	movwf	postinc1,c
 11526  012682  EC92  F0D1         	call	_tolower	;wreg free
 11527  012686  5028               	movf	btemp^0,w,c
 11528  012688  6EDF               	movwf	indf2,c
 11529  01268A                     l12090:
 11530                           
 11531                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 11532                           ;stkvar	_fmt @ sp[(-32)+-4]
 11533  01268A  0EDC               	movlw	-36
 11534  01268C  006F FF8F FFD9     	movff	plusw1,fsr2l
 11535  012692  0EDD               	movlw	-35
 11536  012694  006F FF8F FFDA     	movff	plusw1,fsr2h
 11537  01269A  006F FF7B FFF6     	movff	postinc2,tblptrl
 11538  0126A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 11539  0126A6                     	if	0	;tblptru may be non-zero
 11540  0126A6                     	endif
 11541  0126A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11542  0126A6  0E00               	movlw	low (__mediumconst shr (0+16))
 11543  0126A8  6EF8               	movwf	tblptru,c
 11544  0126AA                     	endif
 11545  0126AA  0008               	tblrd		*
 11546  0126AC  50F5               	movf	tablat,w,c
 11547  0126AE  0A63               	xorlw	99
 11548  0126B0  A4D8               	btfss	status,2,c
 11549  0126B2  D037               	goto	l12100
 11550                           
 11551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 11552                           ;stkvar	_fmt @ sp[(-32)+-4]
 11553  0126B4  0EDC               	movlw	-36
 11554  0126B6  006F FF8F FFD9     	movff	plusw1,fsr2l
 11555  0126BC  0EDD               	movlw	-35
 11556  0126BE  006F FF8F FFDA     	movff	plusw1,fsr2h
 11557  0126C4  2ADE               	incf	postinc2,f,c
 11558  0126C6  0E00               	movlw	0
 11559  0126C8  22DD               	addwfc	postdec2,f,c
 11560                           
 11561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 11562                           ;stkvar	_ap @ sp[(-32)+-6]
 11563  0126CA  0EDA               	movlw	-38
 11564  0126CC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11565  0126D2  0EDB               	movlw	-37
 11566  0126D4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11567  0126DA  0E02               	movlw	2
 11568  0126DC  5EDE               	subwf	postinc2,f,c
 11569  0126DE  0E00               	movlw	0
 11570  0126E0  5ADD               	subwfb	postdec2,f,c
 11571  0126E2  006F FF78  F032    	movff	postinc2,btemp+10
 11572  0126E8  006F FF74  F033    	movff	postdec2,btemp+11
 11573  0126EE  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11574  0126F4  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11575  0126FA  50DF               	movf	indf2,w,c
 11576  0126FC  6E33               	movwf	(btemp+11)^0,c
 11577                           
 11578                           ;stkvar	_c @ sp[(-32)+31]
 11579  0126FE  0EFF               	movlw	-1
 11580  012700  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11581                           
 11582                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 11583                           ;stkvar	_c @ sp[(-32)+31]
 11584  012706  0EFF               	movlw	-1
 11585  012708  50E3               	movf	plusw1,w,c
 11586  01270A  6EE6               	movwf	postinc1,c
 11587                           
 11588                           ;stkvar	_fp @ sp[(-33)+-2]
 11589  01270C  0EDD               	movlw	-35
 11590  01270E  006F FF8F FFE6     	movff	plusw1,postinc1
 11591  012714  006F FF8F FFE6     	movff	plusw1,postinc1
 11592  01271A  EC0C  F0D1         	call	_ctoa	;wreg free
 11593  01271E  EF0A  F099         	goto	l2324
 11594  012722                     l12100:
 11595                           
 11596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 11597                           ;stkvar	_fmt @ sp[(-32)+-4]
 11598  012722  0EDC               	movlw	-36
 11599  012724  006F FF8F FFD9     	movff	plusw1,fsr2l
 11600  01272A  0EDD               	movlw	-35
 11601  01272C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11602  012732  006F FF7B FFF6     	movff	postinc2,tblptrl
 11603  012738  006F FF77 FFF7     	movff	postdec2,tblptrh
 11604  01273E                     	if	0	;tblptru may be non-zero
 11605  01273E                     	endif
 11606  01273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11607  01273E  0E00               	movlw	low (__mediumconst shr (0+16))
 11608  012740  6EF8               	movwf	tblptru,c
 11609  012742                     	endif
 11610  012742  0008               	tblrd		*
 11611  012744  50F5               	movf	tablat,w,c
 11612  012746  0A64               	xorlw	100
 11613  012748  B4D8               	btfsc	status,2,c
 11614  01274A  D015               	goto	u11680
 11615                           
 11616                           ;stkvar	_fmt @ sp[(-32)+-4]
 11617  01274C  0EDC               	movlw	-36
 11618  01274E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11619  012754  0EDD               	movlw	-35
 11620  012756  006F FF8F FFDA     	movff	plusw1,fsr2h
 11621  01275C  006F FF7B FFF6     	movff	postinc2,tblptrl
 11622  012762  006F FF77 FFF7     	movff	postdec2,tblptrh
 11623  012768                     	if	0	;tblptru may be non-zero
 11624  012768                     	endif
 11625  012768                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11626  012768  0E00               	movlw	low (__mediumconst shr (0+16))
 11627  01276A  6EF8               	movwf	tblptru,c
 11628  01276C                     	endif
 11629  01276C  0008               	tblrd		*
 11630  01276E  50F5               	movf	tablat,w,c
 11631  012770  0A69               	xorlw	105
 11632  012772  A4D8               	btfss	status,2,c
 11633  012774  D076               	goto	l12112
 11634  012776                     u11680:
 11635                           
 11636                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 11637                           ;stkvar	_fmt @ sp[(-32)+-4]
 11638  012776  0EDC               	movlw	-36
 11639  012778  006F FF8F FFD9     	movff	plusw1,fsr2l
 11640  01277E  0EDD               	movlw	-35
 11641  012780  006F FF8F FFDA     	movff	plusw1,fsr2h
 11642  012786  2ADE               	incf	postinc2,f,c
 11643  012788  0E00               	movlw	0
 11644  01278A  22DD               	addwfc	postdec2,f,c
 11645                           
 11646                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 11647                           ;stkvar	_ap @ sp[(-32)+-6]
 11648  01278C  0EDA               	movlw	-38
 11649  01278E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11650  012794  0EDB               	movlw	-37
 11651  012796  006F FF8F FFDA     	movff	plusw1,fsr2h
 11652  01279C  0E02               	movlw	2
 11653  01279E  5EDE               	subwf	postinc2,f,c
 11654  0127A0  0E00               	movlw	0
 11655  0127A2  5ADD               	subwfb	postdec2,f,c
 11656  0127A4  006F FF78  F032    	movff	postinc2,btemp+10
 11657  0127AA  006F FF74  F033    	movff	postdec2,btemp+11
 11658  0127B0  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11659  0127B6  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11660  0127BC  006F FF78  F032    	movff	postinc2,btemp+10
 11661  0127C2  006F FF74  F033    	movff	postdec2,btemp+11
 11662                           
 11663                           ;stkvar	_ll @ sp[(-32)+14]
 11664  0127C8  0EEE               	movlw	-18
 11665  0127CA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11666  0127D0  0EEF               	movlw	-17
 11667  0127D2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11668  0127D8  6A28               	clrf	btemp^0,c
 11669  0127DA  BEE3               	btfsc	plusw1,7,c
 11670  0127DC  6828               	setf	btemp^0,c
 11671  0127DE  0EF0               	movlw	-16
 11672  0127E0  0060  F0A3  FFE3   	movff	btemp,plusw1
 11673  0127E6  0EF1               	movlw	-15
 11674  0127E8  0060  F0A3  FFE3   	movff	btemp,plusw1
 11675  0127EE  0EF2               	movlw	-14
 11676  0127F0  0060  F0A3  FFE3   	movff	btemp,plusw1
 11677  0127F6  0EF3               	movlw	-13
 11678  0127F8  0060  F0A3  FFE3   	movff	btemp,plusw1
 11679  0127FE  0EF4               	movlw	-12
 11680  012800  0060  F0A3  FFE3   	movff	btemp,plusw1
 11681  012806  0EF5               	movlw	-11
 11682  012808  0060  F0A3  FFE3   	movff	btemp,plusw1
 11683  01280E                     l12108:
 11684                           
 11685                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 11686                           ;stkvar	_ll @ sp[(-32)+14]
 11687  01280E  50E1               	movf	fsr1l,w,c
 11688  012810  0FEE               	addlw	-18
 11689  012812  6ED9               	movwf	fsr2l,c
 11690  012814  50E2               	movf	fsr1h,w,c
 11691  012816  6EDA               	movwf	fsr2h,c
 11692  012818  0EFF               	movlw	255
 11693  01281A  22DA               	addwfc	fsr2h,f,c
 11694  01281C  006F FF7B FFE6     	movff	postinc2,postinc1
 11695  012822  006F FF7B FFE6     	movff	postinc2,postinc1
 11696  012828  006F FF7B FFE6     	movff	postinc2,postinc1
 11697  01282E  006F FF7B FFE6     	movff	postinc2,postinc1
 11698  012834  006F FF7B FFE6     	movff	postinc2,postinc1
 11699  01283A  006F FF7B FFE6     	movff	postinc2,postinc1
 11700  012840  006F FF7B FFE6     	movff	postinc2,postinc1
 11701  012846  006F FF7B FFE6     	movff	postinc2,postinc1
 11702                           
 11703                           ;stkvar	_fp @ sp[(-40)+-2]
 11704  01284C  0ED6               	movlw	-42
 11705  01284E  006F FF8F FFE6     	movff	plusw1,postinc1
 11706  012854  006F FF8F FFE6     	movff	plusw1,postinc1
 11707  01285A  ECAE  F0A9         	call	_dtoa	;wreg free
 11708  01285E  EF0A  F099         	goto	l2324
 11709  012862                     l12112:
 11710                           
 11711                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 11712  012862  0E02               	movlw	2
 11713  012864  6EE6               	movwf	postinc1,c
 11714  012866  0E00               	movlw	0
 11715  012868  6EE6               	movwf	postinc1,c
 11716  01286A  0EE9               	movlw	low STR_74
 11717  01286C  6EE6               	movwf	postinc1,c
 11718  01286E  0EFF               	movlw	high STR_74
 11719  012870  6EE6               	movwf	postinc1,c
 11720                           
 11721                           ;stkvar	_fmt @ sp[(-36)+-4]
 11722  012872  0ED8               	movlw	-40
 11723  012874  006F FF8F FFD9     	movff	plusw1,fsr2l
 11724  01287A  0ED9               	movlw	-39
 11725  01287C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11726  012882  006F FF78  F032    	movff	postinc2,btemp+10
 11727  012888  006F FF74  F033    	movff	postdec2,btemp+11
 11728  01288E  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11729  012894  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11730  01289A  ECC1  F0BA         	call	_strncmp	;wreg free
 11731  01289E  5028               	movf	btemp^0,w,c
 11732  0128A0  1029               	iorwf	(btemp+1)^0,w,c
 11733  0128A2  B4D8               	btfsc	status,2,c
 11734  0128A4  D022               	goto	u11700
 11735  0128A6  0E02               	movlw	2
 11736  0128A8  6EE6               	movwf	postinc1,c
 11737  0128AA  0E00               	movlw	0
 11738  0128AC  6EE6               	movwf	postinc1,c
 11739  0128AE  0EEF               	movlw	low STR_78
 11740  0128B0  6EE6               	movwf	postinc1,c
 11741  0128B2  0EFF               	movlw	high STR_78
 11742  0128B4  6EE6               	movwf	postinc1,c
 11743                           
 11744                           ;stkvar	_fmt @ sp[(-36)+-4]
 11745  0128B6  0ED8               	movlw	-40
 11746  0128B8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11747  0128BE  0ED9               	movlw	-39
 11748  0128C0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11749  0128C6  006F FF78  F032    	movff	postinc2,btemp+10
 11750  0128CC  006F FF74  F033    	movff	postdec2,btemp+11
 11751  0128D2  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 11752  0128D8  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 11753  0128DE  ECC1  F0BA         	call	_strncmp	;wreg free
 11754  0128E2  5028               	movf	btemp^0,w,c
 11755  0128E4  1029               	iorwf	(btemp+1)^0,w,c
 11756  0128E6  A4D8               	btfss	status,2,c
 11757  0128E8  D069               	goto	l12124
 11758  0128EA                     u11700:
 11759                           
 11760                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11761                           ;stkvar	_fmt @ sp[(-32)+-4]
 11762  0128EA  0EDC               	movlw	-36
 11763  0128EC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11764  0128F2  0EDD               	movlw	-35
 11765  0128F4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11766  0128FA  0E02               	movlw	2
 11767  0128FC  26DE               	addwf	postinc2,f,c
 11768  0128FE  0E00               	movlw	0
 11769  012900  22DD               	addwfc	postdec2,f,c
 11770                           
 11771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11772                           ;stkvar	_ap @ sp[(-32)+-6]
 11773  012902  0EDA               	movlw	-38
 11774  012904  006F FF8F FFD9     	movff	plusw1,fsr2l
 11775  01290A  0EDB               	movlw	-37
 11776  01290C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11777  012912  0E04               	movlw	4
 11778  012914  5EDE               	subwf	postinc2,f,c
 11779  012916  0E00               	movlw	0
 11780  012918  5ADD               	subwfb	postdec2,f,c
 11781  01291A  006F FF78  F032    	movff	postinc2,btemp+10
 11782  012920  006F FF74  F033    	movff	postdec2,btemp+11
 11783  012926  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11784  01292C  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11785  012932  006F FF78  F030    	movff	postinc2,btemp+8
 11786  012938  006F FF78  F031    	movff	postinc2,btemp+9
 11787  01293E  006F FF78  F032    	movff	postinc2,btemp+10
 11788  012944  006F FF78  F033    	movff	postinc2,btemp+11
 11789  01294A  0060  F0C0  F038   	movff	btemp+8,btemp+16
 11790  012950  0060  F0C4  F039   	movff	btemp+9,btemp+17
 11791  012956  0060  F0C8  F03A   	movff	btemp+10,btemp+18
 11792  01295C  0060  F0CC  F03B   	movff	btemp+11,btemp+19
 11793  012962  6A3C               	clrf	(btemp+20)^0,c
 11794  012964  BE3B               	btfsc	(btemp+19)^0,7,c
 11795  012966  683C               	setf	(btemp+20)^0,c
 11796  012968  0060  F0F0  F03D   	movff	btemp+20,btemp+21
 11797  01296E  0060  F0F0  F03E   	movff	btemp+20,btemp+22
 11798  012974  0060  F0F0  F03F   	movff	btemp+20,btemp+23
 11799                           
 11800                           ;stkvar	_ll @ sp[(-32)+14]
 11801  01297A  0EEE               	movlw	-18
 11802  01297C  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 11803  012982  0EEF               	movlw	-17
 11804  012984  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 11805  01298A  0EF0               	movlw	-16
 11806  01298C  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 11807  012992  0EF1               	movlw	-15
 11808  012994  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 11809  01299A  0EF2               	movlw	-14
 11810  01299C  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 11811  0129A2  0EF3               	movlw	-13
 11812  0129A4  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 11813  0129AA  0EF4               	movlw	-12
 11814  0129AC  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 11815  0129B2  0EF5               	movlw	-11
 11816  0129B4  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 11817  0129BA  D729               	goto	l12108
 11818  0129BC                     l12124:
 11819                           
 11820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
 11821                           ;stkvar	_ct @ sp[(-32)+26]
 11822  0129BC  0EFA               	movlw	-6
 11823  0129BE  006F FF8C  F028    	movff	plusw1,btemp
 11824  0129C4  0E66               	movlw	102
 11825  0129C6  1828               	xorwf	btemp^0,w,c
 11826  0129C8  A4D8               	btfss	status,2,c
 11827  0129CA  D06E               	goto	l12136
 11828                           
 11829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
 11830                           ;stkvar	_fmt @ sp[(-32)+-4]
 11831  0129CC  0EDC               	movlw	-36
 11832  0129CE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11833  0129D4  0EDD               	movlw	-35
 11834  0129D6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11835  0129DC  006F FF7B FFF6     	movff	postinc2,tblptrl
 11836  0129E2  006F FF77 FFF7     	movff	postdec2,tblptrh
 11837  0129E8                     	if	0	;tblptru may be non-zero
 11838  0129E8                     	endif
 11839  0129E8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11840  0129E8  0E00               	movlw	low (__mediumconst shr (0+16))
 11841  0129EA  6EF8               	movwf	tblptru,c
 11842  0129EC                     	endif
 11843                           
 11844                           ;stkvar	_c @ sp[(-32)+31]
 11845  0129EC  0008               	tblrd		*
 11846  0129EE  0EFF               	movlw	-1
 11847  0129F0  006F FFD7 FFE3     	movff	tablat,plusw1
 11848                           
 11849                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
 11850                           ;stkvar	_fmt @ sp[(-32)+-4]
 11851  0129F6  0EDC               	movlw	-36
 11852  0129F8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11853  0129FE  0EDD               	movlw	-35
 11854  012A00  006F FF8F FFDA     	movff	plusw1,fsr2h
 11855  012A06  2ADE               	incf	postinc2,f,c
 11856  012A08  0E00               	movlw	0
 11857  012A0A  22DD               	addwfc	postdec2,f,c
 11858                           
 11859                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
 11860                           ;stkvar	_ap @ sp[(-32)+-6]
 11861  012A0C  0EDA               	movlw	-38
 11862  012A0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 11863  012A14  0EDB               	movlw	-37
 11864  012A16  006F FF8F FFDA     	movff	plusw1,fsr2h
 11865  012A1C  0E04               	movlw	4
 11866  012A1E  5EDE               	subwf	postinc2,f,c
 11867  012A20  0E00               	movlw	0
 11868  012A22  5ADD               	subwfb	postdec2,f,c
 11869  012A24  006F FF78  F032    	movff	postinc2,btemp+10
 11870  012A2A  006F FF74  F033    	movff	postdec2,btemp+11
 11871  012A30  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 11872  012A36  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 11873  012A3C  006F FF78  F030    	movff	postinc2,btemp+8
 11874  012A42  006F FF78  F031    	movff	postinc2,btemp+9
 11875  012A48  006F FF78  F032    	movff	postinc2,btemp+10
 11876  012A4E  006F FF78  F033    	movff	postinc2,btemp+11
 11877                           
 11878                           ;stkvar	_f @ sp[(-32)+22]
 11879  012A54  0EF6               	movlw	-10
 11880  012A56  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 11881  012A5C  0EF7               	movlw	-9
 11882  012A5E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 11883  012A64  0EF8               	movlw	-8
 11884  012A66  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 11885  012A6C  0EF9               	movlw	-7
 11886  012A6E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 11887  012A74                     l12132:
 11888                           
 11889                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
 11890                           ;stkvar	_c @ sp[(-32)+31]
 11891  012A74  0EFF               	movlw	-1
 11892  012A76  50E3               	movf	plusw1,w,c
 11893  012A78  6EE6               	movwf	postinc1,c
 11894                           
 11895                           ;stkvar	_f @ sp[(-33)+22]
 11896  012A7A  0EF5               	movlw	-11
 11897  012A7C  006F FF8F FFE6     	movff	plusw1,postinc1
 11898  012A82  006F FF8F FFE6     	movff	plusw1,postinc1
 11899  012A88  006F FF8F FFE6     	movff	plusw1,postinc1
 11900  012A8E  006F FF8F FFE6     	movff	plusw1,postinc1
 11901                           
 11902                           ;stkvar	_fp @ sp[(-37)+-2]
 11903  012A94  0ED9               	movlw	-39
 11904  012A96  006F FF8F FFE6     	movff	plusw1,postinc1
 11905  012A9C  006F FF8F FFE6     	movff	plusw1,postinc1
 11906  012AA2  EC00  F080         	call	_efgtoa	;wreg free
 11907  012AA6  D3B6               	goto	l2324
 11908  012AA8                     l12136:
 11909                           
 11910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
 11911  012AA8  0E02               	movlw	2
 11912  012AAA  6EE6               	movwf	postinc1,c
 11913  012AAC  0E00               	movlw	0
 11914  012AAE  6EE6               	movwf	postinc1,c
 11915  012AB0  0EEC               	movlw	low STR_83
 11916  012AB2  6EE6               	movwf	postinc1,c
 11917  012AB4  0EFF               	movlw	high STR_83
 11918  012AB6  6EE6               	movwf	postinc1,c
 11919                           
 11920                           ;stkvar	_ct @ sp[(-36)+26]
 11921  012AB8  0EF6               	movlw	246
 11922  012ABA  24E1               	addwf	fsr1l,w,c
 11923  012ABC  6E28               	movwf	btemp^0,c
 11924  012ABE  0EFF               	movlw	255
 11925  012AC0  20E2               	addwfc	fsr1h,w,c
 11926  012AC2  6E29               	movwf	(btemp+1)^0,c
 11927  012AC4  0060  F0A3  FFE6   	movff	btemp,postinc1
 11928  012ACA  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 11929  012AD0  ECC1  F0BA         	call	_strncmp	;wreg free
 11930  012AD4  5028               	movf	btemp^0,w,c
 11931  012AD6  1029               	iorwf	(btemp+1)^0,w,c
 11932  012AD8  A4D8               	btfss	status,2,c
 11933  012ADA  D096               	goto	l12156
 11934                           
 11935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
 11936                           ;stkvar	_fmt @ sp[(-32)+-4]
 11937  012ADC  0EDC               	movlw	-36
 11938  012ADE  006F FF8F FFD9     	movff	plusw1,fsr2l
 11939  012AE4  0EDD               	movlw	-35
 11940  012AE6  006F FF8F FFDA     	movff	plusw1,fsr2h
 11941  012AEC  006F FF78  F032    	movff	postinc2,btemp+10
 11942  012AF2  006F FF74  F033    	movff	postdec2,btemp+11
 11943  012AF8  0E01               	movlw	1
 11944  012AFA  2632               	addwf	(btemp+10)^0,f,c
 11945  012AFC  0E00               	movlw	0
 11946  012AFE  2233               	addwfc	(btemp+11)^0,f,c
 11947  012B00  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 11948  012B06  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 11949  012B0C                     	if	0	;tblptru may be non-zero
 11950  012B0C                     	endif
 11951  012B0C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11952  012B0C  0E00               	movlw	low (__mediumconst shr (0+16))
 11953  012B0E  6EF8               	movwf	tblptru,c
 11954  012B10                     	endif
 11955                           
 11956                           ;stkvar	_c @ sp[(-32)+31]
 11957  012B10  0008               	tblrd		*
 11958  012B12  0EFF               	movlw	-1
 11959  012B14  006F FFD7 FFE3     	movff	tablat,plusw1
 11960  012B1A  0EBF               	movlw	191
 11961  012B1C  6E32               	movwf	(btemp+10)^0,c
 11962  012B1E  0EFF               	movlw	255
 11963  012B20  6E33               	movwf	(btemp+11)^0,c
 11964                           
 11965                           ;stkvar	_fmt @ sp[(-32)+-4]
 11966  012B22  0EDC               	movlw	-36
 11967  012B24  006F FF8F FFD9     	movff	plusw1,fsr2l
 11968  012B2A  0EDD               	movlw	-35
 11969  012B2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11970  012B32  006F FF7B FFF6     	movff	postinc2,tblptrl
 11971  012B38  006F FF77 FFF7     	movff	postdec2,tblptrh
 11972  012B3E                     	if	0	;tblptru may be non-zero
 11973  012B3E                     	endif
 11974  012B3E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11975  012B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 11976  012B40  6EF8               	movwf	tblptru,c
 11977  012B42                     	endif
 11978  012B42  0008               	tblrd		*
 11979  012B44  50F5               	movf	tablat,w,c
 11980  012B46  6E30               	movwf	(btemp+8)^0,c
 11981  012B48  6A31               	clrf	(btemp+9)^0,c
 11982  012B4A  5032               	movf	(btemp+10)^0,w,c
 11983  012B4C  2630               	addwf	(btemp+8)^0,f,c
 11984  012B4E  5033               	movf	(btemp+11)^0,w,c
 11985  012B50  2231               	addwfc	(btemp+9)^0,f,c
 11986  012B52  5031               	movf	(btemp+9)^0,w,c
 11987  012B54  E106               	bnz	u11730
 11988  012B56  0E1A               	movlw	26
 11989  012B58  5C30               	subwf	(btemp+8)^0,w,c
 11990  012B5A  B0D8               	btfsc	status,0,c
 11991  012B5C  D002               	goto	u11730
 11992  012B5E  0E01               	movlw	1
 11993  012B60  D001               	goto	u11740
 11994  012B62                     u11730:
 11995  012B62  0E00               	movlw	0
 11996  012B64                     u11740:
 11997  012B64  6E32               	movwf	(btemp+10)^0,c
 11998  012B66  6A33               	clrf	(btemp+11)^0,c
 11999                           
 12000                           ;stkvar	_vfpfcnvrt$5398 @ sp[(-32)+2]
 12001  012B68  0EE2               	movlw	-30
 12002  012B6A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12003  012B70  0EE3               	movlw	-29
 12004  012B72  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12005                           
 12006                           ;stkvar	_vfpfcnvrt$5398 @ sp[(-32)+2]
 12007  012B78  0EE2               	movlw	-30
 12008  012B7A  006F FF8C  F028    	movff	plusw1,btemp
 12009  012B80  0EE3               	movlw	-29
 12010  012B82  50E3               	movf	plusw1,w,c
 12011  012B84  1028               	iorwf	btemp^0,w,c
 12012                           
 12013                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
 12014                           ;stkvar	_ap @ sp[(-32)+-6]
 12015                           
 12016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
 12017                           
 12018                           ;stkvar	_f @ sp[(-32)+22]
 12019                           
 12020                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
 12021                           ;stkvar	_ap @ sp[(-32)+-6]
 12022  012B86  0EDA               	movlw	-38
 12023  012B88  006F FF8F FFD9     	movff	plusw1,fsr2l
 12024  012B8E  0EDB               	movlw	-37
 12025  012B90  006F FF8F FFDA     	movff	plusw1,fsr2h
 12026  012B96  0E04               	movlw	4
 12027  012B98  5EDE               	subwf	postinc2,f,c
 12028  012B9A  0E00               	movlw	0
 12029  012B9C  5ADD               	subwfb	postdec2,f,c
 12030  012B9E  006F FF78  F032    	movff	postinc2,btemp+10
 12031  012BA4  006F FF74  F033    	movff	postdec2,btemp+11
 12032  012BAA  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12033  012BB0  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12034  012BB6  006F FF78  F030    	movff	postinc2,btemp+8
 12035  012BBC  006F FF78  F031    	movff	postinc2,btemp+9
 12036  012BC2  006F FF78  F032    	movff	postinc2,btemp+10
 12037  012BC8  006F FF78  F033    	movff	postinc2,btemp+11
 12038                           
 12039                           ;stkvar	_f @ sp[(-32)+22]
 12040  012BCE  0EF6               	movlw	-10
 12041  012BD0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 12042  012BD6  0EF7               	movlw	-9
 12043  012BD8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 12044  012BDE  0EF8               	movlw	-8
 12045  012BE0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12046  012BE6  0EF9               	movlw	-7
 12047  012BE8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12048                           
 12049                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
 12050                           ;stkvar	_fmt @ sp[(-32)+-4]
 12051  012BEE  0EDC               	movlw	-36
 12052  012BF0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12053  012BF6  0EDD               	movlw	-35
 12054  012BF8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12055  012BFE  0E02               	movlw	2
 12056  012C00  26DE               	addwf	postinc2,f,c
 12057  012C02  0E00               	movlw	0
 12058  012C04  22DD               	addwfc	postdec2,f,c
 12059  012C06  D736               	goto	l12132
 12060  012C08                     l12156:
 12061                           
 12062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 12063                           ;stkvar	_fmt @ sp[(-32)+-4]
 12064  012C08  0EDC               	movlw	-36
 12065  012C0A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12066  012C10  0EDD               	movlw	-35
 12067  012C12  006F FF8F FFDA     	movff	plusw1,fsr2h
 12068  012C18  006F FF7B FFF6     	movff	postinc2,tblptrl
 12069  012C1E  006F FF77 FFF7     	movff	postdec2,tblptrh
 12070  012C24                     	if	0	;tblptru may be non-zero
 12071  012C24                     	endif
 12072  012C24                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12073  012C24  0E00               	movlw	low (__mediumconst shr (0+16))
 12074  012C26  6EF8               	movwf	tblptru,c
 12075  012C28                     	endif
 12076  012C28  0008               	tblrd		*
 12077  012C2A  50F5               	movf	tablat,w,c
 12078  012C2C  0A73               	xorlw	115
 12079  012C2E  A4D8               	btfss	status,2,c
 12080  012C30  D042               	goto	l12166
 12081                           
 12082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 12083                           ;stkvar	_fmt @ sp[(-32)+-4]
 12084  012C32  0EDC               	movlw	-36
 12085  012C34  006F FF8F FFD9     	movff	plusw1,fsr2l
 12086  012C3A  0EDD               	movlw	-35
 12087  012C3C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12088  012C42  2ADE               	incf	postinc2,f,c
 12089  012C44  0E00               	movlw	0
 12090  012C46  22DD               	addwfc	postdec2,f,c
 12091                           
 12092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 12093                           ;stkvar	_ap @ sp[(-32)+-6]
 12094  012C48  0EDA               	movlw	-38
 12095  012C4A  006F FF8F FFD9     	movff	plusw1,fsr2l
 12096  012C50  0EDB               	movlw	-37
 12097  012C52  006F FF8F FFDA     	movff	plusw1,fsr2h
 12098  012C58  0E02               	movlw	2
 12099  012C5A  5EDE               	subwf	postinc2,f,c
 12100  012C5C  0E00               	movlw	0
 12101  012C5E  5ADD               	subwfb	postdec2,f,c
 12102  012C60  006F FF78  F032    	movff	postinc2,btemp+10
 12103  012C66  006F FF74  F033    	movff	postdec2,btemp+11
 12104  012C6C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12105  012C72  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12106  012C78  006F FF78  F032    	movff	postinc2,btemp+10
 12107  012C7E  006F FF74  F033    	movff	postdec2,btemp+11
 12108                           
 12109                           ;stkvar	_cp @ sp[(-32)+29]
 12110  012C84  0EFE               	movlw	-2
 12111  012C86  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12112  012C8C  0EFD               	movlw	-3
 12113  012C8E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12114                           
 12115                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 12116                           ;stkvar	_cp @ sp[(-32)+29]
 12117  012C94  0EFD               	movlw	-3
 12118  012C96  006F FF8F FFE6     	movff	plusw1,postinc1
 12119  012C9C  006F FF8F FFE6     	movff	plusw1,postinc1
 12120                           
 12121                           ;stkvar	_fp @ sp[(-34)+-2]
 12122  012CA2  0EDC               	movlw	-36
 12123  012CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12124  012CAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12125  012CB0  ECC8  F0B5         	call	_stoa	;wreg free
 12126  012CB4  D2AF               	goto	l2324
 12127  012CB6                     l12166:
 12128                           
 12129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
 12130                           ;stkvar	_fmt @ sp[(-32)+-4]
 12131  012CB6  0EDC               	movlw	-36
 12132  012CB8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12133  012CBE  0EDD               	movlw	-35
 12134  012CC0  006F FF8F FFDA     	movff	plusw1,fsr2h
 12135  012CC6  006F FF7B FFF6     	movff	postinc2,tblptrl
 12136  012CCC  006F FF77 FFF7     	movff	postdec2,tblptrh
 12137  012CD2                     	if	0	;tblptru may be non-zero
 12138  012CD2                     	endif
 12139  012CD2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12140  012CD2  0E00               	movlw	low (__mediumconst shr (0+16))
 12141  012CD4  6EF8               	movwf	tblptru,c
 12142  012CD6                     	endif
 12143  012CD6  0008               	tblrd		*
 12144  012CD8  50F5               	movf	tablat,w,c
 12145  012CDA  0A75               	xorlw	117
 12146  012CDC  A4D8               	btfss	status,2,c
 12147  012CDE  D07C               	goto	l12176
 12148                           
 12149                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
 12150                           ;stkvar	_fmt @ sp[(-32)+-4]
 12151  012CE0  0EDC               	movlw	-36
 12152  012CE2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12153  012CE8  0EDD               	movlw	-35
 12154  012CEA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12155  012CF0  2ADE               	incf	postinc2,f,c
 12156  012CF2  0E00               	movlw	0
 12157  012CF4  22DD               	addwfc	postdec2,f,c
 12158                           
 12159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12160                           ;stkvar	_ap @ sp[(-32)+-6]
 12161  012CF6  0EDA               	movlw	-38
 12162  012CF8  006F FF8F FFD9     	movff	plusw1,fsr2l
 12163  012CFE  0EDB               	movlw	-37
 12164  012D00  006F FF8F FFDA     	movff	plusw1,fsr2h
 12165  012D06  0E02               	movlw	2
 12166  012D08  5EDE               	subwf	postinc2,f,c
 12167  012D0A  0E00               	movlw	0
 12168  012D0C  5ADD               	subwfb	postdec2,f,c
 12169  012D0E  006F FF78  F032    	movff	postinc2,btemp+10
 12170  012D14  006F FF74  F033    	movff	postdec2,btemp+11
 12171  012D1A  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12172  012D20  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12173  012D26  006F FF78  F032    	movff	postinc2,btemp+10
 12174  012D2C  006F FF74  F033    	movff	postdec2,btemp+11
 12175  012D32  5032               	movf	(btemp+10)^0,w,c
 12176  012D34  6E38               	movwf	(btemp+16)^0,c
 12177  012D36  5033               	movf	(btemp+11)^0,w,c
 12178  012D38  6E39               	movwf	(btemp+17)^0,c
 12179  012D3A  6A3A               	clrf	(btemp+18)^0,c
 12180  012D3C  6A3B               	clrf	(btemp+19)^0,c
 12181  012D3E  6A3C               	clrf	(btemp+20)^0,c
 12182  012D40  6A3D               	clrf	(btemp+21)^0,c
 12183  012D42  6A3E               	clrf	(btemp+22)^0,c
 12184  012D44  6A3F               	clrf	(btemp+23)^0,c
 12185                           
 12186                           ;stkvar	_llu @ sp[(-32)+6]
 12187  012D46  0EE6               	movlw	-26
 12188  012D48  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 12189  012D4E  0EE7               	movlw	-25
 12190  012D50  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 12191  012D56  0EE8               	movlw	-24
 12192  012D58  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 12193  012D5E  0EE9               	movlw	-23
 12194  012D60  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 12195  012D66  0EEA               	movlw	-22
 12196  012D68  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 12197  012D6E  0EEB               	movlw	-21
 12198  012D70  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 12199  012D76  0EEC               	movlw	-20
 12200  012D78  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 12201  012D7E  0EED               	movlw	-19
 12202  012D80  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 12203                           
 12204                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
 12205                           ;stkvar	_llu @ sp[(-32)+6]
 12206  012D86  50E1               	movf	fsr1l,w,c
 12207  012D88  0FE6               	addlw	-26
 12208  012D8A  6ED9               	movwf	fsr2l,c
 12209  012D8C  50E2               	movf	fsr1h,w,c
 12210  012D8E  6EDA               	movwf	fsr2h,c
 12211  012D90  0EFF               	movlw	255
 12212  012D92  22DA               	addwfc	fsr2h,f,c
 12213  012D94  006F FF7B FFE6     	movff	postinc2,postinc1
 12214  012D9A  006F FF7B FFE6     	movff	postinc2,postinc1
 12215  012DA0  006F FF7B FFE6     	movff	postinc2,postinc1
 12216  012DA6  006F FF7B FFE6     	movff	postinc2,postinc1
 12217  012DAC  006F FF7B FFE6     	movff	postinc2,postinc1
 12218  012DB2  006F FF7B FFE6     	movff	postinc2,postinc1
 12219  012DB8  006F FF7B FFE6     	movff	postinc2,postinc1
 12220  012DBE  006F FF7B FFE6     	movff	postinc2,postinc1
 12221                           
 12222                           ;stkvar	_fp @ sp[(-40)+-2]
 12223  012DC4  0ED6               	movlw	-42
 12224  012DC6  006F FF8F FFE6     	movff	plusw1,postinc1
 12225  012DCC  006F FF8F FFE6     	movff	plusw1,postinc1
 12226  012DD2  EC52  F0B1         	call	_utoa	;wreg free
 12227  012DD6  D21E               	goto	l2324
 12228  012DD8                     l12176:
 12229                           
 12230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
 12231  012DD8  0E02               	movlw	2
 12232  012DDA  6EE6               	movwf	postinc1,c
 12233  012DDC  0E00               	movlw	0
 12234  012DDE  6EE6               	movwf	postinc1,c
 12235  012DE0  0EF2               	movlw	low STR_88
 12236  012DE2  6EE6               	movwf	postinc1,c
 12237  012DE4  0EFF               	movlw	high STR_88
 12238  012DE6  6EE6               	movwf	postinc1,c
 12239                           
 12240                           ;stkvar	_fmt @ sp[(-36)+-4]
 12241  012DE8  0ED8               	movlw	-40
 12242  012DEA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12243  012DF0  0ED9               	movlw	-39
 12244  012DF2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12245  012DF8  006F FF78  F032    	movff	postinc2,btemp+10
 12246  012DFE  006F FF74  F033    	movff	postdec2,btemp+11
 12247  012E04  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12248  012E0A  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12249  012E10  ECC1  F0BA         	call	_strncmp	;wreg free
 12250  012E14  5028               	movf	btemp^0,w,c
 12251  012E16  1029               	iorwf	(btemp+1)^0,w,c
 12252  012E18  A4D8               	btfss	status,2,c
 12253  012E1A  D039               	goto	l12186
 12254                           
 12255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
 12256                           ;stkvar	_fmt @ sp[(-32)+-4]
 12257  012E1C  0EDC               	movlw	-36
 12258  012E1E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12259  012E24  0EDD               	movlw	-35
 12260  012E26  006F FF8F FFDA     	movff	plusw1,fsr2h
 12261  012E2C  0E02               	movlw	2
 12262  012E2E  26DE               	addwf	postinc2,f,c
 12263  012E30  0E00               	movlw	0
 12264  012E32  22DD               	addwfc	postdec2,f,c
 12265                           
 12266                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12267                           ;stkvar	_ap @ sp[(-32)+-6]
 12268  012E34  0EDA               	movlw	-38
 12269  012E36  006F FF8F FFD9     	movff	plusw1,fsr2l
 12270  012E3C  0EDB               	movlw	-37
 12271  012E3E  006F FF8F FFDA     	movff	plusw1,fsr2h
 12272  012E44  0E04               	movlw	4
 12273  012E46  5EDE               	subwf	postinc2,f,c
 12274  012E48  0E00               	movlw	0
 12275  012E4A  5ADD               	subwfb	postdec2,f,c
 12276  012E4C  006F FF78  F032    	movff	postinc2,btemp+10
 12277  012E52  006F FF74  F033    	movff	postdec2,btemp+11
 12278  012E58  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12279  012E5E  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12280  012E64  006F FF78  F030    	movff	postinc2,btemp+8
 12281  012E6A  006F FF78  F031    	movff	postinc2,btemp+9
 12282  012E70  006F FF78  F032    	movff	postinc2,btemp+10
 12283  012E76  006F FF78  F033    	movff	postinc2,btemp+11
 12284  012E7C  5030               	movf	(btemp+8)^0,w,c
 12285  012E7E  6E38               	movwf	(btemp+16)^0,c
 12286  012E80  5031               	movf	(btemp+9)^0,w,c
 12287  012E82  6E39               	movwf	(btemp+17)^0,c
 12288  012E84  5032               	movf	(btemp+10)^0,w,c
 12289  012E86  6E3A               	movwf	(btemp+18)^0,c
 12290  012E88  5033               	movf	(btemp+11)^0,w,c
 12291  012E8A  6E3B               	movwf	(btemp+19)^0,c
 12292  012E8C  D758               	goto	L8
 12293  012E8E                     l12186:
 12294                           
 12295                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
 12296                           ;stkvar	_fmt @ sp[(-32)+-4]
 12297  012E8E  0EDC               	movlw	-36
 12298  012E90  006F FF8F FFD9     	movff	plusw1,fsr2l
 12299  012E96  0EDD               	movlw	-35
 12300  012E98  006F FF8F FFDA     	movff	plusw1,fsr2h
 12301  012E9E  006F FF7B FFF6     	movff	postinc2,tblptrl
 12302  012EA4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12303  012EAA                     	if	0	;tblptru may be non-zero
 12304  012EAA                     	endif
 12305  012EAA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12306  012EAA  0E00               	movlw	low (__mediumconst shr (0+16))
 12307  012EAC  6EF8               	movwf	tblptru,c
 12308  012EAE                     	endif
 12309  012EAE  0008               	tblrd		*
 12310  012EB0  50F5               	movf	tablat,w,c
 12311  012EB2  0A78               	xorlw	120
 12312  012EB4  B4D8               	btfsc	status,2,c
 12313  012EB6  D015               	goto	u11800
 12314                           
 12315                           ;stkvar	_fmt @ sp[(-32)+-4]
 12316  012EB8  0EDC               	movlw	-36
 12317  012EBA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12318  012EC0  0EDD               	movlw	-35
 12319  012EC2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12320  012EC8  006F FF7B FFF6     	movff	postinc2,tblptrl
 12321  012ECE  006F FF77 FFF7     	movff	postdec2,tblptrh
 12322  012ED4                     	if	0	;tblptru may be non-zero
 12323  012ED4                     	endif
 12324  012ED4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12325  012ED4  0E00               	movlw	low (__mediumconst shr (0+16))
 12326  012ED6  6EF8               	movwf	tblptru,c
 12327  012ED8                     	endif
 12328  012ED8  0008               	tblrd		*
 12329  012EDA  50F5               	movf	tablat,w,c
 12330  012EDC  0A58               	xorlw	88
 12331  012EDE  A4D8               	btfss	status,2,c
 12332  012EE0  D094               	goto	l12200
 12333  012EE2                     u11800:
 12334                           
 12335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
 12336                           ;stkvar	_fmt @ sp[(-32)+-4]
 12337  012EE2  0EDC               	movlw	-36
 12338  012EE4  006F FF8F FFD9     	movff	plusw1,fsr2l
 12339  012EEA  0EDD               	movlw	-35
 12340  012EEC  006F FF8F FFDA     	movff	plusw1,fsr2h
 12341  012EF2  006F FF7B FFF6     	movff	postinc2,tblptrl
 12342  012EF8  006F FF77 FFF7     	movff	postdec2,tblptrh
 12343  012EFE                     	if	0	;tblptru may be non-zero
 12344  012EFE                     	endif
 12345  012EFE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12346  012EFE  0E00               	movlw	low (__mediumconst shr (0+16))
 12347  012F00  6EF8               	movwf	tblptru,c
 12348  012F02                     	endif
 12349                           
 12350                           ;stkvar	_c @ sp[(-32)+31]
 12351  012F02  0008               	tblrd		*
 12352  012F04  0EFF               	movlw	-1
 12353  012F06  006F FFD7 FFE3     	movff	tablat,plusw1
 12354                           
 12355                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
 12356                           ;stkvar	_fmt @ sp[(-32)+-4]
 12357  012F0C  0EDC               	movlw	-36
 12358  012F0E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12359  012F14  0EDD               	movlw	-35
 12360  012F16  006F FF8F FFDA     	movff	plusw1,fsr2h
 12361  012F1C  2ADE               	incf	postinc2,f,c
 12362  012F1E  0E00               	movlw	0
 12363  012F20  22DD               	addwfc	postdec2,f,c
 12364                           
 12365                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
 12366                           ;stkvar	_ap @ sp[(-32)+-6]
 12367  012F22  0EDA               	movlw	-38
 12368  012F24  006F FF8F FFD9     	movff	plusw1,fsr2l
 12369  012F2A  0EDB               	movlw	-37
 12370  012F2C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12371  012F32  0E02               	movlw	2
 12372  012F34  5EDE               	subwf	postinc2,f,c
 12373  012F36  0E00               	movlw	0
 12374  012F38  5ADD               	subwfb	postdec2,f,c
 12375  012F3A  006F FF78  F032    	movff	postinc2,btemp+10
 12376  012F40  006F FF74  F033    	movff	postdec2,btemp+11
 12377  012F46  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12378  012F4C  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12379  012F52  006F FF78  F032    	movff	postinc2,btemp+10
 12380  012F58  006F FF74  F033    	movff	postdec2,btemp+11
 12381  012F5E  5032               	movf	(btemp+10)^0,w,c
 12382  012F60  6E38               	movwf	(btemp+16)^0,c
 12383  012F62  5033               	movf	(btemp+11)^0,w,c
 12384  012F64  6E39               	movwf	(btemp+17)^0,c
 12385  012F66  6A3A               	clrf	(btemp+18)^0,c
 12386  012F68  6A3B               	clrf	(btemp+19)^0,c
 12387  012F6A  6A3C               	clrf	(btemp+20)^0,c
 12388  012F6C  6A3D               	clrf	(btemp+21)^0,c
 12389  012F6E  6A3E               	clrf	(btemp+22)^0,c
 12390  012F70  6A3F               	clrf	(btemp+23)^0,c
 12391                           
 12392                           ;stkvar	_llu @ sp[(-32)+6]
 12393  012F72  0EE6               	movlw	-26
 12394  012F74  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 12395  012F7A  0EE7               	movlw	-25
 12396  012F7C  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 12397  012F82  0EE8               	movlw	-24
 12398  012F84  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 12399  012F8A  0EE9               	movlw	-23
 12400  012F8C  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 12401  012F92  0EEA               	movlw	-22
 12402  012F94  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 12403  012F9A  0EEB               	movlw	-21
 12404  012F9C  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 12405  012FA2  0EEC               	movlw	-20
 12406  012FA4  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 12407  012FAA  0EED               	movlw	-19
 12408  012FAC  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 12409                           
 12410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
 12411                           ;stkvar	_c @ sp[(-32)+31]
 12412  012FB2  0EFF               	movlw	-1
 12413  012FB4  50E3               	movf	plusw1,w,c
 12414  012FB6  6EE6               	movwf	postinc1,c
 12415                           
 12416                           ;stkvar	_llu @ sp[(-33)+6]
 12417  012FB8  50E1               	movf	fsr1l,w,c
 12418  012FBA  0FE5               	addlw	-27
 12419  012FBC  6ED9               	movwf	fsr2l,c
 12420  012FBE  50E2               	movf	fsr1h,w,c
 12421  012FC0  6EDA               	movwf	fsr2h,c
 12422  012FC2  0EFF               	movlw	255
 12423  012FC4  22DA               	addwfc	fsr2h,f,c
 12424  012FC6  006F FF7B FFE6     	movff	postinc2,postinc1
 12425  012FCC  006F FF7B FFE6     	movff	postinc2,postinc1
 12426  012FD2  006F FF7B FFE6     	movff	postinc2,postinc1
 12427  012FD8  006F FF7B FFE6     	movff	postinc2,postinc1
 12428  012FDE  006F FF7B FFE6     	movff	postinc2,postinc1
 12429  012FE4  006F FF7B FFE6     	movff	postinc2,postinc1
 12430  012FEA  006F FF7B FFE6     	movff	postinc2,postinc1
 12431  012FF0  006F FF7B FFE6     	movff	postinc2,postinc1
 12432                           
 12433                           ;stkvar	_fp @ sp[(-41)+-2]
 12434  012FF6  0ED5               	movlw	-43
 12435  012FF8  006F FF8F FFE6     	movff	plusw1,postinc1
 12436  012FFE  006F FF8F FFE6     	movff	plusw1,postinc1
 12437  013004  ECEE  F0AB         	call	_xtoa	;wreg free
 12438  013008  D105               	goto	l2324
 12439  01300A                     l12200:
 12440                           
 12441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
 12442  01300A  0E02               	movlw	2
 12443  01300C  6EE6               	movwf	postinc1,c
 12444  01300E  0E00               	movlw	0
 12445  013010  6EE6               	movwf	postinc1,c
 12446  013012  0EF5               	movlw	low STR_93
 12447  013014  6EE6               	movwf	postinc1,c
 12448  013016  0EFF               	movlw	high STR_93
 12449  013018  6EE6               	movwf	postinc1,c
 12450                           
 12451                           ;stkvar	_fmt @ sp[(-36)+-4]
 12452  01301A  0ED8               	movlw	-40
 12453  01301C  006F FF8F FFD9     	movff	plusw1,fsr2l
 12454  013022  0ED9               	movlw	-39
 12455  013024  006F FF8F FFDA     	movff	plusw1,fsr2h
 12456  01302A  006F FF78  F032    	movff	postinc2,btemp+10
 12457  013030  006F FF74  F033    	movff	postdec2,btemp+11
 12458  013036  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12459  01303C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12460  013042  ECC1  F0BA         	call	_strncmp	;wreg free
 12461  013046  5028               	movf	btemp^0,w,c
 12462  013048  1029               	iorwf	(btemp+1)^0,w,c
 12463  01304A  B4D8               	btfsc	status,2,c
 12464  01304C  D022               	goto	u11820
 12465  01304E  0E02               	movlw	2
 12466  013050  6EE6               	movwf	postinc1,c
 12467  013052  0E00               	movlw	0
 12468  013054  6EE6               	movwf	postinc1,c
 12469  013056  0EE6               	movlw	low STR_97
 12470  013058  6EE6               	movwf	postinc1,c
 12471  01305A  0EFF               	movlw	high STR_97
 12472  01305C  6EE6               	movwf	postinc1,c
 12473                           
 12474                           ;stkvar	_fmt @ sp[(-36)+-4]
 12475  01305E  0ED8               	movlw	-40
 12476  013060  006F FF8F FFD9     	movff	plusw1,fsr2l
 12477  013066  0ED9               	movlw	-39
 12478  013068  006F FF8F FFDA     	movff	plusw1,fsr2h
 12479  01306E  006F FF78  F032    	movff	postinc2,btemp+10
 12480  013074  006F FF74  F033    	movff	postdec2,btemp+11
 12481  01307A  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 12482  013080  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 12483  013086  ECC1  F0BA         	call	_strncmp	;wreg free
 12484  01308A  5028               	movf	btemp^0,w,c
 12485  01308C  1029               	iorwf	(btemp+1)^0,w,c
 12486  01308E  A4D8               	btfss	status,2,c
 12487  013090  D058               	goto	l12214
 12488  013092                     u11820:
 12489                           
 12490                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
 12491                           ;stkvar	_fmt @ sp[(-32)+-4]
 12492  013092  0EDC               	movlw	-36
 12493  013094  006F FF8F FFD9     	movff	plusw1,fsr2l
 12494  01309A  0EDD               	movlw	-35
 12495  01309C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12496  0130A2  006F FF78  F032    	movff	postinc2,btemp+10
 12497  0130A8  006F FF74  F033    	movff	postdec2,btemp+11
 12498  0130AE  0E01               	movlw	1
 12499  0130B0  2632               	addwf	(btemp+10)^0,f,c
 12500  0130B2  0E00               	movlw	0
 12501  0130B4  2233               	addwfc	(btemp+11)^0,f,c
 12502  0130B6  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 12503  0130BC  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 12504  0130C2                     	if	0	;tblptru may be non-zero
 12505  0130C2                     	endif
 12506  0130C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12507  0130C2  0E00               	movlw	low (__mediumconst shr (0+16))
 12508  0130C4  6EF8               	movwf	tblptru,c
 12509  0130C6                     	endif
 12510                           
 12511                           ;stkvar	_c @ sp[(-32)+31]
 12512  0130C6  0008               	tblrd		*
 12513  0130C8  0EFF               	movlw	-1
 12514  0130CA  006F FFD7 FFE3     	movff	tablat,plusw1
 12515                           
 12516                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
 12517                           ;stkvar	_fmt @ sp[(-32)+-4]
 12518  0130D0  0EDC               	movlw	-36
 12519  0130D2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12520  0130D8  0EDD               	movlw	-35
 12521  0130DA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12522  0130E0  0E02               	movlw	2
 12523  0130E2  26DE               	addwf	postinc2,f,c
 12524  0130E4  0E00               	movlw	0
 12525  0130E6  22DD               	addwfc	postdec2,f,c
 12526                           
 12527                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
 12528                           ;stkvar	_ap @ sp[(-32)+-6]
 12529  0130E8  0EDA               	movlw	-38
 12530  0130EA  006F FF8F FFD9     	movff	plusw1,fsr2l
 12531  0130F0  0EDB               	movlw	-37
 12532  0130F2  006F FF8F FFDA     	movff	plusw1,fsr2h
 12533  0130F8  0E04               	movlw	4
 12534  0130FA  5EDE               	subwf	postinc2,f,c
 12535  0130FC  0E00               	movlw	0
 12536  0130FE  5ADD               	subwfb	postdec2,f,c
 12537  013100  006F FF78  F032    	movff	postinc2,btemp+10
 12538  013106  006F FF74  F033    	movff	postdec2,btemp+11
 12539  01310C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 12540  013112  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 12541  013118  006F FF78  F030    	movff	postinc2,btemp+8
 12542  01311E  006F FF78  F031    	movff	postinc2,btemp+9
 12543  013124  006F FF78  F032    	movff	postinc2,btemp+10
 12544  01312A  006F FF78  F033    	movff	postinc2,btemp+11
 12545  013130  5030               	movf	(btemp+8)^0,w,c
 12546  013132  6E38               	movwf	(btemp+16)^0,c
 12547  013134  5031               	movf	(btemp+9)^0,w,c
 12548  013136  6E39               	movwf	(btemp+17)^0,c
 12549  013138  5032               	movf	(btemp+10)^0,w,c
 12550  01313A  6E3A               	movwf	(btemp+18)^0,c
 12551  01313C  5033               	movf	(btemp+11)^0,w,c
 12552  01313E  6E3B               	movwf	(btemp+19)^0,c
 12553  013140  D714               	goto	L9
 12554  013142                     l12214:
 12555                           
 12556                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 12557                           ;stkvar	_fmt @ sp[(-32)+-4]
 12558  013142  0EDC               	movlw	-36
 12559  013144  006F FF8F FFD9     	movff	plusw1,fsr2l
 12560  01314A  0EDD               	movlw	-35
 12561  01314C  006F FF8F FFDA     	movff	plusw1,fsr2h
 12562  013152  006F FF7B FFF6     	movff	postinc2,tblptrl
 12563  013158  006F FF77 FFF7     	movff	postdec2,tblptrh
 12564  01315E                     	if	0	;tblptru may be non-zero
 12565  01315E                     	endif
 12566  01315E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12567  01315E  0E00               	movlw	low (__mediumconst shr (0+16))
 12568  013160  6EF8               	movwf	tblptru,c
 12569  013162                     	endif
 12570  013162  0008               	tblrd		*
 12571  013164  50F5               	movf	tablat,w,c
 12572  013166  0A25               	xorlw	37
 12573  013168  A4D8               	btfss	status,2,c
 12574  01316A  D01A               	goto	l12224
 12575                           
 12576                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 12577                           ;stkvar	_fmt @ sp[(-32)+-4]
 12578  01316C  0EDC               	movlw	-36
 12579  01316E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12580  013174  0EDD               	movlw	-35
 12581  013176  006F FF8F FFDA     	movff	plusw1,fsr2h
 12582  01317C  2ADE               	incf	postinc2,f,c
 12583  01317E  0E00               	movlw	0
 12584  013180  22DD               	addwfc	postdec2,f,c
 12585                           
 12586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 12587                           ;stkvar	_fp @ sp[(-32)+-2]
 12588  013182  0EDE               	movlw	-34
 12589  013184  006F FF8F FFE6     	movff	plusw1,postinc1
 12590  01318A  006F FF8F FFE6     	movff	plusw1,postinc1
 12591  013190  0E25               	movlw	37
 12592  013192  6EE6               	movwf	postinc1,c
 12593  013194  0E00               	movlw	0
 12594  013196  6EE6               	movwf	postinc1,c
 12595  013198  EC4F  F0C7         	call	_fputc	;wreg free
 12596  01319C                     l12220:
 12597                           
 12598                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 12599  01319C  0E01               	movlw	1
 12600  01319E  D00C               	goto	L10
 12601  0131A0                     l12224:
 12602                           
 12603                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 12604                           ;stkvar	_fmt @ sp[(-32)+-4]
 12605  0131A0  0EDC               	movlw	-36
 12606  0131A2  006F FF8F FFD9     	movff	plusw1,fsr2l
 12607  0131A8  0EDD               	movlw	-35
 12608  0131AA  006F FF8F FFDA     	movff	plusw1,fsr2h
 12609  0131B0  2ADE               	incf	postinc2,f,c
 12610  0131B2  0E00               	movlw	0
 12611  0131B4  22DD               	addwfc	postdec2,f,c
 12612                           
 12613                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 12614  0131B6  0E00               	movlw	0
 12615  0131B8                     L10:
 12616  0131B8  6E28               	movwf	btemp^0,c
 12617  0131BA  0E00               	movlw	0
 12618  0131BC  6E29               	movwf	(btemp+1)^0,c
 12619  0131BE  D02A               	goto	l2324
 12620  0131C0                     l12230:
 12621                           
 12622                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 12623                           ;stkvar	_fp @ sp[(-32)+-2]
 12624  0131C0  0EDE               	movlw	-34
 12625  0131C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12626  0131C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12627                           
 12628                           ;stkvar	_fmt @ sp[(-34)+-4]
 12629  0131CE  0EDA               	movlw	-38
 12630  0131D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 12631  0131D6  0EDB               	movlw	-37
 12632  0131D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 12633  0131DE  006F FF7B FFF6     	movff	postinc2,tblptrl
 12634  0131E4  006F FF77 FFF7     	movff	postdec2,tblptrh
 12635  0131EA                     	if	0	;tblptru may be non-zero
 12636  0131EA                     	endif
 12637  0131EA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 12638  0131EA  0E00               	movlw	low (__mediumconst shr (0+16))
 12639  0131EC  6EF8               	movwf	tblptru,c
 12640  0131EE                     	endif
 12641  0131EE  0008               	tblrd		*
 12642  0131F0  50F5               	movf	tablat,w,c
 12643  0131F2  6EE6               	movwf	postinc1,c
 12644  0131F4  0E00               	movlw	0
 12645  0131F6  6EE6               	movwf	postinc1,c
 12646  0131F8  EC4F  F0C7         	call	_fputc	;wreg free
 12647                           
 12648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 12649                           ;stkvar	_fmt @ sp[(-32)+-4]
 12650  0131FC  0EDC               	movlw	-36
 12651  0131FE  006F FF8F FFD9     	movff	plusw1,fsr2l
 12652  013204  0EDD               	movlw	-35
 12653  013206  006F FF8F FFDA     	movff	plusw1,fsr2h
 12654  01320C  2ADE               	incf	postinc2,f,c
 12655  01320E  0E00               	movlw	0
 12656  013210  22DD               	addwfc	postdec2,f,c
 12657  013212  D7C4               	goto	l12220
 12658  013214                     l2324:
 12659                           
 12660                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 12661  013214  0EDA               	movlw	218
 12662  013216  26E1               	addwf	fsr1l,f,c
 12663  013218  0EFF               	movlw	255
 12664  01321A  22E2               	addwfc	fsr1h,f,c
 12665  01321C  0012               	return		;funcret
 12666  01321E                     __end_of_vfpfcnvrt:
 12667                           	opt callstack 0
 12668                           
 12669 ;; *************** function _xtoa *****************
 12670 ;; Defined at:
 12671 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 12672 ;; Parameters:    Size  Location     Type
 12673 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12674 ;;		 -> f(6), NULL(0), 
 12675 ;;  d               8  [STACK] unsigned long long 
 12676 ;;  x               1  [STACK] unsigned char 
 12677 ;; Auto vars:     Size  Location     Type
 12678 ;;  n               8  [STACK] unsigned long long 
 12679 ;;  c               2  [STACK] int 
 12680 ;;  i               2  [STACK] int 
 12681 ;;  w               2  [STACK] int 
 12682 ;;  p               2  [STACK] int 
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  2  [STACK] int 
 12685 ;; Registers used:
 12686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12696 ;;Total ram usage:        0 bytes
 12697 ;; Hardware stack levels used:    1
 12698 ;; Hardware stack levels required when called:   20
 12699 ;; This function calls:
 12700 ;;		_isalpha
 12701 ;;		_isupper
 12702 ;;		_pad
 12703 ;;		_toupper
 12704 ;; This function is called by:
 12705 ;;		_vfpfcnvrt
 12706 ;; This function uses a reentrant model
 12707 ;;
 12708                           
 12709                           	psect	text46
 12710  0157DC                     __ptext46:
 12711                           	opt callstack 0
 12712  0157DC                     _xtoa:
 12713                           	opt callstack 0
 12714                           
 12715                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12716  0157DC  0E14               	movlw	20
 12717  0157DE  26E1               	addwf	fsr1l,f,c
 12718  0157E0  0E00               	movlw	0
 12719  0157E2  22E2               	addwfc	fsr1h,f,c
 12720                           
 12721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
 12722                           
 12723                           ;incstack = 0
 12724 ;; hardware stack exceeded
 12725  0157E4  AE4B               	btfss	(_prec+1)^0,7,c
 12726                           
 12727                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
 12728  0157E6  924C               	bcf	_flags^0,1,c
 12729                           
 12730                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
 12731  0157E8  BE4B               	btfsc	(_prec+1)^0,7,c
 12732  0157EA  D005               	goto	u11350
 12733  0157EC  504B               	movf	(_prec+1)^0,w,c
 12734  0157EE  E110               	bnz	l11954
 12735  0157F0  044A               	decf	_prec^0,w,c
 12736  0157F2  B0D8               	btfsc	status,0,c
 12737  0157F4  D00D               	goto	l11954
 12738  0157F6                     u11350:
 12739  0157F6  0E01               	movlw	1
 12740  0157F8  6E32               	movwf	(btemp+10)^0,c
 12741  0157FA  0E00               	movlw	0
 12742  0157FC  6E33               	movwf	(btemp+11)^0,c
 12743                           
 12744                           ;stkvar	_p @ sp[(-20)+18]
 12745  0157FE  0EFE               	movlw	-2
 12746  015800  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12747  015806  0EFF               	movlw	-1
 12748  015808  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12749  01580E  D008               	goto	l2274
 12750  015810                     l11954:
 12751                           
 12752                           ;stkvar	_p @ sp[(-20)+18]
 12753  015810  0EFE               	movlw	-2
 12754  015812  0060  F12B  FFE3   	movff	_prec,plusw1
 12755  015818  0EFF               	movlw	-1
 12756  01581A  0060  F12F  FFE3   	movff	_prec+1,plusw1
 12757  015820                     l2274:
 12758                           
 12759                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
 12760                           ;stkvar	_w @ sp[(-20)+16]
 12761  015820  0EFC               	movlw	-4
 12762  015822  0060  F123  FFE3   	movff	_width,plusw1
 12763  015828  0EFD               	movlw	-3
 12764  01582A  0060  F127  FFE3   	movff	_width+1,plusw1
 12765                           
 12766                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
 12767  015830  A84C               	btfss	_flags^0,4,c
 12768  015832  D00B               	goto	l11960
 12769                           
 12770                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
 12771                           ;stkvar	_w @ sp[(-20)+16]
 12772  015834  50E1               	movf	fsr1l,w,c
 12773  015836  0FFC               	addlw	-4
 12774  015838  6ED9               	movwf	fsr2l,c
 12775  01583A  50E2               	movf	fsr1h,w,c
 12776  01583C  6EDA               	movwf	fsr2h,c
 12777  01583E  0EFF               	movlw	255
 12778  015840  22DA               	addwfc	fsr2h,f,c
 12779  015842  0EFE               	movlw	254
 12780  015844  26DE               	addwf	postinc2,f,c
 12781  015846  0EFF               	movlw	255
 12782  015848  22DD               	addwfc	postdec2,f,c
 12783  01584A                     l11960:
 12784                           
 12785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
 12786                           ;stkvar	_d @ sp[(-20)+-10]
 12787  01584A  0EE2               	movlw	226
 12788  01584C  24E1               	addwf	fsr1l,w,c
 12789  01584E  6ED9               	movwf	fsr2l,c
 12790  015850  0EFF               	movlw	255
 12791  015852  20E2               	addwfc	fsr1h,w,c
 12792  015854  6EDA               	movwf	fsr2h,c
 12793                           
 12794                           ;stkvar	_n @ sp[(-20)+4]
 12795  015856  0E08               	movlw	8
 12796  015858  6E28               	movwf	btemp^0,c
 12797  01585A  0EF0               	movlw	-16
 12798  01585C                     us1137999:
 12799  01585C  006F FF7B FFE3     	movff	postinc2,plusw1
 12800  015862  28E8               	incf	wreg,w,c
 12801  015864  2E28               	decfsz	btemp^0,f,c
 12802  015866  D7FA               	bra	us1137999
 12803                           
 12804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
 12805  015868  0E4F               	movlw	79
 12806  01586A  6E32               	movwf	(btemp+10)^0,c
 12807  01586C  0E00               	movlw	0
 12808  01586E  6E33               	movwf	(btemp+11)^0,c
 12809                           
 12810                           ;stkvar	_i @ sp[(-20)+14]
 12811  015870  0EFA               	movlw	-6
 12812  015872  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12813  015878  0EFB               	movlw	-5
 12814  01587A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12815                           
 12816                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
 12817  015880  0103               	movlb	3	; () banked
 12818  015882  6BE3               	clrf	(_dbuf+79)& (0+255),b
 12819                           
 12820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12821  015884  D0EE               	goto	l11998
 12822  015886                     l11966:
 12823                           
 12824                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
 12825                           ;stkvar	_i @ sp[(-20)+14]
 12826  015886  50E1               	movf	fsr1l,w,c
 12827  015888  0FFA               	addlw	-6
 12828  01588A  6ED9               	movwf	fsr2l,c
 12829  01588C  50E2               	movf	fsr1h,w,c
 12830  01588E  6EDA               	movwf	fsr2h,c
 12831  015890  0EFF               	movlw	255
 12832  015892  22DA               	addwfc	fsr2h,f,c
 12833  015894  06DE               	decf	postinc2,f,c
 12834  015896  0E00               	movlw	0
 12835  015898  5ADD               	subwfb	postdec2,f,c
 12836                           
 12837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
 12838                           ;stkvar	_n @ sp[(-20)+4]
 12839  01589A  0EF0               	movlw	-16
 12840  01589C  006F FF8C  F032    	movff	plusw1,btemp+10
 12841  0158A2  0EF1               	movlw	-15
 12842  0158A4  006F FF8C  F033    	movff	plusw1,btemp+11
 12843  0158AA  0E0F               	movlw	15
 12844  0158AC  1632               	andwf	(btemp+10)^0,f,c
 12845  0158AE  0E00               	movlw	0
 12846  0158B0  1633               	andwf	(btemp+11)^0,f,c
 12847                           
 12848                           ;stkvar	_c @ sp[(-20)+12]
 12849  0158B2  0EF8               	movlw	-8
 12850  0158B4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12851  0158BA  0EF9               	movlw	-7
 12852  0158BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12853                           
 12854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
 12855                           ;stkvar	_c @ sp[(-20)+12]
 12856  0158C2  0EF9               	movlw	-7
 12857  0158C4  BEE3               	btfsc	plusw1,7,c
 12858  0158C6  D00F               	goto	l11974
 12859  0158C8  0EF9               	movlw	-7
 12860  0158CA  50E3               	movf	plusw1,w,c
 12861  0158CC  E108               	bnz	u11380
 12862  0158CE  0EF8               	movlw	-8
 12863  0158D0  006F FF8C  F028    	movff	plusw1,btemp
 12864  0158D6  0E0A               	movlw	10
 12865  0158D8  5E28               	subwf	btemp^0,f,c
 12866  0158DA  A0D8               	btfss	status,0,c
 12867  0158DC  D004               	goto	l11974
 12868  0158DE                     u11380:
 12869                           
 12870                           ;stkvar	_c @ sp[(-20)+12]
 12871  0158DE  0EF8               	movlw	-8
 12872  0158E0  50E3               	movf	plusw1,w,c
 12873  0158E2  0F57               	addlw	87
 12874  0158E4  D003               	goto	L11
 12875  0158E6                     l11974:
 12876                           
 12877                           ;stkvar	_c @ sp[(-20)+12]
 12878  0158E6  0EF8               	movlw	-8
 12879  0158E8  50E3               	movf	plusw1,w,c
 12880  0158EA  0F30               	addlw	48
 12881  0158EC                     L11:
 12882  0158EC  6E32               	movwf	(btemp+10)^0,c
 12883  0158EE  0EF9               	movlw	-7
 12884  0158F0  006F FF8C  F033    	movff	plusw1,btemp+11
 12885  0158F6  0E00               	movlw	0
 12886  0158F8  2233               	addwfc	(btemp+11)^0,f,c
 12887                           
 12888                           ;stkvar	_c @ sp[(-20)+12]
 12889  0158FA  0EF8               	movlw	-8
 12890  0158FC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12891  015902  0EF9               	movlw	-7
 12892  015904  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12893  01590A  0EBF               	movlw	191
 12894  01590C  6E32               	movwf	(btemp+10)^0,c
 12895  01590E  0EFF               	movlw	255
 12896  015910  6E33               	movwf	(btemp+11)^0,c
 12897                           
 12898                           ;stkvar	_x @ sp[(-20)+-11]
 12899  015912  0EE1               	movlw	-31
 12900  015914  50E3               	movf	plusw1,w,c
 12901  015916  6E30               	movwf	(btemp+8)^0,c
 12902  015918  6A31               	clrf	(btemp+9)^0,c
 12903  01591A  5032               	movf	(btemp+10)^0,w,c
 12904  01591C  2630               	addwf	(btemp+8)^0,f,c
 12905  01591E  5033               	movf	(btemp+11)^0,w,c
 12906  015920  2231               	addwfc	(btemp+9)^0,f,c
 12907  015922  5031               	movf	(btemp+9)^0,w,c
 12908  015924  E106               	bnz	u11390
 12909  015926  0E1A               	movlw	26
 12910  015928  5C30               	subwf	(btemp+8)^0,w,c
 12911  01592A  B0D8               	btfsc	status,0,c
 12912  01592C  D002               	goto	u11390
 12913  01592E  0E01               	movlw	1
 12914  015930  D001               	goto	u11400
 12915  015932                     u11390:
 12916  015932  0E00               	movlw	0
 12917  015934                     u11400:
 12918  015934  6E32               	movwf	(btemp+10)^0,c
 12919  015936  6A33               	clrf	(btemp+11)^0,c
 12920                           
 12921                           ;stkvar	_xtoa$5371 @ sp[(-20)+2]
 12922  015938  0EEE               	movlw	-18
 12923  01593A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12924  015940  0EEF               	movlw	-17
 12925  015942  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12926                           
 12927                           ;stkvar	_xtoa$5371 @ sp[(-20)+2]
 12928  015948  0EEE               	movlw	-18
 12929  01594A  006F FF8C  F028    	movff	plusw1,btemp
 12930  015950  0EEF               	movlw	-17
 12931  015952  50E3               	movf	plusw1,w,c
 12932  015954  1028               	iorwf	btemp^0,w,c
 12933  015956  B4D8               	btfsc	status,2,c
 12934  015958  D041               	goto	l11990
 12935  01595A  0E9F               	movlw	159
 12936  01595C  6E32               	movwf	(btemp+10)^0,c
 12937  01595E  0EFF               	movlw	255
 12938  015960  6E33               	movwf	(btemp+11)^0,c
 12939                           
 12940                           ;stkvar	_c @ sp[(-20)+12]
 12941  015962  0EF8               	movlw	-8
 12942  015964  006F FF8C  F030    	movff	plusw1,btemp+8
 12943  01596A  0EF9               	movlw	-7
 12944  01596C  006F FF8C  F031    	movff	plusw1,btemp+9
 12945  015972  0E20               	movlw	32
 12946  015974  1230               	iorwf	(btemp+8)^0,f,c
 12947  015976  0E00               	movlw	0
 12948  015978  1231               	iorwf	(btemp+9)^0,f,c
 12949  01597A  5032               	movf	(btemp+10)^0,w,c
 12950  01597C  2630               	addwf	(btemp+8)^0,f,c
 12951  01597E  5033               	movf	(btemp+11)^0,w,c
 12952  015980  2231               	addwfc	(btemp+9)^0,f,c
 12953  015982  5031               	movf	(btemp+9)^0,w,c
 12954  015984  E106               	bnz	u11420
 12955  015986  0E1A               	movlw	26
 12956  015988  5C30               	subwf	(btemp+8)^0,w,c
 12957  01598A  B0D8               	btfsc	status,0,c
 12958  01598C  D002               	goto	u11420
 12959  01598E  0E01               	movlw	1
 12960  015990  D001               	goto	u11430
 12961  015992                     u11420:
 12962  015992  0E00               	movlw	0
 12963  015994                     u11430:
 12964  015994  6E32               	movwf	(btemp+10)^0,c
 12965  015996  6A33               	clrf	(btemp+11)^0,c
 12966                           
 12967                           ;stkvar	_xtoa$5372 @ sp[(-20)+0]
 12968  015998  0EEC               	movlw	-20
 12969  01599A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 12970  0159A0  0EED               	movlw	-19
 12971  0159A2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 12972                           
 12973                           ;stkvar	_xtoa$5372 @ sp[(-20)+0]
 12974  0159A8  0EEC               	movlw	-20
 12975  0159AA  006F FF8C  F028    	movff	plusw1,btemp
 12976  0159B0  0EED               	movlw	-19
 12977  0159B2  50E3               	movf	plusw1,w,c
 12978  0159B4  1028               	iorwf	btemp^0,w,c
 12979  0159B6  B4D8               	btfsc	status,2,c
 12980  0159B8  D011               	goto	l11990
 12981                           
 12982                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
 12983                           ;stkvar	_c @ sp[(-20)+12]
 12984  0159BA  0EF8               	movlw	-8
 12985  0159BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12986  0159C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12987  0159C8  EC50  F0D1         	call	_toupper	;wreg free
 12988                           
 12989                           ;stkvar	_c @ sp[(-20)+12]
 12990  0159CC  0EF8               	movlw	-8
 12991  0159CE  0060  F0A3  FFE3   	movff	btemp,plusw1
 12992  0159D4  0EF9               	movlw	-7
 12993  0159D6  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 12994  0159DC                     l11990:
 12995                           
 12996                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
 12997                           ;stkvar	_c @ sp[(-20)+12]
 12998                           ;stkvar	_i @ sp[(-20)+14]
 12999  0159DC  0EFA               	movlw	-6
 13000  0159DE  006F FF8C  F032    	movff	plusw1,btemp+10
 13001  0159E4  0EFB               	movlw	-5
 13002  0159E6  006F FF8C  F033    	movff	plusw1,btemp+11
 13003  0159EC  0E94               	movlw	low _dbuf
 13004  0159EE  2432               	addwf	(btemp+10)^0,w,c
 13005  0159F0  6ED9               	movwf	fsr2l,c
 13006  0159F2  0E03               	movlw	high _dbuf
 13007  0159F4  2033               	addwfc	(btemp+11)^0,w,c
 13008  0159F6  6EDA               	movwf	fsr2h,c
 13009  0159F8  0EF8               	movlw	-8
 13010  0159FA  006F FF8F FFDF     	movff	plusw1,indf2
 13011                           
 13012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
 13013                           ;stkvar	_p @ sp[(-20)+18]
 13014  015A00  50E1               	movf	fsr1l,w,c
 13015  015A02  0FFE               	addlw	-2
 13016  015A04  6ED9               	movwf	fsr2l,c
 13017  015A06  50E2               	movf	fsr1h,w,c
 13018  015A08  6EDA               	movwf	fsr2h,c
 13019  015A0A  0EFF               	movlw	255
 13020  015A0C  22DA               	addwfc	fsr2h,f,c
 13021  015A0E  06DE               	decf	postinc2,f,c
 13022  015A10  0E00               	movlw	0
 13023  015A12  5ADD               	subwfb	postdec2,f,c
 13024                           
 13025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
 13026                           ;stkvar	_w @ sp[(-20)+16]
 13027  015A14  50E1               	movf	fsr1l,w,c
 13028  015A16  0FFC               	addlw	-4
 13029  015A18  6ED9               	movwf	fsr2l,c
 13030  015A1A  50E2               	movf	fsr1h,w,c
 13031  015A1C  6EDA               	movwf	fsr2h,c
 13032  015A1E  0EFF               	movlw	255
 13033  015A20  22DA               	addwfc	fsr2h,f,c
 13034  015A22  06DE               	decf	postinc2,f,c
 13035  015A24  0E00               	movlw	0
 13036  015A26  5ADD               	subwfb	postdec2,f,c
 13037                           
 13038                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
 13039  015A28  0E04               	movlw	4
 13040  015A2A  6E33               	movwf	(btemp+11)^0,c
 13041                           
 13042                           ;stkvar	_n @ sp[(-20)+4]
 13043  015A2C  50E1               	movf	fsr1l,w,c
 13044  015A2E  0FF0               	addlw	-16
 13045  015A30  6ED9               	movwf	fsr2l,c
 13046  015A32  50E2               	movf	fsr1h,w,c
 13047  015A34  6EDA               	movwf	fsr2h,c
 13048  015A36  0EFF               	movlw	255
 13049  015A38  22DA               	addwfc	fsr2h,f,c
 13050  015A3A  2833               	incf	(btemp+11)^0,w,c
 13051  015A3C  52DE               	movf	postinc2,f,c
 13052  015A3E  D00F               	goto	u11450
 13053  015A40                     u11455:
 13054  015A40  52DE               	movf	postinc2,f,c
 13055  015A42  52DE               	movf	postinc2,f,c
 13056  015A44  52DE               	movf	postinc2,f,c
 13057  015A46  52DE               	movf	postinc2,f,c
 13058  015A48  52DE               	movf	postinc2,f,c
 13059  015A4A  52DE               	movf	postinc2,f,c
 13060  015A4C  90D8               	bcf	status,0,c
 13061  015A4E  32DD               	rrcf	postdec2,f,c
 13062  015A50  32DD               	rrcf	postdec2,f,c
 13063  015A52  32DD               	rrcf	postdec2,f,c
 13064  015A54  32DD               	rrcf	postdec2,f,c
 13065  015A56  32DD               	rrcf	postdec2,f,c
 13066  015A58  32DD               	rrcf	postdec2,f,c
 13067  015A5A  32DD               	rrcf	postdec2,f,c
 13068  015A5C  32DE               	rrcf	postinc2,f,c
 13069  015A5E                     u11450:
 13070  015A5E  2EE8               	decfsz	wreg,f,c
 13071  015A60  D7EF               	goto	u11455
 13072  015A62                     l11998:
 13073                           
 13074                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13075                           ;stkvar	_i @ sp[(-20)+14]
 13076  015A62  0EFB               	movlw	-5
 13077  015A64  BEE3               	btfsc	plusw1,7,c
 13078  015A66  D03A               	goto	u11500
 13079  015A68  0EFB               	movlw	-5
 13080  015A6A  50E3               	movf	plusw1,w,c
 13081  015A6C  E108               	bnz	u11460
 13082  015A6E  0EFA               	movlw	-6
 13083  015A70  006F FF8C  F028    	movff	plusw1,btemp
 13084  015A76  0E02               	movlw	2
 13085  015A78  5E28               	subwf	btemp^0,f,c
 13086  015A7A  A0D8               	btfss	status,0,c
 13087  015A7C  D02F               	goto	u11500
 13088  015A7E                     u11460:
 13089                           
 13090                           ;stkvar	_n @ sp[(-20)+4]
 13091  015A7E  0EF0               	movlw	-16
 13092  015A80  50E3               	movf	plusw1,w,c
 13093  015A82  E115               	bnz	u11471
 13094  015A84  0EF1               	movlw	-15
 13095  015A86  50E3               	movf	plusw1,w,c
 13096  015A88  E112               	bnz	u11471
 13097  015A8A  0EF2               	movlw	-14
 13098  015A8C  50E3               	movf	plusw1,w,c
 13099  015A8E  E10F               	bnz	u11471
 13100  015A90  0EF3               	movlw	-13
 13101  015A92  50E3               	movf	plusw1,w,c
 13102  015A94  E10C               	bnz	u11471
 13103  015A96  0EF4               	movlw	-12
 13104  015A98  50E3               	movf	plusw1,w,c
 13105  015A9A  E109               	bnz	u11471
 13106  015A9C  0EF5               	movlw	-11
 13107  015A9E  50E3               	movf	plusw1,w,c
 13108  015AA0  E106               	bnz	u11471
 13109  015AA2  0EF6               	movlw	-10
 13110  015AA4  50E3               	movf	plusw1,w,c
 13111  015AA6  E103               	bnz	u11471
 13112  015AA8  0EF7               	movlw	-9
 13113  015AAA  50E3               	movf	plusw1,w,c
 13114  015AAC  A4D8               	btfss	status,2,c
 13115  015AAE                     u11471:
 13116  015AAE  D6EB               	goto	l11966
 13117                           
 13118                           ;stkvar	_p @ sp[(-20)+18]
 13119  015AB0  0EFF               	movlw	-1
 13120  015AB2  BEE3               	btfsc	plusw1,7,c
 13121  015AB4  D007               	goto	u11480
 13122  015AB6  0EFF               	movlw	-1
 13123  015AB8  50E3               	movf	plusw1,w,c
 13124  015ABA  E103               	bnz	u11481
 13125  015ABC  0EFE               	movlw	-2
 13126  015ABE  04E3               	decf	plusw1,w,c
 13127  015AC0  B0D8               	btfsc	status,0,c
 13128  015AC2                     u11481:
 13129  015AC2  D6E1               	goto	l11966
 13130  015AC4                     u11480:
 13131                           
 13132                           ;stkvar	_w @ sp[(-20)+16]
 13133  015AC4  0EFD               	movlw	-3
 13134  015AC6  BEE3               	btfsc	plusw1,7,c
 13135  015AC8  D009               	goto	u11500
 13136  015ACA  0EFD               	movlw	-3
 13137  015ACC  50E3               	movf	plusw1,w,c
 13138  015ACE  E104               	bnz	u11490
 13139  015AD0  0EFC               	movlw	-4
 13140  015AD2  04E3               	decf	plusw1,w,c
 13141  015AD4  A0D8               	btfss	status,0,c
 13142  015AD6  D002               	goto	u11500
 13143  015AD8                     u11490:
 13144  015AD8  B24C               	btfsc	_flags^0,1,c
 13145  015ADA  D6D5               	goto	l11966
 13146  015ADC                     u11500:
 13147                           
 13148                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
 13149  015ADC  A84C               	btfss	_flags^0,4,c
 13150  015ADE  D036               	goto	l12014
 13151                           
 13152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
 13153                           ;stkvar	_i @ sp[(-20)+14]
 13154  015AE0  50E1               	movf	fsr1l,w,c
 13155  015AE2  0FFA               	addlw	-6
 13156  015AE4  6ED9               	movwf	fsr2l,c
 13157  015AE6  50E2               	movf	fsr1h,w,c
 13158  015AE8  6EDA               	movwf	fsr2h,c
 13159  015AEA  0EFF               	movlw	255
 13160  015AEC  22DA               	addwfc	fsr2h,f,c
 13161  015AEE  06DE               	decf	postinc2,f,c
 13162  015AF0  0E00               	movlw	0
 13163  015AF2  5ADD               	subwfb	postdec2,f,c
 13164                           
 13165                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
 13166                           ;stkvar	_x @ sp[(-20)+-11]
 13167                           ;stkvar	_i @ sp[(-20)+14]
 13168  015AF4  0EFA               	movlw	-6
 13169  015AF6  006F FF8C  F032    	movff	plusw1,btemp+10
 13170  015AFC  0EFB               	movlw	-5
 13171  015AFE  006F FF8C  F033    	movff	plusw1,btemp+11
 13172  015B04  0E94               	movlw	low _dbuf
 13173  015B06  2432               	addwf	(btemp+10)^0,w,c
 13174  015B08  6ED9               	movwf	fsr2l,c
 13175  015B0A  0E03               	movlw	high _dbuf
 13176  015B0C  2033               	addwfc	(btemp+11)^0,w,c
 13177  015B0E  6EDA               	movwf	fsr2h,c
 13178  015B10  0EE1               	movlw	-31
 13179  015B12  006F FF8F FFDF     	movff	plusw1,indf2
 13180                           
 13181                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
 13182                           ;stkvar	_i @ sp[(-20)+14]
 13183  015B18  50E1               	movf	fsr1l,w,c
 13184  015B1A  0FFA               	addlw	-6
 13185  015B1C  6ED9               	movwf	fsr2l,c
 13186  015B1E  50E2               	movf	fsr1h,w,c
 13187  015B20  6EDA               	movwf	fsr2h,c
 13188  015B22  0EFF               	movlw	255
 13189  015B24  22DA               	addwfc	fsr2h,f,c
 13190  015B26  06DE               	decf	postinc2,f,c
 13191  015B28  0E00               	movlw	0
 13192  015B2A  5ADD               	subwfb	postdec2,f,c
 13193                           
 13194                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
 13195                           ;stkvar	_i @ sp[(-20)+14]
 13196  015B2C  0EFA               	movlw	-6
 13197  015B2E  006F FF8C  F032    	movff	plusw1,btemp+10
 13198  015B34  0EFB               	movlw	-5
 13199  015B36  006F FF8C  F033    	movff	plusw1,btemp+11
 13200  015B3C  0E94               	movlw	low _dbuf
 13201  015B3E  2432               	addwf	(btemp+10)^0,w,c
 13202  015B40  6ED9               	movwf	fsr2l,c
 13203  015B42  0E03               	movlw	high _dbuf
 13204  015B44  2033               	addwfc	(btemp+11)^0,w,c
 13205  015B46  6EDA               	movwf	fsr2h,c
 13206  015B48  0E30               	movlw	48
 13207  015B4A  6EDF               	movwf	indf2,c
 13208  015B4C                     l12014:
 13209                           
 13210                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
 13211                           ;stkvar	_w @ sp[(-20)+16]
 13212  015B4C  0EFC               	movlw	-4
 13213  015B4E  006F FF8F FFE6     	movff	plusw1,postinc1
 13214  015B54  006F FF8F FFE6     	movff	plusw1,postinc1
 13215                           
 13216                           ;stkvar	_i @ sp[(-22)+14]
 13217  015B5A  0E94               	movlw	low _dbuf
 13218  015B5C  6E32               	movwf	(btemp+10)^0,c
 13219  015B5E  0E03               	movlw	high _dbuf
 13220  015B60  6E33               	movwf	(btemp+11)^0,c
 13221  015B62  0EF8               	movlw	-8
 13222  015B64  50E3               	movf	plusw1,w,c
 13223  015B66  2632               	addwf	(btemp+10)^0,f,c
 13224  015B68  0EF9               	movlw	-7
 13225  015B6A  50E3               	movf	plusw1,w,c
 13226  015B6C  2233               	addwfc	(btemp+11)^0,f,c
 13227  015B6E  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 13228  015B74  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 13229                           
 13230                           ;stkvar	_fp @ sp[(-24)+-2]
 13231  015B7A  0EE6               	movlw	-26
 13232  015B7C  006F FF8F FFE6     	movff	plusw1,postinc1
 13233  015B82  006F FF8F FFE6     	movff	plusw1,postinc1
 13234  015B88  EC6D  F0C8         	call	_pad	;wreg free
 13235                           
 13236                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
 13237  015B8C  0EE1               	movlw	225
 13238  015B8E  26E1               	addwf	fsr1l,f,c
 13239  015B90  0EFF               	movlw	255
 13240  015B92  22E2               	addwfc	fsr1h,f,c
 13241  015B94  0012               	return		;funcret
 13242  015B96                     __end_of_xtoa:
 13243                           	opt callstack 0
 13244                           
 13245 ;; *************** function _toupper *****************
 13246 ;; Defined at:
 13247 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
 13248 ;; Parameters:    Size  Location     Type
 13249 ;;  c               2  [STACK] int 
 13250 ;; Auto vars:     Size  Location     Type
 13251 ;;		None
 13252 ;; Return value:  Size  Location     Type
 13253 ;;                  2  [STACK] int 
 13254 ;; Registers used:
 13255 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13256 ;; Tracked objects:
 13257 ;;		On entry : 0/3
 13258 ;;		On exit  : 0/0
 13259 ;;		Unchanged: 0/0
 13260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13264 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13265 ;;Total ram usage:        0 bytes
 13266 ;; Hardware stack levels used:    1
 13267 ;; Hardware stack levels required when called:   16
 13268 ;; This function calls:
 13269 ;;		_islower
 13270 ;; This function is called by:
 13271 ;;		_xtoa
 13272 ;; This function uses a reentrant model
 13273 ;;
 13274                           
 13275                           	psect	text47
 13276  01A2A0                     __ptext47:
 13277                           	opt callstack 0
 13278  01A2A0                     _toupper:
 13279                           	opt callstack 0
 13280                           
 13281                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13282  01A2A0  52E6               	movf	postinc1,f,c
 13283  01A2A2  52E6               	movf	postinc1,f,c
 13284                           
 13285                           ;stkvar	_c @ sp[(-2)+-2]
 13286                           
 13287                           ;incstack = 0
 13288 ;; hardware stack exceeded
 13289  01A2A4  0EFC               	movlw	-4
 13290  01A2A6  50E3               	movf	plusw1,w,c
 13291  01A2A8  0F9F               	addlw	159
 13292  01A2AA  6E32               	movwf	(btemp+10)^0,c
 13293  01A2AC  0EFD               	movlw	-3
 13294  01A2AE  006F FF8C  F033    	movff	plusw1,btemp+11
 13295  01A2B4  0EFF               	movlw	255
 13296  01A2B6  2233               	addwfc	(btemp+11)^0,f,c
 13297  01A2B8  5033               	movf	(btemp+11)^0,w,c
 13298  01A2BA  E106               	bnz	u5980
 13299  01A2BC  0E1A               	movlw	26
 13300  01A2BE  5C32               	subwf	(btemp+10)^0,w,c
 13301  01A2C0  B0D8               	btfsc	status,0,c
 13302  01A2C2  D002               	goto	u5980
 13303  01A2C4  0E01               	movlw	1
 13304  01A2C6  D001               	goto	u5990
 13305  01A2C8                     u5980:
 13306  01A2C8  0E00               	movlw	0
 13307  01A2CA                     u5990:
 13308  01A2CA  6E32               	movwf	(btemp+10)^0,c
 13309  01A2CC  6A33               	clrf	(btemp+11)^0,c
 13310                           
 13311                           ;stkvar	_toupper$6178 @ sp[(-2)+0]
 13312  01A2CE  0EFE               	movlw	-2
 13313  01A2D0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13314  01A2D6  0EFF               	movlw	-1
 13315  01A2D8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13316                           
 13317                           ;stkvar	_toupper$6178 @ sp[(-2)+0]
 13318  01A2DE  0EFE               	movlw	-2
 13319  01A2E0  006F FF8C  F028    	movff	plusw1,btemp
 13320  01A2E6  0EFF               	movlw	-1
 13321  01A2E8  50E3               	movf	plusw1,w,c
 13322  01A2EA  1028               	iorwf	btemp^0,w,c
 13323  01A2EC  B4D8               	btfsc	status,2,c
 13324  01A2EE  D00D               	goto	l7832
 13325                           
 13326                           ;stkvar	_c @ sp[(-2)+-2]
 13327  01A2F0  0EFC               	movlw	-4
 13328  01A2F2  006F FF8C  F028    	movff	plusw1,btemp
 13329  01A2F8  0EFD               	movlw	-3
 13330  01A2FA  006F FF8C  F029    	movff	plusw1,btemp+1
 13331  01A300  0E5F               	movlw	95
 13332  01A302  1628               	andwf	btemp^0,f,c
 13333  01A304  0E00               	movlw	0
 13334  01A306  1629               	andwf	(btemp+1)^0,f,c
 13335  01A308  D008               	goto	l3441
 13336  01A30A                     l7832:
 13337                           
 13338                           ;stkvar	_c @ sp[(-2)+-2]
 13339  01A30A  0EFC               	movlw	-4
 13340  01A30C  006F FF8C  F028    	movff	plusw1,btemp
 13341  01A312  0EFD               	movlw	-3
 13342  01A314  006F FF8C  F029    	movff	plusw1,btemp+1
 13343  01A31A                     l3441:
 13344                           
 13345                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13346  01A31A  52E5               	movf	postdec1,f,c
 13347  01A31C  52E5               	movf	postdec1,f,c
 13348  01A31E  52E5               	movf	postdec1,f,c
 13349  01A320  52E5               	movf	postdec1,f,c
 13350  01A322  0012               	return		;funcret
 13351  01A324                     __end_of_toupper:
 13352                           	opt callstack 0
 13353                           
 13354 ;; *************** function _islower *****************
 13355 ;; Defined at:
 13356 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
 13357 ;; Parameters:    Size  Location     Type
 13358 ;;  c               2  [STACK] int 
 13359 ;; Auto vars:     Size  Location     Type
 13360 ;;		None
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  2  [STACK] int 
 13363 ;; Registers used:
 13364 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13374 ;;Total ram usage:        0 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:   15
 13377 ;; This function calls:
 13378 ;;		Nothing
 13379 ;; This function is called by:
 13380 ;;		_toupper
 13381 ;; This function uses a reentrant model
 13382 ;;
 13383                           
 13384                           	psect	text48
 13385  01AF3A                     __ptext48:
 13386                           	opt callstack 0
 13387  01AF3A                     _islower:
 13388                           	opt callstack 0
 13389                           
 13390                           ;stkvar	_c @ sp[(0)+-2]
 13391                           
 13392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13393                           ;incstack = 0
 13394 ;; hardware stack exceeded
 13395  01AF3A  0EFE               	movlw	-2
 13396  01AF3C  50E3               	movf	plusw1,w,c
 13397  01AF3E  0F9F               	addlw	159
 13398  01AF40  6E32               	movwf	(btemp+10)^0,c
 13399  01AF42  0EFF               	movlw	-1
 13400  01AF44  006F FF8C  F033    	movff	plusw1,btemp+11
 13401  01AF4A  0EFF               	movlw	255
 13402  01AF4C  2233               	addwfc	(btemp+11)^0,f,c
 13403  01AF4E  5033               	movf	(btemp+11)^0,w,c
 13404  01AF50  E106               	bnz	u5670
 13405  01AF52  0E1A               	movlw	26
 13406  01AF54  5C32               	subwf	(btemp+10)^0,w,c
 13407  01AF56  B0D8               	btfsc	status,0,c
 13408  01AF58  D002               	goto	u5670
 13409  01AF5A  0E01               	movlw	1
 13410  01AF5C  D001               	goto	u5680
 13411  01AF5E                     u5670:
 13412  01AF5E  0E00               	movlw	0
 13413  01AF60                     u5680:
 13414  01AF60  6E28               	movwf	btemp^0,c
 13415  01AF62  6A29               	clrf	(btemp+1)^0,c
 13416                           
 13417                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13418  01AF64  52E5               	movf	postdec1,f,c
 13419  01AF66  52E5               	movf	postdec1,f,c
 13420  01AF68  0012               	return		;funcret
 13421  01AF6A                     __end_of_islower:
 13422                           	opt callstack 0
 13423                           
 13424 ;; *************** function _isalpha *****************
 13425 ;; Defined at:
 13426 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;  c               2  [STACK] int 
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;		None
 13431 ;; Return value:  Size  Location     Type
 13432 ;;                  2  [STACK] int 
 13433 ;; Registers used:
 13434 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
 13435 ;; Tracked objects:
 13436 ;;		On entry : 0/0
 13437 ;;		On exit  : 0/0
 13438 ;;		Unchanged: 0/0
 13439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13444 ;;Total ram usage:        0 bytes
 13445 ;; Hardware stack levels used:    1
 13446 ;; Hardware stack levels required when called:   15
 13447 ;; This function calls:
 13448 ;;		Nothing
 13449 ;; This function is called by:
 13450 ;;		_xtoa
 13451 ;; This function uses a reentrant model
 13452 ;;
 13453                           
 13454                           	psect	text49
 13455  01AB96                     __ptext49:
 13456                           	opt callstack 0
 13457  01AB96                     _isalpha:
 13458                           	opt callstack 0
 13459                           
 13460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13461                           ;incstack = 0
 13462 ;; hardware stack exceeded
 13463  01AB96  0E9F               	movlw	159
 13464  01AB98  6E32               	movwf	(btemp+10)^0,c
 13465  01AB9A  0EFF               	movlw	255
 13466  01AB9C  6E33               	movwf	(btemp+11)^0,c
 13467                           
 13468                           ;stkvar	_c @ sp[(0)+-2]
 13469  01AB9E  0EFE               	movlw	-2
 13470  01ABA0  006F FF8C  F030    	movff	plusw1,btemp+8
 13471  01ABA6  0EFF               	movlw	-1
 13472  01ABA8  006F FF8C  F031    	movff	plusw1,btemp+9
 13473  01ABAE  0E20               	movlw	32
 13474  01ABB0  1230               	iorwf	(btemp+8)^0,f,c
 13475  01ABB2  0E00               	movlw	0
 13476  01ABB4  1231               	iorwf	(btemp+9)^0,f,c
 13477  01ABB6  5032               	movf	(btemp+10)^0,w,c
 13478  01ABB8  2630               	addwf	(btemp+8)^0,f,c
 13479  01ABBA  5033               	movf	(btemp+11)^0,w,c
 13480  01ABBC  2231               	addwfc	(btemp+9)^0,f,c
 13481  01ABBE  5031               	movf	(btemp+9)^0,w,c
 13482  01ABC0  E106               	bnz	u5960
 13483  01ABC2  0E1A               	movlw	26
 13484  01ABC4  5C30               	subwf	(btemp+8)^0,w,c
 13485  01ABC6  B0D8               	btfsc	status,0,c
 13486  01ABC8  D002               	goto	u5960
 13487  01ABCA  0E01               	movlw	1
 13488  01ABCC  D001               	goto	u5970
 13489  01ABCE                     u5960:
 13490  01ABCE  0E00               	movlw	0
 13491  01ABD0                     u5970:
 13492  01ABD0  6E28               	movwf	btemp^0,c
 13493  01ABD2  6A29               	clrf	(btemp+1)^0,c
 13494                           
 13495                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13496  01ABD4  52E5               	movf	postdec1,f,c
 13497  01ABD6  52E5               	movf	postdec1,f,c
 13498  01ABD8  0012               	return		;funcret
 13499  01ABDA                     __end_of_isalpha:
 13500                           	opt callstack 0
 13501                           
 13502 ;; *************** function _utoa *****************
 13503 ;; Defined at:
 13504 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 13505 ;; Parameters:    Size  Location     Type
 13506 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13507 ;;		 -> f(6), NULL(0), 
 13508 ;;  d               8  [STACK] unsigned long long 
 13509 ;; Auto vars:     Size  Location     Type
 13510 ;;  n               8  [STACK] unsigned long long 
 13511 ;;  i               2  [STACK] int 
 13512 ;;  w               2  [STACK] int 
 13513 ;;  p               2  [STACK] int 
 13514 ;; Return value:  Size  Location     Type
 13515 ;;                  2  [STACK] int 
 13516 ;; Registers used:
 13517 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 13518 ;; Tracked objects:
 13519 ;;		On entry : 0/0
 13520 ;;		On exit  : 0/0
 13521 ;;		Unchanged: 0/0
 13522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13527 ;;Total ram usage:        0 bytes
 13528 ;; Hardware stack levels used:    1
 13529 ;; Hardware stack levels required when called:   20
 13530 ;; This function calls:
 13531 ;;		___lodiv
 13532 ;;		___lomod
 13533 ;;		_pad
 13534 ;; This function is called by:
 13535 ;;		_vfpfcnvrt
 13536 ;; This function uses a reentrant model
 13537 ;;
 13538                           
 13539                           	psect	text50
 13540  0162A4                     __ptext50:
 13541                           	opt callstack 0
 13542  0162A4                     _utoa:
 13543                           	opt callstack 0
 13544                           
 13545                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 13546  0162A4  0E0E               	movlw	14
 13547  0162A6  26E1               	addwf	fsr1l,f,c
 13548  0162A8  0E00               	movlw	0
 13549  0162AA  22E2               	addwfc	fsr1h,f,c
 13550                           
 13551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
 13552                           
 13553                           ;incstack = 0
 13554 ;; hardware stack exceeded
 13555  0162AC  AE4B               	btfss	(_prec+1)^0,7,c
 13556                           
 13557                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
 13558  0162AE  924C               	bcf	_flags^0,1,c
 13559                           
 13560                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
 13561  0162B0  BE4B               	btfsc	(_prec+1)^0,7,c
 13562  0162B2  D005               	goto	u11270
 13563  0162B4  504B               	movf	(_prec+1)^0,w,c
 13564  0162B6  E110               	bnz	l11914
 13565  0162B8  044A               	decf	_prec^0,w,c
 13566  0162BA  B0D8               	btfsc	status,0,c
 13567  0162BC  D00D               	goto	l11914
 13568  0162BE                     u11270:
 13569  0162BE  0E01               	movlw	1
 13570  0162C0  6E32               	movwf	(btemp+10)^0,c
 13571  0162C2  0E00               	movlw	0
 13572  0162C4  6E33               	movwf	(btemp+11)^0,c
 13573                           
 13574                           ;stkvar	_p @ sp[(-14)+12]
 13575  0162C6  0EFE               	movlw	-2
 13576  0162C8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13577  0162CE  0EFF               	movlw	-1
 13578  0162D0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13579  0162D6  D008               	goto	l2259
 13580  0162D8                     l11914:
 13581                           
 13582                           ;stkvar	_p @ sp[(-14)+12]
 13583  0162D8  0EFE               	movlw	-2
 13584  0162DA  0060  F12B  FFE3   	movff	_prec,plusw1
 13585  0162E0  0EFF               	movlw	-1
 13586  0162E2  0060  F12F  FFE3   	movff	_prec+1,plusw1
 13587  0162E8                     l2259:
 13588                           
 13589                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
 13590                           ;stkvar	_w @ sp[(-14)+10]
 13591  0162E8  0EFC               	movlw	-4
 13592  0162EA  0060  F123  FFE3   	movff	_width,plusw1
 13593  0162F0  0EFD               	movlw	-3
 13594  0162F2  0060  F127  FFE3   	movff	_width+1,plusw1
 13595                           
 13596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
 13597                           ;stkvar	_d @ sp[(-14)+-10]
 13598  0162F8  0EE8               	movlw	232
 13599  0162FA  24E1               	addwf	fsr1l,w,c
 13600  0162FC  6ED9               	movwf	fsr2l,c
 13601  0162FE  0EFF               	movlw	255
 13602  016300  20E2               	addwfc	fsr1h,w,c
 13603  016302  6EDA               	movwf	fsr2h,c
 13604                           
 13605                           ;stkvar	_n @ sp[(-14)+0]
 13606  016304  0E08               	movlw	8
 13607  016306  6E28               	movwf	btemp^0,c
 13608  016308  0EF2               	movlw	-14
 13609  01630A                     us1128999:
 13610  01630A  006F FF7B FFE3     	movff	postinc2,plusw1
 13611  016310  28E8               	incf	wreg,w,c
 13612  016312  2E28               	decfsz	btemp^0,f,c
 13613  016314  D7FA               	bra	us1128999
 13614                           
 13615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
 13616  016316  0E4F               	movlw	79
 13617  016318  6E32               	movwf	(btemp+10)^0,c
 13618  01631A  0E00               	movlw	0
 13619  01631C  6E33               	movwf	(btemp+11)^0,c
 13620                           
 13621                           ;stkvar	_i @ sp[(-14)+8]
 13622  01631E  0EFA               	movlw	-6
 13623  016320  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 13624  016326  0EFB               	movlw	-5
 13625  016328  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 13626                           
 13627                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
 13628  01632E  0103               	movlb	3	; () banked
 13629  016330  6BE3               	clrf	(_dbuf+79)& (0+255),b
 13630                           
 13631                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13632  016332  D0FB               	goto	l11932
 13633  016334                     l11922:
 13634                           
 13635                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
 13636                           ;stkvar	_i @ sp[(-14)+8]
 13637  016334  50E1               	movf	fsr1l,w,c
 13638  016336  0FFA               	addlw	-6
 13639  016338  6ED9               	movwf	fsr2l,c
 13640  01633A  50E2               	movf	fsr1h,w,c
 13641  01633C  6EDA               	movwf	fsr2h,c
 13642  01633E  0EFF               	movlw	255
 13643  016340  22DA               	addwfc	fsr2h,f,c
 13644  016342  06DE               	decf	postinc2,f,c
 13645  016344  0E00               	movlw	0
 13646  016346  5ADD               	subwfb	postdec2,f,c
 13647                           
 13648                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
 13649  016348  0E0A               	movlw	10
 13650  01634A  6EE6               	movwf	postinc1,c
 13651  01634C  0E00               	movlw	0
 13652  01634E  6EE6               	movwf	postinc1,c
 13653  016350  0E00               	movlw	0
 13654  016352  6EE6               	movwf	postinc1,c
 13655  016354  0E00               	movlw	0
 13656  016356  6EE6               	movwf	postinc1,c
 13657  016358  0E00               	movlw	0
 13658  01635A  6EE6               	movwf	postinc1,c
 13659  01635C  0E00               	movlw	0
 13660  01635E  6EE6               	movwf	postinc1,c
 13661  016360  0E00               	movlw	0
 13662  016362  6EE6               	movwf	postinc1,c
 13663  016364  0E00               	movlw	0
 13664  016366  6EE6               	movwf	postinc1,c
 13665                           
 13666                           ;stkvar	_n @ sp[(-22)+0]
 13667  016368  50E1               	movf	fsr1l,w,c
 13668  01636A  0FEA               	addlw	-22
 13669  01636C  6ED9               	movwf	fsr2l,c
 13670  01636E  50E2               	movf	fsr1h,w,c
 13671  016370  6EDA               	movwf	fsr2h,c
 13672  016372  0EFF               	movlw	255
 13673  016374  22DA               	addwfc	fsr2h,f,c
 13674  016376  006F FF7B FFE6     	movff	postinc2,postinc1
 13675  01637C  006F FF7B FFE6     	movff	postinc2,postinc1
 13676  016382  006F FF7B FFE6     	movff	postinc2,postinc1
 13677  016388  006F FF7B FFE6     	movff	postinc2,postinc1
 13678  01638E  006F FF7B FFE6     	movff	postinc2,postinc1
 13679  016394  006F FF7B FFE6     	movff	postinc2,postinc1
 13680  01639A  006F FF7B FFE6     	movff	postinc2,postinc1
 13681  0163A0  006F FF7B FFE6     	movff	postinc2,postinc1
 13682  0163A6  EC7A  F0C5         	call	___lomod	;wreg free
 13683  0163AA  52E5               	movf	postdec1,f,c
 13684  0163AC  006F FF9C  F03F    	movff	indf1,btemp+23
 13685  0163B2  52E5               	movf	postdec1,f,c
 13686  0163B4  006F FF9C  F03E    	movff	indf1,btemp+22
 13687  0163BA  52E5               	movf	postdec1,f,c
 13688  0163BC  006F FF9C  F03D    	movff	indf1,btemp+21
 13689  0163C2  52E5               	movf	postdec1,f,c
 13690  0163C4  006F FF9C  F03C    	movff	indf1,btemp+20
 13691  0163CA  52E5               	movf	postdec1,f,c
 13692  0163CC  006F FF9C  F03B    	movff	indf1,btemp+19
 13693  0163D2  52E5               	movf	postdec1,f,c
 13694  0163D4  006F FF9C  F03A    	movff	indf1,btemp+18
 13695  0163DA  52E5               	movf	postdec1,f,c
 13696  0163DC  006F FF9C  F039    	movff	indf1,btemp+17
 13697  0163E2  52E5               	movf	postdec1,f,c
 13698  0163E4  006F FF9C  F038    	movff	indf1,btemp+16
 13699  0163EA  0EF8               	movlw	248
 13700  0163EC  26E1               	addwf	fsr1l,f,c
 13701  0163EE  0EFF               	movlw	255
 13702  0163F0  22E2               	addwfc	fsr1h,f,c
 13703  0163F2  0E30               	movlw	48
 13704  0163F4  2638               	addwf	(btemp+16)^0,f,c
 13705                           
 13706                           ;stkvar	_i @ sp[(-14)+8]
 13707  0163F6  0EFA               	movlw	-6
 13708  0163F8  006F FF8C  F032    	movff	plusw1,btemp+10
 13709  0163FE  0EFB               	movlw	-5
 13710  016400  006F FF8C  F033    	movff	plusw1,btemp+11
 13711  016406  0E94               	movlw	low _dbuf
 13712  016408  2432               	addwf	(btemp+10)^0,w,c
 13713  01640A  6ED9               	movwf	fsr2l,c
 13714  01640C  0E03               	movlw	high _dbuf
 13715  01640E  2033               	addwfc	(btemp+11)^0,w,c
 13716  016410  6EDA               	movwf	fsr2h,c
 13717  016412  0060  F0E3  FFDF   	movff	btemp+16,indf2
 13718                           
 13719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
 13720                           ;stkvar	_p @ sp[(-14)+12]
 13721  016418  50E1               	movf	fsr1l,w,c
 13722  01641A  0FFE               	addlw	-2
 13723  01641C  6ED9               	movwf	fsr2l,c
 13724  01641E  50E2               	movf	fsr1h,w,c
 13725  016420  6EDA               	movwf	fsr2h,c
 13726  016422  0EFF               	movlw	255
 13727  016424  22DA               	addwfc	fsr2h,f,c
 13728  016426  06DE               	decf	postinc2,f,c
 13729  016428  0E00               	movlw	0
 13730  01642A  5ADD               	subwfb	postdec2,f,c
 13731                           
 13732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
 13733                           ;stkvar	_w @ sp[(-14)+10]
 13734  01642C  50E1               	movf	fsr1l,w,c
 13735  01642E  0FFC               	addlw	-4
 13736  016430  6ED9               	movwf	fsr2l,c
 13737  016432  50E2               	movf	fsr1h,w,c
 13738  016434  6EDA               	movwf	fsr2h,c
 13739  016436  0EFF               	movlw	255
 13740  016438  22DA               	addwfc	fsr2h,f,c
 13741  01643A  06DE               	decf	postinc2,f,c
 13742  01643C  0E00               	movlw	0
 13743  01643E  5ADD               	subwfb	postdec2,f,c
 13744                           
 13745                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
 13746  016440  0E0A               	movlw	10
 13747  016442  6EE6               	movwf	postinc1,c
 13748  016444  0E00               	movlw	0
 13749  016446  6EE6               	movwf	postinc1,c
 13750  016448  0E00               	movlw	0
 13751  01644A  6EE6               	movwf	postinc1,c
 13752  01644C  0E00               	movlw	0
 13753  01644E  6EE6               	movwf	postinc1,c
 13754  016450  0E00               	movlw	0
 13755  016452  6EE6               	movwf	postinc1,c
 13756  016454  0E00               	movlw	0
 13757  016456  6EE6               	movwf	postinc1,c
 13758  016458  0E00               	movlw	0
 13759  01645A  6EE6               	movwf	postinc1,c
 13760  01645C  0E00               	movlw	0
 13761  01645E  6EE6               	movwf	postinc1,c
 13762                           
 13763                           ;stkvar	_n @ sp[(-22)+0]
 13764  016460  50E1               	movf	fsr1l,w,c
 13765  016462  0FEA               	addlw	-22
 13766  016464  6ED9               	movwf	fsr2l,c
 13767  016466  50E2               	movf	fsr1h,w,c
 13768  016468  6EDA               	movwf	fsr2h,c
 13769  01646A  0EFF               	movlw	255
 13770  01646C  22DA               	addwfc	fsr2h,f,c
 13771  01646E  006F FF7B FFE6     	movff	postinc2,postinc1
 13772  016474  006F FF7B FFE6     	movff	postinc2,postinc1
 13773  01647A  006F FF7B FFE6     	movff	postinc2,postinc1
 13774  016480  006F FF7B FFE6     	movff	postinc2,postinc1
 13775  016486  006F FF7B FFE6     	movff	postinc2,postinc1
 13776  01648C  006F FF7B FFE6     	movff	postinc2,postinc1
 13777  016492  006F FF7B FFE6     	movff	postinc2,postinc1
 13778  016498  006F FF7B FFE6     	movff	postinc2,postinc1
 13779  01649E  EC85  F0C0         	call	___lodiv	;wreg free
 13780  0164A2  52E5               	movf	postdec1,f,c
 13781  0164A4  006F FF9C  F03F    	movff	indf1,btemp+23
 13782  0164AA  52E5               	movf	postdec1,f,c
 13783  0164AC  006F FF9C  F03E    	movff	indf1,btemp+22
 13784  0164B2  52E5               	movf	postdec1,f,c
 13785  0164B4  006F FF9C  F03D    	movff	indf1,btemp+21
 13786  0164BA  52E5               	movf	postdec1,f,c
 13787  0164BC  006F FF9C  F03C    	movff	indf1,btemp+20
 13788  0164C2  52E5               	movf	postdec1,f,c
 13789  0164C4  006F FF9C  F03B    	movff	indf1,btemp+19
 13790  0164CA  52E5               	movf	postdec1,f,c
 13791  0164CC  006F FF9C  F03A    	movff	indf1,btemp+18
 13792  0164D2  52E5               	movf	postdec1,f,c
 13793  0164D4  006F FF9C  F039    	movff	indf1,btemp+17
 13794  0164DA  52E5               	movf	postdec1,f,c
 13795  0164DC  006F FF9C  F038    	movff	indf1,btemp+16
 13796  0164E2  0EF8               	movlw	248
 13797  0164E4  26E1               	addwf	fsr1l,f,c
 13798  0164E6  0EFF               	movlw	255
 13799  0164E8  22E2               	addwfc	fsr1h,f,c
 13800                           
 13801                           ;stkvar	_n @ sp[(-14)+0]
 13802  0164EA  0EF2               	movlw	-14
 13803  0164EC  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 13804  0164F2  0EF3               	movlw	-13
 13805  0164F4  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 13806  0164FA  0EF4               	movlw	-12
 13807  0164FC  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 13808  016502  0EF5               	movlw	-11
 13809  016504  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 13810  01650A  0EF6               	movlw	-10
 13811  01650C  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 13812  016512  0EF7               	movlw	-9
 13813  016514  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 13814  01651A  0EF8               	movlw	-8
 13815  01651C  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 13816  016522  0EF9               	movlw	-7
 13817  016524  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 13818  01652A                     l11932:
 13819                           
 13820                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
 13821                           ;stkvar	_i @ sp[(-14)+8]
 13822  01652A  0EFA               	movlw	-6
 13823  01652C  006F FF8C  F028    	movff	plusw1,btemp
 13824  016532  0EFB               	movlw	-5
 13825  016534  50E3               	movf	plusw1,w,c
 13826  016536  1028               	iorwf	btemp^0,w,c
 13827  016538  B4D8               	btfsc	status,2,c
 13828  01653A  D02F               	goto	u11330
 13829                           
 13830                           ;stkvar	_n @ sp[(-14)+0]
 13831  01653C  0EF2               	movlw	-14
 13832  01653E  50E3               	movf	plusw1,w,c
 13833  016540  E115               	bnz	u11301
 13834  016542  0EF3               	movlw	-13
 13835  016544  50E3               	movf	plusw1,w,c
 13836  016546  E112               	bnz	u11301
 13837  016548  0EF4               	movlw	-12
 13838  01654A  50E3               	movf	plusw1,w,c
 13839  01654C  E10F               	bnz	u11301
 13840  01654E  0EF5               	movlw	-11
 13841  016550  50E3               	movf	plusw1,w,c
 13842  016552  E10C               	bnz	u11301
 13843  016554  0EF6               	movlw	-10
 13844  016556  50E3               	movf	plusw1,w,c
 13845  016558  E109               	bnz	u11301
 13846  01655A  0EF7               	movlw	-9
 13847  01655C  50E3               	movf	plusw1,w,c
 13848  01655E  E106               	bnz	u11301
 13849  016560  0EF8               	movlw	-8
 13850  016562  50E3               	movf	plusw1,w,c
 13851  016564  E103               	bnz	u11301
 13852  016566  0EF9               	movlw	-7
 13853  016568  50E3               	movf	plusw1,w,c
 13854  01656A  A4D8               	btfss	status,2,c
 13855  01656C                     u11301:
 13856  01656C  D6E3               	goto	l11922
 13857                           
 13858                           ;stkvar	_p @ sp[(-14)+12]
 13859  01656E  0EFF               	movlw	-1
 13860  016570  BEE3               	btfsc	plusw1,7,c
 13861  016572  D007               	goto	u11310
 13862  016574  0EFF               	movlw	-1
 13863  016576  50E3               	movf	plusw1,w,c
 13864  016578  E103               	bnz	u11311
 13865  01657A  0EFE               	movlw	-2
 13866  01657C  04E3               	decf	plusw1,w,c
 13867  01657E  B0D8               	btfsc	status,0,c
 13868  016580                     u11311:
 13869  016580  D6D9               	goto	l11922
 13870  016582                     u11310:
 13871                           
 13872                           ;stkvar	_w @ sp[(-14)+10]
 13873  016582  0EFD               	movlw	-3
 13874  016584  BEE3               	btfsc	plusw1,7,c
 13875  016586  D009               	goto	u11330
 13876  016588  0EFD               	movlw	-3
 13877  01658A  50E3               	movf	plusw1,w,c
 13878  01658C  E104               	bnz	u11320
 13879  01658E  0EFC               	movlw	-4
 13880  016590  04E3               	decf	plusw1,w,c
 13881  016592  A0D8               	btfss	status,0,c
 13882  016594  D002               	goto	u11330
 13883  016596                     u11320:
 13884  016596  B24C               	btfsc	_flags^0,1,c
 13885  016598  D6CD               	goto	l11922
 13886  01659A                     u11330:
 13887                           
 13888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
 13889                           ;stkvar	_w @ sp[(-14)+10]
 13890  01659A  0EFC               	movlw	-4
 13891  01659C  006F FF8F FFE6     	movff	plusw1,postinc1
 13892  0165A2  006F FF8F FFE6     	movff	plusw1,postinc1
 13893                           
 13894                           ;stkvar	_i @ sp[(-16)+8]
 13895  0165A8  0E94               	movlw	low _dbuf
 13896  0165AA  6E32               	movwf	(btemp+10)^0,c
 13897  0165AC  0E03               	movlw	high _dbuf
 13898  0165AE  6E33               	movwf	(btemp+11)^0,c
 13899  0165B0  0EF8               	movlw	-8
 13900  0165B2  50E3               	movf	plusw1,w,c
 13901  0165B4  2632               	addwf	(btemp+10)^0,f,c
 13902  0165B6  0EF9               	movlw	-7
 13903  0165B8  50E3               	movf	plusw1,w,c
 13904  0165BA  2233               	addwfc	(btemp+11)^0,f,c
 13905  0165BC  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 13906  0165C2  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 13907                           
 13908                           ;stkvar	_fp @ sp[(-18)+-2]
 13909  0165C8  0EEC               	movlw	-20
 13910  0165CA  006F FF8F FFE6     	movff	plusw1,postinc1
 13911  0165D0  006F FF8F FFE6     	movff	plusw1,postinc1
 13912  0165D6  EC6D  F0C8         	call	_pad	;wreg free
 13913                           
 13914                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 13915  0165DA  0EE8               	movlw	232
 13916  0165DC  26E1               	addwf	fsr1l,f,c
 13917  0165DE  0EFF               	movlw	255
 13918  0165E0  22E2               	addwfc	fsr1h,f,c
 13919  0165E2  0012               	return		;funcret
 13920  0165E4                     __end_of_utoa:
 13921                           	opt callstack 0
 13922                           
 13923 ;; *************** function ___lomod *****************
 13924 ;; Defined at:
 13925 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
 13926 ;; Parameters:    Size  Location     Type
 13927 ;;  dividend        8  [STACK] unsigned long long 
 13928 ;;  divisor         8  [STACK] unsigned long long 
 13929 ;; Auto vars:     Size  Location     Type
 13930 ;;  counter         1  [STACK] unsigned char 
 13931 ;; Return value:  Size  Location     Type
 13932 ;;                  8  [STACK] unsigned long long 
 13933 ;; Registers used:
 13934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13935 ;; Tracked objects:
 13936 ;;		On entry : 0/3
 13937 ;;		On exit  : 0/0
 13938 ;;		Unchanged: 0/0
 13939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13943 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13944 ;;Total ram usage:        0 bytes
 13945 ;; Hardware stack levels used:    1
 13946 ;; Hardware stack levels required when called:   15
 13947 ;; This function calls:
 13948 ;;		Nothing
 13949 ;; This function is called by:
 13950 ;;		_utoa
 13951 ;; This function uses a reentrant model
 13952 ;;
 13953                           
 13954                           	psect	text51
 13955  018AF4                     __ptext51:
 13956                           	opt callstack 0
 13957  018AF4                     ___lomod:
 13958                           	opt callstack 0
 13959                           
 13960                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 13961  018AF4  52E6               	movf	postinc1,f,c
 13962                           
 13963                           ;stkvar	_divisor @ sp[(-1)+-16]
 13964                           
 13965                           ;incstack = 0
 13966 ;; hardware stack exceeded
 13967  018AF6  0EEF               	movlw	-17
 13968  018AF8  50E3               	movf	plusw1,w,c
 13969  018AFA  E116               	bnz	u7110
 13970  018AFC  0EF0               	movlw	-16
 13971  018AFE  50E3               	movf	plusw1,w,c
 13972  018B00  E113               	bnz	u7110
 13973  018B02  0EF1               	movlw	-15
 13974  018B04  50E3               	movf	plusw1,w,c
 13975  018B06  E110               	bnz	u7110
 13976  018B08  0EF2               	movlw	-14
 13977  018B0A  50E3               	movf	plusw1,w,c
 13978  018B0C  E10D               	bnz	u7110
 13979  018B0E  0EF3               	movlw	-13
 13980  018B10  50E3               	movf	plusw1,w,c
 13981  018B12  E10A               	bnz	u7110
 13982  018B14  0EF4               	movlw	-12
 13983  018B16  50E3               	movf	plusw1,w,c
 13984  018B18  E107               	bnz	u7110
 13985  018B1A  0EF5               	movlw	-11
 13986  018B1C  50E3               	movf	plusw1,w,c
 13987  018B1E  E104               	bnz	u7110
 13988  018B20  0EF6               	movlw	-10
 13989  018B22  50E3               	movf	plusw1,w,c
 13990  018B24  B4D8               	btfsc	status,2,c
 13991  018B26  D075               	goto	u7140
 13992  018B28                     u7110:
 13993                           
 13994                           ;stkvar	_counter @ sp[(-1)+0]
 13995  018B28  0EFF               	movlw	-1
 13996  018B2A  6AE3               	clrf	plusw1,c
 13997  018B2C  D012               	goto	L12
 13998  018B2E                     l8442:
 13999                           
 14000                           ;stkvar	_divisor @ sp[(-1)+-16]
 14001  018B2E  90D8               	bcf	status,0,c
 14002  018B30  0EEF               	movlw	-17
 14003  018B32  36E3               	rlcf	plusw1,f,c
 14004  018B34  0EF0               	movlw	-16
 14005  018B36  36E3               	rlcf	plusw1,f,c
 14006  018B38  0EF1               	movlw	-15
 14007  018B3A  36E3               	rlcf	plusw1,f,c
 14008  018B3C  0EF2               	movlw	-14
 14009  018B3E  36E3               	rlcf	plusw1,f,c
 14010  018B40  0EF3               	movlw	-13
 14011  018B42  36E3               	rlcf	plusw1,f,c
 14012  018B44  0EF4               	movlw	-12
 14013  018B46  36E3               	rlcf	plusw1,f,c
 14014  018B48  0EF5               	movlw	-11
 14015  018B4A  36E3               	rlcf	plusw1,f,c
 14016  018B4C  0EF6               	movlw	-10
 14017  018B4E  36E3               	rlcf	plusw1,f,c
 14018                           
 14019                           ;stkvar	_counter @ sp[(-1)+0]
 14020  018B50  0EFF               	movlw	-1
 14021  018B52                     L12:
 14022  018B52  2AE3               	incf	plusw1,f,c
 14023                           
 14024                           ;stkvar	_divisor @ sp[(-1)+-16]
 14025  018B54  0EF6               	movlw	-10
 14026  018B56  AEE3               	btfss	plusw1,7,c
 14027  018B58  D7EA               	goto	l8442
 14028  018B5A                     u7120:
 14029                           
 14030                           ;stkvar	_divisor @ sp[(-1)+-16]
 14031                           ;stkvar	_dividend @ sp[(-1)+-8]
 14032  018B5A  50E1               	movf	fsr1l,w,c
 14033  018B5C  0FF7               	addlw	-9
 14034  018B5E  6ED9               	movwf	fsr2l,c
 14035  018B60  50E2               	movf	fsr1h,w,c
 14036  018B62  6EDA               	movwf	fsr2h,c
 14037  018B64  0EFF               	movlw	255
 14038  018B66  22DA               	addwfc	fsr2h,f,c
 14039  018B68  0EEF               	movlw	-17
 14040  018B6A  50E3               	movf	plusw1,w,c
 14041  018B6C  5CDE               	subwf	postinc2,w,c
 14042  018B6E  0EF0               	movlw	-16
 14043  018B70  50E3               	movf	plusw1,w,c
 14044  018B72  58DE               	subwfb	postinc2,w,c
 14045  018B74  0EF1               	movlw	-15
 14046  018B76  50E3               	movf	plusw1,w,c
 14047  018B78  58DE               	subwfb	postinc2,w,c
 14048  018B7A  0EF2               	movlw	-14
 14049  018B7C  50E3               	movf	plusw1,w,c
 14050  018B7E  58DE               	subwfb	postinc2,w,c
 14051  018B80  0EF3               	movlw	-13
 14052  018B82  50E3               	movf	plusw1,w,c
 14053  018B84  58DE               	subwfb	postinc2,w,c
 14054  018B86  0EF4               	movlw	-12
 14055  018B88  50E3               	movf	plusw1,w,c
 14056  018B8A  58DE               	subwfb	postinc2,w,c
 14057  018B8C  0EF5               	movlw	-11
 14058  018B8E  50E3               	movf	plusw1,w,c
 14059  018B90  58DE               	subwfb	postinc2,w,c
 14060  018B92  0EF6               	movlw	-10
 14061  018B94  50E3               	movf	plusw1,w,c
 14062  018B96  58DE               	subwfb	postinc2,w,c
 14063  018B98  A0D8               	btfss	status,0,c
 14064  018B9A  D01F               	goto	l8450
 14065                           
 14066                           ;stkvar	_divisor @ sp[(-1)+-16]
 14067                           ;stkvar	_dividend @ sp[(-1)+-8]
 14068  018B9C  50E1               	movf	fsr1l,w,c
 14069  018B9E  0FF7               	addlw	-9
 14070  018BA0  6ED9               	movwf	fsr2l,c
 14071  018BA2  50E2               	movf	fsr1h,w,c
 14072  018BA4  6EDA               	movwf	fsr2h,c
 14073  018BA6  0EFF               	movlw	255
 14074  018BA8  22DA               	addwfc	fsr2h,f,c
 14075  018BAA  0EEF               	movlw	-17
 14076  018BAC  50E3               	movf	plusw1,w,c
 14077  018BAE  5EDE               	subwf	postinc2,f,c
 14078  018BB0  0EF0               	movlw	-16
 14079  018BB2  50E3               	movf	plusw1,w,c
 14080  018BB4  5ADE               	subwfb	postinc2,f,c
 14081  018BB6  0EF1               	movlw	-15
 14082  018BB8  50E3               	movf	plusw1,w,c
 14083  018BBA  5ADE               	subwfb	postinc2,f,c
 14084  018BBC  0EF2               	movlw	-14
 14085  018BBE  50E3               	movf	plusw1,w,c
 14086  018BC0  5ADE               	subwfb	postinc2,f,c
 14087  018BC2  0EF3               	movlw	-13
 14088  018BC4  50E3               	movf	plusw1,w,c
 14089  018BC6  5ADE               	subwfb	postinc2,f,c
 14090  018BC8  0EF4               	movlw	-12
 14091  018BCA  50E3               	movf	plusw1,w,c
 14092  018BCC  5ADE               	subwfb	postinc2,f,c
 14093  018BCE  0EF5               	movlw	-11
 14094  018BD0  50E3               	movf	plusw1,w,c
 14095  018BD2  5ADE               	subwfb	postinc2,f,c
 14096  018BD4  0EF6               	movlw	-10
 14097  018BD6  50E3               	movf	plusw1,w,c
 14098  018BD8  5ADE               	subwfb	postinc2,f,c
 14099  018BDA                     l8450:
 14100                           
 14101                           ;stkvar	_divisor @ sp[(-1)+-16]
 14102  018BDA  90D8               	bcf	status,0,c
 14103  018BDC  0EF6               	movlw	-10
 14104  018BDE  32E3               	rrcf	plusw1,f,c
 14105  018BE0  0EF5               	movlw	-11
 14106  018BE2  32E3               	rrcf	plusw1,f,c
 14107  018BE4  0EF4               	movlw	-12
 14108  018BE6  32E3               	rrcf	plusw1,f,c
 14109  018BE8  0EF3               	movlw	-13
 14110  018BEA  32E3               	rrcf	plusw1,f,c
 14111  018BEC  0EF2               	movlw	-14
 14112  018BEE  32E3               	rrcf	plusw1,f,c
 14113  018BF0  0EF1               	movlw	-15
 14114  018BF2  32E3               	rrcf	plusw1,f,c
 14115  018BF4  0EF0               	movlw	-16
 14116  018BF6  32E3               	rrcf	plusw1,f,c
 14117  018BF8  0EEF               	movlw	-17
 14118  018BFA  32E3               	rrcf	plusw1,f,c
 14119                           
 14120                           ;stkvar	_counter @ sp[(-1)+0]
 14121  018BFC  0EFF               	movlw	-1
 14122  018BFE  50E3               	movf	plusw1,w,c
 14123  018C00  6E28               	movwf	btemp^0,c
 14124  018C02  0E01               	movlw	1
 14125  018C04  5E28               	subwf	btemp^0,f,c
 14126  018C06  0EFF               	movlw	-1
 14127  018C08  0060  F0A3  FFE3   	movff	btemp,plusw1
 14128  018C0E  A4D8               	btfss	status,2,c
 14129  018C10  D7A4               	goto	u7120
 14130  018C12                     u7140:
 14131                           
 14132                           ;stkvar	_dividend @ sp[(-1)+-8]
 14133  018C12  0EF7               	movlw	247
 14134  018C14  24E1               	addwf	fsr1l,w,c
 14135  018C16  6ED9               	movwf	fsr2l,c
 14136  018C18  0EFF               	movlw	255
 14137  018C1A  20E2               	addwfc	fsr1h,w,c
 14138  018C1C  6EDA               	movwf	fsr2h,c
 14139                           
 14140                           ;stkvar	?___lomod @ sp[(-1)+-8]
 14141  018C1E  0E08               	movlw	8
 14142  018C20  6E28               	movwf	btemp^0,c
 14143  018C22  0EF7               	movlw	-9
 14144  018C24                     us715999:
 14145  018C24  006F FF7B FFE3     	movff	postinc2,plusw1
 14146  018C2A  28E8               	incf	wreg,w,c
 14147  018C2C  2E28               	decfsz	btemp^0,f,c
 14148  018C2E  D7FA               	bra	us715999
 14149                           
 14150                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14151  018C30  52E5               	movf	postdec1,f,c
 14152  018C32  0012               	return		;funcret
 14153  018C34                     __end_of___lomod:
 14154                           	opt callstack 0
 14155                           
 14156 ;; *************** function ___lodiv *****************
 14157 ;; Defined at:
 14158 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 14159 ;; Parameters:    Size  Location     Type
 14160 ;;  dividend        8  [STACK] unsigned long long 
 14161 ;;  divisor         8  [STACK] unsigned long long 
 14162 ;; Auto vars:     Size  Location     Type
 14163 ;;  quotient        8  [STACK] unsigned long long 
 14164 ;;  counter         1  [STACK] unsigned char 
 14165 ;; Return value:  Size  Location     Type
 14166 ;;                  8  [STACK] unsigned long long 
 14167 ;; Registers used:
 14168 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 14169 ;; Tracked objects:
 14170 ;;		On entry : 0/3
 14171 ;;		On exit  : 0/0
 14172 ;;		Unchanged: 0/0
 14173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14178 ;;Total ram usage:        0 bytes
 14179 ;; Hardware stack levels used:    1
 14180 ;; Hardware stack levels required when called:   15
 14181 ;; This function calls:
 14182 ;;		Nothing
 14183 ;; This function is called by:
 14184 ;;		_utoa
 14185 ;; This function uses a reentrant model
 14186 ;;
 14187                           
 14188                           	psect	text52
 14189  01810A                     __ptext52:
 14190                           	opt callstack 0
 14191  01810A                     ___lodiv:
 14192                           	opt callstack 0
 14193                           
 14194                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 14195  01810A  0E09               	movlw	9
 14196  01810C  26E1               	addwf	fsr1l,f,c
 14197  01810E  0E00               	movlw	0
 14198  018110  22E2               	addwfc	fsr1h,f,c
 14199                           
 14200                           ;stkvar	_quotient @ sp[(-9)+0]
 14201                           
 14202                           ;incstack = 0
 14203 ;; hardware stack exceeded
 14204  018112  0E07               	movlw	7
 14205  018114  6E28               	movwf	btemp^0,c
 14206  018116  0EF7               	movlw	-9
 14207  018118                     u7051:
 14208  018118  6AE3               	clrf	plusw1,c
 14209  01811A  2AE8               	incf	wreg,f,c
 14210  01811C  0628               	decf	btemp^0,f,c
 14211  01811E  E2FC               	bc	u7051
 14212                           
 14213                           ;stkvar	_divisor @ sp[(-9)+-16]
 14214  018120  0EE7               	movlw	-25
 14215  018122  50E3               	movf	plusw1,w,c
 14216  018124  E116               	bnz	u7060
 14217  018126  0EE8               	movlw	-24
 14218  018128  50E3               	movf	plusw1,w,c
 14219  01812A  E113               	bnz	u7060
 14220  01812C  0EE9               	movlw	-23
 14221  01812E  50E3               	movf	plusw1,w,c
 14222  018130  E110               	bnz	u7060
 14223  018132  0EEA               	movlw	-22
 14224  018134  50E3               	movf	plusw1,w,c
 14225  018136  E10D               	bnz	u7060
 14226  018138  0EEB               	movlw	-21
 14227  01813A  50E3               	movf	plusw1,w,c
 14228  01813C  E10A               	bnz	u7060
 14229  01813E  0EEC               	movlw	-20
 14230  018140  50E3               	movf	plusw1,w,c
 14231  018142  E107               	bnz	u7060
 14232  018144  0EED               	movlw	-19
 14233  018146  50E3               	movf	plusw1,w,c
 14234  018148  E104               	bnz	u7060
 14235  01814A  0EEE               	movlw	-18
 14236  01814C  50E3               	movf	plusw1,w,c
 14237  01814E  B4D8               	btfsc	status,2,c
 14238  018150  D088               	goto	u7090
 14239  018152                     u7060:
 14240                           
 14241                           ;stkvar	_counter @ sp[(-9)+8]
 14242  018152  0EFF               	movlw	-1
 14243  018154  6AE3               	clrf	plusw1,c
 14244  018156  D012               	goto	L13
 14245  018158                     l8418:
 14246                           
 14247                           ;stkvar	_divisor @ sp[(-9)+-16]
 14248  018158  90D8               	bcf	status,0,c
 14249  01815A  0EE7               	movlw	-25
 14250  01815C  36E3               	rlcf	plusw1,f,c
 14251  01815E  0EE8               	movlw	-24
 14252  018160  36E3               	rlcf	plusw1,f,c
 14253  018162  0EE9               	movlw	-23
 14254  018164  36E3               	rlcf	plusw1,f,c
 14255  018166  0EEA               	movlw	-22
 14256  018168  36E3               	rlcf	plusw1,f,c
 14257  01816A  0EEB               	movlw	-21
 14258  01816C  36E3               	rlcf	plusw1,f,c
 14259  01816E  0EEC               	movlw	-20
 14260  018170  36E3               	rlcf	plusw1,f,c
 14261  018172  0EED               	movlw	-19
 14262  018174  36E3               	rlcf	plusw1,f,c
 14263  018176  0EEE               	movlw	-18
 14264  018178  36E3               	rlcf	plusw1,f,c
 14265                           
 14266                           ;stkvar	_counter @ sp[(-9)+8]
 14267  01817A  0EFF               	movlw	-1
 14268  01817C                     L13:
 14269  01817C  2AE3               	incf	plusw1,f,c
 14270                           
 14271                           ;stkvar	_divisor @ sp[(-9)+-16]
 14272  01817E  0EEE               	movlw	-18
 14273  018180  AEE3               	btfss	plusw1,7,c
 14274  018182  D7EA               	goto	l8418
 14275  018184                     u7070:
 14276                           
 14277                           ;stkvar	_quotient @ sp[(-9)+0]
 14278  018184  90D8               	bcf	status,0,c
 14279  018186  0EF7               	movlw	-9
 14280  018188  36E3               	rlcf	plusw1,f,c
 14281  01818A  0EF8               	movlw	-8
 14282  01818C  36E3               	rlcf	plusw1,f,c
 14283  01818E  0EF9               	movlw	-7
 14284  018190  36E3               	rlcf	plusw1,f,c
 14285  018192  0EFA               	movlw	-6
 14286  018194  36E3               	rlcf	plusw1,f,c
 14287  018196  0EFB               	movlw	-5
 14288  018198  36E3               	rlcf	plusw1,f,c
 14289  01819A  0EFC               	movlw	-4
 14290  01819C  36E3               	rlcf	plusw1,f,c
 14291  01819E  0EFD               	movlw	-3
 14292  0181A0  36E3               	rlcf	plusw1,f,c
 14293  0181A2  0EFE               	movlw	-2
 14294  0181A4  36E3               	rlcf	plusw1,f,c
 14295                           
 14296                           ;stkvar	_divisor @ sp[(-9)+-16]
 14297                           ;stkvar	_dividend @ sp[(-9)+-8]
 14298  0181A6  50E1               	movf	fsr1l,w,c
 14299  0181A8  0FEF               	addlw	-17
 14300  0181AA  6ED9               	movwf	fsr2l,c
 14301  0181AC  50E2               	movf	fsr1h,w,c
 14302  0181AE  6EDA               	movwf	fsr2h,c
 14303  0181B0  0EFF               	movlw	255
 14304  0181B2  22DA               	addwfc	fsr2h,f,c
 14305  0181B4  0EE7               	movlw	-25
 14306  0181B6  50E3               	movf	plusw1,w,c
 14307  0181B8  5CDE               	subwf	postinc2,w,c
 14308  0181BA  0EE8               	movlw	-24
 14309  0181BC  50E3               	movf	plusw1,w,c
 14310  0181BE  58DE               	subwfb	postinc2,w,c
 14311  0181C0  0EE9               	movlw	-23
 14312  0181C2  50E3               	movf	plusw1,w,c
 14313  0181C4  58DE               	subwfb	postinc2,w,c
 14314  0181C6  0EEA               	movlw	-22
 14315  0181C8  50E3               	movf	plusw1,w,c
 14316  0181CA  58DE               	subwfb	postinc2,w,c
 14317  0181CC  0EEB               	movlw	-21
 14318  0181CE  50E3               	movf	plusw1,w,c
 14319  0181D0  58DE               	subwfb	postinc2,w,c
 14320  0181D2  0EEC               	movlw	-20
 14321  0181D4  50E3               	movf	plusw1,w,c
 14322  0181D6  58DE               	subwfb	postinc2,w,c
 14323  0181D8  0EED               	movlw	-19
 14324  0181DA  50E3               	movf	plusw1,w,c
 14325  0181DC  58DE               	subwfb	postinc2,w,c
 14326  0181DE  0EEE               	movlw	-18
 14327  0181E0  50E3               	movf	plusw1,w,c
 14328  0181E2  58DE               	subwfb	postinc2,w,c
 14329  0181E4  A0D8               	btfss	status,0,c
 14330  0181E6  D021               	goto	l8430
 14331                           
 14332                           ;stkvar	_divisor @ sp[(-9)+-16]
 14333                           ;stkvar	_dividend @ sp[(-9)+-8]
 14334  0181E8  50E1               	movf	fsr1l,w,c
 14335  0181EA  0FEF               	addlw	-17
 14336  0181EC  6ED9               	movwf	fsr2l,c
 14337  0181EE  50E2               	movf	fsr1h,w,c
 14338  0181F0  6EDA               	movwf	fsr2h,c
 14339  0181F2  0EFF               	movlw	255
 14340  0181F4  22DA               	addwfc	fsr2h,f,c
 14341  0181F6  0EE7               	movlw	-25
 14342  0181F8  50E3               	movf	plusw1,w,c
 14343  0181FA  5EDE               	subwf	postinc2,f,c
 14344  0181FC  0EE8               	movlw	-24
 14345  0181FE  50E3               	movf	plusw1,w,c
 14346  018200  5ADE               	subwfb	postinc2,f,c
 14347  018202  0EE9               	movlw	-23
 14348  018204  50E3               	movf	plusw1,w,c
 14349  018206  5ADE               	subwfb	postinc2,f,c
 14350  018208  0EEA               	movlw	-22
 14351  01820A  50E3               	movf	plusw1,w,c
 14352  01820C  5ADE               	subwfb	postinc2,f,c
 14353  01820E  0EEB               	movlw	-21
 14354  018210  50E3               	movf	plusw1,w,c
 14355  018212  5ADE               	subwfb	postinc2,f,c
 14356  018214  0EEC               	movlw	-20
 14357  018216  50E3               	movf	plusw1,w,c
 14358  018218  5ADE               	subwfb	postinc2,f,c
 14359  01821A  0EED               	movlw	-19
 14360  01821C  50E3               	movf	plusw1,w,c
 14361  01821E  5ADE               	subwfb	postinc2,f,c
 14362  018220  0EEE               	movlw	-18
 14363  018222  50E3               	movf	plusw1,w,c
 14364  018224  5ADE               	subwfb	postinc2,f,c
 14365                           
 14366                           ;stkvar	_quotient @ sp[(-9)+0]
 14367  018226  0EF7               	movlw	-9
 14368  018228  80E3               	bsf	plusw1,0,c
 14369  01822A                     l8430:
 14370                           
 14371                           ;stkvar	_divisor @ sp[(-9)+-16]
 14372  01822A  90D8               	bcf	status,0,c
 14373  01822C  0EEE               	movlw	-18
 14374  01822E  32E3               	rrcf	plusw1,f,c
 14375  018230  0EED               	movlw	-19
 14376  018232  32E3               	rrcf	plusw1,f,c
 14377  018234  0EEC               	movlw	-20
 14378  018236  32E3               	rrcf	plusw1,f,c
 14379  018238  0EEB               	movlw	-21
 14380  01823A  32E3               	rrcf	plusw1,f,c
 14381  01823C  0EEA               	movlw	-22
 14382  01823E  32E3               	rrcf	plusw1,f,c
 14383  018240  0EE9               	movlw	-23
 14384  018242  32E3               	rrcf	plusw1,f,c
 14385  018244  0EE8               	movlw	-24
 14386  018246  32E3               	rrcf	plusw1,f,c
 14387  018248  0EE7               	movlw	-25
 14388  01824A  32E3               	rrcf	plusw1,f,c
 14389                           
 14390                           ;stkvar	_counter @ sp[(-9)+8]
 14391  01824C  0EFF               	movlw	-1
 14392  01824E  50E3               	movf	plusw1,w,c
 14393  018250  6E28               	movwf	btemp^0,c
 14394  018252  0E01               	movlw	1
 14395  018254  5E28               	subwf	btemp^0,f,c
 14396  018256  0EFF               	movlw	-1
 14397  018258  0060  F0A3  FFE3   	movff	btemp,plusw1
 14398  01825E  A4D8               	btfss	status,2,c
 14399  018260  D791               	goto	u7070
 14400  018262                     u7090:
 14401                           
 14402                           ;stkvar	_quotient @ sp[(-9)+0]
 14403  018262  0EF7               	movlw	247
 14404  018264  24E1               	addwf	fsr1l,w,c
 14405  018266  6ED9               	movwf	fsr2l,c
 14406  018268  0EFF               	movlw	255
 14407  01826A  20E2               	addwfc	fsr1h,w,c
 14408  01826C  6EDA               	movwf	fsr2h,c
 14409                           
 14410                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 14411  01826E  0E08               	movlw	8
 14412  018270  6E28               	movwf	btemp^0,c
 14413  018272  0EEF               	movlw	-17
 14414  018274                     us710999:
 14415  018274  006F FF7B FFE3     	movff	postinc2,plusw1
 14416  01827A  28E8               	incf	wreg,w,c
 14417  01827C  2E28               	decfsz	btemp^0,f,c
 14418  01827E  D7FA               	bra	us710999
 14419                           
 14420                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 14421  018280  0EF7               	movlw	247
 14422  018282  26E1               	addwf	fsr1l,f,c
 14423  018284  0EFF               	movlw	255
 14424  018286  22E2               	addwfc	fsr1h,f,c
 14425  018288  0012               	return		;funcret
 14426  01828A                     __end_of___lodiv:
 14427                           	opt callstack 0
 14428                           
 14429 ;; *************** function _strncmp *****************
 14430 ;; Defined at:
 14431 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;  _l              2  [STACK] PTR const unsigned char 
 14434 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14435 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14436 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14437 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14438 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14439 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14440 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14441 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14442 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14443 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14444 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14445 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14446 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14447 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14448 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14449 ;;		 -> STR_2(15), STR_1(17), 
 14450 ;;  _r              2  [STACK] PTR const unsigned char 
 14451 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14452 ;;		 -> STR_80(3), STR_76(3), 
 14453 ;;  n               2  [STACK] unsigned int 
 14454 ;; Auto vars:     Size  Location     Type
 14455 ;;  r               2  [STACK] PTR const unsigned char 
 14456 ;;		 -> STR_99(3), STR_95(3), STR_90(3), STR_85(3), 
 14457 ;;		 -> STR_80(3), STR_76(3), 
 14458 ;;  l               2  [STACK] PTR const unsigned char 
 14459 ;;		 -> ct(3), STR_65(85), STR_63(3), STR_62(3), 
 14460 ;;		 -> STR_61(19), STR_60(19), STR_59(19), STR_58(19), 
 14461 ;;		 -> STR_57(19), STR_56(19), STR_55(24), STR_54(15), 
 14462 ;;		 -> STR_53(15), STR_52(15), STR_51(10), STR_50(10), 
 14463 ;;		 -> STR_49(19), STR_48(19), STR_45(3), STR_44(3), 
 14464 ;;		 -> STR_43(3), STR_42(17), STR_41(16), STR_40(16), 
 14465 ;;		 -> STR_39(20), STR_38(20), STR_37(20), STR_36(20), 
 14466 ;;		 -> STR_35(20), STR_34(20), STR_33(19), STR_32(19), 
 14467 ;;		 -> STR_31(19), STR_30(19), STR_29(19), STR_28(19), 
 14468 ;;		 -> STR_27(19), STR_26(19), STR_25(19), STR_24(19), 
 14469 ;;		 -> STR_23(19), STR_22(19), STR_21(17), STR_20(16), 
 14470 ;;		 -> STR_19(16), STR_18(26), STR_17(26), STR_16(22), 
 14471 ;;		 -> STR_15(21), STR_14(17), STR_13(17), STR_12(17), 
 14472 ;;		 -> STR_11(22), STR_10(22), STR_9(23), STR_8(18), 
 14473 ;;		 -> STR_7(17), STR_6(17), STR_5(17), STR_4(17), 
 14474 ;;		 -> STR_2(15), STR_1(17), 
 14475 ;; Return value:  Size  Location     Type
 14476 ;;                  2  [STACK] int 
 14477 ;; Registers used:
 14478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 14479 ;; Tracked objects:
 14480 ;;		On entry : 0/0
 14481 ;;		On exit  : 0/0
 14482 ;;		Unchanged: 0/0
 14483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14488 ;;Total ram usage:        0 bytes
 14489 ;; Hardware stack levels used:    1
 14490 ;; Hardware stack levels required when called:   15
 14491 ;; This function calls:
 14492 ;;		Nothing
 14493 ;; This function is called by:
 14494 ;;		_vfpfcnvrt
 14495 ;; This function uses a reentrant model
 14496 ;;
 14497                           
 14498                           	psect	text53
 14499  017582                     __ptext53:
 14500                           	opt callstack 0
 14501  017582                     _strncmp:
 14502                           	opt callstack 0
 14503                           
 14504                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14505  017582  52E6               	movf	postinc1,f,c
 14506  017584  52E6               	movf	postinc1,f,c
 14507  017586  52E6               	movf	postinc1,f,c
 14508  017588  52E6               	movf	postinc1,f,c
 14509                           
 14510                           ;stkvar	__l @ sp[(-4)+-2]
 14511                           
 14512                           ;incstack = 0
 14513 ;; hardware stack exceeded
 14514  01758A  0EFA               	movlw	-6
 14515  01758C  006F FF8C  F032    	movff	plusw1,btemp+10
 14516  017592  0EFB               	movlw	-5
 14517  017594  006F FF8C  F033    	movff	plusw1,btemp+11
 14518                           
 14519                           ;stkvar	_l @ sp[(-4)+2]
 14520  01759A  0EFF               	movlw	-1
 14521  01759C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14522  0175A2  0EFE               	movlw	-2
 14523  0175A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14524                           
 14525                           ;stkvar	__r @ sp[(-4)+-4]
 14526  0175AA  0EF8               	movlw	-8
 14527  0175AC  006F FF8C  F032    	movff	plusw1,btemp+10
 14528  0175B2  0EF9               	movlw	-7
 14529  0175B4  006F FF8C  F033    	movff	plusw1,btemp+11
 14530                           
 14531                           ;stkvar	_r @ sp[(-4)+0]
 14532  0175BA  0EFD               	movlw	-3
 14533  0175BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14534  0175C2  0EFC               	movlw	-4
 14535  0175C4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14536                           
 14537                           ;stkvar	_n @ sp[(-4)+-6]
 14538  0175CA  0EF6               	movlw	-10
 14539  0175CC  006F FF8C  F028    	movff	plusw1,btemp
 14540  0175D2  0E01               	movlw	1
 14541  0175D4  5E28               	subwf	btemp^0,f,c
 14542  0175D6  0EF6               	movlw	-10
 14543  0175D8  0060  F0A3  FFE3   	movff	btemp,plusw1
 14544  0175DE  0EF7               	movlw	-9
 14545  0175E0  006F FF8C  F028    	movff	plusw1,btemp
 14546  0175E6  0E00               	movlw	0
 14547  0175E8  5A28               	subwfb	btemp^0,f,c
 14548  0175EA  0EF7               	movlw	-9
 14549  0175EC  0060  F0A3  FFE3   	movff	btemp,plusw1
 14550  0175F2  0EF6               	movlw	-10
 14551  0175F4  28E3               	incf	plusw1,w,c
 14552  0175F6  E13F               	bnz	l9126
 14553  0175F8  0EF7               	movlw	-9
 14554  0175FA  28E3               	incf	plusw1,w,c
 14555  0175FC  A4D8               	btfss	status,2,c
 14556  0175FE  D03B               	goto	l9126
 14557  017600  0E00               	movlw	0
 14558  017602  6E28               	movwf	btemp^0,c
 14559  017604  0E00               	movlw	0
 14560  017606  6E29               	movwf	(btemp+1)^0,c
 14561  017608  D0C7               	goto	l3413
 14562  01760A                     l9124:
 14563                           
 14564                           ;stkvar	_l @ sp[(-4)+2]
 14565  01760A  0EFE               	movlw	-2
 14566  01760C  50E3               	movf	plusw1,w,c
 14567  01760E  0F01               	addlw	1
 14568  017610  6E28               	movwf	btemp^0,c
 14569  017612  0EFE               	movlw	-2
 14570  017614  0060  F0A3  FFE3   	movff	btemp,plusw1
 14571  01761A  6A28               	clrf	btemp^0,c
 14572  01761C  0EFF               	movlw	-1
 14573  01761E  50E3               	movf	plusw1,w,c
 14574  017620  2028               	addwfc	btemp^0,w,c
 14575  017622  6E28               	movwf	btemp^0,c
 14576  017624  0EFF               	movlw	-1
 14577  017626  0060  F0A3  FFE3   	movff	btemp,plusw1
 14578                           
 14579                           ;stkvar	_r @ sp[(-4)+0]
 14580  01762C  0EFC               	movlw	-4
 14581  01762E  50E3               	movf	plusw1,w,c
 14582  017630  0F01               	addlw	1
 14583  017632  6E28               	movwf	btemp^0,c
 14584  017634  0EFC               	movlw	-4
 14585  017636  0060  F0A3  FFE3   	movff	btemp,plusw1
 14586  01763C  6A28               	clrf	btemp^0,c
 14587  01763E  0EFD               	movlw	-3
 14588  017640  50E3               	movf	plusw1,w,c
 14589  017642  2028               	addwfc	btemp^0,w,c
 14590  017644  6E28               	movwf	btemp^0,c
 14591  017646  0EFD               	movlw	-3
 14592  017648  0060  F0A3  FFE3   	movff	btemp,plusw1
 14593                           
 14594                           ;stkvar	_n @ sp[(-4)+-6]
 14595  01764E  0EF6               	movlw	-10
 14596  017650  006F FF8C  F028    	movff	plusw1,btemp
 14597  017656  0E01               	movlw	1
 14598  017658  5E28               	subwf	btemp^0,f,c
 14599  01765A  0EF6               	movlw	-10
 14600  01765C  0060  F0A3  FFE3   	movff	btemp,plusw1
 14601  017662  0EF7               	movlw	-9
 14602  017664  006F FF8C  F028    	movff	plusw1,btemp
 14603  01766A  0E00               	movlw	0
 14604  01766C  5A28               	subwfb	btemp^0,f,c
 14605  01766E  0EF7               	movlw	-9
 14606  017670  0060  F0A3  FFE3   	movff	btemp,plusw1
 14607  017676                     l9126:
 14608                           
 14609                           ;stkvar	_l @ sp[(-4)+2]
 14610  017676  0EFE               	movlw	-2
 14611  017678  006F FF8F FFF6     	movff	plusw1,tblptrl
 14612  01767E  0EFF               	movlw	-1
 14613  017680  006F FF8F FFF7     	movff	plusw1,tblptrh
 14614  017686  0E00               	movlw	low (__mediumconst shr (0+16))
 14615  017688  6EF8               	movwf	tblptru,c
 14616  01768A  0E1F               	movlw	(high __ramtop+-1)
 14617  01768C  64F7               	cpfsgt	tblptrh,c
 14618  01768E  D003               	bra	u8387
 14619  017690  0008               	tblrd		*
 14620  017692  50F5               	movf	tablat,w,c
 14621  017694  D007               	bra	u8380
 14622  017696                     u8387:
 14623  017696  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14624  01769C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14625  0176A2  50EF               	movf	indf0,w,c
 14626  0176A4                     u8380:
 14627  0176A4  0900               	iorlw	0
 14628  0176A6  B4D8               	btfsc	status,2,c
 14629  0176A8  D04A               	goto	u8420
 14630                           
 14631                           ;stkvar	_r @ sp[(-4)+0]
 14632  0176AA  50E1               	movf	fsr1l,w,c
 14633  0176AC  0FFC               	addlw	-4
 14634  0176AE  6ED9               	movwf	fsr2l,c
 14635  0176B0  50E2               	movf	fsr1h,w,c
 14636  0176B2  6EDA               	movwf	fsr2h,c
 14637  0176B4  0EFF               	movlw	255
 14638  0176B6  22DA               	addwfc	fsr2h,f,c
 14639  0176B8  006F FF7B FFF6     	movff	postinc2,tblptrl
 14640  0176BE  006F FF77 FFF7     	movff	postdec2,tblptrh
 14641  0176C4                     	if	0	;tblptru may be non-zero
 14642  0176C4                     	endif
 14643  0176C4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14644  0176C4  0E00               	movlw	low (__mediumconst shr (0+16))
 14645  0176C6  6EF8               	movwf	tblptru,c
 14646  0176C8                     	endif
 14647  0176C8  0008               	tblrd		*
 14648  0176CA  50F5               	movf	tablat,w,c
 14649  0176CC  0900               	iorlw	0
 14650  0176CE  B4D8               	btfsc	status,2,c
 14651  0176D0  D036               	goto	u8420
 14652                           
 14653                           ;stkvar	_n @ sp[(-4)+-6]
 14654  0176D2  0EF6               	movlw	-10
 14655  0176D4  006F FF8C  F028    	movff	plusw1,btemp
 14656  0176DA  0EF7               	movlw	-9
 14657  0176DC  50E3               	movf	plusw1,w,c
 14658  0176DE  1028               	iorwf	btemp^0,w,c
 14659  0176E0  B4D8               	btfsc	status,2,c
 14660  0176E2  D02D               	goto	u8420
 14661                           
 14662                           ;stkvar	_r @ sp[(-4)+0]
 14663  0176E4  50E1               	movf	fsr1l,w,c
 14664  0176E6  0FFC               	addlw	-4
 14665  0176E8  6ED9               	movwf	fsr2l,c
 14666  0176EA  50E2               	movf	fsr1h,w,c
 14667  0176EC  6EDA               	movwf	fsr2h,c
 14668  0176EE  0EFF               	movlw	255
 14669  0176F0  22DA               	addwfc	fsr2h,f,c
 14670  0176F2  006F FF7B FFF6     	movff	postinc2,tblptrl
 14671  0176F8  006F FF77 FFF7     	movff	postdec2,tblptrh
 14672  0176FE                     	if	0	;tblptru may be non-zero
 14673  0176FE                     	endif
 14674  0176FE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14675  0176FE  0E00               	movlw	low (__mediumconst shr (0+16))
 14676  017700  6EF8               	movwf	tblptru,c
 14677  017702                     	endif
 14678  017702  0008               	tblrd		*
 14679  017704  006F FFD4  F033    	movff	tablat,btemp+11
 14680                           
 14681                           ;stkvar	_l @ sp[(-4)+2]
 14682  01770A  0EFE               	movlw	-2
 14683  01770C  006F FF8F FFF6     	movff	plusw1,tblptrl
 14684  017712  0EFF               	movlw	-1
 14685  017714  006F FF8F FFF7     	movff	plusw1,tblptrh
 14686  01771A  0E00               	movlw	low (__mediumconst shr (0+16))
 14687  01771C  6EF8               	movwf	tblptru,c
 14688  01771E  0E1F               	movlw	(high __ramtop+-1)
 14689  017720  64F7               	cpfsgt	tblptrh,c
 14690  017722  D003               	bra	u8427
 14691  017724  0008               	tblrd		*
 14692  017726  50F5               	movf	tablat,w,c
 14693  017728  D007               	bra	u8425
 14694  01772A                     u8427:
 14695  01772A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14696  017730  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14697  017736  50EF               	movf	indf0,w,c
 14698  017738                     u8425:
 14699  017738  1833               	xorwf	(btemp+11)^0,w,c
 14700  01773A  B4D8               	btfsc	status,2,c
 14701  01773C  D766               	goto	l9124
 14702  01773E                     u8420:
 14703                           
 14704                           ;stkvar	_l @ sp[(-4)+2]
 14705  01773E  0EFE               	movlw	-2
 14706  017740  006F FF8F FFF6     	movff	plusw1,tblptrl
 14707  017746  0EFF               	movlw	-1
 14708  017748  006F FF8F FFF7     	movff	plusw1,tblptrh
 14709  01774E  0E00               	movlw	low (__mediumconst shr (0+16))
 14710  017750  6EF8               	movwf	tblptru,c
 14711  017752  0E1F               	movlw	(high __ramtop+-1)
 14712  017754  64F7               	cpfsgt	tblptrh,c
 14713  017756  D003               	bra	u8437
 14714  017758  0008               	tblrd		*
 14715  01775A  50F5               	movf	tablat,w,c
 14716  01775C  D007               	bra	u8430
 14717  01775E                     u8437:
 14718  01775E  006F FFDB FFE9     	movff	tblptrl,fsr0l
 14719  017764  006F FFDF FFEA     	movff	tblptrh,fsr0h
 14720  01776A  50EF               	movf	indf0,w,c
 14721  01776C                     u8430:
 14722  01776C  6E28               	movwf	btemp^0,c
 14723  01776E  6A29               	clrf	(btemp+1)^0,c
 14724                           
 14725                           ;stkvar	_r @ sp[(-4)+0]
 14726  017770  50E1               	movf	fsr1l,w,c
 14727  017772  0FFC               	addlw	-4
 14728  017774  6ED9               	movwf	fsr2l,c
 14729  017776  50E2               	movf	fsr1h,w,c
 14730  017778  6EDA               	movwf	fsr2h,c
 14731  01777A  0EFF               	movlw	255
 14732  01777C  22DA               	addwfc	fsr2h,f,c
 14733  01777E  006F FF7B FFF6     	movff	postinc2,tblptrl
 14734  017784  006F FF77 FFF7     	movff	postdec2,tblptrh
 14735  01778A                     	if	0	;tblptru may be non-zero
 14736  01778A                     	endif
 14737  01778A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14738  01778A  0E00               	movlw	low (__mediumconst shr (0+16))
 14739  01778C  6EF8               	movwf	tblptru,c
 14740  01778E                     	endif
 14741  01778E  0008               	tblrd		*
 14742  017790  50F5               	movf	tablat,w,c
 14743  017792  5E28               	subwf	btemp^0,f,c
 14744  017794  0E00               	movlw	0
 14745  017796  5A29               	subwfb	(btemp+1)^0,f,c
 14746  017798                     l3413:
 14747                           
 14748                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 14749  017798  0EF6               	movlw	246
 14750  01779A  26E1               	addwf	fsr1l,f,c
 14751  01779C  0EFF               	movlw	255
 14752  01779E  22E2               	addwfc	fsr1h,f,c
 14753  0177A0  0012               	return		;funcret
 14754  0177A2                     __end_of_strncmp:
 14755                           	opt callstack 0
 14756                           
 14757 ;; *************** function _stoa *****************
 14758 ;; Defined at:
 14759 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14762 ;;		 -> f(6), NULL(0), 
 14763 ;;  s               2  [STACK] PTR unsigned char 
 14764 ;;		 -> ?_printf(2), ?_sprintf(2), STR_47(9), STR_46(12), 
 14765 ;;		 -> D.lcd(480), D(482), T(144), STR_3(6), 
 14766 ;;		 -> V(189), 
 14767 ;; Auto vars:     Size  Location     Type
 14768 ;;  nuls            7  [STACK] unsigned char [7]
 14769 ;;  l               2  [STACK] int 
 14770 ;;  p               2  [STACK] int 
 14771 ;;  cp              2  [STACK] PTR unsigned char 
 14772 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_47(9), 
 14773 ;;		 -> STR_46(12), D.lcd(480), D(482), T(144), 
 14774 ;;		 -> STR_3(6), V(189), 
 14775 ;;  w               2  [STACK] int 
 14776 ;;  i               2  [STACK] int 
 14777 ;; Return value:  Size  Location     Type
 14778 ;;                  2  [STACK] int 
 14779 ;; Registers used:
 14780 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 14781 ;; Tracked objects:
 14782 ;;		On entry : 0/0
 14783 ;;		On exit  : 0/0
 14784 ;;		Unchanged: 0/0
 14785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14787 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14789 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14790 ;;Total ram usage:        0 bytes
 14791 ;; Hardware stack levels used:    1
 14792 ;; Hardware stack levels required when called:   18
 14793 ;; This function calls:
 14794 ;;		_fputc
 14795 ;;		_strlen
 14796 ;; This function is called by:
 14797 ;;		_vfpfcnvrt
 14798 ;; This function uses a reentrant model
 14799 ;;
 14800                           
 14801                           	psect	text54
 14802  016B90                     __ptext54:
 14803                           	opt callstack 0
 14804  016B90                     _stoa:
 14805                           	opt callstack 0
 14806                           
 14807                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 14808  016B90  0E11               	movlw	17
 14809  016B92  26E1               	addwf	fsr1l,f,c
 14810  016B94  0E00               	movlw	0
 14811  016B96  22E2               	addwfc	fsr1h,f,c
 14812                           
 14813                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 14814                           
 14815                           ;incstack = 0
 14816 ;; hardware stack exceeded
 14817  016B98  EE20  F0EC         	lfsr	2,stoa@F1166
 14818                           
 14819                           ;stkvar	_nuls @ sp[(-17)+0]
 14820  016B9C  0E07               	movlw	7
 14821  016B9E  6E28               	movwf	btemp^0,c
 14822  016BA0  0EEF               	movlw	-17
 14823  016BA2                     us1116999:
 14824  016BA2  006F FF7B FFE3     	movff	postinc2,plusw1
 14825  016BA8  28E8               	incf	wreg,w,c
 14826  016BAA  2E28               	decfsz	btemp^0,f,c
 14827  016BAC  D7FA               	bra	us1116999
 14828                           
 14829                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 14830                           ;stkvar	_s @ sp[(-17)+-4]
 14831  016BAE  0EEB               	movlw	-21
 14832  016BB0  006F FF8C  F032    	movff	plusw1,btemp+10
 14833  016BB6  0EEC               	movlw	-20
 14834  016BB8  006F FF8C  F033    	movff	plusw1,btemp+11
 14835                           
 14836                           ;stkvar	_cp @ sp[(-17)+11]
 14837  016BBE  0EFB               	movlw	-5
 14838  016BC0  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14839  016BC6  0EFA               	movlw	-6
 14840  016BC8  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14841                           
 14842                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 14843                           ;stkvar	_cp @ sp[(-17)+11]
 14844  016BCE  0EFA               	movlw	-6
 14845  016BD0  006F FF8C  F028    	movff	plusw1,btemp
 14846  016BD6  0EFB               	movlw	-5
 14847  016BD8  50E3               	movf	plusw1,w,c
 14848  016BDA  1028               	iorwf	btemp^0,w,c
 14849  016BDC  A4D8               	btfss	status,2,c
 14850  016BDE  D00E               	goto	l11862
 14851                           
 14852                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 14853                           ;stkvar	_nuls @ sp[(-17)+0]
 14854  016BE0  0EEF               	movlw	239
 14855  016BE2  24E1               	addwf	fsr1l,w,c
 14856  016BE4  6E32               	movwf	(btemp+10)^0,c
 14857  016BE6  0EFF               	movlw	255
 14858  016BE8  20E2               	addwfc	fsr1h,w,c
 14859  016BEA  6E33               	movwf	(btemp+11)^0,c
 14860                           
 14861                           ;stkvar	_cp @ sp[(-17)+11]
 14862  016BEC  0EFB               	movlw	-5
 14863  016BEE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 14864  016BF4  0EFA               	movlw	-6
 14865  016BF6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 14866  016BFC                     l11862:
 14867                           
 14868                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 14869                           ;stkvar	_cp @ sp[(-17)+11]
 14870  016BFC  0EFA               	movlw	-6
 14871  016BFE  006F FF8F FFE6     	movff	plusw1,postinc1
 14872  016C04  006F FF8F FFE6     	movff	plusw1,postinc1
 14873  016C0A  EC4C  F0CF         	call	_strlen	;wreg free
 14874                           
 14875                           ;stkvar	_l @ sp[(-17)+7]
 14876  016C0E  0EF6               	movlw	-10
 14877  016C10  0060  F0A3  FFE3   	movff	btemp,plusw1
 14878  016C16  0EF7               	movlw	-9
 14879  016C18  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 14880                           
 14881                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 14882                           ;stkvar	_p @ sp[(-17)+9]
 14883  016C1E  0EF8               	movlw	-8
 14884  016C20  0060  F12B  FFE3   	movff	_prec,plusw1
 14885  016C26  0EF9               	movlw	-7
 14886  016C28  0060  F12F  FFE3   	movff	_prec+1,plusw1
 14887                           
 14888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 14889                           ;stkvar	_p @ sp[(-17)+9]
 14890  016C2E  0EF9               	movlw	-7
 14891  016C30  BEE3               	btfsc	plusw1,7,c
 14892  016C32  D023               	goto	l2238
 14893                           
 14894                           ;stkvar	_l @ sp[(-17)+7]
 14895                           ;stkvar	_p @ sp[(-17)+9]
 14896  016C34  50E1               	movf	fsr1l,w,c
 14897  016C36  0FF8               	addlw	-8
 14898  016C38  6ED9               	movwf	fsr2l,c
 14899  016C3A  50E2               	movf	fsr1h,w,c
 14900  016C3C  6EDA               	movwf	fsr2h,c
 14901  016C3E  0EFF               	movlw	255
 14902  016C40  22DA               	addwfc	fsr2h,f,c
 14903  016C42  0EF6               	movlw	-10
 14904  016C44  50E3               	movf	plusw1,w,c
 14905  016C46  5CDE               	subwf	postinc2,w,c
 14906  016C48  50DE               	movf	postinc2,w,c
 14907  016C4A  0A80               	xorlw	128
 14908  016C4C  6E28               	movwf	btemp^0,c
 14909  016C4E  0EF7               	movlw	-9
 14910  016C50  50E3               	movf	plusw1,w,c
 14911  016C52  0A80               	xorlw	128
 14912  016C54  5828               	subwfb	btemp^0,w,c
 14913  016C56  B0D8               	btfsc	status,0,c
 14914  016C58  D010               	goto	l2238
 14915                           
 14916                           ;stkvar	_p @ sp[(-17)+9]
 14917                           ;stkvar	_l @ sp[(-17)+7]
 14918  016C5A  0EF8               	movlw	-8
 14919  016C5C  006F FF8C  F028    	movff	plusw1,btemp
 14920  016C62  0EF6               	movlw	-10
 14921  016C64  0060  F0A3  FFE3   	movff	btemp,plusw1
 14922  016C6A  0EF9               	movlw	-7
 14923  016C6C  006F FF8C  F028    	movff	plusw1,btemp
 14924  016C72  0EF7               	movlw	-9
 14925  016C74  0060  F0A3  FFE3   	movff	btemp,plusw1
 14926  016C7A                     l2238:
 14927                           
 14928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 14929                           ;stkvar	_l @ sp[(-17)+7]
 14930                           ;stkvar	_p @ sp[(-17)+9]
 14931  016C7A  0EF6               	movlw	-10
 14932  016C7C  006F FF8C  F028    	movff	plusw1,btemp
 14933  016C82  0EF8               	movlw	-8
 14934  016C84  0060  F0A3  FFE3   	movff	btemp,plusw1
 14935  016C8A  0EF7               	movlw	-9
 14936  016C8C  006F FF8C  F028    	movff	plusw1,btemp
 14937  016C92  0EF9               	movlw	-7
 14938  016C94  0060  F0A3  FFE3   	movff	btemp,plusw1
 14939                           
 14940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 14941                           ;stkvar	_w @ sp[(-17)+13]
 14942  016C9A  0EFC               	movlw	-4
 14943  016C9C  0060  F123  FFE3   	movff	_width,plusw1
 14944  016CA2  0EFD               	movlw	-3
 14945  016CA4  0060  F127  FFE3   	movff	_width+1,plusw1
 14946                           
 14947                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 14948  016CAA  A04C               	btfss	_flags^0,0,c
 14949  016CAC  D01F               	goto	l11882
 14950  016CAE  D031               	goto	u11210
 14951  016CB0                     l11878:
 14952                           
 14953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 14954                           ;stkvar	_fp @ sp[(-17)+-2]
 14955  016CB0  0EED               	movlw	-19
 14956  016CB2  006F FF8F FFE6     	movff	plusw1,postinc1
 14957  016CB8  006F FF8F FFE6     	movff	plusw1,postinc1
 14958  016CBE  0E20               	movlw	32
 14959  016CC0  6EE6               	movwf	postinc1,c
 14960  016CC2  0E00               	movlw	0
 14961  016CC4  6EE6               	movwf	postinc1,c
 14962  016CC6  EC4F  F0C7         	call	_fputc	;wreg free
 14963                           
 14964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 14965                           ;stkvar	_l @ sp[(-17)+7]
 14966  016CCA  0EF6               	movlw	-10
 14967  016CCC  50E3               	movf	plusw1,w,c
 14968  016CCE  0F01               	addlw	1
 14969  016CD0  6E28               	movwf	btemp^0,c
 14970  016CD2  0EF6               	movlw	-10
 14971  016CD4  0060  F0A3  FFE3   	movff	btemp,plusw1
 14972  016CDA  6A28               	clrf	btemp^0,c
 14973  016CDC  0EF7               	movlw	-9
 14974  016CDE  50E3               	movf	plusw1,w,c
 14975  016CE0  2028               	addwfc	btemp^0,w,c
 14976  016CE2  6E28               	movwf	btemp^0,c
 14977  016CE4  0EF7               	movlw	-9
 14978  016CE6  0060  F0A3  FFE3   	movff	btemp,plusw1
 14979  016CEC                     l11882:
 14980                           
 14981                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 14982                           ;stkvar	_w @ sp[(-17)+13]
 14983                           ;stkvar	_l @ sp[(-17)+7]
 14984  016CEC  50E1               	movf	fsr1l,w,c
 14985  016CEE  0FF6               	addlw	-10
 14986  016CF0  6ED9               	movwf	fsr2l,c
 14987  016CF2  50E2               	movf	fsr1h,w,c
 14988  016CF4  6EDA               	movwf	fsr2h,c
 14989  016CF6  0EFF               	movlw	255
 14990  016CF8  22DA               	addwfc	fsr2h,f,c
 14991  016CFA  0EFC               	movlw	-4
 14992  016CFC  50E3               	movf	plusw1,w,c
 14993  016CFE  5CDE               	subwf	postinc2,w,c
 14994  016D00  50DE               	movf	postinc2,w,c
 14995  016D02  0A80               	xorlw	128
 14996  016D04  6E28               	movwf	btemp^0,c
 14997  016D06  0EFD               	movlw	-3
 14998  016D08  50E3               	movf	plusw1,w,c
 14999  016D0A  0A80               	xorlw	128
 15000  016D0C  5828               	subwfb	btemp^0,w,c
 15001  016D0E  A0D8               	btfss	status,0,c
 15002  016D10  D7CF               	goto	l11878
 15003  016D12                     u11210:
 15004                           
 15005                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 15006                           ;stkvar	_i @ sp[(-17)+15]
 15007  016D12  0EFE               	movlw	-2
 15008  016D14  6AE3               	clrf	plusw1,c
 15009  016D16  0EFF               	movlw	-1
 15010  016D18  6AE3               	clrf	plusw1,c
 15011                           
 15012                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15013  016D1A  D045               	goto	l11892
 15014  016D1C                     l11886:
 15015                           
 15016                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 15017                           ;stkvar	_fp @ sp[(-17)+-2]
 15018  016D1C  0EED               	movlw	-19
 15019  016D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 15020  016D24  006F FF8F FFE6     	movff	plusw1,postinc1
 15021                           
 15022                           ;stkvar	_cp @ sp[(-19)+11]
 15023  016D2A  0EF8               	movlw	-8
 15024  016D2C  006F FF8F FFF6     	movff	plusw1,tblptrl
 15025  016D32  0EF9               	movlw	-7
 15026  016D34  006F FF8F FFF7     	movff	plusw1,tblptrh
 15027  016D3A  0E00               	movlw	low (__mediumconst shr (0+16))
 15028  016D3C  6EF8               	movwf	tblptru,c
 15029  016D3E  0E1F               	movlw	(high __ramtop+-1)
 15030  016D40  64F7               	cpfsgt	tblptrh,c
 15031  016D42  D003               	bra	u11227
 15032  016D44  0008               	tblrd		*
 15033  016D46  50F5               	movf	tablat,w,c
 15034  016D48  D007               	bra	u11220
 15035  016D4A                     u11227:
 15036  016D4A  006F FFDB FFE9     	movff	tblptrl,fsr0l
 15037  016D50  006F FFDF FFEA     	movff	tblptrh,fsr0h
 15038  016D56  50EF               	movf	indf0,w,c
 15039  016D58                     u11220:
 15040  016D58  6EE6               	movwf	postinc1,c
 15041  016D5A  0E00               	movlw	0
 15042  016D5C  6EE6               	movwf	postinc1,c
 15043  016D5E  EC4F  F0C7         	call	_fputc	;wreg free
 15044                           
 15045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 15046                           ;stkvar	_cp @ sp[(-17)+11]
 15047  016D62  0EFA               	movlw	-6
 15048  016D64  50E3               	movf	plusw1,w,c
 15049  016D66  0F01               	addlw	1
 15050  016D68  6E28               	movwf	btemp^0,c
 15051  016D6A  0EFA               	movlw	-6
 15052  016D6C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15053  016D72  6A28               	clrf	btemp^0,c
 15054  016D74  0EFB               	movlw	-5
 15055  016D76  50E3               	movf	plusw1,w,c
 15056  016D78  2028               	addwfc	btemp^0,w,c
 15057  016D7A  6E28               	movwf	btemp^0,c
 15058  016D7C  0EFB               	movlw	-5
 15059  016D7E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15060                           
 15061                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 15062                           ;stkvar	_i @ sp[(-17)+15]
 15063  016D84  0EFE               	movlw	-2
 15064  016D86  50E3               	movf	plusw1,w,c
 15065  016D88  0F01               	addlw	1
 15066  016D8A  6E28               	movwf	btemp^0,c
 15067  016D8C  0EFE               	movlw	-2
 15068  016D8E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15069  016D94  6A28               	clrf	btemp^0,c
 15070  016D96  0EFF               	movlw	-1
 15071  016D98  50E3               	movf	plusw1,w,c
 15072  016D9A  2028               	addwfc	btemp^0,w,c
 15073  016D9C  6E28               	movwf	btemp^0,c
 15074  016D9E  0EFF               	movlw	-1
 15075  016DA0  0060  F0A3  FFE3   	movff	btemp,plusw1
 15076  016DA6                     l11892:
 15077                           
 15078                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 15079                           ;stkvar	_p @ sp[(-17)+9]
 15080                           ;stkvar	_i @ sp[(-17)+15]
 15081  016DA6  50E1               	movf	fsr1l,w,c
 15082  016DA8  0FFE               	addlw	-2
 15083  016DAA  6ED9               	movwf	fsr2l,c
 15084  016DAC  50E2               	movf	fsr1h,w,c
 15085  016DAE  6EDA               	movwf	fsr2h,c
 15086  016DB0  0EFF               	movlw	255
 15087  016DB2  22DA               	addwfc	fsr2h,f,c
 15088  016DB4  0EF8               	movlw	-8
 15089  016DB6  50E3               	movf	plusw1,w,c
 15090  016DB8  5CDE               	subwf	postinc2,w,c
 15091  016DBA  50DE               	movf	postinc2,w,c
 15092  016DBC  0A80               	xorlw	128
 15093  016DBE  6E28               	movwf	btemp^0,c
 15094  016DC0  0EF9               	movlw	-7
 15095  016DC2  50E3               	movf	plusw1,w,c
 15096  016DC4  0A80               	xorlw	128
 15097  016DC6  5828               	subwfb	btemp^0,w,c
 15098  016DC8  A0D8               	btfss	status,0,c
 15099  016DCA  D7A8               	goto	l11886
 15100                           
 15101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 15102  016DCC  B04C               	btfsc	_flags^0,0,c
 15103  016DCE  D01F               	goto	l11900
 15104  016DD0  D031               	goto	u11250
 15105  016DD2                     l11896:
 15106                           
 15107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 15108                           ;stkvar	_fp @ sp[(-17)+-2]
 15109  016DD2  0EED               	movlw	-19
 15110  016DD4  006F FF8F FFE6     	movff	plusw1,postinc1
 15111  016DDA  006F FF8F FFE6     	movff	plusw1,postinc1
 15112  016DE0  0E20               	movlw	32
 15113  016DE2  6EE6               	movwf	postinc1,c
 15114  016DE4  0E00               	movlw	0
 15115  016DE6  6EE6               	movwf	postinc1,c
 15116  016DE8  EC4F  F0C7         	call	_fputc	;wreg free
 15117                           
 15118                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 15119                           ;stkvar	_l @ sp[(-17)+7]
 15120  016DEC  0EF6               	movlw	-10
 15121  016DEE  50E3               	movf	plusw1,w,c
 15122  016DF0  0F01               	addlw	1
 15123  016DF2  6E28               	movwf	btemp^0,c
 15124  016DF4  0EF6               	movlw	-10
 15125  016DF6  0060  F0A3  FFE3   	movff	btemp,plusw1
 15126  016DFC  6A28               	clrf	btemp^0,c
 15127  016DFE  0EF7               	movlw	-9
 15128  016E00  50E3               	movf	plusw1,w,c
 15129  016E02  2028               	addwfc	btemp^0,w,c
 15130  016E04  6E28               	movwf	btemp^0,c
 15131  016E06  0EF7               	movlw	-9
 15132  016E08  0060  F0A3  FFE3   	movff	btemp,plusw1
 15133  016E0E                     l11900:
 15134                           
 15135                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 15136                           ;stkvar	_w @ sp[(-17)+13]
 15137                           ;stkvar	_l @ sp[(-17)+7]
 15138  016E0E  50E1               	movf	fsr1l,w,c
 15139  016E10  0FF6               	addlw	-10
 15140  016E12  6ED9               	movwf	fsr2l,c
 15141  016E14  50E2               	movf	fsr1h,w,c
 15142  016E16  6EDA               	movwf	fsr2h,c
 15143  016E18  0EFF               	movlw	255
 15144  016E1A  22DA               	addwfc	fsr2h,f,c
 15145  016E1C  0EFC               	movlw	-4
 15146  016E1E  50E3               	movf	plusw1,w,c
 15147  016E20  5CDE               	subwf	postinc2,w,c
 15148  016E22  50DE               	movf	postinc2,w,c
 15149  016E24  0A80               	xorlw	128
 15150  016E26  6E28               	movwf	btemp^0,c
 15151  016E28  0EFD               	movlw	-3
 15152  016E2A  50E3               	movf	plusw1,w,c
 15153  016E2C  0A80               	xorlw	128
 15154  016E2E  5828               	subwfb	btemp^0,w,c
 15155  016E30  A0D8               	btfss	status,0,c
 15156  016E32  D7CF               	goto	l11896
 15157  016E34                     u11250:
 15158                           
 15159                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 15160                           ;stkvar	_l @ sp[(-17)+7]
 15161  016E34  0EF6               	movlw	-10
 15162  016E36  006F FF8C  F028    	movff	plusw1,btemp
 15163  016E3C  0EF7               	movlw	-9
 15164  016E3E  006F FF8C  F029    	movff	plusw1,btemp+1
 15165                           
 15166                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 15167  016E44  0EEB               	movlw	235
 15168  016E46  26E1               	addwf	fsr1l,f,c
 15169  016E48  0EFF               	movlw	255
 15170  016E4A  22E2               	addwfc	fsr1h,f,c
 15171  016E4C  0012               	return		;funcret
 15172  016E4E                     __end_of_stoa:
 15173                           	opt callstack 0
 15174                           
 15175 ;; *************** function _efgtoa *****************
 15176 ;; Defined at:
 15177 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 15178 ;; Parameters:    Size  Location     Type
 15179 ;;  fp              2  [STACK] PTR struct _IO_FILE
 15180 ;;		 -> f(6), NULL(0), 
 15181 ;;  f               4  [STACK] PTR struct _IO_FILE
 15182 ;;  c               1  [STACK] unsigned char 
 15183 ;; Auto vars:     Size  Location     Type
 15184 ;;  u               4  [STACK] unsigned char 
 15185 ;;  g               4  [STACK] unsigned char 
 15186 ;;  l               4  [STACK] unsigned char 
 15187 ;;  h               4  [STACK] unsigned char 
 15188 ;;  ou              4  [STACK] unsigned char 
 15189 ;;  n               2  [STACK] int 
 15190 ;;  e               2  [STACK] int 
 15191 ;;  i               2  [STACK] int 
 15192 ;;  w               2  [STACK] int 
 15193 ;;  p               2  [STACK] int 
 15194 ;;  sign            2  [STACK] int 
 15195 ;;  d               2  [STACK] int 
 15196 ;;  ne              2  [STACK] int 
 15197 ;;  m               2  [STACK] int 
 15198 ;;  pp              2  [STACK] int 
 15199 ;;  t               2  [STACK] int 
 15200 ;;  mode            1  [STACK] unsigned char 
 15201 ;;  nmode           1  [STACK] unsigned char 
 15202 ;; Return value:  Size  Location     Type
 15203 ;;                  2  [STACK] int 
 15204 ;; Registers used:
 15205 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 15206 ;; Tracked objects:
 15207 ;;		On entry : 0/0
 15208 ;;		On exit  : 0/0
 15209 ;;		Unchanged: 0/0
 15210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15212 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15213 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15214 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15215 ;;Total ram usage:        0 bytes
 15216 ;; Hardware stack levels used:    1
 15217 ;; Hardware stack levels required when called:   20
 15218 ;; This function calls:
 15219 ;;		___awdiv
 15220 ;;		___awmod
 15221 ;;		___fladd
 15222 ;;		___fldiv
 15223 ;;		___fleq
 15224 ;;		___flge
 15225 ;;		___flmul
 15226 ;;		___flneg
 15227 ;;		___flsub
 15228 ;;		___fltol
 15229 ;;		___fpclassifyf
 15230 ;;		_floorf
 15231 ;;		_isupper
 15232 ;;		_pad
 15233 ;;		_strcpy
 15234 ;;		_tolower
 15235 ;; This function is called by:
 15236 ;;		_vfpfcnvrt
 15237 ;; This function uses a reentrant model
 15238 ;;
 15239                           
 15240                           	psect	text55
 15241  010000                     __ptext55:
 15242                           	opt callstack 0
 15243  010000                     _efgtoa:
 15244                           	opt callstack 0
 15245                           
 15246                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15247  010000  0E38               	movlw	56
 15248  010002  26E1               	addwf	fsr1l,f,c
 15249  010004  0E00               	movlw	0
 15250  010006  22E2               	addwfc	fsr1h,f,c
 15251                           
 15252                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 15253                           ;stkvar	_sign @ sp[(-56)+42]
 15254                           
 15255                           ;incstack = 0
 15256 ;; hardware stack exceeded
 15257  010008  0EF2               	movlw	-14
 15258  01000A  6AE3               	clrf	plusw1,c
 15259  01000C  0EF3               	movlw	-13
 15260  01000E  6AE3               	clrf	plusw1,c
 15261                           
 15262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 15263                           ;stkvar	_f @ sp[(-56)+-6]
 15264  010010  0EC2               	movlw	-62
 15265  010012  006F FF8C  F030    	movff	plusw1,btemp+8
 15266  010018  0EC3               	movlw	-61
 15267  01001A  006F FF8C  F031    	movff	plusw1,btemp+9
 15268  010020  0EC4               	movlw	-60
 15269  010022  006F FF8C  F032    	movff	plusw1,btemp+10
 15270  010028  0EC5               	movlw	-59
 15271  01002A  006F FF8C  F033    	movff	plusw1,btemp+11
 15272                           
 15273                           ;stkvar	_g @ sp[(-56)+16]
 15274  010030  0ED8               	movlw	-40
 15275  010032  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 15276  010038  0ED9               	movlw	-39
 15277  01003A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 15278  010040  0EDA               	movlw	-38
 15279  010042  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15280  010048  0EDB               	movlw	-37
 15281  01004A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15282                           
 15283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 15284                           ;stkvar	_g @ sp[(-56)+16]
 15285  010050  0EDB               	movlw	-37
 15286  010052  AEE3               	btfss	plusw1,7,c
 15287  010054  D02B               	goto	l11560
 15288                           
 15289                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 15290  010056  0E01               	movlw	1
 15291  010058  6E32               	movwf	(btemp+10)^0,c
 15292  01005A  0E00               	movlw	0
 15293  01005C  6E33               	movwf	(btemp+11)^0,c
 15294                           
 15295                           ;stkvar	_sign @ sp[(-56)+42]
 15296  01005E  0EF2               	movlw	-14
 15297  010060  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15298  010066  0EF3               	movlw	-13
 15299  010068  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15300                           
 15301                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 15302                           ;stkvar	_g @ sp[(-56)+16]
 15303  01006E  0ED8               	movlw	-40
 15304  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 15305  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 15306  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 15307  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 15308  010088  ECF8  F0D4         	call	___flneg	;wreg free
 15309                           
 15310                           ;stkvar	_g @ sp[(-56)+16]
 15311  01008C  0ED8               	movlw	-40
 15312  01008E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15313  010094  0ED9               	movlw	-39
 15314  010096  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15315  01009C  0EDA               	movlw	-38
 15316  01009E  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15317  0100A4  0EDB               	movlw	-37
 15318  0100A6  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15319  0100AC                     l11560:
 15320                           
 15321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 15322                           ;stkvar	_n @ sp[(-56)+32]
 15323  0100AC  0EE8               	movlw	-24
 15324  0100AE  6AE3               	clrf	plusw1,c
 15325  0100B0  0EE9               	movlw	-23
 15326  0100B2  6AE3               	clrf	plusw1,c
 15327                           
 15328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 15329                           ;stkvar	_w @ sp[(-56)+38]
 15330  0100B4  0EEE               	movlw	-18
 15331  0100B6  0060  F123  FFE3   	movff	_width,plusw1
 15332  0100BC  0EEF               	movlw	-17
 15333  0100BE  0060  F127  FFE3   	movff	_width+1,plusw1
 15334                           
 15335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 15336                           ;stkvar	_sign @ sp[(-56)+42]
 15337  0100C4  0EF2               	movlw	-14
 15338  0100C6  006F FF8C  F028    	movff	plusw1,btemp
 15339  0100CC  0EF3               	movlw	-13
 15340  0100CE  50E3               	movf	plusw1,w,c
 15341  0100D0  1028               	iorwf	btemp^0,w,c
 15342  0100D2  A4D8               	btfss	status,2,c
 15343  0100D4  D002               	goto	u10660
 15344  0100D6  A44C               	btfss	_flags^0,2,c
 15345  0100D8  D036               	goto	l11580
 15346  0100DA                     u10660:
 15347                           
 15348                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 15349                           ;stkvar	_sign @ sp[(-56)+42]
 15350  0100DA  0EF2               	movlw	-14
 15351  0100DC  006F FF8C  F028    	movff	plusw1,btemp
 15352  0100E2  0EF3               	movlw	-13
 15353  0100E4  50E3               	movf	plusw1,w,c
 15354  0100E6  1028               	iorwf	btemp^0,w,c
 15355  0100E8  A4D8               	btfss	status,2,c
 15356  0100EA  D002               	goto	l11572
 15357  0100EC  0E2B               	movlw	43
 15358  0100EE  D001               	goto	L14
 15359  0100F0                     l11572:
 15360  0100F0  0E2D               	movlw	45
 15361  0100F2                     L14:
 15362  0100F2  6E32               	movwf	(btemp+10)^0,c
 15363  0100F4  0E00               	movlw	0
 15364  0100F6  6E33               	movwf	(btemp+11)^0,c
 15365                           
 15366                           ;stkvar	_efgtoa$5333 @ sp[(-56)+10]
 15367  0100F8  0ED2               	movlw	-46
 15368  0100FA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15369  010100  0ED3               	movlw	-45
 15370  010102  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15371                           
 15372                           ;stkvar	_efgtoa$5333 @ sp[(-56)+10]
 15373  010108  0ED2               	movlw	-46
 15374  01010A  006F FF8C  F394    	movff	plusw1,_dbuf
 15375                           
 15376                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 15377                           ;stkvar	_n @ sp[(-56)+32]
 15378  010110  0EE8               	movlw	-24
 15379  010112  50E3               	movf	plusw1,w,c
 15380  010114  0F01               	addlw	1
 15381  010116  6E28               	movwf	btemp^0,c
 15382  010118  0EE8               	movlw	-24
 15383  01011A  0060  F0A3  FFE3   	movff	btemp,plusw1
 15384  010120  6A28               	clrf	btemp^0,c
 15385  010122  0EE9               	movlw	-23
 15386  010124  50E3               	movf	plusw1,w,c
 15387  010126  2028               	addwfc	btemp^0,w,c
 15388  010128  6E28               	movwf	btemp^0,c
 15389  01012A  0EE9               	movlw	-23
 15390  01012C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15391                           
 15392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 15393                           ;stkvar	_w @ sp[(-56)+38]
 15394  010132  50E1               	movf	fsr1l,w,c
 15395  010134  0FEE               	addlw	-18
 15396  010136  6ED9               	movwf	fsr2l,c
 15397  010138  50E2               	movf	fsr1h,w,c
 15398  01013A  6EDA               	movwf	fsr2h,c
 15399  01013C  0EFF               	movlw	255
 15400  01013E  22DA               	addwfc	fsr2h,f,c
 15401  010140  06DE               	decf	postinc2,f,c
 15402  010142  0E00               	movlw	0
 15403  010144  5ADD               	subwfb	postdec2,f,c
 15404  010146                     l11580:
 15405                           
 15406                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15407                           ;stkvar	_g @ sp[(-56)+16]
 15408  010146  0ED8               	movlw	-40
 15409  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 15410  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 15411  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 15412  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 15413  010160  ECBA  F0BF         	call	___fpclassifyf	;wreg free
 15414  010164  0428               	decf	btemp^0,w,c
 15415  010166  1029               	iorwf	(btemp+1)^0,w,c
 15416  010168  A4D8               	btfss	status,2,c
 15417  01016A  D076               	goto	l11598
 15418  01016C  0EBF               	movlw	191
 15419  01016E  6E32               	movwf	(btemp+10)^0,c
 15420  010170  0EFF               	movlw	255
 15421  010172  6E33               	movwf	(btemp+11)^0,c
 15422                           
 15423                           ;stkvar	_c @ sp[(-56)+-7]
 15424  010174  0EC1               	movlw	-63
 15425  010176  50E3               	movf	plusw1,w,c
 15426  010178  6E30               	movwf	(btemp+8)^0,c
 15427  01017A  6A31               	clrf	(btemp+9)^0,c
 15428  01017C  5032               	movf	(btemp+10)^0,w,c
 15429  01017E  2630               	addwf	(btemp+8)^0,f,c
 15430  010180  5033               	movf	(btemp+11)^0,w,c
 15431  010182  2231               	addwfc	(btemp+9)^0,f,c
 15432  010184  5031               	movf	(btemp+9)^0,w,c
 15433  010186  E106               	bnz	u10690
 15434  010188  0E1A               	movlw	26
 15435  01018A  5C30               	subwf	(btemp+8)^0,w,c
 15436  01018C  B0D8               	btfsc	status,0,c
 15437  01018E  D002               	goto	u10690
 15438  010190  0E01               	movlw	1
 15439  010192  D001               	goto	u10700
 15440  010194                     u10690:
 15441  010194  0E00               	movlw	0
 15442  010196                     u10700:
 15443  010196  6E32               	movwf	(btemp+10)^0,c
 15444  010198  6A33               	clrf	(btemp+11)^0,c
 15445                           
 15446                           ;stkvar	_efgtoa$5334 @ sp[(-56)+8]
 15447  01019A  0ED0               	movlw	-48
 15448  01019C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15449  0101A2  0ED1               	movlw	-47
 15450  0101A4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15451                           
 15452                           ;stkvar	_efgtoa$5334 @ sp[(-56)+8]
 15453  0101AA  0ED0               	movlw	-48
 15454  0101AC  006F FF8C  F028    	movff	plusw1,btemp
 15455  0101B2  0ED1               	movlw	-47
 15456  0101B4  50E3               	movf	plusw1,w,c
 15457  0101B6  1028               	iorwf	btemp^0,w,c
 15458  0101B8  B4D8               	btfsc	status,2,c
 15459  0101BA  D017               	goto	l11590
 15460                           
 15461                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 15462  0101BC  0ED6               	movlw	low STR_66
 15463  0101BE  6EE6               	movwf	postinc1,c
 15464  0101C0  0EFF               	movlw	high STR_66
 15465  0101C2  6EE6               	movwf	postinc1,c
 15466                           
 15467                           ;stkvar	_n @ sp[(-58)+32]
 15468  0101C4  0E94               	movlw	low _dbuf
 15469  0101C6  6E32               	movwf	(btemp+10)^0,c
 15470  0101C8  0E03               	movlw	high _dbuf
 15471  0101CA  6E33               	movwf	(btemp+11)^0,c
 15472  0101CC  0EE6               	movlw	-26
 15473  0101CE  50E3               	movf	plusw1,w,c
 15474  0101D0  2632               	addwf	(btemp+10)^0,f,c
 15475  0101D2  0EE7               	movlw	-25
 15476  0101D4  50E3               	movf	plusw1,w,c
 15477  0101D6  2233               	addwfc	(btemp+11)^0,f,c
 15478  0101D8  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15479  0101DE  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15480  0101E4  EC70  F0CC         	call	_strcpy	;wreg free
 15481                           
 15482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 15483  0101E8  D016               	goto	l11592
 15484  0101EA                     l11590:
 15485                           
 15486                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 15487  0101EA  0EDE               	movlw	low STR_67
 15488  0101EC  6EE6               	movwf	postinc1,c
 15489  0101EE  0EFF               	movlw	high STR_67
 15490  0101F0  6EE6               	movwf	postinc1,c
 15491                           
 15492                           ;stkvar	_n @ sp[(-58)+32]
 15493  0101F2  0E94               	movlw	low _dbuf
 15494  0101F4  6E32               	movwf	(btemp+10)^0,c
 15495  0101F6  0E03               	movlw	high _dbuf
 15496  0101F8  6E33               	movwf	(btemp+11)^0,c
 15497  0101FA  0EE6               	movlw	-26
 15498  0101FC  50E3               	movf	plusw1,w,c
 15499  0101FE  2632               	addwf	(btemp+10)^0,f,c
 15500  010200  0EE7               	movlw	-25
 15501  010202  50E3               	movf	plusw1,w,c
 15502  010204  2233               	addwfc	(btemp+11)^0,f,c
 15503  010206  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15504  01020C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15505  010212  EC70  F0CC         	call	_strcpy	;wreg free
 15506  010216                     l11592:
 15507                           
 15508                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 15509                           ;stkvar	_w @ sp[(-56)+38]
 15510  010216  50E1               	movf	fsr1l,w,c
 15511  010218  0FEE               	addlw	-18
 15512  01021A  6ED9               	movwf	fsr2l,c
 15513  01021C  50E2               	movf	fsr1h,w,c
 15514  01021E  6EDA               	movwf	fsr2h,c
 15515  010220  0EFF               	movlw	255
 15516  010222  22DA               	addwfc	fsr2h,f,c
 15517  010224  0EFD               	movlw	253
 15518  010226  26DE               	addwf	postinc2,f,c
 15519  010228  0EFF               	movlw	255
 15520  01022A  22DD               	addwfc	postdec2,f,c
 15521  01022C                     l11594:
 15522                           
 15523                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 15524                           ;stkvar	_w @ sp[(-56)+38]
 15525  01022C  0EEE               	movlw	-18
 15526  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 15527  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 15528  01023A  0E94               	movlw	low _dbuf
 15529  01023C  6EE6               	movwf	postinc1,c
 15530  01023E  0E03               	movlw	high _dbuf
 15531  010240  6EE6               	movwf	postinc1,c
 15532                           
 15533                           ;stkvar	_fp @ sp[(-60)+-2]
 15534  010242  0EC2               	movlw	-62
 15535  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 15536  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 15537  010250  EC6D  F0C8         	call	_pad	;wreg free
 15538  010254  EF1D  F089         	goto	l2156
 15539  010258                     l11598:
 15540                           
 15541                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 15542                           ;stkvar	_g @ sp[(-56)+16]
 15543  010258  0ED8               	movlw	-40
 15544  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 15545  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 15546  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 15547  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 15548  010272  ECBA  F0BF         	call	___fpclassifyf	;wreg free
 15549  010276  5028               	movf	btemp^0,w,c
 15550  010278  1029               	iorwf	(btemp+1)^0,w,c
 15551  01027A  A4D8               	btfss	status,2,c
 15552  01027C  D056               	goto	l11616
 15553  01027E  0EBF               	movlw	191
 15554  010280  6E32               	movwf	(btemp+10)^0,c
 15555  010282  0EFF               	movlw	255
 15556  010284  6E33               	movwf	(btemp+11)^0,c
 15557                           
 15558                           ;stkvar	_c @ sp[(-56)+-7]
 15559  010286  0EC1               	movlw	-63
 15560  010288  50E3               	movf	plusw1,w,c
 15561  01028A  6E30               	movwf	(btemp+8)^0,c
 15562  01028C  6A31               	clrf	(btemp+9)^0,c
 15563  01028E  5032               	movf	(btemp+10)^0,w,c
 15564  010290  2630               	addwf	(btemp+8)^0,f,c
 15565  010292  5033               	movf	(btemp+11)^0,w,c
 15566  010294  2231               	addwfc	(btemp+9)^0,f,c
 15567  010296  5031               	movf	(btemp+9)^0,w,c
 15568  010298  E106               	bnz	u10730
 15569  01029A  0E1A               	movlw	26
 15570  01029C  5C30               	subwf	(btemp+8)^0,w,c
 15571  01029E  B0D8               	btfsc	status,0,c
 15572  0102A0  D002               	goto	u10730
 15573  0102A2  0E01               	movlw	1
 15574  0102A4  D001               	goto	u10740
 15575  0102A6                     u10730:
 15576  0102A6  0E00               	movlw	0
 15577  0102A8                     u10740:
 15578  0102A8  6E32               	movwf	(btemp+10)^0,c
 15579  0102AA  6A33               	clrf	(btemp+11)^0,c
 15580                           
 15581                           ;stkvar	_efgtoa$5338 @ sp[(-56)+6]
 15582  0102AC  0ECE               	movlw	-50
 15583  0102AE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15584  0102B4  0ECF               	movlw	-49
 15585  0102B6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15586                           
 15587                           ;stkvar	_efgtoa$5338 @ sp[(-56)+6]
 15588  0102BC  0ECE               	movlw	-50
 15589  0102BE  006F FF8C  F028    	movff	plusw1,btemp
 15590  0102C4  0ECF               	movlw	-49
 15591  0102C6  50E3               	movf	plusw1,w,c
 15592  0102C8  1028               	iorwf	btemp^0,w,c
 15593  0102CA  B4D8               	btfsc	status,2,c
 15594  0102CC  D017               	goto	l11608
 15595                           
 15596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 15597  0102CE  0EDA               	movlw	low STR_70
 15598  0102D0  6EE6               	movwf	postinc1,c
 15599  0102D2  0EFF               	movlw	high STR_70
 15600  0102D4  6EE6               	movwf	postinc1,c
 15601                           
 15602                           ;stkvar	_n @ sp[(-58)+32]
 15603  0102D6  0E94               	movlw	low _dbuf
 15604  0102D8  6E32               	movwf	(btemp+10)^0,c
 15605  0102DA  0E03               	movlw	high _dbuf
 15606  0102DC  6E33               	movwf	(btemp+11)^0,c
 15607  0102DE  0EE6               	movlw	-26
 15608  0102E0  50E3               	movf	plusw1,w,c
 15609  0102E2  2632               	addwf	(btemp+10)^0,f,c
 15610  0102E4  0EE7               	movlw	-25
 15611  0102E6  50E3               	movf	plusw1,w,c
 15612  0102E8  2233               	addwfc	(btemp+11)^0,f,c
 15613  0102EA  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15614  0102F0  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15615  0102F6  EC70  F0CC         	call	_strcpy	;wreg free
 15616                           
 15617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 15618  0102FA  D78D               	goto	l11592
 15619  0102FC                     l11608:
 15620                           
 15621                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 15622  0102FC  0EE2               	movlw	low STR_71
 15623  0102FE  6EE6               	movwf	postinc1,c
 15624  010300  0EFF               	movlw	high STR_71
 15625  010302  6EE6               	movwf	postinc1,c
 15626                           
 15627                           ;stkvar	_n @ sp[(-58)+32]
 15628  010304  0E94               	movlw	low _dbuf
 15629  010306  6E32               	movwf	(btemp+10)^0,c
 15630  010308  0E03               	movlw	high _dbuf
 15631  01030A  6E33               	movwf	(btemp+11)^0,c
 15632  01030C  0EE6               	movlw	-26
 15633  01030E  50E3               	movf	plusw1,w,c
 15634  010310  2632               	addwf	(btemp+10)^0,f,c
 15635  010312  0EE7               	movlw	-25
 15636  010314  50E3               	movf	plusw1,w,c
 15637  010316  2233               	addwfc	(btemp+11)^0,f,c
 15638  010318  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 15639  01031E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 15640  010324  EC70  F0CC         	call	_strcpy	;wreg free
 15641  010328  D776               	goto	l11592
 15642  01032A                     l11616:
 15643                           
 15644                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 15645  01032A  0E00               	movlw	0
 15646  01032C  6E30               	movwf	(btemp+8)^0,c
 15647  01032E  0E00               	movlw	0
 15648  010330  6E31               	movwf	(btemp+9)^0,c
 15649  010332  0E80               	movlw	128
 15650  010334  6E32               	movwf	(btemp+10)^0,c
 15651  010336  0E3F               	movlw	63
 15652  010338  6E33               	movwf	(btemp+11)^0,c
 15653                           
 15654                           ;stkvar	_u @ sp[(-56)+12]
 15655  01033A  0ED4               	movlw	-44
 15656  01033C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 15657  010342  0ED5               	movlw	-43
 15658  010344  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 15659  01034A  0ED6               	movlw	-42
 15660  01034C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15661  010352  0ED7               	movlw	-41
 15662  010354  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15663                           
 15664                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 15665                           ;stkvar	_e @ sp[(-56)+34]
 15666  01035A  0EEA               	movlw	-22
 15667  01035C  6AE3               	clrf	plusw1,c
 15668  01035E  0EEB               	movlw	-21
 15669  010360  6AE3               	clrf	plusw1,c
 15670                           
 15671                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 15672  010362  0E00               	movlw	0
 15673  010364  6EE6               	movwf	postinc1,c
 15674  010366  0E00               	movlw	0
 15675  010368  6EE6               	movwf	postinc1,c
 15676  01036A  0E00               	movlw	0
 15677  01036C  6EE6               	movwf	postinc1,c
 15678  01036E  0E00               	movlw	0
 15679  010370  6EE6               	movwf	postinc1,c
 15680                           
 15681                           ;stkvar	_g @ sp[(-60)+16]
 15682  010372  0ED4               	movlw	-44
 15683  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 15684  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 15685  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 15686  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 15687  01038C  ECDA  F0CC         	call	___fleq	;wreg free
 15688  010390  A028               	btfss	btemp& (0+255),0,c
 15689  010392  D039               	goto	l11628
 15690  010394  D0BC               	goto	u10780
 15691  010396                     l11624:
 15692                           
 15693                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 15694  010396  0E00               	movlw	0
 15695  010398  6EE6               	movwf	postinc1,c
 15696  01039A  0E00               	movlw	0
 15697  01039C  6EE6               	movwf	postinc1,c
 15698  01039E  0E20               	movlw	32
 15699  0103A0  6EE6               	movwf	postinc1,c
 15700  0103A2  0E41               	movlw	65
 15701  0103A4  6EE6               	movwf	postinc1,c
 15702                           
 15703                           ;stkvar	_u @ sp[(-60)+12]
 15704  0103A6  0ED0               	movlw	-48
 15705  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 15706  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 15707  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 15708  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 15709  0103C0  EC0F  F099         	call	___flmul	;wreg free
 15710                           
 15711                           ;stkvar	_u @ sp[(-56)+12]
 15712  0103C4  0ED4               	movlw	-44
 15713  0103C6  0060  F0A3  FFE3   	movff	btemp,plusw1
 15714  0103CC  0ED5               	movlw	-43
 15715  0103CE  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15716  0103D4  0ED6               	movlw	-42
 15717  0103D6  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15718  0103DC  0ED7               	movlw	-41
 15719  0103DE  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15720                           
 15721                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 15722                           ;stkvar	_e @ sp[(-56)+34]
 15723  0103E4  0EEA               	movlw	-22
 15724  0103E6  50E3               	movf	plusw1,w,c
 15725  0103E8  0F01               	addlw	1
 15726  0103EA  6E28               	movwf	btemp^0,c
 15727  0103EC  0EEA               	movlw	-22
 15728  0103EE  0060  F0A3  FFE3   	movff	btemp,plusw1
 15729  0103F4  6A28               	clrf	btemp^0,c
 15730  0103F6  0EEB               	movlw	-21
 15731  0103F8  50E3               	movf	plusw1,w,c
 15732  0103FA  2028               	addwfc	btemp^0,w,c
 15733  0103FC  6E28               	movwf	btemp^0,c
 15734  0103FE  0EEB               	movlw	-21
 15735  010400  0060  F0A3  FFE3   	movff	btemp,plusw1
 15736  010406                     l11628:
 15737                           
 15738                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 15739  010406  0E00               	movlw	0
 15740  010408  6EE6               	movwf	postinc1,c
 15741  01040A  0E00               	movlw	0
 15742  01040C  6EE6               	movwf	postinc1,c
 15743  01040E  0E20               	movlw	32
 15744  010410  6EE6               	movwf	postinc1,c
 15745  010412  0E41               	movlw	65
 15746  010414  6EE6               	movwf	postinc1,c
 15747                           
 15748                           ;stkvar	_u @ sp[(-60)+12]
 15749  010416  0ED0               	movlw	-48
 15750  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 15751  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 15752  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 15753  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 15754  010430  EC0F  F099         	call	___flmul	;wreg free
 15755  010434  0060  F0A3  FFE6   	movff	btemp,postinc1
 15756  01043A  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 15757  010440  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 15758  010446  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 15759                           
 15760                           ;stkvar	_g @ sp[(-60)+16]
 15761  01044C  0ED4               	movlw	-44
 15762  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 15763  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 15764  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 15765  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 15766  010466  EC70  F0C3         	call	___flge	;wreg free
 15767  01046A  A028               	btfss	btemp& (0+255),0,c
 15768  01046C  D032               	goto	l11634
 15769  01046E  D793               	goto	l11624
 15770  010470                     l11630:
 15771                           
 15772                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 15773  010470  0E00               	movlw	0
 15774  010472  6EE6               	movwf	postinc1,c
 15775  010474  0E00               	movlw	0
 15776  010476  6EE6               	movwf	postinc1,c
 15777  010478  0E20               	movlw	32
 15778  01047A  6EE6               	movwf	postinc1,c
 15779  01047C  0E41               	movlw	65
 15780  01047E  6EE6               	movwf	postinc1,c
 15781                           
 15782                           ;stkvar	_u @ sp[(-60)+12]
 15783  010480  0ED0               	movlw	-48
 15784  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 15785  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 15786  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 15787  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 15788  01049A  EC9B  F0A4         	call	___fldiv	;wreg free
 15789                           
 15790                           ;stkvar	_u @ sp[(-56)+12]
 15791  01049E  0ED4               	movlw	-44
 15792  0104A0  0060  F0A3  FFE3   	movff	btemp,plusw1
 15793  0104A6  0ED5               	movlw	-43
 15794  0104A8  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 15795  0104AE  0ED6               	movlw	-42
 15796  0104B0  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 15797  0104B6  0ED7               	movlw	-41
 15798  0104B8  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 15799                           
 15800                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 15801                           ;stkvar	_e @ sp[(-56)+34]
 15802  0104BE  50E1               	movf	fsr1l,w,c
 15803  0104C0  0FEA               	addlw	-22
 15804  0104C2  6ED9               	movwf	fsr2l,c
 15805  0104C4  50E2               	movf	fsr1h,w,c
 15806  0104C6  6EDA               	movwf	fsr2h,c
 15807  0104C8  0EFF               	movlw	255
 15808  0104CA  22DA               	addwfc	fsr2h,f,c
 15809  0104CC  06DE               	decf	postinc2,f,c
 15810  0104CE  0E00               	movlw	0
 15811  0104D0  5ADD               	subwfb	postdec2,f,c
 15812  0104D2                     l11634:
 15813                           
 15814                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 15815                           ;stkvar	_u @ sp[(-56)+12]
 15816  0104D2  0ED4               	movlw	-44
 15817  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 15818  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 15819  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 15820  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 15821                           
 15822                           ;stkvar	_g @ sp[(-60)+16]
 15823  0104EC  0ED4               	movlw	-44
 15824  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 15825  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 15826  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 15827  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 15828  010506  EC70  F0C3         	call	___flge	;wreg free
 15829  01050A  A028               	btfss	btemp& (0+255),0,c
 15830  01050C  D7B1               	goto	l11630
 15831  01050E                     u10780:
 15832                           
 15833                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 15834                           ;stkvar	_c @ sp[(-56)+-7]
 15835  01050E  0EC1               	movlw	-63
 15836  010510  50E3               	movf	plusw1,w,c
 15837  010512  6EE6               	movwf	postinc1,c
 15838  010514  0E00               	movlw	0
 15839  010516  6EE6               	movwf	postinc1,c
 15840  010518  EC92  F0D1         	call	_tolower	;wreg free
 15841                           
 15842                           ;stkvar	_mode @ sp[(-56)+54]
 15843  01051C  0EFE               	movlw	-2
 15844  01051E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15845                           
 15846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 15847                           ;stkvar	_mode @ sp[(-56)+54]
 15848                           ;stkvar	_nmode @ sp[(-56)+55]
 15849  010524  0EFE               	movlw	-2
 15850  010526  006F FF8C  F028    	movff	plusw1,btemp
 15851  01052C  0EFF               	movlw	-1
 15852  01052E  0060  F0A3  FFE3   	movff	btemp,plusw1
 15853                           
 15854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 15855                           ;stkvar	_mode @ sp[(-56)+54]
 15856  010534  0EFE               	movlw	-2
 15857  010536  006F FF8C  F028    	movff	plusw1,btemp
 15858  01053C  0E67               	movlw	103
 15859  01053E  1828               	xorwf	btemp^0,w,c
 15860  010540  A4D8               	btfss	status,2,c
 15861  010542  D025               	goto	l11652
 15862                           
 15863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 15864  010544  504A               	movf	_prec^0,w,c
 15865  010546  104B               	iorwf	(_prec+1)^0,w,c
 15866  010548  A4D8               	btfss	status,2,c
 15867  01054A  D004               	goto	l11646
 15868                           
 15869                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 15870  01054C  0E00               	movlw	0
 15871  01054E  6E4B               	movwf	(_prec+1)^0,c
 15872  010550  0E01               	movlw	1
 15873  010552  6E4A               	movwf	_prec^0,c
 15874  010554                     l11646:
 15875                           
 15876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 15877  010554  BE4B               	btfsc	(_prec+1)^0,7,c
 15878  010556  D005               	goto	u10810
 15879  010558  504B               	movf	(_prec+1)^0,w,c
 15880  01055A  E110               	bnz	l11650
 15881  01055C  044A               	decf	_prec^0,w,c
 15882  01055E  B0D8               	btfsc	status,0,c
 15883  010560  D00D               	goto	l11650
 15884  010562                     u10810:
 15885  010562  0E06               	movlw	6
 15886  010564  6E32               	movwf	(btemp+10)^0,c
 15887  010566  0E00               	movlw	0
 15888  010568  6E33               	movwf	(btemp+11)^0,c
 15889                           
 15890                           ;stkvar	_p @ sp[(-56)+40]
 15891  01056A  0EF0               	movlw	-16
 15892  01056C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 15893  010572  0EF1               	movlw	-15
 15894  010574  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15895  01057A  D00C               	goto	l11658
 15896  01057C                     l11650:
 15897                           
 15898                           ;stkvar	_p @ sp[(-56)+40]
 15899  01057C  0EF0               	movlw	-16
 15900  01057E  0060  F12B  FFE3   	movff	_prec,plusw1
 15901  010584  0EF1               	movlw	-15
 15902  010586  0060  F12F  FFE3   	movff	_prec+1,plusw1
 15903  01058C  D003               	goto	l11658
 15904  01058E                     l11652:
 15905                           
 15906                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 15907  01058E  AE4B               	btfss	(_prec+1)^0,7,c
 15908  010590  D7F5               	goto	l11650
 15909  010592  D7E7               	goto	u10810
 15910  010594                     l11658:
 15911                           
 15912                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 15913                           ;stkvar	_mode @ sp[(-56)+54]
 15914  010594  0EFE               	movlw	-2
 15915  010596  006F FF8C  F028    	movff	plusw1,btemp
 15916  01059C  0E67               	movlw	103
 15917  01059E  1828               	xorwf	btemp^0,w,c
 15918  0105A0  A4D8               	btfss	status,2,c
 15919  0105A2  D02F               	goto	l11668
 15920                           
 15921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 15922                           ;stkvar	_e @ sp[(-56)+34]
 15923  0105A4  0EEB               	movlw	-21
 15924  0105A6  AEE3               	btfss	plusw1,7,c
 15925  0105A8  D00E               	goto	u10840
 15926  0105AA  0EEA               	movlw	-22
 15927  0105AC  006F FF8C  F028    	movff	plusw1,btemp
 15928  0105B2  0EFC               	movlw	252
 15929  0105B4  5E28               	subwf	btemp^0,f,c
 15930  0105B6  0EEB               	movlw	-21
 15931  0105B8  006F FF8C  F028    	movff	plusw1,btemp
 15932  0105BE  0EFF               	movlw	255
 15933  0105C0  5A28               	subwfb	btemp^0,f,c
 15934  0105C2  A0D8               	btfss	status,0,c
 15935  0105C4  D018               	goto	l11666
 15936  0105C6                     u10840:
 15937                           
 15938                           ;stkvar	_e @ sp[(-56)+34]
 15939                           ;stkvar	_p @ sp[(-56)+40]
 15940  0105C6  0EF0               	movlw	-16
 15941  0105C8  50E3               	movf	plusw1,w,c
 15942  0105CA  0FFF               	addlw	255
 15943  0105CC  6E32               	movwf	(btemp+10)^0,c
 15944  0105CE  0EF1               	movlw	-15
 15945  0105D0  006F FF8C  F033    	movff	plusw1,btemp+11
 15946  0105D6  0EFF               	movlw	255
 15947  0105D8  2233               	addwfc	(btemp+11)^0,f,c
 15948  0105DA  0EEA               	movlw	-22
 15949  0105DC  50E3               	movf	plusw1,w,c
 15950  0105DE  5C32               	subwf	(btemp+10)^0,w,c
 15951  0105E0  5033               	movf	(btemp+11)^0,w,c
 15952  0105E2  0A80               	xorlw	128
 15953  0105E4  6E28               	movwf	btemp^0,c
 15954  0105E6  0EEB               	movlw	-21
 15955  0105E8  50E3               	movf	plusw1,w,c
 15956  0105EA  0A80               	xorlw	128
 15957  0105EC  5828               	subwfb	btemp^0,w,c
 15958  0105EE  A0D8               	btfss	status,0,c
 15959  0105F0  D002               	goto	l11666
 15960                           
 15961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 15962  0105F2  0E66               	movlw	102
 15963  0105F4  D001               	goto	L15
 15964  0105F6                     l11666:
 15965                           
 15966                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 15967  0105F6  0E65               	movlw	101
 15968  0105F8                     L15:
 15969  0105F8  6E33               	movwf	(btemp+11)^0,c
 15970                           
 15971                           ;stkvar	_nmode @ sp[(-56)+55]
 15972  0105FA  0EFF               	movlw	-1
 15973  0105FC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 15974  010602                     l11668:
 15975                           
 15976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 15977                           ;stkvar	_p @ sp[(-56)+40]
 15978                           ;stkvar	_m @ sp[(-56)+48]
 15979  010602  0EF0               	movlw	-16
 15980  010604  006F FF8C  F028    	movff	plusw1,btemp
 15981  01060A  0EF8               	movlw	-8
 15982  01060C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15983  010612  0EF1               	movlw	-15
 15984  010614  006F FF8C  F028    	movff	plusw1,btemp
 15985  01061A  0EF9               	movlw	-7
 15986  01061C  0060  F0A3  FFE3   	movff	btemp,plusw1
 15987                           
 15988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 15989                           ;stkvar	_mode @ sp[(-56)+54]
 15990  010622  0EFE               	movlw	-2
 15991  010624  006F FF8C  F028    	movff	plusw1,btemp
 15992  01062A  0E67               	movlw	103
 15993  01062C  1828               	xorwf	btemp^0,w,c
 15994  01062E  A4D8               	btfss	status,2,c
 15995  010630  D00B               	goto	u10880
 15996                           
 15997                           ;stkvar	_nmode @ sp[(-56)+55]
 15998  010632  0EFF               	movlw	-1
 15999  010634  006F FF8C  F028    	movff	plusw1,btemp
 16000  01063A  0E66               	movlw	102
 16001  01063C  1828               	xorwf	btemp^0,w,c
 16002  01063E  A4D8               	btfss	status,2,c
 16003  010640  D014               	goto	l2185
 16004                           
 16005                           ;stkvar	_e @ sp[(-56)+34]
 16006  010642  0EEB               	movlw	-21
 16007  010644  AEE3               	btfss	plusw1,7,c
 16008  010646  D011               	goto	l2185
 16009  010648                     u10880:
 16010                           
 16011                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 16012                           ;stkvar	_m @ sp[(-56)+48]
 16013  010648  0EF8               	movlw	-8
 16014  01064A  50E3               	movf	plusw1,w,c
 16015  01064C  0F01               	addlw	1
 16016  01064E  6E28               	movwf	btemp^0,c
 16017  010650  0EF8               	movlw	-8
 16018  010652  0060  F0A3  FFE3   	movff	btemp,plusw1
 16019  010658  6A28               	clrf	btemp^0,c
 16020  01065A  0EF9               	movlw	-7
 16021  01065C  50E3               	movf	plusw1,w,c
 16022  01065E  2028               	addwfc	btemp^0,w,c
 16023  010660  6E28               	movwf	btemp^0,c
 16024  010662  0EF9               	movlw	-7
 16025  010664  0060  F0A3  FFE3   	movff	btemp,plusw1
 16026  01066A                     l2185:
 16027                           
 16028                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 16029                           ;stkvar	_nmode @ sp[(-56)+55]
 16030  01066A  0EFF               	movlw	-1
 16031  01066C  006F FF8C  F028    	movff	plusw1,btemp
 16032  010672  0E66               	movlw	102
 16033  010674  1828               	xorwf	btemp^0,w,c
 16034  010676  A4D8               	btfss	status,2,c
 16035  010678  D03B               	goto	l11688
 16036                           
 16037                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 16038                           ;stkvar	_e @ sp[(-56)+34]
 16039  01067A  0EEB               	movlw	-21
 16040  01067C  AEE3               	btfss	plusw1,7,c
 16041  01067E  D01C               	goto	l11684
 16042                           
 16043                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 16044  010680  0E00               	movlw	0
 16045  010682  6E30               	movwf	(btemp+8)^0,c
 16046  010684  0E00               	movlw	0
 16047  010686  6E31               	movwf	(btemp+9)^0,c
 16048  010688  0E80               	movlw	128
 16049  01068A  6E32               	movwf	(btemp+10)^0,c
 16050  01068C  0E3F               	movlw	63
 16051  01068E  6E33               	movwf	(btemp+11)^0,c
 16052                           
 16053                           ;stkvar	_u @ sp[(-56)+12]
 16054  010690  0ED4               	movlw	-44
 16055  010692  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16056  010698  0ED5               	movlw	-43
 16057  01069A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16058  0106A0  0ED6               	movlw	-42
 16059  0106A2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16060  0106A8  0ED7               	movlw	-41
 16061  0106AA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16062                           
 16063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 16064                           ;stkvar	_e @ sp[(-56)+34]
 16065  0106B0  0EEA               	movlw	-22
 16066  0106B2  6AE3               	clrf	plusw1,c
 16067  0106B4  0EEB               	movlw	-21
 16068  0106B6  6AE3               	clrf	plusw1,c
 16069  0106B8                     l11684:
 16070                           
 16071                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 16072                           ;stkvar	_mode @ sp[(-56)+54]
 16073  0106B8  0EFE               	movlw	-2
 16074  0106BA  006F FF8C  F028    	movff	plusw1,btemp
 16075  0106C0  0E67               	movlw	103
 16076  0106C2  1828               	xorwf	btemp^0,w,c
 16077  0106C4  B4D8               	btfsc	status,2,c
 16078  0106C6  D014               	goto	l11688
 16079                           
 16080                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 16081                           ;stkvar	_e @ sp[(-56)+34]
 16082                           ;stkvar	_m @ sp[(-56)+48]
 16083  0106C8  0EF8               	movlw	-8
 16084  0106CA  50E3               	movf	plusw1,w,c
 16085  0106CC  6E28               	movwf	btemp^0,c
 16086  0106CE  0EEA               	movlw	-22
 16087  0106D0  50E3               	movf	plusw1,w,c
 16088  0106D2  2628               	addwf	btemp^0,f,c
 16089  0106D4  0EF8               	movlw	-8
 16090  0106D6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16091  0106DC  0EF9               	movlw	-7
 16092  0106DE  50E3               	movf	plusw1,w,c
 16093  0106E0  6E28               	movwf	btemp^0,c
 16094  0106E2  0EEB               	movlw	-21
 16095  0106E4  50E3               	movf	plusw1,w,c
 16096  0106E6  2228               	addwfc	btemp^0,f,c
 16097  0106E8  0EF9               	movlw	-7
 16098  0106EA  0060  F0A3  FFE3   	movff	btemp,plusw1
 16099  0106F0                     l11688:
 16100                           
 16101                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 16102                           ;stkvar	_i @ sp[(-56)+36]
 16103  0106F0  0EEC               	movlw	-20
 16104  0106F2  6AE3               	clrf	plusw1,c
 16105  0106F4  0EED               	movlw	-19
 16106  0106F6  6AE3               	clrf	plusw1,c
 16107                           
 16108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 16109                           ;stkvar	_g @ sp[(-56)+16]
 16110  0106F8  0ED8               	movlw	-40
 16111  0106FA  006F FF8C  F030    	movff	plusw1,btemp+8
 16112  010700  0ED9               	movlw	-39
 16113  010702  006F FF8C  F031    	movff	plusw1,btemp+9
 16114  010708  0EDA               	movlw	-38
 16115  01070A  006F FF8C  F032    	movff	plusw1,btemp+10
 16116  010710  0EDB               	movlw	-37
 16117  010712  006F FF8C  F033    	movff	plusw1,btemp+11
 16118                           
 16119                           ;stkvar	_h @ sp[(-56)+24]
 16120  010718  0EE0               	movlw	-32
 16121  01071A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16122  010720  0EE1               	movlw	-31
 16123  010722  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16124  010728  0EE2               	movlw	-30
 16125  01072A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16126  010730  0EE3               	movlw	-29
 16127  010732  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16128                           
 16129                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 16130                           ;stkvar	_u @ sp[(-56)+12]
 16131  010738  0ED4               	movlw	-44
 16132  01073A  006F FF8C  F030    	movff	plusw1,btemp+8
 16133  010740  0ED5               	movlw	-43
 16134  010742  006F FF8C  F031    	movff	plusw1,btemp+9
 16135  010748  0ED6               	movlw	-42
 16136  01074A  006F FF8C  F032    	movff	plusw1,btemp+10
 16137  010750  0ED7               	movlw	-41
 16138  010752  006F FF8C  F033    	movff	plusw1,btemp+11
 16139                           
 16140                           ;stkvar	_ou @ sp[(-56)+28]
 16141  010758  0EE4               	movlw	-28
 16142  01075A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16143  010760  0EE5               	movlw	-27
 16144  010762  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16145  010768  0EE6               	movlw	-26
 16146  01076A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16147  010770  0EE7               	movlw	-25
 16148  010772  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16149                           
 16150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16151  010778  D0D6               	goto	l11704
 16152  01077A                     l11694:
 16153                           
 16154                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 16155                           ;stkvar	_u @ sp[(-56)+12]
 16156  01077A  0ED4               	movlw	-44
 16157  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 16158  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 16159  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 16160  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 16161                           
 16162                           ;stkvar	_h @ sp[(-60)+24]
 16163  010794  0EDC               	movlw	-36
 16164  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 16165  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 16166  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16167  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16168  0107AE  EC9B  F0A4         	call	___fldiv	;wreg free
 16169  0107B2  0060  F0A3  FFE6   	movff	btemp,postinc1
 16170  0107B8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16171  0107BE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16172  0107C4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16173  0107CA  EC9C  F0AF         	call	_floorf	;wreg free
 16174                           
 16175                           ;stkvar	_l @ sp[(-56)+20]
 16176  0107CE  0EDC               	movlw	-36
 16177  0107D0  0060  F0A3  FFE3   	movff	btemp,plusw1
 16178  0107D6  0EDD               	movlw	-35
 16179  0107D8  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16180  0107DE  0EDE               	movlw	-34
 16181  0107E0  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16182  0107E6  0EDF               	movlw	-33
 16183  0107E8  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16184                           
 16185                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 16186                           ;stkvar	_l @ sp[(-56)+20]
 16187  0107EE  0EDC               	movlw	-36
 16188  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 16189  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 16190  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 16191  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 16192  010808  ECFF  F0C1         	call	___fltol	;wreg free
 16193  01080C  0060  F0A0  F032   	movff	btemp,btemp+10
 16194  010812  0060  F0A4  F033   	movff	btemp+1,btemp+11
 16195                           
 16196                           ;stkvar	_d @ sp[(-56)+44]
 16197  010818  0EF4               	movlw	-12
 16198  01081A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16199  010820  0EF5               	movlw	-11
 16200  010822  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16201                           
 16202                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 16203                           ;stkvar	_u @ sp[(-56)+12]
 16204  010828  0ED4               	movlw	-44
 16205  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 16206  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 16207  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 16208  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 16209                           
 16210                           ;stkvar	_l @ sp[(-60)+20]
 16211  010842  0ED8               	movlw	-40
 16212  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 16213  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 16214  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 16215  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 16216  01085C  EC0F  F099         	call	___flmul	;wreg free
 16217  010860  0060  F0A3  FFE6   	movff	btemp,postinc1
 16218  010866  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16219  01086C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16220  010872  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16221                           
 16222                           ;stkvar	_h @ sp[(-60)+24]
 16223  010878  0EDC               	movlw	-36
 16224  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 16225  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 16226  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 16227  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 16228  010892  EC3F  F0D5         	call	___flsub	;wreg free
 16229                           
 16230                           ;stkvar	_h @ sp[(-56)+24]
 16231  010896  0EE0               	movlw	-32
 16232  010898  0060  F0A3  FFE3   	movff	btemp,plusw1
 16233  01089E  0EE1               	movlw	-31
 16234  0108A0  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16235  0108A6  0EE2               	movlw	-30
 16236  0108A8  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16237  0108AE  0EE3               	movlw	-29
 16238  0108B0  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16239                           
 16240                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 16241  0108B6  0E00               	movlw	0
 16242  0108B8  6EE6               	movwf	postinc1,c
 16243  0108BA  0E00               	movlw	0
 16244  0108BC  6EE6               	movwf	postinc1,c
 16245  0108BE  0E20               	movlw	32
 16246  0108C0  6EE6               	movwf	postinc1,c
 16247  0108C2  0E41               	movlw	65
 16248  0108C4  6EE6               	movwf	postinc1,c
 16249                           
 16250                           ;stkvar	_u @ sp[(-60)+12]
 16251  0108C6  0ED0               	movlw	-48
 16252  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16253  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 16254  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 16255  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 16256  0108E0  EC9B  F0A4         	call	___fldiv	;wreg free
 16257                           
 16258                           ;stkvar	_u @ sp[(-56)+12]
 16259  0108E4  0ED4               	movlw	-44
 16260  0108E6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16261  0108EC  0ED5               	movlw	-43
 16262  0108EE  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16263  0108F4  0ED6               	movlw	-42
 16264  0108F6  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16265  0108FC  0ED7               	movlw	-41
 16266  0108FE  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16267                           
 16268                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 16269                           ;stkvar	_i @ sp[(-56)+36]
 16270  010904  0EEC               	movlw	-20
 16271  010906  50E3               	movf	plusw1,w,c
 16272  010908  0F01               	addlw	1
 16273  01090A  6E28               	movwf	btemp^0,c
 16274  01090C  0EEC               	movlw	-20
 16275  01090E  0060  F0A3  FFE3   	movff	btemp,plusw1
 16276  010914  6A28               	clrf	btemp^0,c
 16277  010916  0EED               	movlw	-19
 16278  010918  50E3               	movf	plusw1,w,c
 16279  01091A  2028               	addwfc	btemp^0,w,c
 16280  01091C  6E28               	movwf	btemp^0,c
 16281  01091E  0EED               	movlw	-19
 16282  010920  0060  F0A3  FFE3   	movff	btemp,plusw1
 16283  010926                     l11704:
 16284                           
 16285                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 16286                           ;stkvar	_m @ sp[(-56)+48]
 16287                           ;stkvar	_i @ sp[(-56)+36]
 16288  010926  50E1               	movf	fsr1l,w,c
 16289  010928  0FEC               	addlw	-20
 16290  01092A  6ED9               	movwf	fsr2l,c
 16291  01092C  50E2               	movf	fsr1h,w,c
 16292  01092E  6EDA               	movwf	fsr2h,c
 16293  010930  0EFF               	movlw	255
 16294  010932  22DA               	addwfc	fsr2h,f,c
 16295  010934  0EF8               	movlw	-8
 16296  010936  50E3               	movf	plusw1,w,c
 16297  010938  5CDE               	subwf	postinc2,w,c
 16298  01093A  50DE               	movf	postinc2,w,c
 16299  01093C  0A80               	xorlw	128
 16300  01093E  6E28               	movwf	btemp^0,c
 16301  010940  0EF9               	movlw	-7
 16302  010942  50E3               	movf	plusw1,w,c
 16303  010944  0A80               	xorlw	128
 16304  010946  5828               	subwfb	btemp^0,w,c
 16305  010948  A0D8               	btfss	status,0,c
 16306  01094A  D717               	goto	l11694
 16307                           
 16308                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 16309  01094C  0E00               	movlw	0
 16310  01094E  6EE6               	movwf	postinc1,c
 16311  010950  0E00               	movlw	0
 16312  010952  6EE6               	movwf	postinc1,c
 16313  010954  0EA0               	movlw	160
 16314  010956  6EE6               	movwf	postinc1,c
 16315  010958  0E40               	movlw	64
 16316  01095A  6EE6               	movwf	postinc1,c
 16317                           
 16318                           ;stkvar	_u @ sp[(-60)+12]
 16319  01095C  0ED0               	movlw	-48
 16320  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 16321  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 16322  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 16323  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 16324  010976  EC0F  F099         	call	___flmul	;wreg free
 16325                           
 16326                           ;stkvar	_l @ sp[(-56)+20]
 16327  01097A  0EDC               	movlw	-36
 16328  01097C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16329  010982  0EDD               	movlw	-35
 16330  010984  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16331  01098A  0EDE               	movlw	-34
 16332  01098C  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16333  010992  0EDF               	movlw	-33
 16334  010994  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16335                           
 16336                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 16337                           ;stkvar	_l @ sp[(-56)+20]
 16338  01099A  0EDC               	movlw	-36
 16339  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 16340  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 16341  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 16342  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 16343                           
 16344                           ;stkvar	_h @ sp[(-60)+24]
 16345  0109B4  0EDC               	movlw	-36
 16346  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 16347  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 16348  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 16349  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 16350  0109CE  EC70  F0C3         	call	___flge	;wreg free
 16351  0109D2  A028               	btfss	btemp& (0+255),0,c
 16352  0109D4  D021               	goto	u10950
 16353                           
 16354                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 16355                           ;stkvar	_l @ sp[(-56)+20]
 16356                           
 16357                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 16358                           
 16359                           ;stkvar	_l @ sp[(-56)+20]
 16360                           
 16361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 16362  0109D6  0EDC               	movlw	-36
 16363  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 16364  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 16365  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 16366  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 16367                           
 16368                           ;stkvar	_h @ sp[(-60)+24]
 16369  0109F0  0EDC               	movlw	-36
 16370  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 16371  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 16372  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 16373  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 16374  010A0A  ECDA  F0CC         	call	___fleq	;wreg free
 16375  010A0E  A028               	btfss	btemp& (0+255),0,c
 16376  010A10  D01B               	goto	l11718
 16377                           
 16378                           ;stkvar	_d @ sp[(-56)+44]
 16379  010A12  0EF4               	movlw	-12
 16380  010A14  B0E3               	btfsc	plusw1,0,c
 16381  010A16  D018               	goto	l11718
 16382  010A18                     u10950:
 16383                           
 16384                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 16385  010A18  0E00               	movlw	0
 16386  010A1A  6E30               	movwf	(btemp+8)^0,c
 16387  010A1C  0E00               	movlw	0
 16388  010A1E  6E31               	movwf	(btemp+9)^0,c
 16389  010A20  0E00               	movlw	0
 16390  010A22  6E32               	movwf	(btemp+10)^0,c
 16391  010A24  0E00               	movlw	0
 16392  010A26  6E33               	movwf	(btemp+11)^0,c
 16393                           
 16394                           ;stkvar	_l @ sp[(-56)+20]
 16395  010A28  0EDC               	movlw	-36
 16396  010A2A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16397  010A30  0EDD               	movlw	-35
 16398  010A32  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16399  010A38  0EDE               	movlw	-34
 16400  010A3A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16401  010A40  0EDF               	movlw	-33
 16402  010A42  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16403  010A48                     l11718:
 16404                           
 16405                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 16406                           ;stkvar	_l @ sp[(-56)+20]
 16407  010A48  0EDC               	movlw	-36
 16408  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 16409  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 16410  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 16411  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16412                           
 16413                           ;stkvar	_g @ sp[(-60)+16]
 16414  010A62  0ED4               	movlw	-44
 16415  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 16416  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 16417  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 16418  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 16419  010A7C  EC24  F09D         	call	___fladd	;wreg free
 16420                           
 16421                           ;stkvar	_h @ sp[(-56)+24]
 16422  010A80  0EE0               	movlw	-32
 16423  010A82  0060  F0A3  FFE3   	movff	btemp,plusw1
 16424  010A88  0EE1               	movlw	-31
 16425  010A8A  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16426  010A90  0EE2               	movlw	-30
 16427  010A92  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16428  010A98  0EE3               	movlw	-29
 16429  010A9A  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16430                           
 16431                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 16432                           ;stkvar	_ou @ sp[(-56)+28]
 16433  010AA0  0EE4               	movlw	-28
 16434  010AA2  006F FF8C  F030    	movff	plusw1,btemp+8
 16435  010AA8  0EE5               	movlw	-27
 16436  010AAA  006F FF8C  F031    	movff	plusw1,btemp+9
 16437  010AB0  0EE6               	movlw	-26
 16438  010AB2  006F FF8C  F032    	movff	plusw1,btemp+10
 16439  010AB8  0EE7               	movlw	-25
 16440  010ABA  006F FF8C  F033    	movff	plusw1,btemp+11
 16441                           
 16442                           ;stkvar	_u @ sp[(-56)+12]
 16443  010AC0  0ED4               	movlw	-44
 16444  010AC2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 16445  010AC8  0ED5               	movlw	-43
 16446  010ACA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 16447  010AD0  0ED6               	movlw	-42
 16448  010AD2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16449  010AD8  0ED7               	movlw	-41
 16450  010ADA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16451                           
 16452                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 16453                           ;stkvar	_nmode @ sp[(-56)+55]
 16454  010AE0  0EFF               	movlw	-1
 16455  010AE2  006F FF8C  F028    	movff	plusw1,btemp
 16456  010AE8  0E65               	movlw	101
 16457  010AEA  1828               	xorwf	btemp^0,w,c
 16458  010AEC  B4D8               	btfsc	status,2,c
 16459  010AEE  D011               	goto	l11726
 16460                           
 16461                           ;stkvar	_e @ sp[(-56)+34]
 16462                           ;stkvar	_ne @ sp[(-56)+46]
 16463  010AF0  0EEA               	movlw	-22
 16464  010AF2  006F FF8C  F028    	movff	plusw1,btemp
 16465  010AF8  0EF6               	movlw	-10
 16466  010AFA  0060  F0A3  FFE3   	movff	btemp,plusw1
 16467  010B00  0EEB               	movlw	-21
 16468  010B02  006F FF8C  F028    	movff	plusw1,btemp
 16469  010B08  0EF7               	movlw	-9
 16470  010B0A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16471  010B10  D004               	goto	l2200
 16472  010B12                     l11726:
 16473                           
 16474                           ;stkvar	_ne @ sp[(-56)+46]
 16475  010B12  0EF6               	movlw	-10
 16476  010B14  6AE3               	clrf	plusw1,c
 16477  010B16  0EF7               	movlw	-9
 16478  010B18  6AE3               	clrf	plusw1,c
 16479  010B1A                     l2200:
 16480                           
 16481                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 16482                           ;stkvar	_pp @ sp[(-56)+50]
 16483  010B1A  0EFA               	movlw	-6
 16484  010B1C  6AE3               	clrf	plusw1,c
 16485  010B1E  0EFB               	movlw	-5
 16486  010B20  6AE3               	clrf	plusw1,c
 16487                           
 16488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 16489                           ;stkvar	_t @ sp[(-56)+52]
 16490  010B22  0EFC               	movlw	-4
 16491  010B24  6AE3               	clrf	plusw1,c
 16492  010B26  0EFD               	movlw	-3
 16493  010B28  6AE3               	clrf	plusw1,c
 16494                           
 16495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 16496                           ;stkvar	_i @ sp[(-56)+36]
 16497  010B2A  0EEC               	movlw	-20
 16498  010B2C  6AE3               	clrf	plusw1,c
 16499  010B2E  0EED               	movlw	-19
 16500  010B30  6AE3               	clrf	plusw1,c
 16501                           
 16502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16503  010B32  D1B7               	goto	l11778
 16504  010B34                     l11728:
 16505                           
 16506                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 16507                           ;stkvar	_u @ sp[(-56)+12]
 16508  010B34  0ED4               	movlw	-44
 16509  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 16510  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16511  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 16512  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 16513                           
 16514                           ;stkvar	_h @ sp[(-60)+24]
 16515  010B4E  0EDC               	movlw	-36
 16516  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 16517  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 16518  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 16519  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 16520  010B68  EC9B  F0A4         	call	___fldiv	;wreg free
 16521  010B6C  0060  F0A3  FFE6   	movff	btemp,postinc1
 16522  010B72  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16523  010B78  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16524  010B7E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16525  010B84  EC9C  F0AF         	call	_floorf	;wreg free
 16526                           
 16527                           ;stkvar	_l @ sp[(-56)+20]
 16528  010B88  0EDC               	movlw	-36
 16529  010B8A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16530  010B90  0EDD               	movlw	-35
 16531  010B92  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16532  010B98  0EDE               	movlw	-34
 16533  010B9A  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16534  010BA0  0EDF               	movlw	-33
 16535  010BA2  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16536                           
 16537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 16538                           ;stkvar	_l @ sp[(-56)+20]
 16539  010BA8  0EDC               	movlw	-36
 16540  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 16541  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 16542  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 16543  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 16544  010BC2  ECFF  F0C1         	call	___fltol	;wreg free
 16545  010BC6  0060  F0A0  F032   	movff	btemp,btemp+10
 16546  010BCC  0060  F0A4  F033   	movff	btemp+1,btemp+11
 16547                           
 16548                           ;stkvar	_d @ sp[(-56)+44]
 16549  010BD2  0EF4               	movlw	-12
 16550  010BD4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16551  010BDA  0EF5               	movlw	-11
 16552  010BDC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16553                           
 16554                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 16555  010BE2  B84C               	btfsc	_flags^0,4,c
 16556  010BE4  D026               	goto	l11742
 16557                           
 16558                           ;stkvar	_d @ sp[(-56)+44]
 16559  010BE6  0EF4               	movlw	-12
 16560  010BE8  006F FF8C  F028    	movff	plusw1,btemp
 16561  010BEE  0EF5               	movlw	-11
 16562  010BF0  50E3               	movf	plusw1,w,c
 16563  010BF2  1028               	iorwf	btemp^0,w,c
 16564  010BF4  A4D8               	btfss	status,2,c
 16565  010BF6  D01D               	goto	l11742
 16566                           
 16567                           ;stkvar	_mode @ sp[(-56)+54]
 16568  010BF8  0EFE               	movlw	-2
 16569  010BFA  006F FF8C  F028    	movff	plusw1,btemp
 16570  010C00  0E67               	movlw	103
 16571  010C02  1828               	xorwf	btemp^0,w,c
 16572  010C04  A4D8               	btfss	status,2,c
 16573  010C06  D015               	goto	l11742
 16574                           
 16575                           ;stkvar	_ne @ sp[(-56)+46]
 16576  010C08  0EF7               	movlw	-9
 16577  010C0A  AEE3               	btfss	plusw1,7,c
 16578  010C0C  D012               	goto	l11742
 16579                           
 16580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 16581                           ;stkvar	_t @ sp[(-56)+52]
 16582  010C0E  0EFC               	movlw	-4
 16583  010C10  50E3               	movf	plusw1,w,c
 16584  010C12  0F01               	addlw	1
 16585  010C14  6E28               	movwf	btemp^0,c
 16586  010C16  0EFC               	movlw	-4
 16587  010C18  0060  F0A3  FFE3   	movff	btemp,plusw1
 16588  010C1E  6A28               	clrf	btemp^0,c
 16589  010C20  0EFD               	movlw	-3
 16590  010C22  50E3               	movf	plusw1,w,c
 16591  010C24  2028               	addwfc	btemp^0,w,c
 16592  010C26  6E28               	movwf	btemp^0,c
 16593  010C28  0EFD               	movlw	-3
 16594  010C2A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16595                           
 16596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 16597  010C30  D0AF               	goto	l11770
 16598  010C32                     l11742:
 16599                           
 16600                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 16601                           ;stkvar	_pp @ sp[(-56)+50]
 16602  010C32  0EFA               	movlw	-6
 16603  010C34  006F FF8C  F028    	movff	plusw1,btemp
 16604  010C3A  0EFB               	movlw	-5
 16605  010C3C  50E3               	movf	plusw1,w,c
 16606  010C3E  1028               	iorwf	btemp^0,w,c
 16607  010C40  A4D8               	btfss	status,2,c
 16608  010C42  D070               	goto	l11762
 16609                           
 16610                           ;stkvar	_ne @ sp[(-56)+46]
 16611  010C44  0EF7               	movlw	-9
 16612  010C46  AEE3               	btfss	plusw1,7,c
 16613  010C48  D06D               	goto	l11762
 16614                           
 16615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 16616                           ;stkvar	_n @ sp[(-56)+32]
 16617  010C4A  0EE8               	movlw	-24
 16618  010C4C  006F FF8C  F032    	movff	plusw1,btemp+10
 16619  010C52  0EE9               	movlw	-23
 16620  010C54  006F FF8C  F033    	movff	plusw1,btemp+11
 16621  010C5A  0E94               	movlw	low _dbuf
 16622  010C5C  2432               	addwf	(btemp+10)^0,w,c
 16623  010C5E  6ED9               	movwf	fsr2l,c
 16624  010C60  0E03               	movlw	high _dbuf
 16625  010C62  2033               	addwfc	(btemp+11)^0,w,c
 16626  010C64  6EDA               	movwf	fsr2h,c
 16627  010C66  0E2E               	movlw	46
 16628  010C68  6EDF               	movwf	indf2,c
 16629                           
 16630                           ;stkvar	_n @ sp[(-56)+32]
 16631  010C6A  0EE8               	movlw	-24
 16632  010C6C  50E3               	movf	plusw1,w,c
 16633  010C6E  0F01               	addlw	1
 16634  010C70  6E28               	movwf	btemp^0,c
 16635  010C72  0EE8               	movlw	-24
 16636  010C74  0060  F0A3  FFE3   	movff	btemp,plusw1
 16637  010C7A  6A28               	clrf	btemp^0,c
 16638  010C7C  0EE9               	movlw	-23
 16639  010C7E  50E3               	movf	plusw1,w,c
 16640  010C80  2028               	addwfc	btemp^0,w,c
 16641  010C82  6E28               	movwf	btemp^0,c
 16642  010C84  0EE9               	movlw	-23
 16643  010C86  0060  F0A3  FFE3   	movff	btemp,plusw1
 16644                           
 16645                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 16646                           ;stkvar	_w @ sp[(-56)+38]
 16647  010C8C  50E1               	movf	fsr1l,w,c
 16648  010C8E  0FEE               	addlw	-18
 16649  010C90  6ED9               	movwf	fsr2l,c
 16650  010C92  50E2               	movf	fsr1h,w,c
 16651  010C94  6EDA               	movwf	fsr2h,c
 16652  010C96  0EFF               	movlw	255
 16653  010C98  22DA               	addwfc	fsr2h,f,c
 16654  010C9A  06DE               	decf	postinc2,f,c
 16655  010C9C  0E00               	movlw	0
 16656  010C9E  5ADD               	subwfb	postdec2,f,c
 16657                           
 16658                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 16659  010CA0  0E01               	movlw	1
 16660  010CA2  6E32               	movwf	(btemp+10)^0,c
 16661  010CA4  0E00               	movlw	0
 16662  010CA6  6E33               	movwf	(btemp+11)^0,c
 16663                           
 16664                           ;stkvar	_pp @ sp[(-56)+50]
 16665  010CA8  0EFA               	movlw	-6
 16666  010CAA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16667  010CB0  0EFB               	movlw	-5
 16668  010CB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16669  010CB8  D035               	goto	l11762
 16670  010CBA                     l11754:
 16671                           
 16672                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 16673                           ;stkvar	_n @ sp[(-56)+32]
 16674  010CBA  0EE8               	movlw	-24
 16675  010CBC  006F FF8C  F032    	movff	plusw1,btemp+10
 16676  010CC2  0EE9               	movlw	-23
 16677  010CC4  006F FF8C  F033    	movff	plusw1,btemp+11
 16678  010CCA  0E94               	movlw	low _dbuf
 16679  010CCC  2432               	addwf	(btemp+10)^0,w,c
 16680  010CCE  6ED9               	movwf	fsr2l,c
 16681  010CD0  0E03               	movlw	high _dbuf
 16682  010CD2  2033               	addwfc	(btemp+11)^0,w,c
 16683  010CD4  6EDA               	movwf	fsr2h,c
 16684  010CD6  0E30               	movlw	48
 16685  010CD8  6EDF               	movwf	indf2,c
 16686                           
 16687                           ;stkvar	_n @ sp[(-56)+32]
 16688  010CDA  0EE8               	movlw	-24
 16689  010CDC  50E3               	movf	plusw1,w,c
 16690  010CDE  0F01               	addlw	1
 16691  010CE0  6E28               	movwf	btemp^0,c
 16692  010CE2  0EE8               	movlw	-24
 16693  010CE4  0060  F0A3  FFE3   	movff	btemp,plusw1
 16694  010CEA  6A28               	clrf	btemp^0,c
 16695  010CEC  0EE9               	movlw	-23
 16696  010CEE  50E3               	movf	plusw1,w,c
 16697  010CF0  2028               	addwfc	btemp^0,w,c
 16698  010CF2  6E28               	movwf	btemp^0,c
 16699  010CF4  0EE9               	movlw	-23
 16700  010CF6  0060  F0A3  FFE3   	movff	btemp,plusw1
 16701                           
 16702                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 16703                           ;stkvar	_w @ sp[(-56)+38]
 16704  010CFC  50E1               	movf	fsr1l,w,c
 16705  010CFE  0FEE               	addlw	-18
 16706  010D00  6ED9               	movwf	fsr2l,c
 16707  010D02  50E2               	movf	fsr1h,w,c
 16708  010D04  6EDA               	movwf	fsr2h,c
 16709  010D06  0EFF               	movlw	255
 16710  010D08  22DA               	addwfc	fsr2h,f,c
 16711  010D0A  06DE               	decf	postinc2,f,c
 16712  010D0C  0E00               	movlw	0
 16713  010D0E  5ADD               	subwfb	postdec2,f,c
 16714                           
 16715                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 16716                           ;stkvar	_t @ sp[(-56)+52]
 16717  010D10  50E1               	movf	fsr1l,w,c
 16718  010D12  0FFC               	addlw	-4
 16719  010D14  6ED9               	movwf	fsr2l,c
 16720  010D16  50E2               	movf	fsr1h,w,c
 16721  010D18  6EDA               	movwf	fsr2h,c
 16722  010D1A  0EFF               	movlw	255
 16723  010D1C  22DA               	addwfc	fsr2h,f,c
 16724  010D1E  06DE               	decf	postinc2,f,c
 16725  010D20  0E00               	movlw	0
 16726  010D22  5ADD               	subwfb	postdec2,f,c
 16727  010D24                     l11762:
 16728                           
 16729                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 16730                           ;stkvar	_t @ sp[(-56)+52]
 16731  010D24  0EFC               	movlw	-4
 16732  010D26  006F FF8C  F028    	movff	plusw1,btemp
 16733  010D2C  0EFD               	movlw	-3
 16734  010D2E  50E3               	movf	plusw1,w,c
 16735  010D30  1028               	iorwf	btemp^0,w,c
 16736  010D32  A4D8               	btfss	status,2,c
 16737  010D34  D7C2               	goto	l11754
 16738                           
 16739                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 16740                           ;stkvar	_n @ sp[(-56)+32]
 16741  010D36  0EE8               	movlw	-24
 16742  010D38  006F FF8C  F032    	movff	plusw1,btemp+10
 16743  010D3E  0EE9               	movlw	-23
 16744  010D40  006F FF8C  F033    	movff	plusw1,btemp+11
 16745  010D46  0E94               	movlw	low _dbuf
 16746  010D48  2432               	addwf	(btemp+10)^0,w,c
 16747  010D4A  6ED9               	movwf	fsr2l,c
 16748  010D4C  0E03               	movlw	high _dbuf
 16749  010D4E  2033               	addwfc	(btemp+11)^0,w,c
 16750  010D50  6EDA               	movwf	fsr2h,c
 16751                           
 16752                           ;stkvar	_d @ sp[(-56)+44]
 16753  010D52  0EF4               	movlw	-12
 16754  010D54  50E3               	movf	plusw1,w,c
 16755  010D56  0F30               	addlw	48
 16756  010D58  6EDF               	movwf	indf2,c
 16757                           
 16758                           ;stkvar	_n @ sp[(-56)+32]
 16759  010D5A  0EE8               	movlw	-24
 16760  010D5C  50E3               	movf	plusw1,w,c
 16761  010D5E  0F01               	addlw	1
 16762  010D60  6E28               	movwf	btemp^0,c
 16763  010D62  0EE8               	movlw	-24
 16764  010D64  0060  F0A3  FFE3   	movff	btemp,plusw1
 16765  010D6A  6A28               	clrf	btemp^0,c
 16766  010D6C  0EE9               	movlw	-23
 16767  010D6E  50E3               	movf	plusw1,w,c
 16768  010D70  2028               	addwfc	btemp^0,w,c
 16769  010D72  6E28               	movwf	btemp^0,c
 16770  010D74  0EE9               	movlw	-23
 16771  010D76  0060  F0A3  FFE3   	movff	btemp,plusw1
 16772                           
 16773                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 16774                           ;stkvar	_w @ sp[(-56)+38]
 16775  010D7C  50E1               	movf	fsr1l,w,c
 16776  010D7E  0FEE               	addlw	-18
 16777  010D80  6ED9               	movwf	fsr2l,c
 16778  010D82  50E2               	movf	fsr1h,w,c
 16779  010D84  6EDA               	movwf	fsr2h,c
 16780  010D86  0EFF               	movlw	255
 16781  010D88  22DA               	addwfc	fsr2h,f,c
 16782  010D8A  06DE               	decf	postinc2,f,c
 16783  010D8C  0E00               	movlw	0
 16784  010D8E  5ADD               	subwfb	postdec2,f,c
 16785  010D90                     l11770:
 16786                           
 16787                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 16788                           ;stkvar	_u @ sp[(-56)+12]
 16789  010D90  0ED4               	movlw	-44
 16790  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 16791  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 16792  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 16793  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 16794                           
 16795                           ;stkvar	_l @ sp[(-60)+20]
 16796  010DAA  0ED8               	movlw	-40
 16797  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 16798  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 16799  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 16800  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 16801  010DC4  EC0F  F099         	call	___flmul	;wreg free
 16802  010DC8  0060  F0A3  FFE6   	movff	btemp,postinc1
 16803  010DCE  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 16804  010DD4  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 16805  010DDA  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 16806                           
 16807                           ;stkvar	_h @ sp[(-60)+24]
 16808  010DE0  0EDC               	movlw	-36
 16809  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 16810  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 16811  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 16812  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 16813  010DFA  EC3F  F0D5         	call	___flsub	;wreg free
 16814                           
 16815                           ;stkvar	_h @ sp[(-56)+24]
 16816  010DFE  0EE0               	movlw	-32
 16817  010E00  0060  F0A3  FFE3   	movff	btemp,plusw1
 16818  010E06  0EE1               	movlw	-31
 16819  010E08  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16820  010E0E  0EE2               	movlw	-30
 16821  010E10  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16822  010E16  0EE3               	movlw	-29
 16823  010E18  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16824                           
 16825                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 16826  010E1E  0E00               	movlw	0
 16827  010E20  6EE6               	movwf	postinc1,c
 16828  010E22  0E00               	movlw	0
 16829  010E24  6EE6               	movwf	postinc1,c
 16830  010E26  0E20               	movlw	32
 16831  010E28  6EE6               	movwf	postinc1,c
 16832  010E2A  0E41               	movlw	65
 16833  010E2C  6EE6               	movwf	postinc1,c
 16834                           
 16835                           ;stkvar	_u @ sp[(-60)+12]
 16836  010E2E  0ED0               	movlw	-48
 16837  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 16838  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 16839  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 16840  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 16841  010E48  EC9B  F0A4         	call	___fldiv	;wreg free
 16842                           
 16843                           ;stkvar	_u @ sp[(-56)+12]
 16844  010E4C  0ED4               	movlw	-44
 16845  010E4E  0060  F0A3  FFE3   	movff	btemp,plusw1
 16846  010E54  0ED5               	movlw	-43
 16847  010E56  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 16848  010E5C  0ED6               	movlw	-42
 16849  010E5E  0060  F0AB  FFE3   	movff	btemp+2,plusw1
 16850  010E64  0ED7               	movlw	-41
 16851  010E66  0060  F0AF  FFE3   	movff	btemp+3,plusw1
 16852                           
 16853                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 16854                           ;stkvar	_ne @ sp[(-56)+46]
 16855  010E6C  50E1               	movf	fsr1l,w,c
 16856  010E6E  0FF6               	addlw	-10
 16857  010E70  6ED9               	movwf	fsr2l,c
 16858  010E72  50E2               	movf	fsr1h,w,c
 16859  010E74  6EDA               	movwf	fsr2h,c
 16860  010E76  0EFF               	movlw	255
 16861  010E78  22DA               	addwfc	fsr2h,f,c
 16862  010E7A  06DE               	decf	postinc2,f,c
 16863  010E7C  0E00               	movlw	0
 16864  010E7E  5ADD               	subwfb	postdec2,f,c
 16865                           
 16866                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 16867                           ;stkvar	_i @ sp[(-56)+36]
 16868  010E80  0EEC               	movlw	-20
 16869  010E82  50E3               	movf	plusw1,w,c
 16870  010E84  0F01               	addlw	1
 16871  010E86  6E28               	movwf	btemp^0,c
 16872  010E88  0EEC               	movlw	-20
 16873  010E8A  0060  F0A3  FFE3   	movff	btemp,plusw1
 16874  010E90  6A28               	clrf	btemp^0,c
 16875  010E92  0EED               	movlw	-19
 16876  010E94  50E3               	movf	plusw1,w,c
 16877  010E96  2028               	addwfc	btemp^0,w,c
 16878  010E98  6E28               	movwf	btemp^0,c
 16879  010E9A  0EED               	movlw	-19
 16880  010E9C  0060  F0A3  FFE3   	movff	btemp,plusw1
 16881  010EA2                     l11778:
 16882                           
 16883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 16884                           ;stkvar	_m @ sp[(-56)+48]
 16885                           ;stkvar	_i @ sp[(-56)+36]
 16886  010EA2  50E1               	movf	fsr1l,w,c
 16887  010EA4  0FEC               	addlw	-20
 16888  010EA6  6ED9               	movwf	fsr2l,c
 16889  010EA8  50E2               	movf	fsr1h,w,c
 16890  010EAA  6EDA               	movwf	fsr2h,c
 16891  010EAC  0EFF               	movlw	255
 16892  010EAE  22DA               	addwfc	fsr2h,f,c
 16893  010EB0  0EF8               	movlw	-8
 16894  010EB2  50E3               	movf	plusw1,w,c
 16895  010EB4  5CDE               	subwf	postinc2,w,c
 16896  010EB6  50DE               	movf	postinc2,w,c
 16897  010EB8  0A80               	xorlw	128
 16898  010EBA  6E28               	movwf	btemp^0,c
 16899  010EBC  0EF9               	movlw	-7
 16900  010EBE  50E3               	movf	plusw1,w,c
 16901  010EC0  0A80               	xorlw	128
 16902  010EC2  5828               	subwfb	btemp^0,w,c
 16903  010EC4  B0D8               	btfsc	status,0,c
 16904  010EC6  D00E               	goto	u11050
 16905                           
 16906                           ;stkvar	_n @ sp[(-56)+32]
 16907  010EC8  0EE9               	movlw	-23
 16908  010ECA  BEE3               	btfsc	plusw1,7,c
 16909  010ECC  D633               	goto	l11728
 16910  010ECE  0EE9               	movlw	-23
 16911  010ED0  50E3               	movf	plusw1,w,c
 16912  010ED2  E108               	bnz	u11050
 16913  010ED4  0EE8               	movlw	-24
 16914  010ED6  006F FF8C  F028    	movff	plusw1,btemp
 16915  010EDC  0E4B               	movlw	75
 16916  010EDE  5E28               	subwf	btemp^0,f,c
 16917  010EE0  A0D8               	btfss	status,0,c
 16918  010EE2  D628               	goto	l11728
 16919  010EE4                     u11050:
 16920                           
 16921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 16922                           ;stkvar	_pp @ sp[(-56)+50]
 16923  010EE4  0EFA               	movlw	-6
 16924  010EE6  006F FF8C  F028    	movff	plusw1,btemp
 16925  010EEC  0EFB               	movlw	-5
 16926  010EEE  50E3               	movf	plusw1,w,c
 16927  010EF0  1028               	iorwf	btemp^0,w,c
 16928  010EF2  B4D8               	btfsc	status,2,c
 16929  010EF4  A84C               	btfss	_flags^0,4,c
 16930  010EF6  D021               	goto	l11790
 16931                           
 16932                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 16933                           ;stkvar	_n @ sp[(-56)+32]
 16934  010EF8  0EE8               	movlw	-24
 16935  010EFA  006F FF8C  F032    	movff	plusw1,btemp+10
 16936  010F00  0EE9               	movlw	-23
 16937  010F02  006F FF8C  F033    	movff	plusw1,btemp+11
 16938  010F08  0E94               	movlw	low _dbuf
 16939  010F0A  2432               	addwf	(btemp+10)^0,w,c
 16940  010F0C  6ED9               	movwf	fsr2l,c
 16941  010F0E  0E03               	movlw	high _dbuf
 16942  010F10  2033               	addwfc	(btemp+11)^0,w,c
 16943  010F12  6EDA               	movwf	fsr2h,c
 16944  010F14  0E2E               	movlw	46
 16945  010F16  6EDF               	movwf	indf2,c
 16946                           
 16947                           ;stkvar	_n @ sp[(-56)+32]
 16948  010F18  0EE8               	movlw	-24
 16949  010F1A  50E3               	movf	plusw1,w,c
 16950  010F1C  0F01               	addlw	1
 16951  010F1E  6E28               	movwf	btemp^0,c
 16952  010F20  0EE8               	movlw	-24
 16953  010F22  0060  F0A3  FFE3   	movff	btemp,plusw1
 16954  010F28  6A28               	clrf	btemp^0,c
 16955  010F2A  0EE9               	movlw	-23
 16956  010F2C  50E3               	movf	plusw1,w,c
 16957  010F2E  2028               	addwfc	btemp^0,w,c
 16958  010F30  6E28               	movwf	btemp^0,c
 16959  010F32  0EE9               	movlw	-23
 16960  010F34  0060  F0A3  FFE3   	movff	btemp,plusw1
 16961  010F3A                     l11790:
 16962                           
 16963                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 16964                           ;stkvar	_n @ sp[(-56)+32]
 16965  010F3A  0EE8               	movlw	-24
 16966  010F3C  006F FF8C  F032    	movff	plusw1,btemp+10
 16967  010F42  0EE9               	movlw	-23
 16968  010F44  006F FF8C  F033    	movff	plusw1,btemp+11
 16969  010F4A  0E94               	movlw	low _dbuf
 16970  010F4C  2432               	addwf	(btemp+10)^0,w,c
 16971  010F4E  6ED9               	movwf	fsr2l,c
 16972  010F50  0E03               	movlw	high _dbuf
 16973  010F52  2033               	addwfc	(btemp+11)^0,w,c
 16974  010F54  6EDA               	movwf	fsr2h,c
 16975  010F56  0E00               	movlw	0
 16976  010F58  6EDF               	movwf	indf2,c
 16977                           
 16978                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 16979                           ;stkvar	_nmode @ sp[(-56)+55]
 16980  010F5A  0EFF               	movlw	-1
 16981  010F5C  006F FF8C  F028    	movff	plusw1,btemp
 16982  010F62  0E65               	movlw	101
 16983  010F64  1828               	xorwf	btemp^0,w,c
 16984  010F66  A4D8               	btfss	status,2,c
 16985  010F68  EF16  F081         	goto	l11594
 16986                           
 16987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 16988  010F6C  0E4F               	movlw	79
 16989  010F6E  6E32               	movwf	(btemp+10)^0,c
 16990  010F70  0E00               	movlw	0
 16991  010F72  6E33               	movwf	(btemp+11)^0,c
 16992                           
 16993                           ;stkvar	_i @ sp[(-56)+36]
 16994  010F74  0EEC               	movlw	-20
 16995  010F76  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 16996  010F7C  0EED               	movlw	-19
 16997  010F7E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 16998                           
 16999                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 17000                           ;stkvar	_i @ sp[(-56)+36]
 17001  010F84  0EEC               	movlw	-20
 17002  010F86  006F FF8C  F032    	movff	plusw1,btemp+10
 17003  010F8C  0EED               	movlw	-19
 17004  010F8E  006F FF8C  F033    	movff	plusw1,btemp+11
 17005  010F94  0E94               	movlw	low _dbuf
 17006  010F96  2432               	addwf	(btemp+10)^0,w,c
 17007  010F98  6ED9               	movwf	fsr2l,c
 17008  010F9A  0E03               	movlw	high _dbuf
 17009  010F9C  2033               	addwfc	(btemp+11)^0,w,c
 17010  010F9E  6EDA               	movwf	fsr2h,c
 17011  010FA0  0E00               	movlw	0
 17012  010FA2  6EDF               	movwf	indf2,c
 17013                           
 17014                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 17015                           ;stkvar	_sign @ sp[(-56)+42]
 17016  010FA4  0EF2               	movlw	-14
 17017  010FA6  6AE3               	clrf	plusw1,c
 17018  010FA8  0EF3               	movlw	-13
 17019  010FAA  6AE3               	clrf	plusw1,c
 17020                           
 17021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 17022                           ;stkvar	_e @ sp[(-56)+34]
 17023  010FAC  0EEB               	movlw	-21
 17024  010FAE  AEE3               	btfss	plusw1,7,c
 17025  010FB0  D012               	goto	l11804
 17026                           
 17027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 17028  010FB2  0E01               	movlw	1
 17029  010FB4  6E32               	movwf	(btemp+10)^0,c
 17030  010FB6  0E00               	movlw	0
 17031  010FB8  6E33               	movwf	(btemp+11)^0,c
 17032                           
 17033                           ;stkvar	_sign @ sp[(-56)+42]
 17034  010FBA  0EF2               	movlw	-14
 17035  010FBC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17036  010FC2  0EF3               	movlw	-13
 17037  010FC4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17038                           
 17039                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 17040                           ;stkvar	_e @ sp[(-56)+34]
 17041                           ;stkvar	_e @ sp[(-56)+34]
 17042  010FCA  0EEA               	movlw	-22
 17043  010FCC  6CE3               	negf	plusw1,c
 17044  010FCE  0EEB               	movlw	-21
 17045  010FD0  1EE3               	comf	plusw1,f,c
 17046  010FD2  B0D8               	btfsc	status,0,c
 17047  010FD4  2AE3               	incf	plusw1,f,c
 17048  010FD6                     l11804:
 17049                           
 17050                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 17051  010FD6  0E02               	movlw	2
 17052  010FD8  6E32               	movwf	(btemp+10)^0,c
 17053  010FDA  0E00               	movlw	0
 17054  010FDC  6E33               	movwf	(btemp+11)^0,c
 17055                           
 17056                           ;stkvar	_p @ sp[(-56)+40]
 17057  010FDE  0EF0               	movlw	-16
 17058  010FE0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17059  010FE6  0EF1               	movlw	-15
 17060  010FE8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17061                           
 17062                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17063  010FEE  D051               	goto	l11816
 17064  010FF0                     l11806:
 17065                           
 17066                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 17067                           ;stkvar	_i @ sp[(-56)+36]
 17068  010FF0  50E1               	movf	fsr1l,w,c
 17069  010FF2  0FEC               	addlw	-20
 17070  010FF4  6ED9               	movwf	fsr2l,c
 17071  010FF6  50E2               	movf	fsr1h,w,c
 17072  010FF8  6EDA               	movwf	fsr2h,c
 17073  010FFA  0EFF               	movlw	255
 17074  010FFC  22DA               	addwfc	fsr2h,f,c
 17075  010FFE  06DE               	decf	postinc2,f,c
 17076  011000  0E00               	movlw	0
 17077  011002  5ADD               	subwfb	postdec2,f,c
 17078                           
 17079                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 17080                           ;stkvar	_i @ sp[(-56)+36]
 17081  011004  0EEC               	movlw	-20
 17082  011006  006F FF8C  F032    	movff	plusw1,btemp+10
 17083  01100C  0EED               	movlw	-19
 17084  01100E  006F FF8C  F033    	movff	plusw1,btemp+11
 17085  011014  0E94               	movlw	low _dbuf
 17086  011016  2432               	addwf	(btemp+10)^0,w,c
 17087  011018  6ED9               	movwf	fsr2l,c
 17088  01101A  0E03               	movlw	high _dbuf
 17089  01101C  2033               	addwfc	(btemp+11)^0,w,c
 17090  01101E  6EDA               	movwf	fsr2h,c
 17091  011020  0E0A               	movlw	10
 17092  011022  6EE6               	movwf	postinc1,c
 17093  011024  0E00               	movlw	0
 17094  011026  6EE6               	movwf	postinc1,c
 17095                           
 17096                           ;stkvar	_e @ sp[(-58)+34]
 17097  011028  0EE8               	movlw	-24
 17098  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 17099  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 17100  011036  ECE1  F0C7         	call	___awmod	;wreg free
 17101  01103A  5028               	movf	btemp^0,w,c
 17102  01103C  0F30               	addlw	48
 17103  01103E  6EDF               	movwf	indf2,c
 17104                           
 17105                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 17106  011040  0E0A               	movlw	10
 17107  011042  6EE6               	movwf	postinc1,c
 17108  011044  0E00               	movlw	0
 17109  011046  6EE6               	movwf	postinc1,c
 17110                           
 17111                           ;stkvar	_e @ sp[(-58)+34]
 17112  011048  0EE8               	movlw	-24
 17113  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 17114  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 17115  011056  ECD3  F0C4         	call	___awdiv	;wreg free
 17116                           
 17117                           ;stkvar	_e @ sp[(-56)+34]
 17118  01105A  0EEA               	movlw	-22
 17119  01105C  0060  F0A3  FFE3   	movff	btemp,plusw1
 17120  011062  0EEB               	movlw	-21
 17121  011064  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 17122                           
 17123                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 17124                           ;stkvar	_p @ sp[(-56)+40]
 17125  01106A  50E1               	movf	fsr1l,w,c
 17126  01106C  0FF0               	addlw	-16
 17127  01106E  6ED9               	movwf	fsr2l,c
 17128  011070  50E2               	movf	fsr1h,w,c
 17129  011072  6EDA               	movwf	fsr2h,c
 17130  011074  0EFF               	movlw	255
 17131  011076  22DA               	addwfc	fsr2h,f,c
 17132  011078  06DE               	decf	postinc2,f,c
 17133  01107A  0E00               	movlw	0
 17134  01107C  5ADD               	subwfb	postdec2,f,c
 17135                           
 17136                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 17137                           ;stkvar	_w @ sp[(-56)+38]
 17138  01107E  50E1               	movf	fsr1l,w,c
 17139  011080  0FEE               	addlw	-18
 17140  011082  6ED9               	movwf	fsr2l,c
 17141  011084  50E2               	movf	fsr1h,w,c
 17142  011086  6EDA               	movwf	fsr2h,c
 17143  011088  0EFF               	movlw	255
 17144  01108A  22DA               	addwfc	fsr2h,f,c
 17145  01108C  06DE               	decf	postinc2,f,c
 17146  01108E  0E00               	movlw	0
 17147  011090  5ADD               	subwfb	postdec2,f,c
 17148  011092                     l11816:
 17149                           
 17150                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 17151                           ;stkvar	_e @ sp[(-56)+34]
 17152  011092  0EEA               	movlw	-22
 17153  011094  006F FF8C  F028    	movff	plusw1,btemp
 17154  01109A  0EEB               	movlw	-21
 17155  01109C  50E3               	movf	plusw1,w,c
 17156  01109E  1028               	iorwf	btemp^0,w,c
 17157  0110A0  A4D8               	btfss	status,2,c
 17158  0110A2  D7A6               	goto	l11806
 17159                           
 17160                           ;stkvar	_p @ sp[(-56)+40]
 17161  0110A4  0EF1               	movlw	-15
 17162  0110A6  BEE3               	btfsc	plusw1,7,c
 17163  0110A8  D007               	goto	u11110
 17164  0110AA  0EF1               	movlw	-15
 17165  0110AC  50E3               	movf	plusw1,w,c
 17166  0110AE  E1A0               	bnz	l11806
 17167  0110B0  0EF0               	movlw	-16
 17168  0110B2  04E3               	decf	plusw1,w,c
 17169  0110B4  B0D8               	btfsc	status,0,c
 17170  0110B6  D79C               	goto	l11806
 17171  0110B8                     u11110:
 17172                           
 17173                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 17174                           ;stkvar	_i @ sp[(-56)+36]
 17175  0110B8  50E1               	movf	fsr1l,w,c
 17176  0110BA  0FEC               	addlw	-20
 17177  0110BC  6ED9               	movwf	fsr2l,c
 17178  0110BE  50E2               	movf	fsr1h,w,c
 17179  0110C0  6EDA               	movwf	fsr2h,c
 17180  0110C2  0EFF               	movlw	255
 17181  0110C4  22DA               	addwfc	fsr2h,f,c
 17182  0110C6  06DE               	decf	postinc2,f,c
 17183  0110C8  0E00               	movlw	0
 17184  0110CA  5ADD               	subwfb	postdec2,f,c
 17185                           
 17186                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 17187                           ;stkvar	_sign @ sp[(-56)+42]
 17188  0110CC  0EF2               	movlw	-14
 17189  0110CE  006F FF8C  F028    	movff	plusw1,btemp
 17190  0110D4  0EF3               	movlw	-13
 17191  0110D6  50E3               	movf	plusw1,w,c
 17192  0110D8  1028               	iorwf	btemp^0,w,c
 17193  0110DA  A4D8               	btfss	status,2,c
 17194  0110DC  D002               	goto	l11826
 17195  0110DE  0E2B               	movlw	43
 17196  0110E0  D001               	goto	L16
 17197  0110E2                     l11826:
 17198  0110E2  0E2D               	movlw	45
 17199  0110E4                     L16:
 17200  0110E4  6E32               	movwf	(btemp+10)^0,c
 17201  0110E6  0E00               	movlw	0
 17202  0110E8  6E33               	movwf	(btemp+11)^0,c
 17203                           
 17204                           ;stkvar	_efgtoa$5342 @ sp[(-56)+4]
 17205  0110EA  0ECC               	movlw	-52
 17206  0110EC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17207  0110F2  0ECD               	movlw	-51
 17208  0110F4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17209                           
 17210                           ;stkvar	_efgtoa$5342 @ sp[(-56)+4]
 17211                           ;stkvar	_i @ sp[(-56)+36]
 17212  0110FA  0EEC               	movlw	-20
 17213  0110FC  006F FF8C  F032    	movff	plusw1,btemp+10
 17214  011102  0EED               	movlw	-19
 17215  011104  006F FF8C  F033    	movff	plusw1,btemp+11
 17216  01110A  0E94               	movlw	low _dbuf
 17217  01110C  2432               	addwf	(btemp+10)^0,w,c
 17218  01110E  6ED9               	movwf	fsr2l,c
 17219  011110  0E03               	movlw	high _dbuf
 17220  011112  2033               	addwfc	(btemp+11)^0,w,c
 17221  011114  6EDA               	movwf	fsr2h,c
 17222  011116  0ECC               	movlw	-52
 17223  011118  006F FF8F FFDF     	movff	plusw1,indf2
 17224                           
 17225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 17226                           ;stkvar	_w @ sp[(-56)+38]
 17227  01111E  50E1               	movf	fsr1l,w,c
 17228  011120  0FEE               	addlw	-18
 17229  011122  6ED9               	movwf	fsr2l,c
 17230  011124  50E2               	movf	fsr1h,w,c
 17231  011126  6EDA               	movwf	fsr2h,c
 17232  011128  0EFF               	movlw	255
 17233  01112A  22DA               	addwfc	fsr2h,f,c
 17234  01112C  06DE               	decf	postinc2,f,c
 17235  01112E  0E00               	movlw	0
 17236  011130  5ADD               	subwfb	postdec2,f,c
 17237                           
 17238                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 17239                           ;stkvar	_i @ sp[(-56)+36]
 17240  011132  50E1               	movf	fsr1l,w,c
 17241  011134  0FEC               	addlw	-20
 17242  011136  6ED9               	movwf	fsr2l,c
 17243  011138  50E2               	movf	fsr1h,w,c
 17244  01113A  6EDA               	movwf	fsr2h,c
 17245  01113C  0EFF               	movlw	255
 17246  01113E  22DA               	addwfc	fsr2h,f,c
 17247  011140  06DE               	decf	postinc2,f,c
 17248  011142  0E00               	movlw	0
 17249  011144  5ADD               	subwfb	postdec2,f,c
 17250  011146  0EBF               	movlw	191
 17251  011148  6E32               	movwf	(btemp+10)^0,c
 17252  01114A  0EFF               	movlw	255
 17253  01114C  6E33               	movwf	(btemp+11)^0,c
 17254                           
 17255                           ;stkvar	_c @ sp[(-56)+-7]
 17256  01114E  0EC1               	movlw	-63
 17257  011150  50E3               	movf	plusw1,w,c
 17258  011152  6E30               	movwf	(btemp+8)^0,c
 17259  011154  6A31               	clrf	(btemp+9)^0,c
 17260  011156  5032               	movf	(btemp+10)^0,w,c
 17261  011158  2630               	addwf	(btemp+8)^0,f,c
 17262  01115A  5033               	movf	(btemp+11)^0,w,c
 17263  01115C  2231               	addwfc	(btemp+9)^0,f,c
 17264  01115E  5031               	movf	(btemp+9)^0,w,c
 17265  011160  E106               	bnz	u11130
 17266  011162  0E1A               	movlw	26
 17267  011164  5C30               	subwf	(btemp+8)^0,w,c
 17268  011166  B0D8               	btfsc	status,0,c
 17269  011168  D002               	goto	u11130
 17270  01116A  0E01               	movlw	1
 17271  01116C  D001               	goto	u11140
 17272  01116E                     u11130:
 17273  01116E  0E00               	movlw	0
 17274  011170                     u11140:
 17275  011170  6E32               	movwf	(btemp+10)^0,c
 17276  011172  6A33               	clrf	(btemp+11)^0,c
 17277                           
 17278                           ;stkvar	_efgtoa$5344 @ sp[(-56)+0]
 17279  011174  0EC8               	movlw	-56
 17280  011176  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17281  01117C  0EC9               	movlw	-55
 17282  01117E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17283                           
 17284                           ;stkvar	_efgtoa$5344 @ sp[(-56)+0]
 17285  011184  0EC8               	movlw	-56
 17286  011186  006F FF8C  F028    	movff	plusw1,btemp
 17287  01118C  0EC9               	movlw	-55
 17288  01118E  50E3               	movf	plusw1,w,c
 17289  011190  1028               	iorwf	btemp^0,w,c
 17290  011192  A4D8               	btfss	status,2,c
 17291  011194  D002               	goto	l11842
 17292  011196  0E65               	movlw	101
 17293  011198  D001               	goto	L17
 17294  01119A                     l11842:
 17295  01119A  0E45               	movlw	69
 17296  01119C                     L17:
 17297  01119C  6E32               	movwf	(btemp+10)^0,c
 17298  01119E  0E00               	movlw	0
 17299  0111A0  6E33               	movwf	(btemp+11)^0,c
 17300                           
 17301                           ;stkvar	_efgtoa$5343 @ sp[(-56)+2]
 17302  0111A2  0ECA               	movlw	-54
 17303  0111A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17304  0111AA  0ECB               	movlw	-53
 17305  0111AC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17306                           
 17307                           ;stkvar	_efgtoa$5343 @ sp[(-56)+2]
 17308                           ;stkvar	_i @ sp[(-56)+36]
 17309  0111B2  0EEC               	movlw	-20
 17310  0111B4  006F FF8C  F032    	movff	plusw1,btemp+10
 17311  0111BA  0EED               	movlw	-19
 17312  0111BC  006F FF8C  F033    	movff	plusw1,btemp+11
 17313  0111C2  0E94               	movlw	low _dbuf
 17314  0111C4  2432               	addwf	(btemp+10)^0,w,c
 17315  0111C6  6ED9               	movwf	fsr2l,c
 17316  0111C8  0E03               	movlw	high _dbuf
 17317  0111CA  2033               	addwfc	(btemp+11)^0,w,c
 17318  0111CC  6EDA               	movwf	fsr2h,c
 17319  0111CE  0ECA               	movlw	-54
 17320  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 17321                           
 17322                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 17323                           ;stkvar	_w @ sp[(-56)+38]
 17324  0111D6  50E1               	movf	fsr1l,w,c
 17325  0111D8  0FEE               	addlw	-18
 17326  0111DA  6ED9               	movwf	fsr2l,c
 17327  0111DC  50E2               	movf	fsr1h,w,c
 17328  0111DE  6EDA               	movwf	fsr2h,c
 17329  0111E0  0EFF               	movlw	255
 17330  0111E2  22DA               	addwfc	fsr2h,f,c
 17331  0111E4  06DE               	decf	postinc2,f,c
 17332  0111E6  0E00               	movlw	0
 17333  0111E8  5ADD               	subwfb	postdec2,f,c
 17334                           
 17335                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 17336                           ;stkvar	_i @ sp[(-56)+36]
 17337  0111EA  0EEC               	movlw	-20
 17338  0111EC  006F FF8C  F032    	movff	plusw1,btemp+10
 17339  0111F2  0EED               	movlw	-19
 17340  0111F4  006F FF8C  F033    	movff	plusw1,btemp+11
 17341  0111FA  0E94               	movlw	low _dbuf
 17342  0111FC  2432               	addwf	(btemp+10)^0,w,c
 17343  0111FE  6E30               	movwf	(btemp+8)^0,c
 17344  011200  0E03               	movlw	high _dbuf
 17345  011202  2033               	addwfc	(btemp+11)^0,w,c
 17346  011204  6E31               	movwf	(btemp+9)^0,c
 17347  011206  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 17348  01120C  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 17349                           
 17350                           ;stkvar	_n @ sp[(-58)+32]
 17351  011212  0E94               	movlw	low _dbuf
 17352  011214  6E32               	movwf	(btemp+10)^0,c
 17353  011216  0E03               	movlw	high _dbuf
 17354  011218  6E33               	movwf	(btemp+11)^0,c
 17355  01121A  0EE6               	movlw	-26
 17356  01121C  50E3               	movf	plusw1,w,c
 17357  01121E  2632               	addwf	(btemp+10)^0,f,c
 17358  011220  0EE7               	movlw	-25
 17359  011222  50E3               	movf	plusw1,w,c
 17360  011224  2233               	addwfc	(btemp+11)^0,f,c
 17361  011226  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 17362  01122C  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 17363  011232  EC70  F0CC         	call	_strcpy	;wreg free
 17364  011236  EF16  F081         	goto	l11594
 17365  01123A                     l2156:
 17366                           
 17367                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 17368  01123A  0EC1               	movlw	193
 17369  01123C  26E1               	addwf	fsr1l,f,c
 17370  01123E  0EFF               	movlw	255
 17371  011240  22E2               	addwfc	fsr1h,f,c
 17372  011242  0012               	return		;funcret
 17373  011244                     __end_of_efgtoa:
 17374                           	opt callstack 0
 17375                           
 17376 ;; *************** function _tolower *****************
 17377 ;; Defined at:
 17378 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 17379 ;; Parameters:    Size  Location     Type
 17380 ;;  c               2  [STACK] int 
 17381 ;; Auto vars:     Size  Location     Type
 17382 ;;		None
 17383 ;; Return value:  Size  Location     Type
 17384 ;;                  2  [STACK] int 
 17385 ;; Registers used:
 17386 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 17387 ;; Tracked objects:
 17388 ;;		On entry : 0/0
 17389 ;;		On exit  : 0/0
 17390 ;;		Unchanged: 0/0
 17391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17393 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17395 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17396 ;;Total ram usage:        0 bytes
 17397 ;; Hardware stack levels used:    1
 17398 ;; Hardware stack levels required when called:   16
 17399 ;; This function calls:
 17400 ;;		_isupper
 17401 ;; This function is called by:
 17402 ;;		_efgtoa
 17403 ;;		_vfpfcnvrt
 17404 ;; This function uses a reentrant model
 17405 ;;
 17406                           
 17407                           	psect	text56
 17408  01A324                     __ptext56:
 17409                           	opt callstack 0
 17410  01A324                     _tolower:
 17411                           	opt callstack 0
 17412                           
 17413                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17414  01A324  52E6               	movf	postinc1,f,c
 17415  01A326  52E6               	movf	postinc1,f,c
 17416                           
 17417                           ;stkvar	_c @ sp[(-2)+-2]
 17418                           
 17419                           ;incstack = 0
 17420 ;; hardware stack exceeded
 17421  01A328  0EFC               	movlw	-4
 17422  01A32A  50E3               	movf	plusw1,w,c
 17423  01A32C  0FBF               	addlw	191
 17424  01A32E  6E32               	movwf	(btemp+10)^0,c
 17425  01A330  0EFD               	movlw	-3
 17426  01A332  006F FF8C  F033    	movff	plusw1,btemp+11
 17427  01A338  0EFF               	movlw	255
 17428  01A33A  2233               	addwfc	(btemp+11)^0,f,c
 17429  01A33C  5033               	movf	(btemp+11)^0,w,c
 17430  01A33E  E106               	bnz	u5830
 17431  01A340  0E1A               	movlw	26
 17432  01A342  5C32               	subwf	(btemp+10)^0,w,c
 17433  01A344  B0D8               	btfsc	status,0,c
 17434  01A346  D002               	goto	u5830
 17435  01A348  0E01               	movlw	1
 17436  01A34A  D001               	goto	u5840
 17437  01A34C                     u5830:
 17438  01A34C  0E00               	movlw	0
 17439  01A34E                     u5840:
 17440  01A34E  6E32               	movwf	(btemp+10)^0,c
 17441  01A350  6A33               	clrf	(btemp+11)^0,c
 17442                           
 17443                           ;stkvar	_tolower$6163 @ sp[(-2)+0]
 17444  01A352  0EFE               	movlw	-2
 17445  01A354  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17446  01A35A  0EFF               	movlw	-1
 17447  01A35C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17448                           
 17449                           ;stkvar	_tolower$6163 @ sp[(-2)+0]
 17450  01A362  0EFE               	movlw	-2
 17451  01A364  006F FF8C  F028    	movff	plusw1,btemp
 17452  01A36A  0EFF               	movlw	-1
 17453  01A36C  50E3               	movf	plusw1,w,c
 17454  01A36E  1028               	iorwf	btemp^0,w,c
 17455  01A370  B4D8               	btfsc	status,2,c
 17456  01A372  D00D               	goto	l7776
 17457                           
 17458                           ;stkvar	_c @ sp[(-2)+-2]
 17459  01A374  0EFC               	movlw	-4
 17460  01A376  006F FF8C  F028    	movff	plusw1,btemp
 17461  01A37C  0EFD               	movlw	-3
 17462  01A37E  006F FF8C  F029    	movff	plusw1,btemp+1
 17463  01A384  0E20               	movlw	32
 17464  01A386  1228               	iorwf	btemp^0,f,c
 17465  01A388  0E00               	movlw	0
 17466  01A38A  1229               	iorwf	(btemp+1)^0,f,c
 17467  01A38C  D008               	goto	l3428
 17468  01A38E                     l7776:
 17469                           
 17470                           ;stkvar	_c @ sp[(-2)+-2]
 17471  01A38E  0EFC               	movlw	-4
 17472  01A390  006F FF8C  F028    	movff	plusw1,btemp
 17473  01A396  0EFD               	movlw	-3
 17474  01A398  006F FF8C  F029    	movff	plusw1,btemp+1
 17475  01A39E                     l3428:
 17476                           
 17477                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17478  01A39E  52E5               	movf	postdec1,f,c
 17479  01A3A0  52E5               	movf	postdec1,f,c
 17480  01A3A2  52E5               	movf	postdec1,f,c
 17481  01A3A4  52E5               	movf	postdec1,f,c
 17482  01A3A6  0012               	return		;funcret
 17483  01A3A8                     __end_of_tolower:
 17484                           	opt callstack 0
 17485                           
 17486 ;; *************** function _isupper *****************
 17487 ;; Defined at:
 17488 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;  c               2  [STACK] int 
 17491 ;; Auto vars:     Size  Location     Type
 17492 ;;		None
 17493 ;; Return value:  Size  Location     Type
 17494 ;;                  2  [STACK] int 
 17495 ;; Registers used:
 17496 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 17497 ;; Tracked objects:
 17498 ;;		On entry : 0/0
 17499 ;;		On exit  : 0/0
 17500 ;;		Unchanged: 0/0
 17501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17506 ;;Total ram usage:        0 bytes
 17507 ;; Hardware stack levels used:    1
 17508 ;; Hardware stack levels required when called:   15
 17509 ;; This function calls:
 17510 ;;		Nothing
 17511 ;; This function is called by:
 17512 ;;		_efgtoa
 17513 ;;		_xtoa
 17514 ;;		_vfpfcnvrt
 17515 ;;		_tolower
 17516 ;; This function uses a reentrant model
 17517 ;;
 17518                           
 17519                           	psect	text57
 17520  01AF6A                     __ptext57:
 17521                           	opt callstack 0
 17522  01AF6A                     _isupper:
 17523                           	opt callstack 0
 17524                           
 17525                           ;stkvar	_c @ sp[(0)+-2]
 17526                           
 17527                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17528                           ;incstack = 0
 17529 ;; hardware stack exceeded
 17530  01AF6A  0EFE               	movlw	-2
 17531  01AF6C  50E3               	movf	plusw1,w,c
 17532  01AF6E  0FBF               	addlw	191
 17533  01AF70  6E32               	movwf	(btemp+10)^0,c
 17534  01AF72  0EFF               	movlw	-1
 17535  01AF74  006F FF8C  F033    	movff	plusw1,btemp+11
 17536  01AF7A  0EFF               	movlw	255
 17537  01AF7C  2233               	addwfc	(btemp+11)^0,f,c
 17538  01AF7E  5033               	movf	(btemp+11)^0,w,c
 17539  01AF80  E106               	bnz	u5230
 17540  01AF82  0E1A               	movlw	26
 17541  01AF84  5C32               	subwf	(btemp+10)^0,w,c
 17542  01AF86  B0D8               	btfsc	status,0,c
 17543  01AF88  D002               	goto	u5230
 17544  01AF8A  0E01               	movlw	1
 17545  01AF8C  D001               	goto	u5240
 17546  01AF8E                     u5230:
 17547  01AF8E  0E00               	movlw	0
 17548  01AF90                     u5240:
 17549  01AF90  6E28               	movwf	btemp^0,c
 17550  01AF92  6A29               	clrf	(btemp+1)^0,c
 17551                           
 17552                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 17553  01AF94  52E5               	movf	postdec1,f,c
 17554  01AF96  52E5               	movf	postdec1,f,c
 17555  01AF98  0012               	return		;funcret
 17556  01AF9A                     __end_of_isupper:
 17557                           	opt callstack 0
 17558                           
 17559 ;; *************** function _strcpy *****************
 17560 ;; Defined at:
 17561 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 17562 ;; Parameters:    Size  Location     Type
 17563 ;;  dest            2  [STACK] PTR unsigned char 
 17564 ;;		 -> dbuf(80), 
 17565 ;;  src             2  [STACK] PTR const unsigned char 
 17566 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17567 ;;		 -> dbuf(80), 
 17568 ;; Auto vars:     Size  Location     Type
 17569 ;;  d               2  [STACK] PTR unsigned char 
 17570 ;;		 -> dbuf(80), 
 17571 ;;  s               2  [STACK] PTR const unsigned char 
 17572 ;;		 -> STR_71(4), STR_70(4), STR_67(4), STR_66(4), 
 17573 ;;		 -> dbuf(80), 
 17574 ;; Return value:  Size  Location     Type
 17575 ;;                  2  [STACK] PTR unsigned char 
 17576 ;; Registers used:
 17577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 17578 ;; Tracked objects:
 17579 ;;		On entry : 0/0
 17580 ;;		On exit  : 0/0
 17581 ;;		Unchanged: 0/0
 17582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17587 ;;Total ram usage:        0 bytes
 17588 ;; Hardware stack levels used:    1
 17589 ;; Hardware stack levels required when called:   15
 17590 ;; This function calls:
 17591 ;;		Nothing
 17592 ;; This function is called by:
 17593 ;;		_efgtoa
 17594 ;; This function uses a reentrant model
 17595 ;;
 17596                           
 17597                           	psect	text58
 17598  0198E0                     __ptext58:
 17599                           	opt callstack 0
 17600  0198E0                     _strcpy:
 17601                           	opt callstack 0
 17602                           
 17603                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17604  0198E0  52E6               	movf	postinc1,f,c
 17605  0198E2  52E6               	movf	postinc1,f,c
 17606  0198E4  52E6               	movf	postinc1,f,c
 17607  0198E6  52E6               	movf	postinc1,f,c
 17608                           
 17609                           ;stkvar	_src @ sp[(-4)+-4]
 17610                           
 17611                           ;incstack = 0
 17612 ;; hardware stack exceeded
 17613  0198E8  0EF8               	movlw	-8
 17614  0198EA  006F FF8C  F032    	movff	plusw1,btemp+10
 17615  0198F0  0EF9               	movlw	-7
 17616  0198F2  006F FF8C  F033    	movff	plusw1,btemp+11
 17617                           
 17618                           ;stkvar	_s @ sp[(-4)+2]
 17619  0198F8  0EFF               	movlw	-1
 17620  0198FA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17621  019900  0EFE               	movlw	-2
 17622  019902  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17623                           
 17624                           ;stkvar	_dest @ sp[(-4)+-2]
 17625  019908  0EFA               	movlw	-6
 17626  01990A  006F FF8C  F032    	movff	plusw1,btemp+10
 17627  019910  0EFB               	movlw	-5
 17628  019912  006F FF8C  F033    	movff	plusw1,btemp+11
 17629                           
 17630                           ;stkvar	_d @ sp[(-4)+0]
 17631  019918  0EFD               	movlw	-3
 17632  01991A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17633  019920  0EFC               	movlw	-4
 17634  019922  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17635  019928                     l11426:
 17636                           
 17637                           ;stkvar	_s @ sp[(-4)+2]
 17638  019928  50E1               	movf	fsr1l,w,c
 17639  01992A  0FFE               	addlw	-2
 17640  01992C  6ED9               	movwf	fsr2l,c
 17641  01992E  50E2               	movf	fsr1h,w,c
 17642  019930  6EDA               	movwf	fsr2h,c
 17643  019932  0EFF               	movlw	255
 17644  019934  22DA               	addwfc	fsr2h,f,c
 17645  019936  006F FF7C  F032    	movff	indf2,btemp+10
 17646  01993C  0E01               	movlw	1
 17647  01993E  26DE               	addwf	postinc2,f,c
 17648  019940  006F FF7C  F033    	movff	indf2,btemp+11
 17649  019946  0E00               	movlw	0
 17650  019948  22DD               	addwfc	postdec2,f,c
 17651  01994A  0060  F0CB  FFF6   	movff	btemp+10,tblptrl
 17652  019950  0060  F0CF  FFF7   	movff	btemp+11,tblptrh
 17653  019956  0E00               	movlw	low (__mediumconst shr (0+16))
 17654  019958  6EF8               	movwf	tblptru,c
 17655                           
 17656                           ;stkvar	_d @ sp[(-4)+0]
 17657  01995A  50E1               	movf	fsr1l,w,c
 17658  01995C  0FFC               	addlw	-4
 17659  01995E  6ED9               	movwf	fsr2l,c
 17660  019960  50E2               	movf	fsr1h,w,c
 17661  019962  6EDA               	movwf	fsr2h,c
 17662  019964  0EFF               	movlw	255
 17663  019966  22DA               	addwfc	fsr2h,f,c
 17664  019968  006F FF7C  F032    	movff	indf2,btemp+10
 17665  01996E  0E01               	movlw	1
 17666  019970  26DE               	addwf	postinc2,f,c
 17667  019972  006F FF7C  F033    	movff	indf2,btemp+11
 17668  019978  0E00               	movlw	0
 17669  01997A  22DD               	addwfc	postdec2,f,c
 17670  01997C  0060  F0CB  FFD9   	movff	btemp+10,fsr2l
 17671  019982  0060  F0CF  FFDA   	movff	btemp+11,fsr2h
 17672  019988  0E1F               	movlw	(high __ramtop+-1)
 17673  01998A  64F7               	cpfsgt	tblptrh,c
 17674  01998C  D003               	bra	u10397
 17675  01998E  0008               	tblrd		*
 17676  019990  50F5               	movf	tablat,w,c
 17677  019992  D007               	bra	u10390
 17678  019994                     u10397:
 17679  019994  006F FFDB FFE9     	movff	tblptrl,fsr0l
 17680  01999A  006F FFDF FFEA     	movff	tblptrh,fsr0h
 17681  0199A0  50EF               	movf	indf0,w,c
 17682  0199A2                     u10390:
 17683  0199A2  6EDF               	movwf	indf2,c
 17684  0199A4  50DF               	movf	indf2,w,c
 17685  0199A6  A4D8               	btfss	status,2,c
 17686  0199A8  D7BF               	goto	l11426
 17687                           
 17688                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 17689  0199AA  0EF8               	movlw	248
 17690  0199AC  26E1               	addwf	fsr1l,f,c
 17691  0199AE  0EFF               	movlw	255
 17692  0199B0  22E2               	addwfc	fsr1h,f,c
 17693  0199B2  0012               	return		;funcret
 17694  0199B4                     __end_of_strcpy:
 17695                           	opt callstack 0
 17696                           
 17697 ;; *************** function _floorf *****************
 17698 ;; Defined at:
 17699 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 17700 ;; Parameters:    Size  Location     Type
 17701 ;;  x               4  [STACK] float 
 17702 ;; Auto vars:     Size  Location     Type
 17703 ;;  u               4  [STACK] struct .
 17704 ;;  m               4  [STACK] unsigned long 
 17705 ;;  e               2  [STACK] int 
 17706 ;; Return value:  Size  Location     Type
 17707 ;;                  4  [STACK] float 
 17708 ;; Registers used:
 17709 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 17710 ;; Tracked objects:
 17711 ;;		On entry : 0/0
 17712 ;;		On exit  : 0/0
 17713 ;;		Unchanged: 0/0
 17714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17719 ;;Total ram usage:        0 bytes
 17720 ;; Hardware stack levels used:    1
 17721 ;; Hardware stack levels required when called:   15
 17722 ;; This function calls:
 17723 ;;		Nothing
 17724 ;; This function is called by:
 17725 ;;		_efgtoa
 17726 ;; This function uses a reentrant model
 17727 ;;
 17728                           
 17729                           	psect	text59
 17730  015F38                     __ptext59:
 17731                           	opt callstack 0
 17732  015F38                     _floorf:
 17733                           	opt callstack 0
 17734                           
 17735                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17736  015F38  0E0A               	movlw	10
 17737  015F3A  26E1               	addwf	fsr1l,f,c
 17738  015F3C  0E00               	movlw	0
 17739  015F3E  22E2               	addwfc	fsr1h,f,c
 17740                           
 17741                           ;incstack = 0
 17742 ;; hardware stack exceeded
 17743  015F40  0060  F1E8  F030   	movff	floorf@F524,btemp+8
 17744  015F46  0060  F1EC  F031   	movff	floorf@F524+1,btemp+9
 17745  015F4C  0060  F1F0  F032   	movff	floorf@F524+2,btemp+10
 17746  015F52  0060  F1F4  F033   	movff	floorf@F524+3,btemp+11
 17747                           
 17748                           ;stkvar	_u @ sp[(-10)+0]
 17749  015F58  0EF6               	movlw	-10
 17750  015F5A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17751  015F60  0EF7               	movlw	-9
 17752  015F62  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17753  015F68  0EF8               	movlw	-8
 17754  015F6A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17755  015F70  0EF9               	movlw	-7
 17756  015F72  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17757                           
 17758                           ;stkvar	_x @ sp[(-10)+-4]
 17759  015F78  0EF2               	movlw	-14
 17760  015F7A  006F FF8C  F030    	movff	plusw1,btemp+8
 17761  015F80  0EF3               	movlw	-13
 17762  015F82  006F FF8C  F031    	movff	plusw1,btemp+9
 17763  015F88  0EF4               	movlw	-12
 17764  015F8A  006F FF8C  F032    	movff	plusw1,btemp+10
 17765  015F90  0EF5               	movlw	-11
 17766  015F92  006F FF8C  F033    	movff	plusw1,btemp+11
 17767                           
 17768                           ;stkvar	_u @ sp[(-10)+0]
 17769  015F98  0EF6               	movlw	-10
 17770  015F9A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17771  015FA0  0EF7               	movlw	-9
 17772  015FA2  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17773  015FA8  0EF8               	movlw	-8
 17774  015FAA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 17775  015FB0  0EF9               	movlw	-7
 17776  015FB2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 17777  015FB8  0E81               	movlw	129
 17778  015FBA  6E32               	movwf	(btemp+10)^0,c
 17779  015FBC  0EFF               	movlw	255
 17780  015FBE  6E33               	movwf	(btemp+11)^0,c
 17781                           
 17782                           ;stkvar	_u @ sp[(-10)+0]
 17783  015FC0  0EF6               	movlw	-10
 17784  015FC2  006F FF8C  F02C    	movff	plusw1,btemp+4
 17785  015FC8  0EF7               	movlw	-9
 17786  015FCA  006F FF8C  F02D    	movff	plusw1,btemp+5
 17787  015FD0  0EF8               	movlw	-8
 17788  015FD2  006F FF8C  F02E    	movff	plusw1,btemp+6
 17789  015FD8  0EF9               	movlw	-7
 17790  015FDA  006F FF8C  F02F    	movff	plusw1,btemp+7
 17791  015FE0  0E18               	movlw	24
 17792  015FE2  D005               	goto	u5860
 17793  015FE4                     u5865:
 17794  015FE4  90D8               	bcf	status,0,c
 17795  015FE6  322F               	rrcf	(btemp+7)^0,f,c
 17796  015FE8  322E               	rrcf	(btemp+6)^0,f,c
 17797  015FEA  322D               	rrcf	(btemp+5)^0,f,c
 17798  015FEC  322C               	rrcf	(btemp+4)^0,f,c
 17799  015FEE                     u5860:
 17800  015FEE  2EE8               	decfsz	wreg,f,c
 17801  015FF0  D7F9               	goto	u5865
 17802  015FF2  0060  F0B0  F030   	movff	btemp+4,btemp+8
 17803  015FF8  0060  F0B4  F031   	movff	btemp+5,btemp+9
 17804  015FFE  0EFF               	movlw	255
 17805  016000  1630               	andwf	(btemp+8)^0,f,c
 17806  016002  0E00               	movlw	0
 17807  016004  1631               	andwf	(btemp+9)^0,f,c
 17808  016006  5032               	movf	(btemp+10)^0,w,c
 17809  016008  2630               	addwf	(btemp+8)^0,f,c
 17810  01600A  5033               	movf	(btemp+11)^0,w,c
 17811  01600C  2231               	addwfc	(btemp+9)^0,f,c
 17812                           
 17813                           ;stkvar	_e @ sp[(-10)+8]
 17814  01600E  0EFE               	movlw	-2
 17815  016010  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 17816  016016  0EFF               	movlw	-1
 17817  016018  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 17818                           
 17819                           ;stkvar	_e @ sp[(-10)+8]
 17820  01601E  0EFF               	movlw	-1
 17821  016020  BEE3               	btfsc	plusw1,7,c
 17822  016022  D019               	goto	l7790
 17823  016024  0EFF               	movlw	-1
 17824  016026  50E3               	movf	plusw1,w,c
 17825  016028  E108               	bnz	u5870
 17826  01602A  0EFE               	movlw	-2
 17827  01602C  006F FF8C  F028    	movff	plusw1,btemp
 17828  016032  0E17               	movlw	23
 17829  016034  5E28               	subwf	btemp^0,f,c
 17830  016036  A0D8               	btfss	status,0,c
 17831  016038  D00E               	goto	l7790
 17832  01603A                     u5870:
 17833                           
 17834                           ;stkvar	_x @ sp[(-10)+-4]
 17835  01603A  0EF2               	movlw	-14
 17836  01603C  006F FF8C  F028    	movff	plusw1,btemp
 17837  016042  0EF3               	movlw	-13
 17838  016044  006F FF8C  F029    	movff	plusw1,btemp+1
 17839  01604A  0EF4               	movlw	-12
 17840  01604C  006F FF8C  F02A    	movff	plusw1,btemp+2
 17841  016052  0EF5               	movlw	-11
 17842  016054  D11F               	goto	L18
 17843  016056                     l7790:
 17844                           
 17845                           ;stkvar	_e @ sp[(-10)+8]
 17846  016056  0EFF               	movlw	-1
 17847  016058  BEE3               	btfsc	plusw1,7,c
 17848  01605A  D0B4               	goto	l7806
 17849                           
 17850                           ;stkvar	_e @ sp[(-10)+8]
 17851  01605C  0EFE               	movlw	-2
 17852  01605E  006F FF8C  F033    	movff	plusw1,btemp+11
 17853  016064  0EFF               	movlw	255
 17854  016066  6E2C               	movwf	(btemp+4)^0,c
 17855  016068  0EFF               	movlw	255
 17856  01606A  6E2D               	movwf	(btemp+5)^0,c
 17857  01606C  0E7F               	movlw	127
 17858  01606E  6E2E               	movwf	(btemp+6)^0,c
 17859  016070  0E00               	movlw	0
 17860  016072  6E2F               	movwf	(btemp+7)^0,c
 17861  016074                     u5895:
 17862  016074  6633               	tstfsz	(btemp+11)^0,c
 17863  016076  D001               	goto	u5896
 17864  016078  D007               	goto	u5897
 17865  01607A                     u5896:
 17866  01607A  342F               	rlcf	(btemp+7)^0,w,c
 17867  01607C  322F               	rrcf	(btemp+7)^0,f,c
 17868  01607E  322E               	rrcf	(btemp+6)^0,f,c
 17869  016080  322D               	rrcf	(btemp+5)^0,f,c
 17870  016082  322C               	rrcf	(btemp+4)^0,f,c
 17871  016084  2E33               	decfsz	(btemp+11)^0,f,c
 17872  016086  D7F6               	goto	u5895
 17873  016088                     u5897:
 17874                           
 17875                           ;stkvar	_m @ sp[(-10)+4]
 17876  016088  0EFA               	movlw	-6
 17877  01608A  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 17878  016090  0EFB               	movlw	-5
 17879  016092  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 17880  016098  0EFC               	movlw	-4
 17881  01609A  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 17882  0160A0  0EFD               	movlw	-3
 17883  0160A2  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 17884                           
 17885                           ;stkvar	_m @ sp[(-10)+4]
 17886                           ;stkvar	_u @ sp[(-10)+0]
 17887  0160A8  0EF6               	movlw	-10
 17888  0160AA  006F FF8C  F030    	movff	plusw1,btemp+8
 17889  0160B0  0EF7               	movlw	-9
 17890  0160B2  006F FF8C  F031    	movff	plusw1,btemp+9
 17891  0160B8  0EF8               	movlw	-8
 17892  0160BA  006F FF8C  F032    	movff	plusw1,btemp+10
 17893  0160C0  0EF9               	movlw	-7
 17894  0160C2  006F FF8C  F033    	movff	plusw1,btemp+11
 17895  0160C8  0EFA               	movlw	-6
 17896  0160CA  50E3               	movf	plusw1,w,c
 17897  0160CC  1630               	andwf	(btemp+8)^0,f,c
 17898  0160CE  0EFB               	movlw	-5
 17899  0160D0  50E3               	movf	plusw1,w,c
 17900  0160D2  1631               	andwf	(btemp+9)^0,f,c
 17901  0160D4  0EFC               	movlw	-4
 17902  0160D6  50E3               	movf	plusw1,w,c
 17903  0160D8  1632               	andwf	(btemp+10)^0,f,c
 17904  0160DA  0EFD               	movlw	-3
 17905  0160DC  50E3               	movf	plusw1,w,c
 17906  0160DE  1633               	andwf	(btemp+11)^0,f,c
 17907  0160E0  5030               	movf	(btemp+8)^0,w,c
 17908  0160E2  1031               	iorwf	(btemp+9)^0,w,c
 17909  0160E4  1032               	iorwf	(btemp+10)^0,w,c
 17910  0160E6  1033               	iorwf	(btemp+11)^0,w,c
 17911  0160E8  B4D8               	btfsc	status,2,c
 17912  0160EA  D7A7               	goto	u5870
 17913                           
 17914                           ;stkvar	_u @ sp[(-10)+0]
 17915  0160EC  0EF6               	movlw	-10
 17916  0160EE  006F FF8C  F030    	movff	plusw1,btemp+8
 17917  0160F4  0EF7               	movlw	-9
 17918  0160F6  006F FF8C  F031    	movff	plusw1,btemp+9
 17919  0160FC  0EF8               	movlw	-8
 17920  0160FE  006F FF8C  F032    	movff	plusw1,btemp+10
 17921  016104  0EF9               	movlw	-7
 17922  016106  006F FF8C  F033    	movff	plusw1,btemp+11
 17923  01610C  0E20               	movlw	32
 17924  01610E  D005               	goto	u5910
 17925  016110                     u5915:
 17926  016110  90D8               	bcf	status,0,c
 17927  016112  3233               	rrcf	(btemp+11)^0,f,c
 17928  016114  3232               	rrcf	(btemp+10)^0,f,c
 17929  016116  3231               	rrcf	(btemp+9)^0,f,c
 17930  016118  3230               	rrcf	(btemp+8)^0,f,c
 17931  01611A                     u5910:
 17932  01611A  2EE8               	decfsz	wreg,f,c
 17933  01611C  D7F9               	goto	u5915
 17934  01611E  5030               	movf	(btemp+8)^0,w,c
 17935  016120  B4D8               	btfsc	status,2,c
 17936  016122  D028               	goto	l7804
 17937                           
 17938                           ;stkvar	_m @ sp[(-10)+4]
 17939                           ;stkvar	_u @ sp[(-10)+0]
 17940  016124  0EF6               	movlw	-10
 17941  016126  50E3               	movf	plusw1,w,c
 17942  016128  6E28               	movwf	btemp^0,c
 17943  01612A  0EFA               	movlw	-6
 17944  01612C  50E3               	movf	plusw1,w,c
 17945  01612E  2628               	addwf	btemp^0,f,c
 17946  016130  0EF6               	movlw	-10
 17947  016132  0060  F0A3  FFE3   	movff	btemp,plusw1
 17948  016138  0EF7               	movlw	-9
 17949  01613A  50E3               	movf	plusw1,w,c
 17950  01613C  6E28               	movwf	btemp^0,c
 17951  01613E  0EFB               	movlw	-5
 17952  016140  50E3               	movf	plusw1,w,c
 17953  016142  2228               	addwfc	btemp^0,f,c
 17954  016144  0EF7               	movlw	-9
 17955  016146  0060  F0A3  FFE3   	movff	btemp,plusw1
 17956  01614C  0EF8               	movlw	-8
 17957  01614E  50E3               	movf	plusw1,w,c
 17958  016150  6E28               	movwf	btemp^0,c
 17959  016152  0EFC               	movlw	-4
 17960  016154  50E3               	movf	plusw1,w,c
 17961  016156  2228               	addwfc	btemp^0,f,c
 17962  016158  0EF8               	movlw	-8
 17963  01615A  0060  F0A3  FFE3   	movff	btemp,plusw1
 17964  016160  0EF9               	movlw	-7
 17965  016162  50E3               	movf	plusw1,w,c
 17966  016164  6E28               	movwf	btemp^0,c
 17967  016166  0EFD               	movlw	-3
 17968  016168  50E3               	movf	plusw1,w,c
 17969  01616A  2228               	addwfc	btemp^0,f,c
 17970  01616C  0EF9               	movlw	-7
 17971  01616E  0060  F0A3  FFE3   	movff	btemp,plusw1
 17972  016174                     l7804:
 17973                           
 17974                           ;stkvar	_m @ sp[(-10)+4]
 17975  016174  0EFA               	movlw	-6
 17976  016176  006F FF8C  F030    	movff	plusw1,btemp+8
 17977  01617C  0EFB               	movlw	-5
 17978  01617E  006F FF8C  F031    	movff	plusw1,btemp+9
 17979  016184  0EFC               	movlw	-4
 17980  016186  006F FF8C  F032    	movff	plusw1,btemp+10
 17981  01618C  0EFD               	movlw	-3
 17982  01618E  006F FF8C  F033    	movff	plusw1,btemp+11
 17983  016194  1C30               	comf	(btemp+8)^0,w,c
 17984  016196  6E2C               	movwf	(btemp+4)^0,c
 17985  016198  1C31               	comf	(btemp+9)^0,w,c
 17986  01619A  6E2D               	movwf	(btemp+5)^0,c
 17987  01619C  1C32               	comf	(btemp+10)^0,w,c
 17988  01619E  6E2E               	movwf	(btemp+6)^0,c
 17989  0161A0  1C33               	comf	(btemp+11)^0,w,c
 17990  0161A2  6E2F               	movwf	(btemp+7)^0,c
 17991                           
 17992                           ;stkvar	_u @ sp[(-10)+0]
 17993  0161A4  50E1               	movf	fsr1l,w,c
 17994  0161A6  0FF6               	addlw	-10
 17995  0161A8  6ED9               	movwf	fsr2l,c
 17996  0161AA  50E2               	movf	fsr1h,w,c
 17997  0161AC  6EDA               	movwf	fsr2h,c
 17998  0161AE  0EFF               	movlw	255
 17999  0161B0  22DA               	addwfc	fsr2h,f,c
 18000  0161B2  502C               	movf	(btemp+4)^0,w,c
 18001  0161B4  16DE               	andwf	postinc2,f,c
 18002  0161B6  502D               	movf	(btemp+5)^0,w,c
 18003  0161B8  16DE               	andwf	postinc2,f,c
 18004  0161BA  502E               	movf	(btemp+6)^0,w,c
 18005  0161BC  16DE               	andwf	postinc2,f,c
 18006  0161BE  502F               	movf	(btemp+7)^0,w,c
 18007  0161C0  16DE               	andwf	postinc2,f,c
 18008  0161C2  D05B               	goto	l7814
 18009  0161C4                     l7806:
 18010                           
 18011                           ;stkvar	_u @ sp[(-10)+0]
 18012  0161C4  0EF6               	movlw	-10
 18013  0161C6  006F FF8C  F030    	movff	plusw1,btemp+8
 18014  0161CC  0EF7               	movlw	-9
 18015  0161CE  006F FF8C  F031    	movff	plusw1,btemp+9
 18016  0161D4  0EF8               	movlw	-8
 18017  0161D6  006F FF8C  F032    	movff	plusw1,btemp+10
 18018  0161DC  0EF9               	movlw	-7
 18019  0161DE  006F FF8C  F033    	movff	plusw1,btemp+11
 18020  0161E4  0E20               	movlw	32
 18021  0161E6  D005               	goto	u5930
 18022  0161E8                     u5935:
 18023  0161E8  90D8               	bcf	status,0,c
 18024  0161EA  3233               	rrcf	(btemp+11)^0,f,c
 18025  0161EC  3232               	rrcf	(btemp+10)^0,f,c
 18026  0161EE  3231               	rrcf	(btemp+9)^0,f,c
 18027  0161F0  3230               	rrcf	(btemp+8)^0,f,c
 18028  0161F2                     u5930:
 18029  0161F2  2EE8               	decfsz	wreg,f,c
 18030  0161F4  D7F9               	goto	u5935
 18031  0161F6  6630               	tstfsz	(btemp+8)^0,c
 18032  0161F8  D009               	goto	l7810
 18033                           
 18034                           ;stkvar	_u @ sp[(-10)+0]
 18035  0161FA  0EF6               	movlw	-10
 18036  0161FC  6AE3               	clrf	plusw1,c
 18037  0161FE  0EF7               	movlw	-9
 18038  016200  6AE3               	clrf	plusw1,c
 18039  016202  0EF8               	movlw	-8
 18040  016204  6AE3               	clrf	plusw1,c
 18041  016206  0EF9               	movlw	-7
 18042  016208  6AE3               	clrf	plusw1,c
 18043  01620A  D037               	goto	l7814
 18044  01620C                     l7810:
 18045                           
 18046                           ;stkvar	_u @ sp[(-10)+0]
 18047  01620C  0EF6               	movlw	-10
 18048  01620E  006F FF8C  F030    	movff	plusw1,btemp+8
 18049  016214  0EF7               	movlw	-9
 18050  016216  006F FF8C  F031    	movff	plusw1,btemp+9
 18051  01621C  0EF8               	movlw	-8
 18052  01621E  006F FF8C  F032    	movff	plusw1,btemp+10
 18053  016224  0EF9               	movlw	-7
 18054  016226  006F FF8C  F033    	movff	plusw1,btemp+11
 18055  01622C  90D8               	bcf	status,0,c
 18056  01622E  3430               	rlcf	(btemp+8)^0,w,c
 18057  016230  6E2C               	movwf	(btemp+4)^0,c
 18058  016232  3431               	rlcf	(btemp+9)^0,w,c
 18059  016234  6E2D               	movwf	(btemp+5)^0,c
 18060  016236  3432               	rlcf	(btemp+10)^0,w,c
 18061  016238  6E2E               	movwf	(btemp+6)^0,c
 18062  01623A  3433               	rlcf	(btemp+11)^0,w,c
 18063  01623C  6E2F               	movwf	(btemp+7)^0,c
 18064  01623E  502C               	movf	(btemp+4)^0,w,c
 18065  016240  102D               	iorwf	(btemp+5)^0,w,c
 18066  016242  102E               	iorwf	(btemp+6)^0,w,c
 18067  016244  102F               	iorwf	(btemp+7)^0,w,c
 18068  016246  B4D8               	btfsc	status,2,c
 18069  016248  D018               	goto	l7814
 18070  01624A  0E00               	movlw	0
 18071  01624C  6E30               	movwf	(btemp+8)^0,c
 18072  01624E  0E00               	movlw	0
 18073  016250  6E31               	movwf	(btemp+9)^0,c
 18074  016252  0E80               	movlw	128
 18075  016254  6E32               	movwf	(btemp+10)^0,c
 18076  016256  0EBF               	movlw	191
 18077  016258  6E33               	movwf	(btemp+11)^0,c
 18078                           
 18079                           ;stkvar	_u @ sp[(-10)+0]
 18080  01625A  0EF6               	movlw	-10
 18081  01625C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18082  016262  0EF7               	movlw	-9
 18083  016264  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18084  01626A  0EF8               	movlw	-8
 18085  01626C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18086  016272  0EF9               	movlw	-7
 18087  016274  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18088  01627A                     l7814:
 18089                           
 18090                           ;stkvar	_u @ sp[(-10)+0]
 18091  01627A  0EF6               	movlw	-10
 18092  01627C  006F FF8C  F028    	movff	plusw1,btemp
 18093  016282  0EF7               	movlw	-9
 18094  016284  006F FF8C  F029    	movff	plusw1,btemp+1
 18095  01628A  0EF8               	movlw	-8
 18096  01628C  006F FF8C  F02A    	movff	plusw1,btemp+2
 18097  016292  0EF9               	movlw	-7
 18098  016294                     L18:
 18099  016294  006F FF8C  F02B    	movff	plusw1,btemp+3
 18100                           
 18101                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18102  01629A  0EF2               	movlw	242
 18103  01629C  26E1               	addwf	fsr1l,f,c
 18104  01629E  0EFF               	movlw	255
 18105  0162A0  22E2               	addwfc	fsr1h,f,c
 18106  0162A2  0012               	return		;funcret
 18107  0162A4                     __end_of_floorf:
 18108                           	opt callstack 0
 18109                           
 18110 ;; *************** function ___fpclassifyf *****************
 18111 ;; Defined at:
 18112 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 18113 ;; Parameters:    Size  Location     Type
 18114 ;;  x               4  [STACK] float 
 18115 ;; Auto vars:     Size  Location     Type
 18116 ;;  u               4  [STACK] struct .
 18117 ;;  e               2  [STACK] int 
 18118 ;; Return value:  Size  Location     Type
 18119 ;;                  2  [STACK] int 
 18120 ;; Registers used:
 18121 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 18122 ;; Tracked objects:
 18123 ;;		On entry : 0/0
 18124 ;;		On exit  : 0/0
 18125 ;;		Unchanged: 0/0
 18126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18131 ;;Total ram usage:        0 bytes
 18132 ;; Hardware stack levels used:    1
 18133 ;; Hardware stack levels required when called:   15
 18134 ;; This function calls:
 18135 ;;		Nothing
 18136 ;; This function is called by:
 18137 ;;		_efgtoa
 18138 ;; This function uses a reentrant model
 18139 ;;
 18140                           
 18141                           	psect	text60
 18142  017F74                     __ptext60:
 18143                           	opt callstack 0
 18144  017F74                     ___fpclassifyf:
 18145                           	opt callstack 0
 18146                           
 18147                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18148  017F74  0E06               	movlw	6
 18149  017F76  26E1               	addwf	fsr1l,f,c
 18150  017F78  0E00               	movlw	0
 18151  017F7A  22E2               	addwfc	fsr1h,f,c
 18152                           
 18153                           ;incstack = 0
 18154 ;; hardware stack exceeded
 18155  017F7C  0060  F208  F030   	movff	___fpclassifyf@F463,btemp+8
 18156  017F82  0060  F20C  F031   	movff	___fpclassifyf@F463+1,btemp+9
 18157  017F88  0060  F210  F032   	movff	___fpclassifyf@F463+2,btemp+10
 18158  017F8E  0060  F214  F033   	movff	___fpclassifyf@F463+3,btemp+11
 18159                           
 18160                           ;stkvar	_u @ sp[(-6)+0]
 18161  017F94  0EFA               	movlw	-6
 18162  017F96  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18163  017F9C  0EFB               	movlw	-5
 18164  017F9E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18165  017FA4  0EFC               	movlw	-4
 18166  017FA6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18167  017FAC  0EFD               	movlw	-3
 18168  017FAE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18169                           
 18170                           ;stkvar	_x @ sp[(-6)+-4]
 18171  017FB4  0EF6               	movlw	-10
 18172  017FB6  006F FF8C  F030    	movff	plusw1,btemp+8
 18173  017FBC  0EF7               	movlw	-9
 18174  017FBE  006F FF8C  F031    	movff	plusw1,btemp+9
 18175  017FC4  0EF8               	movlw	-8
 18176  017FC6  006F FF8C  F032    	movff	plusw1,btemp+10
 18177  017FCC  0EF9               	movlw	-7
 18178  017FCE  006F FF8C  F033    	movff	plusw1,btemp+11
 18179                           
 18180                           ;stkvar	_u @ sp[(-6)+0]
 18181  017FD4  0EFA               	movlw	-6
 18182  017FD6  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18183  017FDC  0EFB               	movlw	-5
 18184  017FDE  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 18185  017FE4  0EFC               	movlw	-4
 18186  017FE6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 18187  017FEC  0EFD               	movlw	-3
 18188  017FEE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 18189                           
 18190                           ;stkvar	_u @ sp[(-6)+0]
 18191  017FF4  0EFA               	movlw	-6
 18192  017FF6  006F FF8C  F030    	movff	plusw1,btemp+8
 18193  017FFC  0EFB               	movlw	-5
 18194  017FFE  006F FF8C  F031    	movff	plusw1,btemp+9
 18195  018004  0EFC               	movlw	-4
 18196  018006  006F FF8C  F032    	movff	plusw1,btemp+10
 18197  01800C  0EFD               	movlw	-3
 18198  01800E  006F FF8C  F033    	movff	plusw1,btemp+11
 18199  018014  0E18               	movlw	24
 18200  018016  D005               	goto	u5740
 18201  018018                     u5745:
 18202  018018  90D8               	bcf	status,0,c
 18203  01801A  3233               	rrcf	(btemp+11)^0,f,c
 18204  01801C  3232               	rrcf	(btemp+10)^0,f,c
 18205  01801E  3231               	rrcf	(btemp+9)^0,f,c
 18206  018020  3230               	rrcf	(btemp+8)^0,f,c
 18207  018022                     u5740:
 18208  018022  2EE8               	decfsz	wreg,f,c
 18209  018024  D7F9               	goto	u5745
 18210  018026  0060  F0C0  F02E   	movff	btemp+8,btemp+6
 18211  01802C  0060  F0C4  F02F   	movff	btemp+9,btemp+7
 18212  018032  0EFF               	movlw	255
 18213  018034  162E               	andwf	(btemp+6)^0,f,c
 18214  018036  0E00               	movlw	0
 18215  018038  162F               	andwf	(btemp+7)^0,f,c
 18216                           
 18217                           ;stkvar	_e @ sp[(-6)+4]
 18218  01803A  0EFE               	movlw	-2
 18219  01803C  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 18220  018042  0EFF               	movlw	-1
 18221  018044  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 18222                           
 18223                           ;stkvar	_e @ sp[(-6)+4]
 18224  01804A  0EFE               	movlw	-2
 18225  01804C  006F FF8C  F028    	movff	plusw1,btemp
 18226  018052  0EFF               	movlw	-1
 18227  018054  50E3               	movf	plusw1,w,c
 18228  018056  1028               	iorwf	btemp^0,w,c
 18229  018058  A4D8               	btfss	status,2,c
 18230  01805A  D023               	goto	l7752
 18231                           
 18232                           ;stkvar	_u @ sp[(-6)+0]
 18233  01805C  0EFA               	movlw	-6
 18234  01805E  006F FF8C  F030    	movff	plusw1,btemp+8
 18235  018064  0EFB               	movlw	-5
 18236  018066  006F FF8C  F031    	movff	plusw1,btemp+9
 18237  01806C  0EFC               	movlw	-4
 18238  01806E  006F FF8C  F032    	movff	plusw1,btemp+10
 18239  018074  0EFD               	movlw	-3
 18240  018076  006F FF8C  F033    	movff	plusw1,btemp+11
 18241  01807C  90D8               	bcf	status,0,c
 18242  01807E  3430               	rlcf	(btemp+8)^0,w,c
 18243  018080  6E2C               	movwf	(btemp+4)^0,c
 18244  018082  3431               	rlcf	(btemp+9)^0,w,c
 18245  018084  6E2D               	movwf	(btemp+5)^0,c
 18246  018086  3432               	rlcf	(btemp+10)^0,w,c
 18247  018088  6E2E               	movwf	(btemp+6)^0,c
 18248  01808A  3433               	rlcf	(btemp+11)^0,w,c
 18249  01808C  6E2F               	movwf	(btemp+7)^0,c
 18250  01808E  502C               	movf	(btemp+4)^0,w,c
 18251  018090  102D               	iorwf	(btemp+5)^0,w,c
 18252  018092  102E               	iorwf	(btemp+6)^0,w,c
 18253  018094  102F               	iorwf	(btemp+7)^0,w,c
 18254  018096  A4D8               	btfss	status,2,c
 18255  018098  D002               	goto	l7748
 18256  01809A  0E02               	movlw	2
 18257  01809C  D02E               	goto	L19
 18258  01809E                     l7748:
 18259  01809E  0E03               	movlw	3
 18260  0180A0  D02C               	goto	L19
 18261  0180A2                     l7752:
 18262                           
 18263                           ;stkvar	_e @ sp[(-6)+4]
 18264  0180A2  0EFE               	movlw	-2
 18265  0180A4  28E3               	incf	plusw1,w,c
 18266  0180A6  E128               	bnz	l7758
 18267  0180A8  0EFF               	movlw	-1
 18268  0180AA  50E3               	movf	plusw1,w,c
 18269  0180AC  A4D8               	btfss	status,2,c
 18270  0180AE  D024               	goto	l7758
 18271                           
 18272                           ;stkvar	_u @ sp[(-6)+0]
 18273  0180B0  0EFA               	movlw	-6
 18274  0180B2  006F FF8C  F030    	movff	plusw1,btemp+8
 18275  0180B8  0EFB               	movlw	-5
 18276  0180BA  006F FF8C  F031    	movff	plusw1,btemp+9
 18277  0180C0  0EFC               	movlw	-4
 18278  0180C2  006F FF8C  F032    	movff	plusw1,btemp+10
 18279  0180C8  0EFD               	movlw	-3
 18280  0180CA  006F FF8C  F033    	movff	plusw1,btemp+11
 18281  0180D0  0E09               	movlw	9
 18282  0180D2                     u5785:
 18283  0180D2  90D8               	bcf	status,0,c
 18284  0180D4  3630               	rlcf	(btemp+8)^0,f,c
 18285  0180D6  3631               	rlcf	(btemp+9)^0,f,c
 18286  0180D8  3632               	rlcf	(btemp+10)^0,f,c
 18287  0180DA  3633               	rlcf	(btemp+11)^0,f,c
 18288  0180DC  2EE8               	decfsz	wreg,f,c
 18289  0180DE  D7F9               	goto	u5785
 18290  0180E0  5030               	movf	(btemp+8)^0,w,c
 18291  0180E2  1031               	iorwf	(btemp+9)^0,w,c
 18292  0180E4  1032               	iorwf	(btemp+10)^0,w,c
 18293  0180E6  1033               	iorwf	(btemp+11)^0,w,c
 18294  0180E8  A4D8               	btfss	status,2,c
 18295  0180EA  D002               	goto	u5790
 18296  0180EC  0E01               	movlw	1
 18297  0180EE  D001               	goto	u5800
 18298  0180F0                     u5790:
 18299  0180F0  0E00               	movlw	0
 18300  0180F2                     u5800:
 18301  0180F2  6E28               	movwf	btemp^0,c
 18302  0180F4  6A29               	clrf	(btemp+1)^0,c
 18303  0180F6  D004               	goto	l3038
 18304  0180F8                     l7758:
 18305  0180F8  0E04               	movlw	4
 18306  0180FA                     L19:
 18307  0180FA  6E28               	movwf	btemp^0,c
 18308  0180FC  0E00               	movlw	0
 18309  0180FE  6E29               	movwf	(btemp+1)^0,c
 18310  018100                     l3038:
 18311                           
 18312                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 18313  018100  0EF6               	movlw	246
 18314  018102  26E1               	addwf	fsr1l,f,c
 18315  018104  0EFF               	movlw	255
 18316  018106  22E2               	addwfc	fsr1h,f,c
 18317  018108  0012               	return		;funcret
 18318  01810A                     __end_of___fpclassifyf:
 18319                           	opt callstack 0
 18320                           
 18321 ;; *************** function ___fltol *****************
 18322 ;; Defined at:
 18323 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 18324 ;; Parameters:    Size  Location     Type
 18325 ;;  f1              4  [STACK] int 
 18326 ;; Auto vars:     Size  Location     Type
 18327 ;;  exp1            1  [STACK] unsigned char 
 18328 ;;  sign1           1  [STACK] unsigned char 
 18329 ;; Return value:  Size  Location     Type
 18330 ;;                  4  [STACK] long 
 18331 ;; Registers used:
 18332 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 18333 ;; Tracked objects:
 18334 ;;		On entry : 0/0
 18335 ;;		On exit  : 0/0
 18336 ;;		Unchanged: 0/0
 18337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18342 ;;Total ram usage:        0 bytes
 18343 ;; Hardware stack levels used:    1
 18344 ;; Hardware stack levels required when called:   15
 18345 ;; This function calls:
 18346 ;;		Nothing
 18347 ;; This function is called by:
 18348 ;;		_main
 18349 ;;		_calc_bsoc
 18350 ;;		_init_bsoc
 18351 ;;		_efgtoa
 18352 ;; This function uses a reentrant model
 18353 ;;
 18354                           
 18355                           	psect	text61
 18356  0183FE                     __ptext61:
 18357                           	opt callstack 0
 18358  0183FE                     ___fltol:
 18359                           	opt callstack 0
 18360                           
 18361                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18362  0183FE  52E6               	movf	postinc1,f,c
 18363  018400  52E6               	movf	postinc1,f,c
 18364                           
 18365                           ;stkvar	_f1 @ sp[(-2)+-4]
 18366                           
 18367                           ;incstack = 0
 18368 ;; hardware stack exceeded
 18369  018402  0EFA               	movlw	-6
 18370  018404  006F FF8C  F030    	movff	plusw1,btemp+8
 18371  01840A  0EFB               	movlw	-5
 18372  01840C  006F FF8C  F031    	movff	plusw1,btemp+9
 18373  018412  0EFC               	movlw	-4
 18374  018414  006F FF8C  F032    	movff	plusw1,btemp+10
 18375  01841A  0EFD               	movlw	-3
 18376  01841C  006F FF8C  F033    	movff	plusw1,btemp+11
 18377  018422  0E18               	movlw	24
 18378  018424  D005               	goto	u6950
 18379  018426                     u6955:
 18380  018426  90D8               	bcf	status,0,c
 18381  018428  3233               	rrcf	(btemp+11)^0,f,c
 18382  01842A  3232               	rrcf	(btemp+10)^0,f,c
 18383  01842C  3231               	rrcf	(btemp+9)^0,f,c
 18384  01842E  3230               	rrcf	(btemp+8)^0,f,c
 18385  018430                     u6950:
 18386  018430  2EE8               	decfsz	wreg,f,c
 18387  018432  D7F9               	goto	u6955
 18388                           
 18389                           ;stkvar	_exp1 @ sp[(-2)+0]
 18390  018434  0EFE               	movlw	-2
 18391  018436  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18392  01843C  0EFE               	movlw	-2
 18393  01843E  50E3               	movf	plusw1,w,c
 18394  018440  A4D8               	btfss	status,2,c
 18395  018442  D006               	goto	l8378
 18396  018444                     u6960:
 18397  018444  0E00               	movlw	0
 18398  018446  6E28               	movwf	btemp^0,c
 18399  018448  6A29               	clrf	(btemp+1)^0,c
 18400  01844A  6A2A               	clrf	(btemp+2)^0,c
 18401  01844C  6A2B               	clrf	(btemp+3)^0,c
 18402  01844E  D08B               	goto	l2654
 18403  018450                     l8378:
 18404                           
 18405                           ;stkvar	_f1 @ sp[(-2)+-4]
 18406  018450  0EFA               	movlw	-6
 18407  018452  006F FF8C  F030    	movff	plusw1,btemp+8
 18408  018458  0EFB               	movlw	-5
 18409  01845A  006F FF8C  F031    	movff	plusw1,btemp+9
 18410  018460  0EFC               	movlw	-4
 18411  018462  006F FF8C  F032    	movff	plusw1,btemp+10
 18412  018468  0EFD               	movlw	-3
 18413  01846A  006F FF8C  F033    	movff	plusw1,btemp+11
 18414  018470  0E20               	movlw	32
 18415  018472  D005               	goto	u6970
 18416  018474                     u6975:
 18417  018474  90D8               	bcf	status,0,c
 18418  018476  3233               	rrcf	(btemp+11)^0,f,c
 18419  018478  3232               	rrcf	(btemp+10)^0,f,c
 18420  01847A  3231               	rrcf	(btemp+9)^0,f,c
 18421  01847C  3230               	rrcf	(btemp+8)^0,f,c
 18422  01847E                     u6970:
 18423  01847E  2EE8               	decfsz	wreg,f,c
 18424  018480  D7F9               	goto	u6975
 18425                           
 18426                           ;stkvar	_sign1 @ sp[(-2)+1]
 18427  018482  0EFF               	movlw	-1
 18428  018484  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 18429                           
 18430                           ;stkvar	_f1 @ sp[(-2)+-4]
 18431  01848A  0EFC               	movlw	-4
 18432  01848C  8EE3               	bsf	plusw1,7,c
 18433                           
 18434                           ;stkvar	_f1 @ sp[(-2)+-4]
 18435  01848E  50E1               	movf	fsr1l,w,c
 18436  018490  0FFA               	addlw	-6
 18437  018492  6ED9               	movwf	fsr2l,c
 18438  018494  50E2               	movf	fsr1h,w,c
 18439  018496  6EDA               	movwf	fsr2h,c
 18440  018498  0EFF               	movlw	255
 18441  01849A  22DA               	addwfc	fsr2h,f,c
 18442  01849C  0EFF               	movlw	255
 18443  01849E  16DE               	andwf	postinc2,f,c
 18444  0184A0  0EFF               	movlw	255
 18445  0184A2  16DE               	andwf	postinc2,f,c
 18446  0184A4  0EFF               	movlw	255
 18447  0184A6  16DE               	andwf	postinc2,f,c
 18448  0184A8  0E00               	movlw	0
 18449  0184AA  16DE               	andwf	postinc2,f,c
 18450                           
 18451                           ;stkvar	_exp1 @ sp[(-2)+0]
 18452  0184AC  0EFE               	movlw	-2
 18453  0184AE  006F FF8C  F028    	movff	plusw1,btemp
 18454  0184B4  0E96               	movlw	150
 18455  0184B6  5E28               	subwf	btemp^0,f,c
 18456  0184B8  0EFE               	movlw	-2
 18457  0184BA  0060  F0A3  FFE3   	movff	btemp,plusw1
 18458                           
 18459                           ;stkvar	_exp1 @ sp[(-2)+0]
 18460  0184C0  0EFE               	movlw	-2
 18461  0184C2  AEE3               	btfss	plusw1,7,c
 18462  0184C4  D014               	goto	l8396
 18463                           
 18464                           ;stkvar	_exp1 @ sp[(-2)+0]
 18465  0184C6  0EFE               	movlw	-2
 18466  0184C8  50E3               	movf	plusw1,w,c
 18467  0184CA  0A80               	xorlw	128
 18468  0184CC  0F97               	addlw	151
 18469  0184CE  A0D8               	btfss	status,0,c
 18470  0184D0  D7B9               	goto	u6960
 18471  0184D2                     l8394:
 18472                           
 18473                           ;stkvar	_f1 @ sp[(-2)+-4]
 18474  0184D2  90D8               	bcf	status,0,c
 18475  0184D4  0EFD               	movlw	-3
 18476  0184D6  32E3               	rrcf	plusw1,f,c
 18477  0184D8  0EFC               	movlw	-4
 18478  0184DA  32E3               	rrcf	plusw1,f,c
 18479  0184DC  0EFB               	movlw	-5
 18480  0184DE  32E3               	rrcf	plusw1,f,c
 18481  0184E0  0EFA               	movlw	-6
 18482  0184E2  32E3               	rrcf	plusw1,f,c
 18483                           
 18484                           ;stkvar	_exp1 @ sp[(-2)+0]
 18485  0184E4  0EFE               	movlw	-2
 18486  0184E6  2AE3               	incf	plusw1,f,c
 18487  0184E8  B4D8               	btfsc	status,2,c
 18488  0184EA  D018               	goto	u7020
 18489  0184EC  D7F2               	goto	l8394
 18490  0184EE                     l8396:
 18491                           
 18492                           ;stkvar	_exp1 @ sp[(-2)+0]
 18493  0184EE  0EFE               	movlw	-2
 18494  0184F0  006F FF8C  F028    	movff	plusw1,btemp
 18495  0184F6  0E1F               	movlw	31
 18496  0184F8  6428               	cpfsgt	btemp^0,c
 18497  0184FA  D00C               	goto	l8404
 18498  0184FC  D7A3               	goto	u6960
 18499  0184FE                     l8402:
 18500                           
 18501                           ;stkvar	_f1 @ sp[(-2)+-4]
 18502  0184FE  90D8               	bcf	status,0,c
 18503  018500  0EFA               	movlw	-6
 18504  018502  36E3               	rlcf	plusw1,f,c
 18505  018504  0EFB               	movlw	-5
 18506  018506  36E3               	rlcf	plusw1,f,c
 18507  018508  0EFC               	movlw	-4
 18508  01850A  36E3               	rlcf	plusw1,f,c
 18509  01850C  0EFD               	movlw	-3
 18510  01850E  36E3               	rlcf	plusw1,f,c
 18511                           
 18512                           ;stkvar	_exp1 @ sp[(-2)+0]
 18513  018510  0EFE               	movlw	-2
 18514  018512  06E3               	decf	plusw1,f,c
 18515  018514                     l8404:
 18516                           
 18517                           ;stkvar	_exp1 @ sp[(-2)+0]
 18518  018514  0EFE               	movlw	-2
 18519  018516  50E3               	movf	plusw1,w,c
 18520  018518  A4D8               	btfss	status,2,c
 18521  01851A  D7F1               	goto	l8402
 18522  01851C                     u7020:
 18523                           
 18524                           ;stkvar	_sign1 @ sp[(-2)+1]
 18525  01851C  0EFF               	movlw	-1
 18526  01851E  50E3               	movf	plusw1,w,c
 18527  018520  B4D8               	btfsc	status,2,c
 18528  018522  D011               	goto	u7040
 18529                           
 18530                           ;stkvar	_f1 @ sp[(-2)+-4]
 18531                           ;stkvar	_f1 @ sp[(-2)+-4]
 18532  018524  0EFA               	movlw	-6
 18533  018526  6CE3               	negf	plusw1,c
 18534  018528  0EFB               	movlw	-5
 18535  01852A  1EE3               	comf	plusw1,f,c
 18536  01852C  0EFC               	movlw	-4
 18537  01852E  1EE3               	comf	plusw1,f,c
 18538  018530  0EFD               	movlw	-3
 18539  018532  1EE3               	comf	plusw1,f,c
 18540  018534  E308               	bnc	u7040
 18541  018536  0EFB               	movlw	-5
 18542  018538  2AE3               	incf	plusw1,f,c
 18543  01853A  E305               	bnc	u7040
 18544  01853C  0EFC               	movlw	-4
 18545  01853E  2AE3               	incf	plusw1,f,c
 18546  018540  E302               	bnc	u7040
 18547  018542  0EFD               	movlw	-3
 18548  018544  2AE3               	incf	plusw1,f,c
 18549  018546                     u7040:
 18550                           
 18551                           ;stkvar	_f1 @ sp[(-2)+-4]
 18552  018546  0EFA               	movlw	-6
 18553  018548  006F FF8C  F028    	movff	plusw1,btemp
 18554  01854E  0EFB               	movlw	-5
 18555  018550  006F FF8C  F029    	movff	plusw1,btemp+1
 18556  018556  0EFC               	movlw	-4
 18557  018558  006F FF8C  F02A    	movff	plusw1,btemp+2
 18558  01855E  0EFD               	movlw	-3
 18559  018560  006F FF8C  F02B    	movff	plusw1,btemp+3
 18560  018566                     l2654:
 18561                           
 18562                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18563  018566  0EFA               	movlw	250
 18564  018568  26E1               	addwf	fsr1l,f,c
 18565  01856A  0EFF               	movlw	255
 18566  01856C  22E2               	addwfc	fsr1h,f,c
 18567  01856E  0012               	return		;funcret
 18568  018570                     __end_of___fltol:
 18569                           	opt callstack 0
 18570                           
 18571 ;; *************** function ___flneg *****************
 18572 ;; Defined at:
 18573 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 18574 ;; Parameters:    Size  Location     Type
 18575 ;;  f1              4  [STACK] long 
 18576 ;; Auto vars:     Size  Location     Type
 18577 ;;		None
 18578 ;; Return value:  Size  Location     Type
 18579 ;;                  4  [STACK] long 
 18580 ;; Registers used:
 18581 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 18582 ;; Tracked objects:
 18583 ;;		On entry : 0/0
 18584 ;;		On exit  : 0/0
 18585 ;;		Unchanged: 0/0
 18586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18588 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18589 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18590 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18591 ;;Total ram usage:        0 bytes
 18592 ;; Hardware stack levels used:    1
 18593 ;; Hardware stack levels required when called:   15
 18594 ;; This function calls:
 18595 ;;		Nothing
 18596 ;; This function is called by:
 18597 ;;		_calc_bsoc
 18598 ;;		_efgtoa
 18599 ;; This function uses a reentrant model
 18600 ;;
 18601                           
 18602                           	psect	text62
 18603  01A9F0                     __ptext62:
 18604                           	opt callstack 0
 18605  01A9F0                     ___flneg:
 18606                           	opt callstack 0
 18607                           
 18608                           ;stkvar	_f1 @ sp[(0)+-4]
 18609                           
 18610                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18611                           ;incstack = 0
 18612 ;; hardware stack exceeded
 18613  01A9F0  0EFC               	movlw	-4
 18614  01A9F2  50E3               	movf	plusw1,w,c
 18615  01A9F4  E10A               	bnz	u6940
 18616  01A9F6  0EFD               	movlw	-3
 18617  01A9F8  50E3               	movf	plusw1,w,c
 18618  01A9FA  E107               	bnz	u6940
 18619  01A9FC  0EFE               	movlw	-2
 18620  01A9FE  50E3               	movf	plusw1,w,c
 18621  01AA00  E104               	bnz	u6940
 18622  01AA02  0EFF               	movlw	-1
 18623  01AA04  50E3               	movf	plusw1,w,c
 18624  01AA06  B4D8               	btfsc	status,2,c
 18625  01AA08  D002               	goto	l8368
 18626  01AA0A                     u6940:
 18627                           
 18628                           ;stkvar	_f1 @ sp[(0)+-4]
 18629  01AA0A  0EFF               	movlw	-1
 18630  01AA0C  7EE3               	btg	plusw1,7,c
 18631  01AA0E                     l8368:
 18632                           
 18633                           ;stkvar	_f1 @ sp[(0)+-4]
 18634  01AA0E  0EFC               	movlw	-4
 18635  01AA10  006F FF8C  F028    	movff	plusw1,btemp
 18636  01AA16  0EFD               	movlw	-3
 18637  01AA18  006F FF8C  F029    	movff	plusw1,btemp+1
 18638  01AA1E  0EFE               	movlw	-2
 18639  01AA20  006F FF8C  F02A    	movff	plusw1,btemp+2
 18640  01AA26  0EFF               	movlw	-1
 18641  01AA28  006F FF8C  F02B    	movff	plusw1,btemp+3
 18642                           
 18643                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18644  01AA2E  52E5               	movf	postdec1,f,c
 18645  01AA30  52E5               	movf	postdec1,f,c
 18646  01AA32  52E5               	movf	postdec1,f,c
 18647  01AA34  52E5               	movf	postdec1,f,c
 18648  01AA36  0012               	return		;funcret
 18649  01AA38                     __end_of___flneg:
 18650                           	opt callstack 0
 18651                           
 18652 ;; *************** function ___fleq *****************
 18653 ;; Defined at:
 18654 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 18655 ;; Parameters:    Size  Location     Type
 18656 ;;  ff1             4  [STACK] long 
 18657 ;;  ff2             4  [STACK] long 
 18658 ;; Auto vars:     Size  Location     Type
 18659 ;;		None
 18660 ;; Return value:  Size  Location     Type
 18661 ;;		None               void
 18662 ;; Registers used:
 18663 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 18664 ;; Tracked objects:
 18665 ;;		On entry : 0/0
 18666 ;;		On exit  : 0/0
 18667 ;;		Unchanged: 0/0
 18668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18669 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18671 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18672 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18673 ;;Total ram usage:        0 bytes
 18674 ;; Hardware stack levels used:    1
 18675 ;; Hardware stack levels required when called:   15
 18676 ;; This function calls:
 18677 ;;		Nothing
 18678 ;; This function is called by:
 18679 ;;		_efgtoa
 18680 ;; This function uses a reentrant model
 18681 ;;
 18682                           
 18683                           	psect	text63
 18684  0199B4                     __ptext63:
 18685                           	opt callstack 0
 18686  0199B4                     ___fleq:
 18687                           	opt callstack 0
 18688                           
 18689                           ;stkvar	_ff1 @ sp[(0)+-4]
 18690                           
 18691                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18692                           ;incstack = 0
 18693 ;; hardware stack exceeded
 18694  0199B4  50E1               	movf	fsr1l,w,c
 18695  0199B6  0FFC               	addlw	-4
 18696  0199B8  6ED9               	movwf	fsr2l,c
 18697  0199BA  50E2               	movf	fsr1h,w,c
 18698  0199BC  6EDA               	movwf	fsr2h,c
 18699  0199BE  0EFF               	movlw	255
 18700  0199C0  22DA               	addwfc	fsr2h,f,c
 18701  0199C2  0E00               	movlw	0
 18702  0199C4  14DE               	andwf	postinc2,w,c
 18703  0199C6  6E30               	movwf	(btemp+8)^0,c
 18704  0199C8  0E00               	movlw	0
 18705  0199CA  14DE               	andwf	postinc2,w,c
 18706  0199CC  6E31               	movwf	(btemp+9)^0,c
 18707  0199CE  0E80               	movlw	128
 18708  0199D0  14DE               	andwf	postinc2,w,c
 18709  0199D2  6E32               	movwf	(btemp+10)^0,c
 18710  0199D4  0E7F               	movlw	127
 18711  0199D6  14DE               	andwf	postinc2,w,c
 18712  0199D8  6E33               	movwf	(btemp+11)^0,c
 18713  0199DA  5030               	movf	(btemp+8)^0,w,c
 18714  0199DC  1031               	iorwf	(btemp+9)^0,w,c
 18715  0199DE  1032               	iorwf	(btemp+10)^0,w,c
 18716  0199E0  1033               	iorwf	(btemp+11)^0,w,c
 18717  0199E2  A4D8               	btfss	status,2,c
 18718  0199E4  D008               	goto	l8326
 18719                           
 18720                           ;stkvar	_ff1 @ sp[(0)+-4]
 18721  0199E6  0EFC               	movlw	-4
 18722  0199E8  6AE3               	clrf	plusw1,c
 18723  0199EA  0EFD               	movlw	-3
 18724  0199EC  6AE3               	clrf	plusw1,c
 18725  0199EE  0EFE               	movlw	-2
 18726  0199F0  6AE3               	clrf	plusw1,c
 18727  0199F2  0EFF               	movlw	-1
 18728  0199F4  6AE3               	clrf	plusw1,c
 18729  0199F6                     l8326:
 18730                           
 18731                           ;stkvar	_ff2 @ sp[(0)+-8]
 18732  0199F6  50E1               	movf	fsr1l,w,c
 18733  0199F8  0FF8               	addlw	-8
 18734  0199FA  6ED9               	movwf	fsr2l,c
 18735  0199FC  50E2               	movf	fsr1h,w,c
 18736  0199FE  6EDA               	movwf	fsr2h,c
 18737  019A00  0EFF               	movlw	255
 18738  019A02  22DA               	addwfc	fsr2h,f,c
 18739  019A04  0E00               	movlw	0
 18740  019A06  14DE               	andwf	postinc2,w,c
 18741  019A08  6E30               	movwf	(btemp+8)^0,c
 18742  019A0A  0E00               	movlw	0
 18743  019A0C  14DE               	andwf	postinc2,w,c
 18744  019A0E  6E31               	movwf	(btemp+9)^0,c
 18745  019A10  0E80               	movlw	128
 18746  019A12  14DE               	andwf	postinc2,w,c
 18747  019A14  6E32               	movwf	(btemp+10)^0,c
 18748  019A16  0E7F               	movlw	127
 18749  019A18  14DE               	andwf	postinc2,w,c
 18750  019A1A  6E33               	movwf	(btemp+11)^0,c
 18751  019A1C  5030               	movf	(btemp+8)^0,w,c
 18752  019A1E  1031               	iorwf	(btemp+9)^0,w,c
 18753  019A20  1032               	iorwf	(btemp+10)^0,w,c
 18754  019A22  1033               	iorwf	(btemp+11)^0,w,c
 18755  019A24  A4D8               	btfss	status,2,c
 18756  019A26  D008               	goto	l8330
 18757                           
 18758                           ;stkvar	_ff2 @ sp[(0)+-8]
 18759  019A28  0EF8               	movlw	-8
 18760  019A2A  6AE3               	clrf	plusw1,c
 18761  019A2C  0EF9               	movlw	-7
 18762  019A2E  6AE3               	clrf	plusw1,c
 18763  019A30  0EFA               	movlw	-6
 18764  019A32  6AE3               	clrf	plusw1,c
 18765  019A34  0EFB               	movlw	-5
 18766  019A36  6AE3               	clrf	plusw1,c
 18767  019A38                     l8330:
 18768                           
 18769                           ;stkvar	_ff2 @ sp[(0)+-8]
 18770                           ;stkvar	_ff1 @ sp[(0)+-4]
 18771  019A38  50E1               	movf	fsr1l,w,c
 18772  019A3A  0FFC               	addlw	-4
 18773  019A3C  6ED9               	movwf	fsr2l,c
 18774  019A3E  50E2               	movf	fsr1h,w,c
 18775  019A40  6EDA               	movwf	fsr2h,c
 18776  019A42  0EFF               	movlw	255
 18777  019A44  22DA               	addwfc	fsr2h,f,c
 18778  019A46  0EF8               	movlw	-8
 18779  019A48  50E3               	movf	plusw1,w,c
 18780  019A4A  18DE               	xorwf	postinc2,w,c
 18781  019A4C  E10D               	bnz	u6880
 18782  019A4E  0EF9               	movlw	-7
 18783  019A50  50E3               	movf	plusw1,w,c
 18784  019A52  18DE               	xorwf	postinc2,w,c
 18785  019A54  E109               	bnz	u6880
 18786  019A56  0EFA               	movlw	-6
 18787  019A58  50E3               	movf	plusw1,w,c
 18788  019A5A  18DE               	xorwf	postinc2,w,c
 18789  019A5C  E105               	bnz	u6880
 18790  019A5E  0EFB               	movlw	-5
 18791  019A60  50E3               	movf	plusw1,w,c
 18792  019A62  18DE               	xorwf	postinc2,w,c
 18793  019A64  B4D8               	btfsc	status,2,c
 18794  019A66  D002               	goto	l8334
 18795  019A68                     u6880:
 18796  019A68  9028               	bcf	btemp& (0+255),0,c
 18797  019A6A  D001               	goto	l2616
 18798  019A6C                     l8334:
 18799  019A6C  8028               	bsf	btemp& (0+255),0,c
 18800  019A6E                     l2616:
 18801                           
 18802                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 18803  019A6E  0EF8               	movlw	248
 18804  019A70  26E1               	addwf	fsr1l,f,c
 18805  019A72  0EFF               	movlw	255
 18806  019A74  22E2               	addwfc	fsr1h,f,c
 18807  019A76  0012               	return		;funcret
 18808  019A78                     __end_of___fleq:
 18809                           	opt callstack 0
 18810                           
 18811 ;; *************** function ___awmod *****************
 18812 ;; Defined at:
 18813 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18814 ;; Parameters:    Size  Location     Type
 18815 ;;  dividend        2  [STACK] int 
 18816 ;;  divisor         2  [STACK] int 
 18817 ;; Auto vars:     Size  Location     Type
 18818 ;;  sign            1  [STACK] unsigned char 
 18819 ;;  counter         1  [STACK] unsigned char 
 18820 ;; Return value:  Size  Location     Type
 18821 ;;                  2  [STACK] int 
 18822 ;; Registers used:
 18823 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18824 ;; Tracked objects:
 18825 ;;		On entry : 0/0
 18826 ;;		On exit  : 0/0
 18827 ;;		Unchanged: 0/0
 18828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18832 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18833 ;;Total ram usage:        0 bytes
 18834 ;; Hardware stack levels used:    1
 18835 ;; Hardware stack levels required when called:   15
 18836 ;; This function calls:
 18837 ;;		Nothing
 18838 ;; This function is called by:
 18839 ;;		_efgtoa
 18840 ;; This function uses a reentrant model
 18841 ;;
 18842                           
 18843                           	psect	text64
 18844  018FC2                     __ptext64:
 18845                           	opt callstack 0
 18846  018FC2                     ___awmod:
 18847                           	opt callstack 0
 18848                           
 18849                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18850  018FC2  52E6               	movf	postinc1,f,c
 18851  018FC4  52E6               	movf	postinc1,f,c
 18852                           
 18853                           ;stkvar	_sign @ sp[(-2)+0]
 18854                           
 18855                           ;incstack = 0
 18856 ;; hardware stack exceeded
 18857  018FC6  0EFE               	movlw	-2
 18858  018FC8  6AE3               	clrf	plusw1,c
 18859                           
 18860                           ;stkvar	_dividend @ sp[(-2)+-2]
 18861  018FCA  0EFD               	movlw	-3
 18862  018FCC  AEE3               	btfss	plusw1,7,c
 18863  018FCE  D009               	goto	l8292
 18864                           
 18865                           ;stkvar	_dividend @ sp[(-2)+-2]
 18866                           ;stkvar	_dividend @ sp[(-2)+-2]
 18867  018FD0  0EFC               	movlw	-4
 18868  018FD2  6CE3               	negf	plusw1,c
 18869  018FD4  0EFD               	movlw	-3
 18870  018FD6  1EE3               	comf	plusw1,f,c
 18871  018FD8  B0D8               	btfsc	status,0,c
 18872  018FDA  2AE3               	incf	plusw1,f,c
 18873                           
 18874                           ;stkvar	_sign @ sp[(-2)+0]
 18875  018FDC  0EFE               	movlw	-2
 18876  018FDE  6AE3               	clrf	plusw1,c
 18877  018FE0  2AE3               	incf	plusw1,f,c
 18878  018FE2                     l8292:
 18879                           
 18880                           ;stkvar	_divisor @ sp[(-2)+-4]
 18881  018FE2  0EFB               	movlw	-5
 18882  018FE4  AEE3               	btfss	plusw1,7,c
 18883  018FE6  D006               	goto	l8296
 18884                           
 18885                           ;stkvar	_divisor @ sp[(-2)+-4]
 18886                           ;stkvar	_divisor @ sp[(-2)+-4]
 18887  018FE8  0EFA               	movlw	-6
 18888  018FEA  6CE3               	negf	plusw1,c
 18889  018FEC  0EFB               	movlw	-5
 18890  018FEE  1EE3               	comf	plusw1,f,c
 18891  018FF0  B0D8               	btfsc	status,0,c
 18892  018FF2  2AE3               	incf	plusw1,f,c
 18893  018FF4                     l8296:
 18894                           
 18895                           ;stkvar	_divisor @ sp[(-2)+-4]
 18896  018FF4  0EFA               	movlw	-6
 18897  018FF6  006F FF8C  F028    	movff	plusw1,btemp
 18898  018FFC  0EFB               	movlw	-5
 18899  018FFE  50E3               	movf	plusw1,w,c
 18900  019000  1028               	iorwf	btemp^0,w,c
 18901  019002  B4D8               	btfsc	status,2,c
 18902  019004  D053               	goto	u6840
 18903                           
 18904                           ;stkvar	_counter @ sp[(-2)+1]
 18905  019006  0EFF               	movlw	-1
 18906  019008  6AE3               	clrf	plusw1,c
 18907  01900A  D012               	goto	L20
 18908  01900C                     l8300:
 18909                           
 18910                           ;stkvar	_divisor @ sp[(-2)+-4]
 18911  01900C  0EFA               	movlw	-6
 18912  01900E  50E3               	movf	plusw1,w,c
 18913  019010  90D8               	bcf	status,0,c
 18914  019012  34E8               	rlcf	wreg,w,c
 18915  019014  6E28               	movwf	btemp^0,c
 18916  019016  0EFA               	movlw	-6
 18917  019018  0060  F0A3  FFE3   	movff	btemp,plusw1
 18918  01901E  0EFB               	movlw	-5
 18919  019020  50E3               	movf	plusw1,w,c
 18920  019022  34E8               	rlcf	wreg,w,c
 18921  019024  6E28               	movwf	btemp^0,c
 18922  019026  0EFB               	movlw	-5
 18923  019028  0060  F0A3  FFE3   	movff	btemp,plusw1
 18924                           
 18925                           ;stkvar	_counter @ sp[(-2)+1]
 18926  01902E  0EFF               	movlw	-1
 18927  019030                     L20:
 18928  019030  2AE3               	incf	plusw1,f,c
 18929                           
 18930                           ;stkvar	_divisor @ sp[(-2)+-4]
 18931  019032  0EFB               	movlw	-5
 18932  019034  AEE3               	btfss	plusw1,7,c
 18933  019036  D7EA               	goto	l8300
 18934  019038                     u6820:
 18935                           
 18936                           ;stkvar	_divisor @ sp[(-2)+-4]
 18937  019038  0EFA               	movlw	-6
 18938  01903A  006F FF8C  F032    	movff	plusw1,btemp+10
 18939  019040  0EFB               	movlw	-5
 18940  019042  006F FF8C  F033    	movff	plusw1,btemp+11
 18941                           
 18942                           ;stkvar	_dividend @ sp[(-2)+-2]
 18943  019048  0EFC               	movlw	-4
 18944  01904A  006F FF8C  F030    	movff	plusw1,btemp+8
 18945  019050  0EFD               	movlw	-3
 18946  019052  006F FF8C  F031    	movff	plusw1,btemp+9
 18947  019058  5032               	movf	(btemp+10)^0,w,c
 18948  01905A  5C30               	subwf	(btemp+8)^0,w,c
 18949  01905C  5033               	movf	(btemp+11)^0,w,c
 18950  01905E  5831               	subwfb	(btemp+9)^0,w,c
 18951  019060  A0D8               	btfss	status,0,c
 18952  019062  D014               	goto	l8310
 18953                           
 18954                           ;stkvar	_divisor @ sp[(-2)+-4]
 18955                           ;stkvar	_dividend @ sp[(-2)+-2]
 18956  019064  0EFC               	movlw	-4
 18957  019066  50E3               	movf	plusw1,w,c
 18958  019068  6E28               	movwf	btemp^0,c
 18959  01906A  0EFA               	movlw	-6
 18960  01906C  50E3               	movf	plusw1,w,c
 18961  01906E  5E28               	subwf	btemp^0,f,c
 18962  019070  0EFC               	movlw	-4
 18963  019072  0060  F0A3  FFE3   	movff	btemp,plusw1
 18964  019078  0EFD               	movlw	-3
 18965  01907A  50E3               	movf	plusw1,w,c
 18966  01907C  6E28               	movwf	btemp^0,c
 18967  01907E  0EFB               	movlw	-5
 18968  019080  50E3               	movf	plusw1,w,c
 18969  019082  5A28               	subwfb	btemp^0,f,c
 18970  019084  0EFD               	movlw	-3
 18971  019086  0060  F0A3  FFE3   	movff	btemp,plusw1
 18972  01908C                     l8310:
 18973                           
 18974                           ;stkvar	_divisor @ sp[(-2)+-4]
 18975  01908C  90D8               	bcf	status,0,c
 18976  01908E  0EFB               	movlw	-5
 18977  019090  32E3               	rrcf	plusw1,f,c
 18978  019092  0EFA               	movlw	-6
 18979  019094  32E3               	rrcf	plusw1,f,c
 18980                           
 18981                           ;stkvar	_counter @ sp[(-2)+1]
 18982  019096  0EFF               	movlw	-1
 18983  019098  50E3               	movf	plusw1,w,c
 18984  01909A  6E28               	movwf	btemp^0,c
 18985  01909C  0E01               	movlw	1
 18986  01909E  5E28               	subwf	btemp^0,f,c
 18987  0190A0  0EFF               	movlw	-1
 18988  0190A2  0060  F0A3  FFE3   	movff	btemp,plusw1
 18989  0190A8  A4D8               	btfss	status,2,c
 18990  0190AA  D7C6               	goto	u6820
 18991  0190AC                     u6840:
 18992                           
 18993                           ;stkvar	_sign @ sp[(-2)+0]
 18994  0190AC  0EFE               	movlw	-2
 18995  0190AE  50E3               	movf	plusw1,w,c
 18996  0190B0  B4D8               	btfsc	status,2,c
 18997  0190B2  D006               	goto	l8318
 18998                           
 18999                           ;stkvar	_dividend @ sp[(-2)+-2]
 19000                           ;stkvar	_dividend @ sp[(-2)+-2]
 19001  0190B4  0EFC               	movlw	-4
 19002  0190B6  6CE3               	negf	plusw1,c
 19003  0190B8  0EFD               	movlw	-3
 19004  0190BA  1EE3               	comf	plusw1,f,c
 19005  0190BC  B0D8               	btfsc	status,0,c
 19006  0190BE  2AE3               	incf	plusw1,f,c
 19007  0190C0                     l8318:
 19008                           
 19009                           ;stkvar	_dividend @ sp[(-2)+-2]
 19010  0190C0  0EFC               	movlw	-4
 19011  0190C2  006F FF8C  F028    	movff	plusw1,btemp
 19012  0190C8  0EFD               	movlw	-3
 19013  0190CA  006F FF8C  F029    	movff	plusw1,btemp+1
 19014                           
 19015                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19016  0190D0  0EFA               	movlw	250
 19017  0190D2  26E1               	addwf	fsr1l,f,c
 19018  0190D4  0EFF               	movlw	255
 19019  0190D6  22E2               	addwfc	fsr1h,f,c
 19020  0190D8  0012               	return		;funcret
 19021  0190DA                     __end_of___awmod:
 19022                           	opt callstack 0
 19023                           
 19024 ;; *************** function ___awdiv *****************
 19025 ;; Defined at:
 19026 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 19027 ;; Parameters:    Size  Location     Type
 19028 ;;  dividend        2  [STACK] int 
 19029 ;;  divisor         2  [STACK] int 
 19030 ;; Auto vars:     Size  Location     Type
 19031 ;;  quotient        2  [STACK] int 
 19032 ;;  sign            1  [STACK] unsigned char 
 19033 ;;  counter         1  [STACK] unsigned char 
 19034 ;; Return value:  Size  Location     Type
 19035 ;;                  2  [STACK] int 
 19036 ;; Registers used:
 19037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 19038 ;; Tracked objects:
 19039 ;;		On entry : 0/0
 19040 ;;		On exit  : 0/0
 19041 ;;		Unchanged: 0/0
 19042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19047 ;;Total ram usage:        0 bytes
 19048 ;; Hardware stack levels used:    1
 19049 ;; Hardware stack levels required when called:   15
 19050 ;; This function calls:
 19051 ;;		Nothing
 19052 ;; This function is called by:
 19053 ;;		_efgtoa
 19054 ;; This function uses a reentrant model
 19055 ;;
 19056                           
 19057                           	psect	text65
 19058  0189A6                     __ptext65:
 19059                           	opt callstack 0
 19060  0189A6                     ___awdiv:
 19061                           	opt callstack 0
 19062                           
 19063                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19064  0189A6  52E6               	movf	postinc1,f,c
 19065  0189A8  52E6               	movf	postinc1,f,c
 19066  0189AA  52E6               	movf	postinc1,f,c
 19067  0189AC  52E6               	movf	postinc1,f,c
 19068                           
 19069                           ;stkvar	_sign @ sp[(-4)+2]
 19070                           
 19071                           ;incstack = 0
 19072 ;; hardware stack exceeded
 19073  0189AE  0EFE               	movlw	-2
 19074  0189B0  6AE3               	clrf	plusw1,c
 19075                           
 19076                           ;stkvar	_divisor @ sp[(-4)+-4]
 19077  0189B2  0EF9               	movlw	-7
 19078  0189B4  AEE3               	btfss	plusw1,7,c
 19079  0189B6  D009               	goto	l8246
 19080                           
 19081                           ;stkvar	_divisor @ sp[(-4)+-4]
 19082                           ;stkvar	_divisor @ sp[(-4)+-4]
 19083  0189B8  0EF8               	movlw	-8
 19084  0189BA  6CE3               	negf	plusw1,c
 19085  0189BC  0EF9               	movlw	-7
 19086  0189BE  1EE3               	comf	plusw1,f,c
 19087  0189C0  B0D8               	btfsc	status,0,c
 19088  0189C2  2AE3               	incf	plusw1,f,c
 19089                           
 19090                           ;stkvar	_sign @ sp[(-4)+2]
 19091  0189C4  0EFE               	movlw	-2
 19092  0189C6  6AE3               	clrf	plusw1,c
 19093  0189C8  2AE3               	incf	plusw1,f,c
 19094  0189CA                     l8246:
 19095                           
 19096                           ;stkvar	_dividend @ sp[(-4)+-2]
 19097  0189CA  0EFB               	movlw	-5
 19098  0189CC  AEE3               	btfss	plusw1,7,c
 19099  0189CE  D008               	goto	l8252
 19100                           
 19101                           ;stkvar	_dividend @ sp[(-4)+-2]
 19102                           ;stkvar	_dividend @ sp[(-4)+-2]
 19103  0189D0  0EFA               	movlw	-6
 19104  0189D2  6CE3               	negf	plusw1,c
 19105  0189D4  0EFB               	movlw	-5
 19106  0189D6  1EE3               	comf	plusw1,f,c
 19107  0189D8  B0D8               	btfsc	status,0,c
 19108  0189DA  2AE3               	incf	plusw1,f,c
 19109                           
 19110                           ;stkvar	_sign @ sp[(-4)+2]
 19111  0189DC  0EFE               	movlw	-2
 19112  0189DE  70E3               	btg	plusw1,0,c
 19113  0189E0                     l8252:
 19114                           
 19115                           ;stkvar	_quotient @ sp[(-4)+0]
 19116  0189E0  0EFC               	movlw	-4
 19117  0189E2  6AE3               	clrf	plusw1,c
 19118  0189E4  0EFD               	movlw	-3
 19119  0189E6  6AE3               	clrf	plusw1,c
 19120                           
 19121                           ;stkvar	_divisor @ sp[(-4)+-4]
 19122  0189E8  0EF8               	movlw	-8
 19123  0189EA  006F FF8C  F028    	movff	plusw1,btemp
 19124  0189F0  0EF9               	movlw	-7
 19125  0189F2  50E3               	movf	plusw1,w,c
 19126  0189F4  1028               	iorwf	btemp^0,w,c
 19127  0189F6  B4D8               	btfsc	status,2,c
 19128  0189F8  D066               	goto	u6770
 19129                           
 19130                           ;stkvar	_counter @ sp[(-4)+3]
 19131  0189FA  0EFF               	movlw	-1
 19132  0189FC  6AE3               	clrf	plusw1,c
 19133  0189FE  D012               	goto	L21
 19134  018A00                     l8258:
 19135                           
 19136                           ;stkvar	_divisor @ sp[(-4)+-4]
 19137  018A00  0EF8               	movlw	-8
 19138  018A02  50E3               	movf	plusw1,w,c
 19139  018A04  90D8               	bcf	status,0,c
 19140  018A06  34E8               	rlcf	wreg,w,c
 19141  018A08  6E28               	movwf	btemp^0,c
 19142  018A0A  0EF8               	movlw	-8
 19143  018A0C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19144  018A12  0EF9               	movlw	-7
 19145  018A14  50E3               	movf	plusw1,w,c
 19146  018A16  34E8               	rlcf	wreg,w,c
 19147  018A18  6E28               	movwf	btemp^0,c
 19148  018A1A  0EF9               	movlw	-7
 19149  018A1C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19150                           
 19151                           ;stkvar	_counter @ sp[(-4)+3]
 19152  018A22  0EFF               	movlw	-1
 19153  018A24                     L21:
 19154  018A24  2AE3               	incf	plusw1,f,c
 19155                           
 19156                           ;stkvar	_divisor @ sp[(-4)+-4]
 19157  018A26  0EF9               	movlw	-7
 19158  018A28  AEE3               	btfss	plusw1,7,c
 19159  018A2A  D7EA               	goto	l8258
 19160  018A2C                     u6750:
 19161                           
 19162                           ;stkvar	_quotient @ sp[(-4)+0]
 19163  018A2C  0EFC               	movlw	-4
 19164  018A2E  50E3               	movf	plusw1,w,c
 19165  018A30  90D8               	bcf	status,0,c
 19166  018A32  34E8               	rlcf	wreg,w,c
 19167  018A34  6E28               	movwf	btemp^0,c
 19168  018A36  0EFC               	movlw	-4
 19169  018A38  0060  F0A3  FFE3   	movff	btemp,plusw1
 19170  018A3E  0EFD               	movlw	-3
 19171  018A40  50E3               	movf	plusw1,w,c
 19172  018A42  34E8               	rlcf	wreg,w,c
 19173  018A44  6E28               	movwf	btemp^0,c
 19174  018A46  0EFD               	movlw	-3
 19175  018A48  0060  F0A3  FFE3   	movff	btemp,plusw1
 19176                           
 19177                           ;stkvar	_divisor @ sp[(-4)+-4]
 19178  018A4E  0EF8               	movlw	-8
 19179  018A50  006F FF8C  F032    	movff	plusw1,btemp+10
 19180  018A56  0EF9               	movlw	-7
 19181  018A58  006F FF8C  F033    	movff	plusw1,btemp+11
 19182                           
 19183                           ;stkvar	_dividend @ sp[(-4)+-2]
 19184  018A5E  0EFA               	movlw	-6
 19185  018A60  006F FF8C  F030    	movff	plusw1,btemp+8
 19186  018A66  0EFB               	movlw	-5
 19187  018A68  006F FF8C  F031    	movff	plusw1,btemp+9
 19188  018A6E  5032               	movf	(btemp+10)^0,w,c
 19189  018A70  5C30               	subwf	(btemp+8)^0,w,c
 19190  018A72  5033               	movf	(btemp+11)^0,w,c
 19191  018A74  5831               	subwfb	(btemp+9)^0,w,c
 19192  018A76  A0D8               	btfss	status,0,c
 19193  018A78  D016               	goto	l8272
 19194                           
 19195                           ;stkvar	_divisor @ sp[(-4)+-4]
 19196                           ;stkvar	_dividend @ sp[(-4)+-2]
 19197  018A7A  0EFA               	movlw	-6
 19198  018A7C  50E3               	movf	plusw1,w,c
 19199  018A7E  6E28               	movwf	btemp^0,c
 19200  018A80  0EF8               	movlw	-8
 19201  018A82  50E3               	movf	plusw1,w,c
 19202  018A84  5E28               	subwf	btemp^0,f,c
 19203  018A86  0EFA               	movlw	-6
 19204  018A88  0060  F0A3  FFE3   	movff	btemp,plusw1
 19205  018A8E  0EFB               	movlw	-5
 19206  018A90  50E3               	movf	plusw1,w,c
 19207  018A92  6E28               	movwf	btemp^0,c
 19208  018A94  0EF9               	movlw	-7
 19209  018A96  50E3               	movf	plusw1,w,c
 19210  018A98  5A28               	subwfb	btemp^0,f,c
 19211  018A9A  0EFB               	movlw	-5
 19212  018A9C  0060  F0A3  FFE3   	movff	btemp,plusw1
 19213                           
 19214                           ;stkvar	_quotient @ sp[(-4)+0]
 19215  018AA2  0EFC               	movlw	-4
 19216  018AA4  80E3               	bsf	plusw1,0,c
 19217  018AA6                     l8272:
 19218                           
 19219                           ;stkvar	_divisor @ sp[(-4)+-4]
 19220  018AA6  90D8               	bcf	status,0,c
 19221  018AA8  0EF9               	movlw	-7
 19222  018AAA  32E3               	rrcf	plusw1,f,c
 19223  018AAC  0EF8               	movlw	-8
 19224  018AAE  32E3               	rrcf	plusw1,f,c
 19225                           
 19226                           ;stkvar	_counter @ sp[(-4)+3]
 19227  018AB0  0EFF               	movlw	-1
 19228  018AB2  50E3               	movf	plusw1,w,c
 19229  018AB4  6E28               	movwf	btemp^0,c
 19230  018AB6  0E01               	movlw	1
 19231  018AB8  5E28               	subwf	btemp^0,f,c
 19232  018ABA  0EFF               	movlw	-1
 19233  018ABC  0060  F0A3  FFE3   	movff	btemp,plusw1
 19234  018AC2  A4D8               	btfss	status,2,c
 19235  018AC4  D7B3               	goto	u6750
 19236  018AC6                     u6770:
 19237                           
 19238                           ;stkvar	_sign @ sp[(-4)+2]
 19239  018AC6  0EFE               	movlw	-2
 19240  018AC8  50E3               	movf	plusw1,w,c
 19241  018ACA  B4D8               	btfsc	status,2,c
 19242  018ACC  D006               	goto	l8280
 19243                           
 19244                           ;stkvar	_quotient @ sp[(-4)+0]
 19245                           ;stkvar	_quotient @ sp[(-4)+0]
 19246  018ACE  0EFC               	movlw	-4
 19247  018AD0  6CE3               	negf	plusw1,c
 19248  018AD2  0EFD               	movlw	-3
 19249  018AD4  1EE3               	comf	plusw1,f,c
 19250  018AD6  B0D8               	btfsc	status,0,c
 19251  018AD8  2AE3               	incf	plusw1,f,c
 19252  018ADA                     l8280:
 19253                           
 19254                           ;stkvar	_quotient @ sp[(-4)+0]
 19255  018ADA  0EFC               	movlw	-4
 19256  018ADC  006F FF8C  F028    	movff	plusw1,btemp
 19257  018AE2  0EFD               	movlw	-3
 19258  018AE4  006F FF8C  F029    	movff	plusw1,btemp+1
 19259                           
 19260                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 19261  018AEA  0EF8               	movlw	248
 19262  018AEC  26E1               	addwf	fsr1l,f,c
 19263  018AEE  0EFF               	movlw	255
 19264  018AF0  22E2               	addwfc	fsr1h,f,c
 19265  018AF2  0012               	return		;funcret
 19266  018AF4                     __end_of___awdiv:
 19267                           	opt callstack 0
 19268                           
 19269 ;; *************** function _dtoa *****************
 19270 ;; Defined at:
 19271 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 19272 ;; Parameters:    Size  Location     Type
 19273 ;;  fp              2  [STACK] PTR struct _IO_FILE
 19274 ;;		 -> f(6), NULL(0), 
 19275 ;;  d               8  [STACK] long long 
 19276 ;; Auto vars:     Size  Location     Type
 19277 ;;  n               8  [STACK] long long 
 19278 ;;  i               2  [STACK] int 
 19279 ;;  s               2  [STACK] int 
 19280 ;;  w               2  [STACK] int 
 19281 ;;  p               2  [STACK] int 
 19282 ;; Return value:  Size  Location     Type
 19283 ;;                  2  [STACK] int 
 19284 ;; Registers used:
 19285 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 19286 ;; Tracked objects:
 19287 ;;		On entry : 0/0
 19288 ;;		On exit  : 0/0
 19289 ;;		Unchanged: 0/0
 19290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19295 ;;Total ram usage:        0 bytes
 19296 ;; Hardware stack levels used:    1
 19297 ;; Hardware stack levels required when called:   20
 19298 ;; This function calls:
 19299 ;;		___aodiv
 19300 ;;		___aomod
 19301 ;;		_abs
 19302 ;;		_pad
 19303 ;; This function is called by:
 19304 ;;		_vfpfcnvrt
 19305 ;; This function uses a reentrant model
 19306 ;;
 19307                           
 19308                           	psect	text66
 19309  01535C                     __ptext66:
 19310                           	opt callstack 0
 19311  01535C                     _dtoa:
 19312                           	opt callstack 0
 19313                           
 19314                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 19315  01535C  0E12               	movlw	18
 19316  01535E  26E1               	addwf	fsr1l,f,c
 19317  015360  0E00               	movlw	0
 19318  015362  22E2               	addwfc	fsr1h,f,c
 19319                           
 19320                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 19321                           ;stkvar	_d @ sp[(-18)+-10]
 19322                           
 19323                           ;incstack = 0
 19324 ;; hardware stack exceeded
 19325  015364  0EE4               	movlw	228
 19326  015366  24E1               	addwf	fsr1l,w,c
 19327  015368  6ED9               	movwf	fsr2l,c
 19328  01536A  0EFF               	movlw	255
 19329  01536C  20E2               	addwfc	fsr1h,w,c
 19330  01536E  6EDA               	movwf	fsr2h,c
 19331                           
 19332                           ;stkvar	_n @ sp[(-18)+2]
 19333  015370  0E08               	movlw	8
 19334  015372  6E28               	movwf	btemp^0,c
 19335  015374  0EF0               	movlw	-16
 19336  015376                     us1047999:
 19337  015376  006F FF7B FFE3     	movff	postinc2,plusw1
 19338  01537C  28E8               	incf	wreg,w,c
 19339  01537E  2E28               	decfsz	btemp^0,f,c
 19340  015380  D7FA               	bra	us1047999
 19341                           
 19342                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 19343                           ;stkvar	_n @ sp[(-18)+2]
 19344  015382  0EF7               	movlw	-9
 19345  015384  AEE3               	btfss	plusw1,7,c
 19346  015386  D002               	goto	u10480
 19347  015388  0E01               	movlw	1
 19348  01538A  D001               	goto	u10490
 19349  01538C                     u10480:
 19350  01538C  0E00               	movlw	0
 19351  01538E                     u10490:
 19352  01538E  6E32               	movwf	(btemp+10)^0,c
 19353  015390  6A33               	clrf	(btemp+11)^0,c
 19354                           
 19355                           ;stkvar	_s @ sp[(-18)+12]
 19356  015392  0EFA               	movlw	-6
 19357  015394  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19358  01539A  0EFB               	movlw	-5
 19359  01539C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19360                           
 19361                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 19362                           ;stkvar	_s @ sp[(-18)+12]
 19363  0153A2  0EFA               	movlw	-6
 19364  0153A4  006F FF8C  F028    	movff	plusw1,btemp
 19365  0153AA  0EFB               	movlw	-5
 19366  0153AC  50E3               	movf	plusw1,w,c
 19367  0153AE  1028               	iorwf	btemp^0,w,c
 19368  0153B0  B4D8               	btfsc	status,2,c
 19369  0153B2  D025               	goto	u10510
 19370                           
 19371                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 19372                           ;stkvar	_n @ sp[(-18)+2]
 19373                           ;stkvar	_n @ sp[(-18)+2]
 19374  0153B4  0EF0               	movlw	-16
 19375  0153B6  6CE3               	negf	plusw1,c
 19376  0153B8  0EF1               	movlw	-15
 19377  0153BA  1EE3               	comf	plusw1,f,c
 19378  0153BC  0EF2               	movlw	-14
 19379  0153BE  1EE3               	comf	plusw1,f,c
 19380  0153C0  0EF3               	movlw	-13
 19381  0153C2  1EE3               	comf	plusw1,f,c
 19382  0153C4  0EF4               	movlw	-12
 19383  0153C6  1EE3               	comf	plusw1,f,c
 19384  0153C8  0EF5               	movlw	-11
 19385  0153CA  1EE3               	comf	plusw1,f,c
 19386  0153CC  0EF6               	movlw	-10
 19387  0153CE  1EE3               	comf	plusw1,f,c
 19388  0153D0  0EF7               	movlw	-9
 19389  0153D2  1EE3               	comf	plusw1,f,c
 19390  0153D4  E314               	bnc	u10510
 19391  0153D6  0EF1               	movlw	-15
 19392  0153D8  2AE3               	incf	plusw1,f,c
 19393  0153DA  E311               	bnc	u10510
 19394  0153DC  0EF2               	movlw	-14
 19395  0153DE  2AE3               	incf	plusw1,f,c
 19396  0153E0  E30E               	bnc	u10510
 19397  0153E2  0EF3               	movlw	-13
 19398  0153E4  2AE3               	incf	plusw1,f,c
 19399  0153E6  E30B               	bnc	u10510
 19400  0153E8  0EF4               	movlw	-12
 19401  0153EA  2AE3               	incf	plusw1,f,c
 19402  0153EC  E308               	bnc	u10510
 19403  0153EE  0EF5               	movlw	-11
 19404  0153F0  2AE3               	incf	plusw1,f,c
 19405  0153F2  E305               	bnc	u10510
 19406  0153F4  0EF6               	movlw	-10
 19407  0153F6  2AE3               	incf	plusw1,f,c
 19408  0153F8  E302               	bnc	u10510
 19409  0153FA  0EF7               	movlw	-9
 19410  0153FC  2AE3               	incf	plusw1,f,c
 19411  0153FE                     u10510:
 19412                           
 19413                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 19414  0153FE  AE4B               	btfss	(_prec+1)^0,7,c
 19415                           
 19416                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 19417  015400  924C               	bcf	_flags^0,1,c
 19418                           
 19419                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 19420  015402  BE4B               	btfsc	(_prec+1)^0,7,c
 19421  015404  D005               	goto	u10530
 19422  015406  504B               	movf	(_prec+1)^0,w,c
 19423  015408  E110               	bnz	l11500
 19424  01540A  044A               	decf	_prec^0,w,c
 19425  01540C  B0D8               	btfsc	status,0,c
 19426  01540E  D00D               	goto	l11500
 19427  015410                     u10530:
 19428  015410  0E01               	movlw	1
 19429  015412  6E32               	movwf	(btemp+10)^0,c
 19430  015414  0E00               	movlw	0
 19431  015416  6E33               	movwf	(btemp+11)^0,c
 19432                           
 19433                           ;stkvar	_p @ sp[(-18)+16]
 19434  015418  0EFE               	movlw	-2
 19435  01541A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19436  015420  0EFF               	movlw	-1
 19437  015422  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19438  015428  D008               	goto	l2120
 19439  01542A                     l11500:
 19440                           
 19441                           ;stkvar	_p @ sp[(-18)+16]
 19442  01542A  0EFE               	movlw	-2
 19443  01542C  0060  F12B  FFE3   	movff	_prec,plusw1
 19444  015432  0EFF               	movlw	-1
 19445  015434  0060  F12F  FFE3   	movff	_prec+1,plusw1
 19446  01543A                     l2120:
 19447                           
 19448                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 19449                           ;stkvar	_w @ sp[(-18)+14]
 19450  01543A  0EFC               	movlw	-4
 19451  01543C  0060  F123  FFE3   	movff	_width,plusw1
 19452  015442  0EFD               	movlw	-3
 19453  015444  0060  F127  FFE3   	movff	_width+1,plusw1
 19454                           
 19455                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 19456                           ;stkvar	_s @ sp[(-18)+12]
 19457  01544A  0EFA               	movlw	-6
 19458  01544C  006F FF8C  F028    	movff	plusw1,btemp
 19459  015452  0EFB               	movlw	-5
 19460  015454  50E3               	movf	plusw1,w,c
 19461  015456  1028               	iorwf	btemp^0,w,c
 19462  015458  A4D8               	btfss	status,2,c
 19463  01545A  D002               	goto	u10550
 19464  01545C  A44C               	btfss	_flags^0,2,c
 19465  01545E  D00A               	goto	l11508
 19466  015460                     u10550:
 19467                           
 19468                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 19469                           ;stkvar	_w @ sp[(-18)+14]
 19470  015460  50E1               	movf	fsr1l,w,c
 19471  015462  0FFC               	addlw	-4
 19472  015464  6ED9               	movwf	fsr2l,c
 19473  015466  50E2               	movf	fsr1h,w,c
 19474  015468  6EDA               	movwf	fsr2h,c
 19475  01546A  0EFF               	movlw	255
 19476  01546C  22DA               	addwfc	fsr2h,f,c
 19477  01546E  06DE               	decf	postinc2,f,c
 19478  015470  0E00               	movlw	0
 19479  015472  5ADD               	subwfb	postdec2,f,c
 19480  015474                     l11508:
 19481                           
 19482                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 19483  015474  0E4F               	movlw	79
 19484  015476  6E32               	movwf	(btemp+10)^0,c
 19485  015478  0E00               	movlw	0
 19486  01547A  6E33               	movwf	(btemp+11)^0,c
 19487                           
 19488                           ;stkvar	_i @ sp[(-18)+10]
 19489  01547C  0EF8               	movlw	-8
 19490  01547E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19491  015484  0EF9               	movlw	-7
 19492  015486  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19493                           
 19494                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 19495  01548C  0103               	movlb	3	; () banked
 19496  01548E  6BE3               	clrf	(_dbuf+79)& (0+255),b
 19497                           
 19498                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19499  015490  D109               	goto	l11522
 19500  015492                     l11512:
 19501                           
 19502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 19503                           ;stkvar	_i @ sp[(-18)+10]
 19504  015492  50E1               	movf	fsr1l,w,c
 19505  015494  0FF8               	addlw	-8
 19506  015496  6ED9               	movwf	fsr2l,c
 19507  015498  50E2               	movf	fsr1h,w,c
 19508  01549A  6EDA               	movwf	fsr2h,c
 19509  01549C  0EFF               	movlw	255
 19510  01549E  22DA               	addwfc	fsr2h,f,c
 19511  0154A0  06DE               	decf	postinc2,f,c
 19512  0154A2  0E00               	movlw	0
 19513  0154A4  5ADD               	subwfb	postdec2,f,c
 19514                           
 19515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19516  0154A6  0E0A               	movlw	10
 19517  0154A8  6EE6               	movwf	postinc1,c
 19518  0154AA  0E00               	movlw	0
 19519  0154AC  6EE6               	movwf	postinc1,c
 19520  0154AE  0E00               	movlw	0
 19521  0154B0  6EE6               	movwf	postinc1,c
 19522  0154B2  0E00               	movlw	0
 19523  0154B4  6EE6               	movwf	postinc1,c
 19524  0154B6  0E00               	movlw	0
 19525  0154B8  6EE6               	movwf	postinc1,c
 19526  0154BA  0E00               	movlw	0
 19527  0154BC  6EE6               	movwf	postinc1,c
 19528  0154BE  0E00               	movlw	0
 19529  0154C0  6EE6               	movwf	postinc1,c
 19530  0154C2  0E00               	movlw	0
 19531  0154C4  6EE6               	movwf	postinc1,c
 19532                           
 19533                           ;stkvar	_n @ sp[(-26)+2]
 19534  0154C6  50E1               	movf	fsr1l,w,c
 19535  0154C8  0FE8               	addlw	-24
 19536  0154CA  6ED9               	movwf	fsr2l,c
 19537  0154CC  50E2               	movf	fsr1h,w,c
 19538  0154CE  6EDA               	movwf	fsr2h,c
 19539  0154D0  0EFF               	movlw	255
 19540  0154D2  22DA               	addwfc	fsr2h,f,c
 19541  0154D4  006F FF7B FFE6     	movff	postinc2,postinc1
 19542  0154DA  006F FF7B FFE6     	movff	postinc2,postinc1
 19543  0154E0  006F FF7B FFE6     	movff	postinc2,postinc1
 19544  0154E6  006F FF7B FFE6     	movff	postinc2,postinc1
 19545  0154EC  006F FF7B FFE6     	movff	postinc2,postinc1
 19546  0154F2  006F FF7B FFE6     	movff	postinc2,postinc1
 19547  0154F8  006F FF7B FFE6     	movff	postinc2,postinc1
 19548  0154FE  006F FF7B FFE6     	movff	postinc2,postinc1
 19549  015504  ECA1  F0B9         	call	___aomod	;wreg free
 19550  015508  52E5               	movf	postdec1,f,c
 19551  01550A  006F FF9C  F03F    	movff	indf1,btemp+23
 19552  015510  52E5               	movf	postdec1,f,c
 19553  015512  006F FF9C  F03E    	movff	indf1,btemp+22
 19554  015518  52E5               	movf	postdec1,f,c
 19555  01551A  006F FF9C  F03D    	movff	indf1,btemp+21
 19556  015520  52E5               	movf	postdec1,f,c
 19557  015522  006F FF9C  F03C    	movff	indf1,btemp+20
 19558  015528  52E5               	movf	postdec1,f,c
 19559  01552A  006F FF9C  F03B    	movff	indf1,btemp+19
 19560  015530  52E5               	movf	postdec1,f,c
 19561  015532  006F FF9C  F03A    	movff	indf1,btemp+18
 19562  015538  52E5               	movf	postdec1,f,c
 19563  01553A  006F FF9C  F039    	movff	indf1,btemp+17
 19564  015540  52E5               	movf	postdec1,f,c
 19565  015542  006F FF9C  F038    	movff	indf1,btemp+16
 19566  015548  0EF8               	movlw	248
 19567  01554A  26E1               	addwf	fsr1l,f,c
 19568  01554C  0EFF               	movlw	255
 19569  01554E  22E2               	addwfc	fsr1h,f,c
 19570  015550  0060  F0E0  F032   	movff	btemp+16,btemp+10
 19571  015556  0060  F0E4  F033   	movff	btemp+17,btemp+11
 19572  01555C  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 19573  015562  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 19574  015568  EC1C  F0D5         	call	_abs	;wreg free
 19575  01556C  0E30               	movlw	48
 19576  01556E  2628               	addwf	btemp^0,f,c
 19577                           
 19578                           ;stkvar	_i @ sp[(-18)+10]
 19579  015570  0EF8               	movlw	-8
 19580  015572  006F FF8C  F032    	movff	plusw1,btemp+10
 19581  015578  0EF9               	movlw	-7
 19582  01557A  006F FF8C  F033    	movff	plusw1,btemp+11
 19583  015580  0E94               	movlw	low _dbuf
 19584  015582  2432               	addwf	(btemp+10)^0,w,c
 19585  015584  6ED9               	movwf	fsr2l,c
 19586  015586  0E03               	movlw	high _dbuf
 19587  015588  2033               	addwfc	(btemp+11)^0,w,c
 19588  01558A  6EDA               	movwf	fsr2h,c
 19589  01558C  0060  F0A3  FFDF   	movff	btemp,indf2
 19590                           
 19591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19592                           ;stkvar	_p @ sp[(-18)+16]
 19593  015592  50E1               	movf	fsr1l,w,c
 19594  015594  0FFE               	addlw	-2
 19595  015596  6ED9               	movwf	fsr2l,c
 19596  015598  50E2               	movf	fsr1h,w,c
 19597  01559A  6EDA               	movwf	fsr2h,c
 19598  01559C  0EFF               	movlw	255
 19599  01559E  22DA               	addwfc	fsr2h,f,c
 19600  0155A0  06DE               	decf	postinc2,f,c
 19601  0155A2  0E00               	movlw	0
 19602  0155A4  5ADD               	subwfb	postdec2,f,c
 19603                           
 19604                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19605                           ;stkvar	_w @ sp[(-18)+14]
 19606  0155A6  50E1               	movf	fsr1l,w,c
 19607  0155A8  0FFC               	addlw	-4
 19608  0155AA  6ED9               	movwf	fsr2l,c
 19609  0155AC  50E2               	movf	fsr1h,w,c
 19610  0155AE  6EDA               	movwf	fsr2h,c
 19611  0155B0  0EFF               	movlw	255
 19612  0155B2  22DA               	addwfc	fsr2h,f,c
 19613  0155B4  06DE               	decf	postinc2,f,c
 19614  0155B6  0E00               	movlw	0
 19615  0155B8  5ADD               	subwfb	postdec2,f,c
 19616                           
 19617                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19618  0155BA  0E0A               	movlw	10
 19619  0155BC  6EE6               	movwf	postinc1,c
 19620  0155BE  0E00               	movlw	0
 19621  0155C0  6EE6               	movwf	postinc1,c
 19622  0155C2  0E00               	movlw	0
 19623  0155C4  6EE6               	movwf	postinc1,c
 19624  0155C6  0E00               	movlw	0
 19625  0155C8  6EE6               	movwf	postinc1,c
 19626  0155CA  0E00               	movlw	0
 19627  0155CC  6EE6               	movwf	postinc1,c
 19628  0155CE  0E00               	movlw	0
 19629  0155D0  6EE6               	movwf	postinc1,c
 19630  0155D2  0E00               	movlw	0
 19631  0155D4  6EE6               	movwf	postinc1,c
 19632  0155D6  0E00               	movlw	0
 19633  0155D8  6EE6               	movwf	postinc1,c
 19634                           
 19635                           ;stkvar	_n @ sp[(-26)+2]
 19636  0155DA  50E1               	movf	fsr1l,w,c
 19637  0155DC  0FE8               	addlw	-24
 19638  0155DE  6ED9               	movwf	fsr2l,c
 19639  0155E0  50E2               	movf	fsr1h,w,c
 19640  0155E2  6EDA               	movwf	fsr2h,c
 19641  0155E4  0EFF               	movlw	255
 19642  0155E6  22DA               	addwfc	fsr2h,f,c
 19643  0155E8  006F FF7B FFE6     	movff	postinc2,postinc1
 19644  0155EE  006F FF7B FFE6     	movff	postinc2,postinc1
 19645  0155F4  006F FF7B FFE6     	movff	postinc2,postinc1
 19646  0155FA  006F FF7B FFE6     	movff	postinc2,postinc1
 19647  015600  006F FF7B FFE6     	movff	postinc2,postinc1
 19648  015606  006F FF7B FFE6     	movff	postinc2,postinc1
 19649  01560C  006F FF7B FFE6     	movff	postinc2,postinc1
 19650  015612  006F FF7B FFE6     	movff	postinc2,postinc1
 19651  015618  EC27  F0B7         	call	___aodiv	;wreg free
 19652  01561C  52E5               	movf	postdec1,f,c
 19653  01561E  006F FF9C  F03F    	movff	indf1,btemp+23
 19654  015624  52E5               	movf	postdec1,f,c
 19655  015626  006F FF9C  F03E    	movff	indf1,btemp+22
 19656  01562C  52E5               	movf	postdec1,f,c
 19657  01562E  006F FF9C  F03D    	movff	indf1,btemp+21
 19658  015634  52E5               	movf	postdec1,f,c
 19659  015636  006F FF9C  F03C    	movff	indf1,btemp+20
 19660  01563C  52E5               	movf	postdec1,f,c
 19661  01563E  006F FF9C  F03B    	movff	indf1,btemp+19
 19662  015644  52E5               	movf	postdec1,f,c
 19663  015646  006F FF9C  F03A    	movff	indf1,btemp+18
 19664  01564C  52E5               	movf	postdec1,f,c
 19665  01564E  006F FF9C  F039    	movff	indf1,btemp+17
 19666  015654  52E5               	movf	postdec1,f,c
 19667  015656  006F FF9C  F038    	movff	indf1,btemp+16
 19668  01565C  0EF8               	movlw	248
 19669  01565E  26E1               	addwf	fsr1l,f,c
 19670  015660  0EFF               	movlw	255
 19671  015662  22E2               	addwfc	fsr1h,f,c
 19672                           
 19673                           ;stkvar	_n @ sp[(-18)+2]
 19674  015664  0EF0               	movlw	-16
 19675  015666  0060  F0E3  FFE3   	movff	btemp+16,plusw1
 19676  01566C  0EF1               	movlw	-15
 19677  01566E  0060  F0E7  FFE3   	movff	btemp+17,plusw1
 19678  015674  0EF2               	movlw	-14
 19679  015676  0060  F0EB  FFE3   	movff	btemp+18,plusw1
 19680  01567C  0EF3               	movlw	-13
 19681  01567E  0060  F0EF  FFE3   	movff	btemp+19,plusw1
 19682  015684  0EF4               	movlw	-12
 19683  015686  0060  F0F3  FFE3   	movff	btemp+20,plusw1
 19684  01568C  0EF5               	movlw	-11
 19685  01568E  0060  F0F7  FFE3   	movff	btemp+21,plusw1
 19686  015694  0EF6               	movlw	-10
 19687  015696  0060  F0FB  FFE3   	movff	btemp+22,plusw1
 19688  01569C  0EF7               	movlw	-9
 19689  01569E  0060  F0FF  FFE3   	movff	btemp+23,plusw1
 19690  0156A4                     l11522:
 19691                           
 19692                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19693                           ;stkvar	_i @ sp[(-18)+10]
 19694  0156A4  0EF9               	movlw	-7
 19695  0156A6  BEE3               	btfsc	plusw1,7,c
 19696  0156A8  D036               	goto	u10600
 19697  0156AA  0EF9               	movlw	-7
 19698  0156AC  50E3               	movf	plusw1,w,c
 19699  0156AE  E104               	bnz	u10560
 19700  0156B0  0EF8               	movlw	-8
 19701  0156B2  04E3               	decf	plusw1,w,c
 19702  0156B4  A0D8               	btfss	status,0,c
 19703  0156B6  D02F               	goto	u10600
 19704  0156B8                     u10560:
 19705                           
 19706                           ;stkvar	_n @ sp[(-18)+2]
 19707  0156B8  0EF0               	movlw	-16
 19708  0156BA  50E3               	movf	plusw1,w,c
 19709  0156BC  E115               	bnz	u10571
 19710  0156BE  0EF1               	movlw	-15
 19711  0156C0  50E3               	movf	plusw1,w,c
 19712  0156C2  E112               	bnz	u10571
 19713  0156C4  0EF2               	movlw	-14
 19714  0156C6  50E3               	movf	plusw1,w,c
 19715  0156C8  E10F               	bnz	u10571
 19716  0156CA  0EF3               	movlw	-13
 19717  0156CC  50E3               	movf	plusw1,w,c
 19718  0156CE  E10C               	bnz	u10571
 19719  0156D0  0EF4               	movlw	-12
 19720  0156D2  50E3               	movf	plusw1,w,c
 19721  0156D4  E109               	bnz	u10571
 19722  0156D6  0EF5               	movlw	-11
 19723  0156D8  50E3               	movf	plusw1,w,c
 19724  0156DA  E106               	bnz	u10571
 19725  0156DC  0EF6               	movlw	-10
 19726  0156DE  50E3               	movf	plusw1,w,c
 19727  0156E0  E103               	bnz	u10571
 19728  0156E2  0EF7               	movlw	-9
 19729  0156E4  50E3               	movf	plusw1,w,c
 19730  0156E6  A4D8               	btfss	status,2,c
 19731  0156E8                     u10571:
 19732  0156E8  D6D4               	goto	l11512
 19733                           
 19734                           ;stkvar	_p @ sp[(-18)+16]
 19735  0156EA  0EFF               	movlw	-1
 19736  0156EC  BEE3               	btfsc	plusw1,7,c
 19737  0156EE  D007               	goto	u10580
 19738  0156F0  0EFF               	movlw	-1
 19739  0156F2  50E3               	movf	plusw1,w,c
 19740  0156F4  E103               	bnz	u10581
 19741  0156F6  0EFE               	movlw	-2
 19742  0156F8  04E3               	decf	plusw1,w,c
 19743  0156FA  B0D8               	btfsc	status,0,c
 19744  0156FC                     u10581:
 19745  0156FC  D6CA               	goto	l11512
 19746  0156FE                     u10580:
 19747                           
 19748                           ;stkvar	_w @ sp[(-18)+14]
 19749  0156FE  0EFD               	movlw	-3
 19750  015700  BEE3               	btfsc	plusw1,7,c
 19751  015702  D009               	goto	u10600
 19752  015704  0EFD               	movlw	-3
 19753  015706  50E3               	movf	plusw1,w,c
 19754  015708  E104               	bnz	u10590
 19755  01570A  0EFC               	movlw	-4
 19756  01570C  04E3               	decf	plusw1,w,c
 19757  01570E  A0D8               	btfss	status,0,c
 19758  015710  D002               	goto	u10600
 19759  015712                     u10590:
 19760  015712  B24C               	btfsc	_flags^0,1,c
 19761  015714  D6BE               	goto	l11512
 19762  015716                     u10600:
 19763                           
 19764                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19765                           ;stkvar	_s @ sp[(-18)+12]
 19766  015716  0EFA               	movlw	-6
 19767  015718  006F FF8C  F028    	movff	plusw1,btemp
 19768  01571E  0EFB               	movlw	-5
 19769  015720  50E3               	movf	plusw1,w,c
 19770  015722  1028               	iorwf	btemp^0,w,c
 19771  015724  A4D8               	btfss	status,2,c
 19772  015726  D002               	goto	u10620
 19773  015728  A44C               	btfss	_flags^0,2,c
 19774  01572A  D033               	goto	l11546
 19775  01572C                     u10620:
 19776                           
 19777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19778                           ;stkvar	_i @ sp[(-18)+10]
 19779  01572C  50E1               	movf	fsr1l,w,c
 19780  01572E  0FF8               	addlw	-8
 19781  015730  6ED9               	movwf	fsr2l,c
 19782  015732  50E2               	movf	fsr1h,w,c
 19783  015734  6EDA               	movwf	fsr2h,c
 19784  015736  0EFF               	movlw	255
 19785  015738  22DA               	addwfc	fsr2h,f,c
 19786  01573A  06DE               	decf	postinc2,f,c
 19787  01573C  0E00               	movlw	0
 19788  01573E  5ADD               	subwfb	postdec2,f,c
 19789                           
 19790                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19791                           ;stkvar	_s @ sp[(-18)+12]
 19792  015740  0EFA               	movlw	-6
 19793  015742  006F FF8C  F028    	movff	plusw1,btemp
 19794  015748  0EFB               	movlw	-5
 19795  01574A  50E3               	movf	plusw1,w,c
 19796  01574C  1028               	iorwf	btemp^0,w,c
 19797  01574E  A4D8               	btfss	status,2,c
 19798  015750  D002               	goto	l11542
 19799  015752  0E2B               	movlw	43
 19800  015754  D001               	goto	L22
 19801  015756                     l11542:
 19802  015756  0E2D               	movlw	45
 19803  015758                     L22:
 19804  015758  6E32               	movwf	(btemp+10)^0,c
 19805  01575A  0E00               	movlw	0
 19806  01575C  6E33               	movwf	(btemp+11)^0,c
 19807                           
 19808                           ;stkvar	_dtoa$5310 @ sp[(-18)+0]
 19809  01575E  0EEE               	movlw	-18
 19810  015760  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 19811  015766  0EEF               	movlw	-17
 19812  015768  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 19813                           
 19814                           ;stkvar	_dtoa$5310 @ sp[(-18)+0]
 19815                           ;stkvar	_i @ sp[(-18)+10]
 19816  01576E  0EF8               	movlw	-8
 19817  015770  006F FF8C  F032    	movff	plusw1,btemp+10
 19818  015776  0EF9               	movlw	-7
 19819  015778  006F FF8C  F033    	movff	plusw1,btemp+11
 19820  01577E  0E94               	movlw	low _dbuf
 19821  015780  2432               	addwf	(btemp+10)^0,w,c
 19822  015782  6ED9               	movwf	fsr2l,c
 19823  015784  0E03               	movlw	high _dbuf
 19824  015786  2033               	addwfc	(btemp+11)^0,w,c
 19825  015788  6EDA               	movwf	fsr2h,c
 19826  01578A  0EEE               	movlw	-18
 19827  01578C  006F FF8F FFDF     	movff	plusw1,indf2
 19828  015792                     l11546:
 19829                           
 19830                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19831                           ;stkvar	_w @ sp[(-18)+14]
 19832  015792  0EFC               	movlw	-4
 19833  015794  006F FF8F FFE6     	movff	plusw1,postinc1
 19834  01579A  006F FF8F FFE6     	movff	plusw1,postinc1
 19835                           
 19836                           ;stkvar	_i @ sp[(-20)+10]
 19837  0157A0  0E94               	movlw	low _dbuf
 19838  0157A2  6E32               	movwf	(btemp+10)^0,c
 19839  0157A4  0E03               	movlw	high _dbuf
 19840  0157A6  6E33               	movwf	(btemp+11)^0,c
 19841  0157A8  0EF6               	movlw	-10
 19842  0157AA  50E3               	movf	plusw1,w,c
 19843  0157AC  2632               	addwf	(btemp+10)^0,f,c
 19844  0157AE  0EF7               	movlw	-9
 19845  0157B0  50E3               	movf	plusw1,w,c
 19846  0157B2  2233               	addwfc	(btemp+11)^0,f,c
 19847  0157B4  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 19848  0157BA  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 19849                           
 19850                           ;stkvar	_fp @ sp[(-22)+-2]
 19851  0157C0  0EE8               	movlw	-24
 19852  0157C2  006F FF8F FFE6     	movff	plusw1,postinc1
 19853  0157C8  006F FF8F FFE6     	movff	plusw1,postinc1
 19854  0157CE  EC6D  F0C8         	call	_pad	;wreg free
 19855                           
 19856                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19857  0157D2  0EE4               	movlw	228
 19858  0157D4  26E1               	addwf	fsr1l,f,c
 19859  0157D6  0EFF               	movlw	255
 19860  0157D8  22E2               	addwfc	fsr1h,f,c
 19861  0157DA  0012               	return		;funcret
 19862  0157DC                     __end_of_dtoa:
 19863                           	opt callstack 0
 19864                           
 19865 ;; *************** function _abs *****************
 19866 ;; Defined at:
 19867 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19868 ;; Parameters:    Size  Location     Type
 19869 ;;  a               2  [STACK] int 
 19870 ;; Auto vars:     Size  Location     Type
 19871 ;;		None
 19872 ;; Return value:  Size  Location     Type
 19873 ;;                  2  [STACK] int 
 19874 ;; Registers used:
 19875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19876 ;; Tracked objects:
 19877 ;;		On entry : 0/3
 19878 ;;		On exit  : 0/0
 19879 ;;		Unchanged: 0/0
 19880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19885 ;;Total ram usage:        0 bytes
 19886 ;; Hardware stack levels used:    1
 19887 ;; Hardware stack levels required when called:   15
 19888 ;; This function calls:
 19889 ;;		Nothing
 19890 ;; This function is called by:
 19891 ;;		_dtoa
 19892 ;; This function uses a reentrant model
 19893 ;;
 19894                           
 19895                           	psect	text67
 19896  01AA38                     __ptext67:
 19897                           	opt callstack 0
 19898  01AA38                     _abs:
 19899                           	opt callstack 0
 19900                           
 19901                           ;stkvar	_a @ sp[(0)+-2]
 19902                           
 19903                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19904                           ;incstack = 0
 19905 ;; hardware stack exceeded
 19906  01AA38  0EFF               	movlw	-1
 19907  01AA3A  BEE3               	btfsc	plusw1,7,c
 19908  01AA3C  D007               	goto	u5730
 19909  01AA3E  0EFF               	movlw	-1
 19910  01AA40  50E3               	movf	plusw1,w,c
 19911  01AA42  E112               	bnz	l7734
 19912  01AA44  0EFE               	movlw	-2
 19913  01AA46  04E3               	decf	plusw1,w,c
 19914  01AA48  B0D8               	btfsc	status,0,c
 19915  01AA4A  D00E               	goto	l7734
 19916  01AA4C                     u5730:
 19917                           
 19918                           ;stkvar	_a @ sp[(0)+-2]
 19919  01AA4C  0EFE               	movlw	-2
 19920  01AA4E  006F FF8C  F028    	movff	plusw1,btemp
 19921  01AA54  1E28               	comf	btemp^0,f,c
 19922  01AA56  0EFF               	movlw	-1
 19923  01AA58  006F FF8C  F029    	movff	plusw1,btemp+1
 19924  01AA5E  1E29               	comf	(btemp+1)^0,f,c
 19925  01AA60  2A28               	incf	btemp^0,f,c
 19926  01AA62  B4D8               	btfsc	status,2,c
 19927  01AA64  2A29               	incf	(btemp+1)^0,f,c
 19928  01AA66  D008               	goto	l3046
 19929  01AA68                     l7734:
 19930                           
 19931                           ;stkvar	_a @ sp[(0)+-2]
 19932  01AA68  0EFE               	movlw	-2
 19933  01AA6A  006F FF8C  F028    	movff	plusw1,btemp
 19934  01AA70  0EFF               	movlw	-1
 19935  01AA72  006F FF8C  F029    	movff	plusw1,btemp+1
 19936  01AA78                     l3046:
 19937                           
 19938                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19939  01AA78  52E5               	movf	postdec1,f,c
 19940  01AA7A  52E5               	movf	postdec1,f,c
 19941  01AA7C  0012               	return		;funcret
 19942  01AA7E                     __end_of_abs:
 19943                           	opt callstack 0
 19944                           
 19945 ;; *************** function ___aomod *****************
 19946 ;; Defined at:
 19947 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19948 ;; Parameters:    Size  Location     Type
 19949 ;;  dividend        8  [STACK] long long 
 19950 ;;  divisor         8  [STACK] long long 
 19951 ;; Auto vars:     Size  Location     Type
 19952 ;;  sign            1  [STACK] unsigned char 
 19953 ;;  counter         1  [STACK] unsigned char 
 19954 ;; Return value:  Size  Location     Type
 19955 ;;                  8  [STACK] long long 
 19956 ;; Registers used:
 19957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19958 ;; Tracked objects:
 19959 ;;		On entry : 0/3
 19960 ;;		On exit  : 0/0
 19961 ;;		Unchanged: 0/0
 19962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19967 ;;Total ram usage:        0 bytes
 19968 ;; Hardware stack levels used:    1
 19969 ;; Hardware stack levels required when called:   15
 19970 ;; This function calls:
 19971 ;;		Nothing
 19972 ;; This function is called by:
 19973 ;;		_dtoa
 19974 ;; This function uses a reentrant model
 19975 ;;
 19976                           
 19977                           	psect	text68
 19978  017342                     __ptext68:
 19979                           	opt callstack 0
 19980  017342                     ___aomod:
 19981                           	opt callstack 0
 19982                           
 19983                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19984  017342  52E6               	movf	postinc1,f,c
 19985  017344  52E6               	movf	postinc1,f,c
 19986                           
 19987                           ;stkvar	_sign @ sp[(-2)+0]
 19988                           
 19989                           ;incstack = 0
 19990 ;; hardware stack exceeded
 19991  017346  0EFE               	movlw	-2
 19992  017348  6AE3               	clrf	plusw1,c
 19993                           
 19994                           ;stkvar	_dividend @ sp[(-2)+-8]
 19995  01734A  0EFD               	movlw	-3
 19996  01734C  AEE3               	btfss	plusw1,7,c
 19997  01734E  D028               	goto	l7892
 19998                           
 19999                           ;stkvar	_dividend @ sp[(-2)+-8]
 20000                           ;stkvar	_dividend @ sp[(-2)+-8]
 20001  017350  0EF6               	movlw	-10
 20002  017352  6CE3               	negf	plusw1,c
 20003  017354  0EF7               	movlw	-9
 20004  017356  1EE3               	comf	plusw1,f,c
 20005  017358  0EF8               	movlw	-8
 20006  01735A  1EE3               	comf	plusw1,f,c
 20007  01735C  0EF9               	movlw	-7
 20008  01735E  1EE3               	comf	plusw1,f,c
 20009  017360  0EFA               	movlw	-6
 20010  017362  1EE3               	comf	plusw1,f,c
 20011  017364  0EFB               	movlw	-5
 20012  017366  1EE3               	comf	plusw1,f,c
 20013  017368  0EFC               	movlw	-4
 20014  01736A  1EE3               	comf	plusw1,f,c
 20015  01736C  0EFD               	movlw	-3
 20016  01736E  1EE3               	comf	plusw1,f,c
 20017  017370  E314               	bnc	u6160
 20018  017372  0EF7               	movlw	-9
 20019  017374  2AE3               	incf	plusw1,f,c
 20020  017376  E311               	bnc	u6160
 20021  017378  0EF8               	movlw	-8
 20022  01737A  2AE3               	incf	plusw1,f,c
 20023  01737C  E30E               	bnc	u6160
 20024  01737E  0EF9               	movlw	-7
 20025  017380  2AE3               	incf	plusw1,f,c
 20026  017382  E30B               	bnc	u6160
 20027  017384  0EFA               	movlw	-6
 20028  017386  2AE3               	incf	plusw1,f,c
 20029  017388  E308               	bnc	u6160
 20030  01738A  0EFB               	movlw	-5
 20031  01738C  2AE3               	incf	plusw1,f,c
 20032  01738E  E305               	bnc	u6160
 20033  017390  0EFC               	movlw	-4
 20034  017392  2AE3               	incf	plusw1,f,c
 20035  017394  E302               	bnc	u6160
 20036  017396  0EFD               	movlw	-3
 20037  017398  2AE3               	incf	plusw1,f,c
 20038  01739A                     u6160:
 20039                           
 20040                           ;stkvar	_sign @ sp[(-2)+0]
 20041  01739A  0EFE               	movlw	-2
 20042  01739C  6AE3               	clrf	plusw1,c
 20043  01739E  2AE3               	incf	plusw1,f,c
 20044  0173A0                     l7892:
 20045                           
 20046                           ;stkvar	_divisor @ sp[(-2)+-16]
 20047  0173A0  0EF5               	movlw	-11
 20048  0173A2  AEE3               	btfss	plusw1,7,c
 20049  0173A4  D025               	goto	u6180
 20050                           
 20051                           ;stkvar	_divisor @ sp[(-2)+-16]
 20052                           ;stkvar	_divisor @ sp[(-2)+-16]
 20053  0173A6  0EEE               	movlw	-18
 20054  0173A8  6CE3               	negf	plusw1,c
 20055  0173AA  0EEF               	movlw	-17
 20056  0173AC  1EE3               	comf	plusw1,f,c
 20057  0173AE  0EF0               	movlw	-16
 20058  0173B0  1EE3               	comf	plusw1,f,c
 20059  0173B2  0EF1               	movlw	-15
 20060  0173B4  1EE3               	comf	plusw1,f,c
 20061  0173B6  0EF2               	movlw	-14
 20062  0173B8  1EE3               	comf	plusw1,f,c
 20063  0173BA  0EF3               	movlw	-13
 20064  0173BC  1EE3               	comf	plusw1,f,c
 20065  0173BE  0EF4               	movlw	-12
 20066  0173C0  1EE3               	comf	plusw1,f,c
 20067  0173C2  0EF5               	movlw	-11
 20068  0173C4  1EE3               	comf	plusw1,f,c
 20069  0173C6  E314               	bnc	u6180
 20070  0173C8  0EEF               	movlw	-17
 20071  0173CA  2AE3               	incf	plusw1,f,c
 20072  0173CC  E311               	bnc	u6180
 20073  0173CE  0EF0               	movlw	-16
 20074  0173D0  2AE3               	incf	plusw1,f,c
 20075  0173D2  E30E               	bnc	u6180
 20076  0173D4  0EF1               	movlw	-15
 20077  0173D6  2AE3               	incf	plusw1,f,c
 20078  0173D8  E30B               	bnc	u6180
 20079  0173DA  0EF2               	movlw	-14
 20080  0173DC  2AE3               	incf	plusw1,f,c
 20081  0173DE  E308               	bnc	u6180
 20082  0173E0  0EF3               	movlw	-13
 20083  0173E2  2AE3               	incf	plusw1,f,c
 20084  0173E4  E305               	bnc	u6180
 20085  0173E6  0EF4               	movlw	-12
 20086  0173E8  2AE3               	incf	plusw1,f,c
 20087  0173EA  E302               	bnc	u6180
 20088  0173EC  0EF5               	movlw	-11
 20089  0173EE  2AE3               	incf	plusw1,f,c
 20090  0173F0                     u6180:
 20091                           
 20092                           ;stkvar	_divisor @ sp[(-2)+-16]
 20093  0173F0  0EEE               	movlw	-18
 20094  0173F2  50E3               	movf	plusw1,w,c
 20095  0173F4  E116               	bnz	u6190
 20096  0173F6  0EEF               	movlw	-17
 20097  0173F8  50E3               	movf	plusw1,w,c
 20098  0173FA  E113               	bnz	u6190
 20099  0173FC  0EF0               	movlw	-16
 20100  0173FE  50E3               	movf	plusw1,w,c
 20101  017400  E110               	bnz	u6190
 20102  017402  0EF1               	movlw	-15
 20103  017404  50E3               	movf	plusw1,w,c
 20104  017406  E10D               	bnz	u6190
 20105  017408  0EF2               	movlw	-14
 20106  01740A  50E3               	movf	plusw1,w,c
 20107  01740C  E10A               	bnz	u6190
 20108  01740E  0EF3               	movlw	-13
 20109  017410  50E3               	movf	plusw1,w,c
 20110  017412  E107               	bnz	u6190
 20111  017414  0EF4               	movlw	-12
 20112  017416  50E3               	movf	plusw1,w,c
 20113  017418  E104               	bnz	u6190
 20114  01741A  0EF5               	movlw	-11
 20115  01741C  50E3               	movf	plusw1,w,c
 20116  01741E  B4D8               	btfsc	status,2,c
 20117  017420  D075               	goto	u6220
 20118  017422                     u6190:
 20119                           
 20120                           ;stkvar	_counter @ sp[(-2)+1]
 20121  017422  0EFF               	movlw	-1
 20122  017424  6AE3               	clrf	plusw1,c
 20123  017426  D012               	goto	L23
 20124  017428                     l7900:
 20125                           
 20126                           ;stkvar	_divisor @ sp[(-2)+-16]
 20127  017428  90D8               	bcf	status,0,c
 20128  01742A  0EEE               	movlw	-18
 20129  01742C  36E3               	rlcf	plusw1,f,c
 20130  01742E  0EEF               	movlw	-17
 20131  017430  36E3               	rlcf	plusw1,f,c
 20132  017432  0EF0               	movlw	-16
 20133  017434  36E3               	rlcf	plusw1,f,c
 20134  017436  0EF1               	movlw	-15
 20135  017438  36E3               	rlcf	plusw1,f,c
 20136  01743A  0EF2               	movlw	-14
 20137  01743C  36E3               	rlcf	plusw1,f,c
 20138  01743E  0EF3               	movlw	-13
 20139  017440  36E3               	rlcf	plusw1,f,c
 20140  017442  0EF4               	movlw	-12
 20141  017444  36E3               	rlcf	plusw1,f,c
 20142  017446  0EF5               	movlw	-11
 20143  017448  36E3               	rlcf	plusw1,f,c
 20144                           
 20145                           ;stkvar	_counter @ sp[(-2)+1]
 20146  01744A  0EFF               	movlw	-1
 20147  01744C                     L23:
 20148  01744C  2AE3               	incf	plusw1,f,c
 20149                           
 20150                           ;stkvar	_divisor @ sp[(-2)+-16]
 20151  01744E  0EF5               	movlw	-11
 20152  017450  AEE3               	btfss	plusw1,7,c
 20153  017452  D7EA               	goto	l7900
 20154  017454                     u6200:
 20155                           
 20156                           ;stkvar	_divisor @ sp[(-2)+-16]
 20157                           ;stkvar	_dividend @ sp[(-2)+-8]
 20158  017454  50E1               	movf	fsr1l,w,c
 20159  017456  0FF6               	addlw	-10
 20160  017458  6ED9               	movwf	fsr2l,c
 20161  01745A  50E2               	movf	fsr1h,w,c
 20162  01745C  6EDA               	movwf	fsr2h,c
 20163  01745E  0EFF               	movlw	255
 20164  017460  22DA               	addwfc	fsr2h,f,c
 20165  017462  0EEE               	movlw	-18
 20166  017464  50E3               	movf	plusw1,w,c
 20167  017466  5CDE               	subwf	postinc2,w,c
 20168  017468  0EEF               	movlw	-17
 20169  01746A  50E3               	movf	plusw1,w,c
 20170  01746C  58DE               	subwfb	postinc2,w,c
 20171  01746E  0EF0               	movlw	-16
 20172  017470  50E3               	movf	plusw1,w,c
 20173  017472  58DE               	subwfb	postinc2,w,c
 20174  017474  0EF1               	movlw	-15
 20175  017476  50E3               	movf	plusw1,w,c
 20176  017478  58DE               	subwfb	postinc2,w,c
 20177  01747A  0EF2               	movlw	-14
 20178  01747C  50E3               	movf	plusw1,w,c
 20179  01747E  58DE               	subwfb	postinc2,w,c
 20180  017480  0EF3               	movlw	-13
 20181  017482  50E3               	movf	plusw1,w,c
 20182  017484  58DE               	subwfb	postinc2,w,c
 20183  017486  0EF4               	movlw	-12
 20184  017488  50E3               	movf	plusw1,w,c
 20185  01748A  58DE               	subwfb	postinc2,w,c
 20186  01748C  0EF5               	movlw	-11
 20187  01748E  50E3               	movf	plusw1,w,c
 20188  017490  58DE               	subwfb	postinc2,w,c
 20189  017492  A0D8               	btfss	status,0,c
 20190  017494  D01F               	goto	l7908
 20191                           
 20192                           ;stkvar	_divisor @ sp[(-2)+-16]
 20193                           ;stkvar	_dividend @ sp[(-2)+-8]
 20194  017496  50E1               	movf	fsr1l,w,c
 20195  017498  0FF6               	addlw	-10
 20196  01749A  6ED9               	movwf	fsr2l,c
 20197  01749C  50E2               	movf	fsr1h,w,c
 20198  01749E  6EDA               	movwf	fsr2h,c
 20199  0174A0  0EFF               	movlw	255
 20200  0174A2  22DA               	addwfc	fsr2h,f,c
 20201  0174A4  0EEE               	movlw	-18
 20202  0174A6  50E3               	movf	plusw1,w,c
 20203  0174A8  5EDE               	subwf	postinc2,f,c
 20204  0174AA  0EEF               	movlw	-17
 20205  0174AC  50E3               	movf	plusw1,w,c
 20206  0174AE  5ADE               	subwfb	postinc2,f,c
 20207  0174B0  0EF0               	movlw	-16
 20208  0174B2  50E3               	movf	plusw1,w,c
 20209  0174B4  5ADE               	subwfb	postinc2,f,c
 20210  0174B6  0EF1               	movlw	-15
 20211  0174B8  50E3               	movf	plusw1,w,c
 20212  0174BA  5ADE               	subwfb	postinc2,f,c
 20213  0174BC  0EF2               	movlw	-14
 20214  0174BE  50E3               	movf	plusw1,w,c
 20215  0174C0  5ADE               	subwfb	postinc2,f,c
 20216  0174C2  0EF3               	movlw	-13
 20217  0174C4  50E3               	movf	plusw1,w,c
 20218  0174C6  5ADE               	subwfb	postinc2,f,c
 20219  0174C8  0EF4               	movlw	-12
 20220  0174CA  50E3               	movf	plusw1,w,c
 20221  0174CC  5ADE               	subwfb	postinc2,f,c
 20222  0174CE  0EF5               	movlw	-11
 20223  0174D0  50E3               	movf	plusw1,w,c
 20224  0174D2  5ADE               	subwfb	postinc2,f,c
 20225  0174D4                     l7908:
 20226                           
 20227                           ;stkvar	_divisor @ sp[(-2)+-16]
 20228  0174D4  90D8               	bcf	status,0,c
 20229  0174D6  0EF5               	movlw	-11
 20230  0174D8  32E3               	rrcf	plusw1,f,c
 20231  0174DA  0EF4               	movlw	-12
 20232  0174DC  32E3               	rrcf	plusw1,f,c
 20233  0174DE  0EF3               	movlw	-13
 20234  0174E0  32E3               	rrcf	plusw1,f,c
 20235  0174E2  0EF2               	movlw	-14
 20236  0174E4  32E3               	rrcf	plusw1,f,c
 20237  0174E6  0EF1               	movlw	-15
 20238  0174E8  32E3               	rrcf	plusw1,f,c
 20239  0174EA  0EF0               	movlw	-16
 20240  0174EC  32E3               	rrcf	plusw1,f,c
 20241  0174EE  0EEF               	movlw	-17
 20242  0174F0  32E3               	rrcf	plusw1,f,c
 20243  0174F2  0EEE               	movlw	-18
 20244  0174F4  32E3               	rrcf	plusw1,f,c
 20245                           
 20246                           ;stkvar	_counter @ sp[(-2)+1]
 20247  0174F6  0EFF               	movlw	-1
 20248  0174F8  50E3               	movf	plusw1,w,c
 20249  0174FA  6E28               	movwf	btemp^0,c
 20250  0174FC  0E01               	movlw	1
 20251  0174FE  5E28               	subwf	btemp^0,f,c
 20252  017500  0EFF               	movlw	-1
 20253  017502  0060  F0A3  FFE3   	movff	btemp,plusw1
 20254  017508  A4D8               	btfss	status,2,c
 20255  01750A  D7A4               	goto	u6200
 20256  01750C                     u6220:
 20257                           
 20258                           ;stkvar	_sign @ sp[(-2)+0]
 20259  01750C  0EFE               	movlw	-2
 20260  01750E  50E3               	movf	plusw1,w,c
 20261  017510  B4D8               	btfsc	status,2,c
 20262  017512  D025               	goto	u6240
 20263                           
 20264                           ;stkvar	_dividend @ sp[(-2)+-8]
 20265                           ;stkvar	_dividend @ sp[(-2)+-8]
 20266  017514  0EF6               	movlw	-10
 20267  017516  6CE3               	negf	plusw1,c
 20268  017518  0EF7               	movlw	-9
 20269  01751A  1EE3               	comf	plusw1,f,c
 20270  01751C  0EF8               	movlw	-8
 20271  01751E  1EE3               	comf	plusw1,f,c
 20272  017520  0EF9               	movlw	-7
 20273  017522  1EE3               	comf	plusw1,f,c
 20274  017524  0EFA               	movlw	-6
 20275  017526  1EE3               	comf	plusw1,f,c
 20276  017528  0EFB               	movlw	-5
 20277  01752A  1EE3               	comf	plusw1,f,c
 20278  01752C  0EFC               	movlw	-4
 20279  01752E  1EE3               	comf	plusw1,f,c
 20280  017530  0EFD               	movlw	-3
 20281  017532  1EE3               	comf	plusw1,f,c
 20282  017534  E314               	bnc	u6240
 20283  017536  0EF7               	movlw	-9
 20284  017538  2AE3               	incf	plusw1,f,c
 20285  01753A  E311               	bnc	u6240
 20286  01753C  0EF8               	movlw	-8
 20287  01753E  2AE3               	incf	plusw1,f,c
 20288  017540  E30E               	bnc	u6240
 20289  017542  0EF9               	movlw	-7
 20290  017544  2AE3               	incf	plusw1,f,c
 20291  017546  E30B               	bnc	u6240
 20292  017548  0EFA               	movlw	-6
 20293  01754A  2AE3               	incf	plusw1,f,c
 20294  01754C  E308               	bnc	u6240
 20295  01754E  0EFB               	movlw	-5
 20296  017550  2AE3               	incf	plusw1,f,c
 20297  017552  E305               	bnc	u6240
 20298  017554  0EFC               	movlw	-4
 20299  017556  2AE3               	incf	plusw1,f,c
 20300  017558  E302               	bnc	u6240
 20301  01755A  0EFD               	movlw	-3
 20302  01755C  2AE3               	incf	plusw1,f,c
 20303  01755E                     u6240:
 20304                           
 20305                           ;stkvar	_dividend @ sp[(-2)+-8]
 20306  01755E  0EF6               	movlw	246
 20307  017560  24E1               	addwf	fsr1l,w,c
 20308  017562  6ED9               	movwf	fsr2l,c
 20309  017564  0EFF               	movlw	255
 20310  017566  20E2               	addwfc	fsr1h,w,c
 20311  017568  6EDA               	movwf	fsr2h,c
 20312                           
 20313                           ;stkvar	?___aomod @ sp[(-2)+-8]
 20314  01756A  0E08               	movlw	8
 20315  01756C  6E28               	movwf	btemp^0,c
 20316  01756E  0EF6               	movlw	-10
 20317  017570                     us625999:
 20318  017570  006F FF7B FFE3     	movff	postinc2,plusw1
 20319  017576  28E8               	incf	wreg,w,c
 20320  017578  2E28               	decfsz	btemp^0,f,c
 20321  01757A  D7FA               	bra	us625999
 20322                           
 20323                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 20324  01757C  52E5               	movf	postdec1,f,c
 20325  01757E  52E5               	movf	postdec1,f,c
 20326  017580  0012               	return		;funcret
 20327  017582                     __end_of___aomod:
 20328                           	opt callstack 0
 20329                           
 20330 ;; *************** function ___aodiv *****************
 20331 ;; Defined at:
 20332 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 20333 ;; Parameters:    Size  Location     Type
 20334 ;;  dividend        8  [STACK] long long 
 20335 ;;  divisor         8  [STACK] long long 
 20336 ;; Auto vars:     Size  Location     Type
 20337 ;;  quotient        8  [STACK] long long 
 20338 ;;  sign            1  [STACK] unsigned char 
 20339 ;;  counter         1  [STACK] unsigned char 
 20340 ;; Return value:  Size  Location     Type
 20341 ;;                  8  [STACK] long long 
 20342 ;; Registers used:
 20343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 20344 ;; Tracked objects:
 20345 ;;		On entry : 0/3
 20346 ;;		On exit  : 0/0
 20347 ;;		Unchanged: 0/0
 20348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20353 ;;Total ram usage:        0 bytes
 20354 ;; Hardware stack levels used:    1
 20355 ;; Hardware stack levels required when called:   15
 20356 ;; This function calls:
 20357 ;;		Nothing
 20358 ;; This function is called by:
 20359 ;;		_dtoa
 20360 ;; This function uses a reentrant model
 20361 ;;
 20362                           
 20363                           	psect	text69
 20364  016E4E                     __ptext69:
 20365                           	opt callstack 0
 20366  016E4E                     ___aodiv:
 20367                           	opt callstack 0
 20368                           
 20369                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 20370  016E4E  0E0A               	movlw	10
 20371  016E50  26E1               	addwf	fsr1l,f,c
 20372  016E52  0E00               	movlw	0
 20373  016E54  22E2               	addwfc	fsr1h,f,c
 20374                           
 20375                           ;stkvar	_sign @ sp[(-10)+8]
 20376                           
 20377                           ;incstack = 0
 20378 ;; hardware stack exceeded
 20379  016E56  0EFE               	movlw	-2
 20380  016E58  6AE3               	clrf	plusw1,c
 20381                           
 20382                           ;stkvar	_divisor @ sp[(-10)+-16]
 20383  016E5A  0EED               	movlw	-19
 20384  016E5C  AEE3               	btfss	plusw1,7,c
 20385  016E5E  D028               	goto	l7848
 20386                           
 20387                           ;stkvar	_divisor @ sp[(-10)+-16]
 20388                           ;stkvar	_divisor @ sp[(-10)+-16]
 20389  016E60  0EE6               	movlw	-26
 20390  016E62  6CE3               	negf	plusw1,c
 20391  016E64  0EE7               	movlw	-25
 20392  016E66  1EE3               	comf	plusw1,f,c
 20393  016E68  0EE8               	movlw	-24
 20394  016E6A  1EE3               	comf	plusw1,f,c
 20395  016E6C  0EE9               	movlw	-23
 20396  016E6E  1EE3               	comf	plusw1,f,c
 20397  016E70  0EEA               	movlw	-22
 20398  016E72  1EE3               	comf	plusw1,f,c
 20399  016E74  0EEB               	movlw	-21
 20400  016E76  1EE3               	comf	plusw1,f,c
 20401  016E78  0EEC               	movlw	-20
 20402  016E7A  1EE3               	comf	plusw1,f,c
 20403  016E7C  0EED               	movlw	-19
 20404  016E7E  1EE3               	comf	plusw1,f,c
 20405  016E80  E314               	bnc	u6040
 20406  016E82  0EE7               	movlw	-25
 20407  016E84  2AE3               	incf	plusw1,f,c
 20408  016E86  E311               	bnc	u6040
 20409  016E88  0EE8               	movlw	-24
 20410  016E8A  2AE3               	incf	plusw1,f,c
 20411  016E8C  E30E               	bnc	u6040
 20412  016E8E  0EE9               	movlw	-23
 20413  016E90  2AE3               	incf	plusw1,f,c
 20414  016E92  E30B               	bnc	u6040
 20415  016E94  0EEA               	movlw	-22
 20416  016E96  2AE3               	incf	plusw1,f,c
 20417  016E98  E308               	bnc	u6040
 20418  016E9A  0EEB               	movlw	-21
 20419  016E9C  2AE3               	incf	plusw1,f,c
 20420  016E9E  E305               	bnc	u6040
 20421  016EA0  0EEC               	movlw	-20
 20422  016EA2  2AE3               	incf	plusw1,f,c
 20423  016EA4  E302               	bnc	u6040
 20424  016EA6  0EED               	movlw	-19
 20425  016EA8  2AE3               	incf	plusw1,f,c
 20426  016EAA                     u6040:
 20427                           
 20428                           ;stkvar	_sign @ sp[(-10)+8]
 20429  016EAA  0EFE               	movlw	-2
 20430  016EAC  6AE3               	clrf	plusw1,c
 20431  016EAE  2AE3               	incf	plusw1,f,c
 20432  016EB0                     l7848:
 20433                           
 20434                           ;stkvar	_dividend @ sp[(-10)+-8]
 20435  016EB0  0EF5               	movlw	-11
 20436  016EB2  AEE3               	btfss	plusw1,7,c
 20437  016EB4  D027               	goto	l7854
 20438                           
 20439                           ;stkvar	_dividend @ sp[(-10)+-8]
 20440                           ;stkvar	_dividend @ sp[(-10)+-8]
 20441  016EB6  0EEE               	movlw	-18
 20442  016EB8  6CE3               	negf	plusw1,c
 20443  016EBA  0EEF               	movlw	-17
 20444  016EBC  1EE3               	comf	plusw1,f,c
 20445  016EBE  0EF0               	movlw	-16
 20446  016EC0  1EE3               	comf	plusw1,f,c
 20447  016EC2  0EF1               	movlw	-15
 20448  016EC4  1EE3               	comf	plusw1,f,c
 20449  016EC6  0EF2               	movlw	-14
 20450  016EC8  1EE3               	comf	plusw1,f,c
 20451  016ECA  0EF3               	movlw	-13
 20452  016ECC  1EE3               	comf	plusw1,f,c
 20453  016ECE  0EF4               	movlw	-12
 20454  016ED0  1EE3               	comf	plusw1,f,c
 20455  016ED2  0EF5               	movlw	-11
 20456  016ED4  1EE3               	comf	plusw1,f,c
 20457  016ED6  E314               	bnc	u6060
 20458  016ED8  0EEF               	movlw	-17
 20459  016EDA  2AE3               	incf	plusw1,f,c
 20460  016EDC  E311               	bnc	u6060
 20461  016EDE  0EF0               	movlw	-16
 20462  016EE0  2AE3               	incf	plusw1,f,c
 20463  016EE2  E30E               	bnc	u6060
 20464  016EE4  0EF1               	movlw	-15
 20465  016EE6  2AE3               	incf	plusw1,f,c
 20466  016EE8  E30B               	bnc	u6060
 20467  016EEA  0EF2               	movlw	-14
 20468  016EEC  2AE3               	incf	plusw1,f,c
 20469  016EEE  E308               	bnc	u6060
 20470  016EF0  0EF3               	movlw	-13
 20471  016EF2  2AE3               	incf	plusw1,f,c
 20472  016EF4  E305               	bnc	u6060
 20473  016EF6  0EF4               	movlw	-12
 20474  016EF8  2AE3               	incf	plusw1,f,c
 20475  016EFA  E302               	bnc	u6060
 20476  016EFC  0EF5               	movlw	-11
 20477  016EFE  2AE3               	incf	plusw1,f,c
 20478  016F00                     u6060:
 20479                           
 20480                           ;stkvar	_sign @ sp[(-10)+8]
 20481  016F00  0EFE               	movlw	-2
 20482  016F02  70E3               	btg	plusw1,0,c
 20483  016F04                     l7854:
 20484                           
 20485                           ;stkvar	_quotient @ sp[(-10)+0]
 20486  016F04  0E07               	movlw	7
 20487  016F06  6E28               	movwf	btemp^0,c
 20488  016F08  0EF6               	movlw	-10
 20489  016F0A                     u6071:
 20490  016F0A  6AE3               	clrf	plusw1,c
 20491  016F0C  2AE8               	incf	wreg,f,c
 20492  016F0E  0628               	decf	btemp^0,f,c
 20493  016F10  E2FC               	bc	u6071
 20494                           
 20495                           ;stkvar	_divisor @ sp[(-10)+-16]
 20496  016F12  0EE6               	movlw	-26
 20497  016F14  50E3               	movf	plusw1,w,c
 20498  016F16  E116               	bnz	u6080
 20499  016F18  0EE7               	movlw	-25
 20500  016F1A  50E3               	movf	plusw1,w,c
 20501  016F1C  E113               	bnz	u6080
 20502  016F1E  0EE8               	movlw	-24
 20503  016F20  50E3               	movf	plusw1,w,c
 20504  016F22  E110               	bnz	u6080
 20505  016F24  0EE9               	movlw	-23
 20506  016F26  50E3               	movf	plusw1,w,c
 20507  016F28  E10D               	bnz	u6080
 20508  016F2A  0EEA               	movlw	-22
 20509  016F2C  50E3               	movf	plusw1,w,c
 20510  016F2E  E10A               	bnz	u6080
 20511  016F30  0EEB               	movlw	-21
 20512  016F32  50E3               	movf	plusw1,w,c
 20513  016F34  E107               	bnz	u6080
 20514  016F36  0EEC               	movlw	-20
 20515  016F38  50E3               	movf	plusw1,w,c
 20516  016F3A  E104               	bnz	u6080
 20517  016F3C  0EED               	movlw	-19
 20518  016F3E  50E3               	movf	plusw1,w,c
 20519  016F40  B4D8               	btfsc	status,2,c
 20520  016F42  D088               	goto	u6110
 20521  016F44                     u6080:
 20522                           
 20523                           ;stkvar	_counter @ sp[(-10)+9]
 20524  016F44  0EFF               	movlw	-1
 20525  016F46  6AE3               	clrf	plusw1,c
 20526  016F48  D012               	goto	L24
 20527  016F4A                     l7860:
 20528                           
 20529                           ;stkvar	_divisor @ sp[(-10)+-16]
 20530  016F4A  90D8               	bcf	status,0,c
 20531  016F4C  0EE6               	movlw	-26
 20532  016F4E  36E3               	rlcf	plusw1,f,c
 20533  016F50  0EE7               	movlw	-25
 20534  016F52  36E3               	rlcf	plusw1,f,c
 20535  016F54  0EE8               	movlw	-24
 20536  016F56  36E3               	rlcf	plusw1,f,c
 20537  016F58  0EE9               	movlw	-23
 20538  016F5A  36E3               	rlcf	plusw1,f,c
 20539  016F5C  0EEA               	movlw	-22
 20540  016F5E  36E3               	rlcf	plusw1,f,c
 20541  016F60  0EEB               	movlw	-21
 20542  016F62  36E3               	rlcf	plusw1,f,c
 20543  016F64  0EEC               	movlw	-20
 20544  016F66  36E3               	rlcf	plusw1,f,c
 20545  016F68  0EED               	movlw	-19
 20546  016F6A  36E3               	rlcf	plusw1,f,c
 20547                           
 20548                           ;stkvar	_counter @ sp[(-10)+9]
 20549  016F6C  0EFF               	movlw	-1
 20550  016F6E                     L24:
 20551  016F6E  2AE3               	incf	plusw1,f,c
 20552                           
 20553                           ;stkvar	_divisor @ sp[(-10)+-16]
 20554  016F70  0EED               	movlw	-19
 20555  016F72  AEE3               	btfss	plusw1,7,c
 20556  016F74  D7EA               	goto	l7860
 20557  016F76                     u6090:
 20558                           
 20559                           ;stkvar	_quotient @ sp[(-10)+0]
 20560  016F76  90D8               	bcf	status,0,c
 20561  016F78  0EF6               	movlw	-10
 20562  016F7A  36E3               	rlcf	plusw1,f,c
 20563  016F7C  0EF7               	movlw	-9
 20564  016F7E  36E3               	rlcf	plusw1,f,c
 20565  016F80  0EF8               	movlw	-8
 20566  016F82  36E3               	rlcf	plusw1,f,c
 20567  016F84  0EF9               	movlw	-7
 20568  016F86  36E3               	rlcf	plusw1,f,c
 20569  016F88  0EFA               	movlw	-6
 20570  016F8A  36E3               	rlcf	plusw1,f,c
 20571  016F8C  0EFB               	movlw	-5
 20572  016F8E  36E3               	rlcf	plusw1,f,c
 20573  016F90  0EFC               	movlw	-4
 20574  016F92  36E3               	rlcf	plusw1,f,c
 20575  016F94  0EFD               	movlw	-3
 20576  016F96  36E3               	rlcf	plusw1,f,c
 20577                           
 20578                           ;stkvar	_divisor @ sp[(-10)+-16]
 20579                           ;stkvar	_dividend @ sp[(-10)+-8]
 20580  016F98  50E1               	movf	fsr1l,w,c
 20581  016F9A  0FEE               	addlw	-18
 20582  016F9C  6ED9               	movwf	fsr2l,c
 20583  016F9E  50E2               	movf	fsr1h,w,c
 20584  016FA0  6EDA               	movwf	fsr2h,c
 20585  016FA2  0EFF               	movlw	255
 20586  016FA4  22DA               	addwfc	fsr2h,f,c
 20587  016FA6  0EE6               	movlw	-26
 20588  016FA8  50E3               	movf	plusw1,w,c
 20589  016FAA  5CDE               	subwf	postinc2,w,c
 20590  016FAC  0EE7               	movlw	-25
 20591  016FAE  50E3               	movf	plusw1,w,c
 20592  016FB0  58DE               	subwfb	postinc2,w,c
 20593  016FB2  0EE8               	movlw	-24
 20594  016FB4  50E3               	movf	plusw1,w,c
 20595  016FB6  58DE               	subwfb	postinc2,w,c
 20596  016FB8  0EE9               	movlw	-23
 20597  016FBA  50E3               	movf	plusw1,w,c
 20598  016FBC  58DE               	subwfb	postinc2,w,c
 20599  016FBE  0EEA               	movlw	-22
 20600  016FC0  50E3               	movf	plusw1,w,c
 20601  016FC2  58DE               	subwfb	postinc2,w,c
 20602  016FC4  0EEB               	movlw	-21
 20603  016FC6  50E3               	movf	plusw1,w,c
 20604  016FC8  58DE               	subwfb	postinc2,w,c
 20605  016FCA  0EEC               	movlw	-20
 20606  016FCC  50E3               	movf	plusw1,w,c
 20607  016FCE  58DE               	subwfb	postinc2,w,c
 20608  016FD0  0EED               	movlw	-19
 20609  016FD2  50E3               	movf	plusw1,w,c
 20610  016FD4  58DE               	subwfb	postinc2,w,c
 20611  016FD6  A0D8               	btfss	status,0,c
 20612  016FD8  D021               	goto	l7872
 20613                           
 20614                           ;stkvar	_divisor @ sp[(-10)+-16]
 20615                           ;stkvar	_dividend @ sp[(-10)+-8]
 20616  016FDA  50E1               	movf	fsr1l,w,c
 20617  016FDC  0FEE               	addlw	-18
 20618  016FDE  6ED9               	movwf	fsr2l,c
 20619  016FE0  50E2               	movf	fsr1h,w,c
 20620  016FE2  6EDA               	movwf	fsr2h,c
 20621  016FE4  0EFF               	movlw	255
 20622  016FE6  22DA               	addwfc	fsr2h,f,c
 20623  016FE8  0EE6               	movlw	-26
 20624  016FEA  50E3               	movf	plusw1,w,c
 20625  016FEC  5EDE               	subwf	postinc2,f,c
 20626  016FEE  0EE7               	movlw	-25
 20627  016FF0  50E3               	movf	plusw1,w,c
 20628  016FF2  5ADE               	subwfb	postinc2,f,c
 20629  016FF4  0EE8               	movlw	-24
 20630  016FF6  50E3               	movf	plusw1,w,c
 20631  016FF8  5ADE               	subwfb	postinc2,f,c
 20632  016FFA  0EE9               	movlw	-23
 20633  016FFC  50E3               	movf	plusw1,w,c
 20634  016FFE  5ADE               	subwfb	postinc2,f,c
 20635  017000  0EEA               	movlw	-22
 20636  017002  50E3               	movf	plusw1,w,c
 20637  017004  5ADE               	subwfb	postinc2,f,c
 20638  017006  0EEB               	movlw	-21
 20639  017008  50E3               	movf	plusw1,w,c
 20640  01700A  5ADE               	subwfb	postinc2,f,c
 20641  01700C  0EEC               	movlw	-20
 20642  01700E  50E3               	movf	plusw1,w,c
 20643  017010  5ADE               	subwfb	postinc2,f,c
 20644  017012  0EED               	movlw	-19
 20645  017014  50E3               	movf	plusw1,w,c
 20646  017016  5ADE               	subwfb	postinc2,f,c
 20647                           
 20648                           ;stkvar	_quotient @ sp[(-10)+0]
 20649  017018  0EF6               	movlw	-10
 20650  01701A  80E3               	bsf	plusw1,0,c
 20651  01701C                     l7872:
 20652                           
 20653                           ;stkvar	_divisor @ sp[(-10)+-16]
 20654  01701C  90D8               	bcf	status,0,c
 20655  01701E  0EED               	movlw	-19
 20656  017020  32E3               	rrcf	plusw1,f,c
 20657  017022  0EEC               	movlw	-20
 20658  017024  32E3               	rrcf	plusw1,f,c
 20659  017026  0EEB               	movlw	-21
 20660  017028  32E3               	rrcf	plusw1,f,c
 20661  01702A  0EEA               	movlw	-22
 20662  01702C  32E3               	rrcf	plusw1,f,c
 20663  01702E  0EE9               	movlw	-23
 20664  017030  32E3               	rrcf	plusw1,f,c
 20665  017032  0EE8               	movlw	-24
 20666  017034  32E3               	rrcf	plusw1,f,c
 20667  017036  0EE7               	movlw	-25
 20668  017038  32E3               	rrcf	plusw1,f,c
 20669  01703A  0EE6               	movlw	-26
 20670  01703C  32E3               	rrcf	plusw1,f,c
 20671                           
 20672                           ;stkvar	_counter @ sp[(-10)+9]
 20673  01703E  0EFF               	movlw	-1
 20674  017040  50E3               	movf	plusw1,w,c
 20675  017042  6E28               	movwf	btemp^0,c
 20676  017044  0E01               	movlw	1
 20677  017046  5E28               	subwf	btemp^0,f,c
 20678  017048  0EFF               	movlw	-1
 20679  01704A  0060  F0A3  FFE3   	movff	btemp,plusw1
 20680  017050  A4D8               	btfss	status,2,c
 20681  017052  D791               	goto	u6090
 20682  017054                     u6110:
 20683                           
 20684                           ;stkvar	_sign @ sp[(-10)+8]
 20685  017054  0EFE               	movlw	-2
 20686  017056  50E3               	movf	plusw1,w,c
 20687  017058  B4D8               	btfsc	status,2,c
 20688  01705A  D025               	goto	u6130
 20689                           
 20690                           ;stkvar	_quotient @ sp[(-10)+0]
 20691                           ;stkvar	_quotient @ sp[(-10)+0]
 20692  01705C  0EF6               	movlw	-10
 20693  01705E  6CE3               	negf	plusw1,c
 20694  017060  0EF7               	movlw	-9
 20695  017062  1EE3               	comf	plusw1,f,c
 20696  017064  0EF8               	movlw	-8
 20697  017066  1EE3               	comf	plusw1,f,c
 20698  017068  0EF9               	movlw	-7
 20699  01706A  1EE3               	comf	plusw1,f,c
 20700  01706C  0EFA               	movlw	-6
 20701  01706E  1EE3               	comf	plusw1,f,c
 20702  017070  0EFB               	movlw	-5
 20703  017072  1EE3               	comf	plusw1,f,c
 20704  017074  0EFC               	movlw	-4
 20705  017076  1EE3               	comf	plusw1,f,c
 20706  017078  0EFD               	movlw	-3
 20707  01707A  1EE3               	comf	plusw1,f,c
 20708  01707C  E314               	bnc	u6130
 20709  01707E  0EF7               	movlw	-9
 20710  017080  2AE3               	incf	plusw1,f,c
 20711  017082  E311               	bnc	u6130
 20712  017084  0EF8               	movlw	-8
 20713  017086  2AE3               	incf	plusw1,f,c
 20714  017088  E30E               	bnc	u6130
 20715  01708A  0EF9               	movlw	-7
 20716  01708C  2AE3               	incf	plusw1,f,c
 20717  01708E  E30B               	bnc	u6130
 20718  017090  0EFA               	movlw	-6
 20719  017092  2AE3               	incf	plusw1,f,c
 20720  017094  E308               	bnc	u6130
 20721  017096  0EFB               	movlw	-5
 20722  017098  2AE3               	incf	plusw1,f,c
 20723  01709A  E305               	bnc	u6130
 20724  01709C  0EFC               	movlw	-4
 20725  01709E  2AE3               	incf	plusw1,f,c
 20726  0170A0  E302               	bnc	u6130
 20727  0170A2  0EFD               	movlw	-3
 20728  0170A4  2AE3               	incf	plusw1,f,c
 20729  0170A6                     u6130:
 20730                           
 20731                           ;stkvar	_quotient @ sp[(-10)+0]
 20732  0170A6  0EF6               	movlw	246
 20733  0170A8  24E1               	addwf	fsr1l,w,c
 20734  0170AA  6ED9               	movwf	fsr2l,c
 20735  0170AC  0EFF               	movlw	255
 20736  0170AE  20E2               	addwfc	fsr1h,w,c
 20737  0170B0  6EDA               	movwf	fsr2h,c
 20738                           
 20739                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20740  0170B2  0E08               	movlw	8
 20741  0170B4  6E28               	movwf	btemp^0,c
 20742  0170B6  0EEE               	movlw	-18
 20743  0170B8                     us614999:
 20744  0170B8  006F FF7B FFE3     	movff	postinc2,plusw1
 20745  0170BE  28E8               	incf	wreg,w,c
 20746  0170C0  2E28               	decfsz	btemp^0,f,c
 20747  0170C2  D7FA               	bra	us614999
 20748                           
 20749                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20750  0170C4  0EF6               	movlw	246
 20751  0170C6  26E1               	addwf	fsr1l,f,c
 20752  0170C8  0EFF               	movlw	255
 20753  0170CA  22E2               	addwfc	fsr1h,f,c
 20754  0170CC  0012               	return		;funcret
 20755  0170CE                     __end_of___aodiv:
 20756                           	opt callstack 0
 20757                           
 20758 ;; *************** function _ctoa *****************
 20759 ;; Defined at:
 20760 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20761 ;; Parameters:    Size  Location     Type
 20762 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20763 ;;		 -> f(6), NULL(0), 
 20764 ;;  c               1  [STACK] unsigned char 
 20765 ;; Auto vars:     Size  Location     Type
 20766 ;;  w               2  [STACK] int 
 20767 ;;  l               2    0        int 
 20768 ;; Return value:  Size  Location     Type
 20769 ;;                  2  [STACK] int 
 20770 ;; Registers used:
 20771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20772 ;; Tracked objects:
 20773 ;;		On entry : 0/0
 20774 ;;		On exit  : 0/0
 20775 ;;		Unchanged: 0/0
 20776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20781 ;;Total ram usage:        0 bytes
 20782 ;; Hardware stack levels used:    1
 20783 ;; Hardware stack levels required when called:   20
 20784 ;; This function calls:
 20785 ;;		_pad
 20786 ;; This function is called by:
 20787 ;;		_vfpfcnvrt
 20788 ;; This function uses a reentrant model
 20789 ;;
 20790                           
 20791                           	psect	text70
 20792  01A218                     __ptext70:
 20793                           	opt callstack 0
 20794  01A218                     _ctoa:
 20795                           	opt callstack 0
 20796                           
 20797                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20798  01A218  52E6               	movf	postinc1,f,c
 20799  01A21A  52E6               	movf	postinc1,f,c
 20800                           
 20801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20802                           
 20803                           ;incstack = 0
 20804 ;; hardware stack exceeded
 20805  01A21C  5048               	movf	_width^0,w,c
 20806  01A21E  1049               	iorwf	(_width+1)^0,w,c
 20807  01A220  A4D8               	btfss	status,2,c
 20808  01A222  D009               	goto	l11474
 20809                           
 20810                           ;stkvar	_w @ sp[(-2)+0]
 20811  01A224  0EFE               	movlw	-2
 20812  01A226  0060  F123  FFE3   	movff	_width,plusw1
 20813  01A22C  0EFF               	movlw	-1
 20814  01A22E  0060  F127  FFE3   	movff	_width+1,plusw1
 20815  01A234  D016               	goto	l11476
 20816  01A236                     l11474:
 20817  01A236  0EFF               	movlw	255
 20818  01A238  6E32               	movwf	(btemp+10)^0,c
 20819  01A23A  0EFF               	movlw	255
 20820  01A23C  6E33               	movwf	(btemp+11)^0,c
 20821  01A23E  0060  F120  F030   	movff	_width,btemp+8
 20822  01A244  0060  F124  F031   	movff	_width+1,btemp+9
 20823  01A24A  5032               	movf	(btemp+10)^0,w,c
 20824  01A24C  2630               	addwf	(btemp+8)^0,f,c
 20825  01A24E  5033               	movf	(btemp+11)^0,w,c
 20826  01A250  2231               	addwfc	(btemp+9)^0,f,c
 20827                           
 20828                           ;stkvar	_w @ sp[(-2)+0]
 20829  01A252  0EFE               	movlw	-2
 20830  01A254  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 20831  01A25A  0EFF               	movlw	-1
 20832  01A25C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 20833  01A262                     l11476:
 20834                           
 20835                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20836                           ;stkvar	_c @ sp[(-2)+-3]
 20837  01A262  0EFB               	movlw	-5
 20838  01A264  006F FF8C  F394    	movff	plusw1,_dbuf
 20839                           
 20840                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20841  01A26A  0103               	movlb	3	; () banked
 20842  01A26C  6B95               	clrf	(_dbuf+1)& (0+255),b
 20843                           
 20844                           ; BSR set to: 3
 20845                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20846                           ;stkvar	_w @ sp[(-2)+0]
 20847  01A26E  0EFE               	movlw	-2
 20848  01A270  006F FF8F FFE6     	movff	plusw1,postinc1
 20849  01A276  006F FF8F FFE6     	movff	plusw1,postinc1
 20850  01A27C  0E94               	movlw	low _dbuf
 20851  01A27E  6EE6               	movwf	postinc1,c
 20852  01A280  0E03               	movlw	high _dbuf
 20853  01A282  6EE6               	movwf	postinc1,c
 20854                           
 20855                           ;stkvar	_fp @ sp[(-6)+-2]
 20856  01A284  0EF8               	movlw	-8
 20857  01A286  006F FF8F FFE6     	movff	plusw1,postinc1
 20858  01A28C  006F FF8F FFE6     	movff	plusw1,postinc1
 20859  01A292  EC6D  F0C8         	call	_pad	;wreg free
 20860                           
 20861                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20862  01A296  0EFB               	movlw	251
 20863  01A298  26E1               	addwf	fsr1l,f,c
 20864  01A29A  0EFF               	movlw	255
 20865  01A29C  22E2               	addwfc	fsr1h,f,c
 20866  01A29E  0012               	return		;funcret
 20867  01A2A0                     __end_of_ctoa:
 20868                           	opt callstack 0
 20869                           
 20870 ;; *************** function _pad *****************
 20871 ;; Defined at:
 20872 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20873 ;; Parameters:    Size  Location     Type
 20874 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20875 ;;		 -> f(6), NULL(0), 
 20876 ;;  buf             2  [STACK] PTR unsigned char 
 20877 ;;		 -> dbuf(80), 
 20878 ;;  p               2  [STACK] int 
 20879 ;; Auto vars:     Size  Location     Type
 20880 ;;  w               2  [STACK] int 
 20881 ;;  i               2  [STACK] int 
 20882 ;; Return value:  Size  Location     Type
 20883 ;;                  2  [STACK] int 
 20884 ;; Registers used:
 20885 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20886 ;; Tracked objects:
 20887 ;;		On entry : 0/3
 20888 ;;		On exit  : 0/0
 20889 ;;		Unchanged: 0/0
 20890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20895 ;;Total ram usage:        0 bytes
 20896 ;; Hardware stack levels used:    1
 20897 ;; Hardware stack levels required when called:   19
 20898 ;; This function calls:
 20899 ;;		_fputc
 20900 ;;		_fputs
 20901 ;;		_strlen
 20902 ;; This function is called by:
 20903 ;;		_ctoa
 20904 ;;		_dtoa
 20905 ;;		_efgtoa
 20906 ;;		_utoa
 20907 ;;		_xtoa
 20908 ;; This function uses a reentrant model
 20909 ;;
 20910                           
 20911                           	psect	text71
 20912  0190DA                     __ptext71:
 20913                           	opt callstack 0
 20914  0190DA                     _pad:
 20915                           	opt callstack 0
 20916                           
 20917                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20918  0190DA  52E6               	movf	postinc1,f,c
 20919  0190DC  52E6               	movf	postinc1,f,c
 20920  0190DE  52E6               	movf	postinc1,f,c
 20921  0190E0  52E6               	movf	postinc1,f,c
 20922                           
 20923                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20924                           
 20925                           ;incstack = 0
 20926 ;; hardware stack exceeded
 20927  0190E2  A04C               	btfss	_flags^0,0,c
 20928  0190E4  D010               	goto	l11406
 20929                           
 20930                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20931                           ;stkvar	_fp @ sp[(-4)+-2]
 20932  0190E6  0EFA               	movlw	-6
 20933  0190E8  006F FF8F FFE6     	movff	plusw1,postinc1
 20934  0190EE  006F FF8F FFE6     	movff	plusw1,postinc1
 20935                           
 20936                           ;stkvar	_buf @ sp[(-6)+-4]
 20937  0190F4  0EF6               	movlw	-10
 20938  0190F6  006F FF8F FFE6     	movff	plusw1,postinc1
 20939  0190FC  006F FF8F FFE6     	movff	plusw1,postinc1
 20940  019102  EC9D  F0CF         	call	_fputs	;wreg free
 20941  019106                     l11406:
 20942                           
 20943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20944                           ;stkvar	_p @ sp[(-4)+-6]
 20945  019106  0EF7               	movlw	-9
 20946  019108  BEE3               	btfsc	plusw1,7,c
 20947  01910A  D011               	goto	l11410
 20948                           
 20949                           ;stkvar	_p @ sp[(-4)+-6]
 20950                           ;stkvar	_w @ sp[(-4)+0]
 20951  01910C  0EF6               	movlw	-10
 20952  01910E  006F FF8C  F028    	movff	plusw1,btemp
 20953  019114  0EFC               	movlw	-4
 20954  019116  0060  F0A3  FFE3   	movff	btemp,plusw1
 20955  01911C  0EF7               	movlw	-9
 20956  01911E  006F FF8C  F028    	movff	plusw1,btemp
 20957  019124  0EFD               	movlw	-3
 20958  019126  0060  F0A3  FFE3   	movff	btemp,plusw1
 20959  01912C  D004               	goto	l2100
 20960  01912E                     l11410:
 20961                           
 20962                           ;stkvar	_w @ sp[(-4)+0]
 20963  01912E  0EFC               	movlw	-4
 20964  019130  6AE3               	clrf	plusw1,c
 20965  019132  0EFD               	movlw	-3
 20966  019134  6AE3               	clrf	plusw1,c
 20967  019136                     l2100:
 20968                           
 20969                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20970                           ;stkvar	_i @ sp[(-4)+2]
 20971  019136  0EFE               	movlw	-2
 20972  019138  6AE3               	clrf	plusw1,c
 20973  01913A  0EFF               	movlw	-1
 20974  01913C  6AE3               	clrf	plusw1,c
 20975                           
 20976                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20977  01913E  D01E               	goto	l11416
 20978  019140                     l11412:
 20979                           
 20980                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20981                           ;stkvar	_fp @ sp[(-4)+-2]
 20982  019140  0EFA               	movlw	-6
 20983  019142  006F FF8F FFE6     	movff	plusw1,postinc1
 20984  019148  006F FF8F FFE6     	movff	plusw1,postinc1
 20985  01914E  0E20               	movlw	32
 20986  019150  6EE6               	movwf	postinc1,c
 20987  019152  0E00               	movlw	0
 20988  019154  6EE6               	movwf	postinc1,c
 20989  019156  EC4F  F0C7         	call	_fputc	;wreg free
 20990                           
 20991                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20992                           ;stkvar	_i @ sp[(-4)+2]
 20993  01915A  0EFE               	movlw	-2
 20994  01915C  50E3               	movf	plusw1,w,c
 20995  01915E  0F01               	addlw	1
 20996  019160  6E28               	movwf	btemp^0,c
 20997  019162  0EFE               	movlw	-2
 20998  019164  0060  F0A3  FFE3   	movff	btemp,plusw1
 20999  01916A  6A28               	clrf	btemp^0,c
 21000  01916C  0EFF               	movlw	-1
 21001  01916E  50E3               	movf	plusw1,w,c
 21002  019170  2028               	addwfc	btemp^0,w,c
 21003  019172  6E28               	movwf	btemp^0,c
 21004  019174  0EFF               	movlw	-1
 21005  019176  0060  F0A3  FFE3   	movff	btemp,plusw1
 21006  01917C                     l11416:
 21007                           
 21008                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 21009                           ;stkvar	_w @ sp[(-4)+0]
 21010                           ;stkvar	_i @ sp[(-4)+2]
 21011  01917C  50E1               	movf	fsr1l,w,c
 21012  01917E  0FFE               	addlw	-2
 21013  019180  6ED9               	movwf	fsr2l,c
 21014  019182  50E2               	movf	fsr1h,w,c
 21015  019184  6EDA               	movwf	fsr2h,c
 21016  019186  0EFF               	movlw	255
 21017  019188  22DA               	addwfc	fsr2h,f,c
 21018  01918A  0EFC               	movlw	-4
 21019  01918C  50E3               	movf	plusw1,w,c
 21020  01918E  5CDE               	subwf	postinc2,w,c
 21021  019190  50DE               	movf	postinc2,w,c
 21022  019192  0A80               	xorlw	128
 21023  019194  6E28               	movwf	btemp^0,c
 21024  019196  0EFD               	movlw	-3
 21025  019198  50E3               	movf	plusw1,w,c
 21026  01919A  0A80               	xorlw	128
 21027  01919C  5828               	subwfb	btemp^0,w,c
 21028  01919E  A0D8               	btfss	status,0,c
 21029  0191A0  D7CF               	goto	l11412
 21030                           
 21031                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 21032  0191A2  B04C               	btfsc	_flags^0,0,c
 21033  0191A4  D010               	goto	l11420
 21034                           
 21035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 21036                           ;stkvar	_fp @ sp[(-4)+-2]
 21037  0191A6  0EFA               	movlw	-6
 21038  0191A8  006F FF8F FFE6     	movff	plusw1,postinc1
 21039  0191AE  006F FF8F FFE6     	movff	plusw1,postinc1
 21040                           
 21041                           ;stkvar	_buf @ sp[(-6)+-4]
 21042  0191B4  0EF6               	movlw	-10
 21043  0191B6  006F FF8F FFE6     	movff	plusw1,postinc1
 21044  0191BC  006F FF8F FFE6     	movff	plusw1,postinc1
 21045  0191C2  EC9D  F0CF         	call	_fputs	;wreg free
 21046  0191C6                     l11420:
 21047                           
 21048                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 21049                           ;stkvar	_w @ sp[(-4)+0]
 21050                           ;stkvar	_buf @ sp[(-4)+-4]
 21051  0191C6  0EF8               	movlw	-8
 21052  0191C8  006F FF8F FFE6     	movff	plusw1,postinc1
 21053  0191CE  006F FF8F FFE6     	movff	plusw1,postinc1
 21054  0191D4  EC4C  F0CF         	call	_strlen	;wreg free
 21055  0191D8  0EFC               	movlw	-4
 21056  0191DA  50E3               	movf	plusw1,w,c
 21057  0191DC  2628               	addwf	btemp^0,f,c
 21058  0191DE  0EFD               	movlw	-3
 21059  0191E0  50E3               	movf	plusw1,w,c
 21060  0191E2  2229               	addwfc	(btemp+1)^0,f,c
 21061                           
 21062                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 21063  0191E4  0EF6               	movlw	246
 21064  0191E6  26E1               	addwf	fsr1l,f,c
 21065  0191E8  0EFF               	movlw	255
 21066  0191EA  22E2               	addwfc	fsr1h,f,c
 21067  0191EC  0012               	return		;funcret
 21068  0191EE                     __end_of_pad:
 21069                           	opt callstack 0
 21070                           
 21071 ;; *************** function _strlen *****************
 21072 ;; Defined at:
 21073 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 21074 ;; Parameters:    Size  Location     Type
 21075 ;;  s               2  [STACK] PTR const unsigned char 
 21076 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21077 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21078 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21079 ;;		 -> V(189), 
 21080 ;; Auto vars:     Size  Location     Type
 21081 ;;  a               2  [STACK] PTR const unsigned char 
 21082 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 21083 ;;		 -> spin(120), STR_47(9), STR_46(12), D.lcd(480), 
 21084 ;;		 -> D(482), T(144), port_data(512), STR_3(6), 
 21085 ;;		 -> V(189), 
 21086 ;; Return value:  Size  Location     Type
 21087 ;;                  2  [STACK] unsigned int 
 21088 ;; Registers used:
 21089 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 21090 ;; Tracked objects:
 21091 ;;		On entry : 0/0
 21092 ;;		On exit  : 0/0
 21093 ;;		Unchanged: 0/0
 21094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21098 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21099 ;;Total ram usage:        0 bytes
 21100 ;; Hardware stack levels used:    1
 21101 ;; Hardware stack levels required when called:   15
 21102 ;; This function calls:
 21103 ;;		Nothing
 21104 ;; This function is called by:
 21105 ;;		_eaDogM_WriteString
 21106 ;;		_spinners
 21107 ;;		_calc_bsoc
 21108 ;;		_pad
 21109 ;;		_stoa
 21110 ;; This function uses a reentrant model
 21111 ;;
 21112                           
 21113                           	psect	text72
 21114  019E98                     __ptext72:
 21115                           	opt callstack 0
 21116  019E98                     _strlen:
 21117                           	opt callstack 0
 21118                           
 21119                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21120  019E98  52E6               	movf	postinc1,f,c
 21121  019E9A  52E6               	movf	postinc1,f,c
 21122                           
 21123                           ;stkvar	_s @ sp[(-2)+-2]
 21124                           
 21125                           ;incstack = 0
 21126 ;; hardware stack exceeded
 21127  019E9C  0EFC               	movlw	-4
 21128  019E9E  006F FF8C  F032    	movff	plusw1,btemp+10
 21129  019EA4  0EFD               	movlw	-3
 21130  019EA6  006F FF8C  F033    	movff	plusw1,btemp+11
 21131                           
 21132                           ;stkvar	_a @ sp[(-2)+0]
 21133  019EAC  0EFF               	movlw	-1
 21134  019EAE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21135  019EB4  0EFE               	movlw	-2
 21136  019EB6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21137  019EBC  D011               	goto	l7466
 21138  019EBE                     l7464:
 21139                           
 21140                           ;stkvar	_s @ sp[(-2)+-2]
 21141  019EBE  0EFC               	movlw	-4
 21142  019EC0  50E3               	movf	plusw1,w,c
 21143  019EC2  0F01               	addlw	1
 21144  019EC4  6E28               	movwf	btemp^0,c
 21145  019EC6  0EFC               	movlw	-4
 21146  019EC8  0060  F0A3  FFE3   	movff	btemp,plusw1
 21147  019ECE  6A28               	clrf	btemp^0,c
 21148  019ED0  0EFD               	movlw	-3
 21149  019ED2  50E3               	movf	plusw1,w,c
 21150  019ED4  2028               	addwfc	btemp^0,w,c
 21151  019ED6  6E28               	movwf	btemp^0,c
 21152  019ED8  0EFD               	movlw	-3
 21153  019EDA  0060  F0A3  FFE3   	movff	btemp,plusw1
 21154  019EE0                     l7466:
 21155                           
 21156                           ;stkvar	_s @ sp[(-2)+-2]
 21157  019EE0  0EFC               	movlw	-4
 21158  019EE2  006F FF8F FFF6     	movff	plusw1,tblptrl
 21159  019EE8  0EFD               	movlw	-3
 21160  019EEA  006F FF8F FFF7     	movff	plusw1,tblptrh
 21161  019EF0  0E00               	movlw	low (__mediumconst shr (0+16))
 21162  019EF2  6EF8               	movwf	tblptru,c
 21163  019EF4  0E1F               	movlw	(high __ramtop+-1)
 21164  019EF6  64F7               	cpfsgt	tblptrh,c
 21165  019EF8  D003               	bra	u5207
 21166  019EFA  0008               	tblrd		*
 21167  019EFC  50F5               	movf	tablat,w,c
 21168  019EFE  D007               	bra	u5200
 21169  019F00                     u5207:
 21170  019F00  006F FFDB FFE9     	movff	tblptrl,fsr0l
 21171  019F06  006F FFDF FFEA     	movff	tblptrh,fsr0h
 21172  019F0C  50EF               	movf	indf0,w,c
 21173  019F0E                     u5200:
 21174  019F0E  0900               	iorlw	0
 21175  019F10  A4D8               	btfss	status,2,c
 21176  019F12  D7D5               	goto	l7464
 21177                           
 21178                           ;stkvar	_a @ sp[(-2)+0]
 21179                           ;stkvar	_s @ sp[(-2)+-2]
 21180  019F14  0EFC               	movlw	-4
 21181  019F16  006F FF8C  F028    	movff	plusw1,btemp
 21182  019F1C  0EFD               	movlw	-3
 21183  019F1E  006F FF8C  F029    	movff	plusw1,btemp+1
 21184  019F24  0EFE               	movlw	-2
 21185  019F26  50E3               	movf	plusw1,w,c
 21186  019F28  5E28               	subwf	btemp^0,f,c
 21187  019F2A  0EFF               	movlw	-1
 21188  019F2C  50E3               	movf	plusw1,w,c
 21189  019F2E  5A29               	subwfb	(btemp+1)^0,f,c
 21190                           
 21191                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 21192  019F30  52E5               	movf	postdec1,f,c
 21193  019F32  52E5               	movf	postdec1,f,c
 21194  019F34  52E5               	movf	postdec1,f,c
 21195  019F36  52E5               	movf	postdec1,f,c
 21196  019F38  0012               	return		;funcret
 21197  019F3A                     __end_of_strlen:
 21198                           	opt callstack 0
 21199                           
 21200 ;; *************** function _fputs *****************
 21201 ;; Defined at:
 21202 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 21203 ;; Parameters:    Size  Location     Type
 21204 ;;  s               2  [STACK] PTR const unsigned char 
 21205 ;;		 -> dbuf(80), 
 21206 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21207 ;;		 -> f(6), NULL(0), 
 21208 ;; Auto vars:     Size  Location     Type
 21209 ;;  i               2  [STACK] int 
 21210 ;;  c               1  [STACK] unsigned char 
 21211 ;; Return value:  Size  Location     Type
 21212 ;;                  2  [STACK] int 
 21213 ;; Registers used:
 21214 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21215 ;; Tracked objects:
 21216 ;;		On entry : 0/3
 21217 ;;		On exit  : 0/0
 21218 ;;		Unchanged: 0/0
 21219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21224 ;;Total ram usage:        0 bytes
 21225 ;; Hardware stack levels used:    1
 21226 ;; Hardware stack levels required when called:   18
 21227 ;; This function calls:
 21228 ;;		_fputc
 21229 ;; This function is called by:
 21230 ;;		_pad
 21231 ;; This function uses a reentrant model
 21232 ;;
 21233                           
 21234                           	psect	text73
 21235  019F3A                     __ptext73:
 21236                           	opt callstack 0
 21237  019F3A                     _fputs:
 21238                           	opt callstack 0
 21239                           
 21240                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21241  019F3A  52E6               	movf	postinc1,f,c
 21242  019F3C  52E6               	movf	postinc1,f,c
 21243  019F3E  52E6               	movf	postinc1,f,c
 21244                           
 21245                           ;stkvar	_i @ sp[(-3)+0]
 21246                           
 21247                           ;incstack = 0
 21248 ;; hardware stack exceeded
 21249  019F40  0EFD               	movlw	-3
 21250  019F42  6AE3               	clrf	plusw1,c
 21251  019F44  0EFE               	movlw	-2
 21252  019F46  6AE3               	clrf	plusw1,c
 21253  019F48  D01F               	goto	l11400
 21254  019F4A                     l11396:
 21255                           
 21256                           ;stkvar	_fp @ sp[(-3)+-4]
 21257  019F4A  0EF9               	movlw	-7
 21258  019F4C  006F FF8F FFE6     	movff	plusw1,postinc1
 21259  019F52  006F FF8F FFE6     	movff	plusw1,postinc1
 21260                           
 21261                           ;stkvar	_c @ sp[(-5)+2]
 21262  019F58  0EFD               	movlw	-3
 21263  019F5A  50E3               	movf	plusw1,w,c
 21264  019F5C  6EE6               	movwf	postinc1,c
 21265  019F5E  0E00               	movlw	0
 21266  019F60  6EE6               	movwf	postinc1,c
 21267  019F62  EC4F  F0C7         	call	_fputc	;wreg free
 21268                           
 21269                           ;stkvar	_i @ sp[(-3)+0]
 21270  019F66  0EFD               	movlw	-3
 21271  019F68  50E3               	movf	plusw1,w,c
 21272  019F6A  0F01               	addlw	1
 21273  019F6C  6E28               	movwf	btemp^0,c
 21274  019F6E  0EFD               	movlw	-3
 21275  019F70  0060  F0A3  FFE3   	movff	btemp,plusw1
 21276  019F76  6A28               	clrf	btemp^0,c
 21277  019F78  0EFE               	movlw	-2
 21278  019F7A  50E3               	movf	plusw1,w,c
 21279  019F7C  2028               	addwfc	btemp^0,w,c
 21280  019F7E  6E28               	movwf	btemp^0,c
 21281  019F80  0EFE               	movlw	-2
 21282  019F82  0060  F0A3  FFE3   	movff	btemp,plusw1
 21283  019F88                     l11400:
 21284                           
 21285                           ;stkvar	_i @ sp[(-3)+0]
 21286  019F88  0EFD               	movlw	-3
 21287  019F8A  006F FF8C  F032    	movff	plusw1,btemp+10
 21288  019F90  0EFE               	movlw	-2
 21289  019F92  006F FF8C  F033    	movff	plusw1,btemp+11
 21290                           
 21291                           ;stkvar	_s @ sp[(-3)+-2]
 21292  019F98  0EFB               	movlw	-5
 21293  019F9A  006F FF8C  F030    	movff	plusw1,btemp+8
 21294  019FA0  0EFC               	movlw	-4
 21295  019FA2  006F FF8C  F031    	movff	plusw1,btemp+9
 21296  019FA8  5032               	movf	(btemp+10)^0,w,c
 21297  019FAA  2430               	addwf	(btemp+8)^0,w,c
 21298  019FAC  6ED9               	movwf	fsr2l,c
 21299  019FAE  5033               	movf	(btemp+11)^0,w,c
 21300  019FB0  2031               	addwfc	(btemp+9)^0,w,c
 21301  019FB2  6EDA               	movwf	fsr2h,c
 21302  019FB4  50DF               	movf	indf2,w,c
 21303  019FB6  6E33               	movwf	(btemp+11)^0,c
 21304                           
 21305                           ;stkvar	_c @ sp[(-3)+2]
 21306  019FB8  0EFF               	movlw	-1
 21307  019FBA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21308  019FC0  0EFF               	movlw	-1
 21309  019FC2  50E3               	movf	plusw1,w,c
 21310  019FC4  A4D8               	btfss	status,2,c
 21311  019FC6  D7C1               	goto	l11396
 21312                           
 21313                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21314  019FC8  0EF9               	movlw	249
 21315  019FCA  26E1               	addwf	fsr1l,f,c
 21316  019FCC  0EFF               	movlw	255
 21317  019FCE  22E2               	addwfc	fsr1h,f,c
 21318  019FD0  0012               	return		;funcret
 21319  019FD2                     __end_of_fputs:
 21320                           	opt callstack 0
 21321                           
 21322 ;; *************** function _fputc *****************
 21323 ;; Defined at:
 21324 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 21325 ;; Parameters:    Size  Location     Type
 21326 ;;  c               2  [STACK] int 
 21327 ;;  fp              2  [STACK] PTR struct _IO_FILE
 21328 ;;		 -> f(6), NULL(0), 
 21329 ;; Auto vars:     Size  Location     Type
 21330 ;;		None
 21331 ;; Return value:  Size  Location     Type
 21332 ;;                  2  [STACK] int 
 21333 ;; Registers used:
 21334 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 21335 ;; Tracked objects:
 21336 ;;		On entry : 0/0
 21337 ;;		On exit  : 0/0
 21338 ;;		Unchanged: 0/0
 21339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21344 ;;Total ram usage:        0 bytes
 21345 ;; Hardware stack levels used:    1
 21346 ;; Hardware stack levels required when called:   17
 21347 ;; This function calls:
 21348 ;;		_putch
 21349 ;; This function is called by:
 21350 ;;		_pad
 21351 ;;		_stoa
 21352 ;;		_vfpfcnvrt
 21353 ;;		_fputs
 21354 ;; This function uses a reentrant model
 21355 ;;
 21356                           
 21357                           	psect	text74
 21358  018E9E                     __ptext74:
 21359                           	opt callstack 0
 21360  018E9E                     _fputc:
 21361                           	opt callstack 0
 21362                           
 21363                           ;stkvar	_fp @ sp[(0)+-4]
 21364                           
 21365                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21366                           ;incstack = 0
 21367 ;; hardware stack exceeded
 21368  018E9E  0EFC               	movlw	-4
 21369  018EA0  006F FF8C  F028    	movff	plusw1,btemp
 21370  018EA6  0EFD               	movlw	-3
 21371  018EA8  50E3               	movf	plusw1,w,c
 21372  018EAA  1028               	iorwf	btemp^0,w,c
 21373  018EAC  B4D8               	btfsc	status,2,c
 21374  018EAE  D009               	goto	u10310
 21375                           
 21376                           ;stkvar	_fp @ sp[(0)+-4]
 21377  018EB0  0EFC               	movlw	-4
 21378  018EB2  006F FF8C  F028    	movff	plusw1,btemp
 21379  018EB8  0EFD               	movlw	-3
 21380  018EBA  50E3               	movf	plusw1,w,c
 21381  018EBC  1028               	iorwf	btemp^0,w,c
 21382  018EBE  A4D8               	btfss	status,2,c
 21383  018EC0  D006               	goto	l11384
 21384  018EC2                     u10310:
 21385                           
 21386                           ;stkvar	_c @ sp[(0)+-2]
 21387  018EC2  0EFE               	movlw	-2
 21388  018EC4  50E3               	movf	plusw1,w,c
 21389  018EC6  6EE6               	movwf	postinc1,c
 21390  018EC8  ECAE  F0DA         	call	_putch	;wreg free
 21391  018ECC  D075               	goto	l3146
 21392  018ECE                     l11384:
 21393                           
 21394                           ;stkvar	_fp @ sp[(0)+-4]
 21395  018ECE  0EFC               	movlw	-4
 21396  018ED0  006F FF8C  F032    	movff	plusw1,btemp+10
 21397  018ED6  0EFD               	movlw	-3
 21398  018ED8  006F FF8C  F033    	movff	plusw1,btemp+11
 21399  018EDE  0E04               	movlw	4
 21400  018EE0  2432               	addwf	(btemp+10)^0,w,c
 21401  018EE2  6ED9               	movwf	fsr2l,c
 21402  018EE4  0E00               	movlw	0
 21403  018EE6  2033               	addwfc	(btemp+11)^0,w,c
 21404  018EE8  6EDA               	movwf	fsr2h,c
 21405  018EEA  50DE               	movf	postinc2,w,c
 21406  018EEC  10DE               	iorwf	postinc2,w,c
 21407  018EEE  B4D8               	btfsc	status,2,c
 21408  018EF0  D026               	goto	u10330
 21409                           
 21410                           ;stkvar	_fp @ sp[(0)+-4]
 21411  018EF2  0EFC               	movlw	-4
 21412  018EF4  006F FF8C  F032    	movff	plusw1,btemp+10
 21413  018EFA  0EFD               	movlw	-3
 21414  018EFC  006F FF8C  F033    	movff	plusw1,btemp+11
 21415  018F02  0E04               	movlw	4
 21416  018F04  2432               	addwf	(btemp+10)^0,w,c
 21417  018F06  6ED9               	movwf	fsr2l,c
 21418  018F08  0E00               	movlw	0
 21419  018F0A  2033               	addwfc	(btemp+11)^0,w,c
 21420  018F0C  6EDA               	movwf	fsr2h,c
 21421                           
 21422                           ;stkvar	_fp @ sp[(0)+-4]
 21423  018F0E  0EFC               	movlw	-4
 21424  018F10  006F FF8C  F032    	movff	plusw1,btemp+10
 21425  018F16  0EFD               	movlw	-3
 21426  018F18  006F FF8C  F033    	movff	plusw1,btemp+11
 21427  018F1E  0E02               	movlw	2
 21428  018F20  2432               	addwf	(btemp+10)^0,w,c
 21429  018F22  6EE9               	movwf	fsr0l,c
 21430  018F24  0E00               	movlw	0
 21431  018F26  2033               	addwfc	(btemp+11)^0,w,c
 21432  018F28  6EEA               	movwf	fsr0h,c
 21433  018F2A  50DE               	movf	postinc2,w,c
 21434  018F2C  5CEE               	subwf	postinc0,w,c
 21435  018F2E  50EE               	movf	postinc0,w,c
 21436  018F30  0A80               	xorlw	128
 21437  018F32  6E28               	movwf	btemp^0,c
 21438  018F34  50DE               	movf	postinc2,w,c
 21439  018F36  0A80               	xorlw	128
 21440  018F38  5828               	subwfb	btemp^0,w,c
 21441  018F3A  B0D8               	btfsc	status,0,c
 21442  018F3C  D03D               	goto	l3146
 21443  018F3E                     u10330:
 21444                           
 21445                           ;stkvar	_c @ sp[(0)+-2]
 21446                           ;stkvar	_fp @ sp[(0)+-4]
 21447  018F3E  0EFC               	movlw	-4
 21448  018F40  006F FF8C  F032    	movff	plusw1,btemp+10
 21449  018F46  0EFD               	movlw	-3
 21450  018F48  006F FF8C  F033    	movff	plusw1,btemp+11
 21451  018F4E  0E02               	movlw	2
 21452  018F50  2432               	addwf	(btemp+10)^0,w,c
 21453  018F52  6ED9               	movwf	fsr2l,c
 21454  018F54  0E00               	movlw	0
 21455  018F56  2033               	addwfc	(btemp+11)^0,w,c
 21456  018F58  6EDA               	movwf	fsr2h,c
 21457  018F5A  006F FF78  F032    	movff	postinc2,btemp+10
 21458  018F60  006F FF74  F033    	movff	postdec2,btemp+11
 21459                           
 21460                           ;stkvar	_fp @ sp[(0)+-4]
 21461  018F66  0EFC               	movlw	-4
 21462  018F68  006F FF8F FFD9     	movff	plusw1,fsr2l
 21463  018F6E  0EFD               	movlw	-3
 21464  018F70  006F FF8F FFDA     	movff	plusw1,fsr2h
 21465  018F76  006F FF78  F030    	movff	postinc2,btemp+8
 21466  018F7C  006F FF74  F031    	movff	postdec2,btemp+9
 21467  018F82  5032               	movf	(btemp+10)^0,w,c
 21468  018F84  2430               	addwf	(btemp+8)^0,w,c
 21469  018F86  6ED9               	movwf	fsr2l,c
 21470  018F88  5033               	movf	(btemp+11)^0,w,c
 21471  018F8A  2031               	addwfc	(btemp+9)^0,w,c
 21472  018F8C  6EDA               	movwf	fsr2h,c
 21473  018F8E  0EFE               	movlw	-2
 21474  018F90  006F FF8F FFDF     	movff	plusw1,indf2
 21475                           
 21476                           ;stkvar	_fp @ sp[(0)+-4]
 21477  018F96  0EFC               	movlw	-4
 21478  018F98  006F FF8C  F032    	movff	plusw1,btemp+10
 21479  018F9E  0EFD               	movlw	-3
 21480  018FA0  006F FF8C  F033    	movff	plusw1,btemp+11
 21481  018FA6  0E02               	movlw	2
 21482  018FA8  2432               	addwf	(btemp+10)^0,w,c
 21483  018FAA  6ED9               	movwf	fsr2l,c
 21484  018FAC  0E00               	movlw	0
 21485  018FAE  2033               	addwfc	(btemp+11)^0,w,c
 21486  018FB0  6EDA               	movwf	fsr2h,c
 21487  018FB2  2ADE               	incf	postinc2,f,c
 21488  018FB4  0E00               	movlw	0
 21489  018FB6  22DD               	addwfc	postdec2,f,c
 21490  018FB8                     l3146:
 21491                           
 21492                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 21493  018FB8  52E5               	movf	postdec1,f,c
 21494  018FBA  52E5               	movf	postdec1,f,c
 21495  018FBC  52E5               	movf	postdec1,f,c
 21496  018FBE  52E5               	movf	postdec1,f,c
 21497  018FC0  0012               	return		;funcret
 21498  018FC2                     __end_of_fputc:
 21499                           	opt callstack 0
 21500                           
 21501 ;; *************** function _putch *****************
 21502 ;; Defined at:
 21503 ;;		line 170 in file "eadog.c"
 21504 ;; Parameters:    Size  Location     Type
 21505 ;;  c               1  [STACK] unsigned char 
 21506 ;; Auto vars:     Size  Location     Type
 21507 ;;		None
 21508 ;; Return value:  Size  Location     Type
 21509 ;;                  1  [STACK] void 
 21510 ;; Registers used:
 21511 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21512 ;; Tracked objects:
 21513 ;;		On entry : 0/0
 21514 ;;		On exit  : 0/0
 21515 ;;		Unchanged: 0/0
 21516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21520 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21521 ;;Total ram usage:        0 bytes
 21522 ;; Hardware stack levels used:    1
 21523 ;; Hardware stack levels required when called:   16
 21524 ;; This function calls:
 21525 ;;		_ringBufS_put_dma
 21526 ;; This function is called by:
 21527 ;;		_fputc
 21528 ;; This function uses a reentrant model
 21529 ;;
 21530                           
 21531                           	psect	text75
 21532  01B55C                     __ptext75:
 21533                           	opt callstack 0
 21534  01B55C                     _putch:
 21535                           	opt callstack 0
 21536                           
 21537                           ;eadog.c: 170: void putch(char c);eadog.c: 171: {;eadog.c: 172:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21538                           ;stkvar	_c @ sp[(0)+-1]
 21539                           
 21540                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21541                           ;incstack = 0
 21542 ;; hardware stack exceeded
 21543  01B55C  0EFF               	movlw	-1
 21544  01B55E  50E3               	movf	plusw1,w,c
 21545  01B560  6EE6               	movwf	postinc1,c
 21546  01B562  0060  F19B  FFE6   	movff	_spi_link+6,postinc1
 21547  01B568  0060  F19F  FFE6   	movff	_spi_link+7,postinc1
 21548  01B56E  ECA4  F0CE         	call	_ringBufS_put_dma	;wreg free
 21549                           
 21550                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21551  01B572  52E5               	movf	postdec1,f,c
 21552  01B574  0012               	return		;funcret
 21553  01B576                     __end_of_putch:
 21554                           	opt callstack 0
 21555                           
 21556 ;; *************** function _ringBufS_put_dma *****************
 21557 ;; Defined at:
 21558 ;;		line 67 in file "ringbufs.c"
 21559 ;; Parameters:    Size  Location     Type
 21560 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21561 ;;		 -> ring_buf1(67), 
 21562 ;;  c               1  [STACK] const unsigned char 
 21563 ;; Auto vars:     Size  Location     Type
 21564 ;;		None
 21565 ;; Return value:  Size  Location     Type
 21566 ;;                  1  [STACK] void 
 21567 ;; Registers used:
 21568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21569 ;; Tracked objects:
 21570 ;;		On entry : 0/0
 21571 ;;		On exit  : 0/0
 21572 ;;		Unchanged: 0/0
 21573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21578 ;;Total ram usage:        0 bytes
 21579 ;; Hardware stack levels used:    1
 21580 ;; Hardware stack levels required when called:   15
 21581 ;; This function calls:
 21582 ;;		Nothing
 21583 ;; This function is called by:
 21584 ;;		_putch
 21585 ;; This function uses a reentrant model
 21586 ;;
 21587                           
 21588                           	psect	text76
 21589  019D48                     __ptext76:
 21590                           	opt callstack 0
 21591  019D48                     _ringBufS_put_dma:
 21592                           	opt callstack 0
 21593                           
 21594                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21595                           ;stkvar	__this @ sp[(0)+-2]
 21596                           
 21597                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21598                           ;incstack = 0
 21599 ;; hardware stack exceeded
 21600  019D48  0EFE               	movlw	-2
 21601  019D4A  006F FF8C  F032    	movff	plusw1,btemp+10
 21602  019D50  0EFF               	movlw	-1
 21603  019D52  006F FF8C  F033    	movff	plusw1,btemp+11
 21604  019D58  0E42               	movlw	66
 21605  019D5A  2432               	addwf	(btemp+10)^0,w,c
 21606  019D5C  6ED9               	movwf	fsr2l,c
 21607  019D5E  0E00               	movlw	0
 21608  019D60  2033               	addwfc	(btemp+11)^0,w,c
 21609  019D62  6EDA               	movwf	fsr2h,c
 21610  019D64  0E40               	movlw	64
 21611  019D66  60DF               	cpfslt	indf2,c
 21612  019D68  D040               	goto	l1577
 21613                           
 21614                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21615                           ;stkvar	_c @ sp[(0)+-3]
 21616                           ;stkvar	__this @ sp[(0)+-2]
 21617  019D6A  0EFE               	movlw	-2
 21618  019D6C  006F FF8C  F032    	movff	plusw1,btemp+10
 21619  019D72  0EFF               	movlw	-1
 21620  019D74  006F FF8C  F033    	movff	plusw1,btemp+11
 21621  019D7A  0E40               	movlw	64
 21622  019D7C  2432               	addwf	(btemp+10)^0,w,c
 21623  019D7E  6ED9               	movwf	fsr2l,c
 21624  019D80  0E00               	movlw	0
 21625  019D82  2033               	addwfc	(btemp+11)^0,w,c
 21626  019D84  6EDA               	movwf	fsr2h,c
 21627  019D86  50DF               	movf	indf2,w,c
 21628  019D88  6E33               	movwf	(btemp+11)^0,c
 21629                           
 21630                           ;stkvar	__this @ sp[(0)+-2]
 21631  019D8A  0EFE               	movlw	-2
 21632  019D8C  006F FF8C  F030    	movff	plusw1,btemp+8
 21633  019D92  0EFF               	movlw	-1
 21634  019D94  006F FF8C  F031    	movff	plusw1,btemp+9
 21635  019D9A  5033               	movf	(btemp+11)^0,w,c
 21636  019D9C  2430               	addwf	(btemp+8)^0,w,c
 21637  019D9E  6ED9               	movwf	fsr2l,c
 21638  019DA0  0E00               	movlw	0
 21639  019DA2  2031               	addwfc	(btemp+9)^0,w,c
 21640  019DA4  6EDA               	movwf	fsr2h,c
 21641  019DA6  0EFD               	movlw	-3
 21642  019DA8  006F FF8F FFDF     	movff	plusw1,indf2
 21643                           
 21644                           ;ringbufs.c: 71:   ++_this->head;
 21645                           ;stkvar	__this @ sp[(0)+-2]
 21646  019DAE  0EFE               	movlw	-2
 21647  019DB0  006F FF8C  F032    	movff	plusw1,btemp+10
 21648  019DB6  0EFF               	movlw	-1
 21649  019DB8  006F FF8C  F033    	movff	plusw1,btemp+11
 21650  019DBE  0E40               	movlw	64
 21651  019DC0  2432               	addwf	(btemp+10)^0,w,c
 21652  019DC2  6ED9               	movwf	fsr2l,c
 21653  019DC4  0E00               	movlw	0
 21654  019DC6  2033               	addwfc	(btemp+11)^0,w,c
 21655  019DC8  6EDA               	movwf	fsr2h,c
 21656  019DCA  2ADF               	incf	indf2,f,c
 21657                           
 21658                           ;ringbufs.c: 72:   ++_this->count;
 21659                           ;stkvar	__this @ sp[(0)+-2]
 21660  019DCC  0EFE               	movlw	-2
 21661  019DCE  006F FF8C  F032    	movff	plusw1,btemp+10
 21662  019DD4  0EFF               	movlw	-1
 21663  019DD6  006F FF8C  F033    	movff	plusw1,btemp+11
 21664  019DDC  0E42               	movlw	66
 21665  019DDE  2432               	addwf	(btemp+10)^0,w,c
 21666  019DE0  6ED9               	movwf	fsr2l,c
 21667  019DE2  0E00               	movlw	0
 21668  019DE4  2033               	addwfc	(btemp+11)^0,w,c
 21669  019DE6  6EDA               	movwf	fsr2h,c
 21670  019DE8  2ADF               	incf	indf2,f,c
 21671  019DEA                     l1577:
 21672                           
 21673                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21674  019DEA  52E5               	movf	postdec1,f,c
 21675  019DEC  52E5               	movf	postdec1,f,c
 21676  019DEE  52E5               	movf	postdec1,f,c
 21677  019DF0  0012               	return		;funcret
 21678  019DF2                     __end_of_ringBufS_put_dma:
 21679                           	opt callstack 0
 21680                           
 21681 ;; *************** function _atoi *****************
 21682 ;; Defined at:
 21683 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21684 ;; Parameters:    Size  Location     Type
 21685 ;;  s               2  [STACK] PTR const unsigned char 
 21686 ;;		 -> STR_65(85), STR_63(3), STR_62(3), STR_61(19), 
 21687 ;;		 -> STR_60(19), STR_59(19), STR_58(19), STR_57(19), 
 21688 ;;		 -> STR_56(19), STR_55(24), STR_54(15), STR_53(15), 
 21689 ;;		 -> STR_52(15), STR_51(10), STR_50(10), STR_49(19), 
 21690 ;;		 -> STR_48(19), STR_45(3), STR_44(3), STR_43(3), 
 21691 ;;		 -> STR_42(17), STR_41(16), STR_40(16), STR_39(20), 
 21692 ;;		 -> STR_38(20), STR_37(20), STR_36(20), STR_35(20), 
 21693 ;;		 -> STR_34(20), STR_33(19), STR_32(19), STR_31(19), 
 21694 ;;		 -> STR_30(19), STR_29(19), STR_28(19), STR_27(19), 
 21695 ;;		 -> STR_26(19), STR_25(19), STR_24(19), STR_23(19), 
 21696 ;;		 -> STR_22(19), STR_21(17), STR_20(16), STR_19(16), 
 21697 ;;		 -> STR_18(26), STR_17(26), STR_16(22), STR_15(21), 
 21698 ;;		 -> STR_14(17), STR_13(17), STR_12(17), STR_11(22), 
 21699 ;;		 -> STR_10(22), STR_9(23), STR_8(18), STR_7(17), 
 21700 ;;		 -> STR_6(17), STR_5(17), STR_4(17), STR_2(15), 
 21701 ;;		 -> STR_1(17), 
 21702 ;; Auto vars:     Size  Location     Type
 21703 ;;  n               2  [STACK] int 
 21704 ;;  neg             2  [STACK] int 
 21705 ;; Return value:  Size  Location     Type
 21706 ;;                  2  [STACK] int 
 21707 ;; Registers used:
 21708 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21709 ;; Tracked objects:
 21710 ;;		On entry : 0/0
 21711 ;;		On exit  : 0/0
 21712 ;;		Unchanged: 0/0
 21713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21718 ;;Total ram usage:        0 bytes
 21719 ;; Hardware stack levels used:    1
 21720 ;; Hardware stack levels required when called:   16
 21721 ;; This function calls:
 21722 ;;		_isdigit
 21723 ;;		_isspace
 21724 ;; This function is called by:
 21725 ;;		_vfpfcnvrt
 21726 ;; This function uses a reentrant model
 21727 ;;
 21728                           
 21729                           	psect	text77
 21730  0170CE                     __ptext77:
 21731                           	opt callstack 0
 21732  0170CE                     _atoi:
 21733                           	opt callstack 0
 21734                           
 21735                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21736  0170CE  0E09               	movlw	9
 21737  0170D0  26E1               	addwf	fsr1l,f,c
 21738  0170D2  0E00               	movlw	0
 21739  0170D4  22E2               	addwfc	fsr1h,f,c
 21740                           
 21741                           ;stkvar	_n @ sp[(-9)+5]
 21742                           
 21743                           ;incstack = 0
 21744 ;; hardware stack exceeded
 21745  0170D6  0EFC               	movlw	-4
 21746  0170D8  6AE3               	clrf	plusw1,c
 21747  0170DA  0EFD               	movlw	-3
 21748  0170DC  6AE3               	clrf	plusw1,c
 21749                           
 21750                           ;stkvar	_neg @ sp[(-9)+7]
 21751  0170DE  0EFE               	movlw	-2
 21752  0170E0  6AE3               	clrf	plusw1,c
 21753  0170E2  0EFF               	movlw	-1
 21754  0170E4  6AE3               	clrf	plusw1,c
 21755  0170E6  D011               	goto	l9074
 21756  0170E8                     l9072:
 21757                           
 21758                           ;stkvar	_s @ sp[(-9)+-2]
 21759  0170E8  0EF5               	movlw	-11
 21760  0170EA  50E3               	movf	plusw1,w,c
 21761  0170EC  0F01               	addlw	1
 21762  0170EE  6E28               	movwf	btemp^0,c
 21763  0170F0  0EF5               	movlw	-11
 21764  0170F2  0060  F0A3  FFE3   	movff	btemp,plusw1
 21765  0170F8  6A28               	clrf	btemp^0,c
 21766  0170FA  0EF6               	movlw	-10
 21767  0170FC  50E3               	movf	plusw1,w,c
 21768  0170FE  2028               	addwfc	btemp^0,w,c
 21769  017100  6E28               	movwf	btemp^0,c
 21770  017102  0EF6               	movlw	-10
 21771  017104  0060  F0A3  FFE3   	movff	btemp,plusw1
 21772  01710A                     l9074:
 21773                           
 21774                           ;stkvar	_atoi$5893 @ sp[(-9)+4]
 21775  01710A  0EFB               	movlw	-5
 21776  01710C  6AE3               	clrf	plusw1,c
 21777  01710E  2AE3               	incf	plusw1,f,c
 21778                           
 21779                           ;stkvar	_s @ sp[(-9)+-2]
 21780  017110  50E1               	movf	fsr1l,w,c
 21781  017112  0FF5               	addlw	-11
 21782  017114  6ED9               	movwf	fsr2l,c
 21783  017116  50E2               	movf	fsr1h,w,c
 21784  017118  6EDA               	movwf	fsr2h,c
 21785  01711A  0EFF               	movlw	255
 21786  01711C  22DA               	addwfc	fsr2h,f,c
 21787  01711E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21788  017124  006F FF77 FFF7     	movff	postdec2,tblptrh
 21789  01712A                     	if	0	;tblptru may be non-zero
 21790  01712A                     	endif
 21791  01712A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21792  01712A  0E00               	movlw	low (__mediumconst shr (0+16))
 21793  01712C  6EF8               	movwf	tblptru,c
 21794  01712E                     	endif
 21795  01712E  0008               	tblrd		*
 21796  017130  50F5               	movf	tablat,w,c
 21797  017132  0A20               	xorlw	32
 21798  017134  B4D8               	btfsc	status,2,c
 21799  017136  D023               	goto	l9082
 21800  017138  0EF7               	movlw	247
 21801  01713A  6E32               	movwf	(btemp+10)^0,c
 21802  01713C  0EFF               	movlw	255
 21803  01713E  6E33               	movwf	(btemp+11)^0,c
 21804                           
 21805                           ;stkvar	_s @ sp[(-9)+-2]
 21806  017140  50E1               	movf	fsr1l,w,c
 21807  017142  0FF5               	addlw	-11
 21808  017144  6ED9               	movwf	fsr2l,c
 21809  017146  50E2               	movf	fsr1h,w,c
 21810  017148  6EDA               	movwf	fsr2h,c
 21811  01714A  0EFF               	movlw	255
 21812  01714C  22DA               	addwfc	fsr2h,f,c
 21813  01714E  006F FF7B FFF6     	movff	postinc2,tblptrl
 21814  017154  006F FF77 FFF7     	movff	postdec2,tblptrh
 21815  01715A                     	if	0	;tblptru may be non-zero
 21816  01715A                     	endif
 21817  01715A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21818  01715A  0E00               	movlw	low (__mediumconst shr (0+16))
 21819  01715C  6EF8               	movwf	tblptru,c
 21820  01715E                     	endif
 21821  01715E  0008               	tblrd		*
 21822  017160  50F5               	movf	tablat,w,c
 21823  017162  6E30               	movwf	(btemp+8)^0,c
 21824  017164  6A31               	clrf	(btemp+9)^0,c
 21825  017166  5032               	movf	(btemp+10)^0,w,c
 21826  017168  2630               	addwf	(btemp+8)^0,f,c
 21827  01716A  5033               	movf	(btemp+11)^0,w,c
 21828  01716C  2231               	addwfc	(btemp+9)^0,f,c
 21829  01716E  5031               	movf	(btemp+9)^0,w,c
 21830  017170  E104               	bnz	u8310
 21831  017172  0E05               	movlw	5
 21832  017174  5C30               	subwf	(btemp+8)^0,w,c
 21833  017176  A0D8               	btfss	status,0,c
 21834  017178  D002               	goto	l9082
 21835  01717A                     u8310:
 21836                           
 21837                           ;stkvar	_atoi$5893 @ sp[(-9)+4]
 21838  01717A  0EFB               	movlw	-5
 21839  01717C  6AE3               	clrf	plusw1,c
 21840  01717E                     l9082:
 21841                           
 21842                           ;stkvar	_atoi$5893 @ sp[(-9)+4]
 21843  01717E  0EFB               	movlw	-5
 21844  017180  50E3               	movf	plusw1,w,c
 21845  017182  6E32               	movwf	(btemp+10)^0,c
 21846  017184  6A33               	clrf	(btemp+11)^0,c
 21847                           
 21848                           ;stkvar	_atoi$5892 @ sp[(-9)+2]
 21849  017186  0EF9               	movlw	-7
 21850  017188  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21851  01718E  0EFA               	movlw	-6
 21852  017190  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21853                           
 21854                           ;stkvar	_atoi$5892 @ sp[(-9)+2]
 21855  017196  0EF9               	movlw	-7
 21856  017198  006F FF8C  F028    	movff	plusw1,btemp
 21857  01719E  0EFA               	movlw	-6
 21858  0171A0  50E3               	movf	plusw1,w,c
 21859  0171A2  1028               	iorwf	btemp^0,w,c
 21860  0171A4  B4D8               	btfsc	status,2,c
 21861  0171A6  D01F               	goto	l9092
 21862  0171A8  D79F               	goto	l9072
 21863  0171AA                     l9088:
 21864  0171AA  0E01               	movlw	1
 21865  0171AC  6E32               	movwf	(btemp+10)^0,c
 21866  0171AE  0E00               	movlw	0
 21867  0171B0  6E33               	movwf	(btemp+11)^0,c
 21868                           
 21869                           ;stkvar	_neg @ sp[(-9)+7]
 21870  0171B2  0EFE               	movlw	-2
 21871  0171B4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 21872  0171BA  0EFF               	movlw	-1
 21873  0171BC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 21874  0171C2                     l9090:
 21875                           
 21876                           ;stkvar	_s @ sp[(-9)+-2]
 21877  0171C2  0EF5               	movlw	-11
 21878  0171C4  50E3               	movf	plusw1,w,c
 21879  0171C6  0F01               	addlw	1
 21880  0171C8  6E28               	movwf	btemp^0,c
 21881  0171CA  0EF5               	movlw	-11
 21882  0171CC  0060  F0A3  FFE3   	movff	btemp,plusw1
 21883  0171D2  6A28               	clrf	btemp^0,c
 21884  0171D4  0EF6               	movlw	-10
 21885  0171D6  50E3               	movf	plusw1,w,c
 21886  0171D8  2028               	addwfc	btemp^0,w,c
 21887  0171DA  6E28               	movwf	btemp^0,c
 21888  0171DC  0EF6               	movlw	-10
 21889  0171DE  0060  F0A3  FFE3   	movff	btemp,plusw1
 21890  0171E4  D053               	goto	l9098
 21891  0171E6                     l9092:
 21892                           
 21893                           ;stkvar	_s @ sp[(-9)+-2]
 21894  0171E6  50E1               	movf	fsr1l,w,c
 21895  0171E8  0FF5               	addlw	-11
 21896  0171EA  6ED9               	movwf	fsr2l,c
 21897  0171EC  50E2               	movf	fsr1h,w,c
 21898  0171EE  6EDA               	movwf	fsr2h,c
 21899  0171F0  0EFF               	movlw	255
 21900  0171F2  22DA               	addwfc	fsr2h,f,c
 21901  0171F4  006F FF7B FFF6     	movff	postinc2,tblptrl
 21902  0171FA  006F FF77 FFF7     	movff	postdec2,tblptrh
 21903  017200                     	if	0	;tblptru may be non-zero
 21904  017200                     	endif
 21905  017200                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21906  017200  0E00               	movlw	low (__mediumconst shr (0+16))
 21907  017202  6EF8               	movwf	tblptru,c
 21908  017204                     	endif
 21909  017204  0008               	tblrd		*
 21910  017206  50F5               	movf	tablat,w,c
 21911  017208  6E32               	movwf	(btemp+10)^0,c
 21912  01720A  6A33               	clrf	(btemp+11)^0,c
 21913                           
 21914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21915                           ; Switch size 1, requested type "simple"
 21916                           ; Number of cases is 1, Range of values is 0 to 0
 21917                           ; switch strategies available:
 21918                           ; Name         Instructions Cycles
 21919                           ; simple_byte            4     3 (average)
 21920                           ;	Chosen strategy is simple_byte
 21921  01720C  5033               	movf	(btemp+11)^0,w,c
 21922  01720E  0A00               	xorlw	0	; case 0
 21923  017210  A4D8               	btfss	status,2,c
 21924  017212  D03C               	goto	l9098
 21925                           
 21926                           ; Switch size 1, requested type "simple"
 21927                           ; Number of cases is 2, Range of values is 43 to 45
 21928                           ; switch strategies available:
 21929                           ; Name         Instructions Cycles
 21930                           ; simple_byte            7     4 (average)
 21931                           ;	Chosen strategy is simple_byte
 21932  017214  5032               	movf	(btemp+10)^0,w,c
 21933  017216  0A2B               	xorlw	43	; case 43
 21934  017218  B4D8               	btfsc	status,2,c
 21935  01721A  D7D3               	goto	l9090
 21936  01721C  0A06               	xorlw	6	; case 45
 21937  01721E  B4D8               	btfsc	status,2,c
 21938  017220  D7C4               	goto	l9088
 21939  017222  D034               	goto	l9098
 21940  017224                     l9094:
 21941                           
 21942                           ;stkvar	_n @ sp[(-9)+5]
 21943  017224  0EFC               	movlw	-4
 21944  017226  006F FF8C  F032    	movff	plusw1,btemp+10
 21945  01722C  0EFD               	movlw	-3
 21946  01722E  006F FF8C  F033    	movff	plusw1,btemp+11
 21947  017234  0E0A               	movlw	10
 21948  017236  0232               	mulwf	(btemp+10)^0,c
 21949  017238  006F FFCC  F030    	movff	prodl,btemp+8
 21950  01723E  006F FFD0  F031    	movff	prodh,btemp+9
 21951  017244  0233               	mulwf	(btemp+11)^0,c
 21952  017246  50F3               	movf	prodl,w,c
 21953  017248  2631               	addwf	(btemp+9)^0,f,c
 21954                           
 21955                           ;stkvar	_s @ sp[(-9)+-2]
 21956  01724A  50E1               	movf	fsr1l,w,c
 21957  01724C  0FF5               	addlw	-11
 21958  01724E  6ED9               	movwf	fsr2l,c
 21959  017250  50E2               	movf	fsr1h,w,c
 21960  017252  6EDA               	movwf	fsr2h,c
 21961  017254  0EFF               	movlw	255
 21962  017256  22DA               	addwfc	fsr2h,f,c
 21963  017258  006F FF7B FFF6     	movff	postinc2,tblptrl
 21964  01725E  006F FF77 FFF7     	movff	postdec2,tblptrh
 21965  017264                     	if	0	;tblptru may be non-zero
 21966  017264                     	endif
 21967  017264                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21968  017264  0E00               	movlw	low (__mediumconst shr (0+16))
 21969  017266  6EF8               	movwf	tblptru,c
 21970  017268                     	endif
 21971  017268  0008               	tblrd		*
 21972  01726A  50F5               	movf	tablat,w,c
 21973  01726C  5E30               	subwf	(btemp+8)^0,f,c
 21974  01726E  0E00               	movlw	0
 21975  017270  5A31               	subwfb	(btemp+9)^0,f,c
 21976  017272  0E30               	movlw	48
 21977  017274  2630               	addwf	(btemp+8)^0,f,c
 21978  017276  0E00               	movlw	0
 21979  017278  2231               	addwfc	(btemp+9)^0,f,c
 21980                           
 21981                           ;stkvar	_n @ sp[(-9)+5]
 21982  01727A  0EFC               	movlw	-4
 21983  01727C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 21984  017282  0EFD               	movlw	-3
 21985  017284  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 21986  01728A  D79B               	goto	l9090
 21987  01728C                     l9098:
 21988  01728C  0ED0               	movlw	208
 21989  01728E  6E32               	movwf	(btemp+10)^0,c
 21990  017290  0EFF               	movlw	255
 21991  017292  6E33               	movwf	(btemp+11)^0,c
 21992                           
 21993                           ;stkvar	_s @ sp[(-9)+-2]
 21994  017294  50E1               	movf	fsr1l,w,c
 21995  017296  0FF5               	addlw	-11
 21996  017298  6ED9               	movwf	fsr2l,c
 21997  01729A  50E2               	movf	fsr1h,w,c
 21998  01729C  6EDA               	movwf	fsr2h,c
 21999  01729E  0EFF               	movlw	255
 22000  0172A0  22DA               	addwfc	fsr2h,f,c
 22001  0172A2  006F FF7B FFF6     	movff	postinc2,tblptrl
 22002  0172A8  006F FF77 FFF7     	movff	postdec2,tblptrh
 22003  0172AE                     	if	0	;tblptru may be non-zero
 22004  0172AE                     	endif
 22005  0172AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 22006  0172AE  0E00               	movlw	low (__mediumconst shr (0+16))
 22007  0172B0  6EF8               	movwf	tblptru,c
 22008  0172B2                     	endif
 22009  0172B2  0008               	tblrd		*
 22010  0172B4  50F5               	movf	tablat,w,c
 22011  0172B6  6E30               	movwf	(btemp+8)^0,c
 22012  0172B8  6A31               	clrf	(btemp+9)^0,c
 22013  0172BA  5032               	movf	(btemp+10)^0,w,c
 22014  0172BC  2630               	addwf	(btemp+8)^0,f,c
 22015  0172BE  5033               	movf	(btemp+11)^0,w,c
 22016  0172C0  2231               	addwfc	(btemp+9)^0,f,c
 22017  0172C2  5031               	movf	(btemp+9)^0,w,c
 22018  0172C4  E106               	bnz	u8330
 22019  0172C6  0E0A               	movlw	10
 22020  0172C8  5C30               	subwf	(btemp+8)^0,w,c
 22021  0172CA  B0D8               	btfsc	status,0,c
 22022  0172CC  D002               	goto	u8330
 22023  0172CE  0E01               	movlw	1
 22024  0172D0  D001               	goto	u8340
 22025  0172D2                     u8330:
 22026  0172D2  0E00               	movlw	0
 22027  0172D4                     u8340:
 22028  0172D4  6E32               	movwf	(btemp+10)^0,c
 22029  0172D6  6A33               	clrf	(btemp+11)^0,c
 22030                           
 22031                           ;stkvar	_atoi$5894 @ sp[(-9)+0]
 22032  0172D8  0EF7               	movlw	-9
 22033  0172DA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 22034  0172E0  0EF8               	movlw	-8
 22035  0172E2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 22036                           
 22037                           ;stkvar	_atoi$5894 @ sp[(-9)+0]
 22038  0172E8  0EF7               	movlw	-9
 22039  0172EA  006F FF8C  F028    	movff	plusw1,btemp
 22040  0172F0  0EF8               	movlw	-8
 22041  0172F2  50E3               	movf	plusw1,w,c
 22042  0172F4  1028               	iorwf	btemp^0,w,c
 22043  0172F6  A4D8               	btfss	status,2,c
 22044  0172F8  D795               	goto	l9094
 22045                           
 22046                           ;stkvar	_neg @ sp[(-9)+7]
 22047  0172FA  0EFE               	movlw	-2
 22048  0172FC  006F FF8C  F028    	movff	plusw1,btemp
 22049  017302  0EFF               	movlw	-1
 22050  017304  50E3               	movf	plusw1,w,c
 22051  017306  1028               	iorwf	btemp^0,w,c
 22052  017308  A4D8               	btfss	status,2,c
 22053  01730A  D00E               	goto	l9108
 22054                           
 22055                           ;stkvar	_n @ sp[(-9)+5]
 22056  01730C  0EFC               	movlw	-4
 22057  01730E  006F FF8C  F028    	movff	plusw1,btemp
 22058  017314  1E28               	comf	btemp^0,f,c
 22059  017316  0EFD               	movlw	-3
 22060  017318  006F FF8C  F029    	movff	plusw1,btemp+1
 22061  01731E  1E29               	comf	(btemp+1)^0,f,c
 22062  017320  2A28               	incf	btemp^0,f,c
 22063  017322  B4D8               	btfsc	status,2,c
 22064  017324  2A29               	incf	(btemp+1)^0,f,c
 22065  017326  D008               	goto	l3077
 22066  017328                     l9108:
 22067                           
 22068                           ;stkvar	_n @ sp[(-9)+5]
 22069  017328  0EFC               	movlw	-4
 22070  01732A  006F FF8C  F028    	movff	plusw1,btemp
 22071  017330  0EFD               	movlw	-3
 22072  017332  006F FF8C  F029    	movff	plusw1,btemp+1
 22073  017338                     l3077:
 22074                           
 22075                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 22076  017338  0EF5               	movlw	245
 22077  01733A  26E1               	addwf	fsr1l,f,c
 22078  01733C  0EFF               	movlw	255
 22079  01733E  22E2               	addwfc	fsr1h,f,c
 22080  017340  0012               	return		;funcret
 22081  017342                     __end_of_atoi:
 22082                           	opt callstack 0
 22083                           
 22084 ;; *************** function _isspace *****************
 22085 ;; Defined at:
 22086 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 22087 ;; Parameters:    Size  Location     Type
 22088 ;;  c               2  [STACK] int 
 22089 ;; Auto vars:     Size  Location     Type
 22090 ;;		None
 22091 ;; Return value:  Size  Location     Type
 22092 ;;                  2  [STACK] int 
 22093 ;; Registers used:
 22094 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22095 ;; Tracked objects:
 22096 ;;		On entry : 0/0
 22097 ;;		On exit  : 0/0
 22098 ;;		Unchanged: 0/0
 22099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22104 ;;Total ram usage:        0 bytes
 22105 ;; Hardware stack levels used:    1
 22106 ;; Hardware stack levels required when called:   15
 22107 ;; This function calls:
 22108 ;;		Nothing
 22109 ;; This function is called by:
 22110 ;;		_atoi
 22111 ;; This function uses a reentrant model
 22112 ;;
 22113                           
 22114                           	psect	text78
 22115  01A8B4                     __ptext78:
 22116                           	opt callstack 0
 22117  01A8B4                     _isspace:
 22118                           	opt callstack 0
 22119                           
 22120                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22121  01A8B4  52E6               	movf	postinc1,f,c
 22122                           
 22123                           ;stkvar	_isspace$5943 @ sp[(-1)+0]
 22124                           
 22125                           ;incstack = 0
 22126 ;; hardware stack exceeded
 22127  01A8B6  0EFF               	movlw	-1
 22128  01A8B8  6AE3               	clrf	plusw1,c
 22129  01A8BA  2AE3               	incf	plusw1,f,c
 22130                           
 22131                           ;stkvar	_c @ sp[(-1)+-2]
 22132  01A8BC  0EFD               	movlw	-3
 22133  01A8BE  006F FF8C  F028    	movff	plusw1,btemp
 22134  01A8C4  0E20               	movlw	32
 22135  01A8C6  1828               	xorwf	btemp^0,w,c
 22136  01A8C8  E104               	bnz	u7160
 22137  01A8CA  0EFE               	movlw	-2
 22138  01A8CC  50E3               	movf	plusw1,w,c
 22139  01A8CE  B4D8               	btfsc	status,2,c
 22140  01A8D0  D012               	goto	l8466
 22141  01A8D2                     u7160:
 22142                           
 22143                           ;stkvar	_c @ sp[(-1)+-2]
 22144  01A8D2  0EFD               	movlw	-3
 22145  01A8D4  50E3               	movf	plusw1,w,c
 22146  01A8D6  0FF7               	addlw	247
 22147  01A8D8  6E32               	movwf	(btemp+10)^0,c
 22148  01A8DA  0EFE               	movlw	-2
 22149  01A8DC  006F FF8C  F033    	movff	plusw1,btemp+11
 22150  01A8E2  0EFF               	movlw	255
 22151  01A8E4  2233               	addwfc	(btemp+11)^0,f,c
 22152  01A8E6  5033               	movf	(btemp+11)^0,w,c
 22153  01A8E8  E104               	bnz	u7170
 22154  01A8EA  0E05               	movlw	5
 22155  01A8EC  5C32               	subwf	(btemp+10)^0,w,c
 22156  01A8EE  A0D8               	btfss	status,0,c
 22157  01A8F0  D002               	goto	l8466
 22158  01A8F2                     u7170:
 22159                           
 22160                           ;stkvar	_isspace$5943 @ sp[(-1)+0]
 22161  01A8F2  0EFF               	movlw	-1
 22162  01A8F4  6AE3               	clrf	plusw1,c
 22163  01A8F6                     l8466:
 22164                           
 22165                           ;stkvar	_isspace$5943 @ sp[(-1)+0]
 22166  01A8F6  0EFF               	movlw	-1
 22167  01A8F8  50E3               	movf	plusw1,w,c
 22168  01A8FA  6E28               	movwf	btemp^0,c
 22169  01A8FC  6A29               	clrf	(btemp+1)^0,c
 22170                           
 22171                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22172  01A8FE  52E5               	movf	postdec1,f,c
 22173  01A900  52E5               	movf	postdec1,f,c
 22174  01A902  52E5               	movf	postdec1,f,c
 22175  01A904  0012               	return		;funcret
 22176  01A906                     __end_of_isspace:
 22177                           	opt callstack 0
 22178                           
 22179 ;; *************** function _isdigit *****************
 22180 ;; Defined at:
 22181 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 22182 ;; Parameters:    Size  Location     Type
 22183 ;;  c               2  [STACK] int 
 22184 ;; Auto vars:     Size  Location     Type
 22185 ;;		None
 22186 ;; Return value:  Size  Location     Type
 22187 ;;                  2  [STACK] int 
 22188 ;; Registers used:
 22189 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 22190 ;; Tracked objects:
 22191 ;;		On entry : 0/0
 22192 ;;		On exit  : 0/0
 22193 ;;		Unchanged: 0/0
 22194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22195 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22198 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22199 ;;Total ram usage:        0 bytes
 22200 ;; Hardware stack levels used:    1
 22201 ;; Hardware stack levels required when called:   15
 22202 ;; This function calls:
 22203 ;;		Nothing
 22204 ;; This function is called by:
 22205 ;;		_vfpfcnvrt
 22206 ;;		_atoi
 22207 ;; This function uses a reentrant model
 22208 ;;
 22209                           
 22210                           	psect	text79
 22211  01AF9A                     __ptext79:
 22212                           	opt callstack 0
 22213  01AF9A                     _isdigit:
 22214                           	opt callstack 0
 22215                           
 22216                           ;stkvar	_c @ sp[(0)+-2]
 22217                           
 22218                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22219                           ;incstack = 0
 22220 ;; hardware stack exceeded
 22221  01AF9A  0EFE               	movlw	-2
 22222  01AF9C  50E3               	movf	plusw1,w,c
 22223  01AF9E  0FD0               	addlw	208
 22224  01AFA0  6E32               	movwf	(btemp+10)^0,c
 22225  01AFA2  0EFF               	movlw	-1
 22226  01AFA4  006F FF8C  F033    	movff	plusw1,btemp+11
 22227  01AFAA  0EFF               	movlw	255
 22228  01AFAC  2233               	addwfc	(btemp+11)^0,f,c
 22229  01AFAE  5033               	movf	(btemp+11)^0,w,c
 22230  01AFB0  E106               	bnz	u6010
 22231  01AFB2  0E0A               	movlw	10
 22232  01AFB4  5C32               	subwf	(btemp+10)^0,w,c
 22233  01AFB6  B0D8               	btfsc	status,0,c
 22234  01AFB8  D002               	goto	u6010
 22235  01AFBA  0E01               	movlw	1
 22236  01AFBC  D001               	goto	u6020
 22237  01AFBE                     u6010:
 22238  01AFBE  0E00               	movlw	0
 22239  01AFC0                     u6020:
 22240  01AFC0  6E28               	movwf	btemp^0,c
 22241  01AFC2  6A29               	clrf	(btemp+1)^0,c
 22242                           
 22243                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 22244  01AFC4  52E5               	movf	postdec1,f,c
 22245  01AFC6  52E5               	movf	postdec1,f,c
 22246  01AFC8  0012               	return		;funcret
 22247  01AFCA                     __end_of_isdigit:
 22248                           	opt callstack 0
 22249                           
 22250 ;; *************** function _set_vterm *****************
 22251 ;; Defined at:
 22252 ;;		line 107 in file "mconfig.c"
 22253 ;; Parameters:    Size  Location     Type
 22254 ;;  vterm           1  [STACK] const unsigned char 
 22255 ;; Auto vars:     Size  Location     Type
 22256 ;;		None
 22257 ;; Return value:  Size  Location     Type
 22258 ;;                  1  [STACK] unsigned char 
 22259 ;; Registers used:
 22260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+11
 22261 ;; Tracked objects:
 22262 ;;		On entry : 0/1
 22263 ;;		On exit  : 0/0
 22264 ;;		Unchanged: 0/0
 22265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22270 ;;Total ram usage:        0 bytes
 22271 ;; Hardware stack levels used:    1
 22272 ;; Hardware stack levels required when called:   15
 22273 ;; This function calls:
 22274 ;;		Nothing
 22275 ;; This function is called by:
 22276 ;;		_main
 22277 ;;		_check_help
 22278 ;; This function uses a reentrant model
 22279 ;;
 22280                           
 22281                           	psect	text80
 22282  01B4AC                     __ptext80:
 22283                           	opt callstack 0
 22284  01B4AC                     _set_vterm:
 22285                           	opt callstack 15
 22286                           
 22287                           ;mconfig.c: 107: uint8_t set_vterm(const uint8_t vterm);mconfig.c: 108: {;mconfig.c: 109
      +                          :  D.vterm = vterm & 0x03;
 22288                           ;stkvar	_vterm @ sp[(0)+-1]
 22289                           
 22290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22291                           ;incstack = 0
 22292  01B4AC  0EFF               	movlw	-1
 22293  01B4AE  006F FF8C  F033    	movff	plusw1,btemp+11
 22294  01B4B4  0E03               	movlw	3
 22295  01B4B6  1633               	andwf	(btemp+11)^0,f,c
 22296  01B4B8  EE22  F1DF         	lfsr	2,_D+480
 22297  01B4BC  50DF               	movf	223,w,c
 22298  01B4BE  1833               	xorwf	(btemp+11)^0,w,c
 22299  01B4C0  0BFE               	andlw	-2
 22300  01B4C2  1833               	xorwf	(btemp+11)^0,w,c
 22301  01B4C4  6EDF               	movwf	223,c
 22302                           
 22303                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22304  01B4C6  52E5               	movf	postdec1,f,c
 22305  01B4C8  0012               	return		;funcret
 22306  01B4CA                     __end_of_set_vterm:
 22307                           	opt callstack 0
 22308                           
 22309 ;; *************** function _set_temp_display_help *****************
 22310 ;; Defined at:
 22311 ;;		line 211 in file "mconfig.c"
 22312 ;; Parameters:    Size  Location     Type
 22313 ;;  new_response    1  [STACK] const enum E16509
 22314 ;; Auto vars:     Size  Location     Type
 22315 ;;		None
 22316 ;; Return value:  Size  Location     Type
 22317 ;;                  1  [STACK] enum E16509
 22318 ;; Registers used:
 22319 ;;		wreg, fsr1l, fsr1h
 22320 ;; Tracked objects:
 22321 ;;		On entry : 0/2
 22322 ;;		On exit  : 3F/2
 22323 ;;		Unchanged: 0/0
 22324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22329 ;;Total ram usage:        0 bytes
 22330 ;; Hardware stack levels used:    1
 22331 ;; Hardware stack levels required when called:   15
 22332 ;; This function calls:
 22333 ;;		Nothing
 22334 ;; This function is called by:
 22335 ;;		_check_help
 22336 ;; This function uses a reentrant model
 22337 ;;
 22338                           
 22339                           	psect	text81
 22340  01B64A                     __ptext81:
 22341                           	opt callstack 0
 22342  01B64A                     _set_temp_display_help:
 22343                           	opt callstack 14
 22344                           
 22345                           ;mconfig.c: 211: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 212: {;mconfig.c: 213:  static D_CODES old_info;;mconfig.c: 215:  old_info = V.respon
      +                          se.help_temp;
 22346                           
 22347                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22348                           ;incstack = 0
 22349  01B64A  0102               	movlb	2	; () banked
 22350  01B64C  51A5               	movf	(_V+165)& (0+255),w,b	;volatile
 22351                           
 22352                           ; BSR set to: 2
 22353                           ;mconfig.c: 216:  V.response.help_temp = new_response_info;
 22354                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22355  01B64E  0EFF               	movlw	-1
 22356  01B650  006F FF8C  F2A5    	movff	plusw1,_V+165	;volatile
 22357                           
 22358                           ; BSR set to: 2
 22359                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 22360  01B656  52E5               	movf	postdec1,f,c
 22361  01B658  0012               	return		;funcret
 22362  01B65A                     __end_of_set_temp_display_help:
 22363                           	opt callstack 0
 22364                           
 22365 ;; *************** function _set_display_info *****************
 22366 ;; Defined at:
 22367 ;;		line 200 in file "mconfig.c"
 22368 ;; Parameters:    Size  Location     Type
 22369 ;;  new_response    1  [STACK] const enum E16509
 22370 ;; Auto vars:     Size  Location     Type
 22371 ;;		None
 22372 ;; Return value:  Size  Location     Type
 22373 ;;                  1  [STACK] enum E16994
 22374 ;; Registers used:
 22375 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22376 ;; Tracked objects:
 22377 ;;		On entry : 0/0
 22378 ;;		On exit  : 0/0
 22379 ;;		Unchanged: 0/0
 22380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22385 ;;Total ram usage:        0 bytes
 22386 ;; Hardware stack levels used:    1
 22387 ;; Hardware stack levels required when called:   16
 22388 ;; This function calls:
 22389 ;;		_TimerDone
 22390 ;; This function is called by:
 22391 ;;		_main
 22392 ;;		_check_help
 22393 ;; This function uses a reentrant model
 22394 ;;
 22395                           
 22396                           	psect	text82
 22397  01B4CA                     __ptext82:
 22398                           	opt callstack 0
 22399  01B4CA                     _set_display_info:
 22400                           	opt callstack 14
 22401                           
 22402                           ;mconfig.c: 200: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 20
      +                          1: {;mconfig.c: 202:  static D_CODES old_info = DIS_STR;;mconfig.c: 204:  if (TimerDone(
      +                          TMR_INFO)) {
 22403                           
 22404                           ; BSR set to: 2
 22405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22406                           ;incstack = 0
 22407  01B4CA  0E07               	movlw	7
 22408  01B4CC  6EE6               	movwf	postinc1,c
 22409  01B4CE  EC8F  F0D8         	call	_TimerDone	;wreg free
 22410  01B4D2  5028               	movf	btemp^0,w,c
 22411  01B4D4  B4D8               	btfsc	status,2,c
 22412  01B4D6  D006               	goto	l1712
 22413                           
 22414                           ;mconfig.c: 205:   old_info = V.response.info;
 22415  01B4D8  0102               	movlb	2	; () banked
 22416  01B4DA  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 22417                           
 22418                           ; BSR set to: 2
 22419                           ;mconfig.c: 206:   V.response.info = new_response_info;
 22420                           ;stkvar	_new_response_info @ sp[(0)+-1]
 22421  01B4DC  0EFF               	movlw	-1
 22422  01B4DE  006F FF8C  F2A4    	movff	plusw1,_V+164	;volatile
 22423  01B4E4                     l1712:
 22424                           
 22425                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 22426  01B4E4  52E5               	movf	postdec1,f,c
 22427  01B4E6  0012               	return		;funcret
 22428  01B4E8                     __end_of_set_display_info:
 22429                           	opt callstack 0
 22430                           
 22431 ;; *************** function _mode_lamp_dim *****************
 22432 ;; Defined at:
 22433 ;;		line 13 in file "mconfig.c"
 22434 ;; Parameters:    Size  Location     Type
 22435 ;;  level           2  [STACK] const unsigned short 
 22436 ;; Auto vars:     Size  Location     Type
 22437 ;;		None
 22438 ;; Return value:  Size  Location     Type
 22439 ;;                  1  [STACK] void 
 22440 ;; Registers used:
 22441 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22442 ;; Tracked objects:
 22443 ;;		On entry : 0/2
 22444 ;;		On exit  : 0/0
 22445 ;;		Unchanged: 0/0
 22446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22451 ;;Total ram usage:        0 bytes
 22452 ;; Hardware stack levels used:    1
 22453 ;; Hardware stack levels required when called:   16
 22454 ;; This function calls:
 22455 ;;		_PWM8_LoadDutyValue
 22456 ;; This function is called by:
 22457 ;;		_main
 22458 ;;		_check_help
 22459 ;; This function uses a reentrant model
 22460 ;;
 22461                           
 22462                           	psect	text83
 22463  01B592                     __ptext83:
 22464                           	opt callstack 0
 22465  01B592                     _mode_lamp_dim:
 22466                           	opt callstack 14
 22467                           
 22468                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 22469                           ;stkvar	_level @ sp[(0)+-2]
 22470                           
 22471                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22472                           ;incstack = 0
 22473  01B592  0EFE               	movlw	-2
 22474  01B594  006F FF8F FFE6     	movff	plusw1,postinc1
 22475  01B59A  006F FF8F FFE6     	movff	plusw1,postinc1
 22476  01B5A0  ECED  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22477                           
 22478                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 22479  01B5A4  52E5               	movf	postdec1,f,c
 22480  01B5A6  52E5               	movf	postdec1,f,c
 22481  01B5A8  0012               	return		;funcret
 22482  01B5AA                     __end_of_mode_lamp_dim:
 22483                           	opt callstack 0
 22484                           
 22485 ;; *************** function _mode_lamp_bright *****************
 22486 ;; Defined at:
 22487 ;;		line 18 in file "mconfig.c"
 22488 ;; Parameters:    Size  Location     Type
 22489 ;;		None
 22490 ;; Auto vars:     Size  Location     Type
 22491 ;;		None
 22492 ;; Return value:  Size  Location     Type
 22493 ;;                  1  [STACK] void 
 22494 ;; Registers used:
 22495 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22496 ;; Tracked objects:
 22497 ;;		On entry : 0/0
 22498 ;;		On exit  : 0/0
 22499 ;;		Unchanged: 0/0
 22500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22505 ;;Total ram usage:        0 bytes
 22506 ;; Hardware stack levels used:    1
 22507 ;; Hardware stack levels required when called:   16
 22508 ;; This function calls:
 22509 ;;		_PWM8_LoadDutyValue
 22510 ;; This function is called by:
 22511 ;;		_check_help
 22512 ;; This function uses a reentrant model
 22513 ;;
 22514                           
 22515                           	psect	text84
 22516  01B668                     __ptext84:
 22517                           	opt callstack 0
 22518  01B668                     _mode_lamp_bright:
 22519                           	opt callstack 13
 22520                           
 22521                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 22522                           
 22523                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22524                           ;incstack = 0
 22525  01B668  0E2C               	movlw	44
 22526  01B66A  6EE6               	movwf	postinc1,c
 22527  01B66C  0E01               	movlw	1
 22528  01B66E  6EE6               	movwf	postinc1,c
 22529  01B670  ECED  F0D5         	call	_PWM8_LoadDutyValue	;wreg free
 22530                           
 22531                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22532  01B674  0012               	return		;funcret
 22533  01B676                     __end_of_mode_lamp_bright:
 22534                           	opt callstack 0
 22535                           
 22536 ;; *************** function _PWM8_LoadDutyValue *****************
 22537 ;; Defined at:
 22538 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22539 ;; Parameters:    Size  Location     Type
 22540 ;;  dutyValue       2  [STACK] unsigned short 
 22541 ;; Auto vars:     Size  Location     Type
 22542 ;;		None
 22543 ;; Return value:  Size  Location     Type
 22544 ;;                  1  [STACK] void 
 22545 ;; Registers used:
 22546 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22547 ;; Tracked objects:
 22548 ;;		On entry : 0/2
 22549 ;;		On exit  : 0/0
 22550 ;;		Unchanged: 0/0
 22551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22554 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22555 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22556 ;;Total ram usage:        0 bytes
 22557 ;; Hardware stack levels used:    1
 22558 ;; Hardware stack levels required when called:   15
 22559 ;; This function calls:
 22560 ;;		Nothing
 22561 ;; This function is called by:
 22562 ;;		_mode_lamp_dim
 22563 ;;		_mode_lamp_bright
 22564 ;; This function uses a reentrant model
 22565 ;;
 22566                           
 22567                           	psect	text85
 22568  01ABDA                     __ptext85:
 22569                           	opt callstack 0
 22570  01ABDA                     _PWM8_LoadDutyValue:
 22571                           	opt callstack 14
 22572                           
 22573                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22574                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22575                           
 22576                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22577                           ;incstack = 0
 22578  01ABDA  0EFE               	movlw	-2
 22579  01ABDC  006F FF8C  F032    	movff	plusw1,btemp+10
 22580  01ABE2  0EFF               	movlw	-1
 22581  01ABE4  006F FF8C  F033    	movff	plusw1,btemp+11
 22582  01ABEA  90D8               	bcf	status,0,c
 22583  01ABEC  3233               	rrcf	(btemp+11)^0,f,c
 22584  01ABEE  3232               	rrcf	(btemp+10)^0,f,c
 22585  01ABF0  90D8               	bcf	status,0,c
 22586  01ABF2  3233               	rrcf	(btemp+11)^0,f,c
 22587  01ABF4  3232               	rrcf	(btemp+10)^0,f,c
 22588  01ABF6  5032               	movf	(btemp+10)^0,w,c
 22589  01ABF8  6E61               	movwf	97,c	;volatile
 22590                           
 22591                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22592                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22593  01ABFA  0EFE               	movlw	-2
 22594  01ABFC  006F FF8C  F033    	movff	plusw1,btemp+11
 22595  01AC02  0E03               	movlw	3
 22596  01AC04  1633               	andwf	(btemp+11)^0,f,c
 22597  01AC06  0E06               	movlw	6
 22598  01AC08  6E28               	movwf	btemp^0,c
 22599  01AC0A                     u8815:
 22600  01AC0A  90D8               	bcf	status,0,c
 22601  01AC0C  3633               	rlcf	(btemp+11)^0,f,c
 22602  01AC0E  2E28               	decfsz	btemp^0,f,c
 22603  01AC10  D7FC               	goto	u8815
 22604  01AC12  5033               	movf	(btemp+11)^0,w,c
 22605  01AC14  6E60               	movwf	96,c	;volatile
 22606                           
 22607                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22608  01AC16  52E5               	movf	postdec1,f,c
 22609  01AC18  52E5               	movf	postdec1,f,c
 22610  01AC1A  0012               	return		;funcret
 22611  01AC1C                     __end_of_PWM8_LoadDutyValue:
 22612                           	opt callstack 0
 22613                           
 22614 ;; *************** function _help_button *****************
 22615 ;; Defined at:
 22616 ;;		line 26 in file "mconfig.c"
 22617 ;; Parameters:    Size  Location     Type
 22618 ;;		None
 22619 ;; Auto vars:     Size  Location     Type
 22620 ;;		None
 22621 ;; Return value:  Size  Location     Type
 22622 ;;                  1  [STACK] _Bool 
 22623 ;; Registers used:
 22624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22625 ;; Tracked objects:
 22626 ;;		On entry : 0/2
 22627 ;;		On exit  : 0/0
 22628 ;;		Unchanged: 0/0
 22629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22634 ;;Total ram usage:        0 bytes
 22635 ;; Hardware stack levels used:    1
 22636 ;; Hardware stack levels required when called:   16
 22637 ;; This function calls:
 22638 ;;		_StartTimer
 22639 ;;		_TimerDone
 22640 ;; This function is called by:
 22641 ;;		_check_help
 22642 ;; This function uses a reentrant model
 22643 ;;
 22644                           
 22645                           	psect	text86
 22646  01AD94                     __ptext86:
 22647                           	opt callstack 0
 22648  01AD94                     _help_button:
 22649                           	opt callstack 13
 22650                           
 22651                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22652                           
 22653                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22654                           ;incstack = 0
 22655  01AD94  B0CB               	btfsc	203,0,c	;volatile
 22656  01AD96  D00C               	goto	l1655
 22657                           
 22658                           ;mconfig.c: 29:   V.help = 1;
 22659  01AD98  0102               	movlb	2	; () banked
 22660  01AD9A  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22661                           
 22662                           ; BSR set to: 2
 22663                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22664  01AD9C  0E08               	movlw	8
 22665  01AD9E  6EE6               	movwf	postinc1,c
 22666  01ADA0  EC8F  F0D8         	call	_TimerDone	;wreg free
 22667  01ADA4  5028               	movf	btemp^0,w,c
 22668  01ADA6  B4D8               	btfsc	status,2,c
 22669  01ADA8  D003               	goto	l1655
 22670                           
 22671                           ;mconfig.c: 31:    return 1;
 22672  01ADAA  0E01               	movlw	1
 22673  01ADAC  6E28               	movwf	btemp^0,c
 22674  01ADAE  0012               	return	
 22675  01ADB0                     l1655:
 22676                           
 22677                           ;mconfig.c: 34:  if (!V.help)
 22678  01ADB0  0102               	movlb	2	; () banked
 22679  01ADB2  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22680  01ADB4  D008               	goto	l10152
 22681                           
 22682                           ; BSR set to: 2
 22683                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22684  01ADB6  0E2C               	movlw	44
 22685  01ADB8  6EE6               	movwf	postinc1,c
 22686  01ADBA  0E01               	movlw	1
 22687  01ADBC  6EE6               	movwf	postinc1,c
 22688  01ADBE  0E08               	movlw	8
 22689  01ADC0  6EE6               	movwf	postinc1,c
 22690  01ADC2  EC0E  F0D6         	call	_StartTimer	;wreg free
 22691  01ADC6                     l10152:
 22692                           
 22693                           ;mconfig.c: 37:  return 0;
 22694  01ADC6  0E00               	movlw	0
 22695  01ADC8  6E28               	movwf	btemp^0,c
 22696                           
 22697                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22698  01ADCA  0012               	return		;funcret
 22699  01ADCC                     __end_of_help_button:
 22700                           	opt callstack 0
 22701                           
 22702 ;; *************** function _TimerDone *****************
 22703 ;; Defined at:
 22704 ;;		line 20 in file "timers.c"
 22705 ;; Parameters:    Size  Location     Type
 22706 ;;  timer           1  [STACK] const unsigned char 
 22707 ;; Auto vars:     Size  Location     Type
 22708 ;;		None
 22709 ;; Return value:  Size  Location     Type
 22710 ;;                  1  [STACK] _Bool 
 22711 ;; Registers used:
 22712 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22713 ;; Tracked objects:
 22714 ;;		On entry : 0/0
 22715 ;;		On exit  : 0/0
 22716 ;;		Unchanged: 0/0
 22717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22719 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22721 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22722 ;;Total ram usage:        0 bytes
 22723 ;; Hardware stack levels used:    1
 22724 ;; Hardware stack levels required when called:   15
 22725 ;; This function calls:
 22726 ;;		Nothing
 22727 ;; This function is called by:
 22728 ;;		_main
 22729 ;;		_WaitMs
 22730 ;;		_help_button
 22731 ;;		_check_help
 22732 ;;		_set_display_info
 22733 ;;		_update_adc_result
 22734 ;;		_esr_check
 22735 ;; This function uses a reentrant model
 22736 ;;
 22737                           
 22738                           	psect	text87
 22739  01B11E                     __ptext87:
 22740                           	opt callstack 0
 22741  01B11E                     _TimerDone:
 22742                           	opt callstack 14
 22743                           
 22744                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22745                           ;incstack = 0
 22746  01B11E  0004               	clrwdt		;# 
 22747                           
 22748                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22749                           ;stkvar	_timer @ sp[(0)+-1]
 22750  01B120  0EFF               	movlw	-1
 22751  01B122  50E3               	movf	plusw1,w,c
 22752  01B124  0D02               	mullw	2
 22753  01B126  0EE6               	movlw	low _tickCount
 22754  01B128  24F3               	addwf	243,w,c
 22755  01B12A  6ED9               	movwf	fsr2l,c
 22756  01B12C  0E02               	movlw	high _tickCount
 22757  01B12E  20F4               	addwfc	prodh,w,c
 22758  01B130  6EDA               	movwf	fsr2h,c
 22759  01B132  50DE               	movf	postinc2,w,c
 22760  01B134  10DE               	iorwf	postinc2,w,c
 22761  01B136  A4D8               	btfss	status,2,c
 22762  01B138  D002               	goto	l9378
 22763                           
 22764                           ;timers.c: 24:   return 1;
 22765  01B13A  0E01               	movlw	1
 22766  01B13C  D001               	goto	L25
 22767  01B13E                     l9378:
 22768                           
 22769                           ;timers.c: 26:  return 0;
 22770  01B13E  0E00               	movlw	0
 22771  01B140                     L25:
 22772  01B140  6E28               	movwf	btemp^0,c
 22773                           
 22774                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22775  01B142  52E5               	movf	postdec1,f,c
 22776  01B144  0012               	return		;funcret
 22777  01B146                     __end_of_TimerDone:
 22778                           	opt callstack 0
 22779                           
 22780 ;; *************** function _StartTimer *****************
 22781 ;; Defined at:
 22782 ;;		line 12 in file "timers.c"
 22783 ;; Parameters:    Size  Location     Type
 22784 ;;  timer           1  [STACK] const unsigned char 
 22785 ;;  count           2  [STACK] const unsigned short 
 22786 ;; Auto vars:     Size  Location     Type
 22787 ;;		None
 22788 ;; Return value:  Size  Location     Type
 22789 ;;                  1  [STACK] void 
 22790 ;; Registers used:
 22791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22792 ;; Tracked objects:
 22793 ;;		On entry : 0/0
 22794 ;;		On exit  : 0/0
 22795 ;;		Unchanged: 0/0
 22796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22801 ;;Total ram usage:        0 bytes
 22802 ;; Hardware stack levels used:    1
 22803 ;; Hardware stack levels required when called:   15
 22804 ;; This function calls:
 22805 ;;		Nothing
 22806 ;; This function is called by:
 22807 ;;		_main
 22808 ;;		_WaitMs
 22809 ;;		_help_button
 22810 ;;		_check_help
 22811 ;;		_update_adc_result
 22812 ;;		_calc_bsoc
 22813 ;;		_esr_check
 22814 ;; This function uses a reentrant model
 22815 ;;
 22816                           
 22817                           	psect	text88
 22818  01AC1C                     __ptext88:
 22819                           	opt callstack 0
 22820  01AC1C                     _StartTimer:
 22821                           	opt callstack 0
 22822                           
 22823                           ;timers.c: 12: void StartTimer(const uint8_t timer, const uint16_t count);timers.c: 13: 
      +                          {;timers.c: 14:  tickCount[timer] = count << 1;
 22824                           ;stkvar	_count @ sp[(0)+-3]
 22825                           
 22826                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22827                           ;incstack = 0
 22828 ;; hardware stack exceeded
 22829  01AC1C  0EFD               	movlw	-3
 22830  01AC1E  006F FF8C  F032    	movff	plusw1,btemp+10
 22831  01AC24  0EFE               	movlw	-2
 22832  01AC26  006F FF8C  F033    	movff	plusw1,btemp+11
 22833  01AC2C  90D8               	bcf	status,0,c
 22834  01AC2E  3432               	rlcf	(btemp+10)^0,w,c
 22835  01AC30  6E30               	movwf	(btemp+8)^0,c
 22836  01AC32  3433               	rlcf	(btemp+11)^0,w,c
 22837  01AC34  6E31               	movwf	(btemp+9)^0,c
 22838                           
 22839                           ;stkvar	_timer @ sp[(0)+-1]
 22840  01AC36  0EFF               	movlw	-1
 22841  01AC38  50E3               	movf	plusw1,w,c
 22842  01AC3A  0D02               	mullw	2
 22843  01AC3C  0EE6               	movlw	low _tickCount
 22844  01AC3E  24F3               	addwf	243,w,c
 22845  01AC40  6ED9               	movwf	fsr2l,c
 22846  01AC42  0E02               	movlw	high _tickCount
 22847  01AC44  20F4               	addwfc	prodh,w,c
 22848  01AC46  6EDA               	movwf	fsr2h,c
 22849  01AC48  0060  F0C3  FFDE   	movff	btemp+8,postinc2
 22850  01AC4E  0060  F0C7  FFDD   	movff	btemp+9,postdec2
 22851                           
 22852                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22853  01AC54  52E5               	movf	postdec1,f,c
 22854  01AC56  52E5               	movf	postdec1,f,c
 22855  01AC58  52E5               	movf	postdec1,f,c
 22856  01AC5A  0012               	return		;funcret
 22857  01AC5C                     __end_of_StartTimer:
 22858                           	opt callstack 0
 22859                           
 22860 ;; *************** function _display_info *****************
 22861 ;; Defined at:
 22862 ;;		line 190 in file "mconfig.c"
 22863 ;; Parameters:    Size  Location     Type
 22864 ;;		None
 22865 ;; Auto vars:     Size  Location     Type
 22866 ;;		None
 22867 ;; Return value:  Size  Location     Type
 22868 ;;                  1  [STACK] enum E16509
 22869 ;; Registers used:
 22870 ;;		btemp
 22871 ;; Tracked objects:
 22872 ;;		On entry : 0/2
 22873 ;;		On exit  : 0/0
 22874 ;;		Unchanged: 0/0
 22875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22880 ;;Total ram usage:        0 bytes
 22881 ;; Hardware stack levels used:    1
 22882 ;; Hardware stack levels required when called:   15
 22883 ;; This function calls:
 22884 ;;		Nothing
 22885 ;; This function is called by:
 22886 ;;		_check_help
 22887 ;; This function uses a reentrant model
 22888 ;;
 22889                           
 22890                           	psect	text89
 22891  01B6DE                     __ptext89:
 22892                           	opt callstack 0
 22893  01B6DE                     _display_info:
 22894                           	opt callstack 14
 22895                           
 22896                           ;mconfig.c: 192:  return V.response.info;
 22897                           
 22898                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22899                           ;incstack = 0
 22900  01B6DE  0060  FA90  F028   	movff	_V+164,btemp	;volatile
 22901                           
 22902                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22903  01B6E4  0012               	return		;funcret
 22904  01B6E6                     __end_of_display_info:
 22905                           	opt callstack 0
 22906                           
 22907 ;; *************** function _display_help *****************
 22908 ;; Defined at:
 22909 ;;		line 195 in file "mconfig.c"
 22910 ;; Parameters:    Size  Location     Type
 22911 ;;		None
 22912 ;; Auto vars:     Size  Location     Type
 22913 ;;		None
 22914 ;; Return value:  Size  Location     Type
 22915 ;;                  1  [STACK] enum E16509
 22916 ;; Registers used:
 22917 ;;		btemp
 22918 ;; Tracked objects:
 22919 ;;		On entry : 3F/2
 22920 ;;		On exit  : 0/0
 22921 ;;		Unchanged: 0/0
 22922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22927 ;;Total ram usage:        0 bytes
 22928 ;; Hardware stack levels used:    1
 22929 ;; Hardware stack levels required when called:   15
 22930 ;; This function calls:
 22931 ;;		Nothing
 22932 ;; This function is called by:
 22933 ;;		_check_help
 22934 ;; This function uses a reentrant model
 22935 ;;
 22936                           
 22937                           	psect	text90
 22938  01B6E6                     __ptext90:
 22939                           	opt callstack 0
 22940  01B6E6                     _display_help:
 22941                           	opt callstack 14
 22942                           
 22943                           ;mconfig.c: 197:  return V.response.help_temp;
 22944                           
 22945                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22946                           ;incstack = 0
 22947  01B6E6  0060  FA94  F028   	movff	_V+165,btemp	;volatile
 22948                           
 22949                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22950  01B6EC  0012               	return		;funcret
 22951  01B6EE                     __end_of_display_help:
 22952                           	opt callstack 0
 22953                           
 22954 ;; *************** function _check_enter_button *****************
 22955 ;; Defined at:
 22956 ;;		line 42 in file "hid.c"
 22957 ;; Parameters:    Size  Location     Type
 22958 ;;  h               1  [STACK] PTR struct H_data
 22959 ;;		 -> H(7), 
 22960 ;; Auto vars:     Size  Location     Type
 22961 ;;		None
 22962 ;; Return value:  Size  Location     Type
 22963 ;;                  1  [STACK] _Bool 
 22964 ;; Registers used:
 22965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 22966 ;; Tracked objects:
 22967 ;;		On entry : 0/0
 22968 ;;		On exit  : 0/0
 22969 ;;		Unchanged: 0/0
 22970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22975 ;;Total ram usage:        0 bytes
 22976 ;; Hardware stack levels used:    1
 22977 ;; Hardware stack levels required when called:   15
 22978 ;; This function calls:
 22979 ;;		Nothing
 22980 ;; This function is called by:
 22981 ;;		_main
 22982 ;; This function uses a reentrant model
 22983 ;;
 22984                           
 22985                           	psect	text91
 22986  01AC5C                     __ptext91:
 22987                           	opt callstack 0
 22988  01AC5C                     _check_enter_button:
 22989                           	opt callstack 15
 22990                           
 22991                           ;hid.c: 42: _Bool check_enter_button(H_data* h);hid.c: 43: {;hid.c: 44:  if (!h->wait_en
      +                          ter && (h->enter_p == SW_OFF)) {
 22992                           ;stkvar	_h @ sp[(0)+-1]
 22993                           
 22994                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22995                           ;incstack = 0
 22996  01AC5C  0EFF               	movlw	-1
 22997  01AC5E  50E3               	movf	plusw1,w,c
 22998  01AC60  6ED9               	movwf	fsr2l,c
 22999  01AC62  6ADA               	clrf	fsr2h,c
 23000  01AC64  0E04               	movlw	4
 23001  01AC66  26D9               	addwf	fsr2l,f,c
 23002  01AC68  50DF               	movf	indf2,w,c
 23003  01AC6A  A4D8               	btfss	status,2,c
 23004  01AC6C  D013               	goto	l10748
 23005                           
 23006                           ;stkvar	_h @ sp[(0)+-1]
 23007  01AC6E  0EFF               	movlw	-1
 23008  01AC70  50E3               	movf	plusw1,w,c
 23009  01AC72  6ED9               	movwf	fsr2l,c
 23010  01AC74  6ADA               	clrf	fsr2h,c
 23011  01AC76  0E05               	movlw	5
 23012  01AC78  26D9               	addwf	fsr2l,f,c
 23013  01AC7A  50DF               	movf	indf2,w,c
 23014  01AC7C  A4D8               	btfss	status,2,c
 23015  01AC7E  D00A               	goto	l10748
 23016                           
 23017                           ;hid.c: 45:   h->wait_enter = 1;
 23018                           ;stkvar	_h @ sp[(0)+-1]
 23019  01AC80  0EFF               	movlw	-1
 23020  01AC82  50E3               	movf	plusw1,w,c
 23021  01AC84  6ED9               	movwf	fsr2l,c
 23022  01AC86  6ADA               	clrf	fsr2h,c
 23023  01AC88  0E04               	movlw	4
 23024  01AC8A  26D9               	addwf	fsr2l,f,c
 23025  01AC8C  0E01               	movlw	1
 23026  01AC8E  6EDF               	movwf	indf2,c
 23027                           
 23028                           ;hid.c: 46:   return 1;
 23029  01AC90  0E01               	movlw	1
 23030  01AC92  D001               	goto	L26
 23031  01AC94                     l10748:
 23032                           
 23033                           ;hid.c: 48:  return 0;
 23034  01AC94  0E00               	movlw	0
 23035  01AC96                     L26:
 23036  01AC96  6E28               	movwf	btemp^0,c
 23037                           
 23038                           ; _check_enter_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
 23039  01AC98  52E5               	movf	postdec1,f,c
 23040  01AC9A  0012               	return		;funcret
 23041  01AC9C                     __end_of_check_enter_button:
 23042                           	opt callstack 0
 23043                           
 23044 ;; *************** function _calc_ror_data *****************
 23045 ;; Defined at:
 23046 ;;		line 101 in file "mbmc.c"
 23047 ;; Parameters:    Size  Location     Type
 23048 ;;		None
 23049 ;; Auto vars:     Size  Location     Type
 23050 ;;		None
 23051 ;; Return value:  Size  Location     Type
 23052 ;;                  1  [STACK] void 
 23053 ;; Registers used:
 23054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23055 ;; Tracked objects:
 23056 ;;		On entry : 0/39
 23057 ;;		On exit  : 0/0
 23058 ;;		Unchanged: 0/0
 23059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23064 ;;Total ram usage:        0 bytes
 23065 ;; Hardware stack levels used:    1
 23066 ;; Hardware stack levels required when called:   18
 23067 ;; This function calls:
 23068 ;;		___flge
 23069 ;;		___flsub
 23070 ;;		_conv_raw_result
 23071 ;;		_fabsf
 23072 ;; This function is called by:
 23073 ;;		_main
 23074 ;; This function uses a reentrant model
 23075 ;;
 23076                           
 23077                           	psect	text92
 23078  01828A                     __ptext92:
 23079                           	opt callstack 0
 23080  01828A                     _calc_ror_data:
 23081                           	opt callstack 12
 23082                           
 23083                           ;mbmc.c: 103:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 105:  C.bc_ror = fabsf(con
      +                          v_raw_result(C_BATT, CONV) - bcror);
 23084                           
 23085                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23086                           ;incstack = 0
 23087  01828A  0060  F21B  FFE6   	movff	calc_ror_data@bcror,postinc1
 23088  018290  0060  F21F  FFE6   	movff	calc_ror_data@bcror+1,postinc1
 23089  018296  0060  F223  FFE6   	movff	calc_ror_data@bcror+2,postinc1
 23090  01829C  0060  F227  FFE6   	movff	calc_ror_data@bcror+3,postinc1
 23091  0182A2  0E00               	movlw	0
 23092  0182A4  6EE6               	movwf	postinc1,c
 23093  0182A6  0E00               	movlw	0
 23094  0182A8  6EE6               	movwf	postinc1,c
 23095  0182AA  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23096  0182AE  0060  F0A3  FFE6   	movff	btemp,postinc1
 23097  0182B4  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23098  0182BA  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23099  0182C0  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23100  0182C6  EC3F  F0D5         	call	___flsub	;wreg free
 23101  0182CA  0060  F0A3  FFE6   	movff	btemp,postinc1
 23102  0182D0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23103  0182D6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23104  0182DC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23105  0182E2  ECF7  F0CD         	call	_fabsf	;wreg free
 23106  0182E6  0060  F0A0  F16C   	movff	btemp,_C+108	;volatile
 23107  0182EC  0060  F0A4  F16D   	movff	btemp+1,_C+109	;volatile
 23108  0182F2  0060  F0A8  F16E   	movff	btemp+2,_C+110	;volatile
 23109  0182F8  0060  F0AC  F16F   	movff	btemp+3,_C+111	;volatile
 23110                           
 23111                           ;mbmc.c: 106:  bcror = conv_raw_result(C_BATT, CONV);
 23112  0182FE  0E00               	movlw	0
 23113  018300  6EE6               	movwf	postinc1,c
 23114  018302  0E00               	movlw	0
 23115  018304  6EE6               	movwf	postinc1,c
 23116  018306  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23117  01830A  0060  F0A0  F086   	movff	btemp,calc_ror_data@bcror
 23118  018310  0060  F0A4  F087   	movff	btemp+1,calc_ror_data@bcror+1
 23119  018316  0060  F0A8  F088   	movff	btemp+2,calc_ror_data@bcror+2
 23120  01831C  0060  F0AC  F089   	movff	btemp+3,calc_ror_data@bcror+3
 23121                           
 23122                           ;mbmc.c: 107:  C.bv_ror = fabsf(conv_raw_result(V_BAT, CONV) - bvror);
 23123  018322  0060  F22B  FFE6   	movff	calc_ror_data@bvror,postinc1
 23124  018328  0060  F22F  FFE6   	movff	calc_ror_data@bvror+1,postinc1
 23125  01832E  0060  F233  FFE6   	movff	calc_ror_data@bvror+2,postinc1
 23126  018334  0060  F237  FFE6   	movff	calc_ror_data@bvror+3,postinc1
 23127  01833A  0E00               	movlw	0
 23128  01833C  6EE6               	movwf	postinc1,c
 23129  01833E  0E04               	movlw	4
 23130  018340  6EE6               	movwf	postinc1,c
 23131  018342  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23132  018346  0060  F0A3  FFE6   	movff	btemp,postinc1
 23133  01834C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23134  018352  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23135  018358  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23136  01835E  EC3F  F0D5         	call	___flsub	;wreg free
 23137  018362  0060  F0A3  FFE6   	movff	btemp,postinc1
 23138  018368  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23139  01836E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23140  018374  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23141  01837A  ECF7  F0CD         	call	_fabsf	;wreg free
 23142  01837E  0060  F0A0  F168   	movff	btemp,_C+104	;volatile
 23143  018384  0060  F0A4  F169   	movff	btemp+1,_C+105	;volatile
 23144  01838A  0060  F0A8  F16A   	movff	btemp+2,_C+106	;volatile
 23145  018390  0060  F0AC  F16B   	movff	btemp+3,_C+107	;volatile
 23146                           
 23147                           ;mbmc.c: 108:  if (C.bv_ror < 0.0051)
 23148  018396  0EE7               	movlw	231
 23149  018398  6EE6               	movwf	postinc1,c
 23150  01839A  0E1D               	movlw	29
 23151  01839C  6EE6               	movwf	postinc1,c
 23152  01839E  0EA7               	movlw	167
 23153  0183A0  6EE6               	movwf	postinc1,c
 23154  0183A2  0E3B               	movlw	59
 23155  0183A4  6EE6               	movwf	postinc1,c
 23156  0183A6  0060  F5A3  FFE6   	movff	_C+104,postinc1
 23157  0183AC  0060  F5A7  FFE6   	movff	_C+105,postinc1
 23158  0183B2  0060  F5AB  FFE6   	movff	_C+106,postinc1
 23159  0183B8  0060  F5AF  FFE6   	movff	_C+107,postinc1
 23160  0183BE  EC70  F0C3         	call	___flge	;wreg free
 23161  0183C2  B028               	btfsc	btemp& (0+255),0,c
 23162  0183C4  D009               	goto	l10542
 23163                           
 23164                           ;mbmc.c: 109:   C.bv_ror = 0.0140 + 0.0001;
 23165  0183C6  0EB0               	movlw	176
 23166  0183C8  0101               	movlb	1	; () banked
 23167  0183CA  6F68               	movwf	(_C+104)& (0+255),b	;volatile
 23168  0183CC  0E03               	movlw	3
 23169  0183CE  6F69               	movwf	(_C+105)& (0+255),b	;volatile
 23170  0183D0  0E67               	movlw	103
 23171  0183D2  6F6A               	movwf	(_C+106)& (0+255),b	;volatile
 23172  0183D4  0E3C               	movlw	60
 23173  0183D6  6F6B               	movwf	(_C+107)& (0+255),b	;volatile
 23174  0183D8                     l10542:
 23175                           
 23176                           ;mbmc.c: 110:  bvror = conv_raw_result(V_BAT, CONV);
 23177  0183D8  0E00               	movlw	0
 23178  0183DA  6EE6               	movwf	postinc1,c
 23179  0183DC  0E04               	movlw	4
 23180  0183DE  6EE6               	movwf	postinc1,c
 23181  0183E0  EC58  F0A7         	call	_conv_raw_result	;wreg free
 23182  0183E4  0060  F0A0  F08A   	movff	btemp,calc_ror_data@bvror
 23183  0183EA  0060  F0A4  F08B   	movff	btemp+1,calc_ror_data@bvror+1
 23184  0183F0  0060  F0A8  F08C   	movff	btemp+2,calc_ror_data@bvror+2
 23185  0183F6  0060  F0AC  F08D   	movff	btemp+3,calc_ror_data@bvror+3
 23186                           
 23187                           ; _calc_ror_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
 23188  0183FC  0012               	return		;funcret
 23189  0183FE                     __end_of_calc_ror_data:
 23190                           	opt callstack 0
 23191                           
 23192 ;; *************** function _fabsf *****************
 23193 ;; Defined at:
 23194 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fabsf.c"
 23195 ;; Parameters:    Size  Location     Type
 23196 ;;  x               4  [STACK] float 
 23197 ;; Auto vars:     Size  Location     Type
 23198 ;;  u               4  [STACK] struct .
 23199 ;; Return value:  Size  Location     Type
 23200 ;;                  4  [STACK] float 
 23201 ;; Registers used:
 23202 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23203 ;; Tracked objects:
 23204 ;;		On entry : 0/0
 23205 ;;		On exit  : 0/0
 23206 ;;		Unchanged: 0/0
 23207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23212 ;;Total ram usage:        0 bytes
 23213 ;; Hardware stack levels used:    1
 23214 ;; Hardware stack levels required when called:   15
 23215 ;; This function calls:
 23216 ;;		Nothing
 23217 ;; This function is called by:
 23218 ;;		_main
 23219 ;;		_calc_ror_data
 23220 ;;		_calc_bsoc
 23221 ;;		_esr_check
 23222 ;; This function uses a reentrant model
 23223 ;;
 23224                           
 23225                           	psect	text93
 23226  019BEE                     __ptext93:
 23227                           	opt callstack 0
 23228  019BEE                     _fabsf:
 23229                           	opt callstack 0
 23230                           
 23231                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23232  019BEE  52E6               	movf	postinc1,f,c
 23233  019BF0  52E6               	movf	postinc1,f,c
 23234  019BF2  52E6               	movf	postinc1,f,c
 23235  019BF4  52E6               	movf	postinc1,f,c
 23236                           
 23237                           ;incstack = 0
 23238 ;; hardware stack exceeded
 23239  019BF6  0060  F1F8  F030   	movff	fabsf@F463,btemp+8
 23240  019BFC  0060  F1FC  F031   	movff	fabsf@F463+1,btemp+9
 23241  019C02  0060  F200  F032   	movff	fabsf@F463+2,btemp+10
 23242  019C08  0060  F204  F033   	movff	fabsf@F463+3,btemp+11
 23243                           
 23244                           ;stkvar	_u @ sp[(-4)+0]
 23245  019C0E  0EFC               	movlw	-4
 23246  019C10  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23247  019C16  0EFD               	movlw	-3
 23248  019C18  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23249  019C1E  0EFE               	movlw	-2
 23250  019C20  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23251  019C26  0EFF               	movlw	-1
 23252  019C28  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23253                           
 23254                           ;stkvar	_x @ sp[(-4)+-4]
 23255  019C2E  0EF8               	movlw	-8
 23256  019C30  006F FF8C  F030    	movff	plusw1,btemp+8
 23257  019C36  0EF9               	movlw	-7
 23258  019C38  006F FF8C  F031    	movff	plusw1,btemp+9
 23259  019C3E  0EFA               	movlw	-6
 23260  019C40  006F FF8C  F032    	movff	plusw1,btemp+10
 23261  019C46  0EFB               	movlw	-5
 23262  019C48  006F FF8C  F033    	movff	plusw1,btemp+11
 23263                           
 23264                           ;stkvar	_u @ sp[(-4)+0]
 23265  019C4E  0EFC               	movlw	-4
 23266  019C50  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23267  019C56  0EFD               	movlw	-3
 23268  019C58  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23269  019C5E  0EFE               	movlw	-2
 23270  019C60  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23271  019C66  0EFF               	movlw	-1
 23272  019C68  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23273                           
 23274                           ;stkvar	_u @ sp[(-4)+0]
 23275  019C6E  0EFF               	movlw	-1
 23276  019C70  9EE3               	bcf	plusw1,7,c
 23277                           
 23278                           ;stkvar	_u @ sp[(-4)+0]
 23279  019C72  0EFC               	movlw	-4
 23280  019C74  006F FF8C  F028    	movff	plusw1,btemp
 23281  019C7A  0EFD               	movlw	-3
 23282  019C7C  006F FF8C  F029    	movff	plusw1,btemp+1
 23283  019C82  0EFE               	movlw	-2
 23284  019C84  006F FF8C  F02A    	movff	plusw1,btemp+2
 23285  019C8A  0EFF               	movlw	-1
 23286  019C8C  006F FF8C  F02B    	movff	plusw1,btemp+3
 23287                           
 23288                           ; _fabsf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 23289  019C92  0EF8               	movlw	248
 23290  019C94  26E1               	addwf	fsr1l,f,c
 23291  019C96  0EFF               	movlw	255
 23292  019C98  22E2               	addwfc	fsr1h,f,c
 23293  019C9A  0012               	return		;funcret
 23294  019C9C                     __end_of_fabsf:
 23295                           	opt callstack 0
 23296                           
 23297 ;; *************** function _conv_raw_result *****************
 23298 ;; Defined at:
 23299 ;;		line 95 in file "daq.c"
 23300 ;; Parameters:    Size  Location     Type
 23301 ;;  chan            1  [STACK] const enum E16582
 23302 ;;  to_what         1  [STACK] const enum E16644
 23303 ;; Auto vars:     Size  Location     Type
 23304 ;;		None
 23305 ;; Return value:  Size  Location     Type
 23306 ;;                  4  [STACK] float 
 23307 ;; Registers used:
 23308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 23309 ;; Tracked objects:
 23310 ;;		On entry : 0/39
 23311 ;;		On exit  : 0/0
 23312 ;;		Unchanged: 0/0
 23313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23318 ;;Total ram usage:        0 bytes
 23319 ;; Hardware stack levels used:    1
 23320 ;; Hardware stack levels required when called:   17
 23321 ;; This function calls:
 23322 ;;		___fldiv
 23323 ;;		___flmul
 23324 ;;		___flsub
 23325 ;;		___xxtofl
 23326 ;;		_get_raw_result
 23327 ;;		_nanf
 23328 ;; This function is called by:
 23329 ;;		_main
 23330 ;;		_convert_adc_data
 23331 ;;		_calc_ror_data
 23332 ;;		_init_bsoc
 23333 ;;		_esr_check
 23334 ;; This function uses a reentrant model
 23335 ;;
 23336                           
 23337                           	psect	text94
 23338  014EB0                     __ptext94:
 23339                           	opt callstack 0
 23340  014EB0                     _conv_raw_result:
 23341                           	opt callstack 12
 23342                           
 23343                           ;daq.c: 95: float conv_raw_result(const adcc_channel_t chan, const adc_conv_t to_what);d
      +                          aq.c: 96: {;daq.c: 98:  switch (to_what) {
 23344                           
 23345                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23346                           ;incstack = 0
 23347  014EB0  D242               	goto	l10082
 23348  014EB2                     l10028:
 23349                           
 23350                           ;daq.c: 100:   if (!(0b0011110001110111 >> chan & 0x1))
 23351                           ;stkvar	_chan @ sp[(0)+-1]
 23352  014EB2  0EFF               	movlw	-1
 23353  014EB4  006F FF8C  F033    	movff	plusw1,btemp+11
 23354  014EBA  0E77               	movlw	119
 23355  014EBC  6E30               	movwf	(btemp+8)^0,c
 23356  014EBE  0E3C               	movlw	60
 23357  014EC0  6E31               	movwf	(btemp+9)^0,c
 23358  014EC2  2A33               	incf	(btemp+11)^0,f,c
 23359  014EC4  D003               	goto	u9074
 23360  014EC6                     u9075:
 23361  014EC6  3431               	rlcf	(btemp+9)^0,w,c
 23362  014EC8  3231               	rrcf	(btemp+9)^0,f,c
 23363  014ECA  3230               	rrcf	(btemp+8)^0,f,c
 23364  014ECC                     u9074:
 23365  014ECC  2E33               	decfsz	(btemp+11)^0,f,c
 23366  014ECE  D7FB               	goto	u9075
 23367  014ED0  B030               	btfsc	(btemp+8)^0,0,c
 23368  014ED2  D007               	goto	l10034
 23369                           
 23370                           ;daq.c: 101:    return nanf("");
 23371  014ED4  0EBB               	movlw	low (STR_65+84)
 23372  014ED6  6EE6               	movwf	postinc1,c
 23373  014ED8  0EFC               	movlw	high (STR_65+84)
 23374  014EDA  6EE6               	movwf	postinc1,c
 23375  014EDC  EC49  F0D3         	call	_nanf	;wreg free
 23376  014EE0  D23A               	goto	l1774
 23377  014EE2                     l10034:
 23378                           
 23379                           ;daq.c: 103:   if (0b0000000000000011 >> chan & 0x1) {
 23380                           ;stkvar	_chan @ sp[(0)+-1]
 23381  014EE2  0EFF               	movlw	-1
 23382  014EE4  006F FF8C  F033    	movff	plusw1,btemp+11
 23383  014EEA  0E03               	movlw	3
 23384  014EEC  6E30               	movwf	(btemp+8)^0,c
 23385  014EEE  0E00               	movlw	0
 23386  014EF0  6E31               	movwf	(btemp+9)^0,c
 23387  014EF2  2A33               	incf	(btemp+11)^0,f,c
 23388  014EF4  D003               	goto	u9094
 23389  014EF6                     u9095:
 23390  014EF6  3431               	rlcf	(btemp+9)^0,w,c
 23391  014EF8  3231               	rrcf	(btemp+9)^0,f,c
 23392  014EFA  3230               	rrcf	(btemp+8)^0,f,c
 23393  014EFC                     u9094:
 23394  014EFC  2E33               	decfsz	(btemp+11)^0,f,c
 23395  014EFE  D7FB               	goto	u9095
 23396  014F00  A030               	btfss	(btemp+8)^0,0,c
 23397  014F02  D0EB               	goto	l10048
 23398                           
 23399                           ;daq.c: 104:    if (0b0000000000000001 >> chan & 0x1) {
 23400                           ;stkvar	_chan @ sp[(0)+-1]
 23401  014F04  0EFF               	movlw	-1
 23402  014F06  006F FF8C  F033    	movff	plusw1,btemp+11
 23403  014F0C  0E01               	movlw	1
 23404  014F0E  6E30               	movwf	(btemp+8)^0,c
 23405  014F10  0E00               	movlw	0
 23406  014F12  6E31               	movwf	(btemp+9)^0,c
 23407  014F14  2A33               	incf	(btemp+11)^0,f,c
 23408  014F16  D003               	goto	u9114
 23409  014F18                     u9115:
 23410  014F18  3431               	rlcf	(btemp+9)^0,w,c
 23411  014F1A  3231               	rrcf	(btemp+9)^0,f,c
 23412  014F1C  3230               	rrcf	(btemp+8)^0,f,c
 23413  014F1E                     u9114:
 23414  014F1E  2E33               	decfsz	(btemp+11)^0,f,c
 23415  014F20  D7FB               	goto	u9115
 23416  014F22  A030               	btfss	(btemp+8)^0,0,c
 23417  014F24  D06D               	goto	l10044
 23418                           
 23419                           ;daq.c: 105:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[0]) * 0.0850
      +                          000;
 23420  014F26  0E7B               	movlw	123
 23421  014F28  6EE6               	movwf	postinc1,c
 23422  014F2A  0E14               	movlw	20
 23423  014F2C  6EE6               	movwf	postinc1,c
 23424  014F2E  0EAE               	movlw	174
 23425  014F30  6EE6               	movwf	postinc1,c
 23426  014F32  0E3D               	movlw	61
 23427  014F34  6EE6               	movwf	postinc1,c
 23428  014F36  0060  F390  F030   	movff	_R+32,btemp+8	;volatile
 23429  014F3C  0060  F394  F031   	movff	_R+33,btemp+9	;volatile
 23430  014F42  0E00               	movlw	0
 23431  014F44  BE31               	btfsc	(btemp+9)^0,7,c
 23432  014F46  0EFF               	movlw	255
 23433  014F48  6E32               	movwf	(btemp+10)^0,c
 23434  014F4A  6E33               	movwf	(btemp+11)^0,c
 23435  014F4C  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 23436  014F52  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 23437  014F58  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 23438  014F5E  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 23439  014F64  0E01               	movlw	1
 23440  014F66  6EE6               	movwf	postinc1,c
 23441  014F68  ECDA  F0BC         	call	___xxtofl	;wreg free
 23442  014F6C  0060  F0A3  FFE6   	movff	btemp,postinc1
 23443  014F72  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23444  014F78  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23445  014F7E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23446                           
 23447                           ;stkvar	_chan @ sp[(-8)+-1]
 23448  014F84  0EF7               	movlw	-9
 23449  014F86  50E3               	movf	plusw1,w,c
 23450  014F88  6EE6               	movwf	postinc1,c
 23451  014F8A  EC74  F0DA         	call	_get_raw_result	;wreg free
 23452  014F8E  0060  F0A0  F032   	movff	btemp,btemp+10
 23453  014F94  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23454  014F9A  5032               	movf	(btemp+10)^0,w,c
 23455  014F9C  6E2C               	movwf	(btemp+4)^0,c
 23456  014F9E  5033               	movf	(btemp+11)^0,w,c
 23457  014FA0  6E2D               	movwf	(btemp+5)^0,c
 23458  014FA2  6A2E               	clrf	(btemp+6)^0,c
 23459  014FA4  6A2F               	clrf	(btemp+7)^0,c
 23460  014FA6  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23461  014FAC  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23462  014FB2  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23463  014FB8  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23464  014FBE  0E00               	movlw	0
 23465  014FC0  6EE6               	movwf	postinc1,c
 23466  014FC2  ECDA  F0BC         	call	___xxtofl	;wreg free
 23467  014FC6  0060  F0A3  FFE6   	movff	btemp,postinc1
 23468  014FCC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23469  014FD2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23470  014FD8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23471  014FDE  EC3F  F0D5         	call	___flsub	;wreg free
 23472  014FE2  0060  F0A3  FFE6   	movff	btemp,postinc1
 23473  014FE8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23474  014FEE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23475  014FF4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23476  014FFA  EC0F  F099         	call	___flmul	;wreg free
 23477  014FFE  D1AB               	goto	l1774
 23478  015000                     l10044:
 23479                           
 23480                           ;daq.c: 107:     return((float) (int16_t) get_raw_result(chan) - R.n_offset[1]) * 0.0350
      +                          000;
 23481  015000  0E29               	movlw	41
 23482  015002  6EE6               	movwf	postinc1,c
 23483  015004  0E5C               	movlw	92
 23484  015006  6EE6               	movwf	postinc1,c
 23485  015008  0E0F               	movlw	15
 23486  01500A  6EE6               	movwf	postinc1,c
 23487  01500C  0E3D               	movlw	61
 23488  01500E  6EE6               	movwf	postinc1,c
 23489  015010  0060  F398  F030   	movff	_R+34,btemp+8	;volatile
 23490  015016  0060  F39C  F031   	movff	_R+35,btemp+9	;volatile
 23491  01501C  0E00               	movlw	0
 23492  01501E  BE31               	btfsc	(btemp+9)^0,7,c
 23493  015020  0EFF               	movlw	255
 23494  015022  6E32               	movwf	(btemp+10)^0,c
 23495  015024  6E33               	movwf	(btemp+11)^0,c
 23496  015026  0060  F0C3  FFE6   	movff	btemp+8,postinc1
 23497  01502C  0060  F0C7  FFE6   	movff	btemp+9,postinc1
 23498  015032  0060  F0CB  FFE6   	movff	btemp+10,postinc1
 23499  015038  0060  F0CF  FFE6   	movff	btemp+11,postinc1
 23500  01503E  0E01               	movlw	1
 23501  015040  6EE6               	movwf	postinc1,c
 23502  015042  ECDA  F0BC         	call	___xxtofl	;wreg free
 23503  015046  0060  F0A3  FFE6   	movff	btemp,postinc1
 23504  01504C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23505  015052  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23506  015058  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23507                           
 23508                           ;stkvar	_chan @ sp[(-8)+-1]
 23509  01505E  0EF7               	movlw	-9
 23510  015060  50E3               	movf	plusw1,w,c
 23511  015062  6EE6               	movwf	postinc1,c
 23512  015064  EC74  F0DA         	call	_get_raw_result	;wreg free
 23513  015068  0060  F0A0  F032   	movff	btemp,btemp+10
 23514  01506E  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23515  015074  5032               	movf	(btemp+10)^0,w,c
 23516  015076  6E2C               	movwf	(btemp+4)^0,c
 23517  015078  5033               	movf	(btemp+11)^0,w,c
 23518  01507A  6E2D               	movwf	(btemp+5)^0,c
 23519  01507C  6A2E               	clrf	(btemp+6)^0,c
 23520  01507E  6A2F               	clrf	(btemp+7)^0,c
 23521  015080  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23522  015086  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23523  01508C  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23524  015092  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23525  015098  0E00               	movlw	0
 23526  01509A  6EE6               	movwf	postinc1,c
 23527  01509C  ECDA  F0BC         	call	___xxtofl	;wreg free
 23528  0150A0  0060  F0A3  FFE6   	movff	btemp,postinc1
 23529  0150A6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23530  0150AC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23531  0150B2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23532  0150B8  EC3F  F0D5         	call	___flsub	;wreg free
 23533  0150BC  0060  F0A3  FFE6   	movff	btemp,postinc1
 23534  0150C2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23535  0150C8  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23536  0150CE  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23537  0150D4  EC0F  F099         	call	___flmul	;wreg free
 23538  0150D8  D13E               	goto	l1774
 23539  0150DA                     l10048:
 23540                           
 23541                           ;daq.c: 110:    if (0b0000100000000000 >> chan & 0x1) {
 23542                           ;stkvar	_chan @ sp[(0)+-1]
 23543  0150DA  0EFF               	movlw	-1
 23544  0150DC  006F FF8C  F033    	movff	plusw1,btemp+11
 23545  0150E2  0E00               	movlw	0
 23546  0150E4  6E30               	movwf	(btemp+8)^0,c
 23547  0150E6  0E08               	movlw	8
 23548  0150E8  6E31               	movwf	(btemp+9)^0,c
 23549  0150EA  2A33               	incf	(btemp+11)^0,f,c
 23550  0150EC  D003               	goto	u9134
 23551  0150EE                     u9135:
 23552  0150EE  3431               	rlcf	(btemp+9)^0,w,c
 23553  0150F0  3231               	rrcf	(btemp+9)^0,f,c
 23554  0150F2  3230               	rrcf	(btemp+8)^0,f,c
 23555  0150F4                     u9134:
 23556  0150F4  2E33               	decfsz	(btemp+11)^0,f,c
 23557  0150F6  D7FB               	goto	u9135
 23558  0150F8  A030               	btfss	(btemp+8)^0,0,c
 23559  0150FA  D008               	goto	l10056
 23560                           
 23561                           ;daq.c: 111:     return 25.0;
 23562  0150FC  0E00               	movlw	0
 23563  0150FE  6E28               	movwf	btemp^0,c
 23564  015100  0E00               	movlw	0
 23565  015102  6E29               	movwf	(btemp+1)^0,c
 23566  015104  0EC8               	movlw	200
 23567  015106  6E2A               	movwf	(btemp+2)^0,c
 23568  015108  0E41               	movlw	65
 23569  01510A  D113               	goto	L27
 23570  01510C                     l10056:
 23571                           
 23572                           ;daq.c: 113:     return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23573  01510C  0E00               	movlw	0
 23574  01510E  6EE6               	movwf	postinc1,c
 23575  015110  0E00               	movlw	0
 23576  015112  6EE6               	movwf	postinc1,c
 23577  015114  0E7A               	movlw	122
 23578  015116  6EE6               	movwf	postinc1,c
 23579  015118  0E44               	movlw	68
 23580  01511A  6EE6               	movwf	postinc1,c
 23581  01511C  0E61               	movlw	97
 23582  01511E  6EE6               	movwf	postinc1,c
 23583  015120  0E03               	movlw	3
 23584  015122  6EE6               	movwf	postinc1,c
 23585  015124  0E84               	movlw	132
 23586  015126  6EE6               	movwf	postinc1,c
 23587  015128  0E40               	movlw	64
 23588  01512A  6EE6               	movwf	postinc1,c
 23589                           
 23590                           ;stkvar	_chan @ sp[(-8)+-1]
 23591  01512C  0EF7               	movlw	-9
 23592  01512E  50E3               	movf	plusw1,w,c
 23593  015130  6EE6               	movwf	postinc1,c
 23594  015132  EC74  F0DA         	call	_get_raw_result	;wreg free
 23595  015136  0060  F0A0  F032   	movff	btemp,btemp+10
 23596  01513C  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23597  015142  5032               	movf	(btemp+10)^0,w,c
 23598  015144  6E2C               	movwf	(btemp+4)^0,c
 23599  015146  5033               	movf	(btemp+11)^0,w,c
 23600  015148  6E2D               	movwf	(btemp+5)^0,c
 23601  01514A  6A2E               	clrf	(btemp+6)^0,c
 23602  01514C  6A2F               	clrf	(btemp+7)^0,c
 23603  01514E  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23604  015154  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23605  01515A  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23606  015160  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23607  015166  0E00               	movlw	0
 23608  015168  6EE6               	movwf	postinc1,c
 23609  01516A  ECDA  F0BC         	call	___xxtofl	;wreg free
 23610  01516E  0060  F0A3  FFE6   	movff	btemp,postinc1
 23611  015174  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23612  01517A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23613  015180  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23614  015186  EC0F  F099         	call	___flmul	;wreg free
 23615  01518A  0060  F0A3  FFE6   	movff	btemp,postinc1
 23616  015190  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23617  015196  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23618  01519C  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23619  0151A2  EC9B  F0A4         	call	___fldiv	;wreg free
 23620  0151A6  D0D7               	goto	l1774
 23621  0151A8                     l10060:
 23622                           
 23623                           ;daq.c: 118:   if (0b0000000000000011 >> chan & 0x1 || 0b0000100000000000 >> chan & 0x1)
 23624                           ;stkvar	_chan @ sp[(0)+-1]
 23625  0151A8  0EFF               	movlw	-1
 23626  0151AA  006F FF8C  F033    	movff	plusw1,btemp+11
 23627  0151B0  0E03               	movlw	3
 23628  0151B2  6E30               	movwf	(btemp+8)^0,c
 23629  0151B4  0E00               	movlw	0
 23630  0151B6  6E31               	movwf	(btemp+9)^0,c
 23631  0151B8  2A33               	incf	(btemp+11)^0,f,c
 23632  0151BA  D003               	goto	u9154
 23633  0151BC                     u9155:
 23634  0151BC  3431               	rlcf	(btemp+9)^0,w,c
 23635  0151BE  3231               	rrcf	(btemp+9)^0,f,c
 23636  0151C0  3230               	rrcf	(btemp+8)^0,f,c
 23637  0151C2                     u9154:
 23638  0151C2  2E33               	decfsz	(btemp+11)^0,f,c
 23639  0151C4  D7FB               	goto	u9155
 23640  0151C6  B030               	btfsc	(btemp+8)^0,0,c
 23641  0151C8  D011               	goto	u9180
 23642                           
 23643                           ;stkvar	_chan @ sp[(0)+-1]
 23644  0151CA  0EFF               	movlw	-1
 23645  0151CC  006F FF8C  F033    	movff	plusw1,btemp+11
 23646  0151D2  0E00               	movlw	0
 23647  0151D4  6E30               	movwf	(btemp+8)^0,c
 23648  0151D6  0E08               	movlw	8
 23649  0151D8  6E31               	movwf	(btemp+9)^0,c
 23650  0151DA  2A33               	incf	(btemp+11)^0,f,c
 23651  0151DC  D003               	goto	u9174
 23652  0151DE                     u9175:
 23653  0151DE  3431               	rlcf	(btemp+9)^0,w,c
 23654  0151E0  3231               	rrcf	(btemp+9)^0,f,c
 23655  0151E2  3230               	rrcf	(btemp+8)^0,f,c
 23656  0151E4                     u9174:
 23657  0151E4  2E33               	decfsz	(btemp+11)^0,f,c
 23658  0151E6  D7FB               	goto	u9175
 23659  0151E8  A030               	btfss	(btemp+8)^0,0,c
 23660  0151EA  D04E               	goto	l10068
 23661  0151EC                     u9180:
 23662                           
 23663                           ;daq.c: 119:    return((float) get_raw_result(chan) * 0.6250000) / 1000.0;
 23664  0151EC  0E00               	movlw	0
 23665  0151EE  6EE6               	movwf	postinc1,c
 23666  0151F0  0E00               	movlw	0
 23667  0151F2  6EE6               	movwf	postinc1,c
 23668  0151F4  0E7A               	movlw	122
 23669  0151F6  6EE6               	movwf	postinc1,c
 23670  0151F8  0E44               	movlw	68
 23671  0151FA  6EE6               	movwf	postinc1,c
 23672  0151FC  0E00               	movlw	0
 23673  0151FE  6EE6               	movwf	postinc1,c
 23674  015200  0E00               	movlw	0
 23675  015202  6EE6               	movwf	postinc1,c
 23676  015204  0E20               	movlw	32
 23677  015206  6EE6               	movwf	postinc1,c
 23678  015208  0E3F               	movlw	63
 23679  01520A  6EE6               	movwf	postinc1,c
 23680                           
 23681                           ;stkvar	_chan @ sp[(-8)+-1]
 23682  01520C  0EF7               	movlw	-9
 23683  01520E  50E3               	movf	plusw1,w,c
 23684  015210  6EE6               	movwf	postinc1,c
 23685  015212  EC74  F0DA         	call	_get_raw_result	;wreg free
 23686  015216  0060  F0A0  F032   	movff	btemp,btemp+10
 23687  01521C  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23688  015222  5032               	movf	(btemp+10)^0,w,c
 23689  015224  6E2C               	movwf	(btemp+4)^0,c
 23690  015226  5033               	movf	(btemp+11)^0,w,c
 23691  015228  6E2D               	movwf	(btemp+5)^0,c
 23692  01522A  6A2E               	clrf	(btemp+6)^0,c
 23693  01522C  6A2F               	clrf	(btemp+7)^0,c
 23694  01522E  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23695  015234  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23696  01523A  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23697  015240  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23698  015246  0E00               	movlw	0
 23699  015248  6EE6               	movwf	postinc1,c
 23700  01524A  ECDA  F0BC         	call	___xxtofl	;wreg free
 23701  01524E  0060  F0A3  FFE6   	movff	btemp,postinc1
 23702  015254  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23703  01525A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23704  015260  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23705  015266  EC0F  F099         	call	___flmul	;wreg free
 23706  01526A  0060  F0A3  FFE6   	movff	btemp,postinc1
 23707  015270  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23708  015276  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23709  01527C  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23710  015282  EC9B  F0A4         	call	___fldiv	;wreg free
 23711  015286  D067               	goto	l1774
 23712  015288                     l10068:
 23713                           
 23714                           ;daq.c: 121:   return((float) get_raw_result(chan) * 4.1254125) / 1000.0;
 23715  015288  0E00               	movlw	0
 23716  01528A  6EE6               	movwf	postinc1,c
 23717  01528C  0E00               	movlw	0
 23718  01528E  6EE6               	movwf	postinc1,c
 23719  015290  0E7A               	movlw	122
 23720  015292  6EE6               	movwf	postinc1,c
 23721  015294  0E44               	movlw	68
 23722  015296  6EE6               	movwf	postinc1,c
 23723  015298  0E61               	movlw	97
 23724  01529A  6EE6               	movwf	postinc1,c
 23725  01529C  0E03               	movlw	3
 23726  01529E  6EE6               	movwf	postinc1,c
 23727  0152A0  0E84               	movlw	132
 23728  0152A2  6EE6               	movwf	postinc1,c
 23729  0152A4  0E40               	movlw	64
 23730  0152A6  6EE6               	movwf	postinc1,c
 23731                           
 23732                           ;stkvar	_chan @ sp[(-8)+-1]
 23733  0152A8  0EF7               	movlw	-9
 23734  0152AA  50E3               	movf	plusw1,w,c
 23735  0152AC  6EE6               	movwf	postinc1,c
 23736  0152AE  EC74  F0DA         	call	_get_raw_result	;wreg free
 23737  0152B2  0060  F0A0  F032   	movff	btemp,btemp+10
 23738  0152B8  0060  F0A4  F033   	movff	btemp+1,btemp+11
 23739  0152BE  5032               	movf	(btemp+10)^0,w,c
 23740  0152C0  6E2C               	movwf	(btemp+4)^0,c
 23741  0152C2  5033               	movf	(btemp+11)^0,w,c
 23742  0152C4  6E2D               	movwf	(btemp+5)^0,c
 23743  0152C6  6A2E               	clrf	(btemp+6)^0,c
 23744  0152C8  6A2F               	clrf	(btemp+7)^0,c
 23745  0152CA  0060  F0B3  FFE6   	movff	btemp+4,postinc1
 23746  0152D0  0060  F0B7  FFE6   	movff	btemp+5,postinc1
 23747  0152D6  0060  F0BB  FFE6   	movff	btemp+6,postinc1
 23748  0152DC  0060  F0BF  FFE6   	movff	btemp+7,postinc1
 23749  0152E2  0E00               	movlw	0
 23750  0152E4  6EE6               	movwf	postinc1,c
 23751  0152E6  ECDA  F0BC         	call	___xxtofl	;wreg free
 23752  0152EA  0060  F0A3  FFE6   	movff	btemp,postinc1
 23753  0152F0  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23754  0152F6  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23755  0152FC  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23756  015302  EC0F  F099         	call	___flmul	;wreg free
 23757  015306  0060  F0A3  FFE6   	movff	btemp,postinc1
 23758  01530C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 23759  015312  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 23760  015318  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 23761  01531E  EC9B  F0A4         	call	___fldiv	;wreg free
 23762  015322  D019               	goto	l1774
 23763  015324                     l10074:
 23764                           
 23765                           ;daq.c: 124:   return 0.0;
 23766  015324  0E00               	movlw	0
 23767  015326  6E28               	movwf	btemp^0,c
 23768  015328  0E00               	movlw	0
 23769  01532A  6E29               	movwf	(btemp+1)^0,c
 23770  01532C  0E00               	movlw	0
 23771  01532E  6E2A               	movwf	(btemp+2)^0,c
 23772  015330  0E00               	movlw	0
 23773  015332                     L27:
 23774  015332  6E2B               	movwf	(btemp+3)^0,c
 23775  015334  D010               	goto	l1774
 23776  015336                     l10082:
 23777                           
 23778                           ;stkvar	_to_what @ sp[(0)+-2]
 23779  015336  0EFE               	movlw	-2
 23780  015338  50E3               	movf	plusw1,w,c
 23781  01533A  6E32               	movwf	(btemp+10)^0,c
 23782  01533C  6A33               	clrf	(btemp+11)^0,c
 23783                           
 23784                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23785                           ; Switch size 1, requested type "simple"
 23786                           ; Number of cases is 1, Range of values is 0 to 0
 23787                           ; switch strategies available:
 23788                           ; Name         Instructions Cycles
 23789                           ; simple_byte            4     3 (average)
 23790                           ;	Chosen strategy is simple_byte
 23791  01533E  5033               	movf	(btemp+11)^0,w,c
 23792  015340  0A00               	xorlw	0	; case 0
 23793  015342  A4D8               	btfss	status,2,c
 23794  015344  D7EF               	goto	l10074
 23795                           
 23796                           ; Switch size 1, requested type "simple"
 23797                           ; Number of cases is 2, Range of values is 0 to 1
 23798                           ; switch strategies available:
 23799                           ; Name         Instructions Cycles
 23800                           ; simple_byte            7     4 (average)
 23801                           ;	Chosen strategy is simple_byte
 23802  015346  5032               	movf	(btemp+10)^0,w,c
 23803  015348  0A00               	xorlw	0	; case 0
 23804  01534A  B4D8               	btfsc	status,2,c
 23805  01534C  D5B2               	goto	l10028
 23806  01534E  0A01               	xorlw	1	; case 1
 23807  015350  B4D8               	btfsc	status,2,c
 23808  015352  D72A               	goto	l10060
 23809  015354  D7E7               	goto	l10074
 23810  015356                     l1774:
 23811                           
 23812                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 23813  015356  52E5               	movf	postdec1,f,c
 23814  015358  52E5               	movf	postdec1,f,c
 23815  01535A  0012               	return		;funcret
 23816  01535C                     __end_of_conv_raw_result:
 23817                           	opt callstack 0
 23818                           
 23819 ;; *************** function _nanf *****************
 23820 ;; Defined at:
 23821 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
 23822 ;; Parameters:    Size  Location     Type
 23823 ;;  s               2  [STACK] PTR const unsigned char 
 23824 ;;		 -> STR_102(1), STR_64(1), 
 23825 ;; Auto vars:     Size  Location     Type
 23826 ;;  u               4  [STACK] struct .
 23827 ;; Return value:  Size  Location     Type
 23828 ;;                  4  [STACK] float 
 23829 ;; Registers used:
 23830 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
 23831 ;; Tracked objects:
 23832 ;;		On entry : 0/39
 23833 ;;		On exit  : 0/0
 23834 ;;		Unchanged: 0/0
 23835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23840 ;;Total ram usage:        0 bytes
 23841 ;; Hardware stack levels used:    1
 23842 ;; Hardware stack levels required when called:   15
 23843 ;; This function calls:
 23844 ;;		Nothing
 23845 ;; This function is called by:
 23846 ;;		_conv_raw_result
 23847 ;; This function uses a reentrant model
 23848 ;;
 23849                           
 23850                           	psect	text95
 23851  01A692                     __ptext95:
 23852                           	opt callstack 0
 23853  01A692                     _nanf:
 23854                           	opt callstack 0
 23855                           
 23856                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23857  01A692  52E6               	movf	postinc1,f,c
 23858  01A694  52E6               	movf	postinc1,f,c
 23859  01A696  52E6               	movf	postinc1,f,c
 23860  01A698  52E6               	movf	postinc1,f,c
 23861                           
 23862                           ;incstack = 0
 23863  01A69A  0EFF               	movlw	255
 23864  01A69C  6E30               	movwf	(btemp+8)^0,c
 23865  01A69E  0EFF               	movlw	255
 23866  01A6A0  6E31               	movwf	(btemp+9)^0,c
 23867  01A6A2  0EFF               	movlw	255
 23868  01A6A4  6E32               	movwf	(btemp+10)^0,c
 23869  01A6A6  0E7F               	movlw	127
 23870  01A6A8  6E33               	movwf	(btemp+11)^0,c
 23871                           
 23872                           ;stkvar	_u @ sp[(-4)+0]
 23873  01A6AA  0EFC               	movlw	-4
 23874  01A6AC  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 23875  01A6B2  0EFD               	movlw	-3
 23876  01A6B4  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 23877  01A6BA  0EFE               	movlw	-2
 23878  01A6BC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 23879  01A6C2  0EFF               	movlw	-1
 23880  01A6C4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 23881                           
 23882                           ;stkvar	_u @ sp[(-4)+0]
 23883  01A6CA  0EFC               	movlw	-4
 23884  01A6CC  006F FF8C  F028    	movff	plusw1,btemp
 23885  01A6D2  0EFD               	movlw	-3
 23886  01A6D4  006F FF8C  F029    	movff	plusw1,btemp+1
 23887  01A6DA  0EFE               	movlw	-2
 23888  01A6DC  006F FF8C  F02A    	movff	plusw1,btemp+2
 23889  01A6E2  0EFF               	movlw	-1
 23890  01A6E4  006F FF8C  F02B    	movff	plusw1,btemp+3
 23891                           
 23892                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 23893  01A6EA  0EFA               	movlw	250
 23894  01A6EC  26E1               	addwf	fsr1l,f,c
 23895  01A6EE  0EFF               	movlw	255
 23896  01A6F0  22E2               	addwfc	fsr1h,f,c
 23897  01A6F2  0012               	return		;funcret
 23898  01A6F4                     __end_of_nanf:
 23899                           	opt callstack 0
 23900                           
 23901 ;; *************** function _get_raw_result *****************
 23902 ;; Defined at:
 23903 ;;		line 87 in file "daq.c"
 23904 ;; Parameters:    Size  Location     Type
 23905 ;;  index           1  [STACK] const enum E16582
 23906 ;; Auto vars:     Size  Location     Type
 23907 ;;		None
 23908 ;; Return value:  Size  Location     Type
 23909 ;;                  2  [STACK] unsigned short 
 23910 ;; Registers used:
 23911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
 23912 ;; Tracked objects:
 23913 ;;		On entry : 0/2
 23914 ;;		On exit  : 0/0
 23915 ;;		Unchanged: 0/0
 23916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23921 ;;Total ram usage:        0 bytes
 23922 ;; Hardware stack levels used:    1
 23923 ;; Hardware stack levels required when called:   15
 23924 ;; This function calls:
 23925 ;;		Nothing
 23926 ;; This function is called by:
 23927 ;;		_main
 23928 ;;		_conv_raw_result
 23929 ;; This function uses a reentrant model
 23930 ;;
 23931                           
 23932                           	psect	text96
 23933  01B4E8                     __ptext96:
 23934                           	opt callstack 0
 23935  01B4E8                     _get_raw_result:
 23936                           	opt callstack 13
 23937                           
 23938                           ;daq.c: 87: adc_result_t get_raw_result(const adcc_channel_t index);daq.c: 88: {;daq.c: 
      +                          89:  return R.raw_adc[index];
 23939                           ;stkvar	_index @ sp[(0)+-1]
 23940                           
 23941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23942                           ;incstack = 0
 23943  01B4E8  0EFF               	movlw	-1
 23944  01B4EA  50E3               	movf	plusw1,w,c
 23945  01B4EC  0D02               	mullw	2
 23946  01B4EE  50F3               	movf	243,w,c
 23947  01B4F0  0FC4               	addlw	low _R
 23948  01B4F2  6ED9               	movwf	fsr2l,c
 23949  01B4F4  6ADA               	clrf	fsr2h,c
 23950  01B4F6  006F FF78  F028    	movff	postinc2,btemp
 23951  01B4FC  006F FF74  F029    	movff	postdec2,btemp+1
 23952                           
 23953                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
 23954  01B502  52E5               	movf	postdec1,f,c
 23955  01B504  0012               	return		;funcret
 23956  01B506                     __end_of_get_raw_result:
 23957                           	opt callstack 0
 23958                           
 23959 ;; *************** function ___xxtofl *****************
 23960 ;; Defined at:
 23961 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
 23962 ;; Parameters:    Size  Location     Type
 23963 ;;  sign            1  [STACK] unsigned char 
 23964 ;;  val             4  [STACK] long 
 23965 ;; Auto vars:     Size  Location     Type
 23966 ;;  arg             4  [STACK] unsigned long 
 23967 ;;  exp             1  [STACK] unsigned char 
 23968 ;; Return value:  Size  Location     Type
 23969 ;;                  4  [STACK] unsigned char 
 23970 ;; Registers used:
 23971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 23972 ;; Tracked objects:
 23973 ;;		On entry : 0/1
 23974 ;;		On exit  : 0/0
 23975 ;;		Unchanged: 0/0
 23976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23981 ;;Total ram usage:        0 bytes
 23982 ;; Hardware stack levels used:    1
 23983 ;; Hardware stack levels required when called:   15
 23984 ;; This function calls:
 23985 ;;		Nothing
 23986 ;; This function is called by:
 23987 ;;		_conv_raw_result
 23988 ;;		_init_bsoc
 23989 ;; This function uses a reentrant model
 23990 ;;
 23991                           
 23992                           	psect	text97
 23993  0179B4                     __ptext97:
 23994                           	opt callstack 0
 23995  0179B4                     ___xxtofl:
 23996                           	opt callstack 0
 23997                           
 23998                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23999  0179B4  0E05               	movlw	5
 24000  0179B6  26E1               	addwf	fsr1l,f,c
 24001  0179B8  0E00               	movlw	0
 24002  0179BA  22E2               	addwfc	fsr1h,f,c
 24003                           
 24004                           ;stkvar	_sign @ sp[(-5)+-1]
 24005                           
 24006                           ;incstack = 0
 24007  0179BC  0EFA               	movlw	-6
 24008  0179BE  50E3               	movf	plusw1,w,c
 24009  0179C0  B4D8               	btfsc	status,2,c
 24010  0179C2  D01D               	goto	l9564
 24011                           
 24012                           ;stkvar	_val @ sp[(-5)+-5]
 24013  0179C4  0EF9               	movlw	-7
 24014  0179C6  AEE3               	btfss	plusw1,7,c
 24015  0179C8  D01A               	goto	l9564
 24016                           
 24017                           ;stkvar	_val @ sp[(-5)+-5]
 24018  0179CA  0EF6               	movlw	-10
 24019  0179CC  006F FF8C  F030    	movff	plusw1,btemp+8
 24020  0179D2  0EF7               	movlw	-9
 24021  0179D4  006F FF8C  F031    	movff	plusw1,btemp+9
 24022  0179DA  0EF8               	movlw	-8
 24023  0179DC  006F FF8C  F032    	movff	plusw1,btemp+10
 24024  0179E2  0EF9               	movlw	-7
 24025  0179E4  006F FF8C  F033    	movff	plusw1,btemp+11
 24026  0179EA  1E30               	comf	(btemp+8)^0,f,c
 24027  0179EC  1E31               	comf	(btemp+9)^0,f,c
 24028  0179EE  1E32               	comf	(btemp+10)^0,f,c
 24029  0179F0  1E33               	comf	(btemp+11)^0,f,c
 24030  0179F2  2A30               	incf	(btemp+8)^0,f,c
 24031  0179F4  0E00               	movlw	0
 24032  0179F6  2231               	addwfc	(btemp+9)^0,f,c
 24033  0179F8  2232               	addwfc	(btemp+10)^0,f,c
 24034  0179FA  2233               	addwfc	(btemp+11)^0,f,c
 24035  0179FC  D010               	goto	L28
 24036  0179FE                     l9564:
 24037                           
 24038                           ;stkvar	_val @ sp[(-5)+-5]
 24039  0179FE  0EF6               	movlw	-10
 24040  017A00  006F FF8C  F030    	movff	plusw1,btemp+8
 24041  017A06  0EF7               	movlw	-9
 24042  017A08  006F FF8C  F031    	movff	plusw1,btemp+9
 24043  017A0E  0EF8               	movlw	-8
 24044  017A10  006F FF8C  F032    	movff	plusw1,btemp+10
 24045  017A16  0EF9               	movlw	-7
 24046  017A18  006F FF8C  F033    	movff	plusw1,btemp+11
 24047  017A1E                     L28:
 24048                           
 24049                           ;stkvar	_arg @ sp[(-5)+0]
 24050  017A1E  0EFB               	movlw	-5
 24051  017A20  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24052  017A26  0EFC               	movlw	-4
 24053  017A28  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24054  017A2E  0EFD               	movlw	-3
 24055  017A30  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24056  017A36  0EFE               	movlw	-2
 24057  017A38  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24058                           
 24059                           ;stkvar	_val @ sp[(-5)+-5]
 24060  017A3E  0EF6               	movlw	-10
 24061  017A40  50E3               	movf	plusw1,w,c
 24062  017A42  E113               	bnz	l9572
 24063  017A44  0EF7               	movlw	-9
 24064  017A46  50E3               	movf	plusw1,w,c
 24065  017A48  E110               	bnz	l9572
 24066  017A4A  0EF8               	movlw	-8
 24067  017A4C  50E3               	movf	plusw1,w,c
 24068  017A4E  E10D               	bnz	l9572
 24069  017A50  0EF9               	movlw	-7
 24070  017A52  50E3               	movf	plusw1,w,c
 24071  017A54  A4D8               	btfss	status,2,c
 24072  017A56  D009               	goto	l9572
 24073  017A58  0E00               	movlw	0
 24074  017A5A  6E28               	movwf	btemp^0,c
 24075  017A5C  0E00               	movlw	0
 24076  017A5E  6E29               	movwf	(btemp+1)^0,c
 24077  017A60  0E00               	movlw	0
 24078  017A62  6E2A               	movwf	(btemp+2)^0,c
 24079  017A64  0E00               	movlw	0
 24080  017A66  6E2B               	movwf	(btemp+3)^0,c
 24081  017A68  D0A2               	goto	l3015
 24082  017A6A                     l9572:
 24083  017A6A  0E96               	movlw	150
 24084  017A6C  6E33               	movwf	(btemp+11)^0,c
 24085                           
 24086                           ;stkvar	_exp @ sp[(-5)+4]
 24087  017A6E  0EFF               	movlw	-1
 24088  017A70  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24089  017A76  D00B               	goto	l9576
 24090  017A78                     l9574:
 24091                           
 24092                           ;stkvar	_exp @ sp[(-5)+4]
 24093  017A78  0EFF               	movlw	-1
 24094  017A7A  2AE3               	incf	plusw1,f,c
 24095                           
 24096                           ;stkvar	_arg @ sp[(-5)+0]
 24097  017A7C  90D8               	bcf	status,0,c
 24098  017A7E  0EFE               	movlw	-2
 24099  017A80  32E3               	rrcf	plusw1,f,c
 24100  017A82  0EFD               	movlw	-3
 24101  017A84  32E3               	rrcf	plusw1,f,c
 24102  017A86  0EFC               	movlw	-4
 24103  017A88  32E3               	rrcf	plusw1,f,c
 24104  017A8A  0EFB               	movlw	-5
 24105  017A8C  32E3               	rrcf	plusw1,f,c
 24106  017A8E                     l9576:
 24107                           
 24108                           ;stkvar	_arg @ sp[(-5)+0]
 24109  017A8E  50E1               	movf	fsr1l,w,c
 24110  017A90  0FFB               	addlw	-5
 24111  017A92  6ED9               	movwf	fsr2l,c
 24112  017A94  50E2               	movf	fsr1h,w,c
 24113  017A96  6EDA               	movwf	fsr2h,c
 24114  017A98  0EFF               	movlw	255
 24115  017A9A  22DA               	addwfc	fsr2h,f,c
 24116  017A9C  52DE               	movf	postinc2,f,c
 24117  017A9E  52DE               	movf	postinc2,f,c
 24118  017AA0  52DE               	movf	postinc2,f,c
 24119  017AA2  0EFE               	movlw	254
 24120  017AA4  14DD               	andwf	postdec2,w,c
 24121  017AA6  B4D8               	btfsc	status,2,c
 24122  017AA8  D018               	goto	l9584
 24123  017AAA  D7E6               	goto	l9574
 24124  017AAC                     l9578:
 24125                           
 24126                           ;stkvar	_exp @ sp[(-5)+4]
 24127  017AAC  0EFF               	movlw	-1
 24128  017AAE  2AE3               	incf	plusw1,f,c
 24129                           
 24130                           ;stkvar	_arg @ sp[(-5)+0]
 24131  017AB0  50E1               	movf	fsr1l,w,c
 24132  017AB2  0FFB               	addlw	-5
 24133  017AB4  6ED9               	movwf	fsr2l,c
 24134  017AB6  50E2               	movf	fsr1h,w,c
 24135  017AB8  6EDA               	movwf	fsr2h,c
 24136  017ABA  0EFF               	movlw	255
 24137  017ABC  22DA               	addwfc	fsr2h,f,c
 24138  017ABE  2ADE               	incf	postinc2,f,c
 24139  017AC0  0E00               	movlw	0
 24140  017AC2  22DE               	addwfc	postinc2,f,c
 24141  017AC4  22DE               	addwfc	postinc2,f,c
 24142  017AC6  22DE               	addwfc	postinc2,f,c
 24143                           
 24144                           ;stkvar	_arg @ sp[(-5)+0]
 24145  017AC8  90D8               	bcf	status,0,c
 24146  017ACA  0EFE               	movlw	-2
 24147  017ACC  32E3               	rrcf	plusw1,f,c
 24148  017ACE  0EFD               	movlw	-3
 24149  017AD0  32E3               	rrcf	plusw1,f,c
 24150  017AD2  0EFC               	movlw	-4
 24151  017AD4  32E3               	rrcf	plusw1,f,c
 24152  017AD6  0EFB               	movlw	-5
 24153  017AD8  32E3               	rrcf	plusw1,f,c
 24154  017ADA                     l9584:
 24155                           
 24156                           ;stkvar	_arg @ sp[(-5)+0]
 24157  017ADA  50E1               	movf	fsr1l,w,c
 24158  017ADC  0FFB               	addlw	-5
 24159  017ADE  6ED9               	movwf	fsr2l,c
 24160  017AE0  50E2               	movf	fsr1h,w,c
 24161  017AE2  6EDA               	movwf	fsr2h,c
 24162  017AE4  0EFF               	movlw	255
 24163  017AE6  22DA               	addwfc	fsr2h,f,c
 24164  017AE8  52DE               	movf	postinc2,f,c
 24165  017AEA  52DE               	movf	postinc2,f,c
 24166  017AEC  52DE               	movf	postinc2,f,c
 24167  017AEE  0EFF               	movlw	255
 24168  017AF0  14DD               	andwf	postdec2,w,c
 24169  017AF2  B4D8               	btfsc	status,2,c
 24170  017AF4  D00C               	goto	l9588
 24171  017AF6  D7DA               	goto	l9578
 24172  017AF8                     l9586:
 24173                           
 24174                           ;stkvar	_exp @ sp[(-5)+4]
 24175  017AF8  0EFF               	movlw	-1
 24176  017AFA  06E3               	decf	plusw1,f,c
 24177                           
 24178                           ;stkvar	_arg @ sp[(-5)+0]
 24179  017AFC  90D8               	bcf	status,0,c
 24180  017AFE  0EFB               	movlw	-5
 24181  017B00  36E3               	rlcf	plusw1,f,c
 24182  017B02  0EFC               	movlw	-4
 24183  017B04  36E3               	rlcf	plusw1,f,c
 24184  017B06  0EFD               	movlw	-3
 24185  017B08  36E3               	rlcf	plusw1,f,c
 24186  017B0A  0EFE               	movlw	-2
 24187  017B0C  36E3               	rlcf	plusw1,f,c
 24188  017B0E                     l9588:
 24189                           
 24190                           ;stkvar	_arg @ sp[(-5)+0]
 24191  017B0E  0EFD               	movlw	-3
 24192  017B10  BEE3               	btfsc	plusw1,7,c
 24193  017B12  D007               	goto	u8920
 24194                           
 24195                           ;stkvar	_exp @ sp[(-5)+4]
 24196  017B14  0EFF               	movlw	-1
 24197  017B16  006F FF8C  F028    	movff	plusw1,btemp
 24198  017B1C  0E02               	movlw	2
 24199  017B1E  6028               	cpfslt	btemp^0,c
 24200  017B20  D7EB               	goto	l9586
 24201  017B22                     u8920:
 24202                           
 24203                           ;stkvar	_exp @ sp[(-5)+4]
 24204  017B22  0EFF               	movlw	-1
 24205  017B24  B0E3               	btfsc	plusw1,0,c
 24206  017B26  D002               	goto	l9596
 24207                           
 24208                           ;stkvar	_arg @ sp[(-5)+0]
 24209  017B28  0EFD               	movlw	-3
 24210  017B2A  9EE3               	bcf	plusw1,7,c
 24211  017B2C                     l9596:
 24212                           
 24213                           ;stkvar	_exp @ sp[(-5)+4]
 24214  017B2C  50E1               	movf	fsr1l,w,c
 24215  017B2E  0FFF               	addlw	-1
 24216  017B30  6ED9               	movwf	fsr2l,c
 24217  017B32  50E2               	movf	fsr1h,w,c
 24218  017B34  6EDA               	movwf	fsr2h,c
 24219  017B36  0EFF               	movlw	255
 24220  017B38  22DA               	addwfc	fsr2h,f,c
 24221  017B3A  90D8               	bcf	status,0,c
 24222  017B3C  32DF               	rrcf	indf2,f,c
 24223                           
 24224                           ;stkvar	_exp @ sp[(-5)+4]
 24225  017B3E  0EFF               	movlw	-1
 24226  017B40  006F FF8C  F033    	movff	plusw1,btemp+11
 24227  017B46  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 24228  017B4C  6A2D               	clrf	(btemp+5)^0,c
 24229  017B4E  6A2E               	clrf	(btemp+6)^0,c
 24230  017B50  6A2F               	clrf	(btemp+7)^0,c
 24231  017B52  0060  F0B0  F02F   	movff	btemp+4,btemp+7
 24232  017B58  6A2E               	clrf	(btemp+6)^0,c
 24233  017B5A  6A2D               	clrf	(btemp+5)^0,c
 24234  017B5C  6A2C               	clrf	(btemp+4)^0,c
 24235                           
 24236                           ;stkvar	_arg @ sp[(-5)+0]
 24237  017B5E  50E1               	movf	fsr1l,w,c
 24238  017B60  0FFB               	addlw	-5
 24239  017B62  6ED9               	movwf	fsr2l,c
 24240  017B64  50E2               	movf	fsr1h,w,c
 24241  017B66  6EDA               	movwf	fsr2h,c
 24242  017B68  0EFF               	movlw	255
 24243  017B6A  22DA               	addwfc	fsr2h,f,c
 24244  017B6C  502C               	movf	(btemp+4)^0,w,c
 24245  017B6E  12DE               	iorwf	postinc2,f,c
 24246  017B70  502D               	movf	(btemp+5)^0,w,c
 24247  017B72  12DE               	iorwf	postinc2,f,c
 24248  017B74  502E               	movf	(btemp+6)^0,w,c
 24249  017B76  12DE               	iorwf	postinc2,f,c
 24250  017B78  502F               	movf	(btemp+7)^0,w,c
 24251  017B7A  12DE               	iorwf	postinc2,f,c
 24252                           
 24253                           ;stkvar	_sign @ sp[(-5)+-1]
 24254  017B7C  0EFA               	movlw	-6
 24255  017B7E  50E3               	movf	plusw1,w,c
 24256  017B80  B4D8               	btfsc	status,2,c
 24257  017B82  D005               	goto	l9606
 24258                           
 24259                           ;stkvar	_val @ sp[(-5)+-5]
 24260  017B84  0EF9               	movlw	-7
 24261  017B86  AEE3               	btfss	plusw1,7,c
 24262  017B88  D002               	goto	l9606
 24263                           
 24264                           ;stkvar	_arg @ sp[(-5)+0]
 24265  017B8A  0EFE               	movlw	-2
 24266  017B8C  8EE3               	bsf	plusw1,7,c
 24267  017B8E                     l9606:
 24268                           
 24269                           ;stkvar	_arg @ sp[(-5)+0]
 24270  017B8E  0EFB               	movlw	-5
 24271  017B90  006F FF8C  F028    	movff	plusw1,btemp
 24272  017B96  0EFC               	movlw	-4
 24273  017B98  006F FF8C  F029    	movff	plusw1,btemp+1
 24274  017B9E  0EFD               	movlw	-3
 24275  017BA0  006F FF8C  F02A    	movff	plusw1,btemp+2
 24276  017BA6  0EFE               	movlw	-2
 24277  017BA8  006F FF8C  F02B    	movff	plusw1,btemp+3
 24278  017BAE                     l3015:
 24279                           
 24280                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 24281  017BAE  0EF6               	movlw	246
 24282  017BB0  26E1               	addwf	fsr1l,f,c
 24283  017BB2  0EFF               	movlw	255
 24284  017BB4  22E2               	addwfc	fsr1h,f,c
 24285  017BB6  0012               	return		;funcret
 24286  017BB8                     __end_of___xxtofl:
 24287                           	opt callstack 0
 24288                           
 24289 ;; *************** function ___fldiv *****************
 24290 ;; Defined at:
 24291 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 24292 ;; Parameters:    Size  Location     Type
 24293 ;;  b               4  [STACK] unsigned char 
 24294 ;;  a               4  [STACK] unsigned char 
 24295 ;; Auto vars:     Size  Location     Type
 24296 ;;  grs             4  [STACK] unsigned long 
 24297 ;;  rem             4  [STACK] unsigned long 
 24298 ;;  new_exp         2  [STACK] short 
 24299 ;;  aexp            1  [STACK] unsigned char 
 24300 ;;  bexp            1  [STACK] unsigned char 
 24301 ;;  sign            1  [STACK] unsigned char 
 24302 ;; Return value:  Size  Location     Type
 24303 ;;                  4  [STACK] unsigned char 
 24304 ;; Registers used:
 24305 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 24306 ;; Tracked objects:
 24307 ;;		On entry : 0/1
 24308 ;;		On exit  : 0/0
 24309 ;;		Unchanged: 0/0
 24310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24315 ;;Total ram usage:        0 bytes
 24316 ;; Hardware stack levels used:    1
 24317 ;; Hardware stack levels required when called:   15
 24318 ;; This function calls:
 24319 ;;		Nothing
 24320 ;; This function is called by:
 24321 ;;		_conv_raw_result
 24322 ;;		_calc_bsoc
 24323 ;;		_init_bsoc
 24324 ;;		_esr_check
 24325 ;;		_efgtoa
 24326 ;; This function uses a reentrant model
 24327 ;;
 24328                           
 24329                           	psect	text98
 24330  014936                     __ptext98:
 24331                           	opt callstack 0
 24332  014936                     ___fldiv:
 24333                           	opt callstack 0
 24334                           
 24335                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 24336  014936  0E0D               	movlw	13
 24337  014938  26E1               	addwf	fsr1l,f,c
 24338  01493A  0E00               	movlw	0
 24339  01493C  22E2               	addwfc	fsr1h,f,c
 24340                           
 24341                           ;stkvar	_b @ sp[(-13)+-4]
 24342                           
 24343                           ;incstack = 0
 24344 ;; hardware stack exceeded
 24345  01493E  0EF2               	movlw	242
 24346  014940  24E1               	addwf	fsr1l,w,c
 24347  014942  6ED9               	movwf	fsr2l,c
 24348  014944  0EFF               	movlw	255
 24349  014946  20E2               	addwfc	fsr1h,w,c
 24350  014948  6EDA               	movwf	fsr2h,c
 24351  01494A  50DF               	movf	indf2,w,c
 24352  01494C  6E33               	movwf	(btemp+11)^0,c
 24353  01494E  0E80               	movlw	128
 24354  014950  1633               	andwf	(btemp+11)^0,f,c
 24355                           
 24356                           ;stkvar	_sign @ sp[(-13)+12]
 24357  014952  0EFF               	movlw	-1
 24358  014954  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24359                           
 24360                           ;stkvar	_b @ sp[(-13)+-4]
 24361  01495A  0EF2               	movlw	242
 24362  01495C  24E1               	addwf	fsr1l,w,c
 24363  01495E  6ED9               	movwf	fsr2l,c
 24364  014960  0EFF               	movlw	255
 24365  014962  20E2               	addwfc	fsr1h,w,c
 24366  014964  6EDA               	movwf	fsr2h,c
 24367  014966  50DF               	movf	indf2,w,c
 24368  014968  6E33               	movwf	(btemp+11)^0,c
 24369  01496A  90D8               	bcf	status,0,c
 24370  01496C  3433               	rlcf	(btemp+11)^0,w,c
 24371  01496E  6E32               	movwf	(btemp+10)^0,c
 24372                           
 24373                           ;stkvar	_bexp @ sp[(-13)+11]
 24374  014970  0EFE               	movlw	-2
 24375  014972  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24376                           
 24377                           ;stkvar	_b @ sp[(-13)+-4]
 24378  014978  0EF1               	movlw	241
 24379  01497A  24E1               	addwf	fsr1l,w,c
 24380  01497C  6ED9               	movwf	fsr2l,c
 24381  01497E  0EFF               	movlw	255
 24382  014980  20E2               	addwfc	fsr1h,w,c
 24383  014982  6EDA               	movwf	fsr2h,c
 24384  014984  AEDF               	btfss	indf2,7,c
 24385  014986  D002               	goto	l7928
 24386                           
 24387                           ;stkvar	_bexp @ sp[(-13)+11]
 24388  014988  0EFE               	movlw	-2
 24389  01498A  80E3               	bsf	plusw1,0,c
 24390  01498C                     l7928:
 24391                           
 24392                           ;stkvar	_bexp @ sp[(-13)+11]
 24393  01498C  0EFE               	movlw	-2
 24394  01498E  50E3               	movf	plusw1,w,c
 24395  014990  B4D8               	btfsc	status,2,c
 24396  014992  D027               	goto	l7938
 24397                           
 24398                           ;stkvar	_bexp @ sp[(-13)+11]
 24399  014994  0EFE               	movlw	-2
 24400  014996  28E3               	incf	plusw1,w,c
 24401  014998  A4D8               	btfss	status,2,c
 24402  01499A  D018               	goto	l7934
 24403  01499C  0E00               	movlw	0
 24404  01499E  6E30               	movwf	(btemp+8)^0,c
 24405  0149A0  0E00               	movlw	0
 24406  0149A2  6E31               	movwf	(btemp+9)^0,c
 24407  0149A4  0E00               	movlw	0
 24408  0149A6  6E32               	movwf	(btemp+10)^0,c
 24409  0149A8  0E00               	movlw	0
 24410  0149AA  6E33               	movwf	(btemp+11)^0,c
 24411                           
 24412                           ;stkvar	_b @ sp[(-13)+-4]
 24413  0149AC  0EEF               	movlw	-17
 24414  0149AE  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24415  0149B4  0EF0               	movlw	-16
 24416  0149B6  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24417  0149BC  0EF1               	movlw	-15
 24418  0149BE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24419  0149C4  0EF2               	movlw	-14
 24420  0149C6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24421  0149CC                     l7934:
 24422                           
 24423                           ;stkvar	_b @ sp[(-13)+-4]
 24424  0149CC  0EF1               	movlw	-15
 24425  0149CE  8EE3               	bsf	plusw1,7,c
 24426                           
 24427                           ;stkvar	_b @ sp[(-13)+-4]
 24428  0149D0  0EF2               	movlw	242
 24429  0149D2  24E1               	addwf	fsr1l,w,c
 24430  0149D4  6ED9               	movwf	fsr2l,c
 24431  0149D6  0EFF               	movlw	255
 24432  0149D8  20E2               	addwfc	fsr1h,w,c
 24433  0149DA  6EDA               	movwf	fsr2h,c
 24434  0149DC  0E00               	movlw	0
 24435  0149DE  6EDF               	movwf	indf2,c
 24436  0149E0  D018               	goto	l7940
 24437  0149E2                     l7938:
 24438  0149E2  0E00               	movlw	0
 24439  0149E4  6E30               	movwf	(btemp+8)^0,c
 24440  0149E6  0E00               	movlw	0
 24441  0149E8  6E31               	movwf	(btemp+9)^0,c
 24442  0149EA  0E00               	movlw	0
 24443  0149EC  6E32               	movwf	(btemp+10)^0,c
 24444  0149EE  0E00               	movlw	0
 24445  0149F0  6E33               	movwf	(btemp+11)^0,c
 24446                           
 24447                           ;stkvar	_b @ sp[(-13)+-4]
 24448  0149F2  0EEF               	movlw	-17
 24449  0149F4  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24450  0149FA  0EF0               	movlw	-16
 24451  0149FC  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24452  014A02  0EF1               	movlw	-15
 24453  014A04  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24454  014A0A  0EF2               	movlw	-14
 24455  014A0C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24456  014A12                     l7940:
 24457                           
 24458                           ;stkvar	_a @ sp[(-13)+-8]
 24459  014A12  0EEE               	movlw	238
 24460  014A14  24E1               	addwf	fsr1l,w,c
 24461  014A16  6ED9               	movwf	fsr2l,c
 24462  014A18  0EFF               	movlw	255
 24463  014A1A  20E2               	addwfc	fsr1h,w,c
 24464  014A1C  6EDA               	movwf	fsr2h,c
 24465  014A1E  50DF               	movf	indf2,w,c
 24466  014A20  6E33               	movwf	(btemp+11)^0,c
 24467  014A22  0E80               	movlw	128
 24468  014A24  1633               	andwf	(btemp+11)^0,f,c
 24469                           
 24470                           ;stkvar	_sign @ sp[(-13)+12]
 24471  014A26  50E1               	movf	fsr1l,w,c
 24472  014A28  0FFF               	addlw	-1
 24473  014A2A  6ED9               	movwf	fsr2l,c
 24474  014A2C  50E2               	movf	fsr1h,w,c
 24475  014A2E  6EDA               	movwf	fsr2h,c
 24476  014A30  0EFF               	movlw	255
 24477  014A32  22DA               	addwfc	fsr2h,f,c
 24478  014A34  5033               	movf	(btemp+11)^0,w,c
 24479  014A36  1ADF               	xorwf	indf2,f,c
 24480                           
 24481                           ;stkvar	_a @ sp[(-13)+-8]
 24482  014A38  0EEE               	movlw	238
 24483  014A3A  24E1               	addwf	fsr1l,w,c
 24484  014A3C  6ED9               	movwf	fsr2l,c
 24485  014A3E  0EFF               	movlw	255
 24486  014A40  20E2               	addwfc	fsr1h,w,c
 24487  014A42  6EDA               	movwf	fsr2h,c
 24488  014A44  50DF               	movf	indf2,w,c
 24489  014A46  6E33               	movwf	(btemp+11)^0,c
 24490  014A48  90D8               	bcf	status,0,c
 24491  014A4A  3433               	rlcf	(btemp+11)^0,w,c
 24492  014A4C  6E32               	movwf	(btemp+10)^0,c
 24493                           
 24494                           ;stkvar	_aexp @ sp[(-13)+10]
 24495  014A4E  0EFD               	movlw	-3
 24496  014A50  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24497                           
 24498                           ;stkvar	_a @ sp[(-13)+-8]
 24499  014A56  0EED               	movlw	237
 24500  014A58  24E1               	addwf	fsr1l,w,c
 24501  014A5A  6ED9               	movwf	fsr2l,c
 24502  014A5C  0EFF               	movlw	255
 24503  014A5E  20E2               	addwfc	fsr1h,w,c
 24504  014A60  6EDA               	movwf	fsr2h,c
 24505  014A62  AEDF               	btfss	indf2,7,c
 24506  014A64  D002               	goto	l7948
 24507                           
 24508                           ;stkvar	_aexp @ sp[(-13)+10]
 24509  014A66  0EFD               	movlw	-3
 24510  014A68  80E3               	bsf	plusw1,0,c
 24511  014A6A                     l7948:
 24512                           
 24513                           ;stkvar	_aexp @ sp[(-13)+10]
 24514  014A6A  0EFD               	movlw	-3
 24515  014A6C  50E3               	movf	plusw1,w,c
 24516  014A6E  B4D8               	btfsc	status,2,c
 24517  014A70  D027               	goto	l7958
 24518                           
 24519                           ;stkvar	_aexp @ sp[(-13)+10]
 24520  014A72  0EFD               	movlw	-3
 24521  014A74  28E3               	incf	plusw1,w,c
 24522  014A76  A4D8               	btfss	status,2,c
 24523  014A78  D018               	goto	l7954
 24524  014A7A  0E00               	movlw	0
 24525  014A7C  6E30               	movwf	(btemp+8)^0,c
 24526  014A7E  0E00               	movlw	0
 24527  014A80  6E31               	movwf	(btemp+9)^0,c
 24528  014A82  0E00               	movlw	0
 24529  014A84  6E32               	movwf	(btemp+10)^0,c
 24530  014A86  0E00               	movlw	0
 24531  014A88  6E33               	movwf	(btemp+11)^0,c
 24532                           
 24533                           ;stkvar	_a @ sp[(-13)+-8]
 24534  014A8A  0EEB               	movlw	-21
 24535  014A8C  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24536  014A92  0EEC               	movlw	-20
 24537  014A94  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24538  014A9A  0EED               	movlw	-19
 24539  014A9C  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24540  014AA2  0EEE               	movlw	-18
 24541  014AA4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24542  014AAA                     l7954:
 24543                           
 24544                           ;stkvar	_a @ sp[(-13)+-8]
 24545  014AAA  0EED               	movlw	-19
 24546  014AAC  8EE3               	bsf	plusw1,7,c
 24547                           
 24548                           ;stkvar	_a @ sp[(-13)+-8]
 24549  014AAE  0EEE               	movlw	238
 24550  014AB0  24E1               	addwf	fsr1l,w,c
 24551  014AB2  6ED9               	movwf	fsr2l,c
 24552  014AB4  0EFF               	movlw	255
 24553  014AB6  20E2               	addwfc	fsr1h,w,c
 24554  014AB8  6EDA               	movwf	fsr2h,c
 24555  014ABA  0E00               	movlw	0
 24556  014ABC  6EDF               	movwf	indf2,c
 24557  014ABE  D018               	goto	l7960
 24558  014AC0                     l7958:
 24559  014AC0  0E00               	movlw	0
 24560  014AC2  6E30               	movwf	(btemp+8)^0,c
 24561  014AC4  0E00               	movlw	0
 24562  014AC6  6E31               	movwf	(btemp+9)^0,c
 24563  014AC8  0E00               	movlw	0
 24564  014ACA  6E32               	movwf	(btemp+10)^0,c
 24565  014ACC  0E00               	movlw	0
 24566  014ACE  6E33               	movwf	(btemp+11)^0,c
 24567                           
 24568                           ;stkvar	_a @ sp[(-13)+-8]
 24569  014AD0  0EEB               	movlw	-21
 24570  014AD2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24571  014AD8  0EEC               	movlw	-20
 24572  014ADA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24573  014AE0  0EED               	movlw	-19
 24574  014AE2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24575  014AE8  0EEE               	movlw	-18
 24576  014AEA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24577  014AF0                     l7960:
 24578                           
 24579                           ;stkvar	_a @ sp[(-13)+-8]
 24580  014AF0  0EEB               	movlw	-21
 24581  014AF2  50E3               	movf	plusw1,w,c
 24582  014AF4  E139               	bnz	l7972
 24583  014AF6  0EEC               	movlw	-20
 24584  014AF8  50E3               	movf	plusw1,w,c
 24585  014AFA  E136               	bnz	l7972
 24586  014AFC  0EED               	movlw	-19
 24587  014AFE  50E3               	movf	plusw1,w,c
 24588  014B00  E133               	bnz	l7972
 24589  014B02  0EEE               	movlw	-18
 24590  014B04  50E3               	movf	plusw1,w,c
 24591  014B06  A4D8               	btfss	status,2,c
 24592  014B08  D02F               	goto	l7972
 24593                           
 24594                           ;stkvar	_b @ sp[(-13)+-4]
 24595  014B0A  0EEF               	movlw	-17
 24596  014B0C  6AE3               	clrf	plusw1,c
 24597  014B0E  0EF0               	movlw	-16
 24598  014B10  6AE3               	clrf	plusw1,c
 24599  014B12  0EF1               	movlw	-15
 24600  014B14  6AE3               	clrf	plusw1,c
 24601  014B16  0EF2               	movlw	-14
 24602  014B18  6AE3               	clrf	plusw1,c
 24603                           
 24604                           ;stkvar	_b @ sp[(-13)+-4]
 24605  014B1A  0EF1               	movlw	241
 24606  014B1C  24E1               	addwf	fsr1l,w,c
 24607  014B1E  6ED9               	movwf	fsr2l,c
 24608  014B20  0EFF               	movlw	255
 24609  014B22  20E2               	addwfc	fsr1h,w,c
 24610  014B24  6EDA               	movwf	fsr2h,c
 24611  014B26  0E80               	movlw	128
 24612  014B28  12DE               	iorwf	postinc2,f,c
 24613  014B2A  0E7F               	movlw	127
 24614  014B2C  12DD               	iorwf	postdec2,f,c
 24615  014B2E                     l7966:
 24616                           
 24617                           ;stkvar	_sign @ sp[(-13)+12]
 24618  014B2E  0EFF               	movlw	-1
 24619  014B30  006F FF8C  F033    	movff	plusw1,btemp+11
 24620                           
 24621                           ;stkvar	_b @ sp[(-13)+-4]
 24622  014B36  0EF2               	movlw	242
 24623  014B38  24E1               	addwf	fsr1l,w,c
 24624  014B3A  6ED9               	movwf	fsr2l,c
 24625  014B3C  0EFF               	movlw	255
 24626  014B3E  20E2               	addwfc	fsr1h,w,c
 24627  014B40  6EDA               	movwf	fsr2h,c
 24628  014B42  5033               	movf	(btemp+11)^0,w,c
 24629  014B44  12DF               	iorwf	indf2,f,c
 24630                           
 24631                           ;stkvar	_b @ sp[(-13)+-4]
 24632  014B46  0EEF               	movlw	-17
 24633  014B48  006F FF8C  F028    	movff	plusw1,btemp
 24634  014B4E  0EF0               	movlw	-16
 24635  014B50  006F FF8C  F029    	movff	plusw1,btemp+1
 24636  014B56  0EF1               	movlw	-15
 24637  014B58  006F FF8C  F02A    	movff	plusw1,btemp+2
 24638  014B5E  0EF2               	movlw	-14
 24639  014B60  006F FF8C  F02B    	movff	plusw1,btemp+3
 24640  014B66  D19F               	goto	l2939
 24641  014B68                     l7972:
 24642                           
 24643                           ;stkvar	_bexp @ sp[(-13)+11]
 24644  014B68  0EFE               	movlw	-2
 24645  014B6A  50E3               	movf	plusw1,w,c
 24646  014B6C  A4D8               	btfss	status,2,c
 24647  014B6E  D009               	goto	l7980
 24648  014B70  0E00               	movlw	0
 24649  014B72  6E28               	movwf	btemp^0,c
 24650  014B74  0E00               	movlw	0
 24651  014B76  6E29               	movwf	(btemp+1)^0,c
 24652  014B78  0E00               	movlw	0
 24653  014B7A  6E2A               	movwf	(btemp+2)^0,c
 24654  014B7C  0E00               	movlw	0
 24655  014B7E  6E2B               	movwf	(btemp+3)^0,c
 24656  014B80  D192               	goto	l2939
 24657  014B82                     l7980:
 24658                           
 24659                           ;stkvar	_bexp @ sp[(-13)+11]
 24660  014B82  0EFE               	movlw	-2
 24661  014B84  50E3               	movf	plusw1,w,c
 24662  014B86  6E32               	movwf	(btemp+10)^0,c
 24663  014B88  6A33               	clrf	(btemp+11)^0,c
 24664                           
 24665                           ;stkvar	_aexp @ sp[(-13)+10]
 24666  014B8A  0EFD               	movlw	-3
 24667  014B8C  50E3               	movf	plusw1,w,c
 24668  014B8E  5E32               	subwf	(btemp+10)^0,f,c
 24669  014B90  0E00               	movlw	0
 24670  014B92  5A33               	subwfb	(btemp+11)^0,f,c
 24671  014B94  0E7F               	movlw	127
 24672  014B96  2632               	addwf	(btemp+10)^0,f,c
 24673  014B98  0E00               	movlw	0
 24674  014B9A  2233               	addwfc	(btemp+11)^0,f,c
 24675                           
 24676                           ;stkvar	_new_exp @ sp[(-13)+8]
 24677  014B9C  0EFB               	movlw	-5
 24678  014B9E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24679  014BA4  0EFC               	movlw	-4
 24680  014BA6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24681                           
 24682                           ;stkvar	_b @ sp[(-13)+-4]
 24683  014BAC  0EEF               	movlw	-17
 24684  014BAE  006F FF8C  F030    	movff	plusw1,btemp+8
 24685  014BB4  0EF0               	movlw	-16
 24686  014BB6  006F FF8C  F031    	movff	plusw1,btemp+9
 24687  014BBC  0EF1               	movlw	-15
 24688  014BBE  006F FF8C  F032    	movff	plusw1,btemp+10
 24689  014BC4  0EF2               	movlw	-14
 24690  014BC6  006F FF8C  F033    	movff	plusw1,btemp+11
 24691                           
 24692                           ;stkvar	_rem @ sp[(-13)+4]
 24693  014BCC  0EF7               	movlw	-9
 24694  014BCE  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 24695  014BD4  0EF8               	movlw	-8
 24696  014BD6  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 24697  014BDC  0EF9               	movlw	-7
 24698  014BDE  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 24699  014BE4  0EFA               	movlw	-6
 24700  014BE6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 24701                           
 24702                           ;stkvar	_b @ sp[(-13)+-4]
 24703  014BEC  0EEF               	movlw	-17
 24704  014BEE  6AE3               	clrf	plusw1,c
 24705  014BF0  0EF0               	movlw	-16
 24706  014BF2  6AE3               	clrf	plusw1,c
 24707  014BF4  0EF1               	movlw	-15
 24708  014BF6  6AE3               	clrf	plusw1,c
 24709  014BF8  0EF2               	movlw	-14
 24710  014BFA  6AE3               	clrf	plusw1,c
 24711                           
 24712                           ;stkvar	_grs @ sp[(-13)+0]
 24713  014BFC  0EF3               	movlw	-13
 24714  014BFE  6AE3               	clrf	plusw1,c
 24715  014C00  0EF4               	movlw	-12
 24716  014C02  6AE3               	clrf	plusw1,c
 24717  014C04  0EF5               	movlw	-11
 24718  014C06  6AE3               	clrf	plusw1,c
 24719  014C08  0EF6               	movlw	-10
 24720  014C0A  6AE3               	clrf	plusw1,c
 24721                           
 24722                           ;stkvar	_aexp @ sp[(-13)+10]
 24723  014C0C  0EFD               	movlw	-3
 24724  014C0E  6AE3               	clrf	plusw1,c
 24725  014C10  D050               	goto	l8008
 24726  014C12                     l7990:
 24727                           
 24728                           ;stkvar	_aexp @ sp[(-13)+10]
 24729  014C12  0EFD               	movlw	-3
 24730  014C14  50E3               	movf	plusw1,w,c
 24731  014C16  B4D8               	btfsc	status,2,c
 24732  014C18  D020               	goto	l8000
 24733                           
 24734                           ;stkvar	_rem @ sp[(-13)+4]
 24735  014C1A  90D8               	bcf	status,0,c
 24736  014C1C  0EF7               	movlw	-9
 24737  014C1E  36E3               	rlcf	plusw1,f,c
 24738  014C20  0EF8               	movlw	-8
 24739  014C22  36E3               	rlcf	plusw1,f,c
 24740  014C24  0EF9               	movlw	-7
 24741  014C26  36E3               	rlcf	plusw1,f,c
 24742  014C28  0EFA               	movlw	-6
 24743  014C2A  36E3               	rlcf	plusw1,f,c
 24744                           
 24745                           ;stkvar	_b @ sp[(-13)+-4]
 24746  014C2C  90D8               	bcf	status,0,c
 24747  014C2E  0EEF               	movlw	-17
 24748  014C30  36E3               	rlcf	plusw1,f,c
 24749  014C32  0EF0               	movlw	-16
 24750  014C34  36E3               	rlcf	plusw1,f,c
 24751  014C36  0EF1               	movlw	-15
 24752  014C38  36E3               	rlcf	plusw1,f,c
 24753  014C3A  0EF2               	movlw	-14
 24754  014C3C  36E3               	rlcf	plusw1,f,c
 24755                           
 24756                           ;stkvar	_grs @ sp[(-13)+0]
 24757  014C3E  0EF6               	movlw	-10
 24758  014C40  AEE3               	btfss	plusw1,7,c
 24759  014C42  D002               	goto	l7998
 24760                           
 24761                           ;stkvar	_b @ sp[(-13)+-4]
 24762  014C44  0EEF               	movlw	-17
 24763  014C46  80E3               	bsf	plusw1,0,c
 24764  014C48                     l7998:
 24765                           
 24766                           ;stkvar	_grs @ sp[(-13)+0]
 24767  014C48  90D8               	bcf	status,0,c
 24768  014C4A  0EF3               	movlw	-13
 24769  014C4C  36E3               	rlcf	plusw1,f,c
 24770  014C4E  0EF4               	movlw	-12
 24771  014C50  36E3               	rlcf	plusw1,f,c
 24772  014C52  0EF5               	movlw	-11
 24773  014C54  36E3               	rlcf	plusw1,f,c
 24774  014C56  0EF6               	movlw	-10
 24775  014C58  36E3               	rlcf	plusw1,f,c
 24776  014C5A                     l8000:
 24777                           
 24778                           ;stkvar	_a @ sp[(-13)+-8]
 24779                           ;stkvar	_rem @ sp[(-13)+4]
 24780  014C5A  50E1               	movf	fsr1l,w,c
 24781  014C5C  0FF7               	addlw	-9
 24782  014C5E  6ED9               	movwf	fsr2l,c
 24783  014C60  50E2               	movf	fsr1h,w,c
 24784  014C62  6EDA               	movwf	fsr2h,c
 24785  014C64  0EFF               	movlw	255
 24786  014C66  22DA               	addwfc	fsr2h,f,c
 24787  014C68  0EEB               	movlw	-21
 24788  014C6A  50E3               	movf	plusw1,w,c
 24789  014C6C  5CDE               	subwf	postinc2,w,c
 24790  014C6E  0EEC               	movlw	-20
 24791  014C70  50E3               	movf	plusw1,w,c
 24792  014C72  58DE               	subwfb	postinc2,w,c
 24793  014C74  0EED               	movlw	-19
 24794  014C76  50E3               	movf	plusw1,w,c
 24795  014C78  58DE               	subwfb	postinc2,w,c
 24796  014C7A  0EEE               	movlw	-18
 24797  014C7C  50E3               	movf	plusw1,w,c
 24798  014C7E  58DE               	subwfb	postinc2,w,c
 24799  014C80  A0D8               	btfss	status,0,c
 24800  014C82  D015               	goto	l8006
 24801                           
 24802                           ;stkvar	_grs @ sp[(-13)+0]
 24803  014C84  0EF6               	movlw	-10
 24804  014C86  8CE3               	bsf	plusw1,6,c
 24805                           
 24806                           ;stkvar	_a @ sp[(-13)+-8]
 24807                           ;stkvar	_rem @ sp[(-13)+4]
 24808  014C88  50E1               	movf	fsr1l,w,c
 24809  014C8A  0FF7               	addlw	-9
 24810  014C8C  6ED9               	movwf	fsr2l,c
 24811  014C8E  50E2               	movf	fsr1h,w,c
 24812  014C90  6EDA               	movwf	fsr2h,c
 24813  014C92  0EFF               	movlw	255
 24814  014C94  22DA               	addwfc	fsr2h,f,c
 24815  014C96  0EEB               	movlw	-21
 24816  014C98  50E3               	movf	plusw1,w,c
 24817  014C9A  5EDE               	subwf	postinc2,f,c
 24818  014C9C  0EEC               	movlw	-20
 24819  014C9E  50E3               	movf	plusw1,w,c
 24820  014CA0  5ADE               	subwfb	postinc2,f,c
 24821  014CA2  0EED               	movlw	-19
 24822  014CA4  50E3               	movf	plusw1,w,c
 24823  014CA6  5ADE               	subwfb	postinc2,f,c
 24824  014CA8  0EEE               	movlw	-18
 24825  014CAA  50E3               	movf	plusw1,w,c
 24826  014CAC  5ADE               	subwfb	postinc2,f,c
 24827  014CAE                     l8006:
 24828                           
 24829                           ;stkvar	_aexp @ sp[(-13)+10]
 24830  014CAE  0EFD               	movlw	-3
 24831  014CB0  2AE3               	incf	plusw1,f,c
 24832  014CB2                     l8008:
 24833                           
 24834                           ;stkvar	_aexp @ sp[(-13)+10]
 24835  014CB2  0EFD               	movlw	-3
 24836  014CB4  006F FF8C  F028    	movff	plusw1,btemp
 24837  014CBA  0E19               	movlw	25
 24838  014CBC  6428               	cpfsgt	btemp^0,c
 24839  014CBE  D7A9               	goto	l7990
 24840                           
 24841                           ;stkvar	_rem @ sp[(-13)+4]
 24842  014CC0  0EF7               	movlw	-9
 24843  014CC2  50E3               	movf	plusw1,w,c
 24844  014CC4  E10A               	bnz	u6380
 24845  014CC6  0EF8               	movlw	-8
 24846  014CC8  50E3               	movf	plusw1,w,c
 24847  014CCA  E107               	bnz	u6380
 24848  014CCC  0EF9               	movlw	-7
 24849  014CCE  50E3               	movf	plusw1,w,c
 24850  014CD0  E104               	bnz	u6380
 24851  014CD2  0EFA               	movlw	-6
 24852  014CD4  50E3               	movf	plusw1,w,c
 24853  014CD6  B4D8               	btfsc	status,2,c
 24854  014CD8  D024               	goto	l8024
 24855  014CDA                     u6380:
 24856                           
 24857                           ;stkvar	_grs @ sp[(-13)+0]
 24858  014CDA  0EF3               	movlw	-13
 24859  014CDC  80E3               	bsf	plusw1,0,c
 24860  014CDE  D021               	goto	l8024
 24861  014CE0                     l8014:
 24862                           
 24863                           ;stkvar	_b @ sp[(-13)+-4]
 24864  014CE0  90D8               	bcf	status,0,c
 24865  014CE2  0EEF               	movlw	-17
 24866  014CE4  36E3               	rlcf	plusw1,f,c
 24867  014CE6  0EF0               	movlw	-16
 24868  014CE8  36E3               	rlcf	plusw1,f,c
 24869  014CEA  0EF1               	movlw	-15
 24870  014CEC  36E3               	rlcf	plusw1,f,c
 24871  014CEE  0EF2               	movlw	-14
 24872  014CF0  36E3               	rlcf	plusw1,f,c
 24873                           
 24874                           ;stkvar	_grs @ sp[(-13)+0]
 24875  014CF2  0EF6               	movlw	-10
 24876  014CF4  AEE3               	btfss	plusw1,7,c
 24877  014CF6  D002               	goto	l8020
 24878                           
 24879                           ;stkvar	_b @ sp[(-13)+-4]
 24880  014CF8  0EEF               	movlw	-17
 24881  014CFA  80E3               	bsf	plusw1,0,c
 24882  014CFC                     l8020:
 24883                           
 24884                           ;stkvar	_grs @ sp[(-13)+0]
 24885  014CFC  90D8               	bcf	status,0,c
 24886  014CFE  0EF3               	movlw	-13
 24887  014D00  36E3               	rlcf	plusw1,f,c
 24888  014D02  0EF4               	movlw	-12
 24889  014D04  36E3               	rlcf	plusw1,f,c
 24890  014D06  0EF5               	movlw	-11
 24891  014D08  36E3               	rlcf	plusw1,f,c
 24892  014D0A  0EF6               	movlw	-10
 24893  014D0C  36E3               	rlcf	plusw1,f,c
 24894                           
 24895                           ;stkvar	_new_exp @ sp[(-13)+8]
 24896  014D0E  50E1               	movf	fsr1l,w,c
 24897  014D10  0FFB               	addlw	-5
 24898  014D12  6ED9               	movwf	fsr2l,c
 24899  014D14  50E2               	movf	fsr1h,w,c
 24900  014D16  6EDA               	movwf	fsr2h,c
 24901  014D18  0EFF               	movlw	255
 24902  014D1A  22DA               	addwfc	fsr2h,f,c
 24903  014D1C  06DE               	decf	postinc2,f,c
 24904  014D1E  0E00               	movlw	0
 24905  014D20  5ADD               	subwfb	postdec2,f,c
 24906  014D22                     l8024:
 24907                           
 24908                           ;stkvar	_b @ sp[(-13)+-4]
 24909  014D22  0EF1               	movlw	-15
 24910  014D24  AEE3               	btfss	plusw1,7,c
 24911  014D26  D7DC               	goto	l8014
 24912                           
 24913                           ;stkvar	_aexp @ sp[(-13)+10]
 24914  014D28  0EFD               	movlw	-3
 24915  014D2A  6AE3               	clrf	plusw1,c
 24916                           
 24917                           ;stkvar	_grs @ sp[(-13)+0]
 24918  014D2C  0EF6               	movlw	-10
 24919  014D2E  AEE3               	btfss	plusw1,7,c
 24920  014D30  D020               	goto	l8038
 24921                           
 24922                           ;stkvar	_grs @ sp[(-13)+0]
 24923  014D32  50E1               	movf	fsr1l,w,c
 24924  014D34  0FF3               	addlw	-13
 24925  014D36  6ED9               	movwf	fsr2l,c
 24926  014D38  50E2               	movf	fsr1h,w,c
 24927  014D3A  6EDA               	movwf	fsr2h,c
 24928  014D3C  0EFF               	movlw	255
 24929  014D3E  22DA               	addwfc	fsr2h,f,c
 24930  014D40  0EFF               	movlw	255
 24931  014D42  14DE               	andwf	postinc2,w,c
 24932  014D44  6E30               	movwf	(btemp+8)^0,c
 24933  014D46  0EFF               	movlw	255
 24934  014D48  14DE               	andwf	postinc2,w,c
 24935  014D4A  6E31               	movwf	(btemp+9)^0,c
 24936  014D4C  0EFF               	movlw	255
 24937  014D4E  14DE               	andwf	postinc2,w,c
 24938  014D50  6E32               	movwf	(btemp+10)^0,c
 24939  014D52  0E7F               	movlw	127
 24940  014D54  14DE               	andwf	postinc2,w,c
 24941  014D56  6E33               	movwf	(btemp+11)^0,c
 24942  014D58  5030               	movf	(btemp+8)^0,w,c
 24943  014D5A  1031               	iorwf	(btemp+9)^0,w,c
 24944  014D5C  1032               	iorwf	(btemp+10)^0,w,c
 24945  014D5E  1033               	iorwf	(btemp+11)^0,w,c
 24946  014D60  B4D8               	btfsc	status,2,c
 24947  014D62  D004               	goto	l8034
 24948  014D64                     u6420:
 24949                           
 24950                           ;stkvar	_aexp @ sp[(-13)+10]
 24951  014D64  0EFD               	movlw	-3
 24952  014D66  6AE3               	clrf	plusw1,c
 24953  014D68  2AE3               	incf	plusw1,f,c
 24954  014D6A  D003               	goto	l8038
 24955  014D6C                     l8034:
 24956                           
 24957                           ;stkvar	_b @ sp[(-13)+-4]
 24958  014D6C  0EEF               	movlw	-17
 24959  014D6E  B0E3               	btfsc	plusw1,0,c
 24960  014D70  D7F9               	goto	u6420
 24961  014D72                     l8038:
 24962                           
 24963                           ;stkvar	_aexp @ sp[(-13)+10]
 24964  014D72  0EFD               	movlw	-3
 24965  014D74  50E3               	movf	plusw1,w,c
 24966  014D76  B4D8               	btfsc	status,2,c
 24967  014D78  D036               	goto	l8048
 24968                           
 24969                           ;stkvar	_b @ sp[(-13)+-4]
 24970  014D7A  50E1               	movf	fsr1l,w,c
 24971  014D7C  0FEF               	addlw	-17
 24972  014D7E  6ED9               	movwf	fsr2l,c
 24973  014D80  50E2               	movf	fsr1h,w,c
 24974  014D82  6EDA               	movwf	fsr2h,c
 24975  014D84  0EFF               	movlw	255
 24976  014D86  22DA               	addwfc	fsr2h,f,c
 24977  014D88  2ADE               	incf	postinc2,f,c
 24978  014D8A  0E00               	movlw	0
 24979  014D8C  22DE               	addwfc	postinc2,f,c
 24980  014D8E  22DE               	addwfc	postinc2,f,c
 24981  014D90  22DE               	addwfc	postinc2,f,c
 24982                           
 24983                           ;stkvar	_b @ sp[(-13)+-4]
 24984  014D92  0EF2               	movlw	-14
 24985  014D94  A0E3               	btfss	plusw1,0,c
 24986  014D96  D027               	goto	l8048
 24987  014D98  0E01               	movlw	1
 24988  014D9A  6E33               	movwf	(btemp+11)^0,c
 24989                           
 24990                           ;stkvar	_b @ sp[(-13)+-4]
 24991  014D9C  50E1               	movf	fsr1l,w,c
 24992  014D9E  0FEF               	addlw	-17
 24993  014DA0  6ED9               	movwf	fsr2l,c
 24994  014DA2  50E2               	movf	fsr1h,w,c
 24995  014DA4  6EDA               	movwf	fsr2h,c
 24996  014DA6  0EFF               	movlw	255
 24997  014DA8  22DA               	addwfc	fsr2h,f,c
 24998  014DAA  2833               	incf	(btemp+11)^0,w,c
 24999  014DAC  52DE               	movf	postinc2,f,c
 25000  014DAE  D008               	goto	u6460
 25001  014DB0                     u6465:
 25002  014DB0  52DE               	movf	postinc2,f,c
 25003  014DB2  90D8               	bcf	status,0,c
 25004  014DB4  BEDC               	btfsc	preinc2,7,c
 25005  014DB6  80D8               	bsf	status,0,c
 25006  014DB8  32DD               	rrcf	postdec2,f,c
 25007  014DBA  32DD               	rrcf	postdec2,f,c
 25008  014DBC  32DD               	rrcf	postdec2,f,c
 25009  014DBE  32DE               	rrcf	postinc2,f,c
 25010  014DC0                     u6460:
 25011  014DC0  2EE8               	decfsz	wreg,f,c
 25012  014DC2  D7F6               	goto	u6465
 25013                           
 25014                           ;stkvar	_new_exp @ sp[(-13)+8]
 25015  014DC4  0EFB               	movlw	-5
 25016  014DC6  50E3               	movf	plusw1,w,c
 25017  014DC8  0F01               	addlw	1
 25018  014DCA  6E28               	movwf	btemp^0,c
 25019  014DCC  0EFB               	movlw	-5
 25020  014DCE  0060  F0A3  FFE3   	movff	btemp,plusw1
 25021  014DD4  6A28               	clrf	btemp^0,c
 25022  014DD6  0EFC               	movlw	-4
 25023  014DD8  50E3               	movf	plusw1,w,c
 25024  014DDA  2028               	addwfc	btemp^0,w,c
 25025  014DDC  6E28               	movwf	btemp^0,c
 25026  014DDE  0EFC               	movlw	-4
 25027  014DE0  0060  F0A3  FFE3   	movff	btemp,plusw1
 25028  014DE6                     l8048:
 25029                           
 25030                           ;stkvar	_new_exp @ sp[(-13)+8]
 25031  014DE6  0EFC               	movlw	-4
 25032  014DE8  BEE3               	btfsc	plusw1,7,c
 25033  014DEA  D01B               	goto	l8054
 25034  014DEC  0EFC               	movlw	-4
 25035  014DEE  50E3               	movf	plusw1,w,c
 25036  014DF0  E104               	bnz	u6470
 25037  014DF2  0EFB               	movlw	-5
 25038  014DF4  28E3               	incf	plusw1,w,c
 25039  014DF6  A0D8               	btfss	status,0,c
 25040  014DF8  D014               	goto	l8054
 25041  014DFA                     u6470:
 25042  014DFA  0EFF               	movlw	255
 25043  014DFC  6E32               	movwf	(btemp+10)^0,c
 25044  014DFE  0E00               	movlw	0
 25045  014E00  6E33               	movwf	(btemp+11)^0,c
 25046                           
 25047                           ;stkvar	_new_exp @ sp[(-13)+8]
 25048  014E02  0EFB               	movlw	-5
 25049  014E04  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25050  014E0A  0EFC               	movlw	-4
 25051  014E0C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25052                           
 25053                           ;stkvar	_b @ sp[(-13)+-4]
 25054  014E12  0EEF               	movlw	-17
 25055  014E14  6AE3               	clrf	plusw1,c
 25056  014E16  0EF0               	movlw	-16
 25057  014E18  6AE3               	clrf	plusw1,c
 25058  014E1A  0EF1               	movlw	-15
 25059  014E1C  6AE3               	clrf	plusw1,c
 25060  014E1E  0EF2               	movlw	-14
 25061  014E20  6AE3               	clrf	plusw1,c
 25062  014E22                     l8054:
 25063                           
 25064                           ;stkvar	_new_exp @ sp[(-13)+8]
 25065  014E22  0EFC               	movlw	-4
 25066  014E24  BEE3               	btfsc	plusw1,7,c
 25067  014E26  D007               	goto	u6480
 25068  014E28  0EFC               	movlw	-4
 25069  014E2A  50E3               	movf	plusw1,w,c
 25070  014E2C  E112               	bnz	l8060
 25071  014E2E  0EFB               	movlw	-5
 25072  014E30  04E3               	decf	plusw1,w,c
 25073  014E32  B0D8               	btfsc	status,0,c
 25074  014E34  D00E               	goto	l8060
 25075  014E36                     u6480:
 25076                           
 25077                           ;stkvar	_new_exp @ sp[(-13)+8]
 25078  014E36  0EFB               	movlw	-5
 25079  014E38  6AE3               	clrf	plusw1,c
 25080  014E3A  0EFC               	movlw	-4
 25081  014E3C  6AE3               	clrf	plusw1,c
 25082                           
 25083                           ;stkvar	_b @ sp[(-13)+-4]
 25084  014E3E  0EEF               	movlw	-17
 25085  014E40  6AE3               	clrf	plusw1,c
 25086  014E42  0EF0               	movlw	-16
 25087  014E44  6AE3               	clrf	plusw1,c
 25088  014E46  0EF1               	movlw	-15
 25089  014E48  6AE3               	clrf	plusw1,c
 25090  014E4A  0EF2               	movlw	-14
 25091  014E4C  6AE3               	clrf	plusw1,c
 25092                           
 25093                           ;stkvar	_sign @ sp[(-13)+12]
 25094  014E4E  0EFF               	movlw	-1
 25095  014E50  6AE3               	clrf	plusw1,c
 25096  014E52                     l8060:
 25097                           
 25098                           ;stkvar	_new_exp @ sp[(-13)+8]
 25099                           ;stkvar	_bexp @ sp[(-13)+11]
 25100  014E52  0EFB               	movlw	-5
 25101  014E54  006F FF8C  F028    	movff	plusw1,btemp
 25102  014E5A  0EFE               	movlw	-2
 25103  014E5C  0060  F0A3  FFE3   	movff	btemp,plusw1
 25104                           
 25105                           ;stkvar	_bexp @ sp[(-13)+11]
 25106  014E62  0EFE               	movlw	-2
 25107  014E64  A0E3               	btfss	plusw1,0,c
 25108  014E66  D009               	goto	l8066
 25109                           
 25110                           ;stkvar	_b @ sp[(-13)+-4]
 25111  014E68  0EF1               	movlw	241
 25112  014E6A  24E1               	addwf	fsr1l,w,c
 25113  014E6C  6ED9               	movwf	fsr2l,c
 25114  014E6E  0EFF               	movlw	255
 25115  014E70  20E2               	addwfc	fsr1h,w,c
 25116  014E72  6EDA               	movwf	fsr2h,c
 25117  014E74  0E00               	movlw	0
 25118  014E76  8EDB               	bsf	plusw2,7,c
 25119  014E78  D008               	goto	l8068
 25120  014E7A                     l8066:
 25121                           
 25122                           ;stkvar	_b @ sp[(-13)+-4]
 25123  014E7A  0EF1               	movlw	241
 25124  014E7C  24E1               	addwf	fsr1l,w,c
 25125  014E7E  6ED9               	movwf	fsr2l,c
 25126  014E80  0EFF               	movlw	255
 25127  014E82  20E2               	addwfc	fsr1h,w,c
 25128  014E84  6EDA               	movwf	fsr2h,c
 25129  014E86  0E7F               	movlw	127
 25130  014E88  16DF               	andwf	indf2,f,c
 25131  014E8A                     l8068:
 25132                           
 25133                           ;stkvar	_b @ sp[(-13)+-4]
 25134  014E8A  0EF2               	movlw	242
 25135  014E8C  24E1               	addwf	fsr1l,w,c
 25136  014E8E  6ED9               	movwf	fsr2l,c
 25137  014E90  0EFF               	movlw	255
 25138  014E92  20E2               	addwfc	fsr1h,w,c
 25139  014E94  6EDA               	movwf	fsr2h,c
 25140                           
 25141                           ;stkvar	_bexp @ sp[(-13)+11]
 25142  014E96  0EFE               	movlw	-2
 25143  014E98  006F FF8C  F033    	movff	plusw1,btemp+11
 25144  014E9E  90D8               	bcf	status,0,c
 25145  014EA0  3033               	rrcf	(btemp+11)^0,w,c
 25146  014EA2  6EDF               	movwf	indf2,c
 25147  014EA4  D644               	goto	l7966
 25148  014EA6                     l2939:
 25149                           
 25150                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 25151  014EA6  0EEB               	movlw	235
 25152  014EA8  26E1               	addwf	fsr1l,f,c
 25153  014EAA  0EFF               	movlw	255
 25154  014EAC  22E2               	addwfc	fsr1h,f,c
 25155  014EAE  0012               	return		;funcret
 25156  014EB0                     __end_of___fldiv:
 25157                           	opt callstack 0
 25158                           
 25159 ;; *************** function ___flge *****************
 25160 ;; Defined at:
 25161 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 25162 ;; Parameters:    Size  Location     Type
 25163 ;;  ff1             4  [STACK] unsigned char 
 25164 ;;  ff2             4  [STACK] unsigned char 
 25165 ;; Auto vars:     Size  Location     Type
 25166 ;;		None
 25167 ;; Return value:  Size  Location     Type
 25168 ;;		None               void
 25169 ;; Registers used:
 25170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 25171 ;; Tracked objects:
 25172 ;;		On entry : 0/0
 25173 ;;		On exit  : 0/0
 25174 ;;		Unchanged: 0/0
 25175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25180 ;;Total ram usage:        0 bytes
 25181 ;; Hardware stack levels used:    1
 25182 ;; Hardware stack levels required when called:   15
 25183 ;; This function calls:
 25184 ;;		Nothing
 25185 ;; This function is called by:
 25186 ;;		_main
 25187 ;;		_calc_ror_data
 25188 ;;		_calc_bsoc
 25189 ;;		_efgtoa
 25190 ;; This function uses a reentrant model
 25191 ;;
 25192                           
 25193                           	psect	text99
 25194  0186E0                     __ptext99:
 25195                           	opt callstack 0
 25196  0186E0                     ___flge:
 25197                           	opt callstack 0
 25198                           
 25199                           ;stkvar	_ff1 @ sp[(0)+-4]
 25200                           
 25201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25202                           ;incstack = 0
 25203 ;; hardware stack exceeded
 25204  0186E0  50E1               	movf	fsr1l,w,c
 25205  0186E2  0FFC               	addlw	-4
 25206  0186E4  6ED9               	movwf	fsr2l,c
 25207  0186E6  50E2               	movf	fsr1h,w,c
 25208  0186E8  6EDA               	movwf	fsr2h,c
 25209  0186EA  0EFF               	movlw	255
 25210  0186EC  22DA               	addwfc	fsr2h,f,c
 25211  0186EE  0E00               	movlw	0
 25212  0186F0  14DE               	andwf	postinc2,w,c
 25213  0186F2  6E30               	movwf	(btemp+8)^0,c
 25214  0186F4  0E00               	movlw	0
 25215  0186F6  14DE               	andwf	postinc2,w,c
 25216  0186F8  6E31               	movwf	(btemp+9)^0,c
 25217  0186FA  0E80               	movlw	128
 25218  0186FC  14DE               	andwf	postinc2,w,c
 25219  0186FE  6E32               	movwf	(btemp+10)^0,c
 25220  018700  0E7F               	movlw	127
 25221  018702  14DE               	andwf	postinc2,w,c
 25222  018704  6E33               	movwf	(btemp+11)^0,c
 25223  018706  5030               	movf	(btemp+8)^0,w,c
 25224  018708  1031               	iorwf	(btemp+9)^0,w,c
 25225  01870A  1032               	iorwf	(btemp+10)^0,w,c
 25226  01870C  1033               	iorwf	(btemp+11)^0,w,c
 25227  01870E  A4D8               	btfss	status,2,c
 25228  018710  D008               	goto	l8342
 25229                           
 25230                           ;stkvar	_ff1 @ sp[(0)+-4]
 25231  018712  0EFC               	movlw	-4
 25232  018714  6AE3               	clrf	plusw1,c
 25233  018716  0EFD               	movlw	-3
 25234  018718  6AE3               	clrf	plusw1,c
 25235  01871A  0EFE               	movlw	-2
 25236  01871C  6AE3               	clrf	plusw1,c
 25237  01871E  0EFF               	movlw	-1
 25238  018720  6AE3               	clrf	plusw1,c
 25239  018722                     l8342:
 25240                           
 25241                           ;stkvar	_ff2 @ sp[(0)+-8]
 25242  018722  50E1               	movf	fsr1l,w,c
 25243  018724  0FF8               	addlw	-8
 25244  018726  6ED9               	movwf	fsr2l,c
 25245  018728  50E2               	movf	fsr1h,w,c
 25246  01872A  6EDA               	movwf	fsr2h,c
 25247  01872C  0EFF               	movlw	255
 25248  01872E  22DA               	addwfc	fsr2h,f,c
 25249  018730  0E00               	movlw	0
 25250  018732  14DE               	andwf	postinc2,w,c
 25251  018734  6E30               	movwf	(btemp+8)^0,c
 25252  018736  0E00               	movlw	0
 25253  018738  14DE               	andwf	postinc2,w,c
 25254  01873A  6E31               	movwf	(btemp+9)^0,c
 25255  01873C  0E80               	movlw	128
 25256  01873E  14DE               	andwf	postinc2,w,c
 25257  018740  6E32               	movwf	(btemp+10)^0,c
 25258  018742  0E7F               	movlw	127
 25259  018744  14DE               	andwf	postinc2,w,c
 25260  018746  6E33               	movwf	(btemp+11)^0,c
 25261  018748  5030               	movf	(btemp+8)^0,w,c
 25262  01874A  1031               	iorwf	(btemp+9)^0,w,c
 25263  01874C  1032               	iorwf	(btemp+10)^0,w,c
 25264  01874E  1033               	iorwf	(btemp+11)^0,w,c
 25265  018750  A4D8               	btfss	status,2,c
 25266  018752  D008               	goto	l2620
 25267                           
 25268                           ;stkvar	_ff2 @ sp[(0)+-8]
 25269  018754  0EF8               	movlw	-8
 25270  018756  6AE3               	clrf	plusw1,c
 25271  018758  0EF9               	movlw	-7
 25272  01875A  6AE3               	clrf	plusw1,c
 25273  01875C  0EFA               	movlw	-6
 25274  01875E  6AE3               	clrf	plusw1,c
 25275  018760  0EFB               	movlw	-5
 25276  018762  6AE3               	clrf	plusw1,c
 25277  018764                     l2620:
 25278                           
 25279                           ;stkvar	_ff1 @ sp[(0)+-4]
 25280  018764  0EFF               	movlw	-1
 25281  018766  AEE3               	btfss	plusw1,7,c
 25282  018768  D024               	goto	l8348
 25283                           
 25284                           ;stkvar	_ff1 @ sp[(0)+-4]
 25285  01876A  0E00               	movlw	0
 25286  01876C  6E30               	movwf	(btemp+8)^0,c
 25287  01876E  0E00               	movlw	0
 25288  018770  6E31               	movwf	(btemp+9)^0,c
 25289  018772  0E00               	movlw	0
 25290  018774  6E32               	movwf	(btemp+10)^0,c
 25291  018776  0E80               	movlw	128
 25292  018778  6E33               	movwf	(btemp+11)^0,c
 25293  01877A  0EFC               	movlw	-4
 25294  01877C  50E3               	movf	plusw1,w,c
 25295  01877E  5E30               	subwf	(btemp+8)^0,f,c
 25296  018780  0EFD               	movlw	-3
 25297  018782  50E3               	movf	plusw1,w,c
 25298  018784  5A31               	subwfb	(btemp+9)^0,f,c
 25299  018786  0EFE               	movlw	-2
 25300  018788  50E3               	movf	plusw1,w,c
 25301  01878A  5A32               	subwfb	(btemp+10)^0,f,c
 25302  01878C  0EFF               	movlw	-1
 25303  01878E  50E3               	movf	plusw1,w,c
 25304  018790  5A33               	subwfb	(btemp+11)^0,f,c
 25305                           
 25306                           ;stkvar	_ff1 @ sp[(0)+-4]
 25307  018792  0EFC               	movlw	-4
 25308  018794  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25309  01879A  0EFD               	movlw	-3
 25310  01879C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25311  0187A2  0EFE               	movlw	-2
 25312  0187A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25313  0187AA  0EFF               	movlw	-1
 25314  0187AC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25315  0187B2                     l8348:
 25316                           
 25317                           ;stkvar	_ff2 @ sp[(0)+-8]
 25318  0187B2  0EFB               	movlw	-5
 25319  0187B4  AEE3               	btfss	plusw1,7,c
 25320  0187B6  D024               	goto	l8352
 25321                           
 25322                           ;stkvar	_ff2 @ sp[(0)+-8]
 25323  0187B8  0E00               	movlw	0
 25324  0187BA  6E30               	movwf	(btemp+8)^0,c
 25325  0187BC  0E00               	movlw	0
 25326  0187BE  6E31               	movwf	(btemp+9)^0,c
 25327  0187C0  0E00               	movlw	0
 25328  0187C2  6E32               	movwf	(btemp+10)^0,c
 25329  0187C4  0E80               	movlw	128
 25330  0187C6  6E33               	movwf	(btemp+11)^0,c
 25331  0187C8  0EF8               	movlw	-8
 25332  0187CA  50E3               	movf	plusw1,w,c
 25333  0187CC  5E30               	subwf	(btemp+8)^0,f,c
 25334  0187CE  0EF9               	movlw	-7
 25335  0187D0  50E3               	movf	plusw1,w,c
 25336  0187D2  5A31               	subwfb	(btemp+9)^0,f,c
 25337  0187D4  0EFA               	movlw	-6
 25338  0187D6  50E3               	movf	plusw1,w,c
 25339  0187D8  5A32               	subwfb	(btemp+10)^0,f,c
 25340  0187DA  0EFB               	movlw	-5
 25341  0187DC  50E3               	movf	plusw1,w,c
 25342  0187DE  5A33               	subwfb	(btemp+11)^0,f,c
 25343                           
 25344                           ;stkvar	_ff2 @ sp[(0)+-8]
 25345  0187E0  0EF8               	movlw	-8
 25346  0187E2  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25347  0187E8  0EF9               	movlw	-7
 25348  0187EA  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25349  0187F0  0EFA               	movlw	-6
 25350  0187F2  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25351  0187F8  0EFB               	movlw	-5
 25352  0187FA  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25353  018800                     l8352:
 25354                           
 25355                           ;stkvar	_ff1 @ sp[(0)+-4]
 25356  018800  0EFF               	movlw	-1
 25357  018802  7EE3               	btg	plusw1,7,c
 25358                           
 25359                           ;stkvar	_ff2 @ sp[(0)+-8]
 25360  018804  0EFB               	movlw	-5
 25361  018806  7EE3               	btg	plusw1,7,c
 25362                           
 25363                           ;stkvar	_ff2 @ sp[(0)+-8]
 25364                           ;stkvar	_ff1 @ sp[(0)+-4]
 25365  018808  50E1               	movf	fsr1l,w,c
 25366  01880A  0FFC               	addlw	-4
 25367  01880C  6ED9               	movwf	fsr2l,c
 25368  01880E  50E2               	movf	fsr1h,w,c
 25369  018810  6EDA               	movwf	fsr2h,c
 25370  018812  0EFF               	movlw	255
 25371  018814  22DA               	addwfc	fsr2h,f,c
 25372  018816  0EF8               	movlw	-8
 25373  018818  50E3               	movf	plusw1,w,c
 25374  01881A  5CDE               	subwf	postinc2,w,c
 25375  01881C  0EF9               	movlw	-7
 25376  01881E  50E3               	movf	plusw1,w,c
 25377  018820  58DE               	subwfb	postinc2,w,c
 25378  018822  0EFA               	movlw	-6
 25379  018824  50E3               	movf	plusw1,w,c
 25380  018826  58DE               	subwfb	postinc2,w,c
 25381  018828  0EFB               	movlw	-5
 25382  01882A  50E3               	movf	plusw1,w,c
 25383  01882C  58DE               	subwfb	postinc2,w,c
 25384  01882E  B0D8               	btfsc	status,0,c
 25385  018830  D002               	goto	l8360
 25386  018832  9028               	bcf	btemp& (0+255),0,c
 25387  018834  D001               	goto	l2627
 25388  018836                     l8360:
 25389  018836  8028               	bsf	btemp& (0+255),0,c
 25390  018838                     l2627:
 25391                           
 25392                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 25393  018838  0EF8               	movlw	248
 25394  01883A  26E1               	addwf	fsr1l,f,c
 25395  01883C  0EFF               	movlw	255
 25396  01883E  22E2               	addwfc	fsr1h,f,c
 25397  018840  0012               	return		;funcret
 25398  018842                     __end_of___flge:
 25399                           	opt callstack 0
 25400                           
 25401 ;; *************** function _calc_model_data *****************
 25402 ;; Defined at:
 25403 ;;		line 67 in file "mbmc.c"
 25404 ;; Parameters:    Size  Location     Type
 25405 ;;		None
 25406 ;; Auto vars:     Size  Location     Type
 25407 ;;		None
 25408 ;; Return value:  Size  Location     Type
 25409 ;;                  1  [STACK] void 
 25410 ;; Registers used:
 25411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25412 ;; Tracked objects:
 25413 ;;		On entry : 0/0
 25414 ;;		On exit  : 3F/1
 25415 ;;		Unchanged: 0/0
 25416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25421 ;;Total ram usage:        0 bytes
 25422 ;; Hardware stack levels used:    1
 25423 ;; Hardware stack levels required when called:   18
 25424 ;; This function calls:
 25425 ;;		___fladd
 25426 ;;		___flmul
 25427 ;;		___flsub
 25428 ;;		_lp_filter
 25429 ;;		_start_bsoc
 25430 ;;		_stop_bsoc
 25431 ;; This function is called by:
 25432 ;;		_main
 25433 ;; This function uses a reentrant model
 25434 ;;
 25435                           
 25436                           	psect	text100
 25437  015B96                     __ptext100:
 25438                           	opt callstack 0
 25439  015B96                     _calc_model_data:
 25440                           	opt callstack 12
 25441                           
 25442                           ;mbmc.c: 69:  static float bvror = 0.0, bcror = 0.0;;mbmc.c: 70:  stop_bsoc();
 25443                           
 25444                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25445                           ;incstack = 0
 25446  015B96  EC84  F0DB         	call	_stop_bsoc	;wreg free
 25447                           
 25448                           ; BSR set to: 57
 25449                           ;mbmc.c: 72:  if (!V.calib) {
 25450  015B9A  0102               	movlb	2	; () banked
 25451  015B9C  51AC               	movf	(_V+172)& (0+255),w,b	;volatile
 25452  015B9E  A4D8               	btfss	status,2,c
 25453  015BA0  D1C5               	goto	l10702
 25454                           
 25455                           ; BSR set to: 2
 25456                           ;mbmc.c: 73:   C.c_bat = C.calc[C_BATT];
 25457  015BA2  C100  F144         	movff	_C,_C+68	;volatile
 25458  015BA6  C101  F145         	movff	_C+1,_C+69	;volatile
 25459  015BAA  C102  F146         	movff	_C+2,_C+70	;volatile
 25460  015BAE  C103  F147         	movff	_C+3,_C+71	;volatile
 25461                           
 25462                           ; BSR set to: 2
 25463                           ;mbmc.c: 74:   C.bc_ror = C.c_bat - bcror;
 25464  015BB2  0060  F23B  FFE6   	movff	calc_model_data@bcror,postinc1
 25465  015BB8  0060  F23F  FFE6   	movff	calc_model_data@bcror+1,postinc1
 25466  015BBE  0060  F243  FFE6   	movff	calc_model_data@bcror+2,postinc1
 25467  015BC4  0060  F247  FFE6   	movff	calc_model_data@bcror+3,postinc1
 25468  015BCA  0060  F513  FFE6   	movff	_C+68,postinc1
 25469  015BD0  0060  F517  FFE6   	movff	_C+69,postinc1
 25470  015BD6  0060  F51B  FFE6   	movff	_C+70,postinc1
 25471  015BDC  0060  F51F  FFE6   	movff	_C+71,postinc1
 25472  015BE2  EC3F  F0D5         	call	___flsub	;wreg free
 25473  015BE6  0060  F0A0  F16C   	movff	btemp,_C+108	;volatile
 25474  015BEC  0060  F0A4  F16D   	movff	btemp+1,_C+109	;volatile
 25475  015BF2  0060  F0A8  F16E   	movff	btemp+2,_C+110	;volatile
 25476  015BF8  0060  F0AC  F16F   	movff	btemp+3,_C+111	;volatile
 25477                           
 25478                           ;mbmc.c: 75:   bcror = C.c_bat;
 25479  015BFE  C144  F08E         	movff	_C+68,calc_model_data@bcror	;volatile
 25480  015C02  C145  F08F         	movff	_C+69,calc_model_data@bcror+1	;volatile
 25481  015C06  C146  F090         	movff	_C+70,calc_model_data@bcror+2	;volatile
 25482  015C0A  C147  F091         	movff	_C+71,calc_model_data@bcror+3	;volatile
 25483                           
 25484                           ;mbmc.c: 76:   C.c_pv = C.calc[C_PV];
 25485  015C0E  C104  F148         	movff	_C+4,_C+72	;volatile
 25486  015C12  C105  F149         	movff	_C+5,_C+73	;volatile
 25487  015C16  C106  F14A         	movff	_C+6,_C+74	;volatile
 25488  015C1A  C107  F14B         	movff	_C+7,_C+75	;volatile
 25489                           
 25490                           ;mbmc.c: 77:   C.v_bat = C.calc[V_BAT];
 25491  015C1E  C110  F154         	movff	_C+16,_C+84	;volatile
 25492  015C22  C111  F155         	movff	_C+17,_C+85	;volatile
 25493  015C26  C112  F156         	movff	_C+18,_C+86	;volatile
 25494  015C2A  C113  F157         	movff	_C+19,_C+87	;volatile
 25495                           
 25496                           ;mbmc.c: 78:   C.bv_ror = C.v_bat - bvror;
 25497  015C2E  0060  F24B  FFE6   	movff	calc_model_data@bvror,postinc1
 25498  015C34  0060  F24F  FFE6   	movff	calc_model_data@bvror+1,postinc1
 25499  015C3A  0060  F253  FFE6   	movff	calc_model_data@bvror+2,postinc1
 25500  015C40  0060  F257  FFE6   	movff	calc_model_data@bvror+3,postinc1
 25501  015C46  0060  F553  FFE6   	movff	_C+84,postinc1
 25502  015C4C  0060  F557  FFE6   	movff	_C+85,postinc1
 25503  015C52  0060  F55B  FFE6   	movff	_C+86,postinc1
 25504  015C58  0060  F55F  FFE6   	movff	_C+87,postinc1
 25505  015C5E  EC3F  F0D5         	call	___flsub	;wreg free
 25506  015C62  0060  F0A0  F168   	movff	btemp,_C+104	;volatile
 25507  015C68  0060  F0A4  F169   	movff	btemp+1,_C+105	;volatile
 25508  015C6E  0060  F0A8  F16A   	movff	btemp+2,_C+106	;volatile
 25509  015C74  0060  F0AC  F16B   	movff	btemp+3,_C+107	;volatile
 25510                           
 25511                           ;mbmc.c: 79:   bvror = C.v_bat;
 25512  015C7A  C154  F092         	movff	_C+84,calc_model_data@bvror	;volatile
 25513  015C7E  C155  F093         	movff	_C+85,calc_model_data@bvror+1	;volatile
 25514  015C82  C156  F094         	movff	_C+86,calc_model_data@bvror+2	;volatile
 25515  015C86  C157  F095         	movff	_C+87,calc_model_data@bvror+3	;volatile
 25516                           
 25517                           ;mbmc.c: 80:   C.v_pv = C.calc[V_PV];
 25518  015C8A  C114  F150         	movff	_C+20,_C+80	;volatile
 25519  015C8E  C115  F151         	movff	_C+21,_C+81	;volatile
 25520  015C92  C116  F152         	movff	_C+22,_C+82	;volatile
 25521  015C96  C117  F153         	movff	_C+23,_C+83	;volatile
 25522                           
 25523                           ;mbmc.c: 81:   C.v_cc = C.calc[V_CC];
 25524  015C9A  C108  F14C         	movff	_C+8,_C+76	;volatile
 25525  015C9E  C109  F14D         	movff	_C+9,_C+77	;volatile
 25526  015CA2  C10A  F14E         	movff	_C+10,_C+78	;volatile
 25527  015CA6  C10B  F14F         	movff	_C+11,_C+79	;volatile
 25528                           
 25529                           ;mbmc.c: 82:   C.v_inverter = C.calc[V_INVERTER];
 25530  015CAA  C130  F164         	movff	_C+48,_C+100	;volatile
 25531  015CAE  C131  F165         	movff	_C+49,_C+101	;volatile
 25532  015CB2  C132  F166         	movff	_C+50,_C+102	;volatile
 25533  015CB6  C133  F167         	movff	_C+51,_C+103	;volatile
 25534                           
 25535                           ;mbmc.c: 83:   C.c_load = lp_filter(C.calc[C_PV]+(-(C.calc[C_BATT])), 16, 1);
 25536  015CBA  0E01               	movlw	1
 25537  015CBC  6EE6               	movwf	postinc1,c
 25538  015CBE  0E10               	movlw	16
 25539  015CC0  6EE6               	movwf	postinc1,c
 25540  015CC2  0060  F403  FFE6   	movff	_C,postinc1
 25541  015CC8  0060  F407  FFE6   	movff	_C+1,postinc1
 25542  015CCE  0060  F40B  FFE6   	movff	_C+2,postinc1
 25543  015CD4  0060  F40F  FFE6   	movff	_C+3,postinc1
 25544  015CDA  0060  F413  FFE6   	movff	_C+4,postinc1
 25545  015CE0  0060  F417  FFE6   	movff	_C+5,postinc1
 25546  015CE6  0060  F41B  FFE6   	movff	_C+6,postinc1
 25547  015CEC  0060  F41F  FFE6   	movff	_C+7,postinc1
 25548  015CF2  EC3F  F0D5         	call	___flsub	;wreg free
 25549  015CF6  0060  F0A3  FFE6   	movff	btemp,postinc1
 25550  015CFC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25551  015D02  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25552  015D08  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25553  015D0E  ECDC  F0BE         	call	_lp_filter	;wreg free
 25554  015D12  0060  F0A0  F140   	movff	btemp,_C+64	;volatile
 25555  015D18  0060  F0A4  F141   	movff	btemp+1,_C+65	;volatile
 25556  015D1E  0060  F0A8  F142   	movff	btemp+2,_C+66	;volatile
 25557  015D24  0060  F0AC  F143   	movff	btemp+3,_C+67	;volatile
 25558                           
 25559                           ;mbmc.c: 84:   C.p_load = lp_filter(C.c_load * C.v_bat, 17, 1);
 25560  015D2A  0E01               	movlw	1
 25561  015D2C  6EE6               	movwf	postinc1,c
 25562  015D2E  0E11               	movlw	17
 25563  015D30  6EE6               	movwf	postinc1,c
 25564  015D32  0060  F553  FFE6   	movff	_C+84,postinc1
 25565  015D38  0060  F557  FFE6   	movff	_C+85,postinc1
 25566  015D3E  0060  F55B  FFE6   	movff	_C+86,postinc1
 25567  015D44  0060  F55F  FFE6   	movff	_C+87,postinc1
 25568  015D4A  0060  F503  FFE6   	movff	_C+64,postinc1
 25569  015D50  0060  F507  FFE6   	movff	_C+65,postinc1
 25570  015D56  0060  F50B  FFE6   	movff	_C+66,postinc1
 25571  015D5C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25572  015D62  EC0F  F099         	call	___flmul	;wreg free
 25573  015D66  0060  F0A3  FFE6   	movff	btemp,postinc1
 25574  015D6C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25575  015D72  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25576  015D78  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25577  015D7E  ECDC  F0BE         	call	_lp_filter	;wreg free
 25578  015D82  0060  F0A0  F170   	movff	btemp,_C+112	;volatile
 25579  015D88  0060  F0A4  F171   	movff	btemp+1,_C+113	;volatile
 25580  015D8E  0060  F0A8  F172   	movff	btemp+2,_C+114	;volatile
 25581  015D94  0060  F0AC  F173   	movff	btemp+3,_C+115	;volatile
 25582                           
 25583                           ;mbmc.c: 85:   C.p_pv = lp_filter(C.c_pv * C.v_pv, 18, 1);
 25584  015D9A  0E01               	movlw	1
 25585  015D9C  6EE6               	movwf	postinc1,c
 25586  015D9E  0E12               	movlw	18
 25587  015DA0  6EE6               	movwf	postinc1,c
 25588  015DA2  0060  F543  FFE6   	movff	_C+80,postinc1
 25589  015DA8  0060  F547  FFE6   	movff	_C+81,postinc1
 25590  015DAE  0060  F54B  FFE6   	movff	_C+82,postinc1
 25591  015DB4  0060  F54F  FFE6   	movff	_C+83,postinc1
 25592  015DBA  0060  F523  FFE6   	movff	_C+72,postinc1
 25593  015DC0  0060  F527  FFE6   	movff	_C+73,postinc1
 25594  015DC6  0060  F52B  FFE6   	movff	_C+74,postinc1
 25595  015DCC  0060  F52F  FFE6   	movff	_C+75,postinc1
 25596  015DD2  EC0F  F099         	call	___flmul	;wreg free
 25597  015DD6  0060  F0A3  FFE6   	movff	btemp,postinc1
 25598  015DDC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25599  015DE2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25600  015DE8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25601  015DEE  ECDC  F0BE         	call	_lp_filter	;wreg free
 25602  015DF2  0060  F0A0  F178   	movff	btemp,_C+120	;volatile
 25603  015DF8  0060  F0A4  F179   	movff	btemp+1,_C+121	;volatile
 25604  015DFE  0060  F0A8  F17A   	movff	btemp+2,_C+122	;volatile
 25605  015E04  0060  F0AC  F17B   	movff	btemp+3,_C+123	;volatile
 25606                           
 25607                           ;mbmc.c: 86:   C.p_inverter = lp_filter((C.c_load * C.v_inverter) - 14.00, 19, 1);
 25608  015E0A  0E01               	movlw	1
 25609  015E0C  6EE6               	movwf	postinc1,c
 25610  015E0E  0E13               	movlw	19
 25611  015E10  6EE6               	movwf	postinc1,c
 25612  015E12  0E00               	movlw	0
 25613  015E14  6EE6               	movwf	postinc1,c
 25614  015E16  0E00               	movlw	0
 25615  015E18  6EE6               	movwf	postinc1,c
 25616  015E1A  0E60               	movlw	96
 25617  015E1C  6EE6               	movwf	postinc1,c
 25618  015E1E  0EC1               	movlw	193
 25619  015E20  6EE6               	movwf	postinc1,c
 25620  015E22  0060  F593  FFE6   	movff	_C+100,postinc1
 25621  015E28  0060  F597  FFE6   	movff	_C+101,postinc1
 25622  015E2E  0060  F59B  FFE6   	movff	_C+102,postinc1
 25623  015E34  0060  F59F  FFE6   	movff	_C+103,postinc1
 25624  015E3A  0060  F503  FFE6   	movff	_C+64,postinc1
 25625  015E40  0060  F507  FFE6   	movff	_C+65,postinc1
 25626  015E46  0060  F50B  FFE6   	movff	_C+66,postinc1
 25627  015E4C  0060  F50F  FFE6   	movff	_C+67,postinc1
 25628  015E52  EC0F  F099         	call	___flmul	;wreg free
 25629  015E56  0060  F0A3  FFE6   	movff	btemp,postinc1
 25630  015E5C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25631  015E62  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25632  015E68  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25633  015E6E  EC24  F09D         	call	___fladd	;wreg free
 25634  015E72  0060  F0A3  FFE6   	movff	btemp,postinc1
 25635  015E78  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25636  015E7E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25637  015E84  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25638  015E8A  ECDC  F0BE         	call	_lp_filter	;wreg free
 25639  015E8E  0060  F0A0  F174   	movff	btemp,_C+116	;volatile
 25640  015E94  0060  F0A4  F175   	movff	btemp+1,_C+117	;volatile
 25641  015E9A  0060  F0A8  F176   	movff	btemp+2,_C+118	;volatile
 25642  015EA0  0060  F0AC  F177   	movff	btemp+3,_C+119	;volatile
 25643                           
 25644                           ;mbmc.c: 87:   C.p_bat = lp_filter(C.c_bat * C.v_bat, 20, 1);
 25645  015EA6  0E01               	movlw	1
 25646  015EA8  6EE6               	movwf	postinc1,c
 25647  015EAA  0E14               	movlw	20
 25648  015EAC  6EE6               	movwf	postinc1,c
 25649  015EAE  0060  F553  FFE6   	movff	_C+84,postinc1
 25650  015EB4  0060  F557  FFE6   	movff	_C+85,postinc1
 25651  015EBA  0060  F55B  FFE6   	movff	_C+86,postinc1
 25652  015EC0  0060  F55F  FFE6   	movff	_C+87,postinc1
 25653  015EC6  0060  F513  FFE6   	movff	_C+68,postinc1
 25654  015ECC  0060  F517  FFE6   	movff	_C+69,postinc1
 25655  015ED2  0060  F51B  FFE6   	movff	_C+70,postinc1
 25656  015ED8  0060  F51F  FFE6   	movff	_C+71,postinc1
 25657  015EDE  EC0F  F099         	call	___flmul	;wreg free
 25658  015EE2  0060  F0A3  FFE6   	movff	btemp,postinc1
 25659  015EE8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 25660  015EEE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 25661  015EF4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 25662  015EFA  ECDC  F0BE         	call	_lp_filter	;wreg free
 25663  015EFE  0060  F0A0  F17C   	movff	btemp,_C+124	;volatile
 25664  015F04  0060  F0A4  F17D   	movff	btemp+1,_C+125	;volatile
 25665  015F0A  0060  F0A8  F17E   	movff	btemp+2,_C+126	;volatile
 25666  015F10  0060  F0AC  F17F   	movff	btemp+3,_C+127	;volatile
 25667                           
 25668                           ;mbmc.c: 91:   if (C.p_inverter < 0.0)
 25669  015F16  0101               	movlb	1	; () banked
 25670  015F18  AF77               	btfss	(_C+119)& (0+255),7,b	;volatile
 25671  015F1A  D008               	goto	l10702
 25672                           
 25673                           ; BSR set to: 1
 25674                           ;mbmc.c: 92:    C.p_inverter = 0.0001;
 25675  015F1C  0E17               	movlw	23
 25676  015F1E  6F74               	movwf	(_C+116)& (0+255),b	;volatile
 25677  015F20  0EB7               	movlw	183
 25678  015F22  6F75               	movwf	(_C+117)& (0+255),b	;volatile
 25679  015F24  0ED1               	movlw	209
 25680  015F26  6F76               	movwf	(_C+118)& (0+255),b	;volatile
 25681  015F28  0E38               	movlw	56
 25682  015F2A  6F77               	movwf	(_C+119)& (0+255),b	;volatile
 25683  015F2C                     l10702:
 25684                           
 25685                           ;mbmc.c: 94:  start_bsoc();
 25686  015F2C  EC26  F0DA         	call	_start_bsoc	;wreg free
 25687                           
 25688                           ; BSR set to: 57
 25689                           ;mbmc.c: 95:  C.update = 1;
 25690  015F30  0E01               	movlw	1
 25691  015F32  0101               	movlb	1	; () banked
 25692  015F34  6FB0               	movwf	(_C+176)& (0+255),b	;volatile
 25693                           
 25694                           ; BSR set to: 1
 25695                           ; _calc_model_data: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 25696  015F36  0012               	return		;funcret
 25697  015F38                     __end_of_calc_model_data:
 25698                           	opt callstack 0
 25699                           
 25700 ;; *************** function _stop_bsoc *****************
 25701 ;; Defined at:
 25702 ;;		line 108 in file "bsoc.c"
 25703 ;; Parameters:    Size  Location     Type
 25704 ;;		None
 25705 ;; Auto vars:     Size  Location     Type
 25706 ;;		None
 25707 ;; Return value:  Size  Location     Type
 25708 ;;                  1  [STACK] void 
 25709 ;; Registers used:
 25710 ;;		None
 25711 ;; Tracked objects:
 25712 ;;		On entry : 0/0
 25713 ;;		On exit  : 3F/39
 25714 ;;		Unchanged: 0/0
 25715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25720 ;;Total ram usage:        0 bytes
 25721 ;; Hardware stack levels used:    1
 25722 ;; Hardware stack levels required when called:   15
 25723 ;; This function calls:
 25724 ;;		Nothing
 25725 ;; This function is called by:
 25726 ;;		_calc_model_data
 25727 ;; This function uses a reentrant model
 25728 ;;
 25729                           
 25730                           	psect	text101
 25731  01B708                     __ptext101:
 25732                           	opt callstack 0
 25733  01B708                     _stop_bsoc:
 25734                           	opt callstack 14
 25735                           
 25736                           ;bsoc.c: 111:  PIE6bits.TMR3IE = 0;
 25737                           
 25738                           ; BSR set to: 1
 25739                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25740                           ;incstack = 0
 25741  01B708  0139               	movlb	57	; () banked
 25742  01B70A  9D96               	bcf	150,6,b	;volatile
 25743                           
 25744                           ; BSR set to: 57
 25745                           ; _stop_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 25746  01B70C  0012               	return		;funcret
 25747  01B70E                     __end_of_stop_bsoc:
 25748                           	opt callstack 0
 25749                           
 25750 ;; *************** function _start_bsoc *****************
 25751 ;; Defined at:
 25752 ;;		line 99 in file "bsoc.c"
 25753 ;; Parameters:    Size  Location     Type
 25754 ;;		None
 25755 ;; Auto vars:     Size  Location     Type
 25756 ;;		None
 25757 ;; Return value:  Size  Location     Type
 25758 ;;                  1  [STACK] void 
 25759 ;; Registers used:
 25760 ;;		wreg, status,2, status,0, btemp+11
 25761 ;; Tracked objects:
 25762 ;;		On entry : 3C/2
 25763 ;;		On exit  : 3F/39
 25764 ;;		Unchanged: 0/0
 25765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25766 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25769 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25770 ;;Total ram usage:        0 bytes
 25771 ;; Hardware stack levels used:    1
 25772 ;; Hardware stack levels required when called:   15
 25773 ;; This function calls:
 25774 ;;		Nothing
 25775 ;; This function is called by:
 25776 ;;		_calc_model_data
 25777 ;; This function uses a reentrant model
 25778 ;;
 25779                           
 25780                           	psect	text102
 25781  01B44C                     __ptext102:
 25782                           	opt callstack 0
 25783  01B44C                     _start_bsoc:
 25784                           	opt callstack 14
 25785                           
 25786                           ;bsoc.c: 102:  PIE6bits.TMR3IE = 1;
 25787                           
 25788                           ; BSR set to: 57
 25789                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25790                           ;incstack = 0
 25791  01B44C  0139               	movlb	57	; () banked
 25792  01B44E  8D96               	bsf	150,6,b	;volatile
 25793                           
 25794                           ; BSR set to: 57
 25795  01B450  A4BE               	btfss	190,2,c	;volatile
 25796  01B452  D002               	goto	u9290
 25797  01B454  0E01               	movlw	1
 25798  01B456  D001               	goto	u9296
 25799  01B458                     u9290:
 25800  01B458  0E00               	movlw	0
 25801  01B45A                     u9296:
 25802  01B45A  0AFF               	xorlw	255
 25803  01B45C  6E33               	movwf	(btemp+11)^0,c
 25804  01B45E  4633               	rlncf	(btemp+11)^0,f,c
 25805  01B460  4633               	rlncf	(btemp+11)^0,f,c
 25806  01B462  50BE               	movf	190,w,c	;volatile
 25807  01B464  1833               	xorwf	(btemp+11)^0,w,c
 25808  01B466  0BFB               	andlw	-5
 25809  01B468  1833               	xorwf	(btemp+11)^0,w,c
 25810  01B46A  6EBE               	movwf	190,c	;volatile
 25811                           
 25812                           ; BSR set to: 57
 25813                           ; _start_bsoc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
 25814  01B46C  0012               	return		;funcret
 25815  01B46E                     __end_of_start_bsoc:
 25816                           	opt callstack 0
 25817                           
 25818 ;; *************** function _lp_filter *****************
 25819 ;; Defined at:
 25820 ;;		line 29 in file "mbmc.c"
 25821 ;; Parameters:    Size  Location     Type
 25822 ;;  new             4  [STACK] const float 
 25823 ;;  bn              1  [STACK] const unsigned char 
 25824 ;;  slow            1  [STACK] const char 
 25825 ;; Auto vars:     Size  Location     Type
 25826 ;;  lp_speed        4  [STACK] float 
 25827 ;; Return value:  Size  Location     Type
 25828 ;;                  4  [STACK] float 
 25829 ;; Registers used:
 25830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 25831 ;; Tracked objects:
 25832 ;;		On entry : 0/2
 25833 ;;		On exit  : 0/0
 25834 ;;		Unchanged: 0/0
 25835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25839 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25840 ;;Total ram usage:        0 bytes
 25841 ;; Hardware stack levels used:    1
 25842 ;; Hardware stack levels required when called:   17
 25843 ;; This function calls:
 25844 ;;		___fladd
 25845 ;;		___flmul
 25846 ;;		___flsub
 25847 ;; This function is called by:
 25848 ;;		_main
 25849 ;;		_convert_adc_data
 25850 ;;		_calc_model_data
 25851 ;; This function uses a reentrant model
 25852 ;;
 25853                           
 25854                           	psect	text103
 25855  017DB8                     __ptext103:
 25856                           	opt callstack 0
 25857  017DB8                     _lp_filter:
 25858                           	opt callstack 0
 25859                           
 25860                           ; BSR set to: 57
 25861                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25862  017DB8  52E6               	movf	postinc1,f,c
 25863  017DBA  52E6               	movf	postinc1,f,c
 25864  017DBC  52E6               	movf	postinc1,f,c
 25865  017DBE  52E6               	movf	postinc1,f,c
 25866                           
 25867                           ;mbmc.c: 29: float lp_filter(const float new, const uint8_t bn, const int8_t slow);mbmc.
      +                          c: 30: {;mbmc.c: 31:  static float smooth[16 +5];;mbmc.c: 32:  float lp_speed;;mbmc.c: 3
      +                          4:  if (bn >= 16 +5)
 25868                           ;stkvar	_bn @ sp[(-4)+-5]
 25869                           
 25870                           ;incstack = 0
 25871  017DC0  0EF7               	movlw	-9
 25872  017DC2  006F FF8C  F028    	movff	plusw1,btemp
 25873  017DC8  0E14               	movlw	20
 25874  017DCA  6428               	cpfsgt	btemp^0,c
 25875  017DCC  D011               	goto	l10106
 25876  017DCE                     u9200:
 25877                           
 25878                           ;mbmc.c: 35:   return new;
 25879                           ;stkvar	_new @ sp[(-4)+-4]
 25880  017DCE  0EF8               	movlw	-8
 25881  017DD0  006F FF8C  F028    	movff	plusw1,btemp
 25882  017DD6  0EF9               	movlw	-7
 25883  017DD8  006F FF8C  F029    	movff	plusw1,btemp+1
 25884  017DDE  0EFA               	movlw	-6
 25885  017DE0  006F FF8C  F02A    	movff	plusw1,btemp+2
 25886  017DE6  0EFB               	movlw	-5
 25887  017DE8  006F FF8C  F02B    	movff	plusw1,btemp+3
 25888  017DEE  D0BD               	goto	l1825
 25889  017DF0                     l10106:
 25890                           
 25891                           ;mbmc.c: 37:  if (slow == (-1)) {
 25892                           ;stkvar	_slow @ sp[(-4)+-6]
 25893  017DF0  0EF6               	movlw	-10
 25894  017DF2  28E3               	incf	plusw1,w,c
 25895  017DF4  A4D8               	btfss	status,2,c
 25896  017DF6  D012               	goto	l10114
 25897                           
 25898                           ;mbmc.c: 38:   smooth[bn] = 0.0;
 25899                           ;stkvar	_bn @ sp[(-4)+-5]
 25900  017DF8  0EF7               	movlw	-9
 25901  017DFA  50E3               	movf	plusw1,w,c
 25902  017DFC  0D04               	mullw	4
 25903  017DFE  0E00               	movlw	low lp_filter@smooth
 25904  017E00  24F3               	addwf	243,w,c
 25905  017E02  6ED9               	movwf	fsr2l,c
 25906  017E04  0E03               	movlw	high lp_filter@smooth
 25907  017E06  20F4               	addwfc	prodh,w,c
 25908  017E08  6EDA               	movwf	fsr2h,c
 25909  017E0A  0E00               	movlw	0
 25910  017E0C  6EDE               	movwf	postinc2,c
 25911  017E0E  0E00               	movlw	0
 25912  017E10  6EDE               	movwf	postinc2,c
 25913  017E12  0E00               	movlw	0
 25914  017E14  6EDE               	movwf	postinc2,c
 25915  017E16  0E00               	movlw	0
 25916  017E18  6EDD               	movwf	postdec2,c
 25917  017E1A  D7D9               	goto	u9200
 25918  017E1C                     l10114:
 25919                           
 25920                           ;mbmc.c: 42:  if (slow) {
 25921                           ;stkvar	_slow @ sp[(-4)+-6]
 25922  017E1C  0EF6               	movlw	-10
 25923  017E1E  50E3               	movf	plusw1,w,c
 25924  017E20  B4D8               	btfsc	status,2,c
 25925  017E22  D006               	goto	l10118
 25926                           
 25927                           ;mbmc.c: 43:   lp_speed = 0.033;
 25928  017E24  0E02               	movlw	2
 25929  017E26  6E30               	movwf	(btemp+8)^0,c
 25930  017E28  0E2B               	movlw	43
 25931  017E2A  6E31               	movwf	(btemp+9)^0,c
 25932  017E2C  0E07               	movlw	7
 25933  017E2E  D005               	goto	L29
 25934  017E30                     l10118:
 25935                           
 25936                           ;mbmc.c: 45:   lp_speed = 0.066;
 25937  017E30  0E02               	movlw	2
 25938  017E32  6E30               	movwf	(btemp+8)^0,c
 25939  017E34  0E2B               	movlw	43
 25940  017E36  6E31               	movwf	(btemp+9)^0,c
 25941  017E38  0E87               	movlw	135
 25942  017E3A                     L29:
 25943  017E3A  6E32               	movwf	(btemp+10)^0,c
 25944  017E3C  0E3D               	movlw	61
 25945  017E3E  6E33               	movwf	(btemp+11)^0,c
 25946                           
 25947                           ;stkvar	_lp_speed @ sp[(-4)+0]
 25948  017E40  0EFC               	movlw	-4
 25949  017E42  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 25950  017E48  0EFD               	movlw	-3
 25951  017E4A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 25952  017E50  0EFE               	movlw	-2
 25953  017E52  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 25954  017E58  0EFF               	movlw	-1
 25955  017E5A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 25956                           
 25957                           ;mbmc.c: 48:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
 25958                           ;stkvar	_bn @ sp[(-4)+-5]
 25959  017E60  0EF7               	movlw	-9
 25960  017E62  50E3               	movf	plusw1,w,c
 25961  017E64  0D04               	mullw	4
 25962  017E66  0E00               	movlw	low lp_filter@smooth
 25963  017E68  24F3               	addwf	243,w,c
 25964  017E6A  6ED9               	movwf	fsr2l,c
 25965  017E6C  0E03               	movlw	high lp_filter@smooth
 25966  017E6E  20F4               	addwfc	prodh,w,c
 25967  017E70  6EDA               	movwf	fsr2h,c
 25968  017E72  006F FF7B FFE6     	movff	postinc2,postinc1
 25969  017E78  006F FF7B FFE6     	movff	postinc2,postinc1
 25970  017E7E  006F FF7B FFE6     	movff	postinc2,postinc1
 25971  017E84  006F FF7B FFE6     	movff	postinc2,postinc1
 25972                           
 25973                           ;stkvar	_lp_speed @ sp[(-8)+0]
 25974  017E8A  0EF8               	movlw	-8
 25975  017E8C  006F FF8F FFE6     	movff	plusw1,postinc1
 25976  017E92  006F FF8F FFE6     	movff	plusw1,postinc1
 25977  017E98  006F FF8F FFE6     	movff	plusw1,postinc1
 25978  017E9E  006F FF8F FFE6     	movff	plusw1,postinc1
 25979                           
 25980                           ;stkvar	_bn @ sp[(-12)+-5]
 25981  017EA4  0EEF               	movlw	-17
 25982  017EA6  50E3               	movf	plusw1,w,c
 25983  017EA8  0D04               	mullw	4
 25984  017EAA  0E00               	movlw	low lp_filter@smooth
 25985  017EAC  24F3               	addwf	243,w,c
 25986  017EAE  6ED9               	movwf	fsr2l,c
 25987  017EB0  0E03               	movlw	high lp_filter@smooth
 25988  017EB2  20F4               	addwfc	prodh,w,c
 25989  017EB4  6EDA               	movwf	fsr2h,c
 25990  017EB6  006F FF7B FFE6     	movff	postinc2,postinc1
 25991  017EBC  006F FF7B FFE6     	movff	postinc2,postinc1
 25992  017EC2  006F FF7B FFE6     	movff	postinc2,postinc1
 25993  017EC8  006F FF7B FFE6     	movff	postinc2,postinc1
 25994                           
 25995                           ;stkvar	_new @ sp[(-16)+-4]
 25996  017ECE  0EEC               	movlw	-20
 25997  017ED0  006F FF8F FFE6     	movff	plusw1,postinc1
 25998  017ED6  006F FF8F FFE6     	movff	plusw1,postinc1
 25999  017EDC  006F FF8F FFE6     	movff	plusw1,postinc1
 26000  017EE2  006F FF8F FFE6     	movff	plusw1,postinc1
 26001  017EE8  EC3F  F0D5         	call	___flsub	;wreg free
 26002  017EEC  0060  F0A3  FFE6   	movff	btemp,postinc1
 26003  017EF2  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 26004  017EF8  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 26005  017EFE  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 26006  017F04  EC0F  F099         	call	___flmul	;wreg free
 26007  017F08  0060  F0A3  FFE6   	movff	btemp,postinc1
 26008  017F0E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 26009  017F14  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 26010  017F1A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 26011  017F20  EC24  F09D         	call	___fladd	;wreg free
 26012                           
 26013                           ;stkvar	_bn @ sp[(-4)+-5]
 26014  017F24  0EF7               	movlw	-9
 26015  017F26  50E3               	movf	plusw1,w,c
 26016  017F28  0D04               	mullw	4
 26017  017F2A  0E00               	movlw	low lp_filter@smooth
 26018  017F2C  24F3               	addwf	243,w,c
 26019  017F2E  6ED9               	movwf	fsr2l,c
 26020  017F30  0E03               	movlw	high lp_filter@smooth
 26021  017F32  20F4               	addwfc	prodh,w,c
 26022  017F34  6EDA               	movwf	fsr2h,c
 26023  017F36  0060  F0A3  FFDE   	movff	btemp,postinc2
 26024  017F3C  0060  F0A7  FFDE   	movff	btemp+1,postinc2
 26025  017F42  0060  F0AB  FFDE   	movff	btemp+2,postinc2
 26026  017F48  0060  F0AF  FFDD   	movff	btemp+3,postdec2
 26027  017F4E  52DD               	movf	postdec2,f,c
 26028  017F50  52DD               	movf	postdec2,f,c
 26029  017F52  006F FF78  F028    	movff	postinc2,btemp
 26030  017F58  006F FF78  F029    	movff	postinc2,btemp+1
 26031  017F5E  006F FF78  F02A    	movff	postinc2,btemp+2
 26032  017F64  006F FF78  F02B    	movff	postinc2,btemp+3
 26033  017F6A                     l1825:
 26034                           
 26035                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
 26036  017F6A  0EF6               	movlw	246
 26037  017F6C  26E1               	addwf	fsr1l,f,c
 26038  017F6E  0EFF               	movlw	255
 26039  017F70  22E2               	addwfc	fsr1h,f,c
 26040  017F72  0012               	return		;funcret
 26041  017F74                     __end_of_lp_filter:
 26042                           	opt callstack 0
 26043                           
 26044 ;; *************** function ___flsub *****************
 26045 ;; Defined at:
 26046 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26047 ;; Parameters:    Size  Location     Type
 26048 ;;  b               4  [STACK] float 
 26049 ;;  a               4  [STACK] float 
 26050 ;; Auto vars:     Size  Location     Type
 26051 ;;		None
 26052 ;; Return value:  Size  Location     Type
 26053 ;;                  4  [STACK] float 
 26054 ;; Registers used:
 26055 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26056 ;; Tracked objects:
 26057 ;;		On entry : 0/0
 26058 ;;		On exit  : 0/0
 26059 ;;		Unchanged: 0/0
 26060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26061 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26062 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26064 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26065 ;;Total ram usage:        0 bytes
 26066 ;; Hardware stack levels used:    1
 26067 ;; Hardware stack levels required when called:   16
 26068 ;; This function calls:
 26069 ;;		___fladd
 26070 ;; This function is called by:
 26071 ;;		_conv_raw_result
 26072 ;;		_lp_filter
 26073 ;;		_calc_model_data
 26074 ;;		_calc_ror_data
 26075 ;;		_esr_check
 26076 ;;		_efgtoa
 26077 ;; This function uses a reentrant model
 26078 ;;
 26079                           
 26080                           	psect	text104
 26081  01AA7E                     __ptext104:
 26082                           	opt callstack 0
 26083  01AA7E                     ___flsub:
 26084                           	opt callstack 0
 26085                           
 26086                           ;stkvar	_a @ sp[(0)+-8]
 26087                           
 26088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26089                           ;incstack = 0
 26090 ;; hardware stack exceeded
 26091  01AA7E  0EFB               	movlw	-5
 26092  01AA80  7EE3               	btg	plusw1,7,c
 26093                           
 26094                           ;stkvar	_a @ sp[(0)+-8]
 26095  01AA82  0EF8               	movlw	-8
 26096  01AA84  006F FF8F FFE6     	movff	plusw1,postinc1
 26097  01AA8A  006F FF8F FFE6     	movff	plusw1,postinc1
 26098  01AA90  006F FF8F FFE6     	movff	plusw1,postinc1
 26099  01AA96  006F FF8F FFE6     	movff	plusw1,postinc1
 26100                           
 26101                           ;stkvar	_b @ sp[(-4)+-4]
 26102  01AA9C  0EF8               	movlw	-8
 26103  01AA9E  006F FF8F FFE6     	movff	plusw1,postinc1
 26104  01AAA4  006F FF8F FFE6     	movff	plusw1,postinc1
 26105  01AAAA  006F FF8F FFE6     	movff	plusw1,postinc1
 26106  01AAB0  006F FF8F FFE6     	movff	plusw1,postinc1
 26107  01AAB6  EC24  F09D         	call	___fladd	;wreg free
 26108                           
 26109                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 26110  01AABA  0EF8               	movlw	248
 26111  01AABC  26E1               	addwf	fsr1l,f,c
 26112  01AABE  0EFF               	movlw	255
 26113  01AAC0  22E2               	addwfc	fsr1h,f,c
 26114  01AAC2  0012               	return		;funcret
 26115  01AAC4                     __end_of___flsub:
 26116                           	opt callstack 0
 26117                           
 26118 ;; *************** function ___fladd *****************
 26119 ;; Defined at:
 26120 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 26121 ;; Parameters:    Size  Location     Type
 26122 ;;  b               4  [STACK] float 
 26123 ;;  a               4  [STACK] float 
 26124 ;; Auto vars:     Size  Location     Type
 26125 ;;  grs             1  [STACK] unsigned char 
 26126 ;;  bexp            1  [STACK] unsigned char 
 26127 ;;  aexp            1  [STACK] unsigned char 
 26128 ;;  signs           1  [STACK] unsigned char 
 26129 ;; Return value:  Size  Location     Type
 26130 ;;                  4  [STACK] unsigned char 
 26131 ;; Registers used:
 26132 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 26133 ;; Tracked objects:
 26134 ;;		On entry : 0/0
 26135 ;;		On exit  : 0/0
 26136 ;;		Unchanged: 0/0
 26137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26138 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26141 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26142 ;;Total ram usage:        0 bytes
 26143 ;; Hardware stack levels used:    1
 26144 ;; Hardware stack levels required when called:   15
 26145 ;; This function calls:
 26146 ;;		Nothing
 26147 ;; This function is called by:
 26148 ;;		_main
 26149 ;;		_lp_filter
 26150 ;;		_calc_model_data
 26151 ;;		_calc_bsoc
 26152 ;;		_efgtoa
 26153 ;;		___flsub
 26154 ;; This function uses a reentrant model
 26155 ;;
 26156                           
 26157                           	psect	text105
 26158  013A48                     __ptext105:
 26159                           	opt callstack 0
 26160  013A48                     ___fladd:
 26161                           	opt callstack 0
 26162                           
 26163                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26164  013A48  52E6               	movf	postinc1,f,c
 26165  013A4A  52E6               	movf	postinc1,f,c
 26166  013A4C  52E6               	movf	postinc1,f,c
 26167  013A4E  52E6               	movf	postinc1,f,c
 26168                           
 26169                           ;stkvar	_b @ sp[(-4)+-4]
 26170                           
 26171                           ;incstack = 0
 26172 ;; hardware stack exceeded
 26173  013A50  0EFB               	movlw	251
 26174  013A52  24E1               	addwf	fsr1l,w,c
 26175  013A54  6ED9               	movwf	fsr2l,c
 26176  013A56  0EFF               	movlw	255
 26177  013A58  20E2               	addwfc	fsr1h,w,c
 26178  013A5A  6EDA               	movwf	fsr2h,c
 26179  013A5C  50DF               	movf	indf2,w,c
 26180  013A5E  6E33               	movwf	(btemp+11)^0,c
 26181  013A60  0E80               	movlw	128
 26182  013A62  1633               	andwf	(btemp+11)^0,f,c
 26183                           
 26184                           ;stkvar	_signs @ sp[(-4)+3]
 26185  013A64  0EFF               	movlw	-1
 26186  013A66  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26187                           
 26188                           ;stkvar	_b @ sp[(-4)+-4]
 26189  013A6C  0EFB               	movlw	251
 26190  013A6E  24E1               	addwf	fsr1l,w,c
 26191  013A70  6ED9               	movwf	fsr2l,c
 26192  013A72  0EFF               	movlw	255
 26193  013A74  20E2               	addwfc	fsr1h,w,c
 26194  013A76  6EDA               	movwf	fsr2h,c
 26195  013A78  50DF               	movf	indf2,w,c
 26196  013A7A  6E33               	movwf	(btemp+11)^0,c
 26197  013A7C  90D8               	bcf	status,0,c
 26198  013A7E  3433               	rlcf	(btemp+11)^0,w,c
 26199  013A80  6E32               	movwf	(btemp+10)^0,c
 26200                           
 26201                           ;stkvar	_bexp @ sp[(-4)+1]
 26202  013A82  0EFD               	movlw	-3
 26203  013A84  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26204                           
 26205                           ;stkvar	_b @ sp[(-4)+-4]
 26206  013A8A  0EFA               	movlw	250
 26207  013A8C  24E1               	addwf	fsr1l,w,c
 26208  013A8E  6ED9               	movwf	fsr2l,c
 26209  013A90  0EFF               	movlw	255
 26210  013A92  20E2               	addwfc	fsr1h,w,c
 26211  013A94  6EDA               	movwf	fsr2h,c
 26212  013A96  AEDF               	btfss	indf2,7,c
 26213  013A98  D002               	goto	l7492
 26214                           
 26215                           ;stkvar	_bexp @ sp[(-4)+1]
 26216  013A9A  0EFD               	movlw	-3
 26217  013A9C  80E3               	bsf	plusw1,0,c
 26218  013A9E                     l7492:
 26219                           
 26220                           ;stkvar	_bexp @ sp[(-4)+1]
 26221  013A9E  0EFD               	movlw	-3
 26222  013AA0  50E3               	movf	plusw1,w,c
 26223  013AA2  B4D8               	btfsc	status,2,c
 26224  013AA4  D027               	goto	l7502
 26225                           
 26226                           ;stkvar	_bexp @ sp[(-4)+1]
 26227  013AA6  0EFD               	movlw	-3
 26228  013AA8  28E3               	incf	plusw1,w,c
 26229  013AAA  A4D8               	btfss	status,2,c
 26230  013AAC  D018               	goto	l7498
 26231  013AAE  0E00               	movlw	0
 26232  013AB0  6E30               	movwf	(btemp+8)^0,c
 26233  013AB2  0E00               	movlw	0
 26234  013AB4  6E31               	movwf	(btemp+9)^0,c
 26235  013AB6  0E00               	movlw	0
 26236  013AB8  6E32               	movwf	(btemp+10)^0,c
 26237  013ABA  0E00               	movlw	0
 26238  013ABC  6E33               	movwf	(btemp+11)^0,c
 26239                           
 26240                           ;stkvar	_b @ sp[(-4)+-4]
 26241  013ABE  0EF8               	movlw	-8
 26242  013AC0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26243  013AC6  0EF9               	movlw	-7
 26244  013AC8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26245  013ACE  0EFA               	movlw	-6
 26246  013AD0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26247  013AD6  0EFB               	movlw	-5
 26248  013AD8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26249  013ADE                     l7498:
 26250                           
 26251                           ;stkvar	_b @ sp[(-4)+-4]
 26252  013ADE  0EFA               	movlw	-6
 26253  013AE0  8EE3               	bsf	plusw1,7,c
 26254                           
 26255                           ;stkvar	_b @ sp[(-4)+-4]
 26256  013AE2  0EFB               	movlw	251
 26257  013AE4  24E1               	addwf	fsr1l,w,c
 26258  013AE6  6ED9               	movwf	fsr2l,c
 26259  013AE8  0EFF               	movlw	255
 26260  013AEA  20E2               	addwfc	fsr1h,w,c
 26261  013AEC  6EDA               	movwf	fsr2h,c
 26262  013AEE  0E00               	movlw	0
 26263  013AF0  6EDF               	movwf	indf2,c
 26264  013AF2  D018               	goto	l7504
 26265  013AF4                     l7502:
 26266  013AF4  0E00               	movlw	0
 26267  013AF6  6E30               	movwf	(btemp+8)^0,c
 26268  013AF8  0E00               	movlw	0
 26269  013AFA  6E31               	movwf	(btemp+9)^0,c
 26270  013AFC  0E00               	movlw	0
 26271  013AFE  6E32               	movwf	(btemp+10)^0,c
 26272  013B00  0E00               	movlw	0
 26273  013B02  6E33               	movwf	(btemp+11)^0,c
 26274                           
 26275                           ;stkvar	_b @ sp[(-4)+-4]
 26276  013B04  0EF8               	movlw	-8
 26277  013B06  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26278  013B0C  0EF9               	movlw	-7
 26279  013B0E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26280  013B14  0EFA               	movlw	-6
 26281  013B16  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26282  013B1C  0EFB               	movlw	-5
 26283  013B1E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26284  013B24                     l7504:
 26285                           
 26286                           ;stkvar	_a @ sp[(-4)+-8]
 26287  013B24  0EF7               	movlw	247
 26288  013B26  24E1               	addwf	fsr1l,w,c
 26289  013B28  6ED9               	movwf	fsr2l,c
 26290  013B2A  0EFF               	movlw	255
 26291  013B2C  20E2               	addwfc	fsr1h,w,c
 26292  013B2E  6EDA               	movwf	fsr2h,c
 26293  013B30  50DF               	movf	indf2,w,c
 26294  013B32  6E33               	movwf	(btemp+11)^0,c
 26295  013B34  0E80               	movlw	128
 26296  013B36  1633               	andwf	(btemp+11)^0,f,c
 26297                           
 26298                           ;stkvar	_aexp @ sp[(-4)+2]
 26299  013B38  0EFE               	movlw	-2
 26300  013B3A  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26301                           
 26302                           ;stkvar	_signs @ sp[(-4)+3]
 26303                           ;stkvar	_aexp @ sp[(-4)+2]
 26304  013B40  50E1               	movf	fsr1l,w,c
 26305  013B42  0FFE               	addlw	-2
 26306  013B44  6ED9               	movwf	fsr2l,c
 26307  013B46  50E2               	movf	fsr1h,w,c
 26308  013B48  6EDA               	movwf	fsr2h,c
 26309  013B4A  0EFF               	movlw	255
 26310  013B4C  22DA               	addwfc	fsr2h,f,c
 26311  013B4E  0EFF               	movlw	-1
 26312  013B50  50E3               	movf	plusw1,w,c
 26313  013B52  18DE               	xorwf	postinc2,w,c
 26314  013B54  B4D8               	btfsc	status,2,c
 26315  013B56  D002               	goto	l7510
 26316                           
 26317                           ;stkvar	_signs @ sp[(-4)+3]
 26318  013B58  0EFF               	movlw	-1
 26319  013B5A  8CE3               	bsf	plusw1,6,c
 26320  013B5C                     l7510:
 26321                           
 26322                           ;stkvar	_a @ sp[(-4)+-8]
 26323  013B5C  0EF7               	movlw	247
 26324  013B5E  24E1               	addwf	fsr1l,w,c
 26325  013B60  6ED9               	movwf	fsr2l,c
 26326  013B62  0EFF               	movlw	255
 26327  013B64  20E2               	addwfc	fsr1h,w,c
 26328  013B66  6EDA               	movwf	fsr2h,c
 26329  013B68  50DF               	movf	indf2,w,c
 26330  013B6A  6E33               	movwf	(btemp+11)^0,c
 26331  013B6C  90D8               	bcf	status,0,c
 26332  013B6E  3433               	rlcf	(btemp+11)^0,w,c
 26333  013B70  6E32               	movwf	(btemp+10)^0,c
 26334                           
 26335                           ;stkvar	_aexp @ sp[(-4)+2]
 26336  013B72  0EFE               	movlw	-2
 26337  013B74  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26338                           
 26339                           ;stkvar	_a @ sp[(-4)+-8]
 26340  013B7A  0EF6               	movlw	246
 26341  013B7C  24E1               	addwf	fsr1l,w,c
 26342  013B7E  6ED9               	movwf	fsr2l,c
 26343  013B80  0EFF               	movlw	255
 26344  013B82  20E2               	addwfc	fsr1h,w,c
 26345  013B84  6EDA               	movwf	fsr2h,c
 26346  013B86  AEDF               	btfss	indf2,7,c
 26347  013B88  D002               	goto	l7516
 26348                           
 26349                           ;stkvar	_aexp @ sp[(-4)+2]
 26350  013B8A  0EFE               	movlw	-2
 26351  013B8C  80E3               	bsf	plusw1,0,c
 26352  013B8E                     l7516:
 26353                           
 26354                           ;stkvar	_aexp @ sp[(-4)+2]
 26355  013B8E  0EFE               	movlw	-2
 26356  013B90  50E3               	movf	plusw1,w,c
 26357  013B92  B4D8               	btfsc	status,2,c
 26358  013B94  D027               	goto	l7526
 26359                           
 26360                           ;stkvar	_aexp @ sp[(-4)+2]
 26361  013B96  0EFE               	movlw	-2
 26362  013B98  28E3               	incf	plusw1,w,c
 26363  013B9A  A4D8               	btfss	status,2,c
 26364  013B9C  D018               	goto	l7522
 26365  013B9E  0E00               	movlw	0
 26366  013BA0  6E30               	movwf	(btemp+8)^0,c
 26367  013BA2  0E00               	movlw	0
 26368  013BA4  6E31               	movwf	(btemp+9)^0,c
 26369  013BA6  0E00               	movlw	0
 26370  013BA8  6E32               	movwf	(btemp+10)^0,c
 26371  013BAA  0E00               	movlw	0
 26372  013BAC  6E33               	movwf	(btemp+11)^0,c
 26373                           
 26374                           ;stkvar	_a @ sp[(-4)+-8]
 26375  013BAE  0EF4               	movlw	-12
 26376  013BB0  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26377  013BB6  0EF5               	movlw	-11
 26378  013BB8  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26379  013BBE  0EF6               	movlw	-10
 26380  013BC0  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26381  013BC6  0EF7               	movlw	-9
 26382  013BC8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26383  013BCE                     l7522:
 26384                           
 26385                           ;stkvar	_a @ sp[(-4)+-8]
 26386  013BCE  0EF6               	movlw	-10
 26387  013BD0  8EE3               	bsf	plusw1,7,c
 26388                           
 26389                           ;stkvar	_a @ sp[(-4)+-8]
 26390  013BD2  0EF7               	movlw	247
 26391  013BD4  24E1               	addwf	fsr1l,w,c
 26392  013BD6  6ED9               	movwf	fsr2l,c
 26393  013BD8  0EFF               	movlw	255
 26394  013BDA  20E2               	addwfc	fsr1h,w,c
 26395  013BDC  6EDA               	movwf	fsr2h,c
 26396  013BDE  0E00               	movlw	0
 26397  013BE0  6EDF               	movwf	indf2,c
 26398  013BE2  D018               	goto	l7528
 26399  013BE4                     l7526:
 26400  013BE4  0E00               	movlw	0
 26401  013BE6  6E30               	movwf	(btemp+8)^0,c
 26402  013BE8  0E00               	movlw	0
 26403  013BEA  6E31               	movwf	(btemp+9)^0,c
 26404  013BEC  0E00               	movlw	0
 26405  013BEE  6E32               	movwf	(btemp+10)^0,c
 26406  013BF0  0E00               	movlw	0
 26407  013BF2  6E33               	movwf	(btemp+11)^0,c
 26408                           
 26409                           ;stkvar	_a @ sp[(-4)+-8]
 26410  013BF4  0EF4               	movlw	-12
 26411  013BF6  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 26412  013BFC  0EF5               	movlw	-11
 26413  013BFE  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 26414  013C04  0EF6               	movlw	-10
 26415  013C06  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 26416  013C0C  0EF7               	movlw	-9
 26417  013C0E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26418  013C14                     l7528:
 26419                           
 26420                           ;stkvar	_bexp @ sp[(-4)+1]
 26421                           ;stkvar	_aexp @ sp[(-4)+2]
 26422  013C14  50E1               	movf	fsr1l,w,c
 26423  013C16  0FFE               	addlw	-2
 26424  013C18  6ED9               	movwf	fsr2l,c
 26425  013C1A  50E2               	movf	fsr1h,w,c
 26426  013C1C  6EDA               	movwf	fsr2h,c
 26427  013C1E  0EFF               	movlw	255
 26428  013C20  22DA               	addwfc	fsr2h,f,c
 26429  013C22  0EFD               	movlw	-3
 26430  013C24  50E3               	movf	plusw1,w,c
 26431  013C26  5CDE               	subwf	postinc2,w,c
 26432  013C28  B0D8               	btfsc	status,0,c
 26433  013C2A  D0A4               	goto	l7564
 26434                           
 26435                           ;stkvar	_signs @ sp[(-4)+3]
 26436  013C2C  0EFF               	movlw	-1
 26437  013C2E  ACE3               	btfss	plusw1,6,c
 26438  013C30  D002               	goto	l7534
 26439                           
 26440                           ;stkvar	_signs @ sp[(-4)+3]
 26441  013C32  0EFF               	movlw	-1
 26442  013C34  7EE3               	btg	plusw1,7,c
 26443  013C36                     l7534:
 26444                           
 26445                           ;stkvar	_bexp @ sp[(-4)+1]
 26446                           ;stkvar	_grs @ sp[(-4)+0]
 26447  013C36  0EFD               	movlw	-3
 26448  013C38  006F FF8C  F028    	movff	plusw1,btemp
 26449  013C3E  0EFC               	movlw	-4
 26450  013C40  0060  F0A3  FFE3   	movff	btemp,plusw1
 26451                           
 26452                           ;stkvar	_aexp @ sp[(-4)+2]
 26453                           ;stkvar	_bexp @ sp[(-4)+1]
 26454  013C46  0EFE               	movlw	-2
 26455  013C48  006F FF8C  F028    	movff	plusw1,btemp
 26456  013C4E  0EFD               	movlw	-3
 26457  013C50  0060  F0A3  FFE3   	movff	btemp,plusw1
 26458                           
 26459                           ;stkvar	_grs @ sp[(-4)+0]
 26460                           ;stkvar	_aexp @ sp[(-4)+2]
 26461  013C56  0EFC               	movlw	-4
 26462  013C58  006F FF8C  F028    	movff	plusw1,btemp
 26463  013C5E  0EFE               	movlw	-2
 26464  013C60  0060  F0A3  FFE3   	movff	btemp,plusw1
 26465                           
 26466                           ;stkvar	_b @ sp[(-4)+-4]
 26467                           ;stkvar	_grs @ sp[(-4)+0]
 26468  013C66  0EF8               	movlw	-8
 26469  013C68  006F FF8C  F028    	movff	plusw1,btemp
 26470  013C6E  0EFC               	movlw	-4
 26471  013C70  0060  F0A3  FFE3   	movff	btemp,plusw1
 26472                           
 26473                           ;stkvar	_a @ sp[(-4)+-8]
 26474                           ;stkvar	_b @ sp[(-4)+-4]
 26475  013C76  0EF4               	movlw	-12
 26476  013C78  006F FF8C  F028    	movff	plusw1,btemp
 26477  013C7E  0EF8               	movlw	-8
 26478  013C80  0060  F0A3  FFE3   	movff	btemp,plusw1
 26479                           
 26480                           ;stkvar	_grs @ sp[(-4)+0]
 26481                           ;stkvar	_a @ sp[(-4)+-8]
 26482  013C86  0EFC               	movlw	-4
 26483  013C88  006F FF8C  F028    	movff	plusw1,btemp
 26484  013C8E  0EF4               	movlw	-12
 26485  013C90  0060  F0A3  FFE3   	movff	btemp,plusw1
 26486                           
 26487                           ;stkvar	_b @ sp[(-4)+-4]
 26488  013C96  0EF9               	movlw	249
 26489  013C98  24E1               	addwf	fsr1l,w,c
 26490  013C9A  6ED9               	movwf	fsr2l,c
 26491  013C9C  0EFF               	movlw	255
 26492  013C9E  20E2               	addwfc	fsr1h,w,c
 26493  013CA0  6EDA               	movwf	fsr2h,c
 26494  013CA2  50DF               	movf	indf2,w,c
 26495  013CA4  6E33               	movwf	(btemp+11)^0,c
 26496                           
 26497                           ;stkvar	_grs @ sp[(-4)+0]
 26498  013CA6  0EFC               	movlw	-4
 26499  013CA8  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26500                           
 26501                           ;stkvar	_a @ sp[(-4)+-8]
 26502  013CAE  0EF5               	movlw	245
 26503  013CB0  24E1               	addwf	fsr1l,w,c
 26504  013CB2  6ED9               	movwf	fsr2l,c
 26505  013CB4  0EFF               	movlw	255
 26506  013CB6  20E2               	addwfc	fsr1h,w,c
 26507  013CB8  6EDA               	movwf	fsr2h,c
 26508                           
 26509                           ;stkvar	_b @ sp[(-4)+-4]
 26510  013CBA  0EF9               	movlw	249
 26511  013CBC  24E1               	addwf	fsr1l,w,c
 26512  013CBE  6EE9               	movwf	fsr0l,c
 26513  013CC0  0EFF               	movlw	255
 26514  013CC2  20E2               	addwfc	fsr1h,w,c
 26515  013CC4  6EEA               	movwf	fsr0h,c
 26516  013CC6  006F FF7F FFEF     	movff	indf2,indf0
 26517                           
 26518                           ;stkvar	_grs @ sp[(-4)+0]
 26519                           ;stkvar	_a @ sp[(-4)+-8]
 26520  013CCC  0EF5               	movlw	245
 26521  013CCE  24E1               	addwf	fsr1l,w,c
 26522  013CD0  6ED9               	movwf	fsr2l,c
 26523  013CD2  0EFF               	movlw	255
 26524  013CD4  20E2               	addwfc	fsr1h,w,c
 26525  013CD6  6EDA               	movwf	fsr2h,c
 26526  013CD8  0EFC               	movlw	-4
 26527  013CDA  006F FF8F FFDF     	movff	plusw1,indf2
 26528                           
 26529                           ;stkvar	_b @ sp[(-4)+-4]
 26530  013CE0  0EFA               	movlw	250
 26531  013CE2  24E1               	addwf	fsr1l,w,c
 26532  013CE4  6ED9               	movwf	fsr2l,c
 26533  013CE6  0EFF               	movlw	255
 26534  013CE8  20E2               	addwfc	fsr1h,w,c
 26535  013CEA  6EDA               	movwf	fsr2h,c
 26536  013CEC  50DF               	movf	indf2,w,c
 26537  013CEE  6E33               	movwf	(btemp+11)^0,c
 26538                           
 26539                           ;stkvar	_grs @ sp[(-4)+0]
 26540  013CF0  0EFC               	movlw	-4
 26541  013CF2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26542                           
 26543                           ;stkvar	_a @ sp[(-4)+-8]
 26544  013CF8  0EF6               	movlw	246
 26545  013CFA  24E1               	addwf	fsr1l,w,c
 26546  013CFC  6ED9               	movwf	fsr2l,c
 26547  013CFE  0EFF               	movlw	255
 26548  013D00  20E2               	addwfc	fsr1h,w,c
 26549  013D02  6EDA               	movwf	fsr2h,c
 26550                           
 26551                           ;stkvar	_b @ sp[(-4)+-4]
 26552  013D04  0EFA               	movlw	250
 26553  013D06  24E1               	addwf	fsr1l,w,c
 26554  013D08  6EE9               	movwf	fsr0l,c
 26555  013D0A  0EFF               	movlw	255
 26556  013D0C  20E2               	addwfc	fsr1h,w,c
 26557  013D0E  6EEA               	movwf	fsr0h,c
 26558  013D10  006F FF7F FFEF     	movff	indf2,indf0
 26559                           
 26560                           ;stkvar	_grs @ sp[(-4)+0]
 26561                           ;stkvar	_a @ sp[(-4)+-8]
 26562  013D16  0EF6               	movlw	246
 26563  013D18  24E1               	addwf	fsr1l,w,c
 26564  013D1A  6ED9               	movwf	fsr2l,c
 26565  013D1C  0EFF               	movlw	255
 26566  013D1E  20E2               	addwfc	fsr1h,w,c
 26567  013D20  6EDA               	movwf	fsr2h,c
 26568  013D22  0EFC               	movlw	-4
 26569  013D24  006F FF8F FFDF     	movff	plusw1,indf2
 26570                           
 26571                           ;stkvar	_b @ sp[(-4)+-4]
 26572  013D2A  0EFB               	movlw	251
 26573  013D2C  24E1               	addwf	fsr1l,w,c
 26574  013D2E  6ED9               	movwf	fsr2l,c
 26575  013D30  0EFF               	movlw	255
 26576  013D32  20E2               	addwfc	fsr1h,w,c
 26577  013D34  6EDA               	movwf	fsr2h,c
 26578  013D36  50DF               	movf	indf2,w,c
 26579  013D38  6E33               	movwf	(btemp+11)^0,c
 26580                           
 26581                           ;stkvar	_grs @ sp[(-4)+0]
 26582  013D3A  0EFC               	movlw	-4
 26583  013D3C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26584                           
 26585                           ;stkvar	_a @ sp[(-4)+-8]
 26586  013D42  0EF7               	movlw	247
 26587  013D44  24E1               	addwf	fsr1l,w,c
 26588  013D46  6ED9               	movwf	fsr2l,c
 26589  013D48  0EFF               	movlw	255
 26590  013D4A  20E2               	addwfc	fsr1h,w,c
 26591  013D4C  6EDA               	movwf	fsr2h,c
 26592                           
 26593                           ;stkvar	_b @ sp[(-4)+-4]
 26594  013D4E  0EFB               	movlw	251
 26595  013D50  24E1               	addwf	fsr1l,w,c
 26596  013D52  6EE9               	movwf	fsr0l,c
 26597  013D54  0EFF               	movlw	255
 26598  013D56  20E2               	addwfc	fsr1h,w,c
 26599  013D58  6EEA               	movwf	fsr0h,c
 26600  013D5A  006F FF7F FFEF     	movff	indf2,indf0
 26601                           
 26602                           ;stkvar	_grs @ sp[(-4)+0]
 26603                           ;stkvar	_a @ sp[(-4)+-8]
 26604  013D60  0EF7               	movlw	247
 26605  013D62  24E1               	addwf	fsr1l,w,c
 26606  013D64  6ED9               	movwf	fsr2l,c
 26607  013D66  0EFF               	movlw	255
 26608  013D68  20E2               	addwfc	fsr1h,w,c
 26609  013D6A  6EDA               	movwf	fsr2h,c
 26610  013D6C  0EFC               	movlw	-4
 26611  013D6E  006F FF8F FFDF     	movff	plusw1,indf2
 26612  013D74                     l7564:
 26613                           
 26614                           ;stkvar	_grs @ sp[(-4)+0]
 26615  013D74  0EFC               	movlw	-4
 26616  013D76  6AE3               	clrf	plusw1,c
 26617                           
 26618                           ;stkvar	_aexp @ sp[(-4)+2]
 26619  013D78  0EFE               	movlw	-2
 26620  013D7A  50E3               	movf	plusw1,w,c
 26621  013D7C  6E32               	movwf	(btemp+10)^0,c
 26622  013D7E  6A33               	clrf	(btemp+11)^0,c
 26623                           
 26624                           ;stkvar	_bexp @ sp[(-4)+1]
 26625  013D80  0EFD               	movlw	-3
 26626  013D82  50E3               	movf	plusw1,w,c
 26627  013D84  5E32               	subwf	(btemp+10)^0,f,c
 26628  013D86  0E00               	movlw	0
 26629  013D88  5A33               	subwfb	(btemp+11)^0,f,c
 26630  013D8A  BE33               	btfsc	(btemp+11)^0,7,c
 26631  013D8C  D062               	goto	l7588
 26632  013D8E  5033               	movf	(btemp+11)^0,w,c
 26633  013D90  E104               	bnz	u5340
 26634  013D92  0E1A               	movlw	26
 26635  013D94  5C32               	subwf	(btemp+10)^0,w,c
 26636  013D96  A0D8               	btfss	status,0,c
 26637  013D98  D05C               	goto	l7588
 26638  013D9A                     u5340:
 26639                           
 26640                           ;stkvar	_b @ sp[(-4)+-4]
 26641  013D9A  0EF8               	movlw	-8
 26642  013D9C  50E3               	movf	plusw1,w,c
 26643  013D9E  E10A               	bnz	u5351
 26644  013DA0  0EF9               	movlw	-7
 26645  013DA2  50E3               	movf	plusw1,w,c
 26646  013DA4  E107               	bnz	u5351
 26647  013DA6  0EFA               	movlw	-6
 26648  013DA8  50E3               	movf	plusw1,w,c
 26649  013DAA  E104               	bnz	u5351
 26650  013DAC  0EFB               	movlw	-5
 26651  013DAE  50E3               	movf	plusw1,w,c
 26652  013DB0  B4D8               	btfsc	status,2,c
 26653  013DB2  D003               	goto	u5350
 26654  013DB4                     u5351:
 26655  013DB4  6A33               	clrf	(btemp+11)^0,c
 26656  013DB6  2A33               	incf	(btemp+11)^0,f,c
 26657  013DB8  D001               	goto	u5368
 26658  013DBA                     u5350:
 26659  013DBA  6A33               	clrf	(btemp+11)^0,c
 26660  013DBC                     u5368:
 26661                           
 26662                           ;stkvar	_grs @ sp[(-4)+0]
 26663  013DBC  0EFC               	movlw	-4
 26664  013DBE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26665                           
 26666                           ;stkvar	_b @ sp[(-4)+-4]
 26667  013DC4  0EF8               	movlw	-8
 26668  013DC6  6AE3               	clrf	plusw1,c
 26669  013DC8  0EF9               	movlw	-7
 26670  013DCA  6AE3               	clrf	plusw1,c
 26671  013DCC  0EFA               	movlw	-6
 26672  013DCE  6AE3               	clrf	plusw1,c
 26673  013DD0  0EFB               	movlw	-5
 26674  013DD2  6AE3               	clrf	plusw1,c
 26675                           
 26676                           ;stkvar	_aexp @ sp[(-4)+2]
 26677                           ;stkvar	_bexp @ sp[(-4)+1]
 26678  013DD4  0EFE               	movlw	-2
 26679  013DD6  006F FF8C  F028    	movff	plusw1,btemp
 26680  013DDC  0EFD               	movlw	-3
 26681  013DDE  0060  F0A3  FFE3   	movff	btemp,plusw1
 26682  013DE4  D042               	goto	u5400
 26683  013DE6                     l7574:
 26684                           
 26685                           ;stkvar	_grs @ sp[(-4)+0]
 26686  013DE6  0EFC               	movlw	-4
 26687  013DE8  A0E3               	btfss	plusw1,0,c
 26688  013DEA  D00D               	goto	l7578
 26689                           
 26690                           ;stkvar	_grs @ sp[(-4)+0]
 26691  013DEC  0EFC               	movlw	-4
 26692  013DEE  006F FF8C  F033    	movff	plusw1,btemp+11
 26693  013DF4  90D8               	bcf	status,0,c
 26694  013DF6  3233               	rrcf	(btemp+11)^0,f,c
 26695  013DF8  0E01               	movlw	1
 26696  013DFA  1233               	iorwf	(btemp+11)^0,f,c
 26697                           
 26698                           ;stkvar	_grs @ sp[(-4)+0]
 26699  013DFC  0EFC               	movlw	-4
 26700  013DFE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26701  013E04  D009               	goto	l7580
 26702  013E06                     l7578:
 26703                           
 26704                           ;stkvar	_grs @ sp[(-4)+0]
 26705  013E06  50E1               	movf	fsr1l,w,c
 26706  013E08  0FFC               	addlw	-4
 26707  013E0A  6ED9               	movwf	fsr2l,c
 26708  013E0C  50E2               	movf	fsr1h,w,c
 26709  013E0E  6EDA               	movwf	fsr2h,c
 26710  013E10  0EFF               	movlw	255
 26711  013E12  22DA               	addwfc	fsr2h,f,c
 26712  013E14  90D8               	bcf	status,0,c
 26713  013E16  32DF               	rrcf	indf2,f,c
 26714  013E18                     l7580:
 26715                           
 26716                           ;stkvar	_b @ sp[(-4)+-4]
 26717  013E18  0EF8               	movlw	-8
 26718  013E1A  A0E3               	btfss	plusw1,0,c
 26719  013E1C  D002               	goto	l7584
 26720                           
 26721                           ;stkvar	_grs @ sp[(-4)+0]
 26722  013E1E  0EFC               	movlw	-4
 26723  013E20  8EE3               	bsf	plusw1,7,c
 26724  013E22                     l7584:
 26725  013E22  0E01               	movlw	1
 26726  013E24  6E33               	movwf	(btemp+11)^0,c
 26727                           
 26728                           ;stkvar	_b @ sp[(-4)+-4]
 26729  013E26  50E1               	movf	fsr1l,w,c
 26730  013E28  0FF8               	addlw	-8
 26731  013E2A  6ED9               	movwf	fsr2l,c
 26732  013E2C  50E2               	movf	fsr1h,w,c
 26733  013E2E  6EDA               	movwf	fsr2h,c
 26734  013E30  0EFF               	movlw	255
 26735  013E32  22DA               	addwfc	fsr2h,f,c
 26736  013E34  2833               	incf	(btemp+11)^0,w,c
 26737  013E36  52DE               	movf	postinc2,f,c
 26738  013E38  D008               	goto	u5390
 26739  013E3A                     u5395:
 26740  013E3A  52DE               	movf	postinc2,f,c
 26741  013E3C  90D8               	bcf	status,0,c
 26742  013E3E  BEDC               	btfsc	preinc2,7,c
 26743  013E40  80D8               	bsf	status,0,c
 26744  013E42  32DD               	rrcf	postdec2,f,c
 26745  013E44  32DD               	rrcf	postdec2,f,c
 26746  013E46  32DD               	rrcf	postdec2,f,c
 26747  013E48  32DE               	rrcf	postinc2,f,c
 26748  013E4A                     u5390:
 26749  013E4A  2EE8               	decfsz	wreg,f,c
 26750  013E4C  D7F6               	goto	u5395
 26751                           
 26752                           ;stkvar	_bexp @ sp[(-4)+1]
 26753  013E4E  0EFD               	movlw	-3
 26754  013E50  2AE3               	incf	plusw1,f,c
 26755  013E52                     l7588:
 26756                           
 26757                           ;stkvar	_aexp @ sp[(-4)+2]
 26758                           ;stkvar	_bexp @ sp[(-4)+1]
 26759  013E52  50E1               	movf	fsr1l,w,c
 26760  013E54  0FFD               	addlw	-3
 26761  013E56  6ED9               	movwf	fsr2l,c
 26762  013E58  50E2               	movf	fsr1h,w,c
 26763  013E5A  6EDA               	movwf	fsr2h,c
 26764  013E5C  0EFF               	movlw	255
 26765  013E5E  22DA               	addwfc	fsr2h,f,c
 26766  013E60  0EFE               	movlw	-2
 26767  013E62  50E3               	movf	plusw1,w,c
 26768  013E64  5CDE               	subwf	postinc2,w,c
 26769  013E66  A0D8               	btfss	status,0,c
 26770  013E68  D7BE               	goto	l7574
 26771  013E6A                     u5400:
 26772                           
 26773                           ;stkvar	_signs @ sp[(-4)+3]
 26774  013E6A  0EFF               	movlw	-1
 26775  013E6C  BCE3               	btfsc	plusw1,6,c
 26776  013E6E  D066               	goto	l7616
 26777                           
 26778                           ;stkvar	_bexp @ sp[(-4)+1]
 26779  013E70  0EFD               	movlw	-3
 26780  013E72  50E3               	movf	plusw1,w,c
 26781  013E74  B4D8               	btfsc	status,2,c
 26782  013E76  D0F2               	goto	u5500
 26783                           
 26784                           ;stkvar	_a @ sp[(-4)+-8]
 26785                           ;stkvar	_b @ sp[(-4)+-4]
 26786  013E78  0EF8               	movlw	-8
 26787  013E7A  50E3               	movf	plusw1,w,c
 26788  013E7C  6E28               	movwf	btemp^0,c
 26789  013E7E  0EF4               	movlw	-12
 26790  013E80  50E3               	movf	plusw1,w,c
 26791  013E82  2628               	addwf	btemp^0,f,c
 26792  013E84  0EF8               	movlw	-8
 26793  013E86  0060  F0A3  FFE3   	movff	btemp,plusw1
 26794  013E8C  0EF9               	movlw	-7
 26795  013E8E  50E3               	movf	plusw1,w,c
 26796  013E90  6E28               	movwf	btemp^0,c
 26797  013E92  0EF5               	movlw	-11
 26798  013E94  50E3               	movf	plusw1,w,c
 26799  013E96  2228               	addwfc	btemp^0,f,c
 26800  013E98  0EF9               	movlw	-7
 26801  013E9A  0060  F0A3  FFE3   	movff	btemp,plusw1
 26802  013EA0  0EFA               	movlw	-6
 26803  013EA2  50E3               	movf	plusw1,w,c
 26804  013EA4  6E28               	movwf	btemp^0,c
 26805  013EA6  0EF6               	movlw	-10
 26806  013EA8  50E3               	movf	plusw1,w,c
 26807  013EAA  2228               	addwfc	btemp^0,f,c
 26808  013EAC  0EFA               	movlw	-6
 26809  013EAE  0060  F0A3  FFE3   	movff	btemp,plusw1
 26810  013EB4  0EFB               	movlw	-5
 26811  013EB6  50E3               	movf	plusw1,w,c
 26812  013EB8  6E28               	movwf	btemp^0,c
 26813  013EBA  0EF7               	movlw	-9
 26814  013EBC  50E3               	movf	plusw1,w,c
 26815  013EBE  2228               	addwfc	btemp^0,f,c
 26816  013EC0  0EFB               	movlw	-5
 26817  013EC2  0060  F0A3  FFE3   	movff	btemp,plusw1
 26818                           
 26819                           ;stkvar	_b @ sp[(-4)+-4]
 26820  013EC8  0EFB               	movlw	-5
 26821  013ECA  A0E3               	btfss	plusw1,0,c
 26822  013ECC  D101               	goto	u5540
 26823                           
 26824                           ;stkvar	_grs @ sp[(-4)+0]
 26825  013ECE  0EFC               	movlw	-4
 26826  013ED0  A0E3               	btfss	plusw1,0,c
 26827  013ED2  D00D               	goto	l7606
 26828                           
 26829                           ;stkvar	_grs @ sp[(-4)+0]
 26830  013ED4  0EFC               	movlw	-4
 26831  013ED6  006F FF8C  F033    	movff	plusw1,btemp+11
 26832  013EDC  90D8               	bcf	status,0,c
 26833  013EDE  3233               	rrcf	(btemp+11)^0,f,c
 26834  013EE0  0E01               	movlw	1
 26835  013EE2  1233               	iorwf	(btemp+11)^0,f,c
 26836                           
 26837                           ;stkvar	_grs @ sp[(-4)+0]
 26838  013EE4  0EFC               	movlw	-4
 26839  013EE6  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26840  013EEC  D009               	goto	l7608
 26841  013EEE                     l7606:
 26842                           
 26843                           ;stkvar	_grs @ sp[(-4)+0]
 26844  013EEE  50E1               	movf	fsr1l,w,c
 26845  013EF0  0FFC               	addlw	-4
 26846  013EF2  6ED9               	movwf	fsr2l,c
 26847  013EF4  50E2               	movf	fsr1h,w,c
 26848  013EF6  6EDA               	movwf	fsr2h,c
 26849  013EF8  0EFF               	movlw	255
 26850  013EFA  22DA               	addwfc	fsr2h,f,c
 26851  013EFC  90D8               	bcf	status,0,c
 26852  013EFE  32DF               	rrcf	indf2,f,c
 26853  013F00                     l7608:
 26854                           
 26855                           ;stkvar	_b @ sp[(-4)+-4]
 26856  013F00  0EF8               	movlw	-8
 26857  013F02  A0E3               	btfss	plusw1,0,c
 26858  013F04  D002               	goto	l7612
 26859                           
 26860                           ;stkvar	_grs @ sp[(-4)+0]
 26861  013F06  0EFC               	movlw	-4
 26862  013F08  8EE3               	bsf	plusw1,7,c
 26863  013F0A                     l7612:
 26864  013F0A  0E01               	movlw	1
 26865  013F0C  6E33               	movwf	(btemp+11)^0,c
 26866                           
 26867                           ;stkvar	_b @ sp[(-4)+-4]
 26868  013F0E  50E1               	movf	fsr1l,w,c
 26869  013F10  0FF8               	addlw	-8
 26870  013F12  6ED9               	movwf	fsr2l,c
 26871  013F14  50E2               	movf	fsr1h,w,c
 26872  013F16  6EDA               	movwf	fsr2h,c
 26873  013F18  0EFF               	movlw	255
 26874  013F1A  22DA               	addwfc	fsr2h,f,c
 26875  013F1C  2833               	incf	(btemp+11)^0,w,c
 26876  013F1E  52DE               	movf	postinc2,f,c
 26877  013F20  D008               	goto	u5460
 26878  013F22                     u5465:
 26879  013F22  52DE               	movf	postinc2,f,c
 26880  013F24  90D8               	bcf	status,0,c
 26881  013F26  BEDC               	btfsc	preinc2,7,c
 26882  013F28  80D8               	bsf	status,0,c
 26883  013F2A  32DD               	rrcf	postdec2,f,c
 26884  013F2C  32DD               	rrcf	postdec2,f,c
 26885  013F2E  32DD               	rrcf	postdec2,f,c
 26886  013F30  32DE               	rrcf	postinc2,f,c
 26887  013F32                     u5460:
 26888  013F32  2EE8               	decfsz	wreg,f,c
 26889  013F34  D7F6               	goto	u5465
 26890                           
 26891                           ;stkvar	_bexp @ sp[(-4)+1]
 26892  013F36  0EFD               	movlw	-3
 26893  013F38  2AE3               	incf	plusw1,f,c
 26894  013F3A  D0CA               	goto	u5540
 26895  013F3C                     l7616:
 26896                           
 26897                           ;stkvar	_a @ sp[(-4)+-8]
 26898                           ;stkvar	_b @ sp[(-4)+-4]
 26899  013F3C  50E1               	movf	fsr1l,w,c
 26900  013F3E  0FF8               	addlw	-8
 26901  013F40  6ED9               	movwf	fsr2l,c
 26902  013F42  50E2               	movf	fsr1h,w,c
 26903  013F44  6EDA               	movwf	fsr2h,c
 26904  013F46  0EFF               	movlw	255
 26905  013F48  22DA               	addwfc	fsr2h,f,c
 26906  013F4A  0EF4               	movlw	-12
 26907  013F4C  50E3               	movf	plusw1,w,c
 26908  013F4E  5CDE               	subwf	postinc2,w,c
 26909  013F50  0EF5               	movlw	-11
 26910  013F52  50E3               	movf	plusw1,w,c
 26911  013F54  58DE               	subwfb	postinc2,w,c
 26912  013F56  0EF6               	movlw	-10
 26913  013F58  50E3               	movf	plusw1,w,c
 26914  013F5A  58DE               	subwfb	postinc2,w,c
 26915  013F5C  50DE               	movf	postinc2,w,c
 26916  013F5E  0A80               	xorlw	128
 26917  013F60  6E28               	movwf	btemp^0,c
 26918  013F62  0EF7               	movlw	-9
 26919  013F64  50E3               	movf	plusw1,w,c
 26920  013F66  0A80               	xorlw	128
 26921  013F68  5828               	subwfb	btemp^0,w,c
 26922  013F6A  B0D8               	btfsc	status,0,c
 26923  013F6C  D053               	goto	l7628
 26924                           
 26925                           ;stkvar	_b @ sp[(-4)+-4]
 26926                           ;stkvar	_a @ sp[(-4)+-8]
 26927  013F6E  0EF4               	movlw	-12
 26928  013F70  006F FF8C  F030    	movff	plusw1,btemp+8
 26929  013F76  0EF5               	movlw	-11
 26930  013F78  006F FF8C  F031    	movff	plusw1,btemp+9
 26931  013F7E  0EF6               	movlw	-10
 26932  013F80  006F FF8C  F032    	movff	plusw1,btemp+10
 26933  013F86  0EF7               	movlw	-9
 26934  013F88  006F FF8C  F033    	movff	plusw1,btemp+11
 26935  013F8E  0EF8               	movlw	-8
 26936  013F90  50E3               	movf	plusw1,w,c
 26937  013F92  5E30               	subwf	(btemp+8)^0,f,c
 26938  013F94  0EF9               	movlw	-7
 26939  013F96  50E3               	movf	plusw1,w,c
 26940  013F98  5A31               	subwfb	(btemp+9)^0,f,c
 26941  013F9A  0EFA               	movlw	-6
 26942  013F9C  50E3               	movf	plusw1,w,c
 26943  013F9E  5A32               	subwfb	(btemp+10)^0,f,c
 26944  013FA0  0EFB               	movlw	-5
 26945  013FA2  50E3               	movf	plusw1,w,c
 26946  013FA4  5A33               	subwfb	(btemp+11)^0,f,c
 26947  013FA6  0EFF               	movlw	255
 26948  013FA8  2430               	addwf	(btemp+8)^0,w,c
 26949  013FAA  6E2C               	movwf	(btemp+4)^0,c
 26950  013FAC  0EFF               	movlw	255
 26951  013FAE  2031               	addwfc	(btemp+9)^0,w,c
 26952  013FB0  6E2D               	movwf	(btemp+5)^0,c
 26953  013FB2  0EFF               	movlw	255
 26954  013FB4  2032               	addwfc	(btemp+10)^0,w,c
 26955  013FB6  6E2E               	movwf	(btemp+6)^0,c
 26956  013FB8  0EFF               	movlw	255
 26957  013FBA  2033               	addwfc	(btemp+11)^0,w,c
 26958  013FBC  6E2F               	movwf	(btemp+7)^0,c
 26959                           
 26960                           ;stkvar	_b @ sp[(-4)+-4]
 26961  013FBE  0EF8               	movlw	-8
 26962  013FC0  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 26963  013FC6  0EF9               	movlw	-7
 26964  013FC8  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 26965  013FCE  0EFA               	movlw	-6
 26966  013FD0  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 26967  013FD6  0EFB               	movlw	-5
 26968  013FD8  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 26969                           
 26970                           ;stkvar	_signs @ sp[(-4)+3]
 26971  013FDE  0EFF               	movlw	-1
 26972  013FE0  7EE3               	btg	plusw1,7,c
 26973                           
 26974                           ;stkvar	_grs @ sp[(-4)+0]
 26975  013FE2  0EFC               	movlw	-4
 26976  013FE4  50E3               	movf	plusw1,w,c
 26977  013FE6  0800               	sublw	0
 26978  013FE8  6E33               	movwf	(btemp+11)^0,c
 26979                           
 26980                           ;stkvar	_grs @ sp[(-4)+0]
 26981  013FEA  0EFC               	movlw	-4
 26982  013FEC  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 26983                           
 26984                           ;stkvar	_grs @ sp[(-4)+0]
 26985  013FF2  0EFC               	movlw	-4
 26986  013FF4  50E3               	movf	plusw1,w,c
 26987  013FF6  A4D8               	btfss	status,2,c
 26988  013FF8  D020               	goto	l7630
 26989                           
 26990                           ;stkvar	_b @ sp[(-4)+-4]
 26991  013FFA  50E1               	movf	fsr1l,w,c
 26992  013FFC  0FF8               	addlw	-8
 26993  013FFE  6ED9               	movwf	fsr2l,c
 26994  014000  50E2               	movf	fsr1h,w,c
 26995  014002  6EDA               	movwf	fsr2h,c
 26996  014004  0EFF               	movlw	255
 26997  014006  22DA               	addwfc	fsr2h,f,c
 26998  014008  2ADE               	incf	postinc2,f,c
 26999  01400A  0E00               	movlw	0
 27000  01400C  22DE               	addwfc	postinc2,f,c
 27001  01400E  22DE               	addwfc	postinc2,f,c
 27002  014010  22DE               	addwfc	postinc2,f,c
 27003  014012  D013               	goto	l7630
 27004  014014                     l7628:
 27005                           
 27006                           ;stkvar	_a @ sp[(-4)+-8]
 27007                           ;stkvar	_b @ sp[(-4)+-4]
 27008  014014  50E1               	movf	fsr1l,w,c
 27009  014016  0FF8               	addlw	-8
 27010  014018  6ED9               	movwf	fsr2l,c
 27011  01401A  50E2               	movf	fsr1h,w,c
 27012  01401C  6EDA               	movwf	fsr2h,c
 27013  01401E  0EFF               	movlw	255
 27014  014020  22DA               	addwfc	fsr2h,f,c
 27015  014022  0EF4               	movlw	-12
 27016  014024  50E3               	movf	plusw1,w,c
 27017  014026  5EDE               	subwf	postinc2,f,c
 27018  014028  0EF5               	movlw	-11
 27019  01402A  50E3               	movf	plusw1,w,c
 27020  01402C  5ADE               	subwfb	postinc2,f,c
 27021  01402E  0EF6               	movlw	-10
 27022  014030  50E3               	movf	plusw1,w,c
 27023  014032  5ADE               	subwfb	postinc2,f,c
 27024  014034  0EF7               	movlw	-9
 27025  014036  50E3               	movf	plusw1,w,c
 27026  014038  5ADE               	subwfb	postinc2,f,c
 27027  01403A                     l7630:
 27028                           
 27029                           ;stkvar	_b @ sp[(-4)+-4]
 27030  01403A  0EF8               	movlw	-8
 27031  01403C  50E3               	movf	plusw1,w,c
 27032  01403E  E145               	bnz	l7652
 27033  014040  0EF9               	movlw	-7
 27034  014042  50E3               	movf	plusw1,w,c
 27035  014044  E142               	bnz	l7652
 27036  014046  0EFA               	movlw	-6
 27037  014048  50E3               	movf	plusw1,w,c
 27038  01404A  E13F               	bnz	l7652
 27039  01404C  0EFB               	movlw	-5
 27040  01404E  50E3               	movf	plusw1,w,c
 27041  014050  A4D8               	btfss	status,2,c
 27042  014052  D03B               	goto	l7652
 27043                           
 27044                           ;stkvar	_grs @ sp[(-4)+0]
 27045  014054  0EFC               	movlw	-4
 27046  014056  50E3               	movf	plusw1,w,c
 27047  014058  A4D8               	btfss	status,2,c
 27048  01405A  D037               	goto	l7652
 27049  01405C                     u5500:
 27050  01405C  0E00               	movlw	0
 27051  01405E  6E28               	movwf	btemp^0,c
 27052  014060  0E00               	movlw	0
 27053  014062  6E29               	movwf	(btemp+1)^0,c
 27054  014064  0E00               	movlw	0
 27055  014066  6E2A               	movwf	(btemp+2)^0,c
 27056  014068  0E00               	movlw	0
 27057  01406A  6E2B               	movwf	(btemp+3)^0,c
 27058  01406C  D0C6               	goto	l2894
 27059  01406E                     l7638:
 27060                           
 27061                           ;stkvar	_b @ sp[(-4)+-4]
 27062  01406E  90D8               	bcf	status,0,c
 27063  014070  0EF8               	movlw	-8
 27064  014072  36E3               	rlcf	plusw1,f,c
 27065  014074  0EF9               	movlw	-7
 27066  014076  36E3               	rlcf	plusw1,f,c
 27067  014078  0EFA               	movlw	-6
 27068  01407A  36E3               	rlcf	plusw1,f,c
 27069  01407C  0EFB               	movlw	-5
 27070  01407E  36E3               	rlcf	plusw1,f,c
 27071                           
 27072                           ;stkvar	_grs @ sp[(-4)+0]
 27073  014080  0EFC               	movlw	-4
 27074  014082  AEE3               	btfss	plusw1,7,c
 27075  014084  D002               	goto	l2906
 27076                           
 27077                           ;stkvar	_b @ sp[(-4)+-4]
 27078  014086  0EF8               	movlw	-8
 27079  014088  80E3               	bsf	plusw1,0,c
 27080  01408A                     l2906:
 27081                           
 27082                           ;stkvar	_grs @ sp[(-4)+0]
 27083  01408A  0EFC               	movlw	-4
 27084  01408C  A0E3               	btfss	plusw1,0,c
 27085  01408E  D00E               	goto	l7646
 27086                           
 27087                           ;stkvar	_grs @ sp[(-4)+0]
 27088  014090  0EFC               	movlw	-4
 27089  014092  006F FF8C  F033    	movff	plusw1,btemp+11
 27090  014098  90D8               	bcf	status,0,c
 27091  01409A  3433               	rlcf	(btemp+11)^0,w,c
 27092  01409C  6E32               	movwf	(btemp+10)^0,c
 27093  01409E  0E01               	movlw	1
 27094  0140A0  1232               	iorwf	(btemp+10)^0,f,c
 27095                           
 27096                           ;stkvar	_grs @ sp[(-4)+0]
 27097  0140A2  0EFC               	movlw	-4
 27098  0140A4  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27099  0140AA  D009               	goto	l7648
 27100  0140AC                     l7646:
 27101                           
 27102                           ;stkvar	_grs @ sp[(-4)+0]
 27103  0140AC  50E1               	movf	fsr1l,w,c
 27104  0140AE  0FFC               	addlw	-4
 27105  0140B0  6ED9               	movwf	fsr2l,c
 27106  0140B2  50E2               	movf	fsr1h,w,c
 27107  0140B4  6EDA               	movwf	fsr2h,c
 27108  0140B6  0EFF               	movlw	255
 27109  0140B8  22DA               	addwfc	fsr2h,f,c
 27110  0140BA  90D8               	bcf	status,0,c
 27111  0140BC  36DF               	rlcf	indf2,f,c
 27112  0140BE                     l7648:
 27113                           
 27114                           ;stkvar	_bexp @ sp[(-4)+1]
 27115  0140BE  0EFD               	movlw	-3
 27116  0140C0  50E3               	movf	plusw1,w,c
 27117  0140C2  B4D8               	btfsc	status,2,c
 27118  0140C4  D002               	goto	l7652
 27119                           
 27120                           ;stkvar	_bexp @ sp[(-4)+1]
 27121  0140C6  0EFD               	movlw	-3
 27122  0140C8  06E3               	decf	plusw1,f,c
 27123  0140CA                     l7652:
 27124                           
 27125                           ;stkvar	_b @ sp[(-4)+-4]
 27126  0140CA  0EFA               	movlw	-6
 27127  0140CC  AEE3               	btfss	plusw1,7,c
 27128  0140CE  D7CF               	goto	l7638
 27129  0140D0                     u5540:
 27130                           
 27131                           ;stkvar	_aexp @ sp[(-4)+2]
 27132  0140D0  0EFE               	movlw	-2
 27133  0140D2  6AE3               	clrf	plusw1,c
 27134                           
 27135                           ;stkvar	_grs @ sp[(-4)+0]
 27136  0140D4  0EFC               	movlw	-4
 27137  0140D6  AEE3               	btfss	plusw1,7,c
 27138  0140D8  D00F               	goto	l7666
 27139                           
 27140                           ;stkvar	_grs @ sp[(-4)+0]
 27141  0140DA  0EFC               	movlw	-4
 27142  0140DC  006F FF8C  F033    	movff	plusw1,btemp+11
 27143  0140E2  0E7F               	movlw	127
 27144  0140E4  1633               	andwf	(btemp+11)^0,f,c
 27145  0140E6  B4D8               	btfsc	status,2,c
 27146  0140E8  D004               	goto	l7662
 27147  0140EA                     u5560:
 27148                           
 27149                           ;stkvar	_aexp @ sp[(-4)+2]
 27150  0140EA  0EFE               	movlw	-2
 27151  0140EC  6AE3               	clrf	plusw1,c
 27152  0140EE  2AE3               	incf	plusw1,f,c
 27153  0140F0  D003               	goto	l7666
 27154  0140F2                     l7662:
 27155                           
 27156                           ;stkvar	_b @ sp[(-4)+-4]
 27157  0140F2  0EF8               	movlw	-8
 27158  0140F4  B0E3               	btfsc	plusw1,0,c
 27159  0140F6  D7F9               	goto	u5560
 27160  0140F8                     l7666:
 27161                           
 27162                           ;stkvar	_aexp @ sp[(-4)+2]
 27163  0140F8  0EFE               	movlw	-2
 27164  0140FA  50E3               	movf	plusw1,w,c
 27165  0140FC  B4D8               	btfsc	status,2,c
 27166  0140FE  D02B               	goto	l7678
 27167                           
 27168                           ;stkvar	_b @ sp[(-4)+-4]
 27169  014100  50E1               	movf	fsr1l,w,c
 27170  014102  0FF8               	addlw	-8
 27171  014104  6ED9               	movwf	fsr2l,c
 27172  014106  50E2               	movf	fsr1h,w,c
 27173  014108  6EDA               	movwf	fsr2h,c
 27174  01410A  0EFF               	movlw	255
 27175  01410C  22DA               	addwfc	fsr2h,f,c
 27176  01410E  2ADE               	incf	postinc2,f,c
 27177  014110  0E00               	movlw	0
 27178  014112  22DE               	addwfc	postinc2,f,c
 27179  014114  22DE               	addwfc	postinc2,f,c
 27180  014116  22DE               	addwfc	postinc2,f,c
 27181                           
 27182                           ;stkvar	_b @ sp[(-4)+-4]
 27183  014118  0EFB               	movlw	-5
 27184  01411A  A0E3               	btfss	plusw1,0,c
 27185  01411C  D01C               	goto	l7678
 27186  01411E  0E01               	movlw	1
 27187  014120  6E33               	movwf	(btemp+11)^0,c
 27188                           
 27189                           ;stkvar	_b @ sp[(-4)+-4]
 27190  014122  50E1               	movf	fsr1l,w,c
 27191  014124  0FF8               	addlw	-8
 27192  014126  6ED9               	movwf	fsr2l,c
 27193  014128  50E2               	movf	fsr1h,w,c
 27194  01412A  6EDA               	movwf	fsr2h,c
 27195  01412C  0EFF               	movlw	255
 27196  01412E  22DA               	addwfc	fsr2h,f,c
 27197  014130  2833               	incf	(btemp+11)^0,w,c
 27198  014132  52DE               	movf	postinc2,f,c
 27199  014134  D008               	goto	u5600
 27200  014136                     u5605:
 27201  014136  52DE               	movf	postinc2,f,c
 27202  014138  90D8               	bcf	status,0,c
 27203  01413A  BEDC               	btfsc	preinc2,7,c
 27204  01413C  80D8               	bsf	status,0,c
 27205  01413E  32DD               	rrcf	postdec2,f,c
 27206  014140  32DD               	rrcf	postdec2,f,c
 27207  014142  32DD               	rrcf	postdec2,f,c
 27208  014144  32DE               	rrcf	postinc2,f,c
 27209  014146                     u5600:
 27210  014146  2EE8               	decfsz	wreg,f,c
 27211  014148  D7F6               	goto	u5605
 27212                           
 27213                           ;stkvar	_bexp @ sp[(-4)+1]
 27214  01414A  0EFD               	movlw	-3
 27215  01414C  28E3               	incf	plusw1,w,c
 27216  01414E  B4D8               	btfsc	status,2,c
 27217  014150  D002               	goto	l7678
 27218                           
 27219                           ;stkvar	_bexp @ sp[(-4)+1]
 27220  014152  0EFD               	movlw	-3
 27221  014154  2AE3               	incf	plusw1,f,c
 27222  014156                     l7678:
 27223                           
 27224                           ;stkvar	_bexp @ sp[(-4)+1]
 27225  014156  0EFD               	movlw	-3
 27226  014158  28E3               	incf	plusw1,w,c
 27227  01415A  B4D8               	btfsc	status,2,c
 27228  01415C  D004               	goto	u5630
 27229                           
 27230                           ;stkvar	_bexp @ sp[(-4)+1]
 27231  01415E  0EFD               	movlw	-3
 27232  014160  50E3               	movf	plusw1,w,c
 27233  014162  A4D8               	btfss	status,2,c
 27234  014164  D00E               	goto	l7688
 27235  014166                     u5630:
 27236                           
 27237                           ;stkvar	_b @ sp[(-4)+-4]
 27238  014166  0EF8               	movlw	-8
 27239  014168  6AE3               	clrf	plusw1,c
 27240  01416A  0EF9               	movlw	-7
 27241  01416C  6AE3               	clrf	plusw1,c
 27242  01416E  0EFA               	movlw	-6
 27243  014170  6AE3               	clrf	plusw1,c
 27244  014172  0EFB               	movlw	-5
 27245  014174  6AE3               	clrf	plusw1,c
 27246                           
 27247                           ;stkvar	_bexp @ sp[(-4)+1]
 27248  014176  0EFD               	movlw	-3
 27249  014178  50E3               	movf	plusw1,w,c
 27250  01417A  A4D8               	btfss	status,2,c
 27251  01417C  D002               	goto	l7688
 27252                           
 27253                           ;stkvar	_signs @ sp[(-4)+3]
 27254  01417E  0EFF               	movlw	-1
 27255  014180  6AE3               	clrf	plusw1,c
 27256  014182                     l7688:
 27257                           
 27258                           ;stkvar	_bexp @ sp[(-4)+1]
 27259  014182  0EFD               	movlw	-3
 27260  014184  A0E3               	btfss	plusw1,0,c
 27261  014186  D009               	goto	l7692
 27262                           
 27263                           ;stkvar	_b @ sp[(-4)+-4]
 27264  014188  0EFA               	movlw	250
 27265  01418A  24E1               	addwf	fsr1l,w,c
 27266  01418C  6ED9               	movwf	fsr2l,c
 27267  01418E  0EFF               	movlw	255
 27268  014190  20E2               	addwfc	fsr1h,w,c
 27269  014192  6EDA               	movwf	fsr2h,c
 27270  014194  0E00               	movlw	0
 27271  014196  8EDB               	bsf	plusw2,7,c
 27272  014198  D008               	goto	l7694
 27273  01419A                     l7692:
 27274                           
 27275                           ;stkvar	_b @ sp[(-4)+-4]
 27276  01419A  0EFA               	movlw	250
 27277  01419C  24E1               	addwf	fsr1l,w,c
 27278  01419E  6ED9               	movwf	fsr2l,c
 27279  0141A0  0EFF               	movlw	255
 27280  0141A2  20E2               	addwfc	fsr1h,w,c
 27281  0141A4  6EDA               	movwf	fsr2h,c
 27282  0141A6  0E7F               	movlw	127
 27283  0141A8  16DF               	andwf	indf2,f,c
 27284  0141AA                     l7694:
 27285                           
 27286                           ;stkvar	_b @ sp[(-4)+-4]
 27287  0141AA  0EFB               	movlw	251
 27288  0141AC  24E1               	addwf	fsr1l,w,c
 27289  0141AE  6ED9               	movwf	fsr2l,c
 27290  0141B0  0EFF               	movlw	255
 27291  0141B2  20E2               	addwfc	fsr1h,w,c
 27292  0141B4  6EDA               	movwf	fsr2h,c
 27293                           
 27294                           ;stkvar	_bexp @ sp[(-4)+1]
 27295  0141B6  0EFD               	movlw	-3
 27296  0141B8  006F FF8C  F033    	movff	plusw1,btemp+11
 27297  0141BE  90D8               	bcf	status,0,c
 27298  0141C0  3033               	rrcf	(btemp+11)^0,w,c
 27299  0141C2  6EDF               	movwf	indf2,c
 27300                           
 27301                           ;stkvar	_signs @ sp[(-4)+3]
 27302  0141C4  0EFF               	movlw	-1
 27303  0141C6  AEE3               	btfss	plusw1,7,c
 27304  0141C8  D008               	goto	l7700
 27305                           
 27306                           ;stkvar	_b @ sp[(-4)+-4]
 27307  0141CA  0EFB               	movlw	251
 27308  0141CC  24E1               	addwf	fsr1l,w,c
 27309  0141CE  6ED9               	movwf	fsr2l,c
 27310  0141D0  0EFF               	movlw	255
 27311  0141D2  20E2               	addwfc	fsr1h,w,c
 27312  0141D4  6EDA               	movwf	fsr2h,c
 27313  0141D6  0E00               	movlw	0
 27314  0141D8  8EDB               	bsf	plusw2,7,c
 27315  0141DA                     l7700:
 27316                           
 27317                           ;stkvar	_b @ sp[(-4)+-4]
 27318  0141DA  0EF8               	movlw	-8
 27319  0141DC  006F FF8C  F028    	movff	plusw1,btemp
 27320  0141E2  0EF9               	movlw	-7
 27321  0141E4  006F FF8C  F029    	movff	plusw1,btemp+1
 27322  0141EA  0EFA               	movlw	-6
 27323  0141EC  006F FF8C  F02A    	movff	plusw1,btemp+2
 27324  0141F2  0EFB               	movlw	-5
 27325  0141F4  006F FF8C  F02B    	movff	plusw1,btemp+3
 27326  0141FA                     l2894:
 27327                           
 27328                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 27329  0141FA  0EF4               	movlw	244
 27330  0141FC  26E1               	addwf	fsr1l,f,c
 27331  0141FE  0EFF               	movlw	255
 27332  014200  22E2               	addwfc	fsr1h,f,c
 27333  014202  0012               	return		;funcret
 27334  014204                     __end_of___fladd:
 27335                           	opt callstack 0
 27336                           
 27337 ;; *************** function ___flmul *****************
 27338 ;; Defined at:
 27339 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 27340 ;; Parameters:    Size  Location     Type
 27341 ;;  b               4  [STACK] unsigned char 
 27342 ;;  a               4  [STACK] unsigned char 
 27343 ;; Auto vars:     Size  Location     Type
 27344 ;;  prod            4  [STACK] struct .
 27345 ;;  grs             4  [STACK] unsigned long 
 27346 ;;  temp            2  [STACK] struct .
 27347 ;;  bexp            1  [STACK] unsigned char 
 27348 ;;  aexp            1  [STACK] unsigned char 
 27349 ;;  sign            1  [STACK] unsigned char 
 27350 ;; Return value:  Size  Location     Type
 27351 ;;                  4  [STACK] unsigned char 
 27352 ;; Registers used:
 27353 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 27354 ;; Tracked objects:
 27355 ;;		On entry : 0/1
 27356 ;;		On exit  : 0/0
 27357 ;;		Unchanged: 0/0
 27358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27363 ;;Total ram usage:        0 bytes
 27364 ;; Hardware stack levels used:    1
 27365 ;; Hardware stack levels required when called:   15
 27366 ;; This function calls:
 27367 ;;		Nothing
 27368 ;; This function is called by:
 27369 ;;		_conv_raw_result
 27370 ;;		_lp_filter
 27371 ;;		_calc_model_data
 27372 ;;		_calc_bsoc
 27373 ;;		_init_bsoc
 27374 ;;		_efgtoa
 27375 ;; This function uses a reentrant model
 27376 ;;
 27377                           
 27378                           	psect	text106
 27379  01321E                     __ptext106:
 27380                           	opt callstack 0
 27381  01321E                     ___flmul:
 27382                           	opt callstack 0
 27383                           
 27384                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 27385  01321E  0E0D               	movlw	13
 27386  013220  26E1               	addwf	fsr1l,f,c
 27387  013222  0E00               	movlw	0
 27388  013224  22E2               	addwfc	fsr1h,f,c
 27389                           
 27390                           ;stkvar	_b @ sp[(-13)+-4]
 27391                           
 27392                           ;incstack = 0
 27393 ;; hardware stack exceeded
 27394  013226  0EF2               	movlw	242
 27395  013228  24E1               	addwf	fsr1l,w,c
 27396  01322A  6ED9               	movwf	fsr2l,c
 27397  01322C  0EFF               	movlw	255
 27398  01322E  20E2               	addwfc	fsr1h,w,c
 27399  013230  6EDA               	movwf	fsr2h,c
 27400  013232  50DF               	movf	indf2,w,c
 27401  013234  6E33               	movwf	(btemp+11)^0,c
 27402  013236  0E80               	movlw	128
 27403  013238  1633               	andwf	(btemp+11)^0,f,c
 27404                           
 27405                           ;stkvar	_sign @ sp[(-13)+12]
 27406  01323A  0EFF               	movlw	-1
 27407  01323C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27408                           
 27409                           ;stkvar	_b @ sp[(-13)+-4]
 27410  013242  0EF2               	movlw	242
 27411  013244  24E1               	addwf	fsr1l,w,c
 27412  013246  6ED9               	movwf	fsr2l,c
 27413  013248  0EFF               	movlw	255
 27414  01324A  20E2               	addwfc	fsr1h,w,c
 27415  01324C  6EDA               	movwf	fsr2h,c
 27416  01324E  50DF               	movf	indf2,w,c
 27417  013250  6E33               	movwf	(btemp+11)^0,c
 27418  013252  90D8               	bcf	status,0,c
 27419  013254  3433               	rlcf	(btemp+11)^0,w,c
 27420  013256  6E32               	movwf	(btemp+10)^0,c
 27421                           
 27422                           ;stkvar	_bexp @ sp[(-13)+10]
 27423  013258  0EFD               	movlw	-3
 27424  01325A  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27425                           
 27426                           ;stkvar	_b @ sp[(-13)+-4]
 27427  013260  0EF1               	movlw	241
 27428  013262  24E1               	addwf	fsr1l,w,c
 27429  013264  6ED9               	movwf	fsr2l,c
 27430  013266  0EFF               	movlw	255
 27431  013268  20E2               	addwfc	fsr1h,w,c
 27432  01326A  6EDA               	movwf	fsr2h,c
 27433  01326C  AEDF               	btfss	indf2,7,c
 27434  01326E  D002               	goto	l8084
 27435                           
 27436                           ;stkvar	_bexp @ sp[(-13)+10]
 27437  013270  0EFD               	movlw	-3
 27438  013272  80E3               	bsf	plusw1,0,c
 27439  013274                     l8084:
 27440                           
 27441                           ;stkvar	_bexp @ sp[(-13)+10]
 27442  013274  0EFD               	movlw	-3
 27443  013276  50E3               	movf	plusw1,w,c
 27444  013278  B4D8               	btfsc	status,2,c
 27445  01327A  D01F               	goto	l8092
 27446                           
 27447                           ;stkvar	_bexp @ sp[(-13)+10]
 27448  01327C  0EFD               	movlw	-3
 27449  01327E  28E3               	incf	plusw1,w,c
 27450  013280  A4D8               	btfss	status,2,c
 27451  013282  D018               	goto	l8090
 27452  013284  0E00               	movlw	0
 27453  013286  6E30               	movwf	(btemp+8)^0,c
 27454  013288  0E00               	movlw	0
 27455  01328A  6E31               	movwf	(btemp+9)^0,c
 27456  01328C  0E00               	movlw	0
 27457  01328E  6E32               	movwf	(btemp+10)^0,c
 27458  013290  0E00               	movlw	0
 27459  013292  6E33               	movwf	(btemp+11)^0,c
 27460                           
 27461                           ;stkvar	_b @ sp[(-13)+-4]
 27462  013294  0EEF               	movlw	-17
 27463  013296  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27464  01329C  0EF0               	movlw	-16
 27465  01329E  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27466  0132A4  0EF1               	movlw	-15
 27467  0132A6  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27468  0132AC  0EF2               	movlw	-14
 27469  0132AE  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27470  0132B4                     l8090:
 27471                           
 27472                           ;stkvar	_b @ sp[(-13)+-4]
 27473  0132B4  0EF1               	movlw	-15
 27474  0132B6  8EE3               	bsf	plusw1,7,c
 27475  0132B8  D018               	goto	l8094
 27476  0132BA                     l8092:
 27477  0132BA  0E00               	movlw	0
 27478  0132BC  6E30               	movwf	(btemp+8)^0,c
 27479  0132BE  0E00               	movlw	0
 27480  0132C0  6E31               	movwf	(btemp+9)^0,c
 27481  0132C2  0E00               	movlw	0
 27482  0132C4  6E32               	movwf	(btemp+10)^0,c
 27483  0132C6  0E00               	movlw	0
 27484  0132C8  6E33               	movwf	(btemp+11)^0,c
 27485                           
 27486                           ;stkvar	_b @ sp[(-13)+-4]
 27487  0132CA  0EEF               	movlw	-17
 27488  0132CC  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27489  0132D2  0EF0               	movlw	-16
 27490  0132D4  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27491  0132DA  0EF1               	movlw	-15
 27492  0132DC  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27493  0132E2  0EF2               	movlw	-14
 27494  0132E4  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27495  0132EA                     l8094:
 27496                           
 27497                           ;stkvar	_a @ sp[(-13)+-8]
 27498  0132EA  0EEE               	movlw	238
 27499  0132EC  24E1               	addwf	fsr1l,w,c
 27500  0132EE  6ED9               	movwf	fsr2l,c
 27501  0132F0  0EFF               	movlw	255
 27502  0132F2  20E2               	addwfc	fsr1h,w,c
 27503  0132F4  6EDA               	movwf	fsr2h,c
 27504  0132F6  50DF               	movf	indf2,w,c
 27505  0132F8  6E33               	movwf	(btemp+11)^0,c
 27506  0132FA  0E80               	movlw	128
 27507  0132FC  1633               	andwf	(btemp+11)^0,f,c
 27508                           
 27509                           ;stkvar	_sign @ sp[(-13)+12]
 27510  0132FE  50E1               	movf	fsr1l,w,c
 27511  013300  0FFF               	addlw	-1
 27512  013302  6ED9               	movwf	fsr2l,c
 27513  013304  50E2               	movf	fsr1h,w,c
 27514  013306  6EDA               	movwf	fsr2h,c
 27515  013308  0EFF               	movlw	255
 27516  01330A  22DA               	addwfc	fsr2h,f,c
 27517  01330C  5033               	movf	(btemp+11)^0,w,c
 27518  01330E  1ADF               	xorwf	indf2,f,c
 27519                           
 27520                           ;stkvar	_a @ sp[(-13)+-8]
 27521  013310  0EEE               	movlw	238
 27522  013312  24E1               	addwf	fsr1l,w,c
 27523  013314  6ED9               	movwf	fsr2l,c
 27524  013316  0EFF               	movlw	255
 27525  013318  20E2               	addwfc	fsr1h,w,c
 27526  01331A  6EDA               	movwf	fsr2h,c
 27527  01331C  50DF               	movf	indf2,w,c
 27528  01331E  6E33               	movwf	(btemp+11)^0,c
 27529  013320  90D8               	bcf	status,0,c
 27530  013322  3433               	rlcf	(btemp+11)^0,w,c
 27531  013324  6E32               	movwf	(btemp+10)^0,c
 27532                           
 27533                           ;stkvar	_aexp @ sp[(-13)+11]
 27534  013326  0EFE               	movlw	-2
 27535  013328  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27536                           
 27537                           ;stkvar	_a @ sp[(-13)+-8]
 27538  01332E  0EED               	movlw	237
 27539  013330  24E1               	addwf	fsr1l,w,c
 27540  013332  6ED9               	movwf	fsr2l,c
 27541  013334  0EFF               	movlw	255
 27542  013336  20E2               	addwfc	fsr1h,w,c
 27543  013338  6EDA               	movwf	fsr2h,c
 27544  01333A  AEDF               	btfss	indf2,7,c
 27545  01333C  D002               	goto	l8102
 27546                           
 27547                           ;stkvar	_aexp @ sp[(-13)+11]
 27548  01333E  0EFE               	movlw	-2
 27549  013340  80E3               	bsf	plusw1,0,c
 27550  013342                     l8102:
 27551                           
 27552                           ;stkvar	_aexp @ sp[(-13)+11]
 27553  013342  0EFE               	movlw	-2
 27554  013344  50E3               	movf	plusw1,w,c
 27555  013346  B4D8               	btfsc	status,2,c
 27556  013348  D01F               	goto	l8110
 27557                           
 27558                           ;stkvar	_aexp @ sp[(-13)+11]
 27559  01334A  0EFE               	movlw	-2
 27560  01334C  28E3               	incf	plusw1,w,c
 27561  01334E  A4D8               	btfss	status,2,c
 27562  013350  D018               	goto	l8108
 27563  013352  0E00               	movlw	0
 27564  013354  6E30               	movwf	(btemp+8)^0,c
 27565  013356  0E00               	movlw	0
 27566  013358  6E31               	movwf	(btemp+9)^0,c
 27567  01335A  0E00               	movlw	0
 27568  01335C  6E32               	movwf	(btemp+10)^0,c
 27569  01335E  0E00               	movlw	0
 27570  013360  6E33               	movwf	(btemp+11)^0,c
 27571                           
 27572                           ;stkvar	_a @ sp[(-13)+-8]
 27573  013362  0EEB               	movlw	-21
 27574  013364  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27575  01336A  0EEC               	movlw	-20
 27576  01336C  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27577  013372  0EED               	movlw	-19
 27578  013374  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27579  01337A  0EEE               	movlw	-18
 27580  01337C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27581  013382                     l8108:
 27582                           
 27583                           ;stkvar	_a @ sp[(-13)+-8]
 27584  013382  0EED               	movlw	-19
 27585  013384  8EE3               	bsf	plusw1,7,c
 27586  013386  D018               	goto	l8112
 27587  013388                     l8110:
 27588  013388  0E00               	movlw	0
 27589  01338A  6E30               	movwf	(btemp+8)^0,c
 27590  01338C  0E00               	movlw	0
 27591  01338E  6E31               	movwf	(btemp+9)^0,c
 27592  013390  0E00               	movlw	0
 27593  013392  6E32               	movwf	(btemp+10)^0,c
 27594  013394  0E00               	movlw	0
 27595  013396  6E33               	movwf	(btemp+11)^0,c
 27596                           
 27597                           ;stkvar	_a @ sp[(-13)+-8]
 27598  013398  0EEB               	movlw	-21
 27599  01339A  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 27600  0133A0  0EEC               	movlw	-20
 27601  0133A2  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 27602  0133A8  0EED               	movlw	-19
 27603  0133AA  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 27604  0133B0  0EEE               	movlw	-18
 27605  0133B2  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 27606  0133B8                     l8112:
 27607                           
 27608                           ;stkvar	_aexp @ sp[(-13)+11]
 27609  0133B8  0EFE               	movlw	-2
 27610  0133BA  50E3               	movf	plusw1,w,c
 27611  0133BC  B4D8               	btfsc	status,2,c
 27612  0133BE  D004               	goto	u6570
 27613                           
 27614                           ;stkvar	_bexp @ sp[(-13)+10]
 27615  0133C0  0EFD               	movlw	-3
 27616  0133C2  50E3               	movf	plusw1,w,c
 27617  0133C4  A4D8               	btfss	status,2,c
 27618  0133C6  D009               	goto	l8120
 27619  0133C8                     u6570:
 27620  0133C8  0E00               	movlw	0
 27621  0133CA  6E28               	movwf	btemp^0,c
 27622  0133CC  0E00               	movlw	0
 27623  0133CE  6E29               	movwf	(btemp+1)^0,c
 27624  0133D0  0E00               	movlw	0
 27625  0133D2  6E2A               	movwf	(btemp+2)^0,c
 27626  0133D4  0E00               	movlw	0
 27627  0133D6  6E2B               	movwf	(btemp+3)^0,c
 27628  0133D8  D332               	goto	l2975
 27629  0133DA                     l8120:
 27630                           
 27631                           ;stkvar	_b @ sp[(-13)+-4]
 27632  0133DA  0EEF               	movlw	-17
 27633  0133DC  006F FF8C  F033    	movff	plusw1,btemp+11
 27634                           
 27635                           ;stkvar	_a @ sp[(-13)+-8]
 27636  0133E2  0EED               	movlw	237
 27637  0133E4  24E1               	addwf	fsr1l,w,c
 27638  0133E6  6ED9               	movwf	fsr2l,c
 27639  0133E8  0EFF               	movlw	255
 27640  0133EA  20E2               	addwfc	fsr1h,w,c
 27641  0133EC  6EDA               	movwf	fsr2h,c
 27642  0133EE  50DF               	movf	indf2,w,c
 27643  0133F0  0233               	mulwf	(btemp+11)^0,c
 27644                           
 27645                           ;stkvar	_temp @ sp[(-13)+8]
 27646  0133F2  0EFB               	movlw	-5
 27647  0133F4  006F FFCF FFE3     	movff	prodl,plusw1
 27648  0133FA  0EFC               	movlw	-4
 27649  0133FC  006F FFD3 FFE3     	movff	prodh,plusw1
 27650                           
 27651                           ;stkvar	_temp @ sp[(-13)+8]
 27652  013402  0EFB               	movlw	-5
 27653  013404  006F FF8C  F033    	movff	plusw1,btemp+11
 27654  01340A  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 27655  013410  6A2D               	clrf	(btemp+5)^0,c
 27656  013412  6A2E               	clrf	(btemp+6)^0,c
 27657  013414  6A2F               	clrf	(btemp+7)^0,c
 27658                           
 27659                           ;stkvar	_grs @ sp[(-13)+4]
 27660  013416  0EF7               	movlw	-9
 27661  013418  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 27662  01341E  0EF8               	movlw	-8
 27663  013420  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 27664  013426  0EF9               	movlw	-7
 27665  013428  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 27666  01342E  0EFA               	movlw	-6
 27667  013430  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 27668                           
 27669                           ;stkvar	_temp @ sp[(-13)+8]
 27670  013436  0EFC               	movlw	252
 27671  013438  24E1               	addwf	fsr1l,w,c
 27672  01343A  6ED9               	movwf	fsr2l,c
 27673  01343C  0EFF               	movlw	255
 27674  01343E  20E2               	addwfc	fsr1h,w,c
 27675  013440  6EDA               	movwf	fsr2h,c
 27676  013442  50DF               	movf	indf2,w,c
 27677  013444  6E33               	movwf	(btemp+11)^0,c
 27678  013446  0060  F0CC  F02C   	movff	btemp+11,btemp+4
 27679  01344C  6A2D               	clrf	(btemp+5)^0,c
 27680  01344E  6A2E               	clrf	(btemp+6)^0,c
 27681  013450  6A2F               	clrf	(btemp+7)^0,c
 27682                           
 27683                           ;stkvar	_prod @ sp[(-13)+0]
 27684  013452  0EF3               	movlw	-13
 27685  013454  0060  F0B3  FFE3   	movff	btemp+4,plusw1
 27686  01345A  0EF4               	movlw	-12
 27687  01345C  0060  F0B7  FFE3   	movff	btemp+5,plusw1
 27688  013462  0EF5               	movlw	-11
 27689  013464  0060  F0BB  FFE3   	movff	btemp+6,plusw1
 27690  01346A  0EF6               	movlw	-10
 27691  01346C  0060  F0BF  FFE3   	movff	btemp+7,plusw1
 27692                           
 27693                           ;stkvar	_b @ sp[(-13)+-4]
 27694  013472  0EF0               	movlw	240
 27695  013474  24E1               	addwf	fsr1l,w,c
 27696  013476  6ED9               	movwf	fsr2l,c
 27697  013478  0EFF               	movlw	255
 27698  01347A  20E2               	addwfc	fsr1h,w,c
 27699  01347C  6EDA               	movwf	fsr2h,c
 27700  01347E  50DF               	movf	indf2,w,c
 27701  013480  6E33               	movwf	(btemp+11)^0,c
 27702                           
 27703                           ;stkvar	_a @ sp[(-13)+-8]
 27704  013482  0EEC               	movlw	236
 27705  013484  24E1               	addwf	fsr1l,w,c
 27706  013486  6ED9               	movwf	fsr2l,c
 27707  013488  0EFF               	movlw	255
 27708  01348A  20E2               	addwfc	fsr1h,w,c
 27709  01348C  6EDA               	movwf	fsr2h,c
 27710  01348E  50DF               	movf	indf2,w,c
 27711  013490  0233               	mulwf	(btemp+11)^0,c
 27712                           
 27713                           ;stkvar	_temp @ sp[(-13)+8]
 27714  013492  0EFB               	movlw	-5
 27715  013494  006F FFCF FFE3     	movff	prodl,plusw1
 27716  01349A  0EFC               	movlw	-4
 27717  01349C  006F FFD3 FFE3     	movff	prodh,plusw1
 27718                           
 27719                           ;stkvar	_grs @ sp[(-13)+4]
 27720  0134A2  50E1               	movf	fsr1l,w,c
 27721  0134A4  0FF7               	addlw	-9
 27722  0134A6  6ED9               	movwf	fsr2l,c
 27723  0134A8  50E2               	movf	fsr1h,w,c
 27724  0134AA  6EDA               	movwf	fsr2h,c
 27725  0134AC  0EFF               	movlw	255
 27726  0134AE  22DA               	addwfc	fsr2h,f,c
 27727                           
 27728                           ;stkvar	_temp @ sp[(-13)+8]
 27729  0134B0  0EFB               	movlw	-5
 27730  0134B2  50E3               	movf	plusw1,w,c
 27731  0134B4  26DE               	addwf	postinc2,f,c
 27732  0134B6  0E00               	movlw	0
 27733  0134B8  22DE               	addwfc	postinc2,f,c
 27734  0134BA  22DE               	addwfc	postinc2,f,c
 27735  0134BC  22DE               	addwfc	postinc2,f,c
 27736                           
 27737                           ;stkvar	_prod @ sp[(-13)+0]
 27738  0134BE  50E1               	movf	fsr1l,w,c
 27739  0134C0  0FF3               	addlw	-13
 27740  0134C2  6ED9               	movwf	fsr2l,c
 27741  0134C4  50E2               	movf	fsr1h,w,c
 27742  0134C6  6EDA               	movwf	fsr2h,c
 27743  0134C8  0EFF               	movlw	255
 27744  0134CA  22DA               	addwfc	fsr2h,f,c
 27745                           
 27746                           ;stkvar	_temp @ sp[(-13)+8]
 27747  0134CC  0EFC               	movlw	252
 27748  0134CE  24E1               	addwf	fsr1l,w,c
 27749  0134D0  6EE9               	movwf	fsr0l,c
 27750  0134D2  0EFF               	movlw	255
 27751  0134D4  20E2               	addwfc	fsr1h,w,c
 27752  0134D6  6EEA               	movwf	fsr0h,c
 27753  0134D8  50EF               	movf	indf0,w,c
 27754  0134DA  26DE               	addwf	postinc2,f,c
 27755  0134DC  0E00               	movlw	0
 27756  0134DE  22DE               	addwfc	postinc2,f,c
 27757  0134E0  22DE               	addwfc	postinc2,f,c
 27758  0134E2  22DE               	addwfc	postinc2,f,c
 27759                           
 27760                           ;stkvar	_b @ sp[(-13)+-4]
 27761  0134E4  0EF1               	movlw	241
 27762  0134E6  24E1               	addwf	fsr1l,w,c
 27763  0134E8  6ED9               	movwf	fsr2l,c
 27764  0134EA  0EFF               	movlw	255
 27765  0134EC  20E2               	addwfc	fsr1h,w,c
 27766  0134EE  6EDA               	movwf	fsr2h,c
 27767  0134F0  50DF               	movf	indf2,w,c
 27768  0134F2  6E33               	movwf	(btemp+11)^0,c
 27769                           
 27770                           ;stkvar	_a @ sp[(-13)+-8]
 27771  0134F4  0EEB               	movlw	-21
 27772  0134F6  50E3               	movf	plusw1,w,c
 27773  0134F8  0233               	mulwf	(btemp+11)^0,c
 27774                           
 27775                           ;stkvar	_temp @ sp[(-13)+8]
 27776  0134FA  0EFB               	movlw	-5
 27777  0134FC  006F FFCF FFE3     	movff	prodl,plusw1
 27778  013502  0EFC               	movlw	-4
 27779  013504  006F FFD3 FFE3     	movff	prodh,plusw1
 27780                           
 27781                           ;stkvar	_grs @ sp[(-13)+4]
 27782  01350A  50E1               	movf	fsr1l,w,c
 27783  01350C  0FF7               	addlw	-9
 27784  01350E  6ED9               	movwf	fsr2l,c
 27785  013510  50E2               	movf	fsr1h,w,c
 27786  013512  6EDA               	movwf	fsr2h,c
 27787  013514  0EFF               	movlw	255
 27788  013516  22DA               	addwfc	fsr2h,f,c
 27789                           
 27790                           ;stkvar	_temp @ sp[(-13)+8]
 27791  013518  0EFB               	movlw	-5
 27792  01351A  50E3               	movf	plusw1,w,c
 27793  01351C  26DE               	addwf	postinc2,f,c
 27794  01351E  0E00               	movlw	0
 27795  013520  22DE               	addwfc	postinc2,f,c
 27796  013522  22DE               	addwfc	postinc2,f,c
 27797  013524  22DE               	addwfc	postinc2,f,c
 27798                           
 27799                           ;stkvar	_prod @ sp[(-13)+0]
 27800  013526  50E1               	movf	fsr1l,w,c
 27801  013528  0FF3               	addlw	-13
 27802  01352A  6ED9               	movwf	fsr2l,c
 27803  01352C  50E2               	movf	fsr1h,w,c
 27804  01352E  6EDA               	movwf	fsr2h,c
 27805  013530  0EFF               	movlw	255
 27806  013532  22DA               	addwfc	fsr2h,f,c
 27807                           
 27808                           ;stkvar	_temp @ sp[(-13)+8]
 27809  013534  0EFC               	movlw	252
 27810  013536  24E1               	addwf	fsr1l,w,c
 27811  013538  6EE9               	movwf	fsr0l,c
 27812  01353A  0EFF               	movlw	255
 27813  01353C  20E2               	addwfc	fsr1h,w,c
 27814  01353E  6EEA               	movwf	fsr0h,c
 27815  013540  50EF               	movf	indf0,w,c
 27816  013542  26DE               	addwf	postinc2,f,c
 27817  013544  0E00               	movlw	0
 27818  013546  22DE               	addwfc	postinc2,f,c
 27819  013548  22DE               	addwfc	postinc2,f,c
 27820  01354A  22DE               	addwfc	postinc2,f,c
 27821                           
 27822                           ;stkvar	_grs @ sp[(-13)+4]
 27823  01354C  50E1               	movf	fsr1l,w,c
 27824  01354E  0FF7               	addlw	-9
 27825  013550  6ED9               	movwf	fsr2l,c
 27826  013552  50E2               	movf	fsr1h,w,c
 27827  013554  6EDA               	movwf	fsr2h,c
 27828  013556  0EFF               	movlw	255
 27829  013558  22DA               	addwfc	fsr2h,f,c
 27830  01355A  0E08               	movlw	8
 27831  01355C                     u6585:
 27832  01355C  90D8               	bcf	status,0,c
 27833  01355E  36DE               	rlcf	postinc2,f,c
 27834  013560  36DE               	rlcf	postinc2,f,c
 27835  013562  36DE               	rlcf	postinc2,f,c
 27836  013564  36DD               	rlcf	postdec2,f,c
 27837  013566  52DD               	movf	postdec2,f,c
 27838  013568  52DD               	movf	postdec2,f,c
 27839  01356A  2EE8               	decfsz	wreg,f,c
 27840  01356C  D7F7               	goto	u6585
 27841                           
 27842                           ;stkvar	_b @ sp[(-13)+-4]
 27843  01356E  0EF0               	movlw	240
 27844  013570  24E1               	addwf	fsr1l,w,c
 27845  013572  6ED9               	movwf	fsr2l,c
 27846  013574  0EFF               	movlw	255
 27847  013576  20E2               	addwfc	fsr1h,w,c
 27848  013578  6EDA               	movwf	fsr2h,c
 27849  01357A  50DF               	movf	indf2,w,c
 27850  01357C  6E33               	movwf	(btemp+11)^0,c
 27851                           
 27852                           ;stkvar	_a @ sp[(-13)+-8]
 27853  01357E  0EEB               	movlw	-21
 27854  013580  50E3               	movf	plusw1,w,c
 27855  013582  0233               	mulwf	(btemp+11)^0,c
 27856                           
 27857                           ;stkvar	_temp @ sp[(-13)+8]
 27858  013584  0EFB               	movlw	-5
 27859  013586  006F FFCF FFE3     	movff	prodl,plusw1
 27860  01358C  0EFC               	movlw	-4
 27861  01358E  006F FFD3 FFE3     	movff	prodh,plusw1
 27862                           
 27863                           ;stkvar	_temp @ sp[(-13)+8]
 27864  013594  0EFB               	movlw	-5
 27865  013596  006F FF8C  F032    	movff	plusw1,btemp+10
 27866  01359C  0EFC               	movlw	-4
 27867  01359E  006F FF8C  F033    	movff	plusw1,btemp+11
 27868                           
 27869                           ;stkvar	_grs @ sp[(-13)+4]
 27870  0135A4  50E1               	movf	fsr1l,w,c
 27871  0135A6  0FF7               	addlw	-9
 27872  0135A8  6ED9               	movwf	fsr2l,c
 27873  0135AA  50E2               	movf	fsr1h,w,c
 27874  0135AC  6EDA               	movwf	fsr2h,c
 27875  0135AE  0EFF               	movlw	255
 27876  0135B0  22DA               	addwfc	fsr2h,f,c
 27877  0135B2  5032               	movf	(btemp+10)^0,w,c
 27878  0135B4  26DE               	addwf	postinc2,f,c
 27879  0135B6  5033               	movf	(btemp+11)^0,w,c
 27880  0135B8  22DE               	addwfc	postinc2,f,c
 27881  0135BA  0E00               	movlw	0
 27882  0135BC  22DE               	addwfc	postinc2,f,c
 27883  0135BE  22DE               	addwfc	postinc2,f,c
 27884                           
 27885                           ;stkvar	_b @ sp[(-13)+-4]
 27886  0135C0  0EEF               	movlw	-17
 27887  0135C2  006F FF8C  F033    	movff	plusw1,btemp+11
 27888                           
 27889                           ;stkvar	_a @ sp[(-13)+-8]
 27890  0135C8  0EEC               	movlw	236
 27891  0135CA  24E1               	addwf	fsr1l,w,c
 27892  0135CC  6ED9               	movwf	fsr2l,c
 27893  0135CE  0EFF               	movlw	255
 27894  0135D0  20E2               	addwfc	fsr1h,w,c
 27895  0135D2  6EDA               	movwf	fsr2h,c
 27896  0135D4  50DF               	movf	indf2,w,c
 27897  0135D6  0233               	mulwf	(btemp+11)^0,c
 27898                           
 27899                           ;stkvar	_temp @ sp[(-13)+8]
 27900  0135D8  0EFB               	movlw	-5
 27901  0135DA  006F FFCF FFE3     	movff	prodl,plusw1
 27902  0135E0  0EFC               	movlw	-4
 27903  0135E2  006F FFD3 FFE3     	movff	prodh,plusw1
 27904                           
 27905                           ;stkvar	_temp @ sp[(-13)+8]
 27906  0135E8  0EFB               	movlw	-5
 27907  0135EA  006F FF8C  F032    	movff	plusw1,btemp+10
 27908  0135F0  0EFC               	movlw	-4
 27909  0135F2  006F FF8C  F033    	movff	plusw1,btemp+11
 27910                           
 27911                           ;stkvar	_grs @ sp[(-13)+4]
 27912  0135F8  50E1               	movf	fsr1l,w,c
 27913  0135FA  0FF7               	addlw	-9
 27914  0135FC  6ED9               	movwf	fsr2l,c
 27915  0135FE  50E2               	movf	fsr1h,w,c
 27916  013600  6EDA               	movwf	fsr2h,c
 27917  013602  0EFF               	movlw	255
 27918  013604  22DA               	addwfc	fsr2h,f,c
 27919  013606  5032               	movf	(btemp+10)^0,w,c
 27920  013608  26DE               	addwf	postinc2,f,c
 27921  01360A  5033               	movf	(btemp+11)^0,w,c
 27922  01360C  22DE               	addwfc	postinc2,f,c
 27923  01360E  0E00               	movlw	0
 27924  013610  22DE               	addwfc	postinc2,f,c
 27925  013612  22DE               	addwfc	postinc2,f,c
 27926                           
 27927                           ;stkvar	_grs @ sp[(-13)+4]
 27928  013614  50E1               	movf	fsr1l,w,c
 27929  013616  0FF7               	addlw	-9
 27930  013618  6ED9               	movwf	fsr2l,c
 27931  01361A  50E2               	movf	fsr1h,w,c
 27932  01361C  6EDA               	movwf	fsr2h,c
 27933  01361E  0EFF               	movlw	255
 27934  013620  22DA               	addwfc	fsr2h,f,c
 27935  013622  0E08               	movlw	8
 27936  013624                     u6595:
 27937  013624  90D8               	bcf	status,0,c
 27938  013626  36DE               	rlcf	postinc2,f,c
 27939  013628  36DE               	rlcf	postinc2,f,c
 27940  01362A  36DE               	rlcf	postinc2,f,c
 27941  01362C  36DD               	rlcf	postdec2,f,c
 27942  01362E  52DD               	movf	postdec2,f,c
 27943  013630  52DD               	movf	postdec2,f,c
 27944  013632  2EE8               	decfsz	wreg,f,c
 27945  013634  D7F7               	goto	u6595
 27946                           
 27947                           ;stkvar	_b @ sp[(-13)+-4]
 27948  013636  0EEF               	movlw	-17
 27949  013638  006F FF8C  F033    	movff	plusw1,btemp+11
 27950                           
 27951                           ;stkvar	_a @ sp[(-13)+-8]
 27952  01363E  0EEB               	movlw	-21
 27953  013640  50E3               	movf	plusw1,w,c
 27954  013642  0233               	mulwf	(btemp+11)^0,c
 27955                           
 27956                           ;stkvar	_temp @ sp[(-13)+8]
 27957  013644  0EFB               	movlw	-5
 27958  013646  006F FFCF FFE3     	movff	prodl,plusw1
 27959  01364C  0EFC               	movlw	-4
 27960  01364E  006F FFD3 FFE3     	movff	prodh,plusw1
 27961                           
 27962                           ;stkvar	_temp @ sp[(-13)+8]
 27963  013654  0EFB               	movlw	-5
 27964  013656  006F FF8C  F032    	movff	plusw1,btemp+10
 27965  01365C  0EFC               	movlw	-4
 27966  01365E  006F FF8C  F033    	movff	plusw1,btemp+11
 27967                           
 27968                           ;stkvar	_grs @ sp[(-13)+4]
 27969  013664  50E1               	movf	fsr1l,w,c
 27970  013666  0FF7               	addlw	-9
 27971  013668  6ED9               	movwf	fsr2l,c
 27972  01366A  50E2               	movf	fsr1h,w,c
 27973  01366C  6EDA               	movwf	fsr2h,c
 27974  01366E  0EFF               	movlw	255
 27975  013670  22DA               	addwfc	fsr2h,f,c
 27976  013672  5032               	movf	(btemp+10)^0,w,c
 27977  013674  26DE               	addwf	postinc2,f,c
 27978  013676  5033               	movf	(btemp+11)^0,w,c
 27979  013678  22DE               	addwfc	postinc2,f,c
 27980  01367A  0E00               	movlw	0
 27981  01367C  22DE               	addwfc	postinc2,f,c
 27982  01367E  22DE               	addwfc	postinc2,f,c
 27983                           
 27984                           ;stkvar	_b @ sp[(-13)+-4]
 27985  013680  0EF0               	movlw	240
 27986  013682  24E1               	addwf	fsr1l,w,c
 27987  013684  6ED9               	movwf	fsr2l,c
 27988  013686  0EFF               	movlw	255
 27989  013688  20E2               	addwfc	fsr1h,w,c
 27990  01368A  6EDA               	movwf	fsr2h,c
 27991  01368C  50DF               	movf	indf2,w,c
 27992  01368E  6E33               	movwf	(btemp+11)^0,c
 27993                           
 27994                           ;stkvar	_a @ sp[(-13)+-8]
 27995  013690  0EED               	movlw	237
 27996  013692  24E1               	addwf	fsr1l,w,c
 27997  013694  6ED9               	movwf	fsr2l,c
 27998  013696  0EFF               	movlw	255
 27999  013698  20E2               	addwfc	fsr1h,w,c
 28000  01369A  6EDA               	movwf	fsr2h,c
 28001  01369C  50DF               	movf	indf2,w,c
 28002  01369E  0233               	mulwf	(btemp+11)^0,c
 28003                           
 28004                           ;stkvar	_temp @ sp[(-13)+8]
 28005  0136A0  0EFB               	movlw	-5
 28006  0136A2  006F FFCF FFE3     	movff	prodl,plusw1
 28007  0136A8  0EFC               	movlw	-4
 28008  0136AA  006F FFD3 FFE3     	movff	prodh,plusw1
 28009                           
 28010                           ;stkvar	_temp @ sp[(-13)+8]
 28011  0136B0  0EFB               	movlw	-5
 28012  0136B2  006F FF8C  F032    	movff	plusw1,btemp+10
 28013  0136B8  0EFC               	movlw	-4
 28014  0136BA  006F FF8C  F033    	movff	plusw1,btemp+11
 28015                           
 28016                           ;stkvar	_prod @ sp[(-13)+0]
 28017  0136C0  50E1               	movf	fsr1l,w,c
 28018  0136C2  0FF3               	addlw	-13
 28019  0136C4  6ED9               	movwf	fsr2l,c
 28020  0136C6  50E2               	movf	fsr1h,w,c
 28021  0136C8  6EDA               	movwf	fsr2h,c
 28022  0136CA  0EFF               	movlw	255
 28023  0136CC  22DA               	addwfc	fsr2h,f,c
 28024  0136CE  5032               	movf	(btemp+10)^0,w,c
 28025  0136D0  26DE               	addwf	postinc2,f,c
 28026  0136D2  5033               	movf	(btemp+11)^0,w,c
 28027  0136D4  22DE               	addwfc	postinc2,f,c
 28028  0136D6  0E00               	movlw	0
 28029  0136D8  22DE               	addwfc	postinc2,f,c
 28030  0136DA  22DE               	addwfc	postinc2,f,c
 28031                           
 28032                           ;stkvar	_b @ sp[(-13)+-4]
 28033  0136DC  0EF1               	movlw	241
 28034  0136DE  24E1               	addwf	fsr1l,w,c
 28035  0136E0  6ED9               	movwf	fsr2l,c
 28036  0136E2  0EFF               	movlw	255
 28037  0136E4  20E2               	addwfc	fsr1h,w,c
 28038  0136E6  6EDA               	movwf	fsr2h,c
 28039  0136E8  50DF               	movf	indf2,w,c
 28040  0136EA  6E33               	movwf	(btemp+11)^0,c
 28041                           
 28042                           ;stkvar	_a @ sp[(-13)+-8]
 28043  0136EC  0EEC               	movlw	236
 28044  0136EE  24E1               	addwf	fsr1l,w,c
 28045  0136F0  6ED9               	movwf	fsr2l,c
 28046  0136F2  0EFF               	movlw	255
 28047  0136F4  20E2               	addwfc	fsr1h,w,c
 28048  0136F6  6EDA               	movwf	fsr2h,c
 28049  0136F8  50DF               	movf	indf2,w,c
 28050  0136FA  0233               	mulwf	(btemp+11)^0,c
 28051                           
 28052                           ;stkvar	_temp @ sp[(-13)+8]
 28053  0136FC  0EFB               	movlw	-5
 28054  0136FE  006F FFCF FFE3     	movff	prodl,plusw1
 28055  013704  0EFC               	movlw	-4
 28056  013706  006F FFD3 FFE3     	movff	prodh,plusw1
 28057                           
 28058                           ;stkvar	_temp @ sp[(-13)+8]
 28059  01370C  0EFB               	movlw	-5
 28060  01370E  006F FF8C  F032    	movff	plusw1,btemp+10
 28061  013714  0EFC               	movlw	-4
 28062  013716  006F FF8C  F033    	movff	plusw1,btemp+11
 28063                           
 28064                           ;stkvar	_prod @ sp[(-13)+0]
 28065  01371C  50E1               	movf	fsr1l,w,c
 28066  01371E  0FF3               	addlw	-13
 28067  013720  6ED9               	movwf	fsr2l,c
 28068  013722  50E2               	movf	fsr1h,w,c
 28069  013724  6EDA               	movwf	fsr2h,c
 28070  013726  0EFF               	movlw	255
 28071  013728  22DA               	addwfc	fsr2h,f,c
 28072  01372A  5032               	movf	(btemp+10)^0,w,c
 28073  01372C  26DE               	addwf	postinc2,f,c
 28074  01372E  5033               	movf	(btemp+11)^0,w,c
 28075  013730  22DE               	addwfc	postinc2,f,c
 28076  013732  0E00               	movlw	0
 28077  013734  22DE               	addwfc	postinc2,f,c
 28078  013736  22DE               	addwfc	postinc2,f,c
 28079                           
 28080                           ;stkvar	_b @ sp[(-13)+-4]
 28081  013738  0EF1               	movlw	241
 28082  01373A  24E1               	addwf	fsr1l,w,c
 28083  01373C  6ED9               	movwf	fsr2l,c
 28084  01373E  0EFF               	movlw	255
 28085  013740  20E2               	addwfc	fsr1h,w,c
 28086  013742  6EDA               	movwf	fsr2h,c
 28087  013744  50DF               	movf	indf2,w,c
 28088  013746  6E33               	movwf	(btemp+11)^0,c
 28089                           
 28090                           ;stkvar	_a @ sp[(-13)+-8]
 28091  013748  0EED               	movlw	237
 28092  01374A  24E1               	addwf	fsr1l,w,c
 28093  01374C  6ED9               	movwf	fsr2l,c
 28094  01374E  0EFF               	movlw	255
 28095  013750  20E2               	addwfc	fsr1h,w,c
 28096  013752  6EDA               	movwf	fsr2h,c
 28097  013754  50DF               	movf	indf2,w,c
 28098  013756  0233               	mulwf	(btemp+11)^0,c
 28099                           
 28100                           ;stkvar	_temp @ sp[(-13)+8]
 28101  013758  0EFB               	movlw	-5
 28102  01375A  006F FFCF FFE3     	movff	prodl,plusw1
 28103  013760  0EFC               	movlw	-4
 28104  013762  006F FFD3 FFE3     	movff	prodh,plusw1
 28105                           
 28106                           ;stkvar	_temp @ sp[(-13)+8]
 28107  013768  0EFB               	movlw	-5
 28108  01376A  006F FF8C  F032    	movff	plusw1,btemp+10
 28109  013770  0EFC               	movlw	-4
 28110  013772  006F FF8C  F033    	movff	plusw1,btemp+11
 28111  013778  5032               	movf	(btemp+10)^0,w,c
 28112  01377A  6E2C               	movwf	(btemp+4)^0,c
 28113  01377C  5033               	movf	(btemp+11)^0,w,c
 28114  01377E  6E2D               	movwf	(btemp+5)^0,c
 28115  013780  6A2E               	clrf	(btemp+6)^0,c
 28116  013782  6A2F               	clrf	(btemp+7)^0,c
 28117  013784  0060  F0B8  F02F   	movff	btemp+6,btemp+7
 28118  01378A  0060  F0B4  F02E   	movff	btemp+5,btemp+6
 28119  013790  0060  F0B0  F02D   	movff	btemp+4,btemp+5
 28120  013796  6A2C               	clrf	(btemp+4)^0,c
 28121                           
 28122                           ;stkvar	_prod @ sp[(-13)+0]
 28123  013798  50E1               	movf	fsr1l,w,c
 28124  01379A  0FF3               	addlw	-13
 28125  01379C  6ED9               	movwf	fsr2l,c
 28126  01379E  50E2               	movf	fsr1h,w,c
 28127  0137A0  6EDA               	movwf	fsr2h,c
 28128  0137A2  0EFF               	movlw	255
 28129  0137A4  22DA               	addwfc	fsr2h,f,c
 28130  0137A6  502C               	movf	(btemp+4)^0,w,c
 28131  0137A8  26DE               	addwf	postinc2,f,c
 28132  0137AA  502D               	movf	(btemp+5)^0,w,c
 28133  0137AC  22DE               	addwfc	postinc2,f,c
 28134  0137AE  502E               	movf	(btemp+6)^0,w,c
 28135  0137B0  22DE               	addwfc	postinc2,f,c
 28136  0137B2  502F               	movf	(btemp+7)^0,w,c
 28137  0137B4  22DE               	addwfc	postinc2,f,c
 28138                           
 28139                           ;stkvar	_prod @ sp[(-13)+0]
 28140  0137B6  50E1               	movf	fsr1l,w,c
 28141  0137B8  0FF3               	addlw	-13
 28142  0137BA  6ED9               	movwf	fsr2l,c
 28143  0137BC  50E2               	movf	fsr1h,w,c
 28144  0137BE  6EDA               	movwf	fsr2h,c
 28145  0137C0  0EFF               	movlw	255
 28146  0137C2  22DA               	addwfc	fsr2h,f,c
 28147                           
 28148                           ;stkvar	_grs @ sp[(-13)+4]
 28149  0137C4  0EFA               	movlw	250
 28150  0137C6  24E1               	addwf	fsr1l,w,c
 28151  0137C8  6EE9               	movwf	fsr0l,c
 28152  0137CA  0EFF               	movlw	255
 28153  0137CC  20E2               	addwfc	fsr1h,w,c
 28154  0137CE  6EEA               	movwf	fsr0h,c
 28155  0137D0  50EF               	movf	indf0,w,c
 28156  0137D2  26DE               	addwf	postinc2,f,c
 28157  0137D4  0E00               	movlw	0
 28158  0137D6  22DE               	addwfc	postinc2,f,c
 28159  0137D8  22DE               	addwfc	postinc2,f,c
 28160  0137DA  22DE               	addwfc	postinc2,f,c
 28161                           
 28162                           ;stkvar	_grs @ sp[(-13)+4]
 28163  0137DC  50E1               	movf	fsr1l,w,c
 28164  0137DE  0FF7               	addlw	-9
 28165  0137E0  6ED9               	movwf	fsr2l,c
 28166  0137E2  50E2               	movf	fsr1h,w,c
 28167  0137E4  6EDA               	movwf	fsr2h,c
 28168  0137E6  0EFF               	movlw	255
 28169  0137E8  22DA               	addwfc	fsr2h,f,c
 28170  0137EA  0E08               	movlw	8
 28171  0137EC                     u6605:
 28172  0137EC  90D8               	bcf	status,0,c
 28173  0137EE  36DE               	rlcf	postinc2,f,c
 28174  0137F0  36DE               	rlcf	postinc2,f,c
 28175  0137F2  36DE               	rlcf	postinc2,f,c
 28176  0137F4  36DD               	rlcf	postdec2,f,c
 28177  0137F6  52DD               	movf	postdec2,f,c
 28178  0137F8  52DD               	movf	postdec2,f,c
 28179  0137FA  2EE8               	decfsz	wreg,f,c
 28180  0137FC  D7F7               	goto	u6605
 28181  0137FE  0E82               	movlw	130
 28182  013800  6E32               	movwf	(btemp+10)^0,c
 28183  013802  0EFF               	movlw	255
 28184  013804  6E33               	movwf	(btemp+11)^0,c
 28185                           
 28186                           ;stkvar	_bexp @ sp[(-13)+10]
 28187  013806  0EFD               	movlw	-3
 28188  013808  50E3               	movf	plusw1,w,c
 28189  01380A  6E30               	movwf	(btemp+8)^0,c
 28190  01380C  6A31               	clrf	(btemp+9)^0,c
 28191                           
 28192                           ;stkvar	_aexp @ sp[(-13)+11]
 28193  01380E  0EFE               	movlw	-2
 28194  013810  50E3               	movf	plusw1,w,c
 28195  013812  2630               	addwf	(btemp+8)^0,f,c
 28196  013814  0E00               	movlw	0
 28197  013816  2231               	addwfc	(btemp+9)^0,f,c
 28198  013818  5032               	movf	(btemp+10)^0,w,c
 28199  01381A  2630               	addwf	(btemp+8)^0,f,c
 28200  01381C  5033               	movf	(btemp+11)^0,w,c
 28201  01381E  2231               	addwfc	(btemp+9)^0,f,c
 28202                           
 28203                           ;stkvar	_temp @ sp[(-13)+8]
 28204  013820  0EFB               	movlw	-5
 28205  013822  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 28206  013828  0EFC               	movlw	-4
 28207  01382A  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 28208  013830  D021               	goto	l8182
 28209  013832                     l8172:
 28210                           
 28211                           ;stkvar	_prod @ sp[(-13)+0]
 28212  013832  90D8               	bcf	status,0,c
 28213  013834  0EF3               	movlw	-13
 28214  013836  36E3               	rlcf	plusw1,f,c
 28215  013838  0EF4               	movlw	-12
 28216  01383A  36E3               	rlcf	plusw1,f,c
 28217  01383C  0EF5               	movlw	-11
 28218  01383E  36E3               	rlcf	plusw1,f,c
 28219  013840  0EF6               	movlw	-10
 28220  013842  36E3               	rlcf	plusw1,f,c
 28221                           
 28222                           ;stkvar	_grs @ sp[(-13)+4]
 28223  013844  0EFA               	movlw	-6
 28224  013846  AEE3               	btfss	plusw1,7,c
 28225  013848  D002               	goto	l8178
 28226                           
 28227                           ;stkvar	_prod @ sp[(-13)+0]
 28228  01384A  0EF3               	movlw	-13
 28229  01384C  80E3               	bsf	plusw1,0,c
 28230  01384E                     l8178:
 28231                           
 28232                           ;stkvar	_grs @ sp[(-13)+4]
 28233  01384E  90D8               	bcf	status,0,c
 28234  013850  0EF7               	movlw	-9
 28235  013852  36E3               	rlcf	plusw1,f,c
 28236  013854  0EF8               	movlw	-8
 28237  013856  36E3               	rlcf	plusw1,f,c
 28238  013858  0EF9               	movlw	-7
 28239  01385A  36E3               	rlcf	plusw1,f,c
 28240  01385C  0EFA               	movlw	-6
 28241  01385E  36E3               	rlcf	plusw1,f,c
 28242                           
 28243                           ;stkvar	_temp @ sp[(-13)+8]
 28244  013860  50E1               	movf	fsr1l,w,c
 28245  013862  0FFB               	addlw	-5
 28246  013864  6ED9               	movwf	fsr2l,c
 28247  013866  50E2               	movf	fsr1h,w,c
 28248  013868  6EDA               	movwf	fsr2h,c
 28249  01386A  0EFF               	movlw	255
 28250  01386C  22DA               	addwfc	fsr2h,f,c
 28251  01386E  06DE               	decf	postinc2,f,c
 28252  013870  0E00               	movlw	0
 28253  013872  5ADD               	subwfb	postdec2,f,c
 28254  013874                     l8182:
 28255                           
 28256                           ;stkvar	_prod @ sp[(-13)+0]
 28257  013874  0EF5               	movlw	-11
 28258  013876  AEE3               	btfss	plusw1,7,c
 28259  013878  D7DC               	goto	l8172
 28260                           
 28261                           ;stkvar	_aexp @ sp[(-13)+11]
 28262  01387A  0EFE               	movlw	-2
 28263  01387C  6AE3               	clrf	plusw1,c
 28264                           
 28265                           ;stkvar	_grs @ sp[(-13)+4]
 28266  01387E  0EFA               	movlw	-6
 28267  013880  AEE3               	btfss	plusw1,7,c
 28268  013882  D020               	goto	l8196
 28269                           
 28270                           ;stkvar	_grs @ sp[(-13)+4]
 28271  013884  50E1               	movf	fsr1l,w,c
 28272  013886  0FF7               	addlw	-9
 28273  013888  6ED9               	movwf	fsr2l,c
 28274  01388A  50E2               	movf	fsr1h,w,c
 28275  01388C  6EDA               	movwf	fsr2h,c
 28276  01388E  0EFF               	movlw	255
 28277  013890  22DA               	addwfc	fsr2h,f,c
 28278  013892  0EFF               	movlw	255
 28279  013894  14DE               	andwf	postinc2,w,c
 28280  013896  6E30               	movwf	(btemp+8)^0,c
 28281  013898  0EFF               	movlw	255
 28282  01389A  14DE               	andwf	postinc2,w,c
 28283  01389C  6E31               	movwf	(btemp+9)^0,c
 28284  01389E  0EFF               	movlw	255
 28285  0138A0  14DE               	andwf	postinc2,w,c
 28286  0138A2  6E32               	movwf	(btemp+10)^0,c
 28287  0138A4  0E7F               	movlw	127
 28288  0138A6  14DE               	andwf	postinc2,w,c
 28289  0138A8  6E33               	movwf	(btemp+11)^0,c
 28290  0138AA  5030               	movf	(btemp+8)^0,w,c
 28291  0138AC  1031               	iorwf	(btemp+9)^0,w,c
 28292  0138AE  1032               	iorwf	(btemp+10)^0,w,c
 28293  0138B0  1033               	iorwf	(btemp+11)^0,w,c
 28294  0138B2  B4D8               	btfsc	status,2,c
 28295  0138B4  D004               	goto	l8192
 28296  0138B6                     u6640:
 28297                           
 28298                           ;stkvar	_aexp @ sp[(-13)+11]
 28299  0138B6  0EFE               	movlw	-2
 28300  0138B8  6AE3               	clrf	plusw1,c
 28301  0138BA  2AE3               	incf	plusw1,f,c
 28302  0138BC  D003               	goto	l8196
 28303  0138BE                     l8192:
 28304                           
 28305                           ;stkvar	_prod @ sp[(-13)+0]
 28306  0138BE  0EF3               	movlw	-13
 28307  0138C0  B0E3               	btfsc	plusw1,0,c
 28308  0138C2  D7F9               	goto	u6640
 28309  0138C4                     l8196:
 28310                           
 28311                           ;stkvar	_aexp @ sp[(-13)+11]
 28312  0138C4  0EFE               	movlw	-2
 28313  0138C6  50E3               	movf	plusw1,w,c
 28314  0138C8  B4D8               	btfsc	status,2,c
 28315  0138CA  D036               	goto	l8206
 28316                           
 28317                           ;stkvar	_prod @ sp[(-13)+0]
 28318  0138CC  50E1               	movf	fsr1l,w,c
 28319  0138CE  0FF3               	addlw	-13
 28320  0138D0  6ED9               	movwf	fsr2l,c
 28321  0138D2  50E2               	movf	fsr1h,w,c
 28322  0138D4  6EDA               	movwf	fsr2h,c
 28323  0138D6  0EFF               	movlw	255
 28324  0138D8  22DA               	addwfc	fsr2h,f,c
 28325  0138DA  2ADE               	incf	postinc2,f,c
 28326  0138DC  0E00               	movlw	0
 28327  0138DE  22DE               	addwfc	postinc2,f,c
 28328  0138E0  22DE               	addwfc	postinc2,f,c
 28329  0138E2  22DE               	addwfc	postinc2,f,c
 28330                           
 28331                           ;stkvar	_prod @ sp[(-13)+0]
 28332  0138E4  0EF6               	movlw	-10
 28333  0138E6  A0E3               	btfss	plusw1,0,c
 28334  0138E8  D027               	goto	l8206
 28335  0138EA  0E01               	movlw	1
 28336  0138EC  6E33               	movwf	(btemp+11)^0,c
 28337                           
 28338                           ;stkvar	_prod @ sp[(-13)+0]
 28339  0138EE  50E1               	movf	fsr1l,w,c
 28340  0138F0  0FF3               	addlw	-13
 28341  0138F2  6ED9               	movwf	fsr2l,c
 28342  0138F4  50E2               	movf	fsr1h,w,c
 28343  0138F6  6EDA               	movwf	fsr2h,c
 28344  0138F8  0EFF               	movlw	255
 28345  0138FA  22DA               	addwfc	fsr2h,f,c
 28346  0138FC  2833               	incf	(btemp+11)^0,w,c
 28347  0138FE  52DE               	movf	postinc2,f,c
 28348  013900  D008               	goto	u6680
 28349  013902                     u6685:
 28350  013902  52DE               	movf	postinc2,f,c
 28351  013904  90D8               	bcf	status,0,c
 28352  013906  BEDC               	btfsc	preinc2,7,c
 28353  013908  80D8               	bsf	status,0,c
 28354  01390A  32DD               	rrcf	postdec2,f,c
 28355  01390C  32DD               	rrcf	postdec2,f,c
 28356  01390E  32DD               	rrcf	postdec2,f,c
 28357  013910  32DE               	rrcf	postinc2,f,c
 28358  013912                     u6680:
 28359  013912  2EE8               	decfsz	wreg,f,c
 28360  013914  D7F6               	goto	u6685
 28361                           
 28362                           ;stkvar	_temp @ sp[(-13)+8]
 28363  013916  0EFB               	movlw	-5
 28364  013918  50E3               	movf	plusw1,w,c
 28365  01391A  0F01               	addlw	1
 28366  01391C  6E28               	movwf	btemp^0,c
 28367  01391E  0EFB               	movlw	-5
 28368  013920  0060  F0A3  FFE3   	movff	btemp,plusw1
 28369  013926  6A28               	clrf	btemp^0,c
 28370  013928  0EFC               	movlw	-4
 28371  01392A  50E3               	movf	plusw1,w,c
 28372  01392C  2028               	addwfc	btemp^0,w,c
 28373  01392E  6E28               	movwf	btemp^0,c
 28374  013930  0EFC               	movlw	-4
 28375  013932  0060  F0A3  FFE3   	movff	btemp,plusw1
 28376  013938                     l8206:
 28377                           
 28378                           ;stkvar	_temp @ sp[(-13)+8]
 28379  013938  0EFC               	movlw	-4
 28380  01393A  BEE3               	btfsc	plusw1,7,c
 28381  01393C  D020               	goto	l8210
 28382  01393E  0EFC               	movlw	-4
 28383  013940  50E3               	movf	plusw1,w,c
 28384  013942  E104               	bnz	u6690
 28385  013944  0EFB               	movlw	-5
 28386  013946  28E3               	incf	plusw1,w,c
 28387  013948  A0D8               	btfss	status,0,c
 28388  01394A  D019               	goto	l8210
 28389  01394C                     u6690:
 28390  01394C  0E00               	movlw	0
 28391  01394E  6E30               	movwf	(btemp+8)^0,c
 28392  013950  0E00               	movlw	0
 28393  013952  6E31               	movwf	(btemp+9)^0,c
 28394  013954  0E80               	movlw	128
 28395  013956  6E32               	movwf	(btemp+10)^0,c
 28396  013958  0E7F               	movlw	127
 28397  01395A  6E33               	movwf	(btemp+11)^0,c
 28398                           
 28399                           ;stkvar	_prod @ sp[(-13)+0]
 28400  01395C  0EF3               	movlw	-13
 28401  01395E  0060  F0C3  FFE3   	movff	btemp+8,plusw1
 28402  013964  0EF4               	movlw	-12
 28403  013966  0060  F0C7  FFE3   	movff	btemp+9,plusw1
 28404  01396C  0EF5               	movlw	-11
 28405  01396E  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 28406  013974  0EF6               	movlw	-10
 28407  013976  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 28408  01397C  D044               	goto	l8226
 28409  01397E                     l8210:
 28410                           
 28411                           ;stkvar	_temp @ sp[(-13)+8]
 28412  01397E  0EFC               	movlw	-4
 28413  013980  BEE3               	btfsc	plusw1,7,c
 28414  013982  D007               	goto	u6700
 28415  013984  0EFC               	movlw	-4
 28416  013986  50E3               	movf	plusw1,w,c
 28417  013988  E10F               	bnz	l8216
 28418  01398A  0EFB               	movlw	-5
 28419  01398C  04E3               	decf	plusw1,w,c
 28420  01398E  B0D8               	btfsc	status,0,c
 28421  013990  D00B               	goto	l8216
 28422  013992                     u6700:
 28423                           
 28424                           ;stkvar	_prod @ sp[(-13)+0]
 28425  013992  0EF3               	movlw	-13
 28426  013994  6AE3               	clrf	plusw1,c
 28427  013996  0EF4               	movlw	-12
 28428  013998  6AE3               	clrf	plusw1,c
 28429  01399A  0EF5               	movlw	-11
 28430  01399C  6AE3               	clrf	plusw1,c
 28431  01399E  0EF6               	movlw	-10
 28432  0139A0  6AE3               	clrf	plusw1,c
 28433                           
 28434                           ;stkvar	_sign @ sp[(-13)+12]
 28435  0139A2  0EFF               	movlw	-1
 28436  0139A4  6AE3               	clrf	plusw1,c
 28437  0139A6  D02F               	goto	l8226
 28438  0139A8                     l8216:
 28439                           
 28440                           ;stkvar	_temp @ sp[(-13)+8]
 28441                           ;stkvar	_bexp @ sp[(-13)+10]
 28442  0139A8  0EFB               	movlw	-5
 28443  0139AA  006F FF8C  F028    	movff	plusw1,btemp
 28444  0139B0  0EFD               	movlw	-3
 28445  0139B2  0060  F0A3  FFE3   	movff	btemp,plusw1
 28446                           
 28447                           ;stkvar	_prod @ sp[(-13)+0]
 28448  0139B8  50E1               	movf	fsr1l,w,c
 28449  0139BA  0FF3               	addlw	-13
 28450  0139BC  6ED9               	movwf	fsr2l,c
 28451  0139BE  50E2               	movf	fsr1h,w,c
 28452  0139C0  6EDA               	movwf	fsr2h,c
 28453  0139C2  0EFF               	movlw	255
 28454  0139C4  22DA               	addwfc	fsr2h,f,c
 28455  0139C6  0EFF               	movlw	255
 28456  0139C8  16DE               	andwf	postinc2,f,c
 28457  0139CA  0EFF               	movlw	255
 28458  0139CC  16DE               	andwf	postinc2,f,c
 28459  0139CE  0E7F               	movlw	127
 28460  0139D0  16DE               	andwf	postinc2,f,c
 28461  0139D2  0E00               	movlw	0
 28462  0139D4  16DE               	andwf	postinc2,f,c
 28463                           
 28464                           ;stkvar	_bexp @ sp[(-13)+10]
 28465  0139D6  0EFD               	movlw	-3
 28466  0139D8  A0E3               	btfss	plusw1,0,c
 28467  0139DA  D008               	goto	l8224
 28468                           
 28469                           ;stkvar	_prod @ sp[(-13)+0]
 28470  0139DC  0EF5               	movlw	245
 28471  0139DE  24E1               	addwf	fsr1l,w,c
 28472  0139E0  6ED9               	movwf	fsr2l,c
 28473  0139E2  0EFF               	movlw	255
 28474  0139E4  20E2               	addwfc	fsr1h,w,c
 28475  0139E6  6EDA               	movwf	fsr2h,c
 28476  0139E8  0E00               	movlw	0
 28477  0139EA  8EDB               	bsf	plusw2,7,c
 28478  0139EC                     l8224:
 28479                           
 28480                           ;stkvar	_prod @ sp[(-13)+0]
 28481  0139EC  0EF6               	movlw	246
 28482  0139EE  24E1               	addwf	fsr1l,w,c
 28483  0139F0  6ED9               	movwf	fsr2l,c
 28484  0139F2  0EFF               	movlw	255
 28485  0139F4  20E2               	addwfc	fsr1h,w,c
 28486  0139F6  6EDA               	movwf	fsr2h,c
 28487                           
 28488                           ;stkvar	_bexp @ sp[(-13)+10]
 28489  0139F8  0EFD               	movlw	-3
 28490  0139FA  006F FF8C  F033    	movff	plusw1,btemp+11
 28491  013A00  90D8               	bcf	status,0,c
 28492  013A02  3033               	rrcf	(btemp+11)^0,w,c
 28493  013A04  6EDF               	movwf	indf2,c
 28494  013A06                     l8226:
 28495                           
 28496                           ;stkvar	_sign @ sp[(-13)+12]
 28497  013A06  0EFF               	movlw	-1
 28498  013A08  006F FF8C  F033    	movff	plusw1,btemp+11
 28499                           
 28500                           ;stkvar	_prod @ sp[(-13)+0]
 28501  013A0E  0EF6               	movlw	246
 28502  013A10  24E1               	addwf	fsr1l,w,c
 28503  013A12  6ED9               	movwf	fsr2l,c
 28504  013A14  0EFF               	movlw	255
 28505  013A16  20E2               	addwfc	fsr1h,w,c
 28506  013A18  6EDA               	movwf	fsr2h,c
 28507  013A1A  5033               	movf	(btemp+11)^0,w,c
 28508  013A1C  12DF               	iorwf	indf2,f,c
 28509                           
 28510                           ;stkvar	_prod @ sp[(-13)+0]
 28511  013A1E  0EF3               	movlw	-13
 28512  013A20  006F FF8C  F028    	movff	plusw1,btemp
 28513  013A26  0EF4               	movlw	-12
 28514  013A28  006F FF8C  F029    	movff	plusw1,btemp+1
 28515  013A2E  0EF5               	movlw	-11
 28516  013A30  006F FF8C  F02A    	movff	plusw1,btemp+2
 28517  013A36  0EF6               	movlw	-10
 28518  013A38  006F FF8C  F02B    	movff	plusw1,btemp+3
 28519  013A3E                     l2975:
 28520                           
 28521                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 28522  013A3E  0EEB               	movlw	235
 28523  013A40  26E1               	addwf	fsr1l,f,c
 28524  013A42  0EFF               	movlw	255
 28525  013A44  22E2               	addwfc	fsr1h,f,c
 28526  013A46  0012               	return		;funcret
 28527  013A48                     __end_of___flmul:
 28528                           	opt callstack 0
 28529                           
 28530 ;; *************** function _SYSTEM_Initialize *****************
 28531 ;; Defined at:
 28532 ;;		line 50 in file "mcc_generated_files/mcc.c"
 28533 ;; Parameters:    Size  Location     Type
 28534 ;;		None
 28535 ;; Auto vars:     Size  Location     Type
 28536 ;;		None
 28537 ;; Return value:  Size  Location     Type
 28538 ;;                  1  [STACK] void 
 28539 ;; Registers used:
 28540 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 28541 ;; Tracked objects:
 28542 ;;		On entry : 0/0
 28543 ;;		On exit  : 3F/3C
 28544 ;;		Unchanged: 0/0
 28545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28546 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28549 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28550 ;;Total ram usage:        0 bytes
 28551 ;; Hardware stack levels used:    1
 28552 ;; Hardware stack levels required when called:   17
 28553 ;; This function calls:
 28554 ;;		_ADCC_Initialize
 28555 ;;		_CLKREF_Initialize
 28556 ;;		_DMA1_Initialize
 28557 ;;		_DMA2_Initialize
 28558 ;;		_EXT_INT_Initialize
 28559 ;;		_FVR_Initialize
 28560 ;;		_INTERRUPT_Initialize
 28561 ;;		_OSCILLATOR_Initialize
 28562 ;;		_PIN_MANAGER_Initialize
 28563 ;;		_PMD_Initialize
 28564 ;;		_PWM8_Initialize
 28565 ;;		_SPI1_Initialize
 28566 ;;		_TMR2_Initialize
 28567 ;;		_TMR3_Initialize
 28568 ;;		_TMR5_Initialize
 28569 ;;		_TMR6_Initialize
 28570 ;;		_UART1_Initialize
 28571 ;;		_UART2_Initialize
 28572 ;; This function is called by:
 28573 ;;		_main
 28574 ;; This function uses a reentrant model
 28575 ;;
 28576                           
 28577                           	psect	text107
 28578  01A9A6                     __ptext107:
 28579                           	opt callstack 0
 28580  01A9A6                     _SYSTEM_Initialize:
 28581                           	opt callstack 13
 28582                           
 28583                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 28584                           
 28585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28586                           ;incstack = 0
 28587  01A9A6  ECB3  F0D2         	call	_INTERRUPT_Initialize	;wreg free
 28588                           
 28589                           ; BSR set to: 57
 28590                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 28591  01A9AA  EC02  F0DB         	call	_PMD_Initialize	;wreg free
 28592                           
 28593                           ; BSR set to: 57
 28594                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 28595  01A9AE  EC7B  F0D0         	call	_PIN_MANAGER_Initialize	;wreg free
 28596                           
 28597                           ; BSR set to: 58
 28598                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 28599  01A9B2  ECF7  F0DA         	call	_OSCILLATOR_Initialize	;wreg free
 28600                           
 28601                           ; BSR set to: 57
 28602                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 28603  01A9B6  EC77  F0DB         	call	_FVR_Initialize	;wreg free
 28604                           
 28605                           ; BSR set to: 62
 28606                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 28607  01A9BA  EC48  F0D2         	call	_ADCC_Initialize	;wreg free
 28608                           
 28609                           ;mcc_generated_files/mcc.c: 58:     PWM8_Initialize();
 28610  01A9BE  ECEC  F0DA         	call	_PWM8_Initialize	;wreg free
 28611                           
 28612                           ; BSR set to: 63
 28613                           ;mcc_generated_files/mcc.c: 59:     TMR2_Initialize();
 28614  01A9C2  ECD5  F0DA         	call	_TMR2_Initialize	;wreg free
 28615                           
 28616                           ; BSR set to: 57
 28617                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 28618  01A9C6  EC51  F0D7         	call	_EXT_INT_Initialize	;wreg free
 28619                           
 28620                           ; BSR set to: 57
 28621                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 28622  01A9CA  EC3E  F0D8         	call	_TMR6_Initialize	;wreg free
 28623                           
 28624                           ;mcc_generated_files/mcc.c: 62:     TMR3_Initialize();
 28625  01A9CE  ECA8  F0D5         	call	_TMR3_Initialize	;wreg free
 28626                           
 28627                           ;mcc_generated_files/mcc.c: 63:     TMR5_Initialize();
 28628  01A9D2  EC85  F0D5         	call	_TMR5_Initialize	;wreg free
 28629                           
 28630                           ;mcc_generated_files/mcc.c: 64:     UART1_Initialize();
 28631  01A9D6  EC62  F0D5         	call	_UART1_Initialize	;wreg free
 28632                           
 28633                           ; BSR set to: 57
 28634                           ;mcc_generated_files/mcc.c: 65:     UART2_Initialize();
 28635  01A9DA  EC7A  F0D3         	call	_UART2_Initialize	;wreg free
 28636                           
 28637                           ; BSR set to: 57
 28638                           ;mcc_generated_files/mcc.c: 66:     SPI1_Initialize();
 28639  01A9DE  ECE1  F0DA         	call	_SPI1_Initialize	;wreg free
 28640                           
 28641                           ; BSR set to: 61
 28642                           ;mcc_generated_files/mcc.c: 67:     DMA2_Initialize();
 28643  01A9E2  ECD6  F0D3         	call	_DMA2_Initialize	;wreg free
 28644                           
 28645                           ; BSR set to: 59
 28646                           ;mcc_generated_files/mcc.c: 68:     DMA1_Initialize();
 28647  01A9E6  EC13  F0D2         	call	_DMA1_Initialize	;wreg free
 28648                           
 28649                           ; BSR set to: 59
 28650                           ;mcc_generated_files/mcc.c: 69:     CLKREF_Initialize();
 28651  01A9EA  EC4B  F0DB         	call	_CLKREF_Initialize	;wreg free
 28652                           
 28653                           ; BSR set to: 60
 28654                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 28655  01A9EE  0012               	return		;funcret
 28656  01A9F0                     __end_of_SYSTEM_Initialize:
 28657                           	opt callstack 0
 28658                           
 28659 ;; *************** function _UART2_Initialize *****************
 28660 ;; Defined at:
 28661 ;;		line 78 in file "mcc_generated_files/uart2.c"
 28662 ;; Parameters:    Size  Location     Type
 28663 ;;		None
 28664 ;; Auto vars:     Size  Location     Type
 28665 ;;		None
 28666 ;; Return value:  Size  Location     Type
 28667 ;;                  1  [STACK] void 
 28668 ;; Registers used:
 28669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28670 ;; Tracked objects:
 28671 ;;		On entry : 3F/39
 28672 ;;		On exit  : 3F/39
 28673 ;;		Unchanged: 0/0
 28674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28679 ;;Total ram usage:        0 bytes
 28680 ;; Hardware stack levels used:    1
 28681 ;; Hardware stack levels required when called:   16
 28682 ;; This function calls:
 28683 ;;		_UART2_SetRxInterruptHandler
 28684 ;;		_UART2_SetTxInterruptHandler
 28685 ;; This function is called by:
 28686 ;;		_SYSTEM_Initialize
 28687 ;; This function uses a reentrant model
 28688 ;;
 28689                           
 28690                           	psect	text108
 28691  01A6F4                     __ptext108:
 28692                           	opt callstack 0
 28693  01A6F4                     _UART2_Initialize:
 28694                           	opt callstack 13
 28695                           
 28696                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 28697                           
 28698                           ; BSR set to: 60
 28699                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28700                           ;incstack = 0
 28701  01A6F4  0139               	movlb	57	; () banked
 28702  01A6F6  9596               	bcf	150,2,b	;volatile
 28703                           
 28704                           ; BSR set to: 57
 28705                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 28706  01A6F8  0E06               	movlw	low _UART2_Receive_ISR
 28707  01A6FA  6EE6               	movwf	postinc1,c
 28708  01A6FC  0EB5               	movlw	high _UART2_Receive_ISR
 28709  01A6FE  6EE6               	movwf	postinc1,c
 28710  01A700  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 28711  01A702  6EE6               	movwf	postinc1,c
 28712  01A704  ECB7  F0D8         	call	_UART2_SetRxInterruptHandler	;wreg free
 28713                           
 28714                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 28715  01A708  0139               	movlb	57	; () banked
 28716  01A70A  9796               	bcf	150,3,b	;volatile
 28717                           
 28718                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 28719  01A70C  0E50               	movlw	low _UART2_Transmit_ISR
 28720  01A70E  6EE6               	movwf	postinc1,c
 28721  01A710  0EB0               	movlw	high _UART2_Transmit_ISR
 28722  01A712  6EE6               	movwf	postinc1,c
 28723  01A714  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 28724  01A716  6EE6               	movwf	postinc1,c
 28725  01A718  ECA3  F0D8         	call	_UART2_SetTxInterruptHandler	;wreg free
 28726                           
 28727                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 28728  01A71C  013D               	movlb	61	; () banked
 28729  01A71E  6BD4               	clrf	212,b	;volatile
 28730                           
 28731                           ; BSR set to: 61
 28732                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 28733  01A720  6BD6               	clrf	214,b	;volatile
 28734                           
 28735                           ; BSR set to: 61
 28736                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 28737  01A722  6BD8               	clrf	216,b	;volatile
 28738                           
 28739                           ; BSR set to: 61
 28740                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 28741  01A724  0EB0               	movlw	176
 28742  01A726  6FDA               	movwf	218,b	;volatile
 28743                           
 28744                           ; BSR set to: 61
 28745                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 28746  01A728  0E80               	movlw	128
 28747  01A72A  6FDB               	movwf	219,b	;volatile
 28748                           
 28749                           ; BSR set to: 61
 28750                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 28751  01A72C  6BDC               	clrf	220,b	;volatile
 28752                           
 28753                           ; BSR set to: 61
 28754                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 28755  01A72E  0E82               	movlw	130
 28756  01A730  6FDD               	movwf	221,b	;volatile
 28757                           
 28758                           ; BSR set to: 61
 28759                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 28760  01A732  0E06               	movlw	6
 28761  01A734  6FDE               	movwf	222,b	;volatile
 28762                           
 28763                           ; BSR set to: 61
 28764                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 28765  01A736  6BDF               	clrf	223,b	;volatile
 28766                           
 28767                           ; BSR set to: 61
 28768                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 28769  01A738  6BE0               	clrf	224,b	;volatile
 28770                           
 28771                           ; BSR set to: 61
 28772                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 28773  01A73A  6BE1               	clrf	225,b	;volatile
 28774                           
 28775                           ; BSR set to: 61
 28776                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 28777  01A73C  6BE2               	clrf	226,b	;volatile
 28778                           
 28779                           ; BSR set to: 61
 28780                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 28781  01A73E  6A5C               	clrf	_uart2TxHead^0,c	;volatile
 28782                           
 28783                           ; BSR set to: 61
 28784                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 28785  01A740  6A5B               	clrf	_uart2TxTail^0,c	;volatile
 28786                           
 28787                           ; BSR set to: 61
 28788                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 28789  01A742  0E40               	movlw	64
 28790  01A744  6E5A               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 28791                           
 28792                           ; BSR set to: 61
 28793                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 28794  01A746  6A59               	clrf	_uart2RxHead^0,c	;volatile
 28795                           
 28796                           ; BSR set to: 61
 28797                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 28798  01A748  6A58               	clrf	_uart2RxTail^0,c	;volatile
 28799                           
 28800                           ; BSR set to: 61
 28801                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 28802  01A74A  6A57               	clrf	_uart2RxCount^0,c	;volatile
 28803                           
 28804                           ; BSR set to: 61
 28805                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 28806  01A74C  0139               	movlb	57	; () banked
 28807  01A74E  8596               	bsf	150,2,b	;volatile
 28808                           
 28809                           ; BSR set to: 57
 28810                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 28811  01A750  0012               	return		;funcret
 28812  01A752                     __end_of_UART2_Initialize:
 28813                           	opt callstack 0
 28814                           
 28815 ;; *************** function _UART2_SetTxInterruptHandler *****************
 28816 ;; Defined at:
 28817 ;;		line 252 in file "mcc_generated_files/uart2.c"
 28818 ;; Parameters:    Size  Location     Type
 28819 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28820 ;;		 -> UART2_Transmit_ISR(1), 
 28821 ;; Auto vars:     Size  Location     Type
 28822 ;;		None
 28823 ;; Return value:  Size  Location     Type
 28824 ;;                  1  [STACK] void 
 28825 ;; Registers used:
 28826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28827 ;; Tracked objects:
 28828 ;;		On entry : 3F/39
 28829 ;;		On exit  : 0/0
 28830 ;;		Unchanged: 0/0
 28831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28836 ;;Total ram usage:        0 bytes
 28837 ;; Hardware stack levels used:    1
 28838 ;; Hardware stack levels required when called:   15
 28839 ;; This function calls:
 28840 ;;		Nothing
 28841 ;; This function is called by:
 28842 ;;		_UART2_Initialize
 28843 ;; This function uses a reentrant model
 28844 ;;
 28845                           
 28846                           	psect	text109
 28847  01B146                     __ptext109:
 28848                           	opt callstack 0
 28849  01B146                     _UART2_SetTxInterruptHandler:
 28850                           	opt callstack 13
 28851                           
 28852                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 28853                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28854                           
 28855                           ; BSR set to: 57
 28856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28857                           ;incstack = 0
 28858  01B146  50E1               	movf	fsr1l,w,c
 28859  01B148  0FFD               	addlw	-3
 28860  01B14A  6ED9               	movwf	fsr2l,c
 28861  01B14C  50E2               	movf	fsr1h,w,c
 28862  01B14E  6EDA               	movwf	fsr2h,c
 28863  01B150  0EFF               	movlw	255
 28864  01B152  22DA               	addwfc	fsr2h,f,c
 28865  01B154  006F FF78  F0B4    	movff	postinc2,_UART2_TxInterruptHandler
 28866  01B15A  006F FF78  F0B5    	movff	postinc2,_UART2_TxInterruptHandler+1
 28867  01B160  006F FF74  F0B6    	movff	postdec2,_UART2_TxInterruptHandler+2
 28868                           
 28869                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28870  01B166  52E5               	movf	postdec1,f,c
 28871  01B168  52E5               	movf	postdec1,f,c
 28872  01B16A  52E5               	movf	postdec1,f,c
 28873  01B16C  0012               	return		;funcret
 28874  01B16E                     __end_of_UART2_SetTxInterruptHandler:
 28875                           	opt callstack 0
 28876                           
 28877 ;; *************** function _UART2_SetRxInterruptHandler *****************
 28878 ;; Defined at:
 28879 ;;		line 248 in file "mcc_generated_files/uart2.c"
 28880 ;; Parameters:    Size  Location     Type
 28881 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 28882 ;;		 -> UART2_Receive_ISR(1), 
 28883 ;; Auto vars:     Size  Location     Type
 28884 ;;		None
 28885 ;; Return value:  Size  Location     Type
 28886 ;;                  1  [STACK] void 
 28887 ;; Registers used:
 28888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 28889 ;; Tracked objects:
 28890 ;;		On entry : 3F/39
 28891 ;;		On exit  : 0/0
 28892 ;;		Unchanged: 0/0
 28893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28898 ;;Total ram usage:        0 bytes
 28899 ;; Hardware stack levels used:    1
 28900 ;; Hardware stack levels required when called:   15
 28901 ;; This function calls:
 28902 ;;		Nothing
 28903 ;; This function is called by:
 28904 ;;		_UART2_Initialize
 28905 ;; This function uses a reentrant model
 28906 ;;
 28907                           
 28908                           	psect	text110
 28909  01B16E                     __ptext110:
 28910                           	opt callstack 0
 28911  01B16E                     _UART2_SetRxInterruptHandler:
 28912                           	opt callstack 13
 28913                           
 28914                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 28915                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 28916                           
 28917                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28918                           ;incstack = 0
 28919  01B16E  50E1               	movf	fsr1l,w,c
 28920  01B170  0FFD               	addlw	-3
 28921  01B172  6ED9               	movwf	fsr2l,c
 28922  01B174  50E2               	movf	fsr1h,w,c
 28923  01B176  6EDA               	movwf	fsr2h,c
 28924  01B178  0EFF               	movlw	255
 28925  01B17A  22DA               	addwfc	fsr2h,f,c
 28926  01B17C  006F FF78  F0B7    	movff	postinc2,_UART2_RxInterruptHandler
 28927  01B182  006F FF78  F0B8    	movff	postinc2,_UART2_RxInterruptHandler+1
 28928  01B188  006F FF74  F0B9    	movff	postdec2,_UART2_RxInterruptHandler+2
 28929                           
 28930                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 28931  01B18E  52E5               	movf	postdec1,f,c
 28932  01B190  52E5               	movf	postdec1,f,c
 28933  01B192  52E5               	movf	postdec1,f,c
 28934  01B194  0012               	return		;funcret
 28935  01B196                     __end_of_UART2_SetRxInterruptHandler:
 28936                           	opt callstack 0
 28937                           
 28938 ;; *************** function _UART1_Initialize *****************
 28939 ;; Defined at:
 28940 ;;		line 75 in file "mcc_generated_files/uart1.c"
 28941 ;; Parameters:    Size  Location     Type
 28942 ;;		None
 28943 ;; Auto vars:     Size  Location     Type
 28944 ;;		None
 28945 ;; Return value:  Size  Location     Type
 28946 ;;                  1  [STACK] void 
 28947 ;; Registers used:
 28948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 28949 ;; Tracked objects:
 28950 ;;		On entry : 0/39
 28951 ;;		On exit  : 3F/39
 28952 ;;		Unchanged: 0/0
 28953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 28954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 28958 ;;Total ram usage:        0 bytes
 28959 ;; Hardware stack levels used:    1
 28960 ;; Hardware stack levels required when called:   16
 28961 ;; This function calls:
 28962 ;;		_UART1_SetRxInterruptHandler
 28963 ;; This function is called by:
 28964 ;;		_SYSTEM_Initialize
 28965 ;; This function uses a reentrant model
 28966 ;;
 28967                           
 28968                           	psect	text111
 28969  01AAC4                     __ptext111:
 28970                           	opt callstack 0
 28971  01AAC4                     _UART1_Initialize:
 28972                           	opt callstack 13
 28973                           
 28974                           ;mcc_generated_files/uart1.c: 78:  PIE3bits.U1RXIE = 0;
 28975                           
 28976                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 28977                           ;incstack = 0
 28978  01AAC4  0139               	movlb	57	; () banked
 28979  01AAC6  9793               	bcf	147,3,b	;volatile
 28980                           
 28981                           ; BSR set to: 57
 28982                           ;mcc_generated_files/uart1.c: 79:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 28983  01AAC8  0E40               	movlw	low _UART1_Receive_ISR
 28984  01AACA  6EE6               	movwf	postinc1,c
 28985  01AACC  0EB5               	movlw	high _UART1_Receive_ISR
 28986  01AACE  6EE6               	movwf	postinc1,c
 28987  01AAD0  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 28988  01AAD2  6EE6               	movwf	postinc1,c
 28989  01AAD4  ECCB  F0D8         	call	_UART1_SetRxInterruptHandler	;wreg free
 28990                           
 28991                           ;mcc_generated_files/uart1.c: 84:  U1P1L = 0x00;
 28992  01AAD8  013D               	movlb	61	; () banked
 28993  01AADA  6BEC               	clrf	236,b	;volatile
 28994                           
 28995                           ; BSR set to: 61
 28996                           ;mcc_generated_files/uart1.c: 87:  U1P1H = 0x00;
 28997  01AADC  6BED               	clrf	237,b	;volatile
 28998                           
 28999                           ; BSR set to: 61
 29000                           ;mcc_generated_files/uart1.c: 90:  U1P2L = 0x00;
 29001  01AADE  6BEE               	clrf	238,b	;volatile
 29002                           
 29003                           ; BSR set to: 61
 29004                           ;mcc_generated_files/uart1.c: 93:  U1P2H = 0x00;
 29005  01AAE0  6BEF               	clrf	239,b	;volatile
 29006                           
 29007                           ; BSR set to: 61
 29008                           ;mcc_generated_files/uart1.c: 96:  U1P3L = 0x00;
 29009  01AAE2  6BF0               	clrf	240,b	;volatile
 29010                           
 29011                           ; BSR set to: 61
 29012                           ;mcc_generated_files/uart1.c: 99:  U1P3H = 0x00;
 29013  01AAE4  6BF1               	clrf	241,b	;volatile
 29014                           
 29015                           ; BSR set to: 61
 29016                           ;mcc_generated_files/uart1.c: 102:  U1CON0 = 0xB0;
 29017  01AAE6  0EB0               	movlw	176
 29018  01AAE8  6FF2               	movwf	242,b	;volatile
 29019                           
 29020                           ; BSR set to: 61
 29021                           ;mcc_generated_files/uart1.c: 105:  U1CON1 = 0x80;
 29022  01AAEA  0E80               	movlw	128
 29023  01AAEC  6FF3               	movwf	243,b	;volatile
 29024                           
 29025                           ; BSR set to: 61
 29026                           ;mcc_generated_files/uart1.c: 108:  U1CON2 = 0x00;
 29027  01AAEE  6BF4               	clrf	244,b	;volatile
 29028                           
 29029                           ; BSR set to: 61
 29030                           ;mcc_generated_files/uart1.c: 111:     U1BRGL = 0x8A;
 29031  01AAF0  0E8A               	movlw	138
 29032  01AAF2  6FF5               	movwf	245,b	;volatile
 29033                           
 29034                           ; BSR set to: 61
 29035                           ;mcc_generated_files/uart1.c: 114:     U1BRGH = 0x00;
 29036  01AAF4  6BF6               	clrf	246,b	;volatile
 29037                           
 29038                           ; BSR set to: 61
 29039                           ;mcc_generated_files/uart1.c: 117:  U1FIFO = 0x00;
 29040  01AAF6  6BF7               	clrf	247,b	;volatile
 29041                           
 29042                           ; BSR set to: 61
 29043                           ;mcc_generated_files/uart1.c: 120:  U1UIR = 0x00;
 29044  01AAF8  6BF8               	clrf	248,b	;volatile
 29045                           
 29046                           ; BSR set to: 61
 29047                           ;mcc_generated_files/uart1.c: 123:  U1ERRIR = 0x00;
 29048  01AAFA  6BF9               	clrf	249,b	;volatile
 29049                           
 29050                           ; BSR set to: 61
 29051                           ;mcc_generated_files/uart1.c: 126:  U1ERRIE = 0x00;
 29052  01AAFC  6BFA               	clrf	250,b	;volatile
 29053                           
 29054                           ; BSR set to: 61
 29055                           ;mcc_generated_files/uart1.c: 129:  uart1RxHead = 0;
 29056  01AAFE  6A5F               	clrf	_uart1RxHead^0,c	;volatile
 29057                           
 29058                           ; BSR set to: 61
 29059                           ;mcc_generated_files/uart1.c: 130:  uart1RxTail = 0;
 29060  01AB00  6A5E               	clrf	_uart1RxTail^0,c	;volatile
 29061                           
 29062                           ; BSR set to: 61
 29063                           ;mcc_generated_files/uart1.c: 131:  uart1RxCount = 0;
 29064  01AB02  6A5D               	clrf	_uart1RxCount^0,c	;volatile
 29065                           
 29066                           ; BSR set to: 61
 29067                           ;mcc_generated_files/uart1.c: 134:  PIE3bits.U1RXIE = 1;
 29068  01AB04  0139               	movlb	57	; () banked
 29069  01AB06  8793               	bsf	147,3,b	;volatile
 29070                           
 29071                           ; BSR set to: 57
 29072                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 29073  01AB08  0012               	return		;funcret
 29074  01AB0A                     __end_of_UART1_Initialize:
 29075                           	opt callstack 0
 29076                           
 29077 ;; *************** function _UART1_SetRxInterruptHandler *****************
 29078 ;; Defined at:
 29079 ;;		line 207 in file "mcc_generated_files/uart1.c"
 29080 ;; Parameters:    Size  Location     Type
 29081 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29082 ;;		 -> UART1_Receive_ISR(1), 
 29083 ;; Auto vars:     Size  Location     Type
 29084 ;;		None
 29085 ;; Return value:  Size  Location     Type
 29086 ;;                  1  [STACK] void 
 29087 ;; Registers used:
 29088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29089 ;; Tracked objects:
 29090 ;;		On entry : 3F/39
 29091 ;;		On exit  : 0/0
 29092 ;;		Unchanged: 0/0
 29093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29097 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29098 ;;Total ram usage:        0 bytes
 29099 ;; Hardware stack levels used:    1
 29100 ;; Hardware stack levels required when called:   15
 29101 ;; This function calls:
 29102 ;;		Nothing
 29103 ;; This function is called by:
 29104 ;;		_UART1_Initialize
 29105 ;; This function uses a reentrant model
 29106 ;;
 29107                           
 29108                           	psect	text112
 29109  01B196                     __ptext112:
 29110                           	opt callstack 0
 29111  01B196                     _UART1_SetRxInterruptHandler:
 29112                           	opt callstack 13
 29113                           
 29114                           ;mcc_generated_files/uart1.c: 208:  UART1_RxInterruptHandler = InterruptHandler;
 29115                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29116                           
 29117                           ; BSR set to: 57
 29118                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29119                           ;incstack = 0
 29120  01B196  50E1               	movf	fsr1l,w,c
 29121  01B198  0FFD               	addlw	-3
 29122  01B19A  6ED9               	movwf	fsr2l,c
 29123  01B19C  50E2               	movf	fsr1h,w,c
 29124  01B19E  6EDA               	movwf	fsr2h,c
 29125  01B1A0  0EFF               	movlw	255
 29126  01B1A2  22DA               	addwfc	fsr2h,f,c
 29127  01B1A4  006F FF78  F0B1    	movff	postinc2,_UART1_RxInterruptHandler
 29128  01B1AA  006F FF78  F0B2    	movff	postinc2,_UART1_RxInterruptHandler+1
 29129  01B1B0  006F FF74  F0B3    	movff	postdec2,_UART1_RxInterruptHandler+2
 29130                           
 29131                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 29132  01B1B6  52E5               	movf	postdec1,f,c
 29133  01B1B8  52E5               	movf	postdec1,f,c
 29134  01B1BA  52E5               	movf	postdec1,f,c
 29135  01B1BC  0012               	return		;funcret
 29136  01B1BE                     __end_of_UART1_SetRxInterruptHandler:
 29137                           	opt callstack 0
 29138                           
 29139 ;; *************** function _TMR6_Initialize *****************
 29140 ;; Defined at:
 29141 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 29142 ;; Parameters:    Size  Location     Type
 29143 ;;		None
 29144 ;; Auto vars:     Size  Location     Type
 29145 ;;		None
 29146 ;; Return value:  Size  Location     Type
 29147 ;;                  1  [STACK] void 
 29148 ;; Registers used:
 29149 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 29150 ;; Tracked objects:
 29151 ;;		On entry : 3F/39
 29152 ;;		On exit  : 0/0
 29153 ;;		Unchanged: 0/0
 29154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29158 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29159 ;;Total ram usage:        0 bytes
 29160 ;; Hardware stack levels used:    1
 29161 ;; Hardware stack levels required when called:   16
 29162 ;; This function calls:
 29163 ;;		_TMR6_SetInterruptHandler
 29164 ;; This function is called by:
 29165 ;;		_SYSTEM_Initialize
 29166 ;; This function uses a reentrant model
 29167 ;;
 29168                           
 29169                           	psect	text113
 29170  01B07C                     __ptext113:
 29171                           	opt callstack 0
 29172  01B07C                     _TMR6_Initialize:
 29173                           	opt callstack 13
 29174                           
 29175                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 29176                           
 29177                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29178                           ;incstack = 0
 29179  01B07C  0E01               	movlw	1
 29180  01B07E  6E96               	movwf	150,c	;volatile
 29181                           
 29182                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 29183  01B080  6A95               	clrf	149,c	;volatile
 29184                           
 29185                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 29186  01B082  6A97               	clrf	151,c	;volatile
 29187                           
 29188                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 29189  01B084  0E7C               	movlw	124
 29190  01B086  6E93               	movwf	147,c	;volatile
 29191                           
 29192                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 29193  01B088  6A92               	clrf	146,c	;volatile
 29194                           
 29195                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 29196  01B08A  0139               	movlb	57	; () banked
 29197  01B08C  91A9               	bcf	169,0,b	;volatile
 29198                           
 29199                           ; BSR set to: 57
 29200                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 29201  01B08E  8199               	bsf	153,0,b	;volatile
 29202                           
 29203                           ; BSR set to: 57
 29204                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 29205  01B090  0E58               	movlw	low _TMR6_DefaultInterruptHandler
 29206  01B092  6EE6               	movwf	postinc1,c
 29207  01B094  0EA9               	movlw	high _TMR6_DefaultInterruptHandler
 29208  01B096  6EE6               	movwf	postinc1,c
 29209  01B098  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 29210  01B09A  6EE6               	movwf	postinc1,c
 29211  01B09C  ECDF  F0D8         	call	_TMR6_SetInterruptHandler	;wreg free
 29212                           
 29213                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 29214  01B0A0  0EE0               	movlw	224
 29215  01B0A2  6E94               	movwf	148,c	;volatile
 29216                           
 29217                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29218  01B0A4  0012               	return		;funcret
 29219  01B0A6                     __end_of_TMR6_Initialize:
 29220                           	opt callstack 0
 29221                           
 29222 ;; *************** function _TMR6_SetInterruptHandler *****************
 29223 ;; Defined at:
 29224 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 29225 ;; Parameters:    Size  Location     Type
 29226 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29227 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 29228 ;; Auto vars:     Size  Location     Type
 29229 ;;		None
 29230 ;; Return value:  Size  Location     Type
 29231 ;;                  1  [STACK] void 
 29232 ;; Registers used:
 29233 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29234 ;; Tracked objects:
 29235 ;;		On entry : 3F/39
 29236 ;;		On exit  : 0/0
 29237 ;;		Unchanged: 0/0
 29238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29243 ;;Total ram usage:        0 bytes
 29244 ;; Hardware stack levels used:    1
 29245 ;; Hardware stack levels required when called:   15
 29246 ;; This function calls:
 29247 ;;		Nothing
 29248 ;; This function is called by:
 29249 ;;		_TMR6_Initialize
 29250 ;; This function uses a reentrant model
 29251 ;;
 29252                           
 29253                           	psect	text114
 29254  01B1BE                     __ptext114:
 29255                           	opt callstack 0
 29256  01B1BE                     _TMR6_SetInterruptHandler:
 29257                           	opt callstack 13
 29258                           
 29259                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 29260                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29261                           
 29262                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29263                           ;incstack = 0
 29264  01B1BE  50E1               	movf	fsr1l,w,c
 29265  01B1C0  0FFD               	addlw	-3
 29266  01B1C2  6ED9               	movwf	fsr2l,c
 29267  01B1C4  50E2               	movf	fsr1h,w,c
 29268  01B1C6  6EDA               	movwf	fsr2h,c
 29269  01B1C8  0EFF               	movlw	255
 29270  01B1CA  22DA               	addwfc	fsr2h,f,c
 29271  01B1CC  006F FF78  F0A8    	movff	postinc2,_TMR6_InterruptHandler
 29272  01B1D2  006F FF78  F0A9    	movff	postinc2,_TMR6_InterruptHandler+1
 29273  01B1D8  006F FF74  F0AA    	movff	postdec2,_TMR6_InterruptHandler+2
 29274                           
 29275                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29276  01B1DE  52E5               	movf	postdec1,f,c
 29277  01B1E0  52E5               	movf	postdec1,f,c
 29278  01B1E2  52E5               	movf	postdec1,f,c
 29279  01B1E4  0012               	return		;funcret
 29280  01B1E6                     __end_of_TMR6_SetInterruptHandler:
 29281                           	opt callstack 0
 29282                           
 29283 ;; *************** function _TMR5_Initialize *****************
 29284 ;; Defined at:
 29285 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 29286 ;; Parameters:    Size  Location     Type
 29287 ;;		None
 29288 ;; Auto vars:     Size  Location     Type
 29289 ;;		None
 29290 ;; Return value:  Size  Location     Type
 29291 ;;                  1  [STACK] void 
 29292 ;; Registers used:
 29293 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29294 ;; Tracked objects:
 29295 ;;		On entry : 0/39
 29296 ;;		On exit  : 0/0
 29297 ;;		Unchanged: 0/0
 29298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29303 ;;Total ram usage:        0 bytes
 29304 ;; Hardware stack levels used:    1
 29305 ;; Hardware stack levels required when called:   16
 29306 ;; This function calls:
 29307 ;;		_TMR5_SetInterruptHandler
 29308 ;; This function is called by:
 29309 ;;		_SYSTEM_Initialize
 29310 ;; This function uses a reentrant model
 29311 ;;
 29312                           
 29313                           	psect	text115
 29314  01AB0A                     __ptext115:
 29315                           	opt callstack 0
 29316  01AB0A                     _TMR5_Initialize:
 29317                           	opt callstack 13
 29318                           
 29319                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 29320                           
 29321                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29322                           ;incstack = 0
 29323  01AB0A  6A9B               	clrf	155,c	;volatile
 29324                           
 29325                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 29326  01AB0C  6A9C               	clrf	156,c	;volatile
 29327                           
 29328                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 29329  01AB0E  0E01               	movlw	1
 29330  01AB10  6E9D               	movwf	157,c	;volatile
 29331                           
 29332                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 29333  01AB12  0E63               	movlw	99
 29334  01AB14  6E99               	movwf	153,c	;volatile
 29335                           
 29336                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 29337  01AB16  0EC0               	movlw	192
 29338  01AB18  6E98               	movwf	152,c	;volatile
 29339                           
 29340                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 29341  01AB1A  5098               	movf	152,w,c	;volatile
 29342  01AB1C  006F FE64  F028    	movff	16281,btemp	;volatile
 29343  01AB22  6A29               	clrf	(btemp+1)^0,c
 29344  01AB24  0060  F0A0  F029   	movff	btemp,btemp+1
 29345  01AB2A  6A28               	clrf	btemp^0,c
 29346  01AB2C  1028               	iorwf	btemp^0,w,c
 29347  01AB2E  6E52               	movwf	_timer5ReloadVal^0,c	;volatile
 29348  01AB30  5029               	movf	(btemp+1)^0,w,c
 29349  01AB32  6E53               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 29350                           
 29351                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 29352  01AB34  0139               	movlb	57	; () banked
 29353  01AB36  9DA8               	bcf	168,6,b	;volatile
 29354                           
 29355                           ; BSR set to: 57
 29356                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 29357  01AB38  8D98               	bsf	152,6,b	;volatile
 29358                           
 29359                           ; BSR set to: 57
 29360                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 29361  01AB3A  0ED6               	movlw	low _TMR5_DefaultInterruptHandler
 29362  01AB3C  6EE6               	movwf	postinc1,c
 29363  01AB3E  0EAE               	movlw	high _TMR5_DefaultInterruptHandler
 29364  01AB40  6EE6               	movwf	postinc1,c
 29365  01AB42  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 29366  01AB44  6EE6               	movwf	postinc1,c
 29367  01AB46  ECF3  F0D8         	call	_TMR5_SetInterruptHandler	;wreg free
 29368                           
 29369                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 29370  01AB4A  0E31               	movlw	49
 29371  01AB4C  6E9A               	movwf	154,c	;volatile
 29372                           
 29373                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29374  01AB4E  0012               	return		;funcret
 29375  01AB50                     __end_of_TMR5_Initialize:
 29376                           	opt callstack 0
 29377                           
 29378 ;; *************** function _TMR5_SetInterruptHandler *****************
 29379 ;; Defined at:
 29380 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 29381 ;; Parameters:    Size  Location     Type
 29382 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29383 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 29384 ;; Auto vars:     Size  Location     Type
 29385 ;;		None
 29386 ;; Return value:  Size  Location     Type
 29387 ;;                  1  [STACK] void 
 29388 ;; Registers used:
 29389 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29390 ;; Tracked objects:
 29391 ;;		On entry : 3F/39
 29392 ;;		On exit  : 0/0
 29393 ;;		Unchanged: 0/0
 29394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29399 ;;Total ram usage:        0 bytes
 29400 ;; Hardware stack levels used:    1
 29401 ;; Hardware stack levels required when called:   15
 29402 ;; This function calls:
 29403 ;;		Nothing
 29404 ;; This function is called by:
 29405 ;;		_TMR5_Initialize
 29406 ;; This function uses a reentrant model
 29407 ;;
 29408                           
 29409                           	psect	text116
 29410  01B1E6                     __ptext116:
 29411                           	opt callstack 0
 29412  01B1E6                     _TMR5_SetInterruptHandler:
 29413                           	opt callstack 13
 29414                           
 29415                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 29416                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29417                           
 29418                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29419                           ;incstack = 0
 29420  01B1E6  50E1               	movf	fsr1l,w,c
 29421  01B1E8  0FFD               	addlw	-3
 29422  01B1EA  6ED9               	movwf	fsr2l,c
 29423  01B1EC  50E2               	movf	fsr1h,w,c
 29424  01B1EE  6EDA               	movwf	fsr2h,c
 29425  01B1F0  0EFF               	movlw	255
 29426  01B1F2  22DA               	addwfc	fsr2h,f,c
 29427  01B1F4  006F FF78  F0A5    	movff	postinc2,_TMR5_InterruptHandler
 29428  01B1FA  006F FF78  F0A6    	movff	postinc2,_TMR5_InterruptHandler+1
 29429  01B200  006F FF74  F0A7    	movff	postdec2,_TMR5_InterruptHandler+2
 29430                           
 29431                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29432  01B206  52E5               	movf	postdec1,f,c
 29433  01B208  52E5               	movf	postdec1,f,c
 29434  01B20A  52E5               	movf	postdec1,f,c
 29435  01B20C  0012               	return		;funcret
 29436  01B20E                     __end_of_TMR5_SetInterruptHandler:
 29437                           	opt callstack 0
 29438                           
 29439 ;; *************** function _TMR3_Initialize *****************
 29440 ;; Defined at:
 29441 ;;		line 65 in file "mcc_generated_files/tmr3.c"
 29442 ;; Parameters:    Size  Location     Type
 29443 ;;		None
 29444 ;; Auto vars:     Size  Location     Type
 29445 ;;		None
 29446 ;; Return value:  Size  Location     Type
 29447 ;;                  1  [STACK] void 
 29448 ;; Registers used:
 29449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 29450 ;; Tracked objects:
 29451 ;;		On entry : 0/39
 29452 ;;		On exit  : 0/0
 29453 ;;		Unchanged: 0/0
 29454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29459 ;;Total ram usage:        0 bytes
 29460 ;; Hardware stack levels used:    1
 29461 ;; Hardware stack levels required when called:   16
 29462 ;; This function calls:
 29463 ;;		_TMR3_SetInterruptHandler
 29464 ;; This function is called by:
 29465 ;;		_SYSTEM_Initialize
 29466 ;; This function uses a reentrant model
 29467 ;;
 29468                           
 29469                           	psect	text117
 29470  01AB50                     __ptext117:
 29471                           	opt callstack 0
 29472  01AB50                     _TMR3_Initialize:
 29473                           	opt callstack 13
 29474                           
 29475                           ;mcc_generated_files/tmr3.c: 70:     T3GCON = 0x00;
 29476                           
 29477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29478                           ;incstack = 0
 29479  01AB50  6AA7               	clrf	167,c	;volatile
 29480                           
 29481                           ;mcc_generated_files/tmr3.c: 73:     T3GATE = 0x00;
 29482  01AB52  6AA8               	clrf	168,c	;volatile
 29483                           
 29484                           ;mcc_generated_files/tmr3.c: 76:     T3CLK = 0x01;
 29485  01AB54  0E01               	movlw	1
 29486  01AB56  6EA9               	movwf	169,c	;volatile
 29487                           
 29488                           ;mcc_generated_files/tmr3.c: 79:     TMR3H = 0x3C;
 29489  01AB58  0E3C               	movlw	60
 29490  01AB5A  6EA5               	movwf	165,c	;volatile
 29491                           
 29492                           ;mcc_generated_files/tmr3.c: 82:     TMR3L = 0xB0;
 29493  01AB5C  0EB0               	movlw	176
 29494  01AB5E  6EA4               	movwf	164,c	;volatile
 29495                           
 29496                           ;mcc_generated_files/tmr3.c: 85:     timer3ReloadVal=(uint16_t)((TMR3H << 8) | TMR3L);
 29497  01AB60  50A4               	movf	164,w,c	;volatile
 29498  01AB62  006F FE94  F028    	movff	16293,btemp	;volatile
 29499  01AB68  6A29               	clrf	(btemp+1)^0,c
 29500  01AB6A  0060  F0A0  F029   	movff	btemp,btemp+1
 29501  01AB70  6A28               	clrf	btemp^0,c
 29502  01AB72  1028               	iorwf	btemp^0,w,c
 29503  01AB74  6E4E               	movwf	_timer3ReloadVal^0,c	;volatile
 29504  01AB76  5029               	movf	(btemp+1)^0,w,c
 29505  01AB78  6E4F               	movwf	(_timer3ReloadVal+1)^0,c	;volatile
 29506                           
 29507                           ;mcc_generated_files/tmr3.c: 88:     PIR6bits.TMR3IF = 0;
 29508  01AB7A  0139               	movlb	57	; () banked
 29509  01AB7C  9DA6               	bcf	166,6,b	;volatile
 29510                           
 29511                           ; BSR set to: 57
 29512                           ;mcc_generated_files/tmr3.c: 91:     PIE6bits.TMR3IE = 1;
 29513  01AB7E  8D96               	bsf	150,6,b	;volatile
 29514                           
 29515                           ; BSR set to: 57
 29516                           ;mcc_generated_files/tmr3.c: 94:     TMR3_SetInterruptHandler(TMR3_DefaultInterruptHandl
      +                          er);
 29517  01AB80  0E18               	movlw	low _TMR3_DefaultInterruptHandler
 29518  01AB82  6EE6               	movwf	postinc1,c
 29519  01AB84  0EB7               	movlw	high _TMR3_DefaultInterruptHandler
 29520  01AB86  6EE6               	movwf	postinc1,c
 29521  01AB88  0E01               	movlw	low (_TMR3_DefaultInterruptHandler shr (0+16))
 29522  01AB8A  6EE6               	movwf	postinc1,c
 29523  01AB8C  EC07  F0D9         	call	_TMR3_SetInterruptHandler	;wreg free
 29524                           
 29525                           ;mcc_generated_files/tmr3.c: 97:     T3CON = 0x31;
 29526  01AB90  0E31               	movlw	49
 29527  01AB92  6EA6               	movwf	166,c	;volatile
 29528                           
 29529                           ; _TMR3_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29530  01AB94  0012               	return		;funcret
 29531  01AB96                     __end_of_TMR3_Initialize:
 29532                           	opt callstack 0
 29533                           
 29534 ;; *************** function _TMR3_SetInterruptHandler *****************
 29535 ;; Defined at:
 29536 ;;		line 193 in file "mcc_generated_files/tmr3.c"
 29537 ;; Parameters:    Size  Location     Type
 29538 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 29539 ;;		 -> calc_bsoc(1), TMR3_DefaultInterruptHandler(1), 
 29540 ;; Auto vars:     Size  Location     Type
 29541 ;;		None
 29542 ;; Return value:  Size  Location     Type
 29543 ;;                  1  [STACK] void 
 29544 ;; Registers used:
 29545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 29546 ;; Tracked objects:
 29547 ;;		On entry : 0/1
 29548 ;;		On exit  : 0/0
 29549 ;;		Unchanged: 0/0
 29550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29553 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29554 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29555 ;;Total ram usage:        0 bytes
 29556 ;; Hardware stack levels used:    1
 29557 ;; Hardware stack levels required when called:   15
 29558 ;; This function calls:
 29559 ;;		Nothing
 29560 ;; This function is called by:
 29561 ;;		_TMR3_Initialize
 29562 ;;		_init_bsoc
 29563 ;; This function uses a reentrant model
 29564 ;;
 29565                           
 29566                           	psect	text118
 29567  01B20E                     __ptext118:
 29568                           	opt callstack 0
 29569  01B20E                     _TMR3_SetInterruptHandler:
 29570                           	opt callstack 14
 29571                           
 29572                           ;mcc_generated_files/tmr3.c: 194:     TMR3_InterruptHandler = InterruptHandler;
 29573                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 29574                           
 29575                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29576                           ;incstack = 0
 29577  01B20E  50E1               	movf	fsr1l,w,c
 29578  01B210  0FFD               	addlw	-3
 29579  01B212  6ED9               	movwf	fsr2l,c
 29580  01B214  50E2               	movf	fsr1h,w,c
 29581  01B216  6EDA               	movwf	fsr2h,c
 29582  01B218  0EFF               	movlw	255
 29583  01B21A  22DA               	addwfc	fsr2h,f,c
 29584  01B21C  006F FF78  F0A2    	movff	postinc2,_TMR3_InterruptHandler
 29585  01B222  006F FF78  F0A3    	movff	postinc2,_TMR3_InterruptHandler+1
 29586  01B228  006F FF74  F0A4    	movff	postdec2,_TMR3_InterruptHandler+2
 29587                           
 29588                           ; _TMR3_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 29589  01B22E  52E5               	movf	postdec1,f,c
 29590  01B230  52E5               	movf	postdec1,f,c
 29591  01B232  52E5               	movf	postdec1,f,c
 29592  01B234  0012               	return		;funcret
 29593  01B236                     __end_of_TMR3_SetInterruptHandler:
 29594                           	opt callstack 0
 29595                           
 29596 ;; *************** function _TMR2_Initialize *****************
 29597 ;; Defined at:
 29598 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 29599 ;; Parameters:    Size  Location     Type
 29600 ;;		None
 29601 ;; Auto vars:     Size  Location     Type
 29602 ;;		None
 29603 ;; Return value:  Size  Location     Type
 29604 ;;                  1  [STACK] void 
 29605 ;; Registers used:
 29606 ;;		wreg, status,2
 29607 ;; Tracked objects:
 29608 ;;		On entry : 3F/3F
 29609 ;;		On exit  : 3F/39
 29610 ;;		Unchanged: 0/0
 29611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29616 ;;Total ram usage:        0 bytes
 29617 ;; Hardware stack levels used:    1
 29618 ;; Hardware stack levels required when called:   15
 29619 ;; This function calls:
 29620 ;;		Nothing
 29621 ;; This function is called by:
 29622 ;;		_SYSTEM_Initialize
 29623 ;; This function uses a reentrant model
 29624 ;;
 29625                           
 29626                           	psect	text119
 29627  01B5AA                     __ptext119:
 29628                           	opt callstack 0
 29629  01B5AA                     _TMR2_Initialize:
 29630                           	opt callstack 14
 29631                           
 29632                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 29633                           
 29634                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29635                           ;incstack = 0
 29636  01B5AA  0E01               	movlw	1
 29637  01B5AC  6EAE               	movwf	174,c	;volatile
 29638                           
 29639                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 29640  01B5AE  6AAD               	clrf	173,c	;volatile
 29641                           
 29642                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 29643  01B5B0  6AAF               	clrf	175,c	;volatile
 29644                           
 29645                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 29646  01B5B2  0E63               	movlw	99
 29647  01B5B4  6EAB               	movwf	171,c	;volatile
 29648                           
 29649                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 29650  01B5B6  6AAA               	clrf	170,c	;volatile
 29651                           
 29652                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 29653  01B5B8  0139               	movlb	57	; () banked
 29654  01B5BA  95A4               	bcf	164,2,b	;volatile
 29655                           
 29656                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 29657  01B5BC  0EC0               	movlw	192
 29658  01B5BE  6EAC               	movwf	172,c	;volatile
 29659                           
 29660                           ; BSR set to: 57
 29661                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29662  01B5C0  0012               	return		;funcret
 29663  01B5C2                     __end_of_TMR2_Initialize:
 29664                           	opt callstack 0
 29665                           
 29666 ;; *************** function _SPI1_Initialize *****************
 29667 ;; Defined at:
 29668 ;;		line 64 in file "mcc_generated_files/spi1.c"
 29669 ;; Parameters:    Size  Location     Type
 29670 ;;		None
 29671 ;; Auto vars:     Size  Location     Type
 29672 ;;		None
 29673 ;; Return value:  Size  Location     Type
 29674 ;;                  1  [STACK] void 
 29675 ;; Registers used:
 29676 ;;		wreg, status,2
 29677 ;; Tracked objects:
 29678 ;;		On entry : 3F/39
 29679 ;;		On exit  : 3F/3D
 29680 ;;		Unchanged: 0/0
 29681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29686 ;;Total ram usage:        0 bytes
 29687 ;; Hardware stack levels used:    1
 29688 ;; Hardware stack levels required when called:   15
 29689 ;; This function calls:
 29690 ;;		Nothing
 29691 ;; This function is called by:
 29692 ;;		_SYSTEM_Initialize
 29693 ;; This function uses a reentrant model
 29694 ;;
 29695                           
 29696                           	psect	text120
 29697  01B5C2                     __ptext120:
 29698                           	opt callstack 0
 29699  01B5C2                     _SPI1_Initialize:
 29700                           	opt callstack 14
 29701                           
 29702                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 29703                           
 29704                           ; BSR set to: 57
 29705                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29706                           ;incstack = 0
 29707  01B5C2  0E40               	movlw	64
 29708  01B5C4  013D               	movlb	61	; () banked
 29709  01B5C6  6F15               	movwf	21,b	;volatile
 29710                           
 29711                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 29712  01B5C8  0E03               	movlw	3
 29713  01B5CA  6F16               	movwf	22,b	;volatile
 29714                           
 29715                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 29716  01B5CC  0E4F               	movlw	79
 29717  01B5CE  6F19               	movwf	25,b	;volatile
 29718                           
 29719                           ; BSR set to: 61
 29720                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 29721  01B5D0  6B1C               	clrf	28,b	;volatile
 29722                           
 29723                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 29724  01B5D2  0E83               	movlw	131
 29725  01B5D4  6F14               	movwf	20,b	;volatile
 29726                           
 29727                           ; BSR set to: 61
 29728                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29729  01B5D6  0012               	return		;funcret
 29730  01B5D8                     __end_of_SPI1_Initialize:
 29731                           	opt callstack 0
 29732                           
 29733 ;; *************** function _PWM8_Initialize *****************
 29734 ;; Defined at:
 29735 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 29736 ;; Parameters:    Size  Location     Type
 29737 ;;		None
 29738 ;; Auto vars:     Size  Location     Type
 29739 ;;		None
 29740 ;; Return value:  Size  Location     Type
 29741 ;;                  1  [STACK] void 
 29742 ;; Registers used:
 29743 ;;		wreg, status,2
 29744 ;; Tracked objects:
 29745 ;;		On entry : 0/3E
 29746 ;;		On exit  : 3F/3F
 29747 ;;		Unchanged: 0/0
 29748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29753 ;;Total ram usage:        0 bytes
 29754 ;; Hardware stack levels used:    1
 29755 ;; Hardware stack levels required when called:   15
 29756 ;; This function calls:
 29757 ;;		Nothing
 29758 ;; This function is called by:
 29759 ;;		_SYSTEM_Initialize
 29760 ;; This function uses a reentrant model
 29761 ;;
 29762                           
 29763                           	psect	text121
 29764  01B5D8                     __ptext121:
 29765                           	opt callstack 0
 29766  01B5D8                     _PWM8_Initialize:
 29767                           	opt callstack 14
 29768                           
 29769                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 29770                           
 29771                           ; BSR set to: 61
 29772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29773                           ;incstack = 0
 29774  01B5D8  0E80               	movlw	128
 29775  01B5DA  6E62               	movwf	98,c	;volatile
 29776                           
 29777                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 29778  01B5DC  6A61               	clrf	97,c	;volatile
 29779                           
 29780                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 29781  01B5DE  0E40               	movlw	64
 29782  01B5E0  6E60               	movwf	96,c	;volatile
 29783                           
 29784                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 29785  01B5E2  013F               	movlb	63	; () banked
 29786  01B5E4  515F               	movf	95,w,b	;volatile
 29787  01B5E6  0B3F               	andlw	-193
 29788  01B5E8  0940               	iorlw	64
 29789  01B5EA  6F5F               	movwf	95,b	;volatile
 29790                           
 29791                           ; BSR set to: 63
 29792                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 29793  01B5EC  0012               	return		;funcret
 29794  01B5EE                     __end_of_PWM8_Initialize:
 29795                           	opt callstack 0
 29796                           
 29797 ;; *************** function _PMD_Initialize *****************
 29798 ;; Defined at:
 29799 ;;		line 90 in file "mcc_generated_files/mcc.c"
 29800 ;; Parameters:    Size  Location     Type
 29801 ;;		None
 29802 ;; Auto vars:     Size  Location     Type
 29803 ;;		None
 29804 ;; Return value:  Size  Location     Type
 29805 ;;                  1  [STACK] void 
 29806 ;; Registers used:
 29807 ;;		None
 29808 ;; Tracked objects:
 29809 ;;		On entry : 3F/39
 29810 ;;		On exit  : 3F/39
 29811 ;;		Unchanged: 0/0
 29812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29816 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29817 ;;Total ram usage:        0 bytes
 29818 ;; Hardware stack levels used:    1
 29819 ;; Hardware stack levels required when called:   15
 29820 ;; This function calls:
 29821 ;;		Nothing
 29822 ;; This function is called by:
 29823 ;;		_SYSTEM_Initialize
 29824 ;; This function uses a reentrant model
 29825 ;;
 29826                           
 29827                           	psect	text122
 29828  01B604                     __ptext122:
 29829                           	opt callstack 0
 29830  01B604                     _PMD_Initialize:
 29831                           	opt callstack 14
 29832                           
 29833                           ;mcc_generated_files/mcc.c: 93:     PMD0 = 0x00;
 29834                           
 29835                           ; BSR set to: 63
 29836                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29837                           ;incstack = 0
 29838  01B604  0139               	movlb	57	; () banked
 29839  01B606  6BC0               	clrf	192,b	;volatile
 29840                           
 29841                           ;mcc_generated_files/mcc.c: 95:     PMD1 = 0x00;
 29842  01B608  6BC1               	clrf	193,b	;volatile
 29843                           
 29844                           ;mcc_generated_files/mcc.c: 97:     PMD2 = 0x00;
 29845  01B60A  6BC2               	clrf	194,b	;volatile
 29846                           
 29847                           ;mcc_generated_files/mcc.c: 99:     PMD3 = 0x00;
 29848  01B60C  6BC3               	clrf	195,b	;volatile
 29849                           
 29850                           ;mcc_generated_files/mcc.c: 101:     PMD4 = 0x00;
 29851  01B60E  6BC4               	clrf	196,b	;volatile
 29852                           
 29853                           ;mcc_generated_files/mcc.c: 103:     PMD5 = 0x00;
 29854  01B610  6BC5               	clrf	197,b	;volatile
 29855                           
 29856                           ;mcc_generated_files/mcc.c: 105:     PMD6 = 0x00;
 29857  01B612  6BC6               	clrf	198,b	;volatile
 29858                           
 29859                           ;mcc_generated_files/mcc.c: 107:     PMD7 = 0x00;
 29860  01B614  6BC7               	clrf	199,b	;volatile
 29861                           
 29862                           ; BSR set to: 57
 29863                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 29864  01B616  0012               	return		;funcret
 29865  01B618                     __end_of_PMD_Initialize:
 29866                           	opt callstack 0
 29867                           
 29868 ;; *************** function _PIN_MANAGER_Initialize *****************
 29869 ;; Defined at:
 29870 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 29871 ;; Parameters:    Size  Location     Type
 29872 ;;		None
 29873 ;; Auto vars:     Size  Location     Type
 29874 ;;		None
 29875 ;; Return value:  Size  Location     Type
 29876 ;;                  1  [STACK] void 
 29877 ;; Registers used:
 29878 ;;		wreg, status,2
 29879 ;; Tracked objects:
 29880 ;;		On entry : 3F/39
 29881 ;;		On exit  : 3F/3A
 29882 ;;		Unchanged: 0/0
 29883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 29884 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29887 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 29888 ;;Total ram usage:        0 bytes
 29889 ;; Hardware stack levels used:    1
 29890 ;; Hardware stack levels required when called:   15
 29891 ;; This function calls:
 29892 ;;		Nothing
 29893 ;; This function is called by:
 29894 ;;		_SYSTEM_Initialize
 29895 ;; This function uses a reentrant model
 29896 ;;
 29897                           
 29898                           	psect	text123
 29899  01A0F6                     __ptext123:
 29900                           	opt callstack 0
 29901  01A0F6                     _PIN_MANAGER_Initialize:
 29902                           	opt callstack 14
 29903                           
 29904                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 29905                           
 29906                           ; BSR set to: 57
 29907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 29908                           ;incstack = 0
 29909  01A0F6  0E07               	movlw	7
 29910  01A0F8  6EBE               	movwf	190,c	;volatile
 29911                           
 29912                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x80;
 29913  01A0FA  0E80               	movlw	128
 29914  01A0FC  6EBD               	movwf	189,c	;volatile
 29915                           
 29916                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 29917  01A0FE  6ABA               	clrf	186,c	;volatile
 29918                           
 29919                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 29920  01A100  6ABF               	clrf	191,c	;volatile
 29921                           
 29922                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 29923  01A102  6ABB               	clrf	187,c	;volatile
 29924                           
 29925                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 29926  01A104  0E07               	movlw	7
 29927  01A106  6EBC               	movwf	188,c	;volatile
 29928                           
 29929                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 29930  01A108  6AC6               	clrf	198,c	;volatile
 29931                           
 29932                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 29933  01A10A  0E0F               	movlw	15
 29934  01A10C  6EC7               	movwf	199,c	;volatile
 29935                           
 29936                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 29937  01A10E  68C2               	setf	194,c	;volatile
 29938                           
 29939                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 29940  01A110  0EBF               	movlw	191
 29941  01A112  6EC3               	movwf	195,c	;volatile
 29942                           
 29943                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 29944  01A114  0E90               	movlw	144
 29945  01A116  6EC4               	movwf	196,c	;volatile
 29946                           
 29947                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 29948  01A118  0E0C               	movlw	12
 29949  01A11A  6EC5               	movwf	197,c	;volatile
 29950                           
 29951                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 29952  01A11C  013A               	movlb	58	; () banked
 29953  01A11E  6B70               	clrf	112,b	;volatile
 29954                           
 29955                           ; BSR set to: 58
 29956                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 29957  01A120  6B60               	clrf	96,b	;volatile
 29958                           
 29959                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 29960  01A122  0E3C               	movlw	60
 29961  01A124  6F50               	movwf	80,b	;volatile
 29962                           
 29963                           ; BSR set to: 58
 29964                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 29965  01A126  6B80               	clrf	128,b	;volatile
 29966                           
 29967                           ; BSR set to: 58
 29968                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 29969  01A128  6B90               	clrf	144,b	;volatile
 29970                           
 29971                           ; BSR set to: 58
 29972                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 29973  01A12A  6940               	setf	64,b	;volatile
 29974                           
 29975                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 29976  01A12C  0E0C               	movlw	12
 29977  01A12E  6F71               	movwf	113,b	;volatile
 29978                           
 29979                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 29980  01A130  0E0F               	movlw	15
 29981  01A132  6F91               	movwf	145,b	;volatile
 29982                           
 29983                           ; BSR set to: 58
 29984                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 29985  01A134  6B81               	clrf	129,b	;volatile
 29986                           
 29987                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x83;
 29988  01A136  0E83               	movlw	131
 29989  01A138  6F51               	movwf	81,b	;volatile
 29990                           
 29991                           ; BSR set to: 58
 29992                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 29993  01A13A  6B41               	clrf	65,b	;volatile
 29994                           
 29995                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 29996  01A13C  0E97               	movlw	151
 29997  01A13E  6F61               	movwf	97,b	;volatile
 29998                           
 29999                           ; BSR set to: 58
 30000                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 30001  01A140  6B82               	clrf	130,b	;volatile
 30002                           
 30003                           ; BSR set to: 58
 30004                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 30005  01A142  6B92               	clrf	146,b	;volatile
 30006                           
 30007                           ; BSR set to: 58
 30008                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 30009  01A144  6B42               	clrf	66,b	;volatile
 30010                           
 30011                           ; BSR set to: 58
 30012                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 30013  01A146  6B52               	clrf	82,b	;volatile
 30014                           
 30015                           ; BSR set to: 58
 30016                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 30017  01A148  6B62               	clrf	98,b	;volatile
 30018                           
 30019                           ; BSR set to: 58
 30020                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 30021  01A14A  6B72               	clrf	114,b	;volatile
 30022                           
 30023                           ; BSR set to: 58
 30024                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 30025  01A14C  6943               	setf	67,b	;volatile
 30026                           
 30027                           ; BSR set to: 58
 30028                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 30029  01A14E  6953               	setf	83,b	;volatile
 30030                           
 30031                           ; BSR set to: 58
 30032                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 30033  01A150  6963               	setf	99,b	;volatile
 30034                           
 30035                           ; BSR set to: 58
 30036                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 30037  01A152  6973               	setf	115,b	;volatile
 30038                           
 30039                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 30040  01A154  0E07               	movlw	7
 30041  01A156  6F83               	movwf	131,b	;volatile
 30042                           
 30043                           ; BSR set to: 58
 30044                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 30045  01A158  6993               	setf	147,b	;volatile
 30046                           
 30047                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 30048  01A15A  0E0F               	movlw	15
 30049  01A15C  6FE8               	movwf	232,b	;volatile
 30050                           
 30051                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 30052  01A15E  0E13               	movlw	19
 30053  01A160  6FDE               	movwf	222,b	;volatile
 30054                           
 30055                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 30056  01A162  0E16               	movlw	22
 30057  01A164  6F0E               	movwf	14,b	;volatile
 30058                           
 30059                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 30060  01A166  0E1E               	movlw	30
 30061  01A168  6F13               	movwf	19,b	;volatile
 30062                           
 30063                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 30064  01A16A  0E08               	movlw	8
 30065  01A16C  6FC0               	movwf	192,b	;volatile
 30066                           
 30067                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 30068  01A16E  0E10               	movlw	16
 30069  01A170  6F19               	movwf	25,b	;volatile
 30070                           
 30071                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 30072  01A172  0E09               	movlw	9
 30073  01A174  6FC1               	movwf	193,b	;volatile
 30074                           
 30075                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 30076  01A176  0E1F               	movlw	31
 30077  01A178  6F15               	movwf	21,b	;volatile
 30078                           
 30079                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 30080  01A17A  0E13               	movlw	19
 30081  01A17C  6F16               	movwf	22,b	;volatile
 30082                           
 30083                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 30084  01A17E  0E17               	movlw	23
 30085  01A180  6FE5               	movwf	229,b	;volatile
 30086                           
 30087                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 30088  01A182  0E14               	movlw	20
 30089  01A184  6FDF               	movwf	223,b	;volatile
 30090                           
 30091                           ; BSR set to: 58
 30092                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 30093  01A186  0012               	return		;funcret
 30094  01A188                     __end_of_PIN_MANAGER_Initialize:
 30095                           	opt callstack 0
 30096                           
 30097 ;; *************** function _OSCILLATOR_Initialize *****************
 30098 ;; Defined at:
 30099 ;;		line 72 in file "mcc_generated_files/mcc.c"
 30100 ;; Parameters:    Size  Location     Type
 30101 ;;		None
 30102 ;; Auto vars:     Size  Location     Type
 30103 ;;		None
 30104 ;; Return value:  Size  Location     Type
 30105 ;;                  1  [STACK] void 
 30106 ;; Registers used:
 30107 ;;		wreg, status,2
 30108 ;; Tracked objects:
 30109 ;;		On entry : 3F/3A
 30110 ;;		On exit  : 3F/39
 30111 ;;		Unchanged: 0/0
 30112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30117 ;;Total ram usage:        0 bytes
 30118 ;; Hardware stack levels used:    1
 30119 ;; Hardware stack levels required when called:   15
 30120 ;; This function calls:
 30121 ;;		Nothing
 30122 ;; This function is called by:
 30123 ;;		_SYSTEM_Initialize
 30124 ;; This function uses a reentrant model
 30125 ;;
 30126                           
 30127                           	psect	text124
 30128  01B5EE                     __ptext124:
 30129                           	opt callstack 0
 30130  01B5EE                     _OSCILLATOR_Initialize:
 30131                           	opt callstack 14
 30132                           
 30133                           ;mcc_generated_files/mcc.c: 75:     OSCCON1 = 0x20;
 30134                           
 30135                           ; BSR set to: 58
 30136                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30137                           ;incstack = 0
 30138  01B5EE  0E20               	movlw	32
 30139  01B5F0  0139               	movlb	57	; () banked
 30140  01B5F2  6FD9               	movwf	217,b	;volatile
 30141                           
 30142                           ; BSR set to: 57
 30143                           ;mcc_generated_files/mcc.c: 77:     OSCCON3 = 0x00;
 30144  01B5F4  6BDB               	clrf	219,b	;volatile
 30145                           
 30146                           ; BSR set to: 57
 30147                           ;mcc_generated_files/mcc.c: 79:     OSCEN = 0x00;
 30148  01B5F6  6BDD               	clrf	221,b	;volatile
 30149                           
 30150                           ;mcc_generated_files/mcc.c: 81:     OSCFRQ = 0x02;
 30151  01B5F8  0E02               	movlw	2
 30152  01B5FA  6FDF               	movwf	223,b	;volatile
 30153                           
 30154                           ; BSR set to: 57
 30155                           ;mcc_generated_files/mcc.c: 83:     OSCTUNE = 0x00;
 30156  01B5FC  6BDE               	clrf	222,b	;volatile
 30157  01B5FE                     l169:
 30158                           
 30159                           ; BSR set to: 57
 30160                           ;mcc_generated_files/mcc.c: 85:     while(PLLR == 0)
 30161  01B5FE  B1DC               	btfsc	220,0,b	;volatile
 30162  01B600  0012               	return	
 30163  01B602  D7FD               	goto	l169
 30164  01B604                     __end_of_OSCILLATOR_Initialize:
 30165                           	opt callstack 0
 30166                           
 30167 ;; *************** function _INTERRUPT_Initialize *****************
 30168 ;; Defined at:
 30169 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 30170 ;; Parameters:    Size  Location     Type
 30171 ;;		None
 30172 ;; Auto vars:     Size  Location     Type
 30173 ;;  state           1  [STACK] _Bool 
 30174 ;; Return value:  Size  Location     Type
 30175 ;;                  1  [STACK] void 
 30176 ;; Registers used:
 30177 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 30178 ;; Tracked objects:
 30179 ;;		On entry : 0/0
 30180 ;;		On exit  : 3F/39
 30181 ;;		Unchanged: 0/0
 30182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30187 ;;Total ram usage:        0 bytes
 30188 ;; Hardware stack levels used:    1
 30189 ;; Hardware stack levels required when called:   15
 30190 ;; This function calls:
 30191 ;;		Nothing
 30192 ;; This function is called by:
 30193 ;;		_SYSTEM_Initialize
 30194 ;; This function uses a reentrant model
 30195 ;;
 30196                           
 30197                           	psect	text125
 30198  01A566                     __ptext125:
 30199                           	opt callstack 0
 30200  01A566                     _INTERRUPT_Initialize:
 30201                           	opt callstack 0
 30202                           
 30203                           ; BSR set to: 57
 30204                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30205  01A566  52E6               	movf	postinc1,f,c
 30206                           
 30207                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 30208                           
 30209                           ;incstack = 0
 30210  01A568  8AD2               	bsf	210,5,c	;volatile
 30211                           
 30212                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 30213  01A56A  AED2               	btfss	16338,7,c	;volatile
 30214  01A56C  D003               	goto	u8960
 30215  01A56E  6A33               	clrf	(btemp+11)^0,c
 30216  01A570  2A33               	incf	(btemp+11)^0,f,c
 30217  01A572  D001               	goto	u8978
 30218  01A574                     u8960:
 30219  01A574  6A33               	clrf	(btemp+11)^0,c
 30220  01A576                     u8978:
 30221                           
 30222                           ;stkvar	_state @ sp[(-1)+0]
 30223  01A576  0EFF               	movlw	-1
 30224  01A578  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 30225                           
 30226                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 30227  01A57E  9ED2               	bcf	16338,7,c	;volatile
 30228                           
 30229                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 30230  01A580  0E55               	movlw	85
 30231  01A582  6ED4               	movwf	212,c	;volatile
 30232                           
 30233                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 30234  01A584  0EAA               	movlw	170
 30235  01A586  6ED4               	movwf	212,c	;volatile
 30236                           
 30237                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 30238  01A588  90D4               	bcf	212,0,c	;volatile
 30239                           
 30240                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 30241  01A58A  0138               	movlb	56	; () banked
 30242  01A58C  6B9F               	clrf	159,b	;volatile
 30243                           
 30244                           ; BSR set to: 56
 30245                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 30246  01A58E  6B9E               	clrf	158,b	;volatile
 30247                           
 30248                           ; BSR set to: 56
 30249                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 30250  01A590  0E08               	movlw	8
 30251  01A592  6F9D               	movwf	157,b	;volatile
 30252                           
 30253                           ; BSR set to: 56
 30254                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 30255  01A594  0E55               	movlw	85
 30256  01A596  6ED4               	movwf	212,c	;volatile
 30257                           
 30258                           ; BSR set to: 56
 30259                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 30260  01A598  0EAA               	movlw	170
 30261  01A59A  6ED4               	movwf	212,c	;volatile
 30262                           
 30263                           ; BSR set to: 56
 30264                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 30265  01A59C  80D4               	bsf	212,0,c	;volatile
 30266                           
 30267                           ; BSR set to: 56
 30268                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 30269                           ;stkvar	_state @ sp[(-1)+0]
 30270  01A59E  0EFF               	movlw	-1
 30271  01A5A0  B0E3               	btfsc	plusw1,0,c
 30272  01A5A2  D002               	bra	u8985
 30273  01A5A4  9ED2               	bcf	16338,7,c	;volatile
 30274  01A5A6  D001               	bra	u8986
 30275  01A5A8                     u8985:
 30276  01A5A8  8ED2               	bsf	16338,7,c	;volatile
 30277  01A5AA                     u8986:
 30278                           
 30279                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 30280  01A5AA  0139               	movlb	57	; () banked
 30281  01A5AC  8782               	bsf	130,3,b	;volatile
 30282                           
 30283                           ; BSR set to: 57
 30284                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 30285  01A5AE  8382               	bsf	130,1,b	;volatile
 30286                           
 30287                           ; BSR set to: 57
 30288                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 30289  01A5B0  8182               	bsf	130,0,b	;volatile
 30290                           
 30291                           ; BSR set to: 57
 30292                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 30293  01A5B2  8582               	bsf	130,2,b	;volatile
 30294                           
 30295                           ; BSR set to: 57
 30296                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 30297  01A5B4  8786               	bsf	134,3,b	;volatile
 30298                           
 30299                           ; BSR set to: 57
 30300                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 30301  01A5B6  8586               	bsf	134,2,b	;volatile
 30302                           
 30303                           ; BSR set to: 57
 30304                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1RXIP = 1;
 30305  01A5B8  8783               	bsf	131,3,b	;volatile
 30306                           
 30307                           ; BSR set to: 57
 30308                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR1bits.INT0IP = 1;
 30309  01A5BA  8181               	bsf	129,0,b	;volatile
 30310                           
 30311                           ; BSR set to: 57
 30312                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR5bits.INT1IP = 0;
 30313  01A5BC  9185               	bcf	133,0,b	;volatile
 30314                           
 30315                           ; BSR set to: 57
 30316                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR9bits.TMR6IP = 1;
 30317  01A5BE  8189               	bsf	137,0,b	;volatile
 30318                           
 30319                           ; BSR set to: 57
 30320                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR8bits.TMR5IP = 0;
 30321  01A5C0  9D88               	bcf	136,6,b	;volatile
 30322                           
 30323                           ; BSR set to: 57
 30324                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR6bits.TMR3IP = 0;
 30325  01A5C2  9D86               	bcf	134,6,b	;volatile
 30326                           
 30327                           ; BSR set to: 57
 30328                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 30329  01A5C4  8581               	bsf	129,2,b	;volatile
 30330                           
 30331                           ; BSR set to: 57
 30332                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 30333  01A5C6  8781               	bsf	129,3,b	;volatile
 30334                           
 30335                           ; BSR set to: 57
 30336                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 30337  01A5C8  52E5               	movf	postdec1,f,c
 30338  01A5CA  0012               	return		;funcret
 30339  01A5CC                     __end_of_INTERRUPT_Initialize:
 30340                           	opt callstack 0
 30341                           
 30342 ;; *************** function _FVR_Initialize *****************
 30343 ;; Defined at:
 30344 ;;		line 58 in file "mcc_generated_files/fvr.c"
 30345 ;; Parameters:    Size  Location     Type
 30346 ;;		None
 30347 ;; Auto vars:     Size  Location     Type
 30348 ;;		None
 30349 ;; Return value:  Size  Location     Type
 30350 ;;                  1  [STACK] void 
 30351 ;; Registers used:
 30352 ;;		wreg, status,2
 30353 ;; Tracked objects:
 30354 ;;		On entry : 3F/39
 30355 ;;		On exit  : 3F/3E
 30356 ;;		Unchanged: 0/0
 30357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30360 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30361 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30362 ;;Total ram usage:        0 bytes
 30363 ;; Hardware stack levels used:    1
 30364 ;; Hardware stack levels required when called:   15
 30365 ;; This function calls:
 30366 ;;		Nothing
 30367 ;; This function is called by:
 30368 ;;		_SYSTEM_Initialize
 30369 ;; This function uses a reentrant model
 30370 ;;
 30371                           
 30372                           	psect	text126
 30373  01B6EE                     __ptext126:
 30374                           	opt callstack 0
 30375  01B6EE                     _FVR_Initialize:
 30376                           	opt callstack 14
 30377                           
 30378                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 30379                           
 30380                           ; BSR set to: 57
 30381                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30382                           ;incstack = 0
 30383  01B6EE  0EAF               	movlw	175
 30384  01B6F0  013E               	movlb	62	; () banked
 30385  01B6F2  6FC1               	movwf	193,b	;volatile
 30386                           
 30387                           ; BSR set to: 62
 30388                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 30389  01B6F4  0012               	return		;funcret
 30390  01B6F6                     __end_of_FVR_Initialize:
 30391                           	opt callstack 0
 30392                           
 30393 ;; *************** function _EXT_INT_Initialize *****************
 30394 ;; Defined at:
 30395 ;;		line 89 in file "mcc_generated_files/ext_int.c"
 30396 ;; Parameters:    Size  Location     Type
 30397 ;;		None
 30398 ;; Auto vars:     Size  Location     Type
 30399 ;;		None
 30400 ;; Return value:  Size  Location     Type
 30401 ;;                  1  [STACK] void 
 30402 ;; Registers used:
 30403 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30404 ;; Tracked objects:
 30405 ;;		On entry : 3F/39
 30406 ;;		On exit  : 3F/39
 30407 ;;		Unchanged: 0/0
 30408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30413 ;;Total ram usage:        0 bytes
 30414 ;; Hardware stack levels used:    1
 30415 ;; Hardware stack levels required when called:   16
 30416 ;; This function calls:
 30417 ;;		_INT0_SetInterruptHandler
 30418 ;;		_INT1_SetInterruptHandler
 30419 ;; This function is called by:
 30420 ;;		_SYSTEM_Initialize
 30421 ;; This function uses a reentrant model
 30422 ;;
 30423                           
 30424                           	psect	text127
 30425  01AEA2                     __ptext127:
 30426                           	opt callstack 0
 30427  01AEA2                     _EXT_INT_Initialize:
 30428                           	opt callstack 13
 30429                           
 30430                           ;mcc_generated_files/ext_int.c: 94:  (PIR1bits.INT0IF = 0);
 30431                           
 30432                           ; BSR set to: 62
 30433                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30434                           ;incstack = 0
 30435  01AEA2  0139               	movlb	57	; () banked
 30436  01AEA4  91A1               	bcf	161,0,b	;volatile
 30437                           
 30438                           ;mcc_generated_files/ext_int.c: 95:  (INTCON0bits.INT0EDG = 0);
 30439  01AEA6  90D2               	bcf	210,0,c	;volatile
 30440                           
 30441                           ; BSR set to: 57
 30442                           ;mcc_generated_files/ext_int.c: 97:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 30443  01AEA8  0E1A               	movlw	low _INT0_DefaultInterruptHandler
 30444  01AEAA  6EE6               	movwf	postinc1,c
 30445  01AEAC  0EB7               	movlw	high _INT0_DefaultInterruptHandler
 30446  01AEAE  6EE6               	movwf	postinc1,c
 30447  01AEB0  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 30448  01AEB2  6EE6               	movwf	postinc1,c
 30449  01AEB4  EC2F  F0D9         	call	_INT0_SetInterruptHandler	;wreg free
 30450                           
 30451                           ;mcc_generated_files/ext_int.c: 98:  (PIE1bits.INT0IE = 1);
 30452  01AEB8  0139               	movlb	57	; () banked
 30453  01AEBA  8191               	bsf	145,0,b	;volatile
 30454                           
 30455                           ; BSR set to: 57
 30456                           ;mcc_generated_files/ext_int.c: 103:  (PIR5bits.INT1IF = 0);
 30457  01AEBC  91A5               	bcf	165,0,b	;volatile
 30458                           
 30459                           ; BSR set to: 57
 30460                           ;mcc_generated_files/ext_int.c: 104:  (INTCON0bits.INT1EDG = 0);
 30461  01AEBE  92D2               	bcf	210,1,c	;volatile
 30462                           
 30463                           ;mcc_generated_files/ext_int.c: 106:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 30464  01AEC0  0E16               	movlw	low _INT1_DefaultInterruptHandler
 30465  01AEC2  6EE6               	movwf	postinc1,c
 30466  01AEC4  0EB7               	movlw	high _INT1_DefaultInterruptHandler
 30467  01AEC6  6EE6               	movwf	postinc1,c
 30468  01AEC8  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 30469  01AECA  6EE6               	movwf	postinc1,c
 30470  01AECC  EC1B  F0D9         	call	_INT1_SetInterruptHandler	;wreg free
 30471                           
 30472                           ;mcc_generated_files/ext_int.c: 107:  (PIE5bits.INT1IE = 1);
 30473  01AED0  0139               	movlb	57	; () banked
 30474  01AED2  8195               	bsf	149,0,b	;volatile
 30475                           
 30476                           ; BSR set to: 57
 30477                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 30478  01AED4  0012               	return		;funcret
 30479  01AED6                     __end_of_EXT_INT_Initialize:
 30480                           	opt callstack 0
 30481                           
 30482 ;; *************** function _INT1_SetInterruptHandler *****************
 30483 ;; Defined at:
 30484 ;;		line 78 in file "mcc_generated_files/ext_int.c"
 30485 ;; Parameters:    Size  Location     Type
 30486 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30487 ;;		 -> switch_handler(1), INT1_DefaultInterruptHandler(1), 
 30488 ;; Auto vars:     Size  Location     Type
 30489 ;;		None
 30490 ;; Return value:  Size  Location     Type
 30491 ;;                  1  [STACK] void 
 30492 ;; Registers used:
 30493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30494 ;; Tracked objects:
 30495 ;;		On entry : 3F/39
 30496 ;;		On exit  : 0/0
 30497 ;;		Unchanged: 0/0
 30498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30499 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30502 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30503 ;;Total ram usage:        0 bytes
 30504 ;; Hardware stack levels used:    1
 30505 ;; Hardware stack levels required when called:   15
 30506 ;; This function calls:
 30507 ;;		Nothing
 30508 ;; This function is called by:
 30509 ;;		_EXT_INT_Initialize
 30510 ;;		_start_switch_handler
 30511 ;; This function uses a reentrant model
 30512 ;;
 30513                           
 30514                           	psect	text128
 30515  01B236                     __ptext128:
 30516                           	opt callstack 0
 30517  01B236                     _INT1_SetInterruptHandler:
 30518                           	opt callstack 14
 30519                           
 30520                           ;mcc_generated_files/ext_int.c: 78: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 79: {;mcc_generated_files/ext_int.c: 80:  INT1
      +                          _InterruptHandler = InterruptHandler;
 30521                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30522                           
 30523                           ; BSR set to: 57
 30524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30525                           ;incstack = 0
 30526  01B236  50E1               	movf	fsr1l,w,c
 30527  01B238  0FFD               	addlw	-3
 30528  01B23A  6ED9               	movwf	fsr2l,c
 30529  01B23C  50E2               	movf	fsr1h,w,c
 30530  01B23E  6EDA               	movwf	fsr2h,c
 30531  01B240  0EFF               	movlw	255
 30532  01B242  22DA               	addwfc	fsr2h,f,c
 30533  01B244  006F FF78  F0BA    	movff	postinc2,_INT1_InterruptHandler
 30534  01B24A  006F FF78  F0BB    	movff	postinc2,_INT1_InterruptHandler+1
 30535  01B250  006F FF74  F0BC    	movff	postdec2,_INT1_InterruptHandler+2
 30536                           
 30537                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30538  01B256  52E5               	movf	postdec1,f,c
 30539  01B258  52E5               	movf	postdec1,f,c
 30540  01B25A  52E5               	movf	postdec1,f,c
 30541  01B25C  0012               	return		;funcret
 30542  01B25E                     __end_of_INT1_SetInterruptHandler:
 30543                           	opt callstack 0
 30544                           
 30545 ;; *************** function _INT0_SetInterruptHandler *****************
 30546 ;; Defined at:
 30547 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 30548 ;; Parameters:    Size  Location     Type
 30549 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 30550 ;;		 -> INT0_DefaultInterruptHandler(1), 
 30551 ;; Auto vars:     Size  Location     Type
 30552 ;;		None
 30553 ;; Return value:  Size  Location     Type
 30554 ;;                  1  [STACK] void 
 30555 ;; Registers used:
 30556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 30557 ;; Tracked objects:
 30558 ;;		On entry : 3F/39
 30559 ;;		On exit  : 0/0
 30560 ;;		Unchanged: 0/0
 30561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30566 ;;Total ram usage:        0 bytes
 30567 ;; Hardware stack levels used:    1
 30568 ;; Hardware stack levels required when called:   15
 30569 ;; This function calls:
 30570 ;;		Nothing
 30571 ;; This function is called by:
 30572 ;;		_EXT_INT_Initialize
 30573 ;; This function uses a reentrant model
 30574 ;;
 30575                           
 30576                           	psect	text129
 30577  01B25E                     __ptext129:
 30578                           	opt callstack 0
 30579  01B25E                     _INT0_SetInterruptHandler:
 30580                           	opt callstack 13
 30581                           
 30582                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 30583                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 30584                           
 30585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30586                           ;incstack = 0
 30587  01B25E  50E1               	movf	fsr1l,w,c
 30588  01B260  0FFD               	addlw	-3
 30589  01B262  6ED9               	movwf	fsr2l,c
 30590  01B264  50E2               	movf	fsr1h,w,c
 30591  01B266  6EDA               	movwf	fsr2h,c
 30592  01B268  0EFF               	movlw	255
 30593  01B26A  22DA               	addwfc	fsr2h,f,c
 30594  01B26C  006F FF78  F0BD    	movff	postinc2,_INT0_InterruptHandler
 30595  01B272  006F FF78  F0BE    	movff	postinc2,_INT0_InterruptHandler+1
 30596  01B278  006F FF74  F0BF    	movff	postdec2,_INT0_InterruptHandler+2
 30597                           
 30598                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 30599  01B27E  52E5               	movf	postdec1,f,c
 30600  01B280  52E5               	movf	postdec1,f,c
 30601  01B282  52E5               	movf	postdec1,f,c
 30602  01B284  0012               	return		;funcret
 30603  01B286                     __end_of_INT0_SetInterruptHandler:
 30604                           	opt callstack 0
 30605                           
 30606 ;; *************** function _DMA2_Initialize *****************
 30607 ;; Defined at:
 30608 ;;		line 61 in file "mcc_generated_files/dma2.c"
 30609 ;; Parameters:    Size  Location     Type
 30610 ;;		None
 30611 ;; Auto vars:     Size  Location     Type
 30612 ;;		None
 30613 ;; Return value:  Size  Location     Type
 30614 ;;                  1  [STACK] void 
 30615 ;; Registers used:
 30616 ;;		wreg, status,2
 30617 ;; Tracked objects:
 30618 ;;		On entry : 3F/3D
 30619 ;;		On exit  : 3F/3B
 30620 ;;		Unchanged: 0/0
 30621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30626 ;;Total ram usage:        0 bytes
 30627 ;; Hardware stack levels used:    1
 30628 ;; Hardware stack levels required when called:   15
 30629 ;; This function calls:
 30630 ;;		Nothing
 30631 ;; This function is called by:
 30632 ;;		_SYSTEM_Initialize
 30633 ;; This function uses a reentrant model
 30634 ;;
 30635                           
 30636                           	psect	text130
 30637  01A7AC                     __ptext130:
 30638                           	opt callstack 0
 30639  01A7AC                     _DMA2_Initialize:
 30640                           	opt callstack 14
 30641                           
 30642                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 30643                           
 30644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30645                           ;incstack = 0
 30646  01A7AC  0E00               	movlw	0
 30647  01A7AE  013B               	movlb	59	; () banked
 30648  01A7B0  6FD9               	movwf	217,b	;volatile
 30649  01A7B2  0E10               	movlw	16
 30650  01A7B4  6FDA               	movwf	218,b	;volatile
 30651  01A7B6  0E00               	movlw	0
 30652  01A7B8  6FDB               	movwf	219,b	;volatile
 30653                           
 30654                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 30655  01A7BA  0E3F               	movlw	63
 30656  01A7BC  6FD1               	movwf	209,b	;volatile
 30657  01A7BE  0EBB               	movlw	187
 30658  01A7C0  6FD0               	movwf	208,b	;volatile
 30659                           
 30660                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 30661  01A7C2  0E03               	movlw	3
 30662  01A7C4  6FDD               	movwf	221,b	;volatile
 30663                           
 30664                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 30665  01A7C6  0E00               	movlw	0
 30666  01A7C8  6FD8               	movwf	216,b	;volatile
 30667  01A7CA  0E01               	movlw	1
 30668  01A7CC  6FD7               	movwf	215,b	;volatile
 30669                           
 30670                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 30671  01A7CE  0E00               	movlw	0
 30672  01A7D0  6FCF               	movwf	207,b	;volatile
 30673  01A7D2  0E01               	movlw	1
 30674  01A7D4  6FCE               	movwf	206,b	;volatile
 30675                           
 30676                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x1C;
 30677  01A7D6  0E1C               	movlw	28
 30678  01A7D8  6FDF               	movwf	223,b	;volatile
 30679                           
 30680                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 30681  01A7DA  0E3D               	movlw	61
 30682  01A7DC  6FDE               	movwf	222,b	;volatile
 30683                           
 30684                           ; BSR set to: 59
 30685                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 30686  01A7DE  0139               	movlb	57	; () banked
 30687  01A7E0  97A5               	bcf	165,3,b	;volatile
 30688                           
 30689                           ; BSR set to: 57
 30690                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 30691  01A7E2  95A5               	bcf	165,2,b	;volatile
 30692                           
 30693                           ; BSR set to: 57
 30694                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 30695  01A7E4  9BA5               	bcf	165,5,b	;volatile
 30696                           
 30697                           ; BSR set to: 57
 30698                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 30699  01A7E6  99A5               	bcf	165,4,b	;volatile
 30700                           
 30701                           ; BSR set to: 57
 30702                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 30703  01A7E8  9795               	bcf	149,3,b	;volatile
 30704                           
 30705                           ; BSR set to: 57
 30706                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 30707  01A7EA  9595               	bcf	149,2,b	;volatile
 30708                           
 30709                           ; BSR set to: 57
 30710                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 30711  01A7EC  9B95               	bcf	149,5,b	;volatile
 30712                           
 30713                           ; BSR set to: 57
 30714                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 30715  01A7EE  9995               	bcf	149,4,b	;volatile
 30716  01A7F0  9ED2               	bcf	16338,7,c	;# 
 30717  01A7F2  0139               	banksel	14831	;# 
 30718  01A7F4  0E55               	movlw	85	;# 
 30719  01A7F6  6FEF               	movwf	14831,b	;# 
 30720  01A7F8  0EAA               	movlw	170	;# 
 30721  01A7FA  6FEF               	movwf	14831,b	;# 
 30722  01A7FC  81EF               	bsf	14831,0,b	;# 
 30723  01A7FE  8ED2               	bsf	16338,7,c	;# 
 30724                           
 30725                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 30726  01A800  013B               	movlb	59	; () banked
 30727  01A802  6BDC               	clrf	220,b	;volatile
 30728                           
 30729                           ; BSR set to: 59
 30730                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30731  01A804  0012               	return		;funcret
 30732  01A806                     __end_of_DMA2_Initialize:
 30733                           	opt callstack 0
 30734                           
 30735 ;; *************** function _DMA1_Initialize *****************
 30736 ;; Defined at:
 30737 ;;		line 86 in file "mcc_generated_files/dma1.c"
 30738 ;; Parameters:    Size  Location     Type
 30739 ;;		None
 30740 ;; Auto vars:     Size  Location     Type
 30741 ;;		None
 30742 ;; Return value:  Size  Location     Type
 30743 ;;                  1  [STACK] void 
 30744 ;; Registers used:
 30745 ;;		wreg, status,2
 30746 ;; Tracked objects:
 30747 ;;		On entry : 3F/3B
 30748 ;;		On exit  : 3F/3B
 30749 ;;		Unchanged: 0/0
 30750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30755 ;;Total ram usage:        0 bytes
 30756 ;; Hardware stack levels used:    1
 30757 ;; Hardware stack levels required when called:   15
 30758 ;; This function calls:
 30759 ;;		Nothing
 30760 ;; This function is called by:
 30761 ;;		_SYSTEM_Initialize
 30762 ;; This function uses a reentrant model
 30763 ;;
 30764                           
 30765                           	psect	text131
 30766  01A426                     __ptext131:
 30767                           	opt callstack 0
 30768  01A426                     _DMA1_Initialize:
 30769                           	opt callstack 14
 30770                           
 30771                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 30772                           
 30773                           ; BSR set to: 59
 30774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30775                           ;incstack = 0
 30776  01A426  0E00               	movlw	0
 30777  01A428  013B               	movlb	59	; () banked
 30778  01A42A  6FF9               	movwf	249,b	;volatile
 30779  01A42C  0E10               	movlw	16
 30780  01A42E  6FFA               	movwf	250,b	;volatile
 30781  01A430  0E00               	movlw	0
 30782  01A432  6FFB               	movwf	251,b	;volatile
 30783                           
 30784                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 30785  01A434  0E3D               	movlw	61
 30786  01A436  6FF1               	movwf	241,b	;volatile
 30787  01A438  0E11               	movlw	17
 30788  01A43A  6FF0               	movwf	240,b	;volatile
 30789                           
 30790                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 30791  01A43C  0E03               	movlw	3
 30792  01A43E  6FFD               	movwf	253,b	;volatile
 30793                           
 30794                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 30795  01A440  0E00               	movlw	0
 30796  01A442  6FF8               	movwf	248,b	;volatile
 30797  01A444  0E01               	movlw	1
 30798  01A446  6FF7               	movwf	247,b	;volatile
 30799                           
 30800                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 30801  01A448  0E00               	movlw	0
 30802  01A44A  6FEF               	movwf	239,b	;volatile
 30803  01A44C  0E01               	movlw	1
 30804  01A44E  6FEE               	movwf	238,b	;volatile
 30805                           
 30806                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 30807  01A450  0E15               	movlw	21
 30808  01A452  6FFF               	movwf	255,b	;volatile
 30809                           
 30810                           ; BSR set to: 59
 30811                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 30812  01A454  6BFE               	clrf	254,b	;volatile
 30813                           
 30814                           ; BSR set to: 59
 30815                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 30816  01A456  0139               	movlb	57	; () banked
 30817  01A458  93A2               	bcf	162,1,b	;volatile
 30818                           
 30819                           ; BSR set to: 57
 30820                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 30821  01A45A  91A2               	bcf	162,0,b	;volatile
 30822                           
 30823                           ; BSR set to: 57
 30824                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 30825  01A45C  97A2               	bcf	162,3,b	;volatile
 30826                           
 30827                           ; BSR set to: 57
 30828                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 30829  01A45E  95A2               	bcf	162,2,b	;volatile
 30830                           
 30831                           ; BSR set to: 57
 30832                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 30833  01A460  8392               	bsf	146,1,b	;volatile
 30834                           
 30835                           ; BSR set to: 57
 30836                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 30837  01A462  8192               	bsf	146,0,b	;volatile
 30838                           
 30839                           ; BSR set to: 57
 30840                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 30841  01A464  8792               	bsf	146,3,b	;volatile
 30842                           
 30843                           ; BSR set to: 57
 30844                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 30845  01A466  8592               	bsf	146,2,b	;volatile
 30846                           
 30847                           ; BSR set to: 57
 30848                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 30849  01A468  6BF1               	clrf	241,b	;volatile
 30850                           
 30851                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 30852  01A46A  0E01               	movlw	1
 30853  01A46C  6FF2               	movwf	242,b	;volatile
 30854                           
 30855                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 30856  01A46E  0E04               	movlw	4
 30857  01A470  6FF3               	movwf	243,b	;volatile
 30858                           
 30859                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 30860  01A472  0E02               	movlw	2
 30861  01A474  6FF4               	movwf	244,b	;volatile
 30862                           
 30863                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 30864  01A476  0E03               	movlw	3
 30865  01A478  6FF7               	movwf	247,b	;volatile
 30866  01A47A  9ED2               	bcf	16338,7,c	;# 
 30867  01A47C  0139               	banksel	14831	;# 
 30868  01A47E  0E55               	movlw	85	;# 
 30869  01A480  6FEF               	movwf	14831,b	;# 
 30870  01A482  0EAA               	movlw	170	;# 
 30871  01A484  6FEF               	movwf	14831,b	;# 
 30872  01A486  81EF               	bsf	14831,0,b	;# 
 30873  01A488  8ED2               	bsf	16338,7,c	;# 
 30874                           
 30875                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 30876  01A48A  013B               	movlb	59	; () banked
 30877  01A48C  6BFC               	clrf	252,b	;volatile
 30878                           
 30879                           ; BSR set to: 59
 30880                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 30881  01A48E  0012               	return		;funcret
 30882  01A490                     __end_of_DMA1_Initialize:
 30883                           	opt callstack 0
 30884                           
 30885 ;; *************** function _CLKREF_Initialize *****************
 30886 ;; Defined at:
 30887 ;;		line 58 in file "mcc_generated_files/clkref.c"
 30888 ;; Parameters:    Size  Location     Type
 30889 ;;		None
 30890 ;; Auto vars:     Size  Location     Type
 30891 ;;		None
 30892 ;; Return value:  Size  Location     Type
 30893 ;;                  1  [STACK] void 
 30894 ;; Registers used:
 30895 ;;		wreg, status,2
 30896 ;; Tracked objects:
 30897 ;;		On entry : 3F/3B
 30898 ;;		On exit  : 3F/3C
 30899 ;;		Unchanged: 0/0
 30900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30905 ;;Total ram usage:        0 bytes
 30906 ;; Hardware stack levels used:    1
 30907 ;; Hardware stack levels required when called:   15
 30908 ;; This function calls:
 30909 ;;		Nothing
 30910 ;; This function is called by:
 30911 ;;		_SYSTEM_Initialize
 30912 ;; This function uses a reentrant model
 30913 ;;
 30914                           
 30915                           	psect	text132
 30916  01B696                     __ptext132:
 30917                           	opt callstack 0
 30918  01B696                     _CLKREF_Initialize:
 30919                           	opt callstack 14
 30920                           
 30921                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 30922                           
 30923                           ; BSR set to: 59
 30924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30925                           ;incstack = 0
 30926  01B696  013C               	movlb	60	; () banked
 30927  01B698  6BE6               	clrf	230,b	;volatile
 30928                           
 30929                           ; BSR set to: 60
 30930                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 30931  01B69A  0E94               	movlw	148
 30932  01B69C  6FE5               	movwf	229,b	;volatile
 30933                           
 30934                           ; BSR set to: 60
 30935                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 30936  01B69E  0012               	return		;funcret
 30937  01B6A0                     __end_of_CLKREF_Initialize:
 30938                           	opt callstack 0
 30939                           
 30940 ;; *************** function _ADCC_Initialize *****************
 30941 ;; Defined at:
 30942 ;;		line 65 in file "mcc_generated_files/adcc.c"
 30943 ;; Parameters:    Size  Location     Type
 30944 ;;		None
 30945 ;; Auto vars:     Size  Location     Type
 30946 ;;		None
 30947 ;; Return value:  Size  Location     Type
 30948 ;;                  1  [STACK] void 
 30949 ;; Registers used:
 30950 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 30951 ;; Tracked objects:
 30952 ;;		On entry : 3F/3E
 30953 ;;		On exit  : 0/0
 30954 ;;		Unchanged: 0/0
 30955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 30956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 30960 ;;Total ram usage:        0 bytes
 30961 ;; Hardware stack levels used:    1
 30962 ;; Hardware stack levels required when called:   16
 30963 ;; This function calls:
 30964 ;;		_ADCC_SetADIInterruptHandler
 30965 ;;		_ADCC_SetADTIInterruptHandler
 30966 ;; This function is called by:
 30967 ;;		_SYSTEM_Initialize
 30968 ;; This function uses a reentrant model
 30969 ;;
 30970                           
 30971                           	psect	text133
 30972  01A490                     __ptext133:
 30973                           	opt callstack 0
 30974  01A490                     _ADCC_Initialize:
 30975                           	opt callstack 13
 30976                           
 30977                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 30978                           
 30979                           ; BSR set to: 60
 30980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 30981                           ;incstack = 0
 30982  01A490  013E               	movlb	62	; () banked
 30983  01A492  6BDE               	clrf	222,b	;volatile
 30984                           
 30985                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 30986  01A494  6BDF               	clrf	223,b	;volatile
 30987                           
 30988                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 30989  01A496  6BE0               	clrf	224,b	;volatile
 30990                           
 30991                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 30992  01A498  6BE1               	clrf	225,b	;volatile
 30993                           
 30994                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 30995  01A49A  6BE4               	clrf	228,b	;volatile
 30996                           
 30997                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 30998  01A49C  6BE5               	clrf	229,b	;volatile
 30999                           
 31000                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 31001  01A49E  6BEA               	clrf	234,b	;volatile
 31002                           
 31003                           ; BSR set to: 62
 31004                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 31005  01A4A0  0E40               	movlw	64
 31006  01A4A2  6FEC               	movwf	236,b	;volatile
 31007                           
 31008                           ; BSR set to: 62
 31009                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 31010  01A4A4  6BF1               	clrf	241,b	;volatile
 31011                           
 31012                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x20;
 31013  01A4A6  0E20               	movlw	32
 31014  01A4A8  6FF3               	movwf	243,b	;volatile
 31015                           
 31016                           ; BSR set to: 62
 31017                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 31018  01A4AA  6BF4               	clrf	244,b	;volatile
 31019                           
 31020                           ; BSR set to: 62
 31021                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 31022  01A4AC  6BF5               	clrf	245,b	;volatile
 31023                           
 31024                           ; BSR set to: 62
 31025                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 31026  01A4AE  6BF6               	clrf	246,b	;volatile
 31027                           
 31028                           ; BSR set to: 62
 31029                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 31030  01A4B0  6BF7               	clrf	247,b	;volatile
 31031                           
 31032                           ; BSR set to: 62
 31033                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 31034  01A4B2  6BF9               	clrf	249,b	;volatile
 31035                           
 31036                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 31037  01A4B4  0E5B               	movlw	91
 31038  01A4B6  6FFA               	movwf	250,b	;volatile
 31039                           
 31040                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 31041  01A4B8  0E27               	movlw	39
 31042  01A4BA  6FFB               	movwf	251,b	;volatile
 31043                           
 31044                           ; BSR set to: 62
 31045                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 31046  01A4BC  6BFC               	clrf	252,b	;volatile
 31047                           
 31048                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 31049  01A4BE  0E02               	movlw	2
 31050  01A4C0  6FFD               	movwf	253,b	;volatile
 31051                           
 31052                           ; BSR set to: 62
 31053                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 31054  01A4C2  6BFE               	clrf	254,b	;volatile
 31055                           
 31056                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x07;
 31057  01A4C4  0E07               	movlw	7
 31058  01A4C6  6FFF               	movwf	255,b	;volatile
 31059                           
 31060                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x84;
 31061  01A4C8  0E84               	movlw	132
 31062  01A4CA  6FF8               	movwf	248,b	;volatile
 31063                           
 31064                           ; BSR set to: 62
 31065                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 31066  01A4CC  0139               	movlb	57	; () banked
 31067  01A4CE  95A1               	bcf	161,2,b	;volatile
 31068                           
 31069                           ; BSR set to: 57
 31070                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 31071  01A4D0  8591               	bsf	145,2,b	;volatile
 31072                           
 31073                           ; BSR set to: 57
 31074                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 31075  01A4D2  0E1C               	movlw	low _ADCC_DefaultInterruptHandler
 31076  01A4D4  6EE6               	movwf	postinc1,c
 31077  01A4D6  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31078  01A4D8  6EE6               	movwf	postinc1,c
 31079  01A4DA  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31080  01A4DC  6EE6               	movwf	postinc1,c
 31081  01A4DE  EC57  F0D9         	call	_ADCC_SetADIInterruptHandler	;wreg free
 31082                           
 31083                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 31084  01A4E2  0139               	movlb	57	; () banked
 31085  01A4E4  97A1               	bcf	161,3,b	;volatile
 31086                           
 31087                           ; BSR set to: 57
 31088                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 31089  01A4E6  8791               	bsf	145,3,b	;volatile
 31090                           
 31091                           ; BSR set to: 57
 31092                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 31093  01A4E8  0E1C               	movlw	low _ADCC_DefaultInterruptHandler
 31094  01A4EA  6EE6               	movwf	postinc1,c
 31095  01A4EC  0EB7               	movlw	high _ADCC_DefaultInterruptHandler
 31096  01A4EE  6EE6               	movwf	postinc1,c
 31097  01A4F0  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 31098  01A4F2  6EE6               	movwf	postinc1,c
 31099  01A4F4  EC43  F0D9         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 31100                           
 31101                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 31102  01A4F8  0012               	return		;funcret
 31103  01A4FA                     __end_of_ADCC_Initialize:
 31104                           	opt callstack 0
 31105                           
 31106 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 31107 ;; Defined at:
 31108 ;;		line 336 in file "mcc_generated_files/adcc.c"
 31109 ;; Parameters:    Size  Location     Type
 31110 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31111 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 31112 ;; Auto vars:     Size  Location     Type
 31113 ;;		None
 31114 ;; Return value:  Size  Location     Type
 31115 ;;                  1  [STACK] void 
 31116 ;; Registers used:
 31117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31118 ;; Tracked objects:
 31119 ;;		On entry : 0/0
 31120 ;;		On exit  : 0/0
 31121 ;;		Unchanged: 0/0
 31122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31127 ;;Total ram usage:        0 bytes
 31128 ;; Hardware stack levels used:    1
 31129 ;; Hardware stack levels required when called:   15
 31130 ;; This function calls:
 31131 ;;		Nothing
 31132 ;; This function is called by:
 31133 ;;		_ADCC_Initialize
 31134 ;;		_start_adc_scan
 31135 ;; This function uses a reentrant model
 31136 ;;
 31137                           
 31138                           	psect	text134
 31139  01B286                     __ptext134:
 31140                           	opt callstack 0
 31141  01B286                     _ADCC_SetADTIInterruptHandler:
 31142                           	opt callstack 14
 31143                           
 31144                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 31145                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31146                           
 31147                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31148                           ;incstack = 0
 31149  01B286  50E1               	movf	fsr1l,w,c
 31150  01B288  0FFD               	addlw	-3
 31151  01B28A  6ED9               	movwf	fsr2l,c
 31152  01B28C  50E2               	movf	fsr1h,w,c
 31153  01B28E  6EDA               	movwf	fsr2h,c
 31154  01B290  0EFF               	movlw	255
 31155  01B292  22DA               	addwfc	fsr2h,f,c
 31156  01B294  006F FF78  F0AB    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 31157  01B29A  006F FF78  F0AC    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 31158  01B2A0  006F FF74  F0AD    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 31159                           
 31160                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 31161  01B2A6  52E5               	movf	postdec1,f,c
 31162  01B2A8  52E5               	movf	postdec1,f,c
 31163  01B2AA  52E5               	movf	postdec1,f,c
 31164  01B2AC  0012               	return		;funcret
 31165  01B2AE                     __end_of_ADCC_SetADTIInterruptHandler:
 31166                           	opt callstack 0
 31167                           
 31168 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 31169 ;; Defined at:
 31170 ;;		line 323 in file "mcc_generated_files/adcc.c"
 31171 ;; Parameters:    Size  Location     Type
 31172 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 31173 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 31174 ;; Auto vars:     Size  Location     Type
 31175 ;;		None
 31176 ;; Return value:  Size  Location     Type
 31177 ;;                  1  [STACK] void 
 31178 ;; Registers used:
 31179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 31180 ;; Tracked objects:
 31181 ;;		On entry : 6/0
 31182 ;;		On exit  : 0/0
 31183 ;;		Unchanged: 0/0
 31184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31188 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31189 ;;Total ram usage:        0 bytes
 31190 ;; Hardware stack levels used:    1
 31191 ;; Hardware stack levels required when called:   15
 31192 ;; This function calls:
 31193 ;;		Nothing
 31194 ;; This function is called by:
 31195 ;;		_ADCC_Initialize
 31196 ;;		_start_adc_scan
 31197 ;; This function uses a reentrant model
 31198 ;;
 31199                           
 31200                           	psect	text135
 31201  01B2AE                     __ptext135:
 31202                           	opt callstack 0
 31203  01B2AE                     _ADCC_SetADIInterruptHandler:
 31204                           	opt callstack 14
 31205                           
 31206                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 31207                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 31208                           
 31209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31210                           ;incstack = 0
 31211  01B2AE  50E1               	movf	fsr1l,w,c
 31212  01B2B0  0FFD               	addlw	-3
 31213  01B2B2  6ED9               	movwf	fsr2l,c
 31214  01B2B4  50E2               	movf	fsr1h,w,c
 31215  01B2B6  6EDA               	movwf	fsr2h,c
 31216  01B2B8  0EFF               	movlw	255
 31217  01B2BA  22DA               	addwfc	fsr2h,f,c
 31218  01B2BC  006F FF78  F0AE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 31219  01B2C2  006F FF78  F0AF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 31220  01B2C8  006F FF74  F0B0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 31221                           
 31222                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 31223  01B2CE  52E5               	movf	postdec1,f,c
 31224  01B2D0  52E5               	movf	postdec1,f,c
 31225  01B2D2  52E5               	movf	postdec1,f,c
 31226  01B2D4  0012               	return		;funcret
 31227  01B2D6                     __end_of_ADCC_SetADIInterruptHandler:
 31228                           	opt callstack 0
 31229                           
 31230 ;; *************** function _INT1_ISR *****************
 31231 ;; Defined at:
 31232 ;;		line 62 in file "mcc_generated_files/ext_int.c"
 31233 ;; Parameters:    Size  Location     Type
 31234 ;;		None
 31235 ;; Auto vars:     Size  Location     Type
 31236 ;;		None
 31237 ;; Return value:  Size  Location     Type
 31238 ;;                  1    wreg      void 
 31239 ;; Registers used:
 31240 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31241 ;; Tracked objects:
 31242 ;;		On entry : 0/0
 31243 ;;		On exit  : 0/0
 31244 ;;		Unchanged: 0/0
 31245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31248 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31249 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31250 ;;Total ram usage:        4 bytes
 31251 ;; Hardware stack levels used:    1
 31252 ;; Hardware stack levels required when called:    5
 31253 ;; This function calls:
 31254 ;;		_INT1_CallBack
 31255 ;; This function is called by:
 31256 ;;		Interrupt level 1
 31257 ;; This function uses a non-reentrant model
 31258 ;;
 31259                           
 31260                           	psect	text136
 31261  01AD1C                     __ptext136:
 31262                           	opt callstack 0
 31263  01AD1C                     _INT1_ISR:
 31264                           	opt callstack 12
 31265                           
 31266                           ;incstack = 0
 31267  01AD1C  006F FF60  F007    	movff	status,??_INT1_ISR
 31268  01AD22  0060  F0A0  F008   	movff	btemp,??_INT1_ISR+1
 31269  01AD28  0060  F0C8  F009   	movff	btemp+10,??_INT1_ISR+2
 31270  01AD2E  0060  F0CC  F00A   	movff	btemp+11,??_INT1_ISR+3
 31271  01AD34  EE16  F0A1         	lfsr	1,___intlo_sp
 31272                           
 31273                           ;mcc_generated_files/ext_int.c: 64:  (PIR5bits.INT1IF = 0);
 31274  01AD38  0139               	movlb	57	; () banked
 31275  01AD3A  91A5               	bcf	165,0,b	;volatile
 31276                           
 31277                           ; BSR set to: 57
 31278                           ;mcc_generated_files/ext_int.c: 67:  INT1_CallBack();
 31279  01AD3C  ECCC  F0D9         	call	_INT1_CallBack	;wreg free
 31280  01AD40  0060  F028  F033   	movff	??_INT1_ISR+3,btemp+11
 31281  01AD46  0060  F024  F032   	movff	??_INT1_ISR+2,btemp+10
 31282  01AD4C  0060  F020  F028   	movff	??_INT1_ISR+1,btemp
 31283  01AD52  0060  F01F  FFD8   	movff	??_INT1_ISR,status
 31284  01AD58  0011               	retfie		f
 31285  01AD5A                     __end_of_INT1_ISR:
 31286                           	opt callstack 0
 31287                           
 31288 ;; *************** function _INT1_CallBack *****************
 31289 ;; Defined at:
 31290 ;;		line 70 in file "mcc_generated_files/ext_int.c"
 31291 ;; Parameters:    Size  Location     Type
 31292 ;;		None
 31293 ;; Auto vars:     Size  Location     Type
 31294 ;;		None
 31295 ;; Return value:  Size  Location     Type
 31296 ;;                  1  [STACK] void 
 31297 ;; Registers used:
 31298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+10, btemp+11, tosl, prodl, 
      +prodh
 31299 ;; Tracked objects:
 31300 ;;		On entry : 3F/39
 31301 ;;		On exit  : 0/0
 31302 ;;		Unchanged: 0/0
 31303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31307 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31308 ;;Total ram usage:        0 bytes
 31309 ;; Hardware stack levels used:    1
 31310 ;; Hardware stack levels required when called:    4
 31311 ;; This function calls:
 31312 ;;		Absolute function
 31313 ;;		_INT1_DefaultInterruptHandler
 31314 ;;		_switch_handler
 31315 ;; This function is called by:
 31316 ;;		_INT1_ISR
 31317 ;; This function uses a reentrant model
 31318 ;;
 31319                           
 31320                           	psect	text137
 31321  01B398                     __ptext137:
 31322                           	opt callstack 0
 31323  01B398                     _INT1_CallBack:
 31324                           	opt callstack 12
 31325                           
 31326                           ;mcc_generated_files/ext_int.c: 73:  if (INT1_InterruptHandler) {
 31327                           
 31328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31329                           ;incstack = 0
 31330  01B398  0100               	movlb	0	; () banked
 31331  01B39A  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31332  01B39C  11BB               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31333  01B39E  11BC               	iorwf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31334  01B3A0  B4D8               	btfsc	status,2,c
 31335  01B3A2  0012               	return	
 31336                           
 31337                           ; BSR set to: 0
 31338                           ;mcc_generated_files/ext_int.c: 74:   INT1_InterruptHandler();
 31339  01B3A4  D801               	call	u957_28
 31340  01B3A6  0012               	return	
 31341  01B3A8                     u957_28:
 31342  01B3A8  0005               	push	
 31343  01B3AA  6EFA               	movwf	pclath,c
 31344  01B3AC  51BA               	movf	_INT1_InterruptHandler& (0+255),w,b
 31345  01B3AE  6EFD               	movwf	tosl,c
 31346  01B3B0  51BB               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 31347  01B3B2  6EFE               	movwf	tosh,c
 31348  01B3B4  51BC               	movf	(_INT1_InterruptHandler+2)& (0+255),w,b
 31349  01B3B6  6EFF               	movwf	tosu,c
 31350  01B3B8  50FA               	movf	pclath,w,c
 31351  01B3BA  0012               	return		;indir
 31352  01B3BC                     __end_of_INT1_CallBack:
 31353                           	opt callstack 0
 31354                           
 31355 ;; *************** function _INT1_DefaultInterruptHandler *****************
 31356 ;; Defined at:
 31357 ;;		line 83 in file "mcc_generated_files/ext_int.c"
 31358 ;; Parameters:    Size  Location     Type
 31359 ;;		None
 31360 ;; Auto vars:     Size  Location     Type
 31361 ;;		None
 31362 ;; Return value:  Size  Location     Type
 31363 ;;                  1  [STACK] void 
 31364 ;; Registers used:
 31365 ;;		None
 31366 ;; Tracked objects:
 31367 ;;		On entry : 3F/0
 31368 ;;		On exit  : 0/0
 31369 ;;		Unchanged: 0/0
 31370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31372 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31374 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31375 ;;Total ram usage:        0 bytes
 31376 ;; Hardware stack levels used:    1
 31377 ;; Hardware stack levels required when called:    3
 31378 ;; This function calls:
 31379 ;;		Nothing
 31380 ;; This function is called by:
 31381 ;;		_EXT_INT_Initialize
 31382 ;;		_INT1_CallBack
 31383 ;; This function uses a reentrant model
 31384 ;;
 31385                           
 31386                           	psect	text138
 31387  01B716                     __ptext138:
 31388                           	opt callstack 0
 31389  01B716                     _INT1_DefaultInterruptHandler:
 31390                           	opt callstack 12
 31391                           
 31392                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31393                           
 31394                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31395                           ;incstack = 0
 31396  01B716  0012               	return		;funcret
 31397  01B718                     __end_of_INT1_DefaultInterruptHandler:
 31398                           	opt callstack 0
 31399                           
 31400 ;; *************** function _switch_handler *****************
 31401 ;; Defined at:
 31402 ;;		line 58 in file "dio.c"
 31403 ;; Parameters:    Size  Location     Type
 31404 ;;		None
 31405 ;; Auto vars:     Size  Location     Type
 31406 ;;  i               1  [STACK] unsigned char 
 31407 ;;  sw_value        1  [STACK] unsigned char 
 31408 ;; Return value:  Size  Location     Type
 31409 ;;                  1  [STACK] void 
 31410 ;; Registers used:
 31411 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl, prodh
 31412 ;; Tracked objects:
 31413 ;;		On entry : 3F/0
 31414 ;;		On exit  : 0/0
 31415 ;;		Unchanged: 0/0
 31416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31421 ;;Total ram usage:        0 bytes
 31422 ;; Hardware stack levels used:    1
 31423 ;; Hardware stack levels required when called:    3
 31424 ;; This function calls:
 31425 ;;		Nothing
 31426 ;; This function is called by:
 31427 ;;		_start_switch_handler
 31428 ;;		_INT1_CallBack
 31429 ;; This function uses a reentrant model
 31430 ;;
 31431                           
 31432                           	psect	text139
 31433  018C34                     __ptext139:
 31434                           	opt callstack 0
 31435  018C34                     _switch_handler:
 31436                           	opt callstack 0
 31437                           
 31438                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31439  018C34  52E6               	movf	postinc1,f,c
 31440  018C36  52E6               	movf	postinc1,f,c
 31441                           
 31442                           ;dio.c: 60:  uint8_t i = 0, sw_value;
 31443                           ;stkvar	_i @ sp[(-2)+0]
 31444                           
 31445                           ;incstack = 0
 31446  018C38  0EFE               	movlw	-2
 31447  018C3A  6AE3               	clrf	plusw1,c
 31448  018C3C  9EBD               	bcf	189,7,c	;volatile
 31449                           
 31450                           ;dio.c: 72:  __nop();
 31451  018C3E  F000               	nop	
 31452                           
 31453                           ;dio.c: 73:  __nop();
 31454  018C40  F000               	nop	
 31455                           
 31456                           ;dio.c: 74:  __nop();
 31457  018C42  F000               	nop	
 31458  018C44  D019               	goto	l10228
 31459  018C46                     l10216:
 31460                           
 31461                           ;dio.c: 79:    sw_value = PORTFbits.RF3;
 31462  018C46  A6CF               	btfss	207,3,c	;volatile
 31463  018C48  D011               	goto	u933_20
 31464  018C4A  D00D               	goto	u933_21
 31465  018C4C                     u930_28:
 31466                           
 31467                           ;stkvar	_sw_value @ sp[(-2)+1]
 31468  018C4C  0EFF               	movlw	-1
 31469  018C4E  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 31470                           
 31471                           ;dio.c: 80:    break;
 31472  018C54  D027               	goto	l10230
 31473  018C56                     l10218:
 31474                           
 31475                           ;dio.c: 82:    sw_value = PORTFbits.RF2;
 31476  018C56  A4CF               	btfss	207,2,c	;volatile
 31477  018C58  D009               	goto	u933_20
 31478  018C5A  D005               	goto	u933_21
 31479  018C5C                     l10220:
 31480                           
 31481                           ;dio.c: 85:    sw_value = PORTFbits.RF1;
 31482  018C5C  A2CF               	btfss	207,1,c	;volatile
 31483  018C5E  D006               	goto	u933_20
 31484  018C60  D002               	goto	u933_21
 31485  018C62                     l10222:
 31486                           
 31487                           ;dio.c: 88:    sw_value = PORTFbits.RF0;
 31488  018C62  A0CF               	btfss	207,0,c	;volatile
 31489  018C64  D003               	goto	u933_20
 31490  018C66                     u933_21:
 31491  018C66  6A33               	clrf	(btemp+11)^0,c
 31492  018C68  2A33               	incf	(btemp+11)^0,f,c
 31493  018C6A  D7F0               	goto	u930_28
 31494  018C6C                     u933_20:
 31495  018C6C  6A33               	clrf	(btemp+11)^0,c
 31496  018C6E  D7EE               	goto	u930_28
 31497  018C70                     l10224:
 31498                           
 31499                           ;dio.c: 91:    sw_value = 1;
 31500                           ;stkvar	_sw_value @ sp[(-2)+1]
 31501  018C70  0EFF               	movlw	-1
 31502  018C72  6AE3               	clrf	plusw1,c
 31503  018C74  2AE3               	incf	plusw1,f,c
 31504                           
 31505                           ;dio.c: 92:    break;
 31506  018C76  D016               	goto	l10230
 31507  018C78                     l10228:
 31508                           
 31509                           ;stkvar	_i @ sp[(-2)+0]
 31510  018C78  0EFE               	movlw	-2
 31511  018C7A  50E3               	movf	plusw1,w,c
 31512  018C7C  6E32               	movwf	(btemp+10)^0,c
 31513  018C7E  6A33               	clrf	(btemp+11)^0,c
 31514                           
 31515                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31516                           ; Switch size 1, requested type "simple"
 31517                           ; Number of cases is 1, Range of values is 0 to 0
 31518                           ; switch strategies available:
 31519                           ; Name         Instructions Cycles
 31520                           ; simple_byte            4     3 (average)
 31521                           ;	Chosen strategy is simple_byte
 31522  018C80  5033               	movf	(btemp+11)^0,w,c
 31523  018C82  0A00               	xorlw	0	; case 0
 31524  018C84  A4D8               	btfss	status,2,c
 31525  018C86  D7F4               	goto	l10224
 31526                           
 31527                           ; Switch size 1, requested type "simple"
 31528                           ; Number of cases is 4, Range of values is 0 to 3
 31529                           ; switch strategies available:
 31530                           ; Name         Instructions Cycles
 31531                           ; simple_byte           13     7 (average)
 31532                           ;	Chosen strategy is simple_byte
 31533  018C88  5032               	movf	(btemp+10)^0,w,c
 31534  018C8A  0A00               	xorlw	0	; case 0
 31535  018C8C  B4D8               	btfsc	status,2,c
 31536  018C8E  D7E9               	goto	l10222
 31537  018C90  0A01               	xorlw	1	; case 1
 31538  018C92  B4D8               	btfsc	status,2,c
 31539  018C94  D7E3               	goto	l10220
 31540  018C96  0A03               	xorlw	3	; case 2
 31541  018C98  B4D8               	btfsc	status,2,c
 31542  018C9A  D7DD               	goto	l10218
 31543  018C9C  0A01               	xorlw	1	; case 3
 31544  018C9E  B4D8               	btfsc	status,2,c
 31545  018CA0  D7D2               	goto	l10216
 31546  018CA2  D7E6               	goto	l10224
 31547  018CA4                     l10230:
 31548                           
 31549                           ;dio.c: 96:   if (sw_value) {
 31550                           ;stkvar	_sw_value @ sp[(-2)+1]
 31551  018CA4  0EFF               	movlw	-1
 31552  018CA6  50E3               	movf	plusw1,w,c
 31553  018CA8  B4D8               	btfsc	status,2,c
 31554  018CAA  D018               	goto	l10236
 31555                           
 31556                           ;dio.c: 97:    if (S.button[i].sw == SW_ON) {
 31557                           ;stkvar	_i @ sp[(-2)+0]
 31558  018CAC  0EFE               	movlw	-2
 31559  018CAE  50E3               	movf	plusw1,w,c
 31560  018CB0  0D05               	mullw	5
 31561  018CB2  0EBD               	movlw	low _S
 31562  018CB4  24F3               	addwf	243,w,c
 31563  018CB6  6ED9               	movwf	fsr2l,c
 31564  018CB8  0E02               	movlw	high _S
 31565  018CBA  20F4               	addwfc	prodh,w,c
 31566  018CBC  6EDA               	movwf	fsr2h,c
 31567  018CBE  04DE               	decf	postinc2,w,c
 31568  018CC0  A4D8               	btfss	status,2,c
 31569  018CC2  D049               	goto	l10244
 31570                           
 31571                           ;dio.c: 98:     S.button[i].sw = SW_OFF;
 31572                           ;stkvar	_i @ sp[(-2)+0]
 31573  018CC4  0EFE               	movlw	-2
 31574  018CC6  50E3               	movf	plusw1,w,c
 31575  018CC8  0D05               	mullw	5
 31576  018CCA  0EBD               	movlw	low _S
 31577  018CCC  24F3               	addwf	243,w,c
 31578  018CCE  6ED9               	movwf	fsr2l,c
 31579  018CD0  0E02               	movlw	high _S
 31580  018CD2  20F4               	addwfc	prodh,w,c
 31581  018CD4  6EDA               	movwf	fsr2h,c
 31582  018CD6  0E00               	movlw	0
 31583  018CD8  6EDF               	movwf	indf2,c
 31584  018CDA  D03D               	goto	l10244
 31585  018CDC                     l10236:
 31586                           
 31587                           ;dio.c: 101:    if (S.button[i].sw == SW_OFF) {
 31588                           ;stkvar	_i @ sp[(-2)+0]
 31589  018CDC  0EFE               	movlw	-2
 31590  018CDE  50E3               	movf	plusw1,w,c
 31591  018CE0  0D05               	mullw	5
 31592  018CE2  0EBD               	movlw	low _S
 31593  018CE4  24F3               	addwf	243,w,c
 31594  018CE6  6ED9               	movwf	fsr2l,c
 31595  018CE8  0E02               	movlw	high _S
 31596  018CEA  20F4               	addwfc	prodh,w,c
 31597  018CEC  6EDA               	movwf	fsr2h,c
 31598  018CEE  50DF               	movf	indf2,w,c
 31599  018CF0  A4D8               	btfss	status,2,c
 31600  018CF2  D031               	goto	l10244
 31601                           
 31602                           ;dio.c: 102:     S.button[i].sw = SW_ON;
 31603                           ;stkvar	_i @ sp[(-2)+0]
 31604  018CF4  0EFE               	movlw	-2
 31605  018CF6  50E3               	movf	plusw1,w,c
 31606  018CF8  0D05               	mullw	5
 31607  018CFA  0EBD               	movlw	low _S
 31608  018CFC  24F3               	addwf	243,w,c
 31609  018CFE  6ED9               	movwf	fsr2l,c
 31610  018D00  0E02               	movlw	high _S
 31611  018D02  20F4               	addwfc	prodh,w,c
 31612  018D04  6EDA               	movwf	fsr2h,c
 31613  018D06  0E01               	movlw	1
 31614  018D08  6EDF               	movwf	indf2,c
 31615                           
 31616                           ;dio.c: 103:     S.button[i].count = V.timerint_count;
 31617  018D0A  EE20  F2B9         	lfsr	2,_V+185	;volatile
 31618                           
 31619                           ;stkvar	_i @ sp[(-2)+0]
 31620  018D0E  0EFE               	movlw	-2
 31621  018D10  50E3               	movf	plusw1,w,c
 31622  018D12  0D05               	mullw	5
 31623  018D14  0EBE               	movlw	low (_S+1)
 31624  018D16  24F3               	addwf	243,w,c
 31625  018D18  6EE9               	movwf	fsr0l,c
 31626  018D1A  0E02               	movlw	high (_S+1)
 31627  018D1C  20F4               	addwfc	prodh,w,c
 31628  018D1E  6EEA               	movwf	fsr0h,c
 31629  018D20  006F FF7B FFEE     	movff	postinc2,postinc0
 31630  018D26  006F FF7B FFEE     	movff	postinc2,postinc0
 31631  018D2C  006F FF7B FFEE     	movff	postinc2,postinc0
 31632  018D32  006F FF7B FFEE     	movff	postinc2,postinc0
 31633                           
 31634                           ;dio.c: 104:     S.sw_bitmap |= 1 << i;
 31635                           ;stkvar	_i @ sp[(-2)+0]
 31636  018D38  0EFE               	movlw	-2
 31637  018D3A  006F FF8C  F033    	movff	plusw1,btemp+11
 31638  018D40  0E01               	movlw	1
 31639  018D42  6E32               	movwf	(btemp+10)^0,c
 31640  018D44  2A33               	incf	(btemp+11)^0,f,c
 31641  018D46  D002               	goto	u937_24
 31642  018D48                     u937_25:
 31643  018D48  90D8               	bcf	status,0,c
 31644  018D4A  3632               	rlcf	(btemp+10)^0,f,c
 31645  018D4C                     u937_24:
 31646  018D4C  2E33               	decfsz	(btemp+11)^0,f,c
 31647  018D4E  D7FC               	goto	u937_25
 31648  018D50  5032               	movf	(btemp+10)^0,w,c
 31649  018D52  0102               	movlb	2	; () banked
 31650  018D54  13E5               	iorwf	(_S+40)& (0+255),f,b	;volatile
 31651  018D56                     l10244:
 31652                           
 31653                           ;dio.c: 107:  } while (++i < 4);
 31654                           ;stkvar	_i @ sp[(-2)+0]
 31655  018D56  0EFE               	movlw	-2
 31656  018D58  2AE3               	incf	plusw1,f,c
 31657  018D5A  0EFE               	movlw	-2
 31658  018D5C  006F FF8C  F028    	movff	plusw1,btemp
 31659  018D62  0E03               	movlw	3
 31660  018D64  6428               	cpfsgt	btemp^0,c
 31661  018D66  D788               	goto	l10228
 31662                           
 31663                           ;dio.c: 116:  do { LATDbits.LATD7 = 1; } while(0);
 31664  018D68  8EBD               	bsf	189,7,c	;volatile
 31665                           
 31666                           ; _switch_handler: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 31667  018D6A  52E5               	movf	postdec1,f,c
 31668  018D6C  52E5               	movf	postdec1,f,c
 31669  018D6E  0012               	return		;funcret
 31670  018D70                     __end_of_switch_handler:
 31671                           	opt callstack 0
 31672                           
 31673 ;; *************** function _TMR5_ISR *****************
 31674 ;; Defined at:
 31675 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 31676 ;; Parameters:    Size  Location     Type
 31677 ;;		None
 31678 ;; Auto vars:     Size  Location     Type
 31679 ;;		None
 31680 ;; Return value:  Size  Location     Type
 31681 ;;                  1    wreg      void 
 31682 ;; Registers used:
 31683 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 31684 ;; Tracked objects:
 31685 ;;		On entry : 0/0
 31686 ;;		On exit  : 0/0
 31687 ;;		Unchanged: 0/0
 31688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31691 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31692 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31693 ;;Total ram usage:        4 bytes
 31694 ;; Hardware stack levels used:    1
 31695 ;; Hardware stack levels required when called:    5
 31696 ;; This function calls:
 31697 ;;		_TMR5_CallBack
 31698 ;;		_TMR5_WriteTimer
 31699 ;; This function is called by:
 31700 ;;		Interrupt level 1
 31701 ;; This function uses a non-reentrant model
 31702 ;;
 31703                           
 31704                           	psect	text140
 31705  01A808                     __ptext140:
 31706                           	opt callstack 0
 31707  01A808                     _TMR5_ISR:
 31708                           	opt callstack 12
 31709                           
 31710                           ;incstack = 0
 31711  01A808  006F FF60  F00D    	movff	status,??_TMR5_ISR+2
 31712  01A80E  0060  F0CC  F00E   	movff	btemp+11,??_TMR5_ISR+3
 31713  01A814  EE16  F0A1         	lfsr	1,___intlo_sp
 31714                           
 31715                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 31716  01A818  0139               	movlb	57	; () banked
 31717  01A81A  9DA8               	bcf	168,6,b	;volatile
 31718                           
 31719                           ; BSR set to: 57
 31720                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 31721  01A81C  0060  F14B  FFE6   	movff	_timer5ReloadVal,postinc1
 31722  01A822  0060  F14F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 31723  01A828  EC4E  F0D6         	call	_TMR5_WriteTimer	;wreg free
 31724                           
 31725                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 31726  01A82C  0102               	movlb	2	; () banked
 31727  01A82E  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
 31728  01A830  6E0B               	movwf	??_TMR5_ISR^0,c
 31729  01A832  6A0C               	clrf	(??_TMR5_ISR+1)^0,c
 31730  01A834  0E05               	movlw	5
 31731  01A836  260B               	addwf	??_TMR5_ISR^0,f,c
 31732  01A838  0E00               	movlw	0
 31733  01A83A  220C               	addwfc	(??_TMR5_ISR+1)^0,f,c
 31734  01A83C  4A50               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 31735  01A83E  2A51               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 31736  01A840  500B               	movf	??_TMR5_ISR^0,w,c
 31737  01A842  5C50               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 31738  01A844  500C               	movf	(??_TMR5_ISR+1)^0,w,c
 31739  01A846  5851               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 31740  01A848  A0D8               	btfss	status,0,c
 31741  01A84A  D004               	goto	i1l1017
 31742                           
 31743                           ; BSR set to: 2
 31744                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 31745  01A84C  ECDE  F0D9         	call	_TMR5_CallBack	;wreg free
 31746                           
 31747                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 31748  01A850  6A50               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 31749  01A852  6A51               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 31750  01A854                     i1l1017:
 31751  01A854  0060  F038  F033   	movff	??_TMR5_ISR+3,btemp+11
 31752  01A85A  0060  F037  FFD8   	movff	??_TMR5_ISR+2,status
 31753  01A860  0011               	retfie		f
 31754  01A862                     __end_of_TMR5_ISR:
 31755                           	opt callstack 0
 31756                           
 31757 ;; *************** function _TMR5_WriteTimer *****************
 31758 ;; Defined at:
 31759 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 31760 ;; Parameters:    Size  Location     Type
 31761 ;;  timerVal        2  [STACK] unsigned short 
 31762 ;; Auto vars:     Size  Location     Type
 31763 ;;		None
 31764 ;; Return value:  Size  Location     Type
 31765 ;;                  1  [STACK] void 
 31766 ;; Registers used:
 31767 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 31768 ;; Tracked objects:
 31769 ;;		On entry : 3F/39
 31770 ;;		On exit  : 0/0
 31771 ;;		Unchanged: 0/0
 31772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31774 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31776 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31777 ;;Total ram usage:        0 bytes
 31778 ;; Hardware stack levels used:    1
 31779 ;; Hardware stack levels required when called:    3
 31780 ;; This function calls:
 31781 ;;		Nothing
 31782 ;; This function is called by:
 31783 ;;		_TMR5_ISR
 31784 ;; This function uses a reentrant model
 31785 ;;
 31786                           
 31787                           	psect	text141
 31788  01AC9C                     __ptext141:
 31789                           	opt callstack 0
 31790  01AC9C                     _TMR5_WriteTimer:
 31791                           	opt callstack 13
 31792                           
 31793                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 31794                           
 31795                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31796                           ;incstack = 0
 31797  01AC9C  A49A               	btfss	154,2,c	;volatile
 31798  01AC9E  D00F               	goto	l10428
 31799                           
 31800                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 31801  01ACA0  909A               	bcf	154,0,c	;volatile
 31802                           
 31803                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 31804                           ;stkvar	_timerVal @ sp[(0)+-2]
 31805  01ACA2  0EFF               	movlw	255
 31806  01ACA4  24E1               	addwf	fsr1l,w,c
 31807  01ACA6  6ED9               	movwf	fsr2l,c
 31808  01ACA8  0EFF               	movlw	255
 31809  01ACAA  20E2               	addwfc	fsr1h,w,c
 31810  01ACAC  6EDA               	movwf	fsr2h,c
 31811  01ACAE  50DF               	movf	indf2,w,c
 31812  01ACB0  6E99               	movwf	153,c	;volatile
 31813                           
 31814                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 31815                           ;stkvar	_timerVal @ sp[(0)+-2]
 31816  01ACB2  0EFE               	movlw	-2
 31817  01ACB4  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31818                           
 31819                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 31820  01ACBA  809A               	bsf	154,0,c	;volatile
 31821                           
 31822                           ;mcc_generated_files/tmr5.c: 142:  } else {
 31823  01ACBC  D00C               	goto	l1000
 31824  01ACBE                     l10428:
 31825                           
 31826                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 31827                           ;stkvar	_timerVal @ sp[(0)+-2]
 31828  01ACBE  0EFF               	movlw	255
 31829  01ACC0  24E1               	addwf	fsr1l,w,c
 31830  01ACC2  6ED9               	movwf	fsr2l,c
 31831  01ACC4  0EFF               	movlw	255
 31832  01ACC6  20E2               	addwfc	fsr1h,w,c
 31833  01ACC8  6EDA               	movwf	fsr2h,c
 31834  01ACCA  50DF               	movf	indf2,w,c
 31835  01ACCC  6E99               	movwf	153,c	;volatile
 31836                           
 31837                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 31838                           ;stkvar	_timerVal @ sp[(0)+-2]
 31839  01ACCE  0EFE               	movlw	-2
 31840  01ACD0  006F FF8F FF98     	movff	plusw1,16280	;volatile
 31841  01ACD6                     l1000:
 31842                           
 31843                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 31844  01ACD6  52E5               	movf	postdec1,f,c
 31845  01ACD8  52E5               	movf	postdec1,f,c
 31846  01ACDA  0012               	return		;funcret
 31847  01ACDC                     __end_of_TMR5_WriteTimer:
 31848                           	opt callstack 0
 31849                           
 31850 ;; *************** function _TMR5_CallBack *****************
 31851 ;; Defined at:
 31852 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 31853 ;; Parameters:    Size  Location     Type
 31854 ;;		None
 31855 ;; Auto vars:     Size  Location     Type
 31856 ;;		None
 31857 ;; Return value:  Size  Location     Type
 31858 ;;                  1  [STACK] void 
 31859 ;; Registers used:
 31860 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 31861 ;; Tracked objects:
 31862 ;;		On entry : 3F/2
 31863 ;;		On exit  : 0/0
 31864 ;;		Unchanged: 0/0
 31865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31868 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31869 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31870 ;;Total ram usage:        0 bytes
 31871 ;; Hardware stack levels used:    1
 31872 ;; Hardware stack levels required when called:    4
 31873 ;; This function calls:
 31874 ;;		Absolute function
 31875 ;;		_TMR5_DefaultInterruptHandler
 31876 ;; This function is called by:
 31877 ;;		_TMR5_ISR
 31878 ;; This function uses a reentrant model
 31879 ;;
 31880                           
 31881                           	psect	text142
 31882  01B3BC                     __ptext142:
 31883                           	opt callstack 0
 31884  01B3BC                     _TMR5_CallBack:
 31885                           	opt callstack 12
 31886                           
 31887                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 31888                           
 31889                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31890                           ;incstack = 0
 31891  01B3BC  0100               	movlb	0	; () banked
 31892  01B3BE  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31893  01B3C0  11A6               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31894  01B3C2  11A7               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31895  01B3C4  B4D8               	btfsc	status,2,c
 31896  01B3C6  0012               	return	
 31897                           
 31898                           ; BSR set to: 0
 31899                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 31900  01B3C8  D801               	call	u966_28
 31901  01B3CA  0012               	return	
 31902  01B3CC                     u966_28:
 31903  01B3CC  0005               	push	
 31904  01B3CE  6EFA               	movwf	pclath,c
 31905  01B3D0  51A5               	movf	_TMR5_InterruptHandler& (0+255),w,b
 31906  01B3D2  6EFD               	movwf	tosl,c
 31907  01B3D4  51A6               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 31908  01B3D6  6EFE               	movwf	tosh,c
 31909  01B3D8  51A7               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 31910  01B3DA  6EFF               	movwf	tosu,c
 31911  01B3DC  50FA               	movf	pclath,w,c
 31912  01B3DE  0012               	return		;indir
 31913  01B3E0                     __end_of_TMR5_CallBack:
 31914                           	opt callstack 0
 31915                           
 31916 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 31917 ;; Defined at:
 31918 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 31919 ;; Parameters:    Size  Location     Type
 31920 ;;		None
 31921 ;; Auto vars:     Size  Location     Type
 31922 ;;		None
 31923 ;; Return value:  Size  Location     Type
 31924 ;;                  1  [STACK] void 
 31925 ;; Registers used:
 31926 ;;		wreg, status,2, status,0, btemp+11
 31927 ;; Tracked objects:
 31928 ;;		On entry : 3F/0
 31929 ;;		On exit  : 3F/2
 31930 ;;		Unchanged: 0/0
 31931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 31932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 31936 ;;Total ram usage:        0 bytes
 31937 ;; Hardware stack levels used:    1
 31938 ;; Hardware stack levels required when called:    3
 31939 ;; This function calls:
 31940 ;;		Nothing
 31941 ;; This function is called by:
 31942 ;;		_TMR5_Initialize
 31943 ;;		_TMR5_CallBack
 31944 ;; This function uses a reentrant model
 31945 ;;
 31946                           
 31947                           	psect	text143
 31948  01AED6                     __ptext143:
 31949                           	opt callstack 0
 31950  01AED6                     _TMR5_DefaultInterruptHandler:
 31951                           	opt callstack 12
 31952                           
 31953                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 31954                           
 31955                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 31956                           ;incstack = 0
 31957  01AED6  A0BE               	btfss	190,0,c	;volatile
 31958  01AED8  D002               	goto	u902_20
 31959  01AEDA  0E01               	movlw	1
 31960  01AEDC  D001               	goto	u902_26
 31961  01AEDE                     u902_20:
 31962  01AEDE  0E00               	movlw	0
 31963  01AEE0                     u902_26:
 31964  01AEE0  0AFF               	xorlw	255
 31965  01AEE2  6E33               	movwf	(btemp+11)^0,c
 31966  01AEE4  50BE               	movf	190,w,c	;volatile
 31967  01AEE6  1833               	xorwf	(btemp+11)^0,w,c
 31968  01AEE8  0BFE               	andlw	-2
 31969  01AEEA  1833               	xorwf	(btemp+11)^0,w,c
 31970  01AEEC  6EBE               	movwf	190,c	;volatile
 31971                           
 31972                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 31973  01AEEE  0E01               	movlw	1
 31974  01AEF0  0102               	movlb	2	; () banked
 31975  01AEF2  27B9               	addwf	(_V+185)& (0+255),f,b	;volatile
 31976  01AEF4  0E00               	movlw	0
 31977  01AEF6  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 31978  01AEF8  23BB               	addwfc	(_V+187)& (0+255),f,b	;volatile
 31979  01AEFA  23BC               	addwfc	(_V+188)& (0+255),f,b	;volatile
 31980                           
 31981                           ; BSR set to: 2
 31982                           ;mcc_generated_files/tmr5.c: 201:  V.ticks++;
 31983  01AEFC  0E01               	movlw	1
 31984  01AEFE  2781               	addwf	(_V+129)& (0+255),f,b	;volatile
 31985  01AF00  0E00               	movlw	0
 31986  01AF02  2382               	addwfc	(_V+130)& (0+255),f,b	;volatile
 31987  01AF04  2383               	addwfc	(_V+131)& (0+255),f,b	;volatile
 31988  01AF06  2384               	addwfc	(_V+132)& (0+255),f,b	;volatile
 31989                           
 31990                           ; BSR set to: 2
 31991                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 31992  01AF08  0012               	return		;funcret
 31993  01AF0A                     __end_of_TMR5_DefaultInterruptHandler:
 31994                           	opt callstack 0
 31995                           
 31996 ;; *************** function _TMR3_ISR *****************
 31997 ;; Defined at:
 31998 ;;		line 165 in file "mcc_generated_files/tmr3.c"
 31999 ;; Parameters:    Size  Location     Type
 32000 ;;		None
 32001 ;; Auto vars:     Size  Location     Type
 32002 ;;		None
 32003 ;; Return value:  Size  Location     Type
 32004 ;;                  1    wreg      void 
 32005 ;; Registers used:
 32006 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32007 ;; Tracked objects:
 32008 ;;		On entry : 0/0
 32009 ;;		On exit  : 3F/0
 32010 ;;		Unchanged: 0/0
 32011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32014 ;;      Temps:         25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32015 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32016 ;;Total ram usage:       25 bytes
 32017 ;; Hardware stack levels used:    1
 32018 ;; Hardware stack levels required when called:   14
 32019 ;; This function calls:
 32020 ;;		_TMR3_CallBack
 32021 ;;		_TMR3_WriteTimer
 32022 ;; This function is called by:
 32023 ;;		Interrupt level 1
 32024 ;; This function uses a non-reentrant model
 32025 ;;
 32026                           
 32027                           	psect	text144
 32028  018844                     __ptext144:
 32029                           	opt callstack 0
 32030  018844                     _TMR3_ISR:
 32031                           	opt callstack 3
 32032                           
 32033                           ; BSR set to: 2
 32034                           ;incstack = 0
 32035  018844  006F FF60  F00F    	movff	status,??_TMR3_ISR
 32036  01884A  006F FFD8  F010    	movff	tblptrl,??_TMR3_ISR+1
 32037  018850  006F FFDC  F011    	movff	tblptrh,??_TMR3_ISR+2
 32038  018856  006F FFE0  F012    	movff	tblptru,??_TMR3_ISR+3
 32039  01885C  006F FFD4  F013    	movff	tablat,??_TMR3_ISR+4
 32040  018862  0060  F0A0  F014   	movff	btemp,??_TMR3_ISR+5
 32041  018868  0060  F0A4  F015   	movff	btemp+1,??_TMR3_ISR+6
 32042  01886E  0060  F0A8  F016   	movff	btemp+2,??_TMR3_ISR+7
 32043  018874  0060  F0AC  F017   	movff	btemp+3,??_TMR3_ISR+8
 32044  01887A  0060  F0B0  F018   	movff	btemp+4,??_TMR3_ISR+9
 32045  018880  0060  F0B4  F019   	movff	btemp+5,??_TMR3_ISR+10
 32046  018886  0060  F0B8  F01A   	movff	btemp+6,??_TMR3_ISR+11
 32047  01888C  0060  F0BC  F01B   	movff	btemp+7,??_TMR3_ISR+12
 32048  018892  0060  F0C0  F01C   	movff	btemp+8,??_TMR3_ISR+13
 32049  018898  0060  F0C4  F01D   	movff	btemp+9,??_TMR3_ISR+14
 32050  01889E  0060  F0C8  F01E   	movff	btemp+10,??_TMR3_ISR+15
 32051  0188A4  0060  F0CC  F01F   	movff	btemp+11,??_TMR3_ISR+16
 32052  0188AA  0060  F0E0  F020   	movff	btemp+16,??_TMR3_ISR+17
 32053  0188B0  0060  F0E4  F021   	movff	btemp+17,??_TMR3_ISR+18
 32054  0188B6  0060  F0E8  F022   	movff	btemp+18,??_TMR3_ISR+19
 32055  0188BC  0060  F0EC  F023   	movff	btemp+19,??_TMR3_ISR+20
 32056  0188C2  0060  F0F0  F024   	movff	btemp+20,??_TMR3_ISR+21
 32057  0188C8  0060  F0F4  F025   	movff	btemp+21,??_TMR3_ISR+22
 32058  0188CE  0060  F0F8  F026   	movff	btemp+22,??_TMR3_ISR+23
 32059  0188D4  0060  F0FC  F027   	movff	btemp+23,??_TMR3_ISR+24
 32060  0188DA  EE16  F0A1         	lfsr	1,___intlo_sp
 32061                           
 32062                           ;mcc_generated_files/tmr3.c: 167:     static volatile unsigned int CountCallBack = 0;;mc
      +                          c_generated_files/tmr3.c: 170:     PIR6bits.TMR3IF = 0;
 32063  0188DE  0139               	movlb	57	; () banked
 32064  0188E0  9DA6               	bcf	166,6,b	;volatile
 32065                           
 32066                           ; BSR set to: 57
 32067                           ;mcc_generated_files/tmr3.c: 171:     TMR3_WriteTimer(timer3ReloadVal);
 32068  0188E2  0060  F13B  FFE6   	movff	_timer3ReloadVal,postinc1
 32069  0188E8  0060  F13F  FFE6   	movff	_timer3ReloadVal+1,postinc1
 32070  0188EE  EC6E  F0D6         	call	_TMR3_WriteTimer	;wreg free
 32071                           
 32072                           ;mcc_generated_files/tmr3.c: 174:     if (++CountCallBack >= 40)
 32073  0188F2  0100               	movlb	0	; () banked
 32074  0188F4  4BC2               	infsnz	TMR3_ISR@CountCallBack& (0+255),f,b	;volatile
 32075  0188F6  2BC3               	incf	(TMR3_ISR@CountCallBack+1)& (0+255),f,b	;volatile
 32076  0188F8  51C3               	movf	(TMR3_ISR@CountCallBack+1)& (0+255),w,b	;volatile
 32077  0188FA  E104               	bnz	i1u1205_20
 32078  0188FC  0E28               	movlw	40
 32079  0188FE  5DC2               	subwf	TMR3_ISR@CountCallBack& (0+255),w,b	;volatile
 32080  018900  A0D8               	btfss	status,0,c
 32081  018902  D005               	goto	i1l1205
 32082  018904                     i1u1205_20:
 32083                           
 32084                           ; BSR set to: 0
 32085                           ;mcc_generated_files/tmr3.c: 175:     {;mcc_generated_files/tmr3.c: 177:         TMR3_Ca
      +                          llBack();
 32086  018904  ECF0  F0D9         	call	_TMR3_CallBack	;wreg free
 32087                           
 32088                           ;mcc_generated_files/tmr3.c: 180:         CountCallBack = 0;
 32089  018908  0100               	movlb	0	; () banked
 32090  01890A  6BC2               	clrf	TMR3_ISR@CountCallBack& (0+255),b	;volatile
 32091  01890C  6BC3               	clrf	(TMR3_ISR@CountCallBack+1)& (0+255),b	;volatile
 32092  01890E                     i1l1205:
 32093                           
 32094                           ; BSR set to: 0
 32095  01890E  0060  F09C  F03F   	movff	??_TMR3_ISR+24,btemp+23
 32096  018914  0060  F098  F03E   	movff	??_TMR3_ISR+23,btemp+22
 32097  01891A  0060  F094  F03D   	movff	??_TMR3_ISR+22,btemp+21
 32098  018920  0060  F090  F03C   	movff	??_TMR3_ISR+21,btemp+20
 32099  018926  0060  F08C  F03B   	movff	??_TMR3_ISR+20,btemp+19
 32100  01892C  0060  F088  F03A   	movff	??_TMR3_ISR+19,btemp+18
 32101  018932  0060  F084  F039   	movff	??_TMR3_ISR+18,btemp+17
 32102  018938  0060  F080  F038   	movff	??_TMR3_ISR+17,btemp+16
 32103  01893E  0060  F07C  F033   	movff	??_TMR3_ISR+16,btemp+11
 32104  018944  0060  F078  F032   	movff	??_TMR3_ISR+15,btemp+10
 32105  01894A  0060  F074  F031   	movff	??_TMR3_ISR+14,btemp+9
 32106  018950  0060  F070  F030   	movff	??_TMR3_ISR+13,btemp+8
 32107  018956  0060  F06C  F02F   	movff	??_TMR3_ISR+12,btemp+7
 32108  01895C  0060  F068  F02E   	movff	??_TMR3_ISR+11,btemp+6
 32109  018962  0060  F064  F02D   	movff	??_TMR3_ISR+10,btemp+5
 32110  018968  0060  F060  F02C   	movff	??_TMR3_ISR+9,btemp+4
 32111  01896E  0060  F05C  F02B   	movff	??_TMR3_ISR+8,btemp+3
 32112  018974  0060  F058  F02A   	movff	??_TMR3_ISR+7,btemp+2
 32113  01897A  0060  F054  F029   	movff	??_TMR3_ISR+6,btemp+1
 32114  018980  0060  F050  F028   	movff	??_TMR3_ISR+5,btemp
 32115  018986  0060  F04F  FFF5   	movff	??_TMR3_ISR+4,tablat
 32116  01898C  0060  F04B  FFF8   	movff	??_TMR3_ISR+3,tblptru
 32117  018992  0060  F047  FFF7   	movff	??_TMR3_ISR+2,tblptrh
 32118  018998  0060  F043  FFF6   	movff	??_TMR3_ISR+1,tblptrl
 32119  01899E  0060  F03F  FFD8   	movff	??_TMR3_ISR,status
 32120  0189A4  0011               	retfie		f
 32121  0189A6                     __end_of_TMR3_ISR:
 32122                           	opt callstack 0
 32123                           
 32124 ;; *************** function _TMR3_WriteTimer *****************
 32125 ;; Defined at:
 32126 ;;		line 128 in file "mcc_generated_files/tmr3.c"
 32127 ;; Parameters:    Size  Location     Type
 32128 ;;  timerVal        2  [STACK] unsigned short 
 32129 ;; Auto vars:     Size  Location     Type
 32130 ;;		None
 32131 ;; Return value:  Size  Location     Type
 32132 ;;                  1  [STACK] void 
 32133 ;; Registers used:
 32134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 32135 ;; Tracked objects:
 32136 ;;		On entry : 3F/39
 32137 ;;		On exit  : 0/0
 32138 ;;		Unchanged: 0/0
 32139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32144 ;;Total ram usage:        0 bytes
 32145 ;; Hardware stack levels used:    1
 32146 ;; Hardware stack levels required when called:    3
 32147 ;; This function calls:
 32148 ;;		Nothing
 32149 ;; This function is called by:
 32150 ;;		_TMR3_ISR
 32151 ;; This function uses a reentrant model
 32152 ;;
 32153                           
 32154                           	psect	text145
 32155  01ACDC                     __ptext145:
 32156                           	opt callstack 0
 32157  01ACDC                     _TMR3_WriteTimer:
 32158                           	opt callstack 13
 32159                           
 32160                           ;mcc_generated_files/tmr3.c: 128: void TMR3_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr3.c: 129: {;mcc_generated_files/tmr3.c: 130:     if (T3CONbits.NOT_SYNC == 1)
 32161                           
 32162                           ; BSR set to: 0
 32163                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32164                           ;incstack = 0
 32165  01ACDC  A4A6               	btfss	166,2,c	;volatile
 32166  01ACDE  D00F               	goto	l10446
 32167                           
 32168                           ;mcc_generated_files/tmr3.c: 131:     {;mcc_generated_files/tmr3.c: 133:         T3CONbi
      +                          ts.TMR3ON = 0;
 32169  01ACE0  90A6               	bcf	166,0,c	;volatile
 32170                           
 32171                           ;mcc_generated_files/tmr3.c: 136:         TMR3H = (timerVal >> 8);
 32172                           ;stkvar	_timerVal @ sp[(0)+-2]
 32173  01ACE2  0EFF               	movlw	255
 32174  01ACE4  24E1               	addwf	fsr1l,w,c
 32175  01ACE6  6ED9               	movwf	fsr2l,c
 32176  01ACE8  0EFF               	movlw	255
 32177  01ACEA  20E2               	addwfc	fsr1h,w,c
 32178  01ACEC  6EDA               	movwf	fsr2h,c
 32179  01ACEE  50DF               	movf	indf2,w,c
 32180  01ACF0  6EA5               	movwf	165,c	;volatile
 32181                           
 32182                           ;mcc_generated_files/tmr3.c: 137:         TMR3L = timerVal;
 32183                           ;stkvar	_timerVal @ sp[(0)+-2]
 32184  01ACF2  0EFE               	movlw	-2
 32185  01ACF4  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32186                           
 32187                           ;mcc_generated_files/tmr3.c: 140:         T3CONbits.TMR3ON =1;
 32188  01ACFA  80A6               	bsf	166,0,c	;volatile
 32189                           
 32190                           ;mcc_generated_files/tmr3.c: 141:     }
 32191  01ACFC  D00C               	goto	l1188
 32192  01ACFE                     l10446:
 32193                           
 32194                           ;mcc_generated_files/tmr3.c: 143:     {;mcc_generated_files/tmr3.c: 145:         TMR3H =
      +                           (timerVal >> 8);
 32195                           ;stkvar	_timerVal @ sp[(0)+-2]
 32196  01ACFE  0EFF               	movlw	255
 32197  01AD00  24E1               	addwf	fsr1l,w,c
 32198  01AD02  6ED9               	movwf	fsr2l,c
 32199  01AD04  0EFF               	movlw	255
 32200  01AD06  20E2               	addwfc	fsr1h,w,c
 32201  01AD08  6EDA               	movwf	fsr2h,c
 32202  01AD0A  50DF               	movf	indf2,w,c
 32203  01AD0C  6EA5               	movwf	165,c	;volatile
 32204                           
 32205                           ;mcc_generated_files/tmr3.c: 146:         TMR3L = timerVal;
 32206                           ;stkvar	_timerVal @ sp[(0)+-2]
 32207  01AD0E  0EFE               	movlw	-2
 32208  01AD10  006F FF8F FFA4     	movff	plusw1,16292	;volatile
 32209  01AD16                     l1188:
 32210                           
 32211                           ; _TMR3_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 32212  01AD16  52E5               	movf	postdec1,f,c
 32213  01AD18  52E5               	movf	postdec1,f,c
 32214  01AD1A  0012               	return		;funcret
 32215  01AD1C                     __end_of_TMR3_WriteTimer:
 32216                           	opt callstack 0
 32217                           
 32218 ;; *************** function _TMR3_CallBack *****************
 32219 ;; Defined at:
 32220 ;;		line 184 in file "mcc_generated_files/tmr3.c"
 32221 ;; Parameters:    Size  Location     Type
 32222 ;;		None
 32223 ;; Auto vars:     Size  Location     Type
 32224 ;;		None
 32225 ;; Return value:  Size  Location     Type
 32226 ;;                  1  [STACK] void 
 32227 ;; Registers used:
 32228 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+2, btemp+3, btemp+
      +4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, bt
      +emp+21, btemp+22, btemp+23, tosl, tblptrl, tblptrh, tblptru, prodl, prodh
 32229 ;; Tracked objects:
 32230 ;;		On entry : 3F/0
 32231 ;;		On exit  : 0/0
 32232 ;;		Unchanged: 0/0
 32233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32238 ;;Total ram usage:        0 bytes
 32239 ;; Hardware stack levels used:    1
 32240 ;; Hardware stack levels required when called:   13
 32241 ;; This function calls:
 32242 ;;		Absolute function
 32243 ;;		_TMR3_DefaultInterruptHandler
 32244 ;;		_calc_bsoc
 32245 ;; This function is called by:
 32246 ;;		_TMR3_ISR
 32247 ;; This function uses a reentrant model
 32248 ;;
 32249                           
 32250                           	psect	text146
 32251  01B3E0                     __ptext146:
 32252                           	opt callstack 0
 32253  01B3E0                     _TMR3_CallBack:
 32254                           	opt callstack 3
 32255                           
 32256                           ;mcc_generated_files/tmr3.c: 187:     if(TMR3_InterruptHandler)
 32257                           
 32258                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32259                           ;incstack = 0
 32260  01B3E0  0100               	movlb	0	; () banked
 32261  01B3E2  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32262  01B3E4  11A3               	iorwf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32263  01B3E6  11A4               	iorwf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32264  01B3E8  B4D8               	btfsc	status,2,c
 32265  01B3EA  0012               	return	
 32266                           
 32267                           ; BSR set to: 0
 32268                           ;mcc_generated_files/tmr3.c: 188:     {;mcc_generated_files/tmr3.c: 189:         TMR3_In
      +                          terruptHandler();
 32269  01B3EC  D801               	call	u1196_28
 32270  01B3EE  0012               	return	
 32271  01B3F0                     u1196_28:
 32272  01B3F0  0005               	push	
 32273  01B3F2  6EFA               	movwf	pclath,c
 32274  01B3F4  51A2               	movf	_TMR3_InterruptHandler& (0+255),w,b
 32275  01B3F6  6EFD               	movwf	tosl,c
 32276  01B3F8  51A3               	movf	(_TMR3_InterruptHandler+1)& (0+255),w,b
 32277  01B3FA  6EFE               	movwf	tosh,c
 32278  01B3FC  51A4               	movf	(_TMR3_InterruptHandler+2)& (0+255),w,b
 32279  01B3FE  6EFF               	movwf	tosu,c
 32280  01B400  50FA               	movf	pclath,w,c
 32281  01B402  0012               	return		;indir
 32282  01B404                     __end_of_TMR3_CallBack:
 32283                           	opt callstack 0
 32284                           
 32285 ;; *************** function _TMR3_DefaultInterruptHandler *****************
 32286 ;; Defined at:
 32287 ;;		line 197 in file "mcc_generated_files/tmr3.c"
 32288 ;; Parameters:    Size  Location     Type
 32289 ;;		None
 32290 ;; Auto vars:     Size  Location     Type
 32291 ;;		None
 32292 ;; Return value:  Size  Location     Type
 32293 ;;                  1  [STACK] void 
 32294 ;; Registers used:
 32295 ;;		None
 32296 ;; Tracked objects:
 32297 ;;		On entry : 3F/0
 32298 ;;		On exit  : 0/0
 32299 ;;		Unchanged: 0/0
 32300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32305 ;;Total ram usage:        0 bytes
 32306 ;; Hardware stack levels used:    1
 32307 ;; Hardware stack levels required when called:    3
 32308 ;; This function calls:
 32309 ;;		Nothing
 32310 ;; This function is called by:
 32311 ;;		_TMR3_Initialize
 32312 ;;		_TMR3_CallBack
 32313 ;; This function uses a reentrant model
 32314 ;;
 32315                           
 32316                           	psect	text147
 32317  01B718                     __ptext147:
 32318                           	opt callstack 0
 32319  01B718                     _TMR3_DefaultInterruptHandler:
 32320                           	opt callstack 12
 32321                           
 32322                           ; _TMR3_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 32323                           
 32324                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32325                           ;incstack = 0
 32326  01B718  0012               	return		;funcret
 32327  01B71A                     __end_of_TMR3_DefaultInterruptHandler:
 32328                           	opt callstack 0
 32329                           
 32330 ;; *************** function _calc_bsoc *****************
 32331 ;; Defined at:
 32332 ;;		line 39 in file "bsoc.c"
 32333 ;; Parameters:    Size  Location     Type
 32334 ;;		None
 32335 ;; Auto vars:     Size  Location     Type
 32336 ;;  log_ptr         2  [STACK] PTR unsigned char 
 32337 ;;		 -> port_data(512), 
 32338 ;; Return value:  Size  Location     Type
 32339 ;;                  1  [STACK] void 
 32340 ;; Registers used:
 32341 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
 32342 ;; Tracked objects:
 32343 ;;		On entry : 3F/0
 32344 ;;		On exit  : 3F/1
 32345 ;;		Unchanged: 0/0
 32346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32350 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32351 ;;Total ram usage:        0 bytes
 32352 ;; Hardware stack levels used:    1
 32353 ;; Hardware stack levels required when called:   12
 32354 ;; This function calls:
 32355 ;;		_StartTimer
 32356 ;;		___fladd
 32357 ;;		___fldiv
 32358 ;;		___flge
 32359 ;;		___flmul
 32360 ;;		___flneg
 32361 ;;		___fltol
 32362 ;;		_fabsf
 32363 ;;		_port_data_dma_ptr
 32364 ;;		_send_port_data_dma
 32365 ;;		_sprintf
 32366 ;;		_strlen
 32367 ;; This function is called by:
 32368 ;;		_init_bsoc
 32369 ;;		_TMR3_CallBack
 32370 ;; This function uses a reentrant model
 32371 ;;
 32372                           
 32373                           	psect	text148
 32374  014204                     __ptext148:
 32375                           	opt callstack 0
 32376  014204                     _calc_bsoc:
 32377                           	opt callstack 0
 32378                           
 32379                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32380  014204  52E6               	movf	postinc1,f,c
 32381  014206  52E6               	movf	postinc1,f,c
 32382                           
 32383                           ;incstack = 0
 32384                           ;bsoc.c: 41:  uint8_t * log_ptr;;bsoc.c: 43:  do { LATEbits.LATE1 = 1; } while(0);
 32385  014208  82BE               	bsf	190,1,c	;volatile
 32386                           
 32387                           ;bsoc.c: 45:  C.dynamic_ah += (C.c_bat / 3600.0);
 32388  01420A  0E00               	movlw	0
 32389  01420C  6EE6               	movwf	postinc1,c
 32390  01420E  0E00               	movlw	0
 32391  014210  6EE6               	movwf	postinc1,c
 32392  014212  0E61               	movlw	97
 32393  014214  6EE6               	movwf	postinc1,c
 32394  014216  0E45               	movlw	69
 32395  014218  6EE6               	movwf	postinc1,c
 32396  01421A  0060  F513  FFE6   	movff	_C+68,postinc1
 32397  014220  0060  F517  FFE6   	movff	_C+69,postinc1
 32398  014226  0060  F51B  FFE6   	movff	_C+70,postinc1
 32399  01422C  0060  F51F  FFE6   	movff	_C+71,postinc1
 32400  014232  EC9B  F0A4         	call	___fldiv	;wreg free
 32401  014236  0060  F0A3  FFE6   	movff	btemp,postinc1
 32402  01423C  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32403  014242  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32404  014248  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32405  01424E  0060  F633  FFE6   	movff	_C+140,postinc1
 32406  014254  0060  F637  FFE6   	movff	_C+141,postinc1
 32407  01425A  0060  F63B  FFE6   	movff	_C+142,postinc1
 32408  014260  0060  F63F  FFE6   	movff	_C+143,postinc1
 32409  014266  EC24  F09D         	call	___fladd	;wreg free
 32410  01426A  0060  F0A0  F18C   	movff	btemp,_C+140	;volatile
 32411  014270  0060  F0A4  F18D   	movff	btemp+1,_C+141	;volatile
 32412  014276  0060  F0A8  F18E   	movff	btemp+2,_C+142	;volatile
 32413  01427C  0060  F0AC  F18F   	movff	btemp+3,_C+143	;volatile
 32414                           
 32415                           ;bsoc.c: 46:  if (C.dynamic_ah > (C.bank_ah))
 32416  014282  0060  F633  FFE6   	movff	_C+140,postinc1
 32417  014288  0060  F637  FFE6   	movff	_C+141,postinc1
 32418  01428E  0060  F63B  FFE6   	movff	_C+142,postinc1
 32419  014294  0060  F63F  FFE6   	movff	_C+143,postinc1
 32420  01429A  0060  F623  FFE6   	movff	_C+136,postinc1
 32421  0142A0  0060  F627  FFE6   	movff	_C+137,postinc1
 32422  0142A6  0060  F62B  FFE6   	movff	_C+138,postinc1
 32423  0142AC  0060  F62F  FFE6   	movff	_C+139,postinc1
 32424  0142B2  EC70  F0C3         	call	___flge	;wreg free
 32425  0142B6  B028               	btfsc	btemp& (0+255),0,c
 32426  0142B8  D008               	goto	l12356
 32427                           
 32428                           ;bsoc.c: 47:   C.dynamic_ah = C.bank_ah;
 32429  0142BA  C188  F18C         	movff	_C+136,_C+140	;volatile
 32430  0142BE  C189  F18D         	movff	_C+137,_C+141	;volatile
 32431  0142C2  C18A  F18E         	movff	_C+138,_C+142	;volatile
 32432  0142C6  C18B  F18F         	movff	_C+139,_C+143	;volatile
 32433  0142CA                     l12356:
 32434                           
 32435                           ;bsoc.c: 48:  if (C.dynamic_ah < 0.1)
 32436  0142CA  0ECD               	movlw	205
 32437  0142CC  6EE6               	movwf	postinc1,c
 32438  0142CE  0ECC               	movlw	204
 32439  0142D0  6EE6               	movwf	postinc1,c
 32440  0142D2  0ECC               	movlw	204
 32441  0142D4  6EE6               	movwf	postinc1,c
 32442  0142D6  0E3D               	movlw	61
 32443  0142D8  6EE6               	movwf	postinc1,c
 32444  0142DA  0060  F633  FFE6   	movff	_C+140,postinc1
 32445  0142E0  0060  F637  FFE6   	movff	_C+141,postinc1
 32446  0142E6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32447  0142EC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32448  0142F2  EC70  F0C3         	call	___flge	;wreg free
 32449  0142F6  B028               	btfsc	btemp& (0+255),0,c
 32450  0142F8  D009               	goto	l12360
 32451                           
 32452                           ;bsoc.c: 49:   C.dynamic_ah = 0.1;
 32453  0142FA  0ECD               	movlw	205
 32454  0142FC  0101               	movlb	1	; () banked
 32455  0142FE  6F8C               	movwf	(_C+140)& (0+255),b	;volatile
 32456  014300  0ECC               	movlw	204
 32457  014302  6F8D               	movwf	(_C+141)& (0+255),b	;volatile
 32458  014304  0ECC               	movlw	204
 32459  014306  6F8E               	movwf	(_C+142)& (0+255),b	;volatile
 32460  014308  0E3D               	movlw	61
 32461  01430A  6F8F               	movwf	(_C+143)& (0+255),b	;volatile
 32462  01430C                     l12360:
 32463                           
 32464                           ;bsoc.c: 51:  C.pv_ah += (C.c_pv / 3600.0);
 32465  01430C  0E00               	movlw	0
 32466  01430E  6EE6               	movwf	postinc1,c
 32467  014310  0E00               	movlw	0
 32468  014312  6EE6               	movwf	postinc1,c
 32469  014314  0E61               	movlw	97
 32470  014316  6EE6               	movwf	postinc1,c
 32471  014318  0E45               	movlw	69
 32472  01431A  6EE6               	movwf	postinc1,c
 32473  01431C  0060  F523  FFE6   	movff	_C+72,postinc1
 32474  014322  0060  F527  FFE6   	movff	_C+73,postinc1
 32475  014328  0060  F52B  FFE6   	movff	_C+74,postinc1
 32476  01432E  0060  F52F  FFE6   	movff	_C+75,postinc1
 32477  014334  EC9B  F0A4         	call	___fldiv	;wreg free
 32478  014338  0060  F0A3  FFE6   	movff	btemp,postinc1
 32479  01433E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32480  014344  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32481  01434A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32482  014350  0060  F643  FFE6   	movff	_C+144,postinc1
 32483  014356  0060  F647  FFE6   	movff	_C+145,postinc1
 32484  01435C  0060  F64B  FFE6   	movff	_C+146,postinc1
 32485  014362  0060  F64F  FFE6   	movff	_C+147,postinc1
 32486  014368  EC24  F09D         	call	___fladd	;wreg free
 32487  01436C  0060  F0A0  F190   	movff	btemp,_C+144	;volatile
 32488  014372  0060  F0A4  F191   	movff	btemp+1,_C+145	;volatile
 32489  014378  0060  F0A8  F192   	movff	btemp+2,_C+146	;volatile
 32490  01437E  0060  F0AC  F193   	movff	btemp+3,_C+147	;volatile
 32491                           
 32492                           ;bsoc.c: 52:  C.pvkw += (C.p_pv / 3600.0);
 32493  014384  0E00               	movlw	0
 32494  014386  6EE6               	movwf	postinc1,c
 32495  014388  0E00               	movlw	0
 32496  01438A  6EE6               	movwf	postinc1,c
 32497  01438C  0E61               	movlw	97
 32498  01438E  6EE6               	movwf	postinc1,c
 32499  014390  0E45               	movlw	69
 32500  014392  6EE6               	movwf	postinc1,c
 32501  014394  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32502  01439A  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32503  0143A0  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32504  0143A6  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32505  0143AC  EC9B  F0A4         	call	___fldiv	;wreg free
 32506  0143B0  0060  F0A3  FFE6   	movff	btemp,postinc1
 32507  0143B6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32508  0143BC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32509  0143C2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32510  0143C8  0060  F683  FFE6   	movff	_C+160,postinc1
 32511  0143CE  0060  F687  FFE6   	movff	_C+161,postinc1
 32512  0143D4  0060  F68B  FFE6   	movff	_C+162,postinc1
 32513  0143DA  0060  F68F  FFE6   	movff	_C+163,postinc1
 32514  0143E0  EC24  F09D         	call	___fladd	;wreg free
 32515  0143E4  0060  F0A0  F1A0   	movff	btemp,_C+160	;volatile
 32516  0143EA  0060  F0A4  F1A1   	movff	btemp+1,_C+161	;volatile
 32517  0143F0  0060  F0A8  F1A2   	movff	btemp+2,_C+162	;volatile
 32518  0143F6  0060  F0AC  F1A3   	movff	btemp+3,_C+163	;volatile
 32519                           
 32520                           ;bsoc.c: 53:  C.invkw += (C.p_inverter / 3600.0);
 32521  0143FC  0E00               	movlw	0
 32522  0143FE  6EE6               	movwf	postinc1,c
 32523  014400  0E00               	movlw	0
 32524  014402  6EE6               	movwf	postinc1,c
 32525  014404  0E61               	movlw	97
 32526  014406  6EE6               	movwf	postinc1,c
 32527  014408  0E45               	movlw	69
 32528  01440A  6EE6               	movwf	postinc1,c
 32529  01440C  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32530  014412  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32531  014418  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32532  01441E  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32533  014424  EC9B  F0A4         	call	___fldiv	;wreg free
 32534  014428  0060  F0A3  FFE6   	movff	btemp,postinc1
 32535  01442E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32536  014434  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32537  01443A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32538  014440  0060  F693  FFE6   	movff	_C+164,postinc1
 32539  014446  0060  F697  FFE6   	movff	_C+165,postinc1
 32540  01444C  0060  F69B  FFE6   	movff	_C+166,postinc1
 32541  014452  0060  F69F  FFE6   	movff	_C+167,postinc1
 32542  014458  EC24  F09D         	call	___fladd	;wreg free
 32543  01445C  0060  F0A0  F1A4   	movff	btemp,_C+164	;volatile
 32544  014462  0060  F0A4  F1A5   	movff	btemp+1,_C+165	;volatile
 32545  014468  0060  F0A8  F1A6   	movff	btemp+2,_C+166	;volatile
 32546  01446E  0060  F0AC  F1A7   	movff	btemp+3,_C+167	;volatile
 32547                           
 32548                           ;bsoc.c: 54:  C.loadkw += (C.p_load / 3600.0);
 32549  014474  0E00               	movlw	0
 32550  014476  6EE6               	movwf	postinc1,c
 32551  014478  0E00               	movlw	0
 32552  01447A  6EE6               	movwf	postinc1,c
 32553  01447C  0E61               	movlw	97
 32554  01447E  6EE6               	movwf	postinc1,c
 32555  014480  0E45               	movlw	69
 32556  014482  6EE6               	movwf	postinc1,c
 32557  014484  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32558  01448A  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32559  014490  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32560  014496  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32561  01449C  EC9B  F0A4         	call	___fldiv	;wreg free
 32562  0144A0  0060  F0A3  FFE6   	movff	btemp,postinc1
 32563  0144A6  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32564  0144AC  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32565  0144B2  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32566  0144B8  0060  F6A3  FFE6   	movff	_C+168,postinc1
 32567  0144BE  0060  F6A7  FFE6   	movff	_C+169,postinc1
 32568  0144C4  0060  F6AB  FFE6   	movff	_C+170,postinc1
 32569  0144CA  0060  F6AF  FFE6   	movff	_C+171,postinc1
 32570  0144D0  EC24  F09D         	call	___fladd	;wreg free
 32571  0144D4  0060  F0A0  F1A8   	movff	btemp,_C+168	;volatile
 32572  0144DA  0060  F0A4  F1A9   	movff	btemp+1,_C+169	;volatile
 32573  0144E0  0060  F0A8  F1AA   	movff	btemp+2,_C+170	;volatile
 32574  0144E6  0060  F0AC  F1AB   	movff	btemp+3,_C+171	;volatile
 32575                           
 32576                           ;bsoc.c: 55:  if (C.p_bat > 0.0)
 32577  0144EC  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32578  0144F2  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32579  0144F8  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32580  0144FE  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32581  014504  0E00               	movlw	0
 32582  014506  6EE6               	movwf	postinc1,c
 32583  014508  0E00               	movlw	0
 32584  01450A  6EE6               	movwf	postinc1,c
 32585  01450C  0E00               	movlw	0
 32586  01450E  6EE6               	movwf	postinc1,c
 32587  014510  0E00               	movlw	0
 32588  014512  6EE6               	movwf	postinc1,c
 32589  014514  EC70  F0C3         	call	___flge	;wreg free
 32590  014518  B028               	btfsc	btemp& (0+255),0,c
 32591  01451A  D03C               	goto	l12372
 32592                           
 32593                           ;bsoc.c: 56:   C.bkwi += (C.p_bat / 3600.0);
 32594  01451C  0E00               	movlw	0
 32595  01451E  6EE6               	movwf	postinc1,c
 32596  014520  0E00               	movlw	0
 32597  014522  6EE6               	movwf	postinc1,c
 32598  014524  0E61               	movlw	97
 32599  014526  6EE6               	movwf	postinc1,c
 32600  014528  0E45               	movlw	69
 32601  01452A  6EE6               	movwf	postinc1,c
 32602  01452C  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32603  014532  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32604  014538  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32605  01453E  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32606  014544  EC9B  F0A4         	call	___fldiv	;wreg free
 32607  014548  0060  F0A3  FFE6   	movff	btemp,postinc1
 32608  01454E  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32609  014554  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32610  01455A  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32611  014560  0060  F663  FFE6   	movff	_C+152,postinc1
 32612  014566  0060  F667  FFE6   	movff	_C+153,postinc1
 32613  01456C  0060  F66B  FFE6   	movff	_C+154,postinc1
 32614  014572  0060  F66F  FFE6   	movff	_C+155,postinc1
 32615  014578  EC24  F09D         	call	___fladd	;wreg free
 32616  01457C  0060  F0A0  F198   	movff	btemp,_C+152	;volatile
 32617  014582  0060  F0A4  F199   	movff	btemp+1,_C+153	;volatile
 32618  014588  0060  F0A8  F19A   	movff	btemp+2,_C+154	;volatile
 32619  01458E  0060  F0AC  F19B   	movff	btemp+3,_C+155	;volatile
 32620  014594                     l12372:
 32621                           
 32622                           ;bsoc.c: 57:  if (C.p_bat < 0.0)
 32623  014594  0101               	movlb	1	; () banked
 32624  014596  AF7F               	btfss	(_C+127)& (0+255),7,b	;volatile
 32625  014598  D04A               	goto	l12376
 32626                           
 32627                           ; BSR set to: 1
 32628                           ;bsoc.c: 58:   C.bkwo += fabsf(C.p_bat / 3600.0);
 32629  01459A  0E00               	movlw	0
 32630  01459C  6EE6               	movwf	postinc1,c
 32631  01459E  0E00               	movlw	0
 32632  0145A0  6EE6               	movwf	postinc1,c
 32633  0145A2  0E61               	movlw	97
 32634  0145A4  6EE6               	movwf	postinc1,c
 32635  0145A6  0E45               	movlw	69
 32636  0145A8  6EE6               	movwf	postinc1,c
 32637  0145AA  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32638  0145B0  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32639  0145B6  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32640  0145BC  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32641  0145C2  EC9B  F0A4         	call	___fldiv	;wreg free
 32642  0145C6  0060  F0A3  FFE6   	movff	btemp,postinc1
 32643  0145CC  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32644  0145D2  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32645  0145D8  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32646  0145DE  ECF7  F0CD         	call	_fabsf	;wreg free
 32647  0145E2  0060  F0A3  FFE6   	movff	btemp,postinc1
 32648  0145E8  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32649  0145EE  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32650  0145F4  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32651  0145FA  0060  F673  FFE6   	movff	_C+156,postinc1
 32652  014600  0060  F677  FFE6   	movff	_C+157,postinc1
 32653  014606  0060  F67B  FFE6   	movff	_C+158,postinc1
 32654  01460C  0060  F67F  FFE6   	movff	_C+159,postinc1
 32655  014612  EC24  F09D         	call	___fladd	;wreg free
 32656  014616  0060  F0A0  F19C   	movff	btemp,_C+156	;volatile
 32657  01461C  0060  F0A4  F19D   	movff	btemp+1,_C+157	;volatile
 32658  014622  0060  F0A8  F19E   	movff	btemp+2,_C+158	;volatile
 32659  014628  0060  F0AC  F19F   	movff	btemp+3,_C+159	;volatile
 32660  01462E                     l12376:
 32661                           
 32662                           ;bsoc.c: 60:  C.soc = ((uint16_t) ((C.dynamic_ah / C.bank_ah)*100.0) + 1);
 32663  01462E  0E00               	movlw	0
 32664  014630  6EE6               	movwf	postinc1,c
 32665  014632  0E00               	movlw	0
 32666  014634  6EE6               	movwf	postinc1,c
 32667  014636  0EC8               	movlw	200
 32668  014638  6EE6               	movwf	postinc1,c
 32669  01463A  0E42               	movlw	66
 32670  01463C  6EE6               	movwf	postinc1,c
 32671  01463E  0060  F623  FFE6   	movff	_C+136,postinc1
 32672  014644  0060  F627  FFE6   	movff	_C+137,postinc1
 32673  01464A  0060  F62B  FFE6   	movff	_C+138,postinc1
 32674  014650  0060  F62F  FFE6   	movff	_C+139,postinc1
 32675  014656  0060  F633  FFE6   	movff	_C+140,postinc1
 32676  01465C  0060  F637  FFE6   	movff	_C+141,postinc1
 32677  014662  0060  F63B  FFE6   	movff	_C+142,postinc1
 32678  014668  0060  F63F  FFE6   	movff	_C+143,postinc1
 32679  01466E  EC9B  F0A4         	call	___fldiv	;wreg free
 32680  014672  0060  F0A3  FFE6   	movff	btemp,postinc1
 32681  014678  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32682  01467E  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32683  014684  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32684  01468A  EC0F  F099         	call	___flmul	;wreg free
 32685  01468E  0060  F0A3  FFE6   	movff	btemp,postinc1
 32686  014694  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32687  01469A  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32688  0146A0  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32689  0146A6  ECFF  F0C1         	call	___fltol	;wreg free
 32690  0146AA  0060  F0A0  F032   	movff	btemp,btemp+10
 32691  0146B0  0060  F0A4  F033   	movff	btemp+1,btemp+11
 32692  0146B6  0E01               	movlw	1
 32693  0146B8  2432               	addwf	(btemp+10)^0,w,c
 32694  0146BA  0101               	movlb	1	; () banked
 32695  0146BC  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32696  0146BE  0E00               	movlw	0
 32697  0146C0  2033               	addwfc	(btemp+11)^0,w,c
 32698  0146C2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32699                           
 32700                           ; BSR set to: 1
 32701                           ;bsoc.c: 61:  if (C.soc > 100)
 32702  0146C4  51AF               	movf	(_C+175)& (0+255),w,b	;volatile
 32703  0146C6  E104               	bnz	u1192_20
 32704  0146C8  0E65               	movlw	101
 32705  0146CA  5DAE               	subwf	(_C+174)& (0+255),w,b	;volatile
 32706  0146CC  A0D8               	btfss	status,0,c
 32707  0146CE  D004               	goto	l12382
 32708  0146D0                     u1192_20:
 32709                           
 32710                           ; BSR set to: 1
 32711                           ;bsoc.c: 62:   C.soc = 100;
 32712  0146D0  0E00               	movlw	0
 32713  0146D2  6FAF               	movwf	(_C+175)& (0+255),b	;volatile
 32714  0146D4  0E64               	movlw	100
 32715  0146D6  6FAE               	movwf	(_C+174)& (0+255),b	;volatile
 32716  0146D8                     l12382:
 32717                           
 32718                           ; BSR set to: 1
 32719                           ;bsoc.c: 64:  if (C.c_bat < 0.0) {
 32720  0146D8  AF47               	btfss	(_C+71)& (0+255),7,b	;volatile
 32721  0146DA  D043               	goto	l12386
 32722                           
 32723                           ; BSR set to: 1
 32724                           ;bsoc.c: 65:   C.runtime = (uint16_t) (-(C.dynamic_ah / C.c_bat));
 32725  0146DC  0060  F513  FFE6   	movff	_C+68,postinc1
 32726  0146E2  0060  F517  FFE6   	movff	_C+69,postinc1
 32727  0146E8  0060  F51B  FFE6   	movff	_C+70,postinc1
 32728  0146EE  0060  F51F  FFE6   	movff	_C+71,postinc1
 32729  0146F4  0060  F633  FFE6   	movff	_C+140,postinc1
 32730  0146FA  0060  F637  FFE6   	movff	_C+141,postinc1
 32731  014700  0060  F63B  FFE6   	movff	_C+142,postinc1
 32732  014706  0060  F63F  FFE6   	movff	_C+143,postinc1
 32733  01470C  EC9B  F0A4         	call	___fldiv	;wreg free
 32734  014710  0060  F0A3  FFE6   	movff	btemp,postinc1
 32735  014716  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32736  01471C  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32737  014722  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32738  014728  ECF8  F0D4         	call	___flneg	;wreg free
 32739  01472C  0060  F0A3  FFE6   	movff	btemp,postinc1
 32740  014732  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32741  014738  0060  F0AB  FFE6   	movff	btemp+2,postinc1
 32742  01473E  0060  F0AF  FFE6   	movff	btemp+3,postinc1
 32743  014744  ECFF  F0C1         	call	___fltol	;wreg free
 32744  014748  0060  F0A0  F032   	movff	btemp,btemp+10
 32745  01474E  0060  F0A4  F033   	movff	btemp+1,btemp+11
 32746  014754  0060  F0C8  F1AC   	movff	btemp+10,_C+172	;volatile
 32747  01475A  0060  F0CC  F1AD   	movff	btemp+11,_C+173	;volatile
 32748                           
 32749                           ;bsoc.c: 66:  } else {
 32750  014760  D004               	goto	l12388
 32751  014762                     l12386:
 32752                           
 32753                           ; BSR set to: 1
 32754                           ;bsoc.c: 67:   C.runtime = 120;
 32755  014762  0E00               	movlw	0
 32756  014764  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32757  014766  0E78               	movlw	120
 32758  014768  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32759  01476A                     l12388:
 32760                           
 32761                           ;bsoc.c: 69:  if (C.runtime > 120)
 32762  01476A  0101               	movlb	1	; () banked
 32763  01476C  51AD               	movf	(_C+173)& (0+255),w,b	;volatile
 32764  01476E  E104               	bnz	u1194_20
 32765  014770  0E79               	movlw	121
 32766  014772  5DAC               	subwf	(_C+172)& (0+255),w,b	;volatile
 32767  014774  A0D8               	btfss	status,0,c
 32768  014776  D004               	goto	l12392
 32769  014778                     u1194_20:
 32770                           
 32771                           ; BSR set to: 1
 32772                           ;bsoc.c: 70:   C.runtime = 120;
 32773  014778  0E00               	movlw	0
 32774  01477A  6FAD               	movwf	(_C+173)& (0+255),b	;volatile
 32775  01477C  0E78               	movlw	120
 32776  01477E  6FAC               	movwf	(_C+172)& (0+255),b	;volatile
 32777  014780                     l12392:
 32778                           
 32779                           ; BSR set to: 1
 32780                           ;bsoc.c: 72:  V.lowint_count++;
 32781  014780  0E01               	movlw	1
 32782  014782  0102               	movlb	2	; () banked
 32783  014784  27B1               	addwf	(_V+177)& (0+255),f,b	;volatile
 32784  014786  0E00               	movlw	0
 32785  014788  23B2               	addwfc	(_V+178)& (0+255),f,b	;volatile
 32786  01478A  23B3               	addwfc	(_V+179)& (0+255),f,b	;volatile
 32787  01478C  23B4               	addwfc	(_V+180)& (0+255),f,b	;volatile
 32788                           
 32789                           ; BSR set to: 2
 32790                           ;bsoc.c: 74:  log_ptr = port_data_dma_ptr();
 32791  01478E  EC50  F0DB         	call	_port_data_dma_ptr	;wreg free
 32792                           
 32793                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32794  014792  0EFF               	movlw	-1
 32795  014794  0060  F0A7  FFE3   	movff	btemp+1,plusw1
 32796  01479A  0EFE               	movlw	-2
 32797  01479C  0060  F0A3  FFE3   	movff	btemp,plusw1
 32798                           
 32799                           ;bsoc.c: 75:  sprintf((char*) log_ptr, " %lu,%4.4f,%4.4f,%4.4f,%4.4f,%4.3f,%4.3f,%4.3f,%
      +                          4.3f,%4.3f,%4.3f,%4.3d,%4.3d,%2.6f\r\n",
 32800  0147A2  0060  F613  FFE6   	movff	_C+132,postinc1
 32801  0147A8  0060  F617  FFE6   	movff	_C+133,postinc1
 32802  0147AE  0060  F61B  FFE6   	movff	_C+134,postinc1
 32803  0147B4  0060  F61F  FFE6   	movff	_C+135,postinc1
 32804  0147BA  0060  F6B3  FFE6   	movff	_C+172,postinc1
 32805  0147C0  0060  F6B7  FFE6   	movff	_C+173,postinc1
 32806  0147C6  0060  F6BB  FFE6   	movff	_C+174,postinc1
 32807  0147CC  0060  F6BF  FFE6   	movff	_C+175,postinc1
 32808  0147D2  0060  F643  FFE6   	movff	_C+144,postinc1
 32809  0147D8  0060  F647  FFE6   	movff	_C+145,postinc1
 32810  0147DE  0060  F64B  FFE6   	movff	_C+146,postinc1
 32811  0147E4  0060  F64F  FFE6   	movff	_C+147,postinc1
 32812  0147EA  0060  F633  FFE6   	movff	_C+140,postinc1
 32813  0147F0  0060  F637  FFE6   	movff	_C+141,postinc1
 32814  0147F6  0060  F63B  FFE6   	movff	_C+142,postinc1
 32815  0147FC  0060  F63F  FFE6   	movff	_C+143,postinc1
 32816  014802  0060  F5D3  FFE6   	movff	_C+116,postinc1
 32817  014808  0060  F5D7  FFE6   	movff	_C+117,postinc1
 32818  01480E  0060  F5DB  FFE6   	movff	_C+118,postinc1
 32819  014814  0060  F5DF  FFE6   	movff	_C+119,postinc1
 32820  01481A  0060  F5C3  FFE6   	movff	_C+112,postinc1
 32821  014820  0060  F5C7  FFE6   	movff	_C+113,postinc1
 32822  014826  0060  F5CB  FFE6   	movff	_C+114,postinc1
 32823  01482C  0060  F5CF  FFE6   	movff	_C+115,postinc1
 32824  014832  0060  F5E3  FFE6   	movff	_C+120,postinc1
 32825  014838  0060  F5E7  FFE6   	movff	_C+121,postinc1
 32826  01483E  0060  F5EB  FFE6   	movff	_C+122,postinc1
 32827  014844  0060  F5EF  FFE6   	movff	_C+123,postinc1
 32828  01484A  0060  F5F3  FFE6   	movff	_C+124,postinc1
 32829  014850  0060  F5F7  FFE6   	movff	_C+125,postinc1
 32830  014856  0060  F5FB  FFE6   	movff	_C+126,postinc1
 32831  01485C  0060  F5FF  FFE6   	movff	_C+127,postinc1
 32832  014862  0060  F593  FFE6   	movff	_C+100,postinc1
 32833  014868  0060  F597  FFE6   	movff	_C+101,postinc1
 32834  01486E  0060  F59B  FFE6   	movff	_C+102,postinc1
 32835  014874  0060  F59F  FFE6   	movff	_C+103,postinc1
 32836  01487A  0060  F533  FFE6   	movff	_C+76,postinc1
 32837  014880  0060  F537  FFE6   	movff	_C+77,postinc1
 32838  014886  0060  F53B  FFE6   	movff	_C+78,postinc1
 32839  01488C  0060  F53F  FFE6   	movff	_C+79,postinc1
 32840  014892  0060  F543  FFE6   	movff	_C+80,postinc1
 32841  014898  0060  F547  FFE6   	movff	_C+81,postinc1
 32842  01489E  0060  F54B  FFE6   	movff	_C+82,postinc1
 32843  0148A4  0060  F54F  FFE6   	movff	_C+83,postinc1
 32844  0148AA  0060  F553  FFE6   	movff	_C+84,postinc1
 32845  0148B0  0060  F557  FFE6   	movff	_C+85,postinc1
 32846  0148B6  0060  F55B  FFE6   	movff	_C+86,postinc1
 32847  0148BC  0060  F55F  FFE6   	movff	_C+87,postinc1
 32848  0148C2  0060  FA07  FFE6   	movff	_V+129,postinc1
 32849  0148C8  0060  FA0B  FFE6   	movff	_V+130,postinc1
 32850  0148CE  0060  FA0F  FFE6   	movff	_V+131,postinc1
 32851  0148D4  0060  FA13  FFE6   	movff	_V+132,postinc1
 32852  0148DA  0E67               	movlw	low STR_65
 32853  0148DC  6EE6               	movwf	postinc1,c
 32854  0148DE  0EFC               	movlw	high STR_65
 32855  0148E0  6EE6               	movwf	postinc1,c
 32856                           
 32857                           ;stkvar	_log_ptr @ sp[(-56)+0]
 32858  0148E2  0EC8               	movlw	-56
 32859  0148E4  006F FF8F FFE6     	movff	plusw1,postinc1
 32860  0148EA  006F FF8F FFE6     	movff	plusw1,postinc1
 32861  0148F0  0E38               	movlw	56
 32862  0148F2  6EE6               	movwf	postinc1,c
 32863  0148F4  EC06  F0CA         	call	_sprintf	;wreg free
 32864                           
 32865                           ; BSR set to: 0
 32866                           ;bsoc.c: 81:  StartTimer(TMR_DISPLAY, 125);
 32867  0148F8  0E7D               	movlw	125
 32868  0148FA  6EE6               	movwf	postinc1,c
 32869  0148FC  0E00               	movlw	0
 32870  0148FE  6EE6               	movwf	postinc1,c
 32871  014900  0E0A               	movlw	10
 32872  014902  6EE6               	movwf	postinc1,c
 32873  014904  EC0E  F0D6         	call	_StartTimer	;wreg free
 32874                           
 32875                           ;bsoc.c: 82:  send_port_data_dma(strlen((char*) log_ptr));
 32876                           ;stkvar	_log_ptr @ sp[(-2)+0]
 32877  014908  0EFE               	movlw	-2
 32878  01490A  006F FF8F FFE6     	movff	plusw1,postinc1
 32879  014910  006F FF8F FFE6     	movff	plusw1,postinc1
 32880  014916  EC4C  F0CF         	call	_strlen	;wreg free
 32881  01491A  0060  F0A3  FFE6   	movff	btemp,postinc1
 32882  014920  0060  F0A7  FFE6   	movff	btemp+1,postinc1
 32883  014926  EC83  F0D4         	call	_send_port_data_dma	;wreg free
 32884                           
 32885                           ; BSR set to: 59
 32886                           ;bsoc.c: 83:  C.update = 0;
 32887  01492A  0101               	movlb	1	; () banked
 32888  01492C  6BB0               	clrf	(_C+176)& (0+255),b	;volatile
 32889                           
 32890                           ; BSR set to: 1
 32891  01492E  92BE               	bcf	190,1,c	;volatile
 32892                           
 32893                           ; BSR set to: 1
 32894                           ; _calc_bsoc: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
 32895  014930  52E5               	movf	postdec1,f,c
 32896  014932  52E5               	movf	postdec1,f,c
 32897  014934  0012               	return		;funcret
 32898  014936                     __end_of_calc_bsoc:
 32899                           	opt callstack 0
 32900                           
 32901 ;; *************** function _send_port_data_dma *****************
 32902 ;; Defined at:
 32903 ;;		line 258 in file "eadog.c"
 32904 ;; Parameters:    Size  Location     Type
 32905 ;;  dsize           2  [STACK] unsigned short 
 32906 ;; Auto vars:     Size  Location     Type
 32907 ;;		None
 32908 ;; Return value:  Size  Location     Type
 32909 ;;                  1  [STACK] void 
 32910 ;; Registers used:
 32911 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 32912 ;; Tracked objects:
 32913 ;;		On entry : 0/0
 32914 ;;		On exit  : 3F/3B
 32915 ;;		Unchanged: 0/0
 32916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 32917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 32921 ;;Total ram usage:        0 bytes
 32922 ;; Hardware stack levels used:    1
 32923 ;; Hardware stack levels required when called:    3
 32924 ;; This function calls:
 32925 ;;		Nothing
 32926 ;; This function is called by:
 32927 ;;		_calc_bsoc
 32928 ;; This function uses a reentrant model
 32929 ;;
 32930                           
 32931                           	psect	text149
 32932  01A906                     __ptext149:
 32933                           	opt callstack 0
 32934  01A906                     _send_port_data_dma:
 32935                           	opt callstack 11
 32936                           
 32937                           ;eadog.c: 258: void send_port_data_dma(uint16_t dsize);eadog.c: 259: {;eadog.c: 260:  if
      +                           (dsize > 512)
 32938                           ;stkvar	_dsize @ sp[(0)+-2]
 32939                           
 32940                           ; BSR set to: 1
 32941                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 32942                           ;incstack = 0
 32943  01A906  0EFE               	movlw	-2
 32944  01A908  04E3               	decf	plusw1,w,c
 32945  01A90A  0EFF               	movlw	-1
 32946  01A90C  006F FF8C  F028    	movff	plusw1,btemp
 32947  01A912  0E02               	movlw	2
 32948  01A914  5A28               	subwfb	btemp^0,f,c
 32949  01A916  A0D8               	btfss	status,0,c
 32950  01A918  D00C               	goto	l9536
 32951                           
 32952                           ;eadog.c: 261:   dsize = 512;
 32953  01A91A  0E00               	movlw	0
 32954  01A91C  6E32               	movwf	(btemp+10)^0,c
 32955  01A91E  0E02               	movlw	2
 32956  01A920  6E33               	movwf	(btemp+11)^0,c
 32957                           
 32958                           ;stkvar	_dsize @ sp[(0)+-2]
 32959  01A922  0EFE               	movlw	-2
 32960  01A924  0060  F0CB  FFE3   	movff	btemp+10,plusw1
 32961  01A92A  0EFF               	movlw	-1
 32962  01A92C  0060  F0CF  FFE3   	movff	btemp+11,plusw1
 32963  01A932                     l9536:
 32964                           
 32965                           ;eadog.c: 263:  DMA2CON0bits.EN = 0;
 32966  01A932  013B               	movlb	59	; () banked
 32967  01A934  9FDC               	bcf	220,7,b	;volatile
 32968                           
 32969                           ; BSR set to: 59
 32970                           ;eadog.c: 264:  DMA2SSZ = dsize;
 32971                           ;stkvar	_dsize @ sp[(0)+-2]
 32972  01A936  0EFE               	movlw	-2
 32973  01A938  006F FF8F FBD7     	movff	plusw1,15319	;volatile
 32974  01A93E  0EFF               	movlw	-1
 32975  01A940  006F FF8F FBD8     	movff	plusw1,15320	;volatile
 32976                           
 32977                           ; BSR set to: 59
 32978                           ;eadog.c: 265:  DMA2DSZ = 1;
 32979  01A946  0E00               	movlw	0
 32980  01A948  6FCF               	movwf	207,b	;volatile
 32981  01A94A  0E01               	movlw	1
 32982  01A94C  6FCE               	movwf	206,b	;volatile
 32983                           
 32984                           ; BSR set to: 59
 32985                           ;eadog.c: 266:  DMA2CON0bits.EN = 1;
 32986  01A94E  8FDC               	bsf	220,7,b	;volatile
 32987                           
 32988                           ; BSR set to: 59
 32989                           ;eadog.c: 267:  DMA2CON0bits.DMA2SIRQEN = 1;
 32990  01A950  8DDC               	bsf	220,6,b	;volatile
 32991                           
 32992                           ; BSR set to: 59
 32993                           ; _send_port_data_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 32994  01A952  52E5               	movf	postdec1,f,c
 32995  01A954  52E5               	movf	postdec1,f,c
 32996  01A956  0012               	return		;funcret
 32997  01A958                     __end_of_send_port_data_dma:
 32998                           	opt callstack 0
 32999                           
 33000 ;; *************** function _port_data_dma_ptr *****************
 33001 ;; Defined at:
 33002 ;;		line 273 in file "eadog.c"
 33003 ;; Parameters:    Size  Location     Type
 33004 ;;		None
 33005 ;; Auto vars:     Size  Location     Type
 33006 ;;		None
 33007 ;; Return value:  Size  Location     Type
 33008 ;;                  2  [STACK] PTR unsigned char 
 33009 ;; Registers used:
 33010 ;;		wreg, status,2, status,0, btemp, btemp+1
 33011 ;; Tracked objects:
 33012 ;;		On entry : 3F/2
 33013 ;;		On exit  : 0/0
 33014 ;;		Unchanged: 0/0
 33015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33020 ;;Total ram usage:        0 bytes
 33021 ;; Hardware stack levels used:    1
 33022 ;; Hardware stack levels required when called:    3
 33023 ;; This function calls:
 33024 ;;		Nothing
 33025 ;; This function is called by:
 33026 ;;		_calc_bsoc
 33027 ;; This function uses a reentrant model
 33028 ;;
 33029                           
 33030                           	psect	text150
 33031  01B6A0                     __ptext150:
 33032                           	opt callstack 0
 33033  01B6A0                     _port_data_dma_ptr:
 33034                           	opt callstack 11
 33035                           
 33036                           ;eadog.c: 275:  return port_data;
 33037                           
 33038                           ; BSR set to: 59
 33039                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33040                           ;incstack = 0
 33041  01B6A0  0EFF               	movlw	low _port_data
 33042  01B6A2  6E28               	movwf	btemp^0,c
 33043  01B6A4  0E05               	movlw	high _port_data
 33044  01B6A6  6E29               	movwf	(btemp+1)^0,c
 33045                           
 33046                           ; _port_data_dma_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33047  01B6A8  0012               	return		;funcret
 33048  01B6AA                     __end_of_port_data_dma_ptr:
 33049                           	opt callstack 0
 33050                           
 33051 ;; *************** function _INT0_ISR *****************
 33052 ;; Defined at:
 33053 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 33054 ;; Parameters:    Size  Location     Type
 33055 ;;		None
 33056 ;; Auto vars:     Size  Location     Type
 33057 ;;		None
 33058 ;; Return value:  Size  Location     Type
 33059 ;;                  1    wreg      void 
 33060 ;; Registers used:
 33061 ;;		wreg, status,2, status,0, pclath, tosl
 33062 ;; Tracked objects:
 33063 ;;		On entry : 0/0
 33064 ;;		On exit  : 0/0
 33065 ;;		Unchanged: 0/0
 33066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33071 ;;Total ram usage:        0 bytes
 33072 ;; Hardware stack levels used:    1
 33073 ;; Hardware stack levels required when called:    2
 33074 ;; This function calls:
 33075 ;;		_INT0_CallBack
 33076 ;; This function is called by:
 33077 ;;		Interrupt level 2
 33078 ;; This function uses a non-reentrant model
 33079 ;;
 33080                           
 33081                           	psect	text151
 33082  01B678                     __ptext151:
 33083                           	opt callstack 0
 33084  01B678                     _INT0_ISR:
 33085                           	opt callstack 3
 33086                           
 33087                           ;incstack = 0
 33088  01B678  EE14  F142         	lfsr	1,___inthi_sp
 33089                           
 33090                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 33091  01B67C  0139               	movlb	57	; () banked
 33092  01B67E  91A1               	bcf	161,0,b	;volatile
 33093                           
 33094                           ; BSR set to: 57
 33095                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 33096  01B680  EC02  F0DA         	call	_INT0_CallBack	;wreg free
 33097  01B684  0011               	retfie		f
 33098  01B686                     __end_of_INT0_ISR:
 33099                           	opt callstack 0
 33100                           
 33101 ;; *************** function _INT0_CallBack *****************
 33102 ;; Defined at:
 33103 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 33104 ;; Parameters:    Size  Location     Type
 33105 ;;		None
 33106 ;; Auto vars:     Size  Location     Type
 33107 ;;		None
 33108 ;; Return value:  Size  Location     Type
 33109 ;;                  1  [STACK] void 
 33110 ;; Registers used:
 33111 ;;		wreg, status,2, status,0, pclath, tosl
 33112 ;; Tracked objects:
 33113 ;;		On entry : 3F/39
 33114 ;;		On exit  : 0/0
 33115 ;;		Unchanged: 0/0
 33116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33117 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33118 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33119 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33120 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33121 ;;Total ram usage:        0 bytes
 33122 ;; Hardware stack levels used:    1
 33123 ;; Hardware stack levels required when called:    1
 33124 ;; This function calls:
 33125 ;;		Absolute function
 33126 ;;		_INT0_DefaultInterruptHandler
 33127 ;; This function is called by:
 33128 ;;		_INT0_ISR
 33129 ;; This function uses a reentrant model
 33130 ;;
 33131                           
 33132                           	psect	text152
 33133  01B404                     __ptext152:
 33134                           	opt callstack 0
 33135  01B404                     _INT0_CallBack:
 33136                           	opt callstack 3
 33137                           
 33138                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 33139                           
 33140                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33141                           ;incstack = 0
 33142  01B404  0100               	movlb	0	; () banked
 33143  01B406  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33144  01B408  11BE               	iorwf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33145  01B40A  11BF               	iorwf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33146  01B40C  B4D8               	btfsc	status,2,c
 33147  01B40E  0012               	return	
 33148                           
 33149                           ; BSR set to: 0
 33150                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 33151  01B410  D801               	call	u955_48
 33152  01B412  0012               	return	
 33153  01B414                     u955_48:
 33154  01B414  0005               	push	
 33155  01B416  6EFA               	movwf	pclath,c
 33156  01B418  51BD               	movf	_INT0_InterruptHandler& (0+255),w,b
 33157  01B41A  6EFD               	movwf	tosl,c
 33158  01B41C  51BE               	movf	(_INT0_InterruptHandler+1)& (0+255),w,b
 33159  01B41E  6EFE               	movwf	tosh,c
 33160  01B420  51BF               	movf	(_INT0_InterruptHandler+2)& (0+255),w,b
 33161  01B422  6EFF               	movwf	tosu,c
 33162  01B424  50FA               	movf	pclath,w,c
 33163  01B426  0012               	return		;indir
 33164  01B428                     __end_of_INT0_CallBack:
 33165                           	opt callstack 0
 33166                           
 33167 ;; *************** function _INT0_DefaultInterruptHandler *****************
 33168 ;; Defined at:
 33169 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 33170 ;; Parameters:    Size  Location     Type
 33171 ;;		None
 33172 ;; Auto vars:     Size  Location     Type
 33173 ;;		None
 33174 ;; Return value:  Size  Location     Type
 33175 ;;                  1  [STACK] void 
 33176 ;; Registers used:
 33177 ;;		None
 33178 ;; Tracked objects:
 33179 ;;		On entry : 3F/0
 33180 ;;		On exit  : 0/0
 33181 ;;		Unchanged: 0/0
 33182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33187 ;;Total ram usage:        0 bytes
 33188 ;; Hardware stack levels used:    1
 33189 ;; This function calls:
 33190 ;;		Nothing
 33191 ;; This function is called by:
 33192 ;;		_EXT_INT_Initialize
 33193 ;;		_INT0_CallBack
 33194 ;; This function uses a reentrant model
 33195 ;;
 33196                           
 33197                           	psect	text153
 33198  01B71A                     __ptext153:
 33199                           	opt callstack 0
 33200  01B71A                     _INT0_DefaultInterruptHandler:
 33201                           	opt callstack 3
 33202                           
 33203                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33204                           
 33205                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33206                           ;incstack = 0
 33207  01B71A  0012               	return		;funcret
 33208  01B71C                     __end_of_INT0_DefaultInterruptHandler:
 33209                           	opt callstack 0
 33210                           
 33211 ;; *************** function _Default_ISR *****************
 33212 ;; Defined at:
 33213 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 33214 ;; Parameters:    Size  Location     Type
 33215 ;;		None
 33216 ;; Auto vars:     Size  Location     Type
 33217 ;;		None
 33218 ;; Return value:  Size  Location     Type
 33219 ;;                  1    wreg      void 
 33220 ;; Registers used:
 33221 ;;		None
 33222 ;; Tracked objects:
 33223 ;;		On entry : 0/0
 33224 ;;		On exit  : 0/0
 33225 ;;		Unchanged: 0/0
 33226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33231 ;;Total ram usage:        0 bytes
 33232 ;; Hardware stack levels used:    1
 33233 ;; This function calls:
 33234 ;;		Nothing
 33235 ;; This function is called by:
 33236 ;;		Interrupt level 2
 33237 ;; This function uses a non-reentrant model
 33238 ;;
 33239                           
 33240                           	psect	text154
 33241  01B710                     __ptext154:
 33242                           	opt callstack 0
 33243  01B710                     _Default_ISR:
 33244                           	opt callstack 5
 33245                           
 33246                           ;incstack = 0
 33247  01B710  EE14  F142         	lfsr	1,___inthi_sp
 33248  01B714  0011               	retfie		f
 33249  01B716                     __end_of_Default_ISR:
 33250                           	opt callstack 0
 33251                           
 33252 ;; *************** function _ADCC_ISR *****************
 33253 ;; Defined at:
 33254 ;;		line 314 in file "mcc_generated_files/adcc.c"
 33255 ;; Parameters:    Size  Location     Type
 33256 ;;		None
 33257 ;; Auto vars:     Size  Location     Type
 33258 ;;		None
 33259 ;; Return value:  Size  Location     Type
 33260 ;;                  1    wreg      void 
 33261 ;; Registers used:
 33262 ;;		wreg, status,2, status,0, pclath, tosl
 33263 ;; Tracked objects:
 33264 ;;		On entry : 0/0
 33265 ;;		On exit  : 0/0
 33266 ;;		Unchanged: 0/0
 33267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33272 ;;Total ram usage:        0 bytes
 33273 ;; Hardware stack levels used:    1
 33274 ;; Hardware stack levels required when called:    1
 33275 ;; This function calls:
 33276 ;;		Absolute function
 33277 ;;		_ADCC_DefaultInterruptHandler
 33278 ;;		_adc_int_handler
 33279 ;; This function is called by:
 33280 ;;		Interrupt level 2
 33281 ;; This function uses a non-reentrant model
 33282 ;;
 33283                           
 33284                           	psect	text155
 33285  01B024                     __ptext155:
 33286                           	opt callstack 0
 33287  01B024                     _ADCC_ISR:
 33288                           	opt callstack 4
 33289                           
 33290                           ;incstack = 0
 33291  01B024  EE14  F142         	lfsr	1,___inthi_sp
 33292                           
 33293                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 33294  01B028  0139               	movlb	57	; () banked
 33295  01B02A  95A1               	bcf	161,2,b	;volatile
 33296                           
 33297                           ; BSR set to: 57
 33298                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 33299  01B02C  0100               	movlb	0	; () banked
 33300  01B02E  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33301  01B030  11AF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33302  01B032  11B0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33303  01B034  B4D8               	btfsc	status,2,c
 33304  01B036  0011               	retfie		f
 33305                           
 33306                           ; BSR set to: 0
 33307                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 33308  01B038  D801               	call	i2u998_48
 33309  01B03A  0011               	retfie		f
 33310  01B03C                     i2u998_48:
 33311  01B03C  0005               	push	
 33312  01B03E  6EFA               	movwf	pclath,c
 33313  01B040  51AE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 33314  01B042  6EFD               	movwf	tosl,c
 33315  01B044  51AF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 33316  01B046  6EFE               	movwf	tosh,c
 33317  01B048  51B0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 33318  01B04A  6EFF               	movwf	tosu,c
 33319  01B04C  50FA               	movf	pclath,w,c
 33320  01B04E  0012               	return		;indir
 33321  01B050                     __end_of_ADCC_ISR:
 33322                           	opt callstack 0
 33323                           
 33324 ;; *************** function _adc_int_t_handler *****************
 33325 ;; Defined at:
 33326 ;;		line 143 in file "daq.c"
 33327 ;; Parameters:    Size  Location     Type
 33328 ;;		None
 33329 ;; Auto vars:     Size  Location     Type
 33330 ;;		None
 33331 ;; Return value:  Size  Location     Type
 33332 ;;                  1  [STACK] void 
 33333 ;; Registers used:
 33334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 33335 ;; Tracked objects:
 33336 ;;		On entry : 3F/0
 33337 ;;		On exit  : 1/0
 33338 ;;		Unchanged: 0/0
 33339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33344 ;;Total ram usage:        0 bytes
 33345 ;; Hardware stack levels used:    1
 33346 ;; Hardware stack levels required when called:    1
 33347 ;; This function calls:
 33348 ;;		_ADCC_DischargeSampleCapacitor
 33349 ;;		_ADCC_StartConversion
 33350 ;; This function is called by:
 33351 ;;		_start_adc_scan
 33352 ;;		_ADCC_ThresholdISR
 33353 ;; This function uses a reentrant model
 33354 ;;
 33355                           
 33356                           	psect	text156
 33357  01A3A8                     __ptext156:
 33358                           	opt callstack 0
 33359  01A3A8                     _adc_int_t_handler:
 33360                           	opt callstack 3
 33361                           
 33362                           ;daq.c: 148:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 33363                           
 33364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33365                           ;incstack = 0
 33366  01A3A8  013E               	movlb	62	; () banked
 33367  01A3AA  51E6               	movf	230,w,b	;volatile
 33368  01A3AC  006F FB9C  F028    	movff	16103,btemp	;volatile
 33369  01A3B2  6A29               	clrf	(btemp+1)^0,c
 33370  01A3B4  0060  F0A0  F029   	movff	btemp,btemp+1
 33371  01A3BA  6A28               	clrf	btemp^0,c
 33372  01A3BC  2628               	addwf	btemp^0,f,c
 33373  01A3BE  0E00               	movlw	0
 33374  01A3C0  2229               	addwfc	(btemp+1)^0,f,c
 33375  01A3C2  0100               	movlb	0	; () banked
 33376  01A3C4  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33377  01A3C6  0D02               	mullw	2
 33378  01A3C8  50F3               	movf	243,w,c
 33379  01A3CA  0FC4               	addlw	low _R
 33380  01A3CC  6ED9               	movwf	fsr2l,c
 33381  01A3CE  6ADA               	clrf	fsr2h,c
 33382  01A3D0  0060  F0A3  FFDE   	movff	btemp,postinc2
 33383  01A3D6  0060  F0A7  FFDD   	movff	btemp+1,postdec2
 33384  01A3DC                     l10808:
 33385                           
 33386                           ;daq.c: 150:   if (++R.scan_index > 0XD) {
 33387  01A3DC  0100               	movlb	0	; () banked
 33388  01A3DE  2BE8               	incf	(_R+36)& (0+255),f,b	;volatile
 33389  01A3E0  0E0D               	movlw	13
 33390  01A3E2  65E8               	cpfsgt	(_R+36)& (0+255),b	;volatile
 33391  01A3E4  D003               	goto	l10814
 33392                           
 33393                           ; BSR set to: 0
 33394                           ;daq.c: 151:    R.done = 1;
 33395  01A3E6  0E01               	movlw	1
 33396  01A3E8  6FEB               	movwf	(_R+39)& (0+255),b	;volatile
 33397  01A3EA  0012               	return	
 33398  01A3EC                     l10814:
 33399                           
 33400                           ; BSR set to: 0
 33401                           ;daq.c: 157:  } while (!((R.scan_select >> R.scan_index) &0x1));
 33402  01A3EC  0060  F3A0  F033   	movff	_R+36,btemp+11	;volatile
 33403  01A3F2  EE20  F0E9         	lfsr	2,_R+37	;volatile
 33404  01A3F6  006F FF78  F030    	movff	postinc2,btemp+8
 33405  01A3FC  006F FF74  F031    	movff	postdec2,btemp+9
 33406  01A402  2A33               	incf	(btemp+11)^0,f,c
 33407  01A404  D003               	goto	u995_44
 33408  01A406                     u995_45:
 33409  01A406  90D8               	bcf	status,0,c
 33410  01A408  3231               	rrcf	(btemp+9)^0,f,c
 33411  01A40A  3230               	rrcf	(btemp+8)^0,f,c
 33412  01A40C                     u995_44:
 33413  01A40C  2E33               	decfsz	(btemp+11)^0,f,c
 33414  01A40E  D7FB               	goto	u995_45
 33415  01A410  A030               	btfss	(btemp+8)^0,0,c
 33416  01A412  D7E4               	goto	l10808
 33417                           
 33418                           ;daq.c: 158:  ADCC_DischargeSampleCapacitor();
 33419  01A414  EC67  F0DB         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 33420                           
 33421                           ; BSR set to: 62
 33422                           ;daq.c: 159:  ADCC_StartConversion(R.scan_index & 0xf);
 33423  01A418  0100               	movlb	0	; () banked
 33424  01A41A  51E8               	movf	(_R+36)& (0+255),w,b	;volatile
 33425  01A41C  0B0F               	andlw	15
 33426  01A41E  6EE6               	movwf	postinc1,c
 33427  01A420  EC0C  F0DB         	call	_ADCC_StartConversion	;wreg free
 33428                           
 33429                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33430  01A424  0012               	return		;funcret
 33431  01A426                     __end_of_adc_int_t_handler:
 33432                           	opt callstack 0
 33433                           
 33434 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 33435 ;; Defined at:
 33436 ;;		line 339 in file "mcc_generated_files/adcc.c"
 33437 ;; Parameters:    Size  Location     Type
 33438 ;;		None
 33439 ;; Auto vars:     Size  Location     Type
 33440 ;;		None
 33441 ;; Return value:  Size  Location     Type
 33442 ;;                  1  [STACK] void 
 33443 ;; Registers used:
 33444 ;;		None
 33445 ;; Tracked objects:
 33446 ;;		On entry : 3F/0
 33447 ;;		On exit  : 0/0
 33448 ;;		Unchanged: 0/0
 33449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33454 ;;Total ram usage:        0 bytes
 33455 ;; Hardware stack levels used:    1
 33456 ;; This function calls:
 33457 ;;		Nothing
 33458 ;; This function is called by:
 33459 ;;		_ADCC_Initialize
 33460 ;;		_ADCC_ISR
 33461 ;;		_ADCC_ThresholdISR
 33462 ;; This function uses a reentrant model
 33463 ;;
 33464                           
 33465                           	psect	text157
 33466  01B71C                     __ptext157:
 33467                           	opt callstack 0
 33468  01B71C                     _ADCC_DefaultInterruptHandler:
 33469                           	opt callstack 4
 33470                           
 33471                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 33472                           
 33473                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33474                           ;incstack = 0
 33475  01B71C  0012               	return		;funcret
 33476  01B71E                     __end_of_ADCC_DefaultInterruptHandler:
 33477                           	opt callstack 0
 33478                           
 33479 ;; *************** function _adc_int_handler *****************
 33480 ;; Defined at:
 33481 ;;		line 133 in file "daq.c"
 33482 ;; Parameters:    Size  Location     Type
 33483 ;;		None
 33484 ;; Auto vars:     Size  Location     Type
 33485 ;;		None
 33486 ;; Return value:  Size  Location     Type
 33487 ;;                  1  [STACK] void 
 33488 ;; Registers used:
 33489 ;;		None
 33490 ;; Tracked objects:
 33491 ;;		On entry : 3F/0
 33492 ;;		On exit  : 0/0
 33493 ;;		Unchanged: 0/0
 33494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33498 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33499 ;;Total ram usage:        0 bytes
 33500 ;; Hardware stack levels used:    1
 33501 ;; This function calls:
 33502 ;;		Nothing
 33503 ;; This function is called by:
 33504 ;;		_start_adc_scan
 33505 ;;		_ADCC_ISR
 33506 ;; This function uses a reentrant model
 33507 ;;
 33508                           
 33509                           	psect	text158
 33510  01B71E                     __ptext158:
 33511                           	opt callstack 0
 33512  01B71E                     _adc_int_handler:
 33513                           	opt callstack 4
 33514                           
 33515                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 33516                           
 33517                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33518                           ;incstack = 0
 33519  01B71E  0012               	return		;funcret
 33520  01B720                     __end_of_adc_int_handler:
 33521                           	opt callstack 0
 33522                           
 33523 ;; *************** function _ADCC_ThresholdISR *****************
 33524 ;; Defined at:
 33525 ;;		line 327 in file "mcc_generated_files/adcc.c"
 33526 ;; Parameters:    Size  Location     Type
 33527 ;;		None
 33528 ;; Auto vars:     Size  Location     Type
 33529 ;;		None
 33530 ;; Return value:  Size  Location     Type
 33531 ;;                  1    wreg      void 
 33532 ;; Registers used:
 33533 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 33534 ;; Tracked objects:
 33535 ;;		On entry : 0/0
 33536 ;;		On exit  : 0/0
 33537 ;;		Unchanged: 0/0
 33538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33541 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33542 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33543 ;;Total ram usage:        5 bytes
 33544 ;; Hardware stack levels used:    1
 33545 ;; Hardware stack levels required when called:    2
 33546 ;; This function calls:
 33547 ;;		Absolute function
 33548 ;;		_ADCC_DefaultInterruptHandler
 33549 ;;		_adc_int_t_handler
 33550 ;; This function is called by:
 33551 ;;		Interrupt level 2
 33552 ;; This function uses a non-reentrant model
 33553 ;;
 33554                           
 33555                           	psect	text159
 33556  01A4FC                     __ptext159:
 33557                           	opt callstack 0
 33558  01A4FC                     _ADCC_ThresholdISR:
 33559                           	opt callstack 3
 33560                           
 33561                           ;incstack = 0
 33562  01A4FC  0060  F0A0  F001   	movff	btemp,??_ADCC_ThresholdISR
 33563  01A502  0060  F0A4  F002   	movff	btemp+1,??_ADCC_ThresholdISR+1
 33564  01A508  0060  F0C0  F003   	movff	btemp+8,??_ADCC_ThresholdISR+2
 33565  01A50E  0060  F0C4  F004   	movff	btemp+9,??_ADCC_ThresholdISR+3
 33566  01A514  0060  F0CC  F005   	movff	btemp+11,??_ADCC_ThresholdISR+4
 33567  01A51A  EE14  F142         	lfsr	1,___inthi_sp
 33568                           
 33569                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 33570  01A51E  0139               	movlb	57	; () banked
 33571  01A520  97A1               	bcf	161,3,b	;volatile
 33572                           
 33573                           ; BSR set to: 57
 33574                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 33575  01A522  0100               	movlb	0	; () banked
 33576  01A524  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33577  01A526  11AC               	iorwf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33578  01A528  11AD               	iorwf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33579  01A52A  B4D8               	btfsc	status,2,c
 33580  01A52C  D00C               	goto	i2u1000_49
 33581                           
 33582                           ; BSR set to: 0
 33583                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 33584  01A52E  D801               	call	i2u1000_48
 33585  01A530  D00A               	goto	i2u1000_49
 33586  01A532                     i2u1000_48:
 33587  01A532  0005               	push	
 33588  01A534  6EFA               	movwf	pclath,c
 33589  01A536  51AB               	movf	_ADCC_ADTI_InterruptHandler& (0+255),w,b
 33590  01A538  6EFD               	movwf	tosl,c
 33591  01A53A  51AC               	movf	(_ADCC_ADTI_InterruptHandler+1)& (0+255),w,b
 33592  01A53C  6EFE               	movwf	tosh,c
 33593  01A53E  51AD               	movf	(_ADCC_ADTI_InterruptHandler+2)& (0+255),w,b
 33594  01A540  6EFF               	movwf	tosu,c
 33595  01A542  50FA               	movf	pclath,w,c
 33596  01A544  0012               	return		;indir
 33597  01A546                     i2u1000_49:
 33598  01A546  0060  F014  F033   	movff	??_ADCC_ThresholdISR+4,btemp+11
 33599  01A54C  0060  F010  F031   	movff	??_ADCC_ThresholdISR+3,btemp+9
 33600  01A552  0060  F00C  F030   	movff	??_ADCC_ThresholdISR+2,btemp+8
 33601  01A558  0060  F008  F029   	movff	??_ADCC_ThresholdISR+1,btemp+1
 33602  01A55E  0060  F004  F028   	movff	??_ADCC_ThresholdISR,btemp
 33603  01A564  0011               	retfie		f
 33604  01A566                     __end_of_ADCC_ThresholdISR:
 33605                           	opt callstack 0
 33606                           
 33607 ;; *************** function _UART1_rx_vect_isr *****************
 33608 ;; Defined at:
 33609 ;;		line 181 in file "mcc_generated_files/uart1.c"
 33610 ;; Parameters:    Size  Location     Type
 33611 ;;		None
 33612 ;; Auto vars:     Size  Location     Type
 33613 ;;		None
 33614 ;; Return value:  Size  Location     Type
 33615 ;;                  1    wreg      void 
 33616 ;; Registers used:
 33617 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33618 ;; Tracked objects:
 33619 ;;		On entry : 0/0
 33620 ;;		On exit  : 0/0
 33621 ;;		Unchanged: 0/0
 33622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33627 ;;Total ram usage:        0 bytes
 33628 ;; Hardware stack levels used:    1
 33629 ;; Hardware stack levels required when called:    1
 33630 ;; This function calls:
 33631 ;;		Absolute function
 33632 ;;		_UART1_Receive_ISR
 33633 ;; This function is called by:
 33634 ;;		Interrupt level 2
 33635 ;; This function uses a non-reentrant model
 33636 ;;
 33637                           
 33638                           	psect	text160
 33639  01B2D8                     __ptext160:
 33640                           	opt callstack 0
 33641  01B2D8                     _UART1_rx_vect_isr:
 33642                           	opt callstack 4
 33643                           
 33644                           ;incstack = 0
 33645  01B2D8  EE14  F142         	lfsr	1,___inthi_sp
 33646                           
 33647                           ;mcc_generated_files/uart1.c: 183:     if(UART1_RxInterruptHandler)
 33648  01B2DC  0100               	movlb	0	; () banked
 33649  01B2DE  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33650  01B2E0  11B2               	iorwf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33651  01B2E2  11B3               	iorwf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33652  01B2E4  B4D8               	btfsc	status,2,c
 33653  01B2E6  0011               	retfie		f
 33654                           
 33655                           ; BSR set to: 0
 33656                           ;mcc_generated_files/uart1.c: 184: {;mcc_generated_files/uart1.c: 185:   UART1_RxInterru
      +                          ptHandler();
 33657  01B2E8  D801               	call	i2u1002_48
 33658  01B2EA  0011               	retfie		f
 33659  01B2EC                     i2u1002_48:
 33660  01B2EC  0005               	push	
 33661  01B2EE  6EFA               	movwf	pclath,c
 33662  01B2F0  51B1               	movf	_UART1_RxInterruptHandler& (0+255),w,b
 33663  01B2F2  6EFD               	movwf	tosl,c
 33664  01B2F4  51B2               	movf	(_UART1_RxInterruptHandler+1)& (0+255),w,b
 33665  01B2F6  6EFE               	movwf	tosh,c
 33666  01B2F8  51B3               	movf	(_UART1_RxInterruptHandler+2)& (0+255),w,b
 33667  01B2FA  6EFF               	movwf	tosu,c
 33668  01B2FC  50FA               	movf	pclath,w,c
 33669  01B2FE  0012               	return		;indir
 33670  01B300                     __end_of_UART1_rx_vect_isr:
 33671                           	opt callstack 0
 33672                           
 33673 ;; *************** function _UART1_Receive_ISR *****************
 33674 ;; Defined at:
 33675 ;;		line 192 in file "mcc_generated_files/uart1.c"
 33676 ;; Parameters:    Size  Location     Type
 33677 ;;		None
 33678 ;; Auto vars:     Size  Location     Type
 33679 ;;		None
 33680 ;; Return value:  Size  Location     Type
 33681 ;;                  1  [STACK] void 
 33682 ;; Registers used:
 33683 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33684 ;; Tracked objects:
 33685 ;;		On entry : 3F/0
 33686 ;;		On exit  : 0/0
 33687 ;;		Unchanged: 0/0
 33688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33690 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33692 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33693 ;;Total ram usage:        0 bytes
 33694 ;; Hardware stack levels used:    1
 33695 ;; This function calls:
 33696 ;;		Nothing
 33697 ;; This function is called by:
 33698 ;;		_UART1_Initialize
 33699 ;;		_UART1_rx_vect_isr
 33700 ;; This function uses a reentrant model
 33701 ;;
 33702                           
 33703                           	psect	text161
 33704  01B540                     __ptext161:
 33705                           	opt callstack 0
 33706  01B540                     _UART1_Receive_ISR:
 33707                           	opt callstack 4
 33708                           
 33709                           ;mcc_generated_files/uart1.c: 195:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 33710                           
 33711                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33712                           ;incstack = 0
 33713  01B540  505F               	movf	_uart1RxHead^0,w,c
 33714  01B542  0F6C               	addlw	low _uart1RxBuffer
 33715  01B544  6ED9               	movwf	fsr2l,c
 33716  01B546  6ADA               	clrf	fsr2h,c
 33717  01B548  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 33718  01B54E  2A5F               	incf	_uart1RxHead^0,f,c	;volatile
 33719                           
 33720                           ;mcc_generated_files/uart1.c: 196:     if(sizeof(uart1RxBuffer) <= uart1RxHead)
 33721  01B550  0E07               	movlw	7
 33722  01B552  645F               	cpfsgt	_uart1RxHead^0,c
 33723  01B554  D001               	goto	l10390
 33724                           
 33725                           ;mcc_generated_files/uart1.c: 197:     {;mcc_generated_files/uart1.c: 198:   uart1RxHead
      +                           = 0;
 33726  01B556  6A5F               	clrf	_uart1RxHead^0,c	;volatile
 33727  01B558                     l10390:
 33728                           
 33729                           ;mcc_generated_files/uart1.c: 200:  uart1RxCount++;
 33730  01B558  2A5D               	incf	_uart1RxCount^0,f,c	;volatile
 33731                           
 33732                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 33733  01B55A  0012               	return		;funcret
 33734  01B55C                     __end_of_UART1_Receive_ISR:
 33735                           	opt callstack 0
 33736                           
 33737 ;; *************** function _UART2_tx_vect_isr *****************
 33738 ;; Defined at:
 33739 ;;		line 195 in file "mcc_generated_files/uart2.c"
 33740 ;; Parameters:    Size  Location     Type
 33741 ;;		None
 33742 ;; Auto vars:     Size  Location     Type
 33743 ;;		None
 33744 ;; Return value:  Size  Location     Type
 33745 ;;                  1    wreg      void 
 33746 ;; Registers used:
 33747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33748 ;; Tracked objects:
 33749 ;;		On entry : 0/0
 33750 ;;		On exit  : 0/0
 33751 ;;		Unchanged: 0/0
 33752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33757 ;;Total ram usage:        0 bytes
 33758 ;; Hardware stack levels used:    1
 33759 ;; Hardware stack levels required when called:    1
 33760 ;; This function calls:
 33761 ;;		Absolute function
 33762 ;;		_UART2_Transmit_ISR
 33763 ;; This function is called by:
 33764 ;;		Interrupt level 2
 33765 ;; This function uses a non-reentrant model
 33766 ;;
 33767                           
 33768                           	psect	text162
 33769  01B300                     __ptext162:
 33770                           	opt callstack 0
 33771  01B300                     _UART2_tx_vect_isr:
 33772                           	opt callstack 4
 33773                           
 33774                           ;incstack = 0
 33775  01B300  EE14  F142         	lfsr	1,___inthi_sp
 33776                           
 33777                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 33778  01B304  0100               	movlb	0	; () banked
 33779  01B306  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33780  01B308  11B5               	iorwf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33781  01B30A  11B6               	iorwf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33782  01B30C  B4D8               	btfsc	status,2,c
 33783  01B30E  0011               	retfie		f
 33784                           
 33785                           ; BSR set to: 0
 33786                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 33787  01B310  D801               	call	i2u1004_48
 33788  01B312  0011               	retfie		f
 33789  01B314                     i2u1004_48:
 33790  01B314  0005               	push	
 33791  01B316  6EFA               	movwf	pclath,c
 33792  01B318  51B4               	movf	_UART2_TxInterruptHandler& (0+255),w,b
 33793  01B31A  6EFD               	movwf	tosl,c
 33794  01B31C  51B5               	movf	(_UART2_TxInterruptHandler+1)& (0+255),w,b
 33795  01B31E  6EFE               	movwf	tosh,c
 33796  01B320  51B6               	movf	(_UART2_TxInterruptHandler+2)& (0+255),w,b
 33797  01B322  6EFF               	movwf	tosu,c
 33798  01B324  50FA               	movf	pclath,w,c
 33799  01B326  0012               	return		;indir
 33800  01B328                     __end_of_UART2_tx_vect_isr:
 33801                           	opt callstack 0
 33802                           
 33803 ;; *************** function _UART2_Transmit_ISR *****************
 33804 ;; Defined at:
 33805 ;;		line 213 in file "mcc_generated_files/uart2.c"
 33806 ;; Parameters:    Size  Location     Type
 33807 ;;		None
 33808 ;; Auto vars:     Size  Location     Type
 33809 ;;		None
 33810 ;; Return value:  Size  Location     Type
 33811 ;;                  1  [STACK] void 
 33812 ;; Registers used:
 33813 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33814 ;; Tracked objects:
 33815 ;;		On entry : 3F/0
 33816 ;;		On exit  : 3B/39
 33817 ;;		Unchanged: 0/0
 33818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33823 ;;Total ram usage:        0 bytes
 33824 ;; Hardware stack levels used:    1
 33825 ;; This function calls:
 33826 ;;		Nothing
 33827 ;; This function is called by:
 33828 ;;		_UART2_Initialize
 33829 ;;		_UART2_tx_vect_isr
 33830 ;; This function uses a reentrant model
 33831 ;;
 33832                           
 33833                           	psect	text163
 33834  01B050                     __ptext163:
 33835                           	opt callstack 0
 33836  01B050                     _UART2_Transmit_ISR:
 33837                           	opt callstack 4
 33838                           
 33839                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 33840                           
 33841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33842                           ;incstack = 0
 33843  01B050  0E40               	movlw	64
 33844  01B052  605A               	cpfslt	_uart2TxBufferRemaining^0,c
 33845  01B054  D010               	goto	l673
 33846                           
 33847                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 33848  01B056  0E54               	movlw	low _uart2TxBuffer
 33849  01B058  245B               	addwf	_uart2TxTail^0,w,c	;volatile
 33850  01B05A  6ED9               	movwf	fsr2l,c
 33851  01B05C  6ADA               	clrf	fsr2h,c
 33852  01B05E  0E03               	movlw	high _uart2TxBuffer
 33853  01B060  22DA               	addwfc	fsr2h,f,c
 33854  01B062  50DF               	movf	indf2,w,c
 33855  01B064  013D               	movlb	61	; () banked
 33856  01B066  6FD2               	movwf	210,b	;volatile
 33857                           
 33858                           ; BSR set to: 61
 33859  01B068  2A5B               	incf	_uart2TxTail^0,f,c	;volatile
 33860                           
 33861                           ; BSR set to: 61
 33862                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 33863  01B06A  0E3F               	movlw	63
 33864  01B06C  645B               	cpfsgt	_uart2TxTail^0,c
 33865  01B06E  D001               	goto	l10402
 33866                           
 33867                           ; BSR set to: 61
 33868                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 33869  01B070  6A5B               	clrf	_uart2TxTail^0,c	;volatile
 33870  01B072                     l10402:
 33871                           
 33872                           ; BSR set to: 61
 33873                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 33874  01B072  2A5A               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 33875                           
 33876                           ;mcc_generated_files/uart2.c: 224:     }
 33877  01B074  0012               	return	
 33878  01B076                     l673:
 33879                           
 33880                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 33881  01B076  0139               	movlb	57	; () banked
 33882  01B078  9796               	bcf	150,3,b	;volatile
 33883                           
 33884                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 33885  01B07A  0012               	return		;funcret
 33886  01B07C                     __end_of_UART2_Transmit_ISR:
 33887                           	opt callstack 0
 33888                           
 33889 ;; *************** function _UART2_rx_vect_isr *****************
 33890 ;; Defined at:
 33891 ;;		line 203 in file "mcc_generated_files/uart2.c"
 33892 ;; Parameters:    Size  Location     Type
 33893 ;;		None
 33894 ;; Auto vars:     Size  Location     Type
 33895 ;;		None
 33896 ;; Return value:  Size  Location     Type
 33897 ;;                  1    wreg      void 
 33898 ;; Registers used:
 33899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 33900 ;; Tracked objects:
 33901 ;;		On entry : 0/0
 33902 ;;		On exit  : 0/0
 33903 ;;		Unchanged: 0/0
 33904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33909 ;;Total ram usage:        0 bytes
 33910 ;; Hardware stack levels used:    1
 33911 ;; Hardware stack levels required when called:    1
 33912 ;; This function calls:
 33913 ;;		Absolute function
 33914 ;;		_UART2_Receive_ISR
 33915 ;; This function is called by:
 33916 ;;		Interrupt level 2
 33917 ;; This function uses a non-reentrant model
 33918 ;;
 33919                           
 33920                           	psect	text164
 33921  01B328                     __ptext164:
 33922                           	opt callstack 0
 33923  01B328                     _UART2_rx_vect_isr:
 33924                           	opt callstack 4
 33925                           
 33926                           ;incstack = 0
 33927  01B328  EE14  F142         	lfsr	1,___inthi_sp
 33928                           
 33929                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 33930  01B32C  0100               	movlb	0	; () banked
 33931  01B32E  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33932  01B330  11B8               	iorwf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33933  01B332  11B9               	iorwf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33934  01B334  B4D8               	btfsc	status,2,c
 33935  01B336  0011               	retfie		f
 33936                           
 33937                           ; BSR set to: 0
 33938                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 33939  01B338  D801               	call	i2u1006_48
 33940  01B33A  0011               	retfie		f
 33941  01B33C                     i2u1006_48:
 33942  01B33C  0005               	push	
 33943  01B33E  6EFA               	movwf	pclath,c
 33944  01B340  51B7               	movf	_UART2_RxInterruptHandler& (0+255),w,b
 33945  01B342  6EFD               	movwf	tosl,c
 33946  01B344  51B8               	movf	(_UART2_RxInterruptHandler+1)& (0+255),w,b
 33947  01B346  6EFE               	movwf	tosh,c
 33948  01B348  51B9               	movf	(_UART2_RxInterruptHandler+2)& (0+255),w,b
 33949  01B34A  6EFF               	movwf	tosu,c
 33950  01B34C  50FA               	movf	pclath,w,c
 33951  01B34E  0012               	return		;indir
 33952  01B350                     __end_of_UART2_rx_vect_isr:
 33953                           	opt callstack 0
 33954                           
 33955 ;; *************** function _UART2_Receive_ISR *****************
 33956 ;; Defined at:
 33957 ;;		line 233 in file "mcc_generated_files/uart2.c"
 33958 ;; Parameters:    Size  Location     Type
 33959 ;;		None
 33960 ;; Auto vars:     Size  Location     Type
 33961 ;;		None
 33962 ;; Return value:  Size  Location     Type
 33963 ;;                  1  [STACK] void 
 33964 ;; Registers used:
 33965 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33966 ;; Tracked objects:
 33967 ;;		On entry : 3F/0
 33968 ;;		On exit  : 0/0
 33969 ;;		Unchanged: 0/0
 33970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 33971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 33975 ;;Total ram usage:        0 bytes
 33976 ;; Hardware stack levels used:    1
 33977 ;; This function calls:
 33978 ;;		Nothing
 33979 ;; This function is called by:
 33980 ;;		_UART2_Initialize
 33981 ;;		_UART2_rx_vect_isr
 33982 ;; This function uses a reentrant model
 33983 ;;
 33984                           
 33985                           	psect	text165
 33986  01B506                     __ptext165:
 33987                           	opt callstack 0
 33988  01B506                     _UART2_Receive_ISR:
 33989                           	opt callstack 4
 33990                           
 33991                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 33992                           
 33993                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 33994                           ;incstack = 0
 33995  01B506  0E00               	movlw	low _uart2RxBuffer
 33996  01B508  2459               	addwf	_uart2RxHead^0,w,c	;volatile
 33997  01B50A  6ED9               	movwf	fsr2l,c
 33998  01B50C  6ADA               	clrf	fsr2h,c
 33999  01B50E  0E05               	movlw	high _uart2RxBuffer
 34000  01B510  22DA               	addwfc	fsr2h,f,c
 34001  01B512  006F F743 FFDF     	movff	15824,indf2	;volatile
 34002  01B518  2A59               	incf	_uart2RxHead^0,f,c	;volatile
 34003                           
 34004                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 34005  01B51A  2859               	incf	_uart2RxHead^0,w,c
 34006  01B51C  B4D8               	btfsc	status,2,c
 34007                           
 34008                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 34009  01B51E  6A59               	clrf	_uart2RxHead^0,c	;volatile
 34010                           
 34011                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 34012  01B520  2A57               	incf	_uart2RxCount^0,f,c	;volatile
 34013                           
 34014                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 34015  01B522  0012               	return		;funcret
 34016  01B524                     __end_of_UART2_Receive_ISR:
 34017                           	opt callstack 0
 34018                           
 34019 ;; *************** function _TMR6_ISR *****************
 34020 ;; Defined at:
 34021 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 34022 ;; Parameters:    Size  Location     Type
 34023 ;;		None
 34024 ;; Auto vars:     Size  Location     Type
 34025 ;;		None
 34026 ;; Return value:  Size  Location     Type
 34027 ;;                  1    wreg      void 
 34028 ;; Registers used:
 34029 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34030 ;; Tracked objects:
 34031 ;;		On entry : 0/0
 34032 ;;		On exit  : 0/0
 34033 ;;		Unchanged: 0/0
 34034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34038 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34039 ;;Total ram usage:        1 bytes
 34040 ;; Hardware stack levels used:    1
 34041 ;; Hardware stack levels required when called:    2
 34042 ;; This function calls:
 34043 ;;		_TMR6_CallBack
 34044 ;; This function is called by:
 34045 ;;		Interrupt level 2
 34046 ;; This function uses a non-reentrant model
 34047 ;;
 34048                           
 34049                           	psect	text166
 34050  01B578                     __ptext166:
 34051                           	opt callstack 0
 34052  01B578                     _TMR6_ISR:
 34053                           	opt callstack 3
 34054                           
 34055                           ;incstack = 0
 34056  01B578  0060  F0A0  F006   	movff	btemp,??_TMR6_ISR
 34057  01B57E  EE14  F142         	lfsr	1,___inthi_sp
 34058                           
 34059                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 34060  01B582  0139               	movlb	57	; () banked
 34061  01B584  91A9               	bcf	169,0,b	;volatile
 34062                           
 34063                           ; BSR set to: 57
 34064                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 34065  01B586  EC14  F0DA         	call	_TMR6_CallBack	;wreg free
 34066  01B58A  0060  F018  F028   	movff	??_TMR6_ISR,btemp
 34067  01B590  0011               	retfie		f
 34068  01B592                     __end_of_TMR6_ISR:
 34069                           	opt callstack 0
 34070                           
 34071 ;; *************** function _TMR6_CallBack *****************
 34072 ;; Defined at:
 34073 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 34074 ;; Parameters:    Size  Location     Type
 34075 ;;		None
 34076 ;; Auto vars:     Size  Location     Type
 34077 ;;		None
 34078 ;; Return value:  Size  Location     Type
 34079 ;;                  1  [STACK] void 
 34080 ;; Registers used:
 34081 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 34082 ;; Tracked objects:
 34083 ;;		On entry : 3F/39
 34084 ;;		On exit  : 0/0
 34085 ;;		Unchanged: 0/0
 34086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34088 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34089 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34090 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34091 ;;Total ram usage:        0 bytes
 34092 ;; Hardware stack levels used:    1
 34093 ;; Hardware stack levels required when called:    1
 34094 ;; This function calls:
 34095 ;;		Absolute function
 34096 ;;		_TMR6_DefaultInterruptHandler
 34097 ;; This function is called by:
 34098 ;;		_TMR6_ISR
 34099 ;; This function uses a reentrant model
 34100 ;;
 34101                           
 34102                           	psect	text167
 34103  01B428                     __ptext167:
 34104                           	opt callstack 0
 34105  01B428                     _TMR6_CallBack:
 34106                           	opt callstack 3
 34107                           
 34108                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 34109                           
 34110                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34111                           ;incstack = 0
 34112  01B428  0100               	movlb	0	; () banked
 34113  01B42A  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34114  01B42C  11A9               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34115  01B42E  11AA               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34116  01B430  B4D8               	btfsc	status,2,c
 34117  01B432  0012               	return	
 34118                           
 34119                           ; BSR set to: 0
 34120                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 34121  01B434  D801               	call	u963_48
 34122  01B436  0012               	return	
 34123  01B438                     u963_48:
 34124  01B438  0005               	push	
 34125  01B43A  6EFA               	movwf	pclath,c
 34126  01B43C  51A8               	movf	_TMR6_InterruptHandler& (0+255),w,b
 34127  01B43E  6EFD               	movwf	tosl,c
 34128  01B440  51A9               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 34129  01B442  6EFE               	movwf	tosh,c
 34130  01B444  51AA               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 34131  01B446  6EFF               	movwf	tosu,c
 34132  01B448  50FA               	movf	pclath,w,c
 34133  01B44A  0012               	return		;indir
 34134  01B44C                     __end_of_TMR6_CallBack:
 34135                           	opt callstack 0
 34136                           
 34137 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 34138 ;; Defined at:
 34139 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 34140 ;; Parameters:    Size  Location     Type
 34141 ;;		None
 34142 ;; Auto vars:     Size  Location     Type
 34143 ;;  i               1  [STACK] unsigned char 
 34144 ;; Return value:  Size  Location     Type
 34145 ;;                  1  [STACK] void 
 34146 ;; Registers used:
 34147 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 34148 ;; Tracked objects:
 34149 ;;		On entry : 3F/0
 34150 ;;		On exit  : 0/0
 34151 ;;		Unchanged: 0/0
 34152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34156 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34157 ;;Total ram usage:        0 bytes
 34158 ;; Hardware stack levels used:    1
 34159 ;; This function calls:
 34160 ;;		Nothing
 34161 ;; This function is called by:
 34162 ;;		_TMR6_Initialize
 34163 ;;		_TMR6_CallBack
 34164 ;; This function uses a reentrant model
 34165 ;;
 34166                           
 34167                           	psect	text168
 34168  01A958                     __ptext168:
 34169                           	opt callstack 0
 34170  01A958                     _TMR6_DefaultInterruptHandler:
 34171                           	opt callstack 0
 34172                           
 34173                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 34174  01A958  52E6               	movf	postinc1,f,c
 34175                           
 34176                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 34177                           ;stkvar	_i @ sp[(-1)+0]
 34178                           
 34179                           ;incstack = 0
 34180  01A95A  0EFF               	movlw	-1
 34181  01A95C  6AE3               	clrf	plusw1,c
 34182  01A95E                     l9978:
 34183                           
 34184                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 34185                           ;stkvar	_i @ sp[(-1)+0]
 34186  01A95E  0EFF               	movlw	-1
 34187  01A960  50E3               	movf	plusw1,w,c
 34188  01A962  0D02               	mullw	2
 34189  01A964  0EE6               	movlw	low _tickCount
 34190  01A966  24F3               	addwf	243,w,c
 34191  01A968  6ED9               	movwf	fsr2l,c
 34192  01A96A  0E02               	movlw	high _tickCount
 34193  01A96C  20F4               	addwfc	prodh,w,c
 34194  01A96E  6EDA               	movwf	fsr2h,c
 34195  01A970  50DE               	movf	postinc2,w,c
 34196  01A972  10DE               	iorwf	postinc2,w,c
 34197  01A974  B4D8               	btfsc	status,2,c
 34198  01A976  D00C               	goto	l9982
 34199                           
 34200                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 34201                           ;stkvar	_i @ sp[(-1)+0]
 34202  01A978  0EFF               	movlw	-1
 34203  01A97A  50E3               	movf	plusw1,w,c
 34204  01A97C  0D02               	mullw	2
 34205  01A97E  0EE6               	movlw	low _tickCount
 34206  01A980  24F3               	addwf	243,w,c
 34207  01A982  6ED9               	movwf	fsr2l,c
 34208  01A984  0E02               	movlw	high _tickCount
 34209  01A986  20F4               	addwfc	prodh,w,c
 34210  01A988  6EDA               	movwf	fsr2h,c
 34211  01A98A  06DE               	decf	postinc2,f,c
 34212  01A98C  0E00               	movlw	0
 34213  01A98E  5ADD               	subwfb	postdec2,f,c
 34214  01A990                     l9982:
 34215                           
 34216                           ;mcc_generated_files/tmr6.c: 207:  }
 34217                           ;stkvar	_i @ sp[(-1)+0]
 34218  01A990  0EFF               	movlw	-1
 34219  01A992  2AE3               	incf	plusw1,f,c
 34220                           
 34221                           ;stkvar	_i @ sp[(-1)+0]
 34222  01A994  0EFF               	movlw	-1
 34223  01A996  006F FF8C  F028    	movff	plusw1,btemp
 34224  01A99C  0E0C               	movlw	12
 34225  01A99E  6428               	cpfsgt	btemp^0,c
 34226  01A9A0  D7DE               	goto	l9978
 34227                           
 34228                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 34229  01A9A2  52E5               	movf	postdec1,f,c
 34230  01A9A4  0012               	return		;funcret
 34231  01A9A6                     __end_of_TMR6_DefaultInterruptHandler:
 34232                           	opt callstack 0
 34233                           
 34234 ;; *************** function _DMA1_DMASCNT_ISR *****************
 34235 ;; Defined at:
 34236 ;;		line 126 in file "mcc_generated_files/dma1.c"
 34237 ;; Parameters:    Size  Location     Type
 34238 ;;		None
 34239 ;; Auto vars:     Size  Location     Type
 34240 ;;		None
 34241 ;; Return value:  Size  Location     Type
 34242 ;;                  1    wreg      void 
 34243 ;; Registers used:
 34244 ;;		None
 34245 ;; Tracked objects:
 34246 ;;		On entry : 0/0
 34247 ;;		On exit  : 3F/0
 34248 ;;		Unchanged: 0/0
 34249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34250 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34251 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34252 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34253 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34254 ;;Total ram usage:        0 bytes
 34255 ;; Hardware stack levels used:    1
 34256 ;; This function calls:
 34257 ;;		Nothing
 34258 ;; This function is called by:
 34259 ;;		Interrupt level 2
 34260 ;; This function uses a non-reentrant model
 34261 ;;
 34262                           
 34263                           	psect	text169
 34264  01B688                     __ptext169:
 34265                           	opt callstack 0
 34266  01B688                     _DMA1_DMASCNT_ISR:
 34267                           	opt callstack 5
 34268                           
 34269                           ;incstack = 0
 34270  01B688  EE14  F142         	lfsr	1,___inthi_sp
 34271                           
 34272                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 34273  01B68C  0139               	movlb	57	; () banked
 34274  01B68E  91A2               	bcf	162,0,b	;volatile
 34275                           
 34276                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 34277  01B690  0100               	movlb	0	; () banked
 34278  01B692  9760               	bcf	_spi_link& (0+255),3,b	;volatile
 34279                           
 34280                           ; BSR set to: 0
 34281  01B694  0011               	retfie		f
 34282  01B696                     __end_of_DMA1_DMASCNT_ISR:
 34283                           	opt callstack 0
 34284                           
 34285 ;; *************** function _DMA1_DMADCNT_ISR *****************
 34286 ;; Defined at:
 34287 ;;		line 134 in file "mcc_generated_files/dma1.c"
 34288 ;; Parameters:    Size  Location     Type
 34289 ;;		None
 34290 ;; Auto vars:     Size  Location     Type
 34291 ;;		None
 34292 ;; Return value:  Size  Location     Type
 34293 ;;                  1    wreg      void 
 34294 ;; Registers used:
 34295 ;;		None
 34296 ;; Tracked objects:
 34297 ;;		On entry : 0/0
 34298 ;;		On exit  : 3F/39
 34299 ;;		Unchanged: 0/0
 34300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34301 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34302 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34303 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34304 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34305 ;;Total ram usage:        0 bytes
 34306 ;; Hardware stack levels used:    1
 34307 ;; This function calls:
 34308 ;;		Nothing
 34309 ;; This function is called by:
 34310 ;;		Interrupt level 2
 34311 ;; This function uses a non-reentrant model
 34312 ;;
 34313                           
 34314                           	psect	text170
 34315  01B6AC                     __ptext170:
 34316                           	opt callstack 0
 34317  01B6AC                     _DMA1_DMADCNT_ISR:
 34318                           	opt callstack 5
 34319                           
 34320                           ; BSR set to: 0
 34321                           ;incstack = 0
 34322  01B6AC  EE14  F142         	lfsr	1,___inthi_sp
 34323                           
 34324                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 34325  01B6B0  0139               	movlb	57	; () banked
 34326  01B6B2  93A2               	bcf	162,1,b	;volatile
 34327                           
 34328                           ; BSR set to: 57
 34329  01B6B4  0011               	retfie		f
 34330  01B6B6                     __end_of_DMA1_DMADCNT_ISR:
 34331                           	opt callstack 0
 34332                           
 34333 ;; *************** function _DMA1_DMAA_ISR *****************
 34334 ;; Defined at:
 34335 ;;		line 144 in file "mcc_generated_files/dma1.c"
 34336 ;; Parameters:    Size  Location     Type
 34337 ;;		None
 34338 ;; Auto vars:     Size  Location     Type
 34339 ;;		None
 34340 ;; Return value:  Size  Location     Type
 34341 ;;                  1    wreg      void 
 34342 ;; Registers used:
 34343 ;;		None
 34344 ;; Tracked objects:
 34345 ;;		On entry : 0/0
 34346 ;;		On exit  : 3F/39
 34347 ;;		Unchanged: 0/0
 34348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34349 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34350 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34352 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34353 ;;Total ram usage:        0 bytes
 34354 ;; Hardware stack levels used:    1
 34355 ;; This function calls:
 34356 ;;		Nothing
 34357 ;; This function is called by:
 34358 ;;		Interrupt level 2
 34359 ;; This function uses a non-reentrant model
 34360 ;;
 34361                           
 34362                           	psect	text171
 34363  01B6B8                     __ptext171:
 34364                           	opt callstack 0
 34365  01B6B8                     _DMA1_DMAA_ISR:
 34366                           	opt callstack 5
 34367                           
 34368                           ; BSR set to: 57
 34369                           ;incstack = 0
 34370  01B6B8  EE14  F142         	lfsr	1,___inthi_sp
 34371                           
 34372                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 34373  01B6BC  0139               	movlb	57	; () banked
 34374  01B6BE  97A2               	bcf	162,3,b	;volatile
 34375                           
 34376                           ; BSR set to: 57
 34377  01B6C0  0011               	retfie		f
 34378  01B6C2                     __end_of_DMA1_DMAA_ISR:
 34379                           	opt callstack 0
 34380                           
 34381 ;; *************** function _DMA1_DMAOR_ISR *****************
 34382 ;; Defined at:
 34383 ;;		line 155 in file "mcc_generated_files/dma1.c"
 34384 ;; Parameters:    Size  Location     Type
 34385 ;;		None
 34386 ;; Auto vars:     Size  Location     Type
 34387 ;;		None
 34388 ;; Return value:  Size  Location     Type
 34389 ;;                  1    wreg      void 
 34390 ;; Registers used:
 34391 ;;		None
 34392 ;; Tracked objects:
 34393 ;;		On entry : 0/0
 34394 ;;		On exit  : 3F/39
 34395 ;;		Unchanged: 0/0
 34396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 34397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 34401 ;;Total ram usage:        0 bytes
 34402 ;; Hardware stack levels used:    1
 34403 ;; This function calls:
 34404 ;;		Nothing
 34405 ;; This function is called by:
 34406 ;;		Interrupt level 2
 34407 ;; This function uses a non-reentrant model
 34408 ;;
 34409                           
 34410                           	psect	text172
 34411  01B6C4                     __ptext172:
 34412                           	opt callstack 0
 34413  01B6C4                     _DMA1_DMAOR_ISR:
 34414                           	opt callstack 5
 34415                           
 34416                           ; BSR set to: 57
 34417                           ;incstack = 0
 34418  01B6C4  EE14  F142         	lfsr	1,___inthi_sp
 34419                           
 34420                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 34421  01B6C8  0139               	movlb	57	; () banked
 34422  01B6CA  95A2               	bcf	162,2,b	;volatile
 34423                           
 34424                           ; BSR set to: 57
 34425  01B6CC  0011               	retfie		f
 34426  01B6CE                     __end_of_DMA1_DMAOR_ISR:
 34427                           	opt callstack 0
 34428                           
 34429                           ;
 34430                           ; Interrupt Vector Table @ 0x8
 34431                           ;
 34432                           
 34433                           	psect	ivt0x8
 34434  000008                     __pivt0x8:
 34435                           	opt callstack 0
 34436  000008                     ivt0x8_base:
 34437                           	opt callstack 0
 34438                           
 34439                           ; Vector 0 : SWINT
 34440  000008  6DC4               	dw	_Default_ISR shr (0+2)
 34441                           
 34442                           ; Vector 1 : HLVD
 34443  00000A  6DC4               	dw	_Default_ISR shr (0+2)
 34444                           
 34445                           ; Vector 2 : OSF
 34446  00000C  6DC4               	dw	_Default_ISR shr (0+2)
 34447                           
 34448                           ; Vector 3 : CSW
 34449  00000E  6DC4               	dw	_Default_ISR shr (0+2)
 34450                           
 34451                           ; Vector 4 : NVM
 34452  000010  6DC4               	dw	_Default_ISR shr (0+2)
 34453                           
 34454                           ; Vector 5 : SCAN
 34455  000012  6DC4               	dw	_Default_ISR shr (0+2)
 34456                           
 34457                           ; Vector 6 : CRC
 34458  000014  6DC4               	dw	_Default_ISR shr (0+2)
 34459                           
 34460                           ; Vector 7 : IOC
 34461  000016  6DC4               	dw	_Default_ISR shr (0+2)
 34462                           
 34463                           ; Vector 8 : INT0
 34464  000018  6D9E               	dw	_INT0_ISR shr (0+2)
 34465                           
 34466                           ; Vector 9 : ZCD
 34467  00001A  6DC4               	dw	_Default_ISR shr (0+2)
 34468                           
 34469                           ; Vector 10 : AD
 34470  00001C  6C09               	dw	_ADCC_ISR shr (0+2)
 34471                           
 34472                           ; Vector 11 : ADT
 34473  00001E  693F               	dw	_ADCC_ThresholdISR shr (0+2)
 34474                           
 34475                           ; Vector 12 : CMP1
 34476  000020  6DC4               	dw	_Default_ISR shr (0+2)
 34477                           
 34478                           ; Vector 13 : SMT1
 34479  000022  6DC4               	dw	_Default_ISR shr (0+2)
 34480                           
 34481                           ; Vector 14 : SMT1PRA
 34482  000024  6DC4               	dw	_Default_ISR shr (0+2)
 34483                           
 34484                           ; Vector 15 : SMT1PRW
 34485  000026  6DC4               	dw	_Default_ISR shr (0+2)
 34486                           
 34487                           ; Vector 16 : DMA1SCNT
 34488  000028  6DA2               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 34489                           
 34490                           ; Vector 17 : DMA1DCNT
 34491  00002A  6DAB               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 34492                           
 34493                           ; Vector 18 : DMA1OR
 34494  00002C  6DB1               	dw	_DMA1_DMAOR_ISR shr (0+2)
 34495                           
 34496                           ; Vector 19 : DMA1A
 34497  00002E  6DAE               	dw	_DMA1_DMAA_ISR shr (0+2)
 34498                           
 34499                           ; Vector 20 : SPI1RX
 34500  000030  6DC4               	dw	_Default_ISR shr (0+2)
 34501                           
 34502                           ; Vector 21 : SPI1TX
 34503  000032  6DC4               	dw	_Default_ISR shr (0+2)
 34504                           
 34505                           ; Vector 22 : SPI1
 34506  000034  6DC4               	dw	_Default_ISR shr (0+2)
 34507                           
 34508                           ; Vector 23 : I2C1RX
 34509  000036  6DC4               	dw	_Default_ISR shr (0+2)
 34510                           
 34511                           ; Vector 24 : I2C1TX
 34512  000038  6DC4               	dw	_Default_ISR shr (0+2)
 34513                           
 34514                           ; Vector 25 : I2C1
 34515  00003A  6DC4               	dw	_Default_ISR shr (0+2)
 34516                           
 34517                           ; Vector 26 : I2C1E
 34518  00003C  6DC4               	dw	_Default_ISR shr (0+2)
 34519                           
 34520                           ; Vector 27 : U1RX
 34521  00003E  6CB6               	dw	_UART1_rx_vect_isr shr (0+2)
 34522                           
 34523                           ; Vector 28 : U1TX
 34524  000040  6DC4               	dw	_Default_ISR shr (0+2)
 34525                           
 34526                           ; Vector 29 : U1E
 34527  000042  6DC4               	dw	_Default_ISR shr (0+2)
 34528                           
 34529                           ; Vector 30 : U1
 34530  000044  6DC4               	dw	_Default_ISR shr (0+2)
 34531                           
 34532                           ; Vector 31 : TMR0
 34533  000046  6DC4               	dw	_Default_ISR shr (0+2)
 34534                           
 34535                           ; Vector 32 : TMR1
 34536  000048  6DC4               	dw	_Default_ISR shr (0+2)
 34537                           
 34538                           ; Vector 33 : TMR1G
 34539  00004A  6DC4               	dw	_Default_ISR shr (0+2)
 34540                           
 34541                           ; Vector 34 : TMR2
 34542  00004C  6DC4               	dw	_Default_ISR shr (0+2)
 34543                           
 34544                           ; Vector 35 : CCP1
 34545  00004E  6DC4               	dw	_Default_ISR shr (0+2)
 34546                           
 34547                           ; Vector 36 : Undefined
 34548  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 34549                           
 34550                           ; Vector 37 : NCO1
 34551  000052  6DC4               	dw	_Default_ISR shr (0+2)
 34552                           
 34553                           ; Vector 38 : CWG1
 34554  000054  6DC4               	dw	_Default_ISR shr (0+2)
 34555                           
 34556                           ; Vector 39 : CLC1
 34557  000056  6DC4               	dw	_Default_ISR shr (0+2)
 34558                           
 34559                           ; Vector 40 : INT1
 34560  000058  6B47               	dw	_INT1_ISR shr (0+2)
 34561                           
 34562                           ; Vector 41 : CMP2
 34563  00005A  6DC4               	dw	_Default_ISR shr (0+2)
 34564                           
 34565                           ; Vector 42 : DMA2SCNT
 34566  00005C  6DC4               	dw	_Default_ISR shr (0+2)
 34567                           
 34568                           ; Vector 43 : DMA2DCNT
 34569  00005E  6DC4               	dw	_Default_ISR shr (0+2)
 34570                           
 34571                           ; Vector 44 : DMA2OR
 34572  000060  6DC4               	dw	_Default_ISR shr (0+2)
 34573                           
 34574                           ; Vector 45 : DMA2A
 34575  000062  6DC4               	dw	_Default_ISR shr (0+2)
 34576                           
 34577                           ; Vector 46 : I2C2RX
 34578  000064  6DC4               	dw	_Default_ISR shr (0+2)
 34579                           
 34580                           ; Vector 47 : I2C2TX
 34581  000066  6DC4               	dw	_Default_ISR shr (0+2)
 34582                           
 34583                           ; Vector 48 : I2C2
 34584  000068  6DC4               	dw	_Default_ISR shr (0+2)
 34585                           
 34586                           ; Vector 49 : I2C2E
 34587  00006A  6DC4               	dw	_Default_ISR shr (0+2)
 34588                           
 34589                           ; Vector 50 : U2RX
 34590  00006C  6CCA               	dw	_UART2_rx_vect_isr shr (0+2)
 34591                           
 34592                           ; Vector 51 : U2TX
 34593  00006E  6CC0               	dw	_UART2_tx_vect_isr shr (0+2)
 34594                           
 34595                           ; Vector 52 : U2E
 34596  000070  6DC4               	dw	_Default_ISR shr (0+2)
 34597                           
 34598                           ; Vector 53 : U2
 34599  000072  6DC4               	dw	_Default_ISR shr (0+2)
 34600                           
 34601                           ; Vector 54 : TMR3
 34602  000074  6211               	dw	_TMR3_ISR shr (0+2)
 34603                           
 34604                           ; Vector 55 : TMR3G
 34605  000076  6DC4               	dw	_Default_ISR shr (0+2)
 34606                           
 34607                           ; Vector 56 : TMR4
 34608  000078  6DC4               	dw	_Default_ISR shr (0+2)
 34609                           
 34610                           ; Vector 57 : CCP2
 34611  00007A  6DC4               	dw	_Default_ISR shr (0+2)
 34612                           
 34613                           ; Vector 58 : Undefined
 34614  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 34615                           
 34616                           ; Vector 59 : CWG2
 34617  00007E  6DC4               	dw	_Default_ISR shr (0+2)
 34618                           
 34619                           ; Vector 60 : CLC2
 34620  000080  6DC4               	dw	_Default_ISR shr (0+2)
 34621                           
 34622                           ; Vector 61 : INT2
 34623  000082  6DC4               	dw	_Default_ISR shr (0+2)
 34624                           
 34625                           ; Vector 62 : Undefined
 34626  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 34627                           
 34628                           ; Vector 63 : Undefined
 34629  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 34630                           
 34631                           ; Vector 64 : Undefined
 34632  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 34633                           
 34634                           ; Vector 65 : Undefined
 34635  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 34636                           
 34637                           ; Vector 66 : Undefined
 34638  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 34639                           
 34640                           ; Vector 67 : Undefined
 34641  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 34642                           
 34643                           ; Vector 68 : Undefined
 34644  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 34645                           
 34646                           ; Vector 69 : Undefined
 34647  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 34648                           
 34649                           ; Vector 70 : TMR5
 34650  000094  6A02               	dw	_TMR5_ISR shr (0+2)
 34651                           
 34652                           ; Vector 71 : TMR5G
 34653  000096  6DC4               	dw	_Default_ISR shr (0+2)
 34654                           
 34655                           ; Vector 72 : TMR6
 34656  000098  6D5E               	dw	_TMR6_ISR shr (0+2)
 34657                           
 34658                           ; Vector 73 : CCP3
 34659  00009A  6DC4               	dw	_Default_ISR shr (0+2)
 34660                           
 34661                           ; Vector 74 : CWG3
 34662  00009C  6DC4               	dw	_Default_ISR shr (0+2)
 34663                           
 34664                           ; Vector 75 : CLC3
 34665  00009E  6DC4               	dw	_Default_ISR shr (0+2)
 34666                           
 34667                           ; Vector 76 : Undefined
 34668  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 34669                           
 34670                           ; Vector 77 : Undefined
 34671  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 34672                           
 34673                           ; Vector 78 : Undefined
 34674  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 34675                           
 34676                           ; Vector 79 : Undefined
 34677  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 34678                           
 34679                           ; Vector 80 : CCP4
 34680  0000A8  6DC4               	dw	_Default_ISR shr (0+2)
 34681                           
 34682                           ; Vector 81 : CLC4
 34683  0000AA  6DC4               	dw	_Default_ISR shr (0+2)
 34684  0000AC                     ivt0x8_undefint:
 34685                           	opt callstack 0
 34686  0000AC  00FF               	reset	
 34687                           
 34688                           	psect	text173
 34689  000000                     __ptext173:
 34690                           	opt callstack 0
 34691                           
 34692                           	psect	rparam
 34693  0000                     
 34694                           	psect	temp
 34695  000028                     btemp:
 34696                           	opt callstack 0
 34697  000028                     	ds	32
 34698  0000                     wtemp0	set	btemp
 34699  0000                     wtemp1	set	btemp+2
 34700  0000                     wtemp2	set	btemp+4
 34701  0000                     wtemp3	set	btemp+6
 34702  0000                     wtemp4	set	btemp+8
 34703  0000                     wtemp5	set	btemp+10
 34704  0000                     wtemp8	set	btemp+1
 34705  0000                     ttemp0	set	btemp
 34706  0000                     ttemp1	set	btemp+3
 34707  0000                     ttemp2	set	btemp+6
 34708  0000                     ttemp3	set	btemp+9
 34709  0000                     ttemp5	set	btemp+1
 34710  0000                     ttemp6	set	btemp+4
 34711  0000                     ttemp7	set	btemp+8
 34712  0000                     ltemp0	set	btemp
 34713  0000                     ltemp1	set	btemp+4
 34714  0000                     ltemp2	set	btemp+8
 34715  0000                     lltemp0	set	btemp
 34716  0000                     lltemp1	set	btemp+8
 34717  0000                     lltemp2	set	btemp+16
 34718  0000                     lltemp3	set	btemp+24
 34719                           tosu	equ	0x3FFF
 34720                           tosh	equ	0x3FFE
 34721                           tosl	equ	0x3FFD
 34722                           stkptr	equ	0x3FFC
 34723                           pclatu	equ	0x3FFB
 34724                           pclath	equ	0x3FFA
 34725                           pcl	equ	0x3FF9
 34726                           tblptru	equ	0x3FF8
 34727                           tblptrh	equ	0x3FF7
 34728                           tblptrl	equ	0x3FF6
 34729                           tablat	equ	0x3FF5
 34730                           prodh	equ	0x3FF4
 34731                           prodl	equ	0x3FF3
 34732                           indf0	equ	0x3FEF
 34733                           postinc0	equ	0x3FEE
 34734                           postdec0	equ	0x3FED
 34735                           preinc0	equ	0x3FEC
 34736                           plusw0	equ	0x3FEB
 34737                           fsr0h	equ	0x3FEA
 34738                           fsr0l	equ	0x3FE9
 34739                           wreg	equ	0x3FE8
 34740                           indf1	equ	0x3FE7
 34741                           postinc1	equ	0x3FE6
 34742                           postdec1	equ	0x3FE5
 34743                           preinc1	equ	0x3FE4
 34744                           plusw1	equ	0x3FE3
 34745                           fsr1h	equ	0x3FE2
 34746                           fsr1l	equ	0x3FE1
 34747                           bsr	equ	0x3FE0
 34748                           indf2	equ	0x3FDF
 34749                           postinc2	equ	0x3FDE
 34750                           postdec2	equ	0x3FDD
 34751                           preinc2	equ	0x3FDC
 34752                           plusw2	equ	0x3FDB
 34753                           fsr2h	equ	0x3FDA
 34754                           fsr2l	equ	0x3FD9
 34755                           status	equ	0x3FD8


Data Sizes:
    Strings     919
    Constant    492
    Data        1002
    BSS         1298
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63     39      63
    BANK0           160      0     154
    BANK1           256      0     255
    BANK2           256      0     256
    BANK3           256      0     228
    BANK4           256      0     134
    BANK5           256      0     255
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_102(CODE[1]), STR_64(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_99(CODE[3]), STR_95(CODE[3]), STR_90(CODE[3]), STR_85(CODE[3]), 
		 -> STR_80(CODE[3]), STR_76(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 85
		 -> ct(STACK[3]), STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), 
		 -> STR_61(CODE[19]), STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), 
		 -> STR_57(CODE[19]), STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), 
		 -> STR_53(CODE[15]), STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), 
		 -> STR_49(CODE[19]), STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), 
		 -> STR_43(CODE[3]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    a	PTR const unsigned char  size(2) Largest target is 512
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK3[80]), 
		 -> spin(CODE[120]), STR_47(CODE[9]), STR_46(CODE[12]), D.lcd(BIGRAM[480]), 
		 -> D(BIGRAM[482]), T(CODE[144]), port_data(BIGRAM[512]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_71(CODE[4]), STR_70(CODE[4]), STR_67(CODE[4]), STR_66(CODE[4]), 
		 -> dbuf(BANK3[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), 
		 -> STR_39(CODE[20]), STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), 
		 -> STR_35(CODE[20]), STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), 
		 -> STR_31(CODE[19]), STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), 
		 -> STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), 
		 -> STR_23(CODE[19]), STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), 
		 -> STR_19(CODE[16]), STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), 
		 -> STR_15(CODE[21]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[22]), STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), 
		 -> STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), 
		 -> STR_2(CODE[15]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[189]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[189]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S5971_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[189]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 512
		 -> D(BIGRAM[482]), port_data(BIGRAM[512]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    s	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 85
		 -> STR_65(CODE[85]), STR_63(CODE[3]), STR_62(CODE[3]), STR_61(CODE[19]), 
		 -> STR_60(CODE[19]), STR_59(CODE[19]), STR_58(CODE[19]), STR_57(CODE[19]), 
		 -> STR_56(CODE[19]), STR_55(CODE[24]), STR_54(CODE[15]), STR_53(CODE[15]), 
		 -> STR_52(CODE[15]), STR_51(CODE[10]), STR_50(CODE[10]), STR_49(CODE[19]), 
		 -> STR_48(CODE[19]), STR_45(CODE[3]), STR_44(CODE[3]), STR_43(CODE[3]), 
		 -> STR_42(CODE[17]), STR_41(CODE[16]), STR_40(CODE[16]), STR_39(CODE[20]), 
		 -> STR_38(CODE[20]), STR_37(CODE[20]), STR_36(CODE[20]), STR_35(CODE[20]), 
		 -> STR_34(CODE[20]), STR_33(CODE[19]), STR_32(CODE[19]), STR_31(CODE[19]), 
		 -> STR_30(CODE[19]), STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), 
		 -> STR_26(CODE[19]), STR_25(CODE[19]), STR_24(CODE[19]), STR_23(CODE[19]), 
		 -> STR_22(CODE[19]), STR_21(CODE[17]), STR_20(CODE[16]), STR_19(CODE[16]), 
		 -> STR_18(CODE[26]), STR_17(CODE[26]), STR_16(CODE[22]), STR_15(CODE[21]), 
		 -> STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), STR_11(CODE[22]), 
		 -> STR_10(CODE[22]), STR_9(CODE[23]), STR_8(CODE[18]), STR_7(CODE[17]), 
		 -> STR_6(CODE[17]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_47(CODE[9]), STR_46(CODE[12]), 
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), STR_3(CODE[6]), 
		 -> V(BANK2[189]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_47(CODE[9]), 
		 -> STR_46(CODE[12]), D.lcd(BIGRAM[480]), D(BIGRAM[482]), T(CODE[144]), 
		 -> STR_3(CODE[6]), V(BANK2[189]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK3[80]), 

    log_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__hid_input	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    h	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    S4487tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_47(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_46(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK4[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[189]), 

    sp__port_data_dma_ptr	PTR unsigned char  size(2) Largest target is 512
		 -> port_data(BIGRAM[512]), 

    strPtr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), V(BANK2[189]), 

    sp__hid_display	PTR struct H_data size(1) Largest target is 7
		 -> H(BANK0[7]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 482
		 -> D.lcd(BIGRAM[480]), D(BIGRAM[482]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), 

    TMR3_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> calc_bsoc(), TMR3_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1995spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK4[67]), 

    S1995spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> switch_handler(), INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _TMR3_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _TMR3_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _TMR3_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _TMR3_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _TMR3_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _TMR3_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _TMR3_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _TMR3_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _TMR3_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _TMR3_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _TMR3_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _TMR3_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _TMR3_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _TMR3_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _TMR3_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _TMR3_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _TMR3_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _TMR3_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _TMR3_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _TMR3_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _TMR3_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _TMR3_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _TMR3_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _TMR3_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _TMR3_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _TMR3_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _TMR3_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _TMR3_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _TMR3_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _TMR3_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _TMR3_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _TMR3_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _TMR3_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                13    13      0  373863
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                            ___fladd
                             ___flge
                            ___fltol
                    _calc_model_data
                      _calc_ror_data
                     _check_adc_scan
                 _check_enter_button
                         _check_help
                     _clear_adc_scan
                   _clear_hid_pflags
                    _conv_raw_result
                   _convert_adc_data
                _eaDogM_WriteCommand
                          _esr_check
                              _fabsf
                     _get_raw_result
                         _get_switch
                      _get_vterm_ptr
                        _hid_display
                          _init_bsoc
                       _init_display
                      _init_port_dma
                          _lp_filter
                      _mode_lamp_dim
                   _set_display_info
                 _set_load_relay_one
                 _set_load_relay_two
                          _set_vterm
                           _spinners
                            _sprintf
                              _srand
                     _start_adc_scan
               _start_switch_handler
                         _static_soc
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _static_soc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _start_switch_handler                                 0     0      0      22
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      31
 ---------------------------------------------------------------------------------
 (1) _spinners                                             3     1      2     290
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _init_port_dma                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _init_bsoc                                            0     0      0    8321
           _TMR3_SetInterruptHandler
                       _Volts_to_SOC
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                    _conv_raw_result
 ---------------------------------------------------------------------------------
 (2) _Volts_to_SOC                                         4     0      4      22
 ---------------------------------------------------------------------------------
 (1) _hid_display                                          1     0      1     474
                          _hid_input
 ---------------------------------------------------------------------------------
 (2) _hid_input                                            1     0      1     138
                         _get_switch
 ---------------------------------------------------------------------------------
 (3) _get_switch                                           1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _esr_check                                            1     0      1    8599
                         _StartTimer
                          _TimerDone
                            ___fldiv
                            ___flsub
                    _conv_raw_result
                              _fabsf
                 _set_load_relay_one
                 _set_load_relay_two
                  _update_adc_result
 ---------------------------------------------------------------------------------
 (2) _update_adc_result                                    0     0      0     132
                         _StartTimer
                          _TimerDone
                     _check_adc_scan
                     _clear_adc_scan
                     _start_adc_scan
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_two                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_load_relay_one                                   1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10995
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (1) _clear_hid_pflags                                     1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _check_help                                           2     1      1  186232
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_enter_button                                   1     0      1      66
 ---------------------------------------------------------------------------------
 (1) _calc_ror_data                                        0     0      0    7418
                             ___flge
                            ___flsub
                    _conv_raw_result
                              _fabsf
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5182
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (3) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (1) _calc_model_data                                      0     0      0   11072
                            ___fladd
                            ___flmul
                            ___flsub
                          _lp_filter
                         _start_bsoc
                          _stop_bsoc
 ---------------------------------------------------------------------------------
 (2) _stop_bsoc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _start_bsoc                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR3_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      22
        _UART1_SetRxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR3_Initialize                                      0     0      0      22
           _TMR3_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR3_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            4     4      0     204
                                              6 COMRAM     4     4      0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0     204
                   Absolute function *
       _INT1_DefaultInterruptHandler *
                     _switch_handler *
 ---------------------------------------------------------------------------------
 (16) _switch_handler                                      2     2      0     204
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                             10 COMRAM     4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR3_ISR                                           25    25      0   35480
                                             14 COMRAM    25    25      0
                      _TMR3_CallBack
                    _TMR3_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR3_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR3_CallBack                                       0     0      0   35390
                   Absolute function *
       _TMR3_DefaultInterruptHandler *
                          _calc_bsoc *
 ---------------------------------------------------------------------------------
 (16) _calc_bsoc                                           2     2      0   35390
                         _StartTimer
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                              _fabsf
                  _port_data_dma_ptr
                 _send_port_data_dma
                            _sprintf
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _sprintf                                            66    10     56   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (18) _vfprintf                                            8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (19) _vfpfcnvrt                                          45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (20) _xtoa                                               31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (21) _toupper                                             4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (22) _islower                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _isalpha                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (20) _utoa                                               24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (21) ___lomod                                            17     1     16     159
 ---------------------------------------------------------------------------------
 (21) ___lodiv                                            25     9     16     162
 ---------------------------------------------------------------------------------
 (20) _strncmp                                            10     4      6     225
 ---------------------------------------------------------------------------------
 (20) _stoa                                               21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (20) _efgtoa                                             63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (20) _tolower                                             4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (21) _isupper                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (21) _strcpy                                              8     4      4     137
 ---------------------------------------------------------------------------------
 (21) _floorf                                             14    10      4     338
 ---------------------------------------------------------------------------------
 (21) ___fpclassifyf                                      10     6      4     135
 ---------------------------------------------------------------------------------
 (21) ___fltol                                             6     2      4     229
 ---------------------------------------------------------------------------------
 (21) ___flsub                                             8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (22) ___fladd                                            12     4      8    1962
 ---------------------------------------------------------------------------------
 (21) ___flneg                                             4     0      4      45
 ---------------------------------------------------------------------------------
 (21) ___flmul                                            21    13      8    1445
 ---------------------------------------------------------------------------------
 (21) ___flge                                              8     0      8     182
 ---------------------------------------------------------------------------------
 (21) ___fleq                                              8     0      8      90
 ---------------------------------------------------------------------------------
 (21) ___fldiv                                            21    13      8    1099
 ---------------------------------------------------------------------------------
 (21) ___awmod                                             6     2      4     296
 ---------------------------------------------------------------------------------
 (21) ___awdiv                                             8     4      4     300
 ---------------------------------------------------------------------------------
 (20) _dtoa                                               28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (21) _abs                                                 2     0      2      66
 ---------------------------------------------------------------------------------
 (21) ___aomod                                            18     2     16     296
 ---------------------------------------------------------------------------------
 (21) ___aodiv                                            26    10     16     300
 ---------------------------------------------------------------------------------
 (20) _ctoa                                                7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (21) _pad                                                10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (17) _strlen                                              4     2      2      90
 ---------------------------------------------------------------------------------
 (22) _fputs                                               7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (23) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (24) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (25) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (20) _atoi                                               11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (21) _isspace                                             3     1      2      68
 ---------------------------------------------------------------------------------
 (20) _isdigit                                             2     0      2      22
 ---------------------------------------------------------------------------------
 (17) _send_port_data_dma                                  2     0      2      45
 ---------------------------------------------------------------------------------
 (17) _port_data_dma_ptr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (17) _fabsf                                               8     4      4      47
 ---------------------------------------------------------------------------------
 (17) _StartTimer                                          3     0      3      44
 ---------------------------------------------------------------------------------
 (16) _TMR3_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (27) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _ADCC_ThresholdISR                                   5     5      0      22
                                              0 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (27) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (28) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (28) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (27) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (27) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _TMR6_ISR                                            1     1      0      90
                                              5 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (27) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (28) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (28) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (26) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 26
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR3_Initialize
       _TMR3_SetInterruptHandler
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   ___fladd
   ___flge
   ___fltol
   _calc_model_data
     ___fladd
     ___flmul
     ___flsub
       ___fladd
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
     _start_bsoc
     _stop_bsoc
   _calc_ror_data
     ___flge
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
   _check_adc_scan
   _check_enter_button
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _clear_hid_pflags
   _conv_raw_result
     ___fldiv
     ___flmul
     ___flsub
       ___fladd
     ___xxtofl
     _get_raw_result
     _nanf
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _esr_check
     _StartTimer
     _TimerDone
     ___fldiv
     ___flsub
       ___fladd
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _fabsf
     _set_load_relay_one
     _set_load_relay_two
     _update_adc_result
       _StartTimer
       _TimerDone
       _check_adc_scan
       _clear_adc_scan
       _start_adc_scan
         _ADCC_DischargeSampleCapacitor
         _ADCC_SetADIInterruptHandler
         _ADCC_SetADTIInterruptHandler
         _ADCC_StartConversion
   _fabsf
   _get_raw_result
   _get_switch
   _get_vterm_ptr
   _hid_display
     _hid_input
       _get_switch
   _init_bsoc
     _TMR3_SetInterruptHandler
     _Volts_to_SOC
     ___fldiv
     ___flmul
     ___fltol
     ___xxtofl
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _init_port_dma
   _lp_filter
     ___fladd
     ___flmul
     ___flsub
       ___fladd
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_load_relay_one
   _set_load_relay_two
   _set_vterm
   _spinners
     _strlen
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _start_switch_handler
     _INT1_SetInterruptHandler
   _static_soc
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *
     _switch_handler *

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _TMR3_ISR (ROOT)
   _TMR3_CallBack
     Absolute function(Fake) *
     _TMR3_DefaultInterruptHandler *
     _calc_bsoc *
       _StartTimer
       ___fladd
       ___fldiv
       ___flge
       ___flmul
       ___flneg
       ___fltol
       _fabsf
       _port_data_dma_ptr
       _send_port_data_dma
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _strlen
   _TMR3_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     3E2      69       12.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      86      13       52.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      E4      11       89.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FF       7       99.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      9A       5       96.2%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F     27      3F       1      100.0%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     541      58        0.0%
DATA                 0      0     923       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Dec 15 00:59:31 2019

                     _SPI1_Exchange8bit B48E                __end_of_set_display_info B4E8  
                                     _C 0100                                       _D 07FF  
                                     _H 00F3                                       _P 009E  
                                     _R 00C4                                       _S 02BD  
                                     _T FB4B                                       _V 0200  
      __end_of_TMR5_SetInterruptHandler B20E            __end_of_start_switch_handler B48E  
                           __CFG_CP$OFF 000000                 __size_of_ringBufS_flush 0092  
                                    _bp FC53                  __end_of_FVR_Initialize B6F6  
                           __CFG_LVP$ON 000000                                     l169 B5FE  
                                   l807 B49C                                     l673 B076  
                                   _GIE 01FE97                                     _abs AA38  
                                   _pad 90DA                 __size_of_PMD_Initialize 0014  
                       _TMR2_Initialize B5AA                                     prod 003FF3  
                                   tosl 003FFD                                     wreg 003FE8  
                         _INT0_CallBack B404                       _update_adc_result AD5A  
                         __CFG_BBEN$OFF 000000                   __size_of_Volts_to_SOC 0092  
                         _INT1_CallBack B398                            __CFG_ZCD$OFF 000000  
                                  l1000 ACD6                                    l2100 9136  
                                  l2120 543A                                    l2200 0B1A  
                                  l2041 6B8C                                    l1322 12A2  
                                  l1340 18DA                                    l1350 1AFA  
                                  l3015 7BAE                                    l1351 1CFC  
                                  l1338 18D4                         _timer3ReloadVal 004E  
                                  l1188 AD16                                    l2156 123A  
                                  l2324 3214                                    l1356 2230  
                                  l1348 1974                                    l1437 A75C  
                                  l3046 AA78                                    l3038 8100  
                                  l2238 6C7A                                    l1712 B4E4  
                                  l2185 066A                                    l3146 8FB8  
                                  l2274 5820                                    l2259 62E8  
                                  l2620 8764                                    l3077 7338  
                                  l3413 7798                                    l1581 A0EE  
                                  l1655 ADB0                                    l2616 9A6E  
                                  l1672 92FA                                    l1664 7854  
                                  l1825 7F6A                                    l1577 9DEA  
                                  l3441 A31A                                    l1665 79B0  
                                  l2627 8838                                    l3428 A39E  
                                  l1596 AE1A                                    l1774 5356  
                                  l2654 8566                    _ADCC_StartConversion B618  
                                  l1928 A214                                    l1937 9614  
                                  l2906 408A                                    l1866 980E  
                                  l8000 4C5A                                    l2939 4EA6  
                                  l8020 4CFC                                    l8110 3388  
                                  l8102 3342                                    l2894 41FA  
                                  l8014 4CE0                                    l8006 4CAE  
                                  l2975 3A3E                                    l8120 33DA  
                                  l8112 33B8                                    l8024 4D22  
                                  l8008 4CB2                                    l8210 397E  
                                  l8034 4D6C                                    l8108 3382  
                                  l8060 4E52                                    l8300 900C  
                                  l8206 3938                                    l7510 3B5C  
                                  l7502 3AF4                                    l8054 4E22  
                                  l8038 4D72                                    l8310 908C  
                                  l8224 39EC                                    l8216 39A8  
                                  l7504 3B24                                    l8048 4DE6  
                                  l8226 3A06                                    l8090 32B4  
                                  l7522 3BCE                                    l8066 4E7A  
                                  l8330 9A38                                    l8402 84FE  
                                  l8172 3832                                    l8092 32BA  
                                  l8084 3274                                    l7700 41DA  
                                  l7612 3F0A                                    l7516 3B8E  
                                  l8068 4E8A                                    l9108 7328  
                                  l8252 89E0                                    l8404 8514  
                                  l9124 760A                                    l8182 3874  
                                  l8094 32EA                                    l7630 403A  
                                  l7606 3EEE                                    l7534 3C36  
                                  l7526 3BE4                                    l8342 8722  
                                  l8246 89CA                                    l8318 90C0  
                                  l8334 9A6C                                    l8326 99F6  
                                  l9126 7676                                    l8430 822A  
                                  l8192 38BE                                    l7608 3F00  
                                  l7616 3F3C                                    l7528 3C14  
                                  l8360 8836                                    l8352 8800  
                                  l9072 70E8                                    l7464 9EBE  
                                  l8280 8ADA                                    l8272 8AA6  
                                  l8178 384E                                    l9090 71C2  
                                  l9082 717E                                    l9074 710A  
                                  l7466 9EE0                                    l8258 8A00  
                                  l7810 620C                                    l8418 8158  
                                  l8450 8BDA                                    l8442 8B2E  
                                  l8196 38C4                                    l7652 40CA  
                                  l7628 4014                                    l7580 3E18  
                                  l7564 3D74                                    l7492 3A9E  
                                  l8348 87B2                                    l9092 71E6  
                                  l7900 7428                                    l8292 8FE2  
                                  l7804 6174                                    l7662 40F2  
                                  l7646 40AC                                    l7638 406E  
                                  l7574 3DE6                                    l9094 7224  
                                  l7734 AA68                                    l7814 627A  
                                  l7806 61C4                                    l7648 40BE  
                                  l7584 3E22                                    l9088 71AA  
                                  l8296 8FF4                                    l8368 AA0E  
                                  l7752 80A2                                    l7832 A30A  
                                  l7666 40F8                                    l7578 3E06  
                                  l7498 3ADE                                    l8466 A8F6  
                                  l9098 728C                                    l8394 84D2  
                                  l8378 8450                                    l7692 419A  
                                  l7588 3E52                                    l7940 4A12  
                                  l7860 6F4A                                    l7908 74D4  
                                  l8396 84EE                                    l7748 809E  
                                  l7694 41AA                                    l7678 4156  
                                  l7934 49CC                                    l9606 7B8E  
                                  l7854 6F04                                    l7758 80F8  
                                  l7790 6056                                    l9536 A932  
                                  l7688 4182                                    l7960 4AF0  
                                  l7928 498C                                    l7872 701C  
                                  l7848 6EB0                                    l7776 A38E  
                                  l9528 B00A                                    l7954 4AAA  
                                  l7938 49E2                                    l9378 B13E  
                                  l9466 AE24                                    l7980 4B82  
                                  l7972 4B68                                    l7948 4A6A  
                                  l9572 7A6A                                    l9564 79FE  
                                  l7892 73A0                                    l7990 4C12  
                                  l7966 4B2E                                    l7958 4AC0  
                                  l9574 7A78                                    l9584 7ADA  
                                  l9576 7A8E                                    l9586 7AF8  
                                  l9578 7AAC                                    l9596 7B2C  
                                  l9588 7B0E                                    l7998 4C48  
                                  STR_1 FF50                                    STR_2 FFA2  
                                  STR_3 FFD0                                    STR_4 FF1D  
                                  STR_5 FDF0                                    STR_6 FDF0  
                                  STR_7 FDF0                                    l9982 A990  
                                  STR_8 FF0B                                    STR_9 FD08  
                                  l9978 A95E                                    _LATA 003FBA  
                                  _LATB 003FBB                                    _LATC 003FBC  
                                  _LATD 003FBD                                    _LATE 003FBE  
                                  _LATF 003FBF                                    _T2PR 003FAB  
                                  u5200 9F0E                                    u6010 AFBE  
                                  u6020 AFC0                                    u6110 7054  
                                  u5230 AF8E                                    u5207 9F00  
                                  u5400 3E6A                                    u6040 6EAA  
                                  u6200 7454                                    u5240 AF90  
                                  u6130 70A6                                    _T6PR 003F93  
                                  u5500 405C                                    u5340 3D9A  
                                  u6060 6F00                                    u6220 750C  
                                  u7020 851C                                    _PMD0 0039C0  
                                  _PMD1 0039C1                                    u5350 3DBA  
                                  u7110 8B28                                    _PMD2 0039C2  
                                  u5351 3DB4                                    u6071 6F0A  
                                  _PMD3 0039C3                                    u5600 4146  
                                  u6080 6F44                                    u6240 755E  
                                  u6160 739A                                    u7040 8546  
                                  u7120 8B5A                                    _PMD4 0039C4  
                                  _PMD5 0039C5                                    u6090 6F76  
                                  _PMD6 0039C6                                    u7051 8118  
                                  _PMD7 0039C7                                    u5540 40D0  
                                  u5460 3F32                                    u6420 4D64  
                                  u6180 73F0                                    u7060 8152  
                                  u7140 8C12                                    u5605 4136  
                                  u5630 4166                                    u5390 3E4A  
                                  u6190 7422                                    u7070 8184  
                                  u5560 40EA                                    u5368 3DBC  
                                  u7160 A8D2                                    u5800 80F2  
                                  u5465 3F22                                    u7170 A8F2  
                                  u5730 AA4C                                    u7090 8262  
                                  u5395 3E3A                                    u6700 3992  
                                  u6460 4DC0                                    u6380 4CDA  
                                  u5740 8022                                    u6605 37EC  
                                  u6470 4DFA                                    u8310 717A  
                                  u5910 611A                                    u5830 A34C  
                                  u5670 AF5E                                    u6640 38B6  
                                  u9200 7DCE                                    u6480 4E36  
                                  u5840 A34E                                    u5680 AF60  
                                  u6465 4DB0                                    u5745 8018  
                                  u6570 33C8                                    u9114 4F1E  
                                  u8330 72D2                                    u5930 61F2  
                                  u9115 4F18                                    u5915 6110  
                                  u9035 B644                                    u8340 72D4  
                                  u6820 9038                                    u5860 5FEE  
                                  u8420 773E                                    u9036 B646  
                                  u9045 B634                                    u9134 50F4  
                                  u6750 8A2C                                    u5790 80F0  
                                  u5870 603A                                    u8430 776C  
                                  u9046 B636                                    u9135 50EE  
                                  u5935 61E8                                    u6680 3912  
                                  u6840 90AC                                    u5960 ABCE  
                                  u9400 A1BA                                    u6585 355C  
                                  u5785 80D2                                    u5865 5FE4  
                                  u8425 7738                                    u6690 394C  
                                  u9154 51C2                                    u9074 4ECC  
                                  u6770 8AC6                                    u5970 ABD0  
                                  u6595 3624                                    u9155 51BC  
                                  u9075 4EC6                                    u8427 772A  
                                  u9180 51EC                                    u6940 AA0A  
                                  u8380 76A4                                    u5980 A2C8  
                                  u6685 3902                                    u8437 775E  
                                  u9174 51E4                                    u9094 4EFC  
                                  u6950 8430                                    u5990 A2CA  
                                  u9430 A200                                    u9175 51DE  
                                  u9095 4EF6                                    u5895 6074  
                                  u6880 9A68                                    u6960 8444  
                                  u5896 607A                                    u5897 6088  
                                  u9290 B458                                    u6970 847E  
                                  u9418 A1BC                                    u6955 8426  
                                  u8387 7696                                    u8815 AC0A  
                                  u6975 8474                                    u9296 B45A  
                                  u8920 7B22                                    u9448 A202  
                                  _PLLR 01CEE0                                    u8960 A574  
                                  u8985 A5A8                                    u8986 A5AA  
                                  u8978 A576                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR B050  
                         __CFG_FCMEN$ON 000000                                    _dbuf 0394  
                                  _cp_h FC63                                    _cp_l FC5F  
                                  _atoi 70CE                                    _ctoa A218  
                                  _main 1244                                    _dtoa 535C  
                                  _nanf A692                                    _seed 01F7  
                                  _prec 004A                                    _nout 00C0  
                                  _spin FBDB                                    fsr0h 003FEA  
                                  fsr1h 003FE2                                    indf0 003FEF  
                                  fsr2h 003FDA                                    fsr0l 003FE9  
                                  indf1 003FE7                                    indf2 003FDF  
                                  fsr1l 003FE1                                    fsr2l 003FD9  
                                  _stoa 6B90                                    btemp 0028  
                                  _utoa 62A4                                    _xtoa 57DC  
                __end_of_check_adc_scan B6DE                           ___fpclassifyf 7F74  
                                  prodh 003FF4                                    prodl 003FF3  
                                  start 00AE                         _timer5ReloadVal 0052  
             __end_of_SPI1_Exchange8bit B4AC               __size_of_clear_hid_pflags 0024  
                       _TMR3_Initialize AB50             __size_of_set_load_relay_one 0010  
           __size_of_set_load_relay_two 0010                           __CFG_CSWEN$ON 000000  
                     _UART1_rx_vect_isr B2D8                            ___param_bank 000000  
                    ?_UART1_rx_vect_isr 0001                        __end_of_INT0_ISR B686  
                      __end_of_INT1_ISR AD5A          __size_of_OSCILLATOR_Initialize 0016  
              __end_of_ringBufS_put_dma 9DF2           __end_of_OSCILLATOR_Initialize B604  
                                 l10114 7E1C                                   l10106 7DF0  
                                 l10034 4EE2                                   l10220 8C5C  
                                 l10060 51A8                                   l10044 5000  
                                 l10028 4EB2                                   l10222 8C62  
                                 l10230 8CA4                                   l10118 7E30  
                                 l10224 8C70                                   l10216 8C46  
                                 l10056 510C                                   l10048 50DA  
                                 l10152 ADC6                                   l10402 B072  
                                 l10218 8C56                                   l10074 5324  
                                 l10082 5336                                   l10330 A042  
                                 l10244 8D56                                   l10236 8CDC  
                                 l10228 8C78                                   l10068 5288  
                                 l12100 2722                                   l12014 5B4C  
                                 l10326 9FDA                                   l11400 9F88  
                                 l12200 300A                                   l12112 2862  
                                 l10256 A1CE                                   l11410 912E  
                                 l12050 238E                                   l10194 AD7A  
                                 l10428 ACBE                                   l11420 91C6  
                                 l11412 9140                                   l11500 542A  
                                 l12220 319C                                   l12132 2A74  
                                 l12124 29BC                                   l12108 280E  
                                 l12052 23A4                                   l10604 698C  
                                 l10390 B558                                   l10446 ACFE  
                                 l10702 5F2C                                   l10542 83D8  
                                 l11406 9106                                   l12214 3142  
                                 l12070 24D6                                   l12230 31C0  
                                 l10550 982A                                   l11416 917C  
                                 l11512 5492                                   l12224 31A0  
                                 l12136 2AA8                                   l12072 2510  
                                 l12048 2354                                   l10624 6A0C  
                                 l10616 69E6                                   l10608 6998  
                                 l10720 957E                                   l11522 56A4  
                                 l11426 9928                                   l12090 268A  
                                 l12074 2526                                   l11442 667C  
                                 l10730 95EE                                   l11508 5474  
                                 l12156 2C08                                   l12316 9212  
                                 l10580 68FA                                   l10708 9522  
                                 l10556 98D0                                   l10814 A3EC  
                                 l11542 5756                                   l11630 0470  
                                 l12166 2CB6                                   l11462 6852  
                                 l11454 67A4                                   l12270 9E4A  
                                 l12502 7824                                   l10662 9B7A  
                                 l10582 68FE                                   l10646 6B54  
                                 l10808 A3DC                                   l12360 430C  
                                 l11384 8ECE                                   l11704 0926  
                                 l11624 0396                                   l11608 02FC  
                                 l11616 032A                                   l11560 00AC  
                                 l12176 2DD8                                   l11448 673A  
                                 l10592 693A                                   l10648 6B7C  
                                 l11474 A236                                   l11546 5792  
                                 l11650 057C                                   l11634 04D2  
                                 l12186 2E8E                                   l10658 9B3C  
                                 l10578 68EA                                   l12372 4594  
                                 l12356 42CA                                   l10748 AC94  
                                 l11396 9F4A                                   l11476 A262  
                                 l11804 0FD6                                   l11652 058E  
                                 l11628 0406                                   l11572 00F0  
                                 l11580 0146                                   l11900 6E0E  
                                 l12284 9CC8                                   l12516 794C  
                                 l10588 692E                                   PRLOCK 0039EF  
                                 l12382 46D8                                   l11806 0FF0  
                                 l11742 0C32                                   l11726 0B12  
                                 l11718 0A48                                   l11646 0554  
                                 l11590 01EA                                   l12286 9D0A  
                                 l10598 6964                                   l12622 146E  
                                 l12392 4780                                   l12376 462E  
                                 l11816 1092                                   l11728 0B34  
                                 l11592 0216                                   l12712 1966  
                                 l12704 1940                                   l12386 4762  
                                 l11842 119A                                   l11826 10E2  
                                 l11754 0CBA                                   l11762 0D24  
                                 l11770 0D90                                   l11666 05F6  
                                 l11658 0594                                   l11594 022C  
                                 l11922 6334                                   l11914 62D8  
                                 l12570 12AA                                   l12388 476A  
                                 l11684 06B8                                   l11668 0602  
                                 l11932 652A                                   l12724 1EDE  
                                 l12740 20E6                                   l12572 12BC  
                                 l12564 1284                                   l11790 0F3A  
                                 l11694 077A                                   l11598 0258  
                                 l11862 6BFC                                   l12750 2130  
                                 l12670 16C6                                   l12566 128C  
                                 l11688 06F0                                   l11960 584A  
                                 l12728 1F40                                   l11778 0EA2  
                                 l11882 6CEC                                   l11954 5810  
                                 l12770 21AA                                   l12738 20BC  
                                 l12754 2154                                   l12682 17A0  
                                 l12690 18DE                                   l11892 6DA6  
                                 l12772 21C2                                   l12764 2198  
                                 l12692 190C                                   l11886 6D1C  
                                 l11878 6CB0                                   l11990 59DC  
                                 l11974 58E6                                   l11966 5886  
                                 l12782 2206                                   l11896 6DD2  
                                 l12792 225E                                   l12778 21E0  
                                 l11998 5A62                         __end_of___aodiv 70CE  
                          _Volts_to_SOC 9FD2                                   _ADCAP 003EF5  
                                 _ADACT 003EFE                         __end_of___fladd 4204  
                                 _ADCLK 003EFF                         __end_of___aomod 7582  
                                 _ADPCH 003EF1                         __end_of___fldiv 4EB0  
                                 _ADREF 003EFD                         __end_of___awdiv 8AF4  
                       __end_of___flneg AA38                                   STR_10 FD35  
                                 STR_11 FD4B                                   STR_12 FF2E  
                                 STR_21 FF61                                   STR_13 FF3F  
                                 STR_14 FF72                                   STR_30 FEE5  
                                 STR_22 FE99                                   STR_23 FEBF  
                                 STR_31 FE27                                   STR_15 FD61  
                                 STR_40 FF83                                   STR_24 FEAC  
                                 STR_32 FE3A                                   STR_16 FD1F  
                                 STR_41 FF83                                   STR_25 FE60  
                                 STR_33 FE4D                                   STR_17 FCBC  
                         __CFG_WDTE$OFF 000000                                   STR_42 FF61  
                                 STR_50 FFBD                                   STR_26 FE86  
                                 STR_34 FD9E                                   STR_18 FCD6  
                                 STR_51 FFBD                                   STR_43 FFFB  
                                 STR_19 FF83                                   STR_27 FE73  
                                 STR_35 FDDA                                   STR_44 FFF8  
                                 STR_52 FF93                                   STR_28 FEF8  
                                 STR_36 FD8A                         __end_of___awmod 90DA  
                                 STR_53 FF93                                   STR_29 FED2  
                                 STR_37 FD76                                   STR_54 FF93  
                                 STR_70 FFDA                                   STR_46 FFB1  
                                 STR_38 FDB2                                   STR_71 FFE2  
                                 STR_47 FFC7                                   STR_39 FDC6  
                                 STR_55 FCF0                                   STR_64 FCBB  
                                 STR_80 FFEF                                   STR_48 FE01  
                                 _ADRPT 003EEC                                   STR_49 FE01  
                                 STR_57 FE14                                   STR_65 FC67  
                                 STR_90 FFF2                                   STR_74 FFE9  
                                 STR_66 FFD6                                   STR_58 FDEE  
                                 STR_83 FFEC                                   STR_67 FFDE  
                                 STR_76 FFE9                                   STR_85 FFEC  
                                 STR_93 FFF5                                   STR_78 FFEF  
                                 STR_95 FFF5                                   STR_88 FFF2  
                       __end_of___flmul 3A48                                   STR_97 FFE6  
                                 STR_99 FFE6                         __end_of___flsub AAC4  
                       __end_of___fltol 8570                                   u10310 8EC2  
                                 u11110 10B8                                   u10330 8F3E  
                                 u11130 116E                                   u11050 0EE4  
                                 u11210 6D12                                   u11140 1170  
                                 u11220 6D58                                   u11301 656C  
                                 u10510 53FE                                   u11310 6582  
                                 u12030 799C                                   u12110 17CE  
                                 u11311 6580                                   u10600 5716  
                                 u11320 6596                                   u11400 5934  
                                 u12040 799E                                   u12200 213A  
                                 u10530 5410                                   u11250 6E34  
                                 u11330 659A                                   u10450 68C6  
                                 u12210 214C                                   u11227 6D4A  
                       __end_of___lodiv 828A                                   u10620 572C  
                                 u10700 0196                                   u11500 5ADC  
                                 u11420 5992                                   u10550 5460  
                                 u10390 99A2                                   u11270 62BE  
                                 u11430 5994                                   u11350 57F6  
                                 u12206 213C                                   u10560 56B8  
                                 u10480 538C                                   u12216 214E  
                                 u10490 538E                                   u10810 0562  
                                 u10730 02A6                                   u11450 5A5E  
                                 u11610 256E                                   u12090 158C  
                                 _U1P1H 003DED                                   u10571 56E8  
                                 u10580 56FE                                   u10740 02A8  
                                 u10660 00DA                                   u11460 5A7E  
                                 u11380 58DE                                   u11700 28EA  
                                 u11620 2570                                   _U1P2H 003DEF  
                                 u10581 56FC                                   u10397 9994  
                                 u10590 5712                                   u11390 5932  
                                 u11630 2596                                   u12190 2120  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 u11471 5AAE                                   u11455 5A40  
                                 _T3CLK 003FA9                                   u10840 05C6  
                                 u11480 5AC4                                   u11800 2EE2  
                                 u11560 23EC                                   _T2CON 003FAC  
                                 _U1P2L 003DEE                                   u11481 5AC2  
                                 u10690 0194                                   u11490 5AD8  
                                 u11730 2B62                                   u11570 23EE  
                                 _U1P3L 003DF0                                   u10780 050E  
                                 u11820 3092                                   u11740 2B64  
                                 u11580 2414                                   u12196 2122  
                                 u10950 0A18                                   _U2P1L 003DD4  
                                 u10880 0648                                   u11680 2776  
                                 u11840 9E2A                                   _T3CON 003FA6  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 8C34  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 00AB  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U2RXB 003DD0  
                                 _U2TXB 003DD2                                   _T6TMR 003F92  
                                 _T6RST 003F97                     ??_UART1_rx_vect_isr 0006  
                                 _ISRPR 0039F1                                   _OSCEN 0039DD  
                                 _TMR3H 003FA5                                   _TMR5H 003F99  
                                 _TMR3L 003FA4                                   _TMR5L 003F98  
             __end_of_update_adc_result AD94                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR B710  
               __size_of_clear_adc_scan 0006       __size_of_TMR3_SetInterruptHandler 0028  
     __size_of_TMR6_SetInterruptHandler 0028                           __CFG_WRTB$OFF 000000  
                      __end_of_TMR3_ISR 89A6                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                        __end_of_TMR5_ISR A862  
                          _DMA1CON0bits 003BFC                        __end_of_TMR6_ISR B592  
                          _DMA1CON1bits 003BFD                                   _fabsf 9BEE  
                                 _flags 004C                __size_of_calc_model_data 03A2  
                          _DMA2CON0bits 003BDC                            _DMA2CON1bits 003BDD  
                                 _fputc 8E9E              __size_of_send_lcd_cmd_long 0028  
                       __end_of_isalpha ABDA                                   _fputs 9F3A  
                       __end_of_isdigit AFCA                         __end_of_ivln2_h FC5F  
                    __CFG_MCLRE$EXTMCLR 000000                                   _srand AE6E  
                                 _width 0048                                   _putch B55C  
                       __end_of_islower AF6A                         __end_of_isspace A906  
              _INT1_SetInterruptHandler B236                         __end_of_isupper AF9A  
                                 pclath 003FFA                                   tablat 003FF5  
                                 ltemp0 0028                                   ltemp1 002C  
                                 ltemp2 0030                __size_of_DMA1_Initialize 006A  
                                 plusw1 003FE3                                   plusw2 003FDB  
                                 ttemp0 0028                                   ttemp1 002B  
                                 ttemp2 002E                                   ttemp3 0031  
                                 ttemp5 0029                                   ttemp6 002C  
                                 ttemp7 0030                                   status 003FD8  
   __end_of_UART1_SetRxInterruptHandler B1BE             _UART1_SetRxInterruptHandler B196  
                                 wtemp0 0028                                   wtemp1 002A  
                                 wtemp2 002C                                   wtemp3 002E  
                                 wtemp4 0030                                   wtemp5 0032  
                                 wtemp8 0029                         __end_of_sprintf 9516  
                       __end_of_tolower A3A8                         __end_of_strncmp 77A2  
                       __end_of_toupper A324               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr B300                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize AB0A                   __end_of_ringBufS_init B11E  
                       __initialization 92FE                       _UART2_rx_vect_isr B328  
                          __end_of_cp_h FC67                            __end_of_cp_l FC63  
                          __end_of_atoi 7342                            __end_of_ctoa A2A0  
                          __end_of_main 2272                            __end_of_dtoa 57DC  
                          __end_of_nanf A6F4                            __end_of_spin FC53  
                          __end_of_stoa 6E4E                            __end_of_utoa 65E4  
                          __end_of_xtoa 5B96                          __CFG_SAFEN$OFF 000000  
                    ?_UART2_rx_vect_isr 0001                 __end_of_TMR2_Initialize B5C2  
              __size_of_DMA2_Initialize 005A              __end_of_check_enter_button AC9C  
              _TMR5_SetInterruptHandler B1E6                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E                   _TMR3_InterruptHandler 00A2  
                     _port_data_dma_ptr B6A0                      esr_check@esr_state 0054  
                   ??_UART2_rx_vect_isr 0006                                  INTCON0 003FD2  
  __size_of_UART2_SetRxInterruptHandler 0028                          __CFG_MVECEN$ON 000000  
                       _TMR6_Initialize B07C                         _PWM8_Initialize B5D8  
                      _UART1_Initialize AAC4                       _UART2_tx_vect_isr B300  
                    _UART2_Transmit_ISR B050                                  _ADACCU 003EEA  
                                _ADACQH 003EF4                                  _ADACQL 003EF3  
                                _ADCON0 003EF8                                  _ADCON1 003EF9  
                                _ADCON2 003EFA                                  _ADCON3 003EFB  
                        _start_adc_scan A5CC                                  _ADLTHH 003EDF  
                                _ADLTHL 003EDE                                  _ADPREH 003EF7  
                                _ADPREL 003EF6                                  _DMA1PR 0039F3  
                                _DMA2PR 0039F4                                  _ADSTAT 003EFC  
                                _ADUTHH 003EE1                                  _ADUTHL 003EE0  
                    _PWM8_LoadDutyValue ABDA                                  _ANSELA 003A40  
                                _ANSELB 003A50                                  _ANSELC 003A60  
                                _ANSELD 003A70                                  _ANSELE 003A80  
                                _ANSELF 003A90                      ?_UART2_tx_vect_isr 0001  
                                _U1CON0 003DF2                                  _U1CON1 003DF3  
                                _U1CON2 003DF4                                  _T3GATE 003FA8  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _T3GCON 003FA7                                  _U2CON0 003DDA  
                                _U2CON1 003DDB                                  _U1BRGL 003DF5  
                                _U2CON2 003DDC                                  _U2BRGH 003DDE  
                                _U2FIFO 003DDF                                  _U2BRGL 003DDD  
                                _T5GATE 003F9C                                  _T5GCON 003F9B  
                                _MAINPR 0039F2                                  _RC3PPS 003A13  
                                _RD1PPS 003A19                                  i1l1017 A854  
                                _RB6PPS 003A0E                                  i1l1205 890E  
                  _start_switch_handler B46E                                  _RC5PPS 003A15  
                                _ODCONA 003A42                                  _ODCONB 003A52  
                                _ODCONC 003A62                                  _RC6PPS 003A16  
                                _ODCOND 003A72                                  _ODCONE 003A82  
                                _ODCONF 003A92                 __end_of_TMR3_Initialize AB96  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright B668                                  _SCANPR 0039F7  
                                _IVTADH 00389E                                  _IVTADL 00389D  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u902_20 AEDE  
                                u902_26 AEE0                                  u930_28 8C4C  
                                u933_20 8C6C                                  u933_21 8C66  
                                u937_24 8D4C                                  u937_25 8D48  
                  __size_of_hid_display 0102                                  u963_48 B438  
                                u955_48 B414                                  u957_28 B3A8  
                                u966_28 B3CC                                  u995_44 A40C  
                                u995_45 A406                        __end_of___xxtofl 7BB8  
 __end_of_ADCC_DischargeSampleCapacitor B6D6  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor B6CE                __end_of_send_lcd_cmd_dma A8B4  
                       _TMR3_WriteTimer ACDC                     ??_UART2_tx_vect_isr 0006  
             __end_of_UART2_rx_vect_isr B350              __size_of_SPI1_Exchange8bit 001E  
                __size_of_DMA1_DMAA_ISR 000A                          __CFG_XINST$OFF 000000  
                     _CLKREF_Initialize B696                        _UART2_Initialize A6F4  
                                _WaitMs AE02                         _conv_raw_result 4EB0  
                          _CCPTMRS1bits 003F5F    __size_of_ADCC_SetADIInterruptHandler 0028  
                                ___flge 86E0                                  ___fleq 99B4  
                     _ADCC_ThresholdISR A4FC                          __CFG_STVREN$ON 000000  
                        _ringBufS_flush A064                                  _efgtoa 0000  
                                _floorf 5F38                      ?_ADCC_ThresholdISR 0001  
                                _memset 65E4                    __size_of_help_button 0038  
                                clear_0 9392                                  clear_1 93A6  
                                clear_2 93B8                                  clear_3 93C4  
                                clear_4 93D0                                  clear_5 93DC  
                                clear_6 93E8                                  clear_7 93F4  
             __end_of_port_data_dma_ptr B6AA                                  _printf A630  
                    _eaDogM_WriteString 9DF2                                  _strcpy 98E0  
                             ?_ADCC_ISR 0001                                  _strlen 9E98  
                    __size_of_TimerDone 0028                            __pdataBIGRAM 05FF  
                       _ADCC_Initialize A490                          _PMD_Initialize B604  
            __size_of_update_adc_result 003A               __end_of_UART2_tx_vect_isr B328  
                                lltemp0 0028                                  lltemp1 0030  
                                lltemp2 0038                                  lltemp3 0040  
                   ??_ADCC_ThresholdISR 0001                  __end_of_start_adc_scan A630  
                          __mediumconst FA7A                                  preinc2 003FDC  
                __size_of_init_port_dma 0030                                  tblptrh 003FF7  
                                tblptrl 003FF6                                  tblptru 003FF8  
                      __end_of_wdtdelay A7AC                        __end_of_spinners 98E0  
                      __end_of_vfprintf 9D48                              _StartTimer AC1C  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize AB50  
                     _SYSTEM_Initialize A9A6                              __accesstop 0060  
               __end_of__initialization 9406                               ?_INT0_ISR 0001  
                             ?_INT1_ISR 0001                    __end_of_display_help B6EE  
                  __end_of_display_info B6E6               __end_of_CLKREF_Initialize B6A0  
                         ___rparam_used 000001              __size_of_UART1_rx_vect_isr 0028  
                       _TMR5_WriteTimer AC9C                   _set_temp_display_help B64A  
                      _clear_hid_pflags B374                   __end_of_TMR3_CallBack B404  
             __end_of_ADCC_ThresholdISR A566                      __size_of_calc_bsoc 0732  
                __end_of_ringBufS_flush A0F6                          __pcstackCOMRAM 0001  
                            ___inthi_sp 1142                              ___intlo_sp 18A1  
                          __pidataBANK0 ADCC                            __pidataBANK1 9618  
                          __pidataBANK2 9A78             __size_of_send_port_data_dma 0052  
                         __end_of_fabsf 9C9C                               ?_TMR3_ISR 0001  
                             ?_TMR5_ISR 0001                               ?_TMR6_ISR 0001  
                        ivt0x8_undefint 00AC                           __end_of_fputc 8FC2  
                         __end_of_fputs 9FD2                           __end_of_srand AEA2  
                 __end_of_TMR5_CallBack B3E0                           __end_of_putch B576  
               __end_of_PWM8_Initialize B5EE                 __end_of_TMR6_Initialize B0A6  
                     _adc_int_t_handler A3A8                  __end_of_PMD_Initialize B618  
                            __end_of_bp FC5B                              ??_ADCC_ISR 0001  
                 __end_of_TMR6_CallBack B44C             __size_of_EXT_INT_Initialize 0034  
                __size_of_calc_ror_data 0174                           _DMA1_DMAA_ISR B6B8  
                 TMR3_ISR@CountCallBack 00C2                          _clear_adc_scan B6F6  
                    __size_of_hid_input 0090                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 00B7               __end_of_SYSTEM_Initialize A9F0  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
               __end_of_TMR3_WriteTimer AD1C                              __pbssBANK0 0060  
                            __pbssBANK1 01F7                              __pbssBANK2 02BD  
                            __pbssBANK3 0300                              __pbssBANK4 0400  
                            __pbssBANK5 0500                              _check_help 77A2  
               __end_of_conv_raw_result 535C                      __size_of_esr_check 02C0  
                 _INT0_InterruptHandler 00BD                              ??_INT0_ISR 0001  
                            ??_INT1_ISR 0007                       __end_of_TimerDone B146  
                      _DMA1_DMADCNT_ISR B6AC                      __size_of_init_bsoc 0170  
            __size_of_UART2_rx_vect_isr 0028                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01BC                           _init_port_dma AF0A  
                 __end_of_wait_lcd_done B540        __end_of_TMR3_SetInterruptHandler B236  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler B1E6  
                            ??_TMR3_ISR 000F                 __end_of_ADCC_Initialize A4FA  
                            ??_TMR5_ISR 000B               __end_of_adc_int_t_handler A426  
                            ??_TMR6_ISR 0006                                 _ADFLTRH 003EE7  
                               _ADFLTRL 003EE6                                 _DMA1DSA 003BF0  
                               _DMA2DSA 003BD0                                 _DMA1DSZ 003BEE  
                               _DMA2DSZ 003BCE                                 _DMA1SSA 003BF9  
                               _DMA2SSA 003BD9    __end_of_ADCC_SetADTIInterruptHandler B2AE  
 __size_of_ADCC_SetADTIInterruptHandler 0028            _ADCC_SetADTIInterruptHandler B286  
                               _DMA1SSZ 003BF7                                 _DMA2SSZ 003BD7  
            __size_of_port_data_dma_ptr 000A                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR B540  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan B6FC                          ?_DMA1_DMAA_ISR 0001  
                      _DMA1_DMASCNT_ISR B688                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001E                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               u1192_20 46D0                                 u1194_20 4778  
                               u1196_28 B3F0                                 _INT0PPS 003AC0  
                   __CFG_PWRTS$PWRT_OFF 000000                                 _INT1PPS 003AC1  
                          ?_Default_ISR 0001              __size_of_UART2_tx_vect_isr 0028  
                               _U1RXPPS 003AE5                                 _U2RXPPS 003AE8  
                               _OSCCON1 0039D9                                 _OSCCON3 0039DB  
                               _IVTLOCK 003FD4                      __size_of_vfpfcnvrt 0FAC  
                               _SPI1CLK 003D1C                                 _SPI1RXB 003D10  
                     __end_of_calc_bsoc 4936                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                            _get_switch AFF8                      __size_of_start_lcd 0006  
               __end_of_TMR5_WriteTimer ACDC                 __size_of_switch_handler 013C  
                    __size_of_stop_bsoc 0006              __end_of_set_load_relay_one B64A  
            __end_of_set_load_relay_two B63A       __size_of_INT0_SetInterruptHandler 0028  
            __size_of_CLKREF_Initialize 000A                           _calc_ror_data 828A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 006A                           _mode_lamp_dim B592  
                               __Lparam 0000                __end_of_UART1_Initialize AB0A  
                     __end_of_hid_input A218                         __size_of_WaitMs 0036  
                       __size_of___flge 0162                         __size_of___fleq 00C4  
                               ___aodiv 6E4E                                 ___fladd 3A48  
                               ___aomod 7342                                 ___fldiv 4936  
                               ___awdiv 89A6                                 ___flneg A9F0  
                               ___awmod 8FC2                                 ___flmul 321E  
                               ___flsub AA7E                                 ___fltol 83FE  
                               ___lodiv 810A                                 ___lomod 8AF4  
             __end_of_UART1_Receive_ISR B55C                         __size_of_efgtoa 1244  
                       __size_of_floorf 036C                    __end_of_init_display 97FA  
                               __pcinit 92FE                __end_of_mode_lamp_bright B676  
                       __size_of_memset 02EC                __size_of_adc_int_handler 0002  
                   _eaDogM_WriteCommand B65A                                 __ramtop 2000  
                               __ptext0 1244                                 __ptext1 B350  
                               __ptext2 B46E                                 __ptext3 AE6E  
                               __ptext4 97FA                                 __ptext5 AF0A  
                               __ptext6 9710                                 __ptext7 B0A6  
                               __ptext8 B0CE                                 __ptext9 B48E  
                     __end_of_esr_check 6B90                       _UART2_Receive_ISR B506  
                       __size_of_printf 0062                         __CFG_WRTAPP$OFF 000000  
                       __size_of_strcpy 00D4                         __size_of_strlen 00A2  
                 _OSCILLATOR_Initialize B5EE                                 us614999 70B8  
                               us710999 8274                            __size_of_abs 0046  
                               us625999 7570                                 us715999 8C24  
                          __size_of_pad 0114                       __end_of_init_bsoc 86E0  
                               _isalpha AB96                                 _isdigit AF9A  
                               _ivln2_h FC5B                               _T3CONbits 003FA6  
                               _mode_sw 0056                       __end_of_lp_filter 7F74  
                               _islower AF3A                                 _isspace A8B4  
                       __CFG_WRTSAF$OFF 000000                               _T5CONbits 003F9A  
              __end_of_UART2_Initialize A752                                 _isupper AF6A  
            __size_of_SYSTEM_Initialize 004A                                 _sprintf 940C  
                               _tolower A324                   __size_of_display_help 0008  
                               _utctime 0096                   __size_of_display_info 0008  
                               _strncmp 7582                                 _toupper A2A0  
                  end_of_initialization 9406               __size_of_convert_adc_data 00B8  
                    _check_enter_button AC5C                               i1u1205_20 8904  
                             i2u1000_48 A532                               i2u1000_49 A546  
   __end_of_UART2_SetRxInterruptHandler B196             _UART2_SetRxInterruptHandler B16E  
                             i2u1002_48 B2EC                               i2u1004_48 B314  
                             i2u1006_48 B33C                       __end_of_set_vterm B4CA  
                     __end_of_vfpfcnvrt 321E                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 007E                     __size_of_StartTimer 0040  
                     __end_of_start_lcd B708               __end_of_UART2_Receive_ISR B524  
                        wdtdelay@dcount 009A                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 0007                   _INT1_InterruptHandler 00BA  
                             _PORTBbits 003FCB                       __end_of_stop_bsoc B70E  
              _TMR3_SetInterruptHandler B20E                               _PORTFbits 003FCF  
              _TMR6_SetInterruptHandler B1BE                            _display_help B6E6  
                 _TMR5_InterruptHandler 00A5                            _display_info B6DE  
  __size_of_UART2_SetTxInterruptHandler 0028                __end_of_clear_hid_pflags B398  
                     __size_of_ADCC_ISR 002C     __end_of_ADCC_SetADIInterruptHandler B2D6  
           _ADCC_SetADIInterruptHandler B2AE                              _update_lcd 91EE  
                       _calc_model_data 5B96                  __size_of_ringBufS_init 0028  
                      __CFG_FEXTOSC$ECH 000000                              _static_soc B350  
                       _DMA1_Initialize A426                              _start_bsoc B44C  
                       _SPI1_Initialize B5C2                   __end_of_get_vterm_ptr AFF8  
                     __size_of_INT0_ISR 000E                       __size_of_INT1_ISR 003E  
                        __end_of_WaitMs AE38            __end_of_INTERRUPT_Initialize A5CC  
                            _vterm_dump 8D70                          __end_of___flge 8842  
                        __end_of___fleq 9A78    __end_of_INT0_DefaultInterruptHandler B71C  
 __size_of_INT0_DefaultInterruptHandler 0002            _INT0_DefaultInterruptHandler B71A  
            __size_of_UART1_Receive_ISR 001C                         _DMA2_Initialize A7AC  
                         __pidataBIGRAM 7BB8                          __end_of_efgtoa 1244  
                     __size_of_TMR3_ISR 0162                       __size_of_TMR5_ISR 005A  
                     __size_of_TMR6_ISR 001A                     __size_of_check_help 0212  
                        __end_of_floorf 62A4             __size_of_UART2_Transmit_ISR 002C  
                            floorf@F524 007A                          __end_of_memset 68D0  
                        __end_of_printf A692                __end_of_DMA1_DMADCNT_ISR B6B6  
           __size_of_PWM8_LoadDutyValue 0042                   __end_of_INT0_CallBack B428  
                        __end_of_strcpy 99B4                          __end_of_strlen 9F3A  
                   start_initialization 92FE    __end_of_TMR5_DefaultInterruptHandler AF0A  
 __size_of_TMR5_DefaultInterruptHandler 0034            _TMR5_DefaultInterruptHandler AED6  
       __size_of_PIN_MANAGER_Initialize 0092                             __end_of_abs AA7E  
                 __end_of_INT1_CallBack B3BC               __size_of_set_display_info 001E  
                           __end_of_pad 91EE                    __size_of_Default_ISR 0006  
                  __end_of_send_lcd_cmd B0F6                          _switch_handler 8C34  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 006C                   __end_of___fpclassifyf 810A  
                         _uart2RxBuffer 0500                __end_of_DMA1_DMASCNT_ISR B696  
                         _uart2TxBuffer 0354                          _DMA1_DMAOR_ISR B6C4  
                   __end_of_hid_display 9618              __end_of_send_port_data_dma A958  
                      __CFG_LPBOREN$OFF 000000                   __size_of_init_display 00EA  
           __size_of_eaDogM_WriteString 00A6                               _TimerDone B11E  
                         _ringBufS_init B0F6                             __pdataBANK0 00C4  
                           __pdataBANK1 0100                             __pdataBANK2 0200  
            __size_of_UART2_Receive_ISR 001E                     __size_of_get_switch 002C  
            __end_of_EXT_INT_Initialize AED6                 __end_of_calc_model_data 5F38  
                   __end_of_help_button ADCC         __end_of_eaDogM_WriteStringAtPos AE6E  
                   __end_of_BVSOC_TABLE FB4B                    calc_model_data@bcror 008E  
                           __pbssBIGRAM 07FF                 __end_of_DMA1_Initialize A490  
                  calc_model_data@bvror 0092                             __pbssCOMRAM 0048  
      __end_of_INT0_SetInterruptHandler B286                __size_of_TMR2_Initialize 0018  
                __size_of_TMR3_CallBack 0024                  __end_of_switch_handler 8D70  
                     __size_of___xxtofl 0204                 __end_of_SPI1_Initialize B5D8  
              _UART1_RxInterruptHandler 00B1                _UART2_TxInterruptHandler 00B4  
                             __end_of_T FBDB                        _convert_adc_data 9B36  
                             _calc_bsoc 4204               __size_of_ringBufS_put_dma 00AA  
                          _init_display 9710                  __end_of_DMA1_DMAOR_ISR B6CE  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 00A8  
                    calc_ror_data@bcror 0086                  __size_of_TMR6_CallBack 0024  
               __end_of_DMA2_Initialize A806                      calc_ror_data@bvror 008A  
                _PIN_MANAGER_Initialize A0F6                __size_of_TMR3_Initialize 0046  
                  __end_of_wait_lcd_set B702                           __pmediumconst FA7A  
                             __ptext100 5B96                               __ptext101 B708  
                             __ptext110 B16E                               __ptext102 B44C  
                             __ptext111 AAC4                               __ptext103 7DB8  
                             __ptext120 B5C2                               __ptext112 B196  
                             __ptext104 AA7E                               __ptext121 B5D8  
                             __ptext113 B07C                               __ptext105 3A48  
                             __ptext130 A7AC                               __ptext122 B604  
                             __ptext114 B1BE                               __ptext106 321E  
                             __ptext131 A426                               __ptext123 A0F6  
                             __ptext115 AB0A                               __ptext107 A9A6  
                             __ptext140 A808                               __ptext132 B696  
                             __ptext124 B5EE                               __ptext116 B1E6  
                             __ptext108 A6F4                               __ptext141 AC9C  
                             __ptext133 A490                               __ptext125 A566  
                             __ptext117 AB50                               __ptext109 B146  
                             __ptext150 B6A0                               __ptext142 B3BC  
                             __ptext134 B286                               __ptext126 B6EE  
                             __ptext118 B20E                               __ptext151 B678  
                             __ptext143 AED6                               __ptext135 B2AE  
                             __ptext127 AEA2                               __ptext119 B5AA  
                             __ptext160 B2D8                               __ptext152 B404  
                             __ptext144 8844                               __ptext136 AD1C  
                             __ptext128 B236                               __ptext161 B540  
                             __ptext153 B71A                               __ptext145 ACDC  
                             __ptext137 B398                               __ptext129 B25E  
                             __ptext170 B6AC                               __ptext162 B300  
                             __ptext154 B710                               __ptext146 B3E0  
                             __ptext138 B716                               __ptext171 B6B8  
                             __ptext163 B050                               __ptext155 B024  
                             __ptext147 B718                               __ptext139 8C34  
                             __ptext172 B6C4                               __ptext164 B328  
                             __ptext156 A3A8                               __ptext148 4204  
                             __ptext173 0000                               __ptext165 B506  
                             __ptext157 B71C                               __ptext149 A906  
                             __ptext166 B578                               __ptext158 B71E  
                             __ptext167 B428                               __ptext159 A4FC  
                             __ptext168 A958                               __ptext169 B688  
                             _hid_input A188                      __end_of_StartTimer AC5C  
                    _set_load_relay_one B63A                      _set_load_relay_two B62A  
                     __size_of_wdtdelay 005A                       __size_of_spinners 00E6  
                     __size_of_vfprintf 00AC                                _ADCC_ISR B024  
                __CFG_BBSIZE$BBSIZE_512 000000                               fabsf@F463 007E  
                              _DMA1CON0 003BFC                                _DMA1CON1 003BFD  
                              _DMA1AIRQ 003BFE                                _DMA2CON0 003BDC  
                              _DMA2CON1 003BDD                                _DMA2AIRQ 003BDE  
                              _DMA1SIRQ 003BFF                                _DMA2SIRQ 003BDF  
                             _esr_check 68D0                 __size_of_get_raw_result 001E  
                        __size_of_fabsf 00AE                               _init_bsoc 8570  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 7DB8                             _hid_display 9516  
                        __size_of_srand 0034                          __size_of_putch 001A  
                  _INTERRUPT_Initialize A566                                _T6CLKCON 003F96  
         __size_of_start_switch_handler 0020                         ?_DMA1_DMAOR_ISR 0001  
                              _INT0_ISR B678                                _INT1_ISR AD1C  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 02E6  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0443                               _ring_buf2 0400  
                              _PIR1bits 0039A1                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                           _TMR3_CallBack B3E0  
                              _PIR5bits 0039A5                                _PIR6bits 0039A6  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
              __size_of_TMR5_Initialize 0046                                i2u998_48 B03C  
                             _set_vterm B4AC                     __size_of_update_lcd 0110  
                           _help_button AD94                                _TMR3_ISR 8844  
                           _BVSOC_TABLE FA7B                                _TMR5_ISR A808  
                              _TMR6_ISR B578                               _port_data 05FF  
                   __size_of_static_soc 0024                               _vfpfcnvrt 2272  
                          _SPI1INTFbits 003D1A                     __size_of_start_bsoc 0022  
                         _TMR5_CallBack B3BC                              _ADCON0bits 003EF8  
                    __end_of_check_help 79B4                               _start_lcd B702  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack B428                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                               _stop_bsoc B708  
                      _set_display_info B4CA                __size_of_PWM8_Initialize 0016  
              __size_of_TMR6_Initialize 002A                             _INTCON0bits 003FD2  
                             copy_data0 9312                               copy_data1 9338  
                             copy_data2 935A                               copy_data3 937C  
              _INT0_SetInterruptHandler B25E                     __size_of_vterm_dump 012E  
   __end_of_UART2_SetTxInterruptHandler B16E             _UART2_SetTxInterruptHandler B146  
                          _uart1RxCount 005D                            _uart2RxCount 0057  
                              __Hrparam 0000        __size_of_eaDogM_WriteStringAtPos 0036  
               __CFG_RSTOSC$EXTOSC_4PLL 000000                __size_of_TMR3_WriteTimer 0040  
                              __Lrparam 0000                 __size_of_check_adc_scan 0008  
                    __CFG_BOREN$SBORDIS 000000                __size_of_conv_raw_result 04AC  
                         _wait_lcd_done B524                            _send_lcd_cmd B0CE  
                      __size_of___aodiv 0280                        __size_of___fladd 07BC  
                      __size_of___aomod 0240                         _adc_int_handler B71E  
                      __size_of___fldiv 057A                        __size_of___awdiv 014E  
                      __size_of___flneg 0048                        __size_of___awmod 0118  
                      __size_of___flmul 082A                        __size_of___flsub 0046  
                      __size_of___fltol 0172                        __size_of___lodiv 0180  
                      __size_of___lomod 0140                      __end_of_get_switch B024  
                 __end_of_DMA1_DMAA_ISR B6C2                      ___fpclassifyf@F463 0082  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 0300  
                              ___xxtofl 79B4                       ?_DMA1_DMADCNT_ISR 0001  
           __size_of_check_enter_button 0040                __size_of_ADCC_Initialize 006A  
           __end_of_eaDogM_WriteCommand B668                        __size_of_isalpha 0044  
                      __size_of_isdigit 0030                                __pivt0x8 0008  
                      __size_of_islower 0030                        __size_of_isspace 0052  
                    ??_DMA1_DMADCNT_ISR 0007                                __ptext10 B0F6  
                              __ptext11 8570                                __ptext20 B6CE  
                              __ptext12 9FD2                                __ptext21 B6F6  
                              __ptext13 9516                                __ptext30 940C  
                              __ptext22 B6D6                                __ptext14 A188  
                              __ptext31 AFCA                                __ptext23 B62A  
                              __ptext15 AFF8                                __ptext40 B702  
                              __ptext32 AE02                                __ptext24 B63A  
                              __ptext16 68D0                                __ptext41 A064  
                              __ptext33 91EE                                __ptext25 B65A  
                              __ptext17 AD5A                                __ptext50 62A4  
                              __ptext42 65E4                                __ptext34 AE38  
                              __ptext26 9B36                                __ptext18 A5CC  
                              __ptext51 8AF4                                __ptext43 A630  
                              __ptext35 A862                                __ptext27 B374  
                              __ptext19 B618                                __ptext60 7F74  
                              __ptext52 810A                                __ptext44 9C9C  
                              __ptext36 B524                                __ptext28 77A2  
                              __ptext61 83FE                                __ptext53 7582  
                              __ptext45 2272                                __ptext37 A752  
                              __ptext29 8D70                                __ptext70 A218  
                              __ptext62 A9F0                                __ptext54 6B90  
                              __ptext46 57DC                                __ptext38 9DF2  
                              __ptext71 90DA                                __ptext63 99B4  
                              __ptext55 0000                                __ptext47 A2A0  
                              __ptext39 B6FC                                __ptext80 B4AC  
                              __ptext72 9E98                                __ptext64 8FC2  
                              __ptext56 A324                                __ptext48 AF3A  
                              __ptext81 B64A                                __ptext73 9F3A  
                              __ptext65 89A6                                __ptext57 AF6A  
                              __ptext49 AB96                                __ptext90 B6E6  
                              __ptext82 B4CA                                __ptext74 8E9E  
                              __ptext66 535C                                __ptext58 98E0  
                              __ptext91 AC5C                                __ptext83 B592  
                              __ptext75 B55C                                __ptext67 AA38  
                              __ptext59 5F38                                __ptext92 828A  
                              __ptext84 B668                                __ptext76 9D48  
                              __ptext68 7342                                __ptext93 9BEE  
                              __ptext85 ABDA                                __ptext77 70CE  
                              __ptext69 6E4E                                __ptext94 4EB0  
                              __ptext86 AD94                                __ptext78 A8B4  
                              __ptext95 A692                                __ptext87 B11E  
                              __ptext79 AF9A                                __ptext96 B4E8  
                              __ptext88 AC1C                                __ptext97 79B4  
                              __ptext89 B6DE                                __ptext98 4936  
                              __ptext99 86E0                        __size_of_isupper 0030  
                              us1116999 6BA2                                us1047999 5376  
                              us1128999 630A                        __size_of_sprintf 010A  
                      __size_of_tolower 0084                                us1137999 585C  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 9D48                    __end_of_Volts_to_SOC A064  
                         __size_of_atoi 0274                           __size_of_ctoa 0088  
                         __size_of_main 102E                           __size_of_dtoa 0480  
                         __size_of_nanf 0062                   __size_of_wait_lcd_set 0006  
                         __size_of_stoa 02BE                           __size_of_utoa 0340  
                         __size_of_xtoa 03BA                    __CFG_WDTCWS$WDTCWS_7 000000  
                     ?_DMA1_DMASCNT_ISR 0001                   __end_of_init_port_dma AF3A  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 00AE                               stoa@F1166 00EC  
                    ??_DMA1_DMASCNT_ISR 0007            __end_of_ADCC_StartConversion B62A  
                              _spi_link 0060                                _wdtdelay A752  
            __end_of_UART2_Transmit_ISR B07C                                _spinners 97FA  
                              _vfprintf 9C9C                __end_of_convert_adc_data 9BEE  
            __end_of_PWM8_LoadDutyValue AC1C    __end_of_TMR3_DefaultInterruptHandler B71A  
 __size_of_TMR3_DefaultInterruptHandler 0002            _TMR3_DefaultInterruptHandler B718  
  __end_of_INT1_DefaultInterruptHandler B718   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler B716                      _send_port_data_dma A906  
                         ??_Default_ISR 0001                             _uart1RxHead 005F  
                __size_of_get_vterm_ptr 002E                             _uart2RxHead 0059  
                           _uart1RxTail 005E                          _get_raw_result B4E8  
                           _uart2TxHead 005C                             _uart2RxTail 0058  
                             spinners@s 0074                             _uart2TxTail 005B  
                          _wait_lcd_set B6FC                        Volts_to_SOC@slot 0055  
                    _EXT_INT_Initialize AEA2    __end_of_TMR6_DefaultInterruptHandler A9A6  
 __size_of_TMR6_DefaultInterruptHandler 004E            _TMR6_DefaultInterruptHandler A958  
  __end_of_ADCC_DefaultInterruptHandler B71E   __size_of_ADCC_DefaultInterruptHandler 0002  
          _ADCC_DefaultInterruptHandler B71C                                intlevel1 0000  
                              intlevel2 0000                       _send_lcd_cmd_long B0A6  
        __size_of_set_temp_display_help 0010           __end_of_set_temp_display_help B65A  
                 __end_of_calc_ror_data 83FE                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 9E98                   __end_of_mode_lamp_dim B5AA  
               __end_of_adc_int_handler B720                  __size_of_INT0_CallBack 0024  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0024                      __end_of_update_lcd 92FE  
                _uart2TxBufferRemaining 005A                      __end_of_static_soc B374  
                    __end_of_start_bsoc B46E                          _FVR_Initialize B6EE  
                __end_of_get_raw_result B506                        _send_lcd_cmd_dma A862  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0050  
      __end_of_INT1_SetInterruptHandler B25E               __size_of_UART1_Initialize 0046  
                      ??_DMA1_DMAOR_ISR 0007               __end_of_send_lcd_cmd_long B0CE  
               __size_of_start_adc_scan 0064                     __end_of_Default_ISR B716  
        __end_of_PIN_MANAGER_Initialize A188               __size_of_mode_lamp_bright 000E  
                    __end_of_vterm_dump 8E9E                 _eaDogM_WriteStringAtPos AE38  
                         _get_vterm_ptr AFCA                          _check_adc_scan B6D6  
             __size_of_UART2_Initialize 005E  
