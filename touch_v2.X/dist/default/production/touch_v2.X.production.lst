

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Apr  4 00:26:58 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    24                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    25                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    26                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    27                           	psect	text0,global,reloc=2,class=CODE,delta=1
    28                           	psect	text1,global,reloc=2,class=CODE,delta=1
    29                           	psect	text2,global,reloc=2,class=CODE,delta=1
    30                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text5,global,reloc=2,class=CODE,delta=1
    33                           	psect	text6,global,reloc=2,class=CODE,delta=1
    34                           	psect	text7,global,reloc=2,class=CODE,delta=1
    35                           	psect	text8,global,reloc=2,class=CODE,delta=1
    36                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text11,global,reloc=2,class=CODE,delta=1
    39                           	psect	text12,global,reloc=2,class=CODE,delta=1
    40                           	psect	text13,global,reloc=2,class=CODE,delta=1
    41                           	psect	text14,global,reloc=2,class=CODE,delta=1
    42                           	psect	text15,global,reloc=2,class=CODE,delta=1
    43                           	psect	text16,global,reloc=2,class=CODE,delta=1
    44                           	psect	text17,global,reloc=2,class=CODE,delta=1
    45                           	psect	text18,global,reloc=2,class=CODE,delta=1
    46                           	psect	text19,global,reloc=2,class=CODE,delta=1
    47                           	psect	text20,global,reloc=2,class=CODE,delta=1,inline
    48                           	psect	text21,global,reloc=2,class=CODE,delta=1,inline
    49                           	psect	text22,global,reloc=2,class=CODE,delta=1
    50                           	psect	text23,global,reloc=2,class=CODE,delta=1
    51                           	psect	text24,global,reloc=2,class=CODE,delta=1
    52                           	psect	text25,global,reloc=2,class=CODE,delta=1
    53                           	psect	text26,global,reloc=2,class=CODE,delta=1
    54                           	psect	text27,global,reloc=2,class=CODE,delta=1
    55                           	psect	text28,global,reloc=2,class=CODE,delta=1
    56                           	psect	text29,global,reloc=2,class=CODE,delta=1
    57                           	psect	text30,global,reloc=2,class=CODE,delta=1
    58                           	psect	text31,global,reloc=2,class=CODE,delta=1
    59                           	psect	text32,global,reloc=2,class=CODE,delta=1
    60                           	psect	text33,global,reloc=2,class=CODE,delta=1
    61                           	psect	text34,global,reloc=2,class=CODE,delta=1
    62                           	psect	text35,global,reloc=2,class=CODE,delta=1
    63                           	psect	text36,global,reloc=2,class=CODE,delta=1
    64                           	psect	text37,global,reloc=2,class=CODE,delta=1
    65                           	psect	text38,global,reloc=2,class=CODE,delta=1
    66                           	psect	text39,global,reloc=2,class=CODE,delta=1
    67                           	psect	text40,global,reloc=2,class=CODE,delta=1
    68                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text43,global,reloc=2,class=CODE,delta=1
    71                           	psect	text44,global,reloc=2,class=CODE,delta=1
    72                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text46,global,reloc=2,class=CODE,delta=1
    74                           	psect	text47,global,reloc=2,class=CODE,delta=1
    75                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text51,global,reloc=2,class=CODE,delta=1
    79                           	psect	text52,global,reloc=2,class=CODE,delta=1
    80                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    81                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    82                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    83                           	psect	text56,global,reloc=2,class=CODE,delta=1
    84                           	psect	text57,global,reloc=2,class=CODE,delta=1
    85                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    86                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    87                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=2
    88                           	psect	text61,global,reloc=2,class=CODE,delta=1
    89                           	psect	text62,global,reloc=2,class=CODE,delta=1
    90                           	psect	text63,global,reloc=2,class=CODE,delta=1
    91                           	psect	text64,global,reloc=2,class=CODE,delta=1
    92                           	psect	text65,global,reloc=2,class=CODE,delta=1
    93                           	psect	text66,global,reloc=2,class=CODE,delta=1
    94                           	psect	text67,global,reloc=2,class=CODE,delta=1
    95                           	psect	text68,global,reloc=2,class=CODE,delta=1
    96                           	psect	text69,global,reloc=2,class=CODE,delta=1
    97                           	psect	text70,global,reloc=2,class=CODE,delta=1
    98                           	psect	text71,global,reloc=2,class=CODE,delta=1
    99                           	psect	text72,global,reloc=2,class=CODE,delta=1
   100                           	psect	text73,global,reloc=2,class=CODE,delta=1
   101                           	psect	text74,global,reloc=2,class=CODE,delta=1
   102                           	psect	text75,global,reloc=2,class=CODE,delta=1
   103                           	psect	text76,global,reloc=2,class=CODE,delta=1
   104                           	psect	text77,global,reloc=2,class=CODE,delta=1
   105                           	psect	text78,global,reloc=2,class=CODE,delta=1
   106                           	psect	text79,global,reloc=2,class=CODE,delta=1
   107                           	psect	text80,global,reloc=2,class=CODE,delta=1
   108                           	psect	text81,global,reloc=2,class=CODE,delta=1
   109                           	psect	text82,global,reloc=2,class=CODE,delta=1
   110                           	psect	text83,global,reloc=2,class=CODE,delta=1
   111                           	psect	text84,global,reloc=2,class=CODE,delta=1
   112                           	psect	text85,global,reloc=2,class=CODE,delta=1
   113                           	psect	text86,global,reloc=2,class=CODE,delta=1
   114                           	psect	text87,global,reloc=2,class=CODE,delta=1
   115                           	psect	text88,global,reloc=4,class=CODE,delta=1
   116                           	psect	text89,global,reloc=2,class=CODE,delta=1
   117                           	psect	text90,global,reloc=2,class=CODE,delta=1
   118                           	psect	text91,global,reloc=4,class=CODE,delta=1
   119                           	psect	text92,global,reloc=2,class=CODE,delta=1
   120                           	psect	text93,global,reloc=2,class=CODE,delta=1
   121                           	psect	text94,global,reloc=4,class=CODE,delta=1
   122                           	psect	text95,global,reloc=2,class=CODE,delta=1
   123                           	psect	text96,global,reloc=2,class=CODE,delta=1
   124                           	psect	text97,global,reloc=4,class=CODE,delta=1
   125                           	psect	text98,global,reloc=4,class=CODE,delta=1
   126                           	psect	text99,global,reloc=2,class=CODE,delta=1
   127                           	psect	text100,global,reloc=4,class=CODE,delta=1
   128                           	psect	text101,global,reloc=2,class=CODE,delta=1
   129                           	psect	text102,global,reloc=4,class=CODE,delta=1
   130                           	psect	text103,global,reloc=2,class=CODE,delta=1
   131                           	psect	text104,global,reloc=4,class=CODE,delta=1
   132                           	psect	text105,global,reloc=2,class=CODE,delta=1
   133                           	psect	text106,global,reloc=4,class=CODE,delta=1
   134                           	psect	text107,global,reloc=2,class=CODE,delta=1
   135                           	psect	text108,global,reloc=4,class=CODE,delta=1
   136                           	psect	text109,global,reloc=2,class=CODE,delta=1
   137                           	psect	text110,global,reloc=2,class=CODE,delta=1
   138                           	psect	text111,global,reloc=4,class=CODE,delta=1
   139                           	psect	text112,global,reloc=4,class=CODE,delta=1
   140                           	psect	text113,global,reloc=4,class=CODE,delta=1
   141                           	psect	text114,global,reloc=4,class=CODE,delta=1
   142                           	psect	text115,global,reloc=4,class=CODE,delta=1
   143                           	psect	text116,global,reloc=2,class=CODE,delta=1
   144                           	psect	text117,global,reloc=2,class=CODE,delta=1
   145                           	psect	text118,global,reloc=2,class=CODE,delta=1
   146                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   147                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   148                           	psect	text119,global,reloc=2,class=CODE,delta=1
   149                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   150                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   151  0000                     
   152                           ; Version 2.05
   153                           ; Generated 20/12/2018 GMT
   154                           ; 
   155                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   156                           ; All rights reserved.
   157                           ; 
   158                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   159                           ; 
   160                           ; Redistribution and use in source and binary forms, with or without modification, are
   161                           ; permitted provided that the following conditions are met:
   162                           ; 
   163                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   164                           ;        conditions and the following disclaimer.
   165                           ; 
   166                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   167                           ;        of conditions and the following disclaimer in the documentation and/or other
   168                           ;        materials provided with the distribution.
   169                           ; 
   170                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   171                           ;        software without specific prior written permission.
   172                           ; 
   173                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   174                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   175                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   176                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   177                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   178                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   179                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   180                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   181                           ; 
   182                           ; 
   183                           ; Code-generator required, PIC18F57K42 Definitions
   184                           ; 
   185                           ; SFR Addresses
   186  0000                     
   187 ;;_mode	offset	0
   188 ;;_rxData	offset	0
   189 ;;_t_link	offset=-1 (param)
   190 ;;_stream	offset=-6 (param)
   191 ;;_function	offset=-7 (param)
   192 ;;_s	offset=-2 (param)
   193 ;;_f	offset	0
   194 ;;_ap	offset	5
   195 ;;_s	offset=-2 (param)
   196 ;;_fmt	offset=-3 (param)
   197 ;;_rxData	offset	0
   198 ;;_r_link	offset=-1 (param)
   199 ;;_rxData	offset	0
   200 ;;_m_link	offset=-1 (param)
   201 ;;_k	offset	0
   202 ;;_checksum	offset	2
   203 ;;_i	offset	4
   204 ;;_byte_block	offset=-2 (param)
   205 ;;_length	offset=-3 (param)
   206 ;;_fake	offset=-4 (param)
   207 ;;_s_uart	offset=-5 (param)
   208 ;;_i	offset	0
   209 ;;_sum	offset	2
   210 ;;_byte_block	offset=-2 (param)
   211 ;;_byte_count	offset=-4 (param)
   212 ;;_product	offset	0
   213 ;;_multiplier	offset=-8 (param)
   214 ;;_multiplicand	offset=-16 (param)
   215 ;;_bufData	offset=-1 (param)
   216 ;;_txData	offset=-1 (param)
   217 ;;_bufData	offset=-1 (param)
   218 ;;_txData	offset=-1 (param)
   219 ;;_stream	offset=-1 (param)
   220 ;;_function	offset=-2 (param)
   221 ;;_byte_block	offset=-1 (param)
   222 ;;_clear	offset=-2 (param)
   223 ;;_numMilliseconds	offset=-2 (param)
   224 ;;_timer	offset=-1 (param)
   225 ;;_timer	offset=-1 (param)
   226 ;;_count	offset=-3 (param)
   227 ;;_readValue	offset	0
   228 ;;_readValue	offset	0
   229 ;;_cmd	offset=-1 (param)
   230 ;;_cmd	offset=-1 (param)
   231 ;;_data	offset=-1 (param)
   232 ;;__this	offset=-2 (param)
   233 ;;_r	offset=-1 (param)
   234 ;;_c	offset=-2 (param)
   235 ;;_strPtr	offset=-3 (param)
   236 ;;_strPtr	offset=-1 (param)
   237 ;;_cmd	offset=-1 (param)
   238 ;;_strPtr	offset=-1 (param)
   239 ;;_delay	offset=-4 (param)
   240 ;;__this	offset=-2 (param)
   241 ;;_clearBuffer	offset=-3 (param)
   242 ;;_s	offset	0
   243 ;;_k	offset	2
   244 ;;_dest	offset=-2 (param)
   245 ;;_c	offset=-4 (param)
   246 ;;_n	offset=-6 (param)
   247 ;;_ap	offset	0
   248 ;;_fmt	offset=-2 (param)
   249 ;;_cfmt	offset	0
   250 ;;_fp	offset=-2 (param)
   251 ;;_fmt	offset=-3 (param)
   252 ;;_ap	offset=-5 (param)
   253 ;;_vfpfcnvrt$4074	offset	0
   254 ;;_ll	offset	2
   255 ;;_cp	offset	10
   256 ;;_c	offset	12
   257 ;;_fp	offset=-2 (param)
   258 ;;_fmt	offset=-4 (param)
   259 ;;_ap	offset=-6 (param)
   260 ;;_r	offset	0
   261 ;;_l	offset	1
   262 ;;__l	offset=-1 (param)
   263 ;;__r	offset=-2 (param)
   264 ;;_n	offset=-4 (param)
   265 ;;_nuls	offset	0
   266 ;;_l	offset	7
   267 ;;_p	offset	9
   268 ;;_cp	offset	11
   269 ;;_w	offset	13
   270 ;;_i	offset	15
   271 ;;_fp	offset=-2 (param)
   272 ;;_s	offset=-4 (param)
   273 ;;_dtoa$4050	offset	0
   274 ;;_n	offset	2
   275 ;;_i	offset	10
   276 ;;_s	offset	12
   277 ;;_w	offset	14
   278 ;;_p	offset	16
   279 ;;_fp	offset=-2 (param)
   280 ;;_d	offset=-10 (param)
   281 ;;_a	offset=-2 (param)
   282 ;;_sign	offset	0
   283 ;;_counter	offset	1
   284 ;;_dividend	offset=-8 (param)
   285 ;;_divisor	offset=-16 (param)
   286 ;;_quotient	offset	0
   287 ;;_sign	offset	8
   288 ;;_counter	offset	9
   289 ;;_dividend	offset=-8 (param)
   290 ;;_divisor	offset=-16 (param)
   291 ;;_w	offset	0
   292 ;;_fp	offset=-2 (param)
   293 ;;_c	offset=-3 (param)
   294 ;;_w	offset	0
   295 ;;_i	offset	2
   296 ;;_fp	offset=-2 (param)
   297 ;;_buf	offset=-4 (param)
   298 ;;_p	offset=-6 (param)
   299 ;;_a	offset	0
   300 ;;_s	offset=-2 (param)
   301 ;;_i	offset	0
   302 ;;_c	offset	2
   303 ;;_s	offset=-2 (param)
   304 ;;_fp	offset=-4 (param)
   305 ;;_c	offset=-2 (param)
   306 ;;_fp	offset=-4 (param)
   307 ;;_c	offset=-1 (param)
   308 ;;__this	offset=-2 (param)
   309 ;;_c	offset=-3 (param)
   310 ;;_atoi$4544	offset	0
   311 ;;_atoi$4542	offset	2
   312 ;;_atoi$4543	offset	4
   313 ;;_n	offset	5
   314 ;;_neg	offset	7
   315 ;;_s	offset=-1 (param)
   316 ;;_isspace$4560	offset	0
   317 ;;_c	offset=-2 (param)
   318 ;;_c	offset=-2 (param)
   319 ;;_InterruptHandler	offset=-3 (param)
   320 ;;_InterruptHandler	offset=-3 (param)
   321 ;;_InterruptHandler	offset=-3 (param)
   322 ;;_InterruptHandler	offset=-3 (param)
   323 ;;_InterruptHandler	offset=-3 (param)
   324 ;;_InterruptHandler	offset=-3 (param)
   325 ;;_state	offset	0
   326 ;;_InterruptHandler	offset=-3 (param)
   327 ;;_InterruptHandler	offset=-3 (param)
   328 ;;_InterruptHandler	offset=-3 (param)
   329 ;;_InterruptHandler	offset=-3 (param)
   330 ;;_i	offset	0
   331 ;;_timerVal	offset=-2 (param)
   332                           
   333                           	psect	idataCOMRAM
   334  006F22                     __pidataCOMRAM:
   335                           	opt callstack 0
   336                           
   337                           ;initializer for r_protocol@retry
   338  006F22  03                 	db	3
   339                           
   340                           	psect	idataBIGRAM
   341  0056EA                     __pidataBIGRAM:
   342                           	opt callstack 0
   343                           
   344                           ;initializer for _H254
   345  0056EA  0000               	dw	0
   346  0056EC  00                 	db	0
   347  0056ED  00                 	db	0
   348  0056EE  00                 	db	0
   349  0056EF  00                 	db	0
   350  0056F0  00                 	db	0
   351  0056F1  00                 	db	0
   352  0056F2  00                 	db	0
   353  0056F3  00                 	db	0
   354  0056F4  00                 	db	0
   355  0056F5  00                 	db	0
   356  0056F6  00                 	db	0
   357  0056F7  00                 	db	0
   358  0056F8  00                 	db	0
   359  0056F9  00                 	db	0
   360  0056FA  00                 	db	0
   361  0056FB  00                 	db	0
   362  0056FC  00                 	db	0
   363  0056FD  00                 	db	0
   364  0056FE  00                 	db	0
   365  0056FF  00                 	db	0
   366  005700  00                 	db	0
   367  005701  00                 	db	0
   368  005702  00                 	db	0
   369  005703  00                 	db	0
   370  005704  00                 	db	0
   371  005705  00                 	db	0
   372  005706  00                 	db	0
   373  005707  00                 	db	0
   374  005708  00                 	db	0
   375  005709  00                 	db	0
   376  00570A  00                 	db	0
   377  00570B  00                 	db	0
   378  00570C  00                 	db	0
   379  00570D  00                 	db	0
   380  00570E  00                 	db	0
   381  00570F  00                 	db	0
   382  005710  00                 	db	0
   383  005711  00                 	db	0
   384  005712  00                 	db	0
   385  005713  00                 	db	0
   386  005714  00                 	db	0
   387  005715  00                 	db	0
   388  005716  00                 	db	0
   389  005717  00                 	db	0
   390  005718  00                 	db	0
   391  005719  00                 	db	0
   392  00571A  00                 	db	0
   393  00571B  00                 	db	0
   394  00571C  00                 	db	0
   395  00571D  00                 	db	0
   396  00571E  00                 	db	0
   397  00571F  00                 	db	0
   398  005720  00                 	db	0
   399  005721  00                 	db	0
   400  005722  00                 	db	0
   401  005723  00                 	db	0
   402  005724  00                 	db	0
   403  005725  00                 	db	0
   404  005726  00                 	db	0
   405  005727  00                 	db	0
   406  005728  00                 	db	0
   407  005729  00                 	db	0
   408  00572A  00                 	db	0
   409  00572B  00                 	db	0
   410  00572C  00                 	db	0
   411  00572D  00                 	db	0
   412  00572E  00                 	db	0
   413  00572F  00                 	db	0
   414  005730  00                 	db	0
   415  005731  00                 	db	0
   416  005732  00                 	db	0
   417  005733  00                 	db	0
   418  005734  00                 	db	0
   419  005735  00                 	db	0
   420  005736  00                 	db	0
   421  005737  00                 	db	0
   422  005738  00                 	db	0
   423  005739  00                 	db	0
   424  00573A  00                 	db	0
   425  00573B  00                 	db	0
   426  00573C  00                 	db	0
   427  00573D  00                 	db	0
   428  00573E  00                 	db	0
   429  00573F  00                 	db	0
   430  005740  00                 	db	0
   431  005741  00                 	db	0
   432  005742  00                 	db	0
   433  005743  00                 	db	0
   434  005744  00                 	db	0
   435  005745  00                 	db	0
   436  005746  00                 	db	0
   437  005747  00                 	db	0
   438  005748  00                 	db	0
   439  005749  00                 	db	0
   440  00574A  00                 	db	0
   441  00574B  00                 	db	0
   442  00574C  00                 	db	0
   443  00574D  00                 	db	0
   444  00574E  00                 	db	0
   445  00574F  00                 	db	0
   446  005750  00                 	db	0
   447  005751  00                 	db	0
   448  005752  00                 	db	0
   449  005753  00                 	db	0
   450  005754  00                 	db	0
   451  005755  00                 	db	0
   452  005756  00                 	db	0
   453  005757  00                 	db	0
   454  005758  00                 	db	0
   455  005759  00                 	db	0
   456  00575A  00                 	db	0
   457  00575B  00                 	db	0
   458  00575C  00                 	db	0
   459  00575D  00                 	db	0
   460  00575E  00                 	db	0
   461  00575F  00                 	db	0
   462  005760  00                 	db	0
   463  005761  00                 	db	0
   464  005762  00                 	db	0
   465  005763  00                 	db	0
   466  005764  00                 	db	0
   467  005765  00                 	db	0
   468  005766  00                 	db	0
   469  005767  00                 	db	0
   470  005768  00                 	db	0
   471  005769  00                 	db	0
   472  00576A  00                 	db	0
   473  00576B  00                 	db	0
   474  00576C  00                 	db	0
   475  00576D  00                 	db	0
   476  00576E  00                 	db	0
   477  00576F  00                 	db	0
   478  005770  00                 	db	0
   479  005771  00                 	db	0
   480  005772  00                 	db	0
   481  005773  00                 	db	0
   482  005774  00                 	db	0
   483  005775  00                 	db	0
   484  005776  00                 	db	0
   485  005777  00                 	db	0
   486  005778  00                 	db	0
   487  005779  00                 	db	0
   488  00577A  00                 	db	0
   489  00577B  00                 	db	0
   490  00577C  00                 	db	0
   491  00577D  00                 	db	0
   492  00577E  00                 	db	0
   493  00577F  00                 	db	0
   494  005780  00                 	db	0
   495  005781  00                 	db	0
   496  005782  00                 	db	0
   497  005783  00                 	db	0
   498  005784  00                 	db	0
   499  005785  00                 	db	0
   500  005786  00                 	db	0
   501  005787  00                 	db	0
   502  005788  00                 	db	0
   503  005789  00                 	db	0
   504  00578A  00                 	db	0
   505  00578B  00                 	db	0
   506  00578C  00                 	db	0
   507  00578D  00                 	db	0
   508  00578E  00                 	db	0
   509  00578F  00                 	db	0
   510  005790  00                 	db	0
   511  005791  00                 	db	0
   512  005792  00                 	db	0
   513  005793  00                 	db	0
   514  005794  00                 	db	0
   515  005795  00                 	db	0
   516  005796  00                 	db	0
   517  005797  00                 	db	0
   518  005798  00                 	db	0
   519  005799  00                 	db	0
   520  00579A  00                 	db	0
   521  00579B  00                 	db	0
   522  00579C  00                 	db	0
   523  00579D  00                 	db	0
   524  00579E  00                 	db	0
   525  00579F  00                 	db	0
   526  0057A0  00                 	db	0
   527  0057A1  00                 	db	0
   528  0057A2  00                 	db	0
   529  0057A3  00                 	db	0
   530  0057A4  00                 	db	0
   531  0057A5  00                 	db	0
   532  0057A6  00                 	db	0
   533  0057A7  00                 	db	0
   534  0057A8  00                 	db	0
   535  0057A9  00                 	db	0
   536  0057AA  00                 	db	0
   537  0057AB  00                 	db	0
   538  0057AC  00                 	db	0
   539  0057AD  00                 	db	0
   540  0057AE  00                 	db	0
   541  0057AF  00                 	db	0
   542  0057B0  00                 	db	0
   543  0057B1  00                 	db	0
   544  0057B2  00                 	db	0
   545  0057B3  00                 	db	0
   546  0057B4  00                 	db	0
   547  0057B5  00                 	db	0
   548  0057B6  00                 	db	0
   549  0057B7  00                 	db	0
   550  0057B8  00                 	db	0
   551  0057B9  00                 	db	0
   552  0057BA  00                 	db	0
   553  0057BB  00                 	db	0
   554  0057BC  00                 	db	0
   555  0057BD  00                 	db	0
   556  0057BE  00                 	db	0
   557  0057BF  00                 	db	0
   558  0057C0  00                 	db	0
   559  0057C1  00                 	db	0
   560  0057C2  00                 	db	0
   561  0057C3  00                 	db	0
   562  0057C4  00                 	db	0
   563  0057C5  00                 	db	0
   564  0057C6  00                 	db	0
   565  0057C7  00                 	db	0
   566  0057C8  00                 	db	0
   567  0057C9  00                 	db	0
   568  0057CA  00                 	db	0
   569  0057CB  00                 	db	0
   570  0057CC  00                 	db	0
   571  0057CD  00                 	db	0
   572  0057CE  00                 	db	0
   573  0057CF  00                 	db	0
   574  0057D0  00                 	db	0
   575  0057D1  00                 	db	0
   576  0057D2  00                 	db	0
   577  0057D3  00                 	db	0
   578  0057D4  00                 	db	0
   579  0057D5  00                 	db	0
   580  0057D6  00                 	db	0
   581  0057D7  00                 	db	0
   582  0057D8  00                 	db	0
   583  0057D9  00                 	db	0
   584  0057DA  00                 	db	0
   585  0057DB  00                 	db	0
   586  0057DC  00                 	db	0
   587  0057DD  00                 	db	0
   588  0057DE  00                 	db	0
   589  0057DF  00                 	db	0
   590  0057E0  0001               	dw	1
   591  0057E2  0000               	dw	0
   592  0057E4  01                 	db	1
   593  0057E5  80                 	db	128
   594  0057E6  03                 	db	3
   595  0057E7  8A                 	db	138
   596  0057E8  00                 	db	0
   597  0057E9  00                 	db	0
   598  0057EA  FE                 	db	254
   599                           
   600                           	psect	idataBANK0
   601  006100                     __pidataBANK0:
   602                           	opt callstack 0
   603                           
   604                           ;initializer for _V
   605  006100  00                 	db	0
   606  006101  00                 	db	0
   607  006102  00                 	db	0
   608  006103  00                 	db	0
   609  006104  00                 	db	0
   610  006105  00                 	db	0
   611  006106  00                 	db	0
   612  006107  00                 	db	0
   613  006108  00                 	db	0
   614  006109  00                 	db	0
   615  00610A  00                 	db	0
   616  00610B  00                 	db	0
   617  00610C  00                 	db	0
   618  00610D  00                 	db	0
   619  00610E  00                 	db	0
   620  00610F  00                 	db	0
   621  006110  00                 	db	0
   622  006111  00                 	db	0
   623  006112  00                 	db	0
   624  006113  00                 	db	0
   625  006114  00                 	db	0
   626  006115  00                 	db	0
   627  006116  00                 	db	0
   628  006117  00                 	db	0
   629  006118  00                 	db	0
   630  006119  00                 	db	0
   631  00611A  00                 	db	0
   632  00611B  00                 	db	0
   633  00611C  00                 	db	0
   634  00611D  00                 	db	0
   635  00611E  00                 	db	0
   636  00611F  00                 	db	0
   637  006120  00                 	db	0
   638  006121  00                 	db	0
   639  006122  00                 	db	0
   640  006123  00                 	db	0
   641  006124  00                 	db	0
   642  006125  00                 	db	0
   643  006126  00                 	db	0
   644  006127  00                 	db	0
   645  006128  00                 	db	0
   646  006129  00                 	db	0
   647  00612A  00                 	db	0
   648  00612B  00                 	db	0
   649  00612C  00                 	db	0
   650  00612D  00                 	db	0
   651  00612E  00                 	db	0
   652  00612F  00                 	db	0
   653  006130  00                 	db	0
   654  006131  00                 	db	0
   655  006132  00                 	db	0
   656  006133  00                 	db	0
   657  006134  00                 	db	0
   658  006135  00                 	db	0
   659  006136  00                 	db	0
   660  006137  00                 	db	0
   661  006138  00                 	db	0
   662  006139  00                 	db	0
   663  00613A  00                 	db	0
   664  00613B  00                 	db	0
   665  00613C  00                 	db	0
   666  00613D  00                 	db	0
   667  00613E  00                 	db	0
   668  00613F  00                 	db	0
   669  006140  00                 	db	0
   670  006141  00                 	db	0
   671  006142  00                 	db	0
   672  006143  00                 	db	0
   673  006144  00                 	db	0
   674  006145  00                 	db	0
   675  006146  0000               	dw	0
   676  006148  0000               	dw	0
   677  00614A  0000               	dw	0
   678  00614C  0000               	dw	0
   679  00614E  00                 	db	0
   680  00614F  00                 	db	0
   681  006150  00                 	db	0
   682  006151  00                 	db	0
   683  006152  00                 	db	0
   684  006153  0000               	dw	0
   685  006155  0000               	dw	0
   686  006157  0000               	dw	0
   687  006159  0000               	dw	0
   688  00615B  0000               	dw	0
   689  00615D  00                 	db	0
   690  00615E  00                 	db	0
   691  00615F  00                 	db	0
   692  006160  00                 	db	0
   693  006161  00                 	db	0
   694  006162  01                 	db	1
   695  006163  2D                 	db	45
   696                           
   697                           	psect	idataBANK1
   698  005A84                     __pidataBANK1:
   699                           	opt callstack 0
   700                           
   701                           ;initializer for stoa@F1144
   702  005A84  28                 	db	40
   703  005A85  6E                 	db	110
   704  005A86  75                 	db	117
   705  005A87  6C                 	db	108
   706  005A88  6C                 	db	108
   707  005A89  29                 	db	41
   708  005A8A  00                 	db	0
   709                           
   710                           ;initializer for _H10
   711  005A8B  0000               	dw	0
   712  005A8D  0001               	dw	1
   713  005A8F  0000               	dw	0
   714  005A91  01                 	db	1
   715  005A92  80                 	db	128
   716  005A93  01                 	db	1
   717  005A94  81                 	db	129
   718  005A95  00                 	db	0
   719  005A96  00                 	db	0
   720  005A97  0A                 	db	10
   721  005A98  0000               	dw	0
   722  005A9A  00                 	db	0
   723  005A9B  00                 	db	0
   724  005A9C  00                 	db	0
   725  005A9D  00                 	db	0
   726  005A9E  00                 	db	0
   727  005A9F  00                 	db	0
   728  005AA0  00                 	db	0
   729  005AA1  00                 	db	0
   730  005AA2  00                 	db	0
   731  005AA3  00                 	db	0
   732  005AA4  0A                 	db	10
   733  005AA5  0000               	dw	0
   734  005AA7  0001               	dw	1
   735  005AA9  0000               	dw	0
   736  005AAB  01                 	db	1
   737  005AAC  80                 	db	128
   738  005AAD  00                 	db	0
   739  005AAE  01                 	db	1
   740  005AAF  00                 	db	0
   741  005AB0  00                 	db	0
   742  005AB1  0A                 	db	10
   743  005AB2  0000               	dw	0
   744  005AB4  0001               	dw	1
   745  005AB6  0000               	dw	0
   746  005AB8  01                 	db	1
   747  005AB9  80                 	db	128
   748  005ABA  01                 	db	1
   749  005ABB  81                 	db	129
   750  005ABC  00                 	db	0
   751  005ABD  80                 	db	128
   752  005ABE  0A                 	db	10
   753  005ABF  0000               	dw	0
   754  005AC1  0001               	dw	1
   755  005AC3  0000               	dw	0
   756  005AC5  01                 	db	1
   757  005AC6  80                 	db	128
   758  005AC7  11                 	db	17
   759  005AC8  82                 	db	130
   760  005AC9  00                 	db	0
   761  005ACA  00                 	db	0
   762  005ACB  0A                 	db	10
   763  005ACC  0000               	dw	0
   764  005ACE  0001               	dw	1
   765  005AD0  0000               	dw	0
   766  005AD2  01                 	db	1
   767  005AD3  80                 	db	128
   768  005AD4  0F                 	db	15
   769  005AD5  81                 	db	129
   770  005AD6  00                 	db	0
   771  005AD7  00                 	db	0
   772  005AD8  0A                 	db	10
   773  005AD9  0000               	dw	0
   774  005ADB  0001               	dw	1
   775  005ADD  0000               	dw	0
   776  005ADF  01                 	db	1
   777  005AE0  80                 	db	128
   778  005AE1  11                 	db	17
   779  005AE2  81                 	db	129
   780  005AE3  00                 	db	0
   781  005AE4  00                 	db	0
   782  005AE5  0A                 	db	10
   783                           
   784                           ;initializer for _H12
   785  005AE6  0000               	dw	0
   786  005AE8  00                 	db	0
   787  005AE9  01                 	db	1
   788  005AEA  0001               	dw	1
   789  005AEC  0000               	dw	0
   790  005AEE  01                 	db	1
   791  005AEF  80                 	db	128
   792  005AF0  02                 	db	2
   793  005AF1  01                 	db	1
   794  005AF2  00                 	db	0
   795  005AF3  00                 	db	0
   796  005AF4  0C                 	db	12
   797  005AF5  0000               	dw	0
   798  005AF7  00                 	db	0
   799  005AF8  01                 	db	1
   800  005AF9  0001               	dw	1
   801  005AFB  0000               	dw	0
   802  005AFD  01                 	db	1
   803  005AFE  80                 	db	128
   804  005AFF  0D                 	db	13
   805  005B00  81                 	db	129
   806  005B01  00                 	db	0
   807  005B02  00                 	db	0
   808  005B03  0C                 	db	12
   809                           
   810                           ;initializer for _H24
   811  005B04  0000               	dw	0
   812  005B06  41                 	db	65
   813  005B07  20                 	db	32
   814  005B08  30                 	db	48
   815  005B09  31                 	db	49
   816  005B0A  30                 	db	48
   817  005B0B  39                 	db	57
   818  005B0C  31                 	db	49
   819  005B0D  31                 	db	49
   820  005B0E  30                 	db	48
   821  005B0F  38                 	db	56
   822  005B10  34                 	db	52
   823  005B11  36                 	db	54
   824  005B12  30                 	db	48
   825  005B13  30                 	db	48
   826  005B14  0001               	dw	1
   827  005B16  0000               	dw	0
   828  005B18  01                 	db	1
   829  005B19  80                 	db	128
   830  005B1A  12                 	db	18
   831  005B1B  02                 	db	2
   832  005B1C  00                 	db	0
   833  005B1D  00                 	db	0
   834  005B1E  18                 	db	24
   835                           
   836                           ;initializer for _H17
   837  005B1F  0000               	dw	0
   838  005B21  00                 	db	0
   839  005B22  01                 	db	1
   840  005B23  00                 	db	0
   841  005B24  01                 	db	1
   842  005B25  21                 	db	33
   843  005B26  02                 	db	2
   844  005B27  01                 	db	1
   845  005B28  0001               	dw	1
   846  005B2A  0000               	dw	0
   847  005B2C  01                 	db	1
   848  005B2D  80                 	db	128
   849  005B2E  0E                 	db	14
   850  005B2F  01                 	db	1
   851  005B30  00                 	db	0
   852  005B31  00                 	db	0
   853  005B32  11                 	db	17
   854                           
   855                           ;initializer for _H14
   856  005B33  0000               	dw	0
   857  005B35  00                 	db	0
   858  005B36  41                 	db	65
   859  005B37  11                 	db	17
   860  005B38  01                 	db	1
   861  005B39  0001               	dw	1
   862  005B3B  0000               	dw	0
   863  005B3D  01                 	db	1
   864  005B3E  80                 	db	128
   865  005B3F  04                 	db	4
   866  005B40  01                 	db	1
   867  005B41  00                 	db	0
   868  005B42  00                 	db	0
   869  005B43  0E                 	db	14
   870                           
   871                           	psect	idataBANK2
   872  006386                     __pidataBANK2:
   873                           	opt callstack 0
   874                           
   875                           ;initializer for _H13
   876  006386  0000               	dw	0
   877  006388  00                 	db	0
   878  006389  01                 	db	1
   879  00638A  21                 	db	33
   880  00638B  0001               	dw	1
   881  00638D  0000               	dw	0
   882  00638F  01                 	db	1
   883  006390  80                 	db	128
   884  006391  0C                 	db	12
   885  006392  06                 	db	6
   886  006393  00                 	db	0
   887  006394  00                 	db	0
   888  006395  0D                 	db	13
   889  006396  0000               	dw	0
   890  006398  00                 	db	0
   891  006399  01                 	db	1
   892  00639A  21                 	db	33
   893  00639B  0001               	dw	1
   894  00639D  0000               	dw	0
   895  00639F  01                 	db	1
   896  0063A0  80                 	db	128
   897  0063A1  02                 	db	2
   898  0063A2  0A                 	db	10
   899  0063A3  00                 	db	0
   900  0063A4  00                 	db	0
   901  0063A5  0D                 	db	13
   902  0063A6  0000               	dw	0
   903  0063A8  00                 	db	0
   904  0063A9  01                 	db	1
   905  0063AA  21                 	db	33
   906  0063AB  0001               	dw	1
   907  0063AD  0000               	dw	0
   908  0063AF  01                 	db	1
   909  0063B0  80                 	db	128
   910  0063B1  02                 	db	2
   911  0063B2  05                 	db	5
   912  0063B3  00                 	db	0
   913  0063B4  00                 	db	0
   914  0063B5  0D                 	db	13
   915                           
   916                           ;initializer for _H27
   917  0063B6  0000               	dw	0
   918  0063B8  00                 	db	0
   919  0063B9  00                 	db	0
   920  0063BA  00                 	db	0
   921  0063BB  00                 	db	0
   922  0063BC  00                 	db	0
   923  0063BD  00                 	db	0
   924  0063BE  00                 	db	0
   925  0063BF  00                 	db	0
   926  0063C0  00                 	db	0
   927  0063C1  00                 	db	0
   928  0063C2  00                 	db	0
   929  0063C3  00                 	db	0
   930  0063C4  00                 	db	0
   931  0063C5  00                 	db	0
   932  0063C6  00                 	db	0
   933  0063C7  00                 	db	0
   934  0063C8  00                 	db	0
   935  0063C9  0001               	dw	1
   936  0063CB  0000               	dw	0
   937  0063CD  01                 	db	1
   938  0063CE  80                 	db	128
   939  0063CF  0D                 	db	13
   940  0063D0  81                 	db	129
   941  0063D1  00                 	db	0
   942  0063D2  80                 	db	128
   943  0063D3  1B                 	db	27
   944                           
   945                           	psect	idataBANK3
   946  00674E                     __pidataBANK3:
   947                           	opt callstack 0
   948                           
   949                           ;initializer for _H53
   950  00674E  0000               	dw	0
   951  006750  00                 	db	0
   952  006751  00                 	db	0
   953  006752  00                 	db	0
   954  006753  00                 	db	0
   955  006754  00                 	db	0
   956  006755  00                 	db	0
   957  006756  00                 	db	0
   958  006757  00                 	db	0
   959  006758  00                 	db	0
   960  006759  00                 	db	0
   961  00675A  00                 	db	0
   962  00675B  00                 	db	0
   963  00675C  00                 	db	0
   964  00675D  00                 	db	0
   965  00675E  00                 	db	0
   966  00675F  00                 	db	0
   967  006760  00                 	db	0
   968  006761  00                 	db	0
   969  006762  00                 	db	0
   970  006763  00                 	db	0
   971  006764  00                 	db	0
   972  006765  00                 	db	0
   973  006766  00                 	db	0
   974  006767  00                 	db	0
   975  006768  00                 	db	0
   976  006769  00                 	db	0
   977  00676A  00                 	db	0
   978  00676B  2A                 	db	42
   979  00676C  2A                 	db	42
   980  00676D  2A                 	db	42
   981  00676E  2A                 	db	42
   982  00676F  44                 	db	68
   983  006770  45                 	db	69
   984  006771  52                 	db	82
   985  006772  46                 	db	70
   986  006773  23                 	db	35
   987  006774  01                 	db	1
   988  006775  41                 	db	65
   989  006776  00                 	db	0
   990  006777  01                 	db	1
   991  006778  21                 	db	33
   992  006779  02                 	db	2
   993  00677A  01                 	db	1
   994  00677B  0001               	dw	1
   995  00677D  0000               	dw	0
   996  00677F  01                 	db	1
   997  006780  80                 	db	128
   998  006781  03                 	db	3
   999  006782  8A                 	db	138
  1000  006783  00                 	db	0
  1001  006784  00                 	db	0
  1002  006785  35                 	db	53
  1003  0000                     _IVTADL	set	14493
  1004  0000                     _IVTADH	set	14494
  1005  0000                     _IVTADU	set	14495
  1006  0000                     _PIE8bits	set	14744
  1007  0000                     _PIR8bits	set	14760
  1008  0000                     _SCANPR	set	14839
  1009  0000                     _DMA2PR	set	14836
  1010  0000                     _DMA1PR	set	14835
  1011  0000                     _MAINPR	set	14834
  1012  0000                     _ISRPR	set	14833
  1013  0000                     _PIE2bits	set	14738
  1014  0000                     _PIR2bits	set	14754
  1015  0000                     _PIE9bits	set	14745
  1016  0000                     _PIR9bits	set	14761
  1017  0000                     _PIE6bits	set	14742
  1018  0000                     _PIE3bits	set	14739
  1019  0000                     _PMD7	set	14791
  1020  0000                     _PMD6	set	14790
  1021  0000                     _PMD5	set	14789
  1022  0000                     _PMD4	set	14788
  1023  0000                     _PMD3	set	14787
  1024  0000                     _PMD2	set	14786
  1025  0000                     _PMD1	set	14785
  1026  0000                     _PMD0	set	14784
  1027  0000                     _OSCTUNE	set	14814
  1028  0000                     _OSCFRQ	set	14815
  1029  0000                     _OSCEN	set	14813
  1030  0000                     _OSCCON3	set	14811
  1031  0000                     _OSCCON1	set	14809
  1032  0000                     _IPR8bits	set	14728
  1033  0000                     _IPR9bits	set	14729
  1034  0000                     _IPR7bits	set	14727
  1035  0000                     _IPR5bits	set	14725
  1036  0000                     _IPR1bits	set	14721
  1037  0000                     _IPR3bits	set	14723
  1038  0000                     _IPR6bits	set	14726
  1039  0000                     _IPR2bits	set	14722
  1040  0000                     _PIE7bits	set	14743
  1041  0000                     _PIE5bits	set	14741
  1042  0000                     _PIE1bits	set	14737
  1043  0000                     _PIR7bits	set	14759
  1044  0000                     _PIR5bits	set	14757
  1045  0000                     _PIR1bits	set	14753
  1046  0000                     _PLLR	set	118496
  1047  0000                     _SPI1SDIPPS	set	15071
  1048  0000                     _RC6PPS	set	14870
  1049  0000                     _RC5PPS	set	14869
  1050  0000                     _RA6PPS	set	14854
  1051  0000                     _RA5PPS	set	14853
  1052  0000                     _RA4PPS	set	14852
  1053  0000                     _SPI1SCKPPS	set	15070
  1054  0000                     _U1RXPPS	set	15077
  1055  0000                     _INT1PPS	set	15041
  1056  0000                     _INT2PPS	set	15042
  1057  0000                     _INT0PPS	set	15040
  1058  0000                     _RC3PPS	set	14867
  1059  0000                     _RB6PPS	set	14862
  1060  0000                     _U2RXPPS	set	15080
  1061  0000                     _SLRCONF	set	14995
  1062  0000                     _SLRCONE	set	14979
  1063  0000                     _SLRCOND	set	14963
  1064  0000                     _SLRCONC	set	14947
  1065  0000                     _SLRCONB	set	14931
  1066  0000                     _SLRCONA	set	14915
  1067  0000                     _ODCOND	set	14962
  1068  0000                     _ODCONC	set	14946
  1069  0000                     _ODCONB	set	14930
  1070  0000                     _ODCONA	set	14914
  1071  0000                     _ODCONF	set	14994
  1072  0000                     _ODCONE	set	14978
  1073  0000                     _WPUC	set	14945
  1074  0000                     _WPUA	set	14913
  1075  0000                     _WPUB	set	14929
  1076  0000                     _WPUE	set	14977
  1077  0000                     _WPUF	set	14993
  1078  0000                     _WPUD	set	14961
  1079  0000                     _ANSELA	set	14912
  1080  0000                     _ANSELF	set	14992
  1081  0000                     _ANSELE	set	14976
  1082  0000                     _ANSELB	set	14928
  1083  0000                     _ANSELC	set	14944
  1084  0000                     _ANSELD	set	14960
  1085  0000                     _DMA1SSA	set	15353
  1086  0000                     _DMA1DSZ	set	15342
  1087  0000                     _DMA1SSZ	set	15351
  1088  0000                     _DMA1DSA	set	15344
  1089  0000                     _DMA1CON0bits	set	15356
  1090  0000                     _DMA1CON1bits	set	15357
  1091  0000                     _DMA1CON0	set	15356
  1092  0000                     _DMA1AIRQ	set	15358
  1093  0000                     _DMA1SIRQ	set	15359
  1094  0000                     _DMA1CON1	set	15357
  1095  0000                     _CLC1CON	set	15476
  1096  0000                     _CLC1GLS3	set	15485
  1097  0000                     _CLC1GLS2	set	15484
  1098  0000                     _CLC1GLS1	set	15483
  1099  0000                     _CLC1GLS0	set	15482
  1100  0000                     _CLC1SEL3	set	15481
  1101  0000                     _CLC1SEL2	set	15480
  1102  0000                     _CLC1SEL1	set	15479
  1103  0000                     _CLC1SEL0	set	15478
  1104  0000                     _CLC1POL	set	15477
  1105  0000                     _CLKRCON	set	15589
  1106  0000                     _CLKRCLK	set	15590
  1107  0000                     _MD1CARL	set	15613
  1108  0000                     _MD1CARH	set	15614
  1109  0000                     _MD1SRC	set	15612
  1110  0000                     _MD1CON1bits	set	15611
  1111  0000                     _MD1CON0bits	set	15610
  1112  0000                     _SPI1INTFbits	set	15642
  1113  0000                     _SPI1RXB	set	15632
  1114  0000                     _SPI1TXB	set	15633
  1115  0000                     _SPI1TCNTL	set	15634
  1116  0000                     _SPI1CON0	set	15636
  1117  0000                     _SPI1CLK	set	15644
  1118  0000                     _SPI1BAUD	set	15641
  1119  0000                     _SPI1CON2	set	15638
  1120  0000                     _SPI1CON1	set	15637
  1121  0000                     _U2RXB	set	15824
  1122  0000                     _U2TXB	set	15826
  1123  0000                     _U2ERRIE	set	15842
  1124  0000                     _U2ERRIR	set	15841
  1125  0000                     _U2UIR	set	15840
  1126  0000                     _U2FIFO	set	15839
  1127  0000                     _U2BRGH	set	15838
  1128  0000                     _U2BRGL	set	15837
  1129  0000                     _U2CON2	set	15836
  1130  0000                     _U2CON1	set	15835
  1131  0000                     _U2CON0	set	15834
  1132  0000                     _U2P3L	set	15832
  1133  0000                     _U2P2L	set	15830
  1134  0000                     _U2P1L	set	15828
  1135  0000                     _U1RXB	set	15848
  1136  0000                     _U1TXB	set	15850
  1137  0000                     _U1ERRIE	set	15866
  1138  0000                     _U1ERRIR	set	15865
  1139  0000                     _U1UIR	set	15864
  1140  0000                     _U1FIFO	set	15863
  1141  0000                     _U1BRGH	set	15862
  1142  0000                     _U1BRGL	set	15861
  1143  0000                     _U1CON2	set	15860
  1144  0000                     _U1CON1	set	15859
  1145  0000                     _U1CON0	set	15858
  1146  0000                     _U1P3H	set	15857
  1147  0000                     _U1P3L	set	15856
  1148  0000                     _U1P2H	set	15855
  1149  0000                     _U1P2L	set	15854
  1150  0000                     _U1P1H	set	15853
  1151  0000                     _U1P1L	set	15852
  1152  0000                     _ADCON0	set	16120
  1153  0000                     _ADCLK	set	16127
  1154  0000                     _ADACT	set	16126
  1155  0000                     _ADREF	set	16125
  1156  0000                     _ADSTAT	set	16124
  1157  0000                     _ADCON3	set	16123
  1158  0000                     _ADCON2	set	16122
  1159  0000                     _ADCON1	set	16121
  1160  0000                     _ADPREH	set	16119
  1161  0000                     _ADPREL	set	16118
  1162  0000                     _ADCAP	set	16117
  1163  0000                     _ADACQH	set	16116
  1164  0000                     _ADACQL	set	16115
  1165  0000                     _ADPCH	set	16113
  1166  0000                     _ADRPT	set	16108
  1167  0000                     _ADACCU	set	16106
  1168  0000                     _ADSTPTH	set	16101
  1169  0000                     _ADSTPTL	set	16100
  1170  0000                     _ADUTHH	set	16097
  1171  0000                     _ADUTHL	set	16096
  1172  0000                     _ADLTHH	set	16095
  1173  0000                     _ADLTHL	set	16094
  1174  0000                     _NCO1CONbits	set	16190
  1175  0000                     _NCO1INCL	set	16187
  1176  0000                     _NCO1INCH	set	16188
  1177  0000                     _NCO1INCU	set	16189
  1178  0000                     _NCO1ACCL	set	16184
  1179  0000                     _NCO1ACCH	set	16185
  1180  0000                     _NCO1ACCU	set	16186
  1181  0000                     _NCO1CLK	set	16191
  1182  0000                     _NCO1CON	set	16190
  1183  0000                     _LATCbits	set	16316
  1184  0000                     _LATDbits	set	16317
  1185  0000                     _PORTBbits	set	16331
  1186  0000                     _T5CONbits	set	16282
  1187  0000                     _T5CON	set	16282
  1188  0000                     _TMR5L	set	16280
  1189  0000                     _TMR5H	set	16281
  1190  0000                     _T5CLK	set	16285
  1191  0000                     _T5GATE	set	16284
  1192  0000                     _T5GCON	set	16283
  1193  0000                     _LATEbits	set	16318
  1194  0000                     _T6CON	set	16276
  1195  0000                     _T6TMR	set	16274
  1196  0000                     _T6PR	set	16275
  1197  0000                     _T6RST	set	16279
  1198  0000                     _T6HLT	set	16277
  1199  0000                     _T6CLKCON	set	16278
  1200  0000                     _TRISD	set	16325
  1201  0000                     _TRISC	set	16324
  1202  0000                     _TRISB	set	16323
  1203  0000                     _TRISA	set	16322
  1204  0000                     _TRISF	set	16327
  1205  0000                     _TRISE	set	16326
  1206  0000                     _LATC	set	16316
  1207  0000                     _LATB	set	16315
  1208  0000                     _LATF	set	16319
  1209  0000                     _LATA	set	16314
  1210  0000                     _LATD	set	16317
  1211  0000                     _LATE	set	16318
  1212  0000                     _IVTLOCKbits	set	16340
  1213  0000                     _IVTLOCK	set	16340
  1214  0000                     _INTCON0bits	set	16338
  1215  0000                     _GIE	set	130711
  1216                           
  1217                           	psect	smallconst
  1218  002000                     __psmallconst:
  1219                           	opt callstack 0
  1220  002000  00                 	db	0
  1221  002001                     STR_12:
  1222  002001  4C                 	db	76	;'L'
  1223  002002  4F                 	db	79	;'O'
  1224  002003  47                 	db	71	;'G'
  1225  002004  3A                 	db	58	;':'
  1226  002005  20                 	db	32
  1227  002006  55                 	db	85	;'U'
  1228  002007  25                 	db	37
  1229  002008  64                 	db	100	;'d'
  1230  002009  20                 	db	32
  1231  00200A  47                 	db	71	;'G'
  1232  00200B  25                 	db	37
  1233  00200C  64                 	db	100	;'d'
  1234  00200D  20                 	db	32
  1235  00200E  25                 	db	37
  1236  00200F  64                 	db	100	;'d'
  1237  002010  20                 	db	32
  1238  002011  25                 	db	37
  1239  002012  64                 	db	100	;'d'
  1240  002013  20                 	db	32
  1241  002014  20                 	db	32
  1242  002015  20                 	db	32
  1243  002016  20                 	db	32
  1244  002017  20                 	db	32
  1245  002018  20                 	db	32
  1246  002019  23                 	db	35
  1247  00201A  00                 	db	0
  1248  00201B                     STR_16:
  1249  00201B  52                 	db	82	;'R'
  1250  00201C  25                 	db	37
  1251  00201D  64                 	db	100	;'d'
  1252  00201E  20                 	db	32
  1253  00201F  25                 	db	37
  1254  002020  64                 	db	100	;'d'
  1255  002021  2C                 	db	44
  1256  002022  20                 	db	32
  1257  002023  54                 	db	84	;'T'
  1258  002024  25                 	db	37
  1259  002025  64                 	db	100	;'d'
  1260  002026  20                 	db	32
  1261  002027  25                 	db	37
  1262  002028  64                 	db	100	;'d'
  1263  002029  20                 	db	32
  1264  00202A  43                 	db	67	;'C'
  1265  00202B  25                 	db	37
  1266  00202C  64                 	db	100	;'d'
  1267  00202D  20                 	db	32
  1268  00202E  20                 	db	32
  1269  00202F  20                 	db	32
  1270  002030  20                 	db	32
  1271  002031  20                 	db	32
  1272  002032  20                 	db	32
  1273  002033  23                 	db	35
  1274  002034  00                 	db	0
  1275  002035                     STR_5:
  1276  002035  48                 	db	72	;'H'
  1277  002036  4F                 	db	79	;'O'
  1278  002037  53                 	db	83	;'S'
  1279  002038  54                 	db	84	;'T'
  1280  002039  3A                 	db	58	;':'
  1281  00203A  20                 	db	32
  1282  00203B  25                 	db	37
  1283  00203C  6C                 	db	108	;'l'
  1284  00203D  64                 	db	100	;'d'
  1285  00203E  20                 	db	32
  1286  00203F  47                 	db	71	;'G'
  1287  002040  25                 	db	37
  1288  002041  64                 	db	100	;'d'
  1289  002042  20                 	db	32
  1290  002043  20                 	db	32
  1291  002044  20                 	db	32
  1292  002045  20                 	db	32
  1293  002046  20                 	db	32
  1294  002047  20                 	db	32
  1295  002048  23                 	db	35
  1296  002049  00                 	db	0
  1297  00204A                     STR_13:
  1298  00204A  20                 	db	32
  1299  00204B  53                 	db	83	;'S'
  1300  00204C  25                 	db	37
  1301  00204D  64                 	db	100	;'d'
  1302  00204E  46                 	db	70	;'F'
  1303  00204F  25                 	db	37
  1304  002050  64                 	db	100	;'d'
  1305  002051  20                 	db	32
  1306  002052  23                 	db	35
  1307  002053  25                 	db	37
  1308  002054  6C                 	db	108	;'l'
  1309  002055  64                 	db	100	;'d'
  1310  002056  20                 	db	32
  1311  002057  20                 	db	32
  1312  002058  20                 	db	32
  1313  002059  20                 	db	32
  1314  00205A  20                 	db	32
  1315  00205B  20                 	db	32
  1316  00205C  00                 	db	0
  1317  00205D                     STR_9:
  1318  00205D  45                 	db	69	;'E'
  1319  00205E  25                 	db	37
  1320  00205F  64                 	db	100	;'d'
  1321  002060  20                 	db	32
  1322  002061  41                 	db	65	;'A'
  1323  002062  25                 	db	37
  1324  002063  64                 	db	100	;'d'
  1325  002064  20                 	db	32
  1326  002065  54                 	db	84	;'T'
  1327  002066  25                 	db	37
  1328  002067  64                 	db	100	;'d'
  1329  002068  20                 	db	32
  1330  002069  47                 	db	71	;'G'
  1331  00206A  25                 	db	37
  1332  00206B  64                 	db	100	;'d'
  1333  00206C  20                 	db	32
  1334  00206D  23                 	db	35
  1335  00206E  00                 	db	0
  1336  00206F                     STR_11:
  1337  00206F  20                 	db	32
  1338  002070  50                 	db	80	;'P'
  1339  002071  69                 	db	105	;'i'
  1340  002072  6E                 	db	110	;'n'
  1341  002073  67                 	db	103	;'g'
  1342  002074  20                 	db	32
  1343  002075  47                 	db	71	;'G'
  1344  002076  25                 	db	37
  1345  002077  64                 	db	100	;'d'
  1346  002078  20                 	db	32
  1347  002079  20                 	db	32
  1348  00207A  50                 	db	80	;'P'
  1349  00207B  25                 	db	37
  1350  00207C  33                 	db	51	;'3'
  1351  00207D  64                 	db	100	;'d'
  1352  00207E  20                 	db	32
  1353  00207F  23                 	db	35
  1354  002080  00                 	db	0
  1355  002081                     STR_1:
  1356  002081  20                 	db	32
  1357  002082  52                 	db	82	;'R'
  1358  002083  56                 	db	86	;'V'
  1359  002084  49                 	db	73	;'I'
  1360  002085  20                 	db	32
  1361  002086  48                 	db	72	;'H'
  1362  002087  4F                 	db	79	;'O'
  1363  002088  53                 	db	83	;'S'
  1364  002089  54                 	db	84	;'T'
  1365  00208A  20                 	db	32
  1366  00208B  54                 	db	84	;'T'
  1367  00208C  45                 	db	69	;'E'
  1368  00208D  53                 	db	83	;'S'
  1369  00208E  54                 	db	84	;'T'
  1370  00208F  45                 	db	69	;'E'
  1371  002090  52                 	db	82	;'R'
  1372  002091  00                 	db	0
  1373  002092                     STR_4:
  1374  002092  20                 	db	32
  1375  002093  46                 	db	70	;'F'
  1376  002094  47                 	db	71	;'G'
  1377  002095  42                 	db	66	;'B'
  1378  002096  40                 	db	64	;'@'
  1379  002097  4D                 	db	77	;'M'
  1380  002098  43                 	db	67	;'C'
  1381  002099  48                 	db	72	;'H'
  1382  00209A  50                 	db	80	;'P'
  1383  00209B  20                 	db	32
  1384  00209C  46                 	db	70	;'F'
  1385  00209D  41                 	db	65	;'A'
  1386  00209E  42                 	db	66	;'B'
  1387  00209F  34                 	db	52	;'4'
  1388  0020A0  00                 	db	0
  1389  0020A1                     STR_6:
  1390  0020A1  20                 	db	32
  1391  0020A2  53                 	db	83	;'S'
  1392  0020A3  25                 	db	37
  1393  0020A4  64                 	db	100	;'d'
  1394  0020A5  46                 	db	70	;'F'
  1395  0020A6  25                 	db	37
  1396  0020A7  64                 	db	100	;'d'
  1397  0020A8  20                 	db	32
  1398  0020A9  23                 	db	35
  1399  0020AA  20                 	db	32
  1400  0020AB  20                 	db	32
  1401  0020AC  20                 	db	32
  1402  0020AD  20                 	db	32
  1403  0020AE  00                 	db	0
  1404  0020AF                     STR_2:
  1405  0020AF  20                 	db	32
  1406  0020B0  56                 	db	86	;'V'
  1407  0020B1  65                 	db	101	;'e'
  1408  0020B2  72                 	db	114	;'r'
  1409  0020B3  73                 	db	115	;'s'
  1410  0020B4  69                 	db	105	;'i'
  1411  0020B5  6F                 	db	111	;'o'
  1412  0020B6  6E                 	db	110	;'n'
  1413  0020B7  20                 	db	32
  1414  0020B8  25                 	db	37
  1415  0020B9  73                 	db	115	;'s'
  1416  0020BA  00                 	db	0
  1417  0020BB                     STR_8:
  1418  0020BB  20                 	db	32
  1419  0020BC  4F                 	db	79	;'O'
  1420  0020BD  4B                 	db	75	;'K'
  1421  0020BE  20                 	db	32
  1422  0020BF  23                 	db	35
  1423  0020C0  00                 	db	0
  1424  0020C1                     STR_7:
  1425  0020C1  20                 	db	32
  1426  0020C2  4F                 	db	79	;'O'
  1427  0020C3  4B                 	db	75	;'K'
  1428  0020C4  51                 	db	81	;'Q'
  1429  0020C5  23                 	db	35
  1430  0020C6  00                 	db	0
  1431  0020C7                     STR_3:
  1432  0020C7  30                 	db	48	;'0'
  1433  0020C8  2E                 	db	46
  1434  0020C9  38                 	db	56	;'8'
  1435  0020CA  38                 	db	56	;'8'
  1436  0020CB  42                 	db	66	;'B'
  1437  0020CC  00                 	db	0
  1438  0020CD                     STR_20:
  1439  0020CD  6C                 	db	108	;'l'
  1440  0020CE  64                 	db	100	;'d'
  1441  0020CF  00                 	db	0
  1442  0020D0                     STR_24:
  1443  0020D0  6C                 	db	108	;'l'
  1444  0020D1  69                 	db	105	;'i'
  1445  0020D2  00                 	db	0
  1446  0020D3                     STR_18:
  1447  0020D3  25                 	db	37
  1448  0020D4  63                 	db	99	;'c'
  1449  0020D5  00                 	db	0
  1450  0000                     
  1451                           ; #config settings
  1452  0020D6  00                 	db	0	; dummy byte at the end
  1453  0000                     
  1454                           	psect	cinit
  1455  0052A6                     __pcinit:
  1456                           	opt callstack 0
  1457  0052A6                     start_initialization:
  1458                           	opt callstack 0
  1459  0052A6                     __initialization:
  1460                           	opt callstack 0
  1461                           
  1462                           ; Initialize objects allocated to BIGRAM (257 bytes)
  1463                           ; load TBLPTR registers with __pidataBIGRAM
  1464  0052A6  0EEA               	movlw	low __pidataBIGRAM
  1465  0052A8  6EF6               	movwf	tblptrl,c
  1466  0052AA  0E56               	movlw	high __pidataBIGRAM
  1467  0052AC  6EF7               	movwf	tblptrh,c
  1468  0052AE  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  1469  0052B0  6EF8               	movwf	tblptru,c
  1470  0052B2  EE01  F043         	lfsr	0,__pdataBIGRAM
  1471  0052B6  EE20 F101          	lfsr	2,257
  1472  0052BA                     copy_data0:
  1473  0052BA  0009               	tblrd		*+
  1474  0052BC  006F FFD7 FFEE     	movff	tablat,postinc0
  1475  0052C2  50DD               	movf	postdec2,w,c
  1476  0052C4  50D9               	movf	fsr2l,w,c
  1477  0052C6  E1F9               	bnz	copy_data0
  1478  0052C8  50DA               	movf	fsr2h,w,c
  1479  0052CA  E1F7               	bnz	copy_data0
  1480                           
  1481                           ; Initialize objects allocated to BANK3 (56 bytes)
  1482                           ; load TBLPTR registers with __pidataBANK3
  1483  0052CC  0E4E               	movlw	low __pidataBANK3
  1484  0052CE  6EF6               	movwf	tblptrl,c
  1485  0052D0  0E67               	movlw	high __pidataBANK3
  1486  0052D2  6EF7               	movwf	tblptrh,c
  1487  0052D4  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1488  0052D6  6EF8               	movwf	tblptru,c
  1489  0052D8  EE00  F3C3         	lfsr	0,__pdataBANK3
  1490  0052DC  EE20 F038          	lfsr	2,56
  1491  0052E0                     copy_data1:
  1492  0052E0  0009               	tblrd		*+
  1493  0052E2  006F FFD7 FFEE     	movff	tablat,postinc0
  1494  0052E8  50DD               	movf	postdec2,w,c
  1495  0052EA  50D9               	movf	fsr2l,w,c
  1496  0052EC  E1F9               	bnz	copy_data1
  1497                           
  1498                           ; Initialize objects allocated to BANK2 (78 bytes)
  1499                           ; load TBLPTR registers with __pidataBANK2
  1500  0052EE  0E86               	movlw	low __pidataBANK2
  1501  0052F0  6EF6               	movwf	tblptrl,c
  1502  0052F2  0E63               	movlw	high __pidataBANK2
  1503  0052F4  6EF7               	movwf	tblptrh,c
  1504  0052F6  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1505  0052F8  6EF8               	movwf	tblptru,c
  1506  0052FA  EE00  F280         	lfsr	0,__pdataBANK2
  1507  0052FE  EE20 F04E          	lfsr	2,78
  1508  005302                     copy_data2:
  1509  005302  0009               	tblrd		*+
  1510  005304  006F FFD7 FFEE     	movff	tablat,postinc0
  1511  00530A  50DD               	movf	postdec2,w,c
  1512  00530C  50D9               	movf	fsr2l,w,c
  1513  00530E  E1F9               	bnz	copy_data2
  1514                           
  1515                           ; Initialize objects allocated to BANK1 (192 bytes)
  1516                           ; load TBLPTR registers with __pidataBANK1
  1517  005310  0E84               	movlw	low __pidataBANK1
  1518  005312  6EF6               	movwf	tblptrl,c
  1519  005314  0E5A               	movlw	high __pidataBANK1
  1520  005316  6EF7               	movwf	tblptrh,c
  1521  005318  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1522  00531A  6EF8               	movwf	tblptru,c
  1523  00531C  EE00  F100         	lfsr	0,__pdataBANK1
  1524  005320  EE20 F0C0          	lfsr	2,192
  1525  005324                     copy_data3:
  1526  005324  0009               	tblrd		*+
  1527  005326  006F FFD7 FFEE     	movff	tablat,postinc0
  1528  00532C  50DD               	movf	postdec2,w,c
  1529  00532E  50D9               	movf	fsr2l,w,c
  1530  005330  E1F9               	bnz	copy_data3
  1531                           
  1532                           ; Initialize objects allocated to BANK0 (100 bytes)
  1533                           ; load TBLPTR registers with __pidataBANK0
  1534  005332  0E00               	movlw	low __pidataBANK0
  1535  005334  6EF6               	movwf	tblptrl,c
  1536  005336  0E61               	movlw	high __pidataBANK0
  1537  005338  6EF7               	movwf	tblptrh,c
  1538  00533A  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1539  00533C  6EF8               	movwf	tblptru,c
  1540  00533E  EE00  F060         	lfsr	0,__pdataBANK0
  1541  005342  EE20 F064          	lfsr	2,100
  1542  005346                     copy_data4:
  1543  005346  0009               	tblrd		*+
  1544  005348  006F FFD7 FFEE     	movff	tablat,postinc0
  1545  00534E  50DD               	movf	postdec2,w,c
  1546  005350  50D9               	movf	fsr2l,w,c
  1547  005352  E1F9               	bnz	copy_data4
  1548                           
  1549                           ; Initialize objects allocated to COMRAM (1 bytes)
  1550                           ; load TBLPTR registers with __pidataCOMRAM
  1551  005354  0E22               	movlw	low __pidataCOMRAM
  1552  005356  6EF6               	movwf	tblptrl,c
  1553  005358  0E6F               	movlw	high __pidataCOMRAM
  1554  00535A  6EF7               	movwf	tblptrh,c
  1555  00535C  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1556  00535E  6EF8               	movwf	tblptru,c
  1557  005360  0009               	tblrd		*+	;fetch initializer
  1558  005362  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1559                           
  1560                           ; Clear objects allocated to BANK4 (67 bytes)
  1561  005368  EE01  F000         	lfsr	0,__pbssBANK4
  1562  00536C  0E43               	movlw	67
  1563  00536E                     clear_0:
  1564  00536E  6AEE               	clrf	postinc0,c
  1565  005370  06E8               	decf	wreg,f,c
  1566  005372  E1FD               	bnz	clear_0
  1567                           
  1568                           ; Clear objects allocated to BANK3 (195 bytes)
  1569  005374  EE00  F300         	lfsr	0,__pbssBANK3
  1570  005378  0EC3               	movlw	195
  1571  00537A                     clear_1:
  1572  00537A  6AEE               	clrf	postinc0,c
  1573  00537C  06E8               	decf	wreg,f,c
  1574  00537E  E1FD               	bnz	clear_1
  1575                           
  1576                           ; Clear objects allocated to BANK2 (128 bytes)
  1577  005380  EE00  F200         	lfsr	0,__pbssBANK2
  1578  005384  0E80               	movlw	128
  1579  005386                     clear_2:
  1580  005386  6AEE               	clrf	postinc0,c
  1581  005388  06E8               	decf	wreg,f,c
  1582  00538A  E1FD               	bnz	clear_2
  1583                           
  1584                           ; Clear objects allocated to BANK1 (46 bytes)
  1585  00538C  EE00  F1C0         	lfsr	0,__pbssBANK1
  1586  005390  0E2E               	movlw	46
  1587  005392                     clear_3:
  1588  005392  6AEE               	clrf	postinc0,c
  1589  005394  06E8               	decf	wreg,f,c
  1590  005396  E1FD               	bnz	clear_3
  1591                           
  1592                           ; Clear objects allocated to BANK0 (55 bytes)
  1593  005398  EE00  F0C4         	lfsr	0,__pbssBANK0
  1594  00539C  0E37               	movlw	55
  1595  00539E                     clear_4:
  1596  00539E  6AEE               	clrf	postinc0,c
  1597  0053A0  06E8               	decf	wreg,f,c
  1598  0053A2  E1FD               	bnz	clear_4
  1599                           
  1600                           ; Clear objects allocated to COMRAM (60 bytes)
  1601  0053A4  EE00  F001         	lfsr	0,__pbssCOMRAM
  1602  0053A8  0E3C               	movlw	60
  1603  0053AA                     clear_5:
  1604  0053AA  6AEE               	clrf	postinc0,c
  1605  0053AC  06E8               	decf	wreg,f,c
  1606  0053AE  E1FD               	bnz	clear_5
  1607                           
  1608                           ;
  1609                           ; Setup IVTBASE
  1610                           ;
  1611  0053B0  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1612  0053B2  6ED5               	movwf	213,c
  1613  0053B4  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1614  0053B6  6ED6               	movwf	214,c
  1615  0053B8  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1616  0053BA  6ED7               	movwf	215,c
  1617  0053BC                     end_of_initialization:
  1618                           	opt callstack 0
  1619  0053BC                     __end_of__initialization:
  1620                           	opt callstack 0
  1621  0053BC  0100               	movlb	0
  1622  0053BE  EF6C  F010         	goto	_main	;jump to C main() function
  1623                           
  1624                           	psect	bssCOMRAM
  1625  000001                     __pbssCOMRAM:
  1626                           	opt callstack 0
  1627  000001                     secs_II_message@block:
  1628                           	opt callstack 0
  1629  000001                     	ds	7
  1630  000008                     _UART1_TxInterruptHandler:
  1631                           	opt callstack 0
  1632  000008                     	ds	3
  1633  00000B                     _UART1_RxInterruptHandler:
  1634                           	opt callstack 0
  1635  00000B                     	ds	3
  1636  00000E                     _UART2_TxInterruptHandler:
  1637                           	opt callstack 0
  1638  00000E                     	ds	3
  1639  000011                     _UART2_RxInterruptHandler:
  1640                           	opt callstack 0
  1641  000011                     	ds	3
  1642  000014                     _INT2_InterruptHandler:
  1643                           	opt callstack 0
  1644  000014                     	ds	3
  1645  000017                     _INT1_InterruptHandler:
  1646                           	opt callstack 0
  1647  000017                     	ds	3
  1648  00001A                     _INT0_InterruptHandler:
  1649                           	opt callstack 0
  1650  00001A                     	ds	3
  1651  00001D                     _width:
  1652                           	opt callstack 0
  1653  00001D                     	ds	2
  1654  00001F                     _prec:
  1655                           	opt callstack 0
  1656  00001F                     	ds	2
  1657  000021                     _flags:
  1658                           	opt callstack 0
  1659  000021                     	ds	2
  1660  000023                     r_protocol@b_block:
  1661                           	opt callstack 0
  1662  000023                     	ds	2
  1663  000025                     run_checksum@sum:
  1664                           	opt callstack 0
  1665  000025                     	ds	2
  1666  000027                     TMR5_ISR@CountCallBack:
  1667                           	opt callstack 0
  1668  000027                     	ds	2
  1669  000029                     _timer5ReloadVal:
  1670                           	opt callstack 0
  1671  000029                     	ds	2
  1672  00002B                     secs_gem_state@block:
  1673                           	opt callstack 0
  1674  00002B                     	ds	1
  1675  00002C                     t_protocol@requeue:
  1676                           	opt callstack 0
  1677  00002C                     	ds	1
  1678  00002D                     t_protocol@retry:
  1679                           	opt callstack 0
  1680  00002D                     	ds	1
  1681  00002E                     r_protocol@rxData_l:
  1682                           	opt callstack 0
  1683  00002E                     	ds	1
  1684  00002F                     m_protocol@rxData_l:
  1685                           	opt callstack 0
  1686  00002F                     	ds	1
  1687  000030                     _mode_sw:
  1688                           	opt callstack 0
  1689  000030                     	ds	1
  1690  000031                     _uart2RxCount:
  1691                           	opt callstack 0
  1692  000031                     	ds	1
  1693  000032                     _uart2RxTail:
  1694                           	opt callstack 0
  1695  000032                     	ds	1
  1696  000033                     _uart2RxHead:
  1697                           	opt callstack 0
  1698  000033                     	ds	1
  1699  000034                     _uart2TxBufferRemaining:
  1700                           	opt callstack 0
  1701  000034                     	ds	1
  1702  000035                     _uart2TxTail:
  1703                           	opt callstack 0
  1704  000035                     	ds	1
  1705  000036                     _uart2TxHead:
  1706                           	opt callstack 0
  1707  000036                     	ds	1
  1708  000037                     _uart1RxCount:
  1709                           	opt callstack 0
  1710  000037                     	ds	1
  1711  000038                     _uart1RxTail:
  1712                           	opt callstack 0
  1713  000038                     	ds	1
  1714  000039                     _uart1RxHead:
  1715                           	opt callstack 0
  1716  000039                     	ds	1
  1717  00003A                     _uart1TxBufferRemaining:
  1718                           	opt callstack 0
  1719  00003A                     	ds	1
  1720  00003B                     _uart1TxTail:
  1721                           	opt callstack 0
  1722  00003B                     	ds	1
  1723  00003C                     _uart1TxHead:
  1724                           	opt callstack 0
  1725  00003C                     	ds	1
  1726                           
  1727                           	psect	dataCOMRAM
  1728  00005D                     __pdataCOMRAM:
  1729                           	opt callstack 0
  1730  00005D                     r_protocol@retry:
  1731                           	opt callstack 0
  1732  00005D                     	ds	1
  1733                           
  1734                           	psect	bssBANK0
  1735  0000C4                     __pbssBANK0:
  1736                           	opt callstack 0
  1737  0000C4                     _r_block:
  1738                           	opt callstack 0
  1739  0000C4                     	ds	13
  1740  0000D1                     _spi_link:
  1741                           	opt callstack 0
  1742  0000D1                     	ds	12
  1743  0000DD                     t_protocol@block:
  1744                           	opt callstack 0
  1745  0000DD                     	ds	7
  1746  0000E4                     wdtdelay@dcount:
  1747                           	opt callstack 0
  1748  0000E4                     	ds	4
  1749  0000E8                     _TMR5_InterruptHandler:
  1750                           	opt callstack 0
  1751  0000E8                     	ds	3
  1752  0000EB                     _TMR6_InterruptHandler:
  1753                           	opt callstack 0
  1754  0000EB                     	ds	3
  1755  0000EE                     _ADCC_ADI_InterruptHandler:
  1756                           	opt callstack 0
  1757  0000EE                     	ds	3
  1758  0000F1                     _nout:
  1759                           	opt callstack 0
  1760  0000F1                     	ds	2
  1761  0000F3                     _seed:
  1762                           	opt callstack 0
  1763  0000F3                     	ds	8
  1764                           
  1765                           	psect	dataBANK0
  1766  000060                     __pdataBANK0:
  1767                           	opt callstack 0
  1768  000060                     _V:
  1769                           	opt callstack 0
  1770  000060                     	ds	100
  1771                           
  1772                           	psect	bssBANK1
  1773  0001C0                     __pbssBANK1:
  1774                           	opt callstack 0
  1775  0001C0                     _tickCount:
  1776                           	opt callstack 0
  1777  0001C0                     	ds	14
  1778  0001CE                     _dbuf:
  1779                           	opt callstack 0
  1780  0001CE                     	ds	32
  1781                           
  1782                           	psect	dataBANK1
  1783  000100                     __pdataBANK1:
  1784                           	opt callstack 0
  1785  000100                     stoa@F1144:
  1786                           	opt callstack 0
  1787  000100                     	ds	7
  1788  000107                     _H10:
  1789                           	opt callstack 0
  1790  000107                     	ds	91
  1791  000162                     _H12:
  1792                           	opt callstack 0
  1793  000162                     	ds	30
  1794  000180                     _H24:
  1795                           	opt callstack 0
  1796  000180                     	ds	27
  1797  00019B                     _H17:
  1798                           	opt callstack 0
  1799  00019B                     	ds	20
  1800  0001AF                     _H14:
  1801                           	opt callstack 0
  1802  0001AF                     	ds	17
  1803                           
  1804                           	psect	bssBANK2
  1805  000200                     __pbssBANK2:
  1806                           	opt callstack 0
  1807  000200                     _uart2RxBuffer:
  1808                           	opt callstack 0
  1809  000200                     	ds	64
  1810  000240                     _uart1RxBuffer:
  1811                           	opt callstack 0
  1812  000240                     	ds	64
  1813                           
  1814                           	psect	dataBANK2
  1815  000280                     __pdataBANK2:
  1816                           	opt callstack 0
  1817  000280                     _H13:
  1818                           	opt callstack 0
  1819  000280                     	ds	48
  1820  0002B0                     _H27:
  1821                           	opt callstack 0
  1822  0002B0                     	ds	30
  1823                           
  1824                           	psect	bssBANK3
  1825  000300                     __pbssBANK3:
  1826                           	opt callstack 0
  1827  000300                     _uart2TxBuffer:
  1828                           	opt callstack 0
  1829  000300                     	ds	64
  1830  000340                     _uart1TxBuffer:
  1831                           	opt callstack 0
  1832  000340                     	ds	64
  1833  000380                     _ring_buf1:
  1834                           	opt callstack 0
  1835  000380                     	ds	67
  1836                           
  1837                           	psect	dataBANK3
  1838  0003C3                     __pdataBANK3:
  1839                           	opt callstack 0
  1840  0003C3                     _H53:
  1841                           	opt callstack 0
  1842  0003C3                     	ds	56
  1843                           
  1844                           	psect	bssBANK4
  1845  000400                     __pbssBANK4:
  1846                           	opt callstack 0
  1847  000400                     _ring_buf2:
  1848                           	opt callstack 0
  1849  000400                     	ds	67
  1850                           
  1851                           	psect	dataBIGRAM
  1852  000443                     __pdataBIGRAM:
  1853                           	opt callstack 0
  1854  000443                     _H254:
  1855                           	opt callstack 0
  1856  000443                     	ds	257
  1857                           
  1858                           	psect	cstackBANK0
  1859  0000FB                     __pcstackBANK0:
  1860                           	opt callstack 0
  1861  0000FB                     ??_TMR5_ISR:
  1862                           
  1863                           ; 1 bytes @ 0x0
  1864  0000FB                     	ds	3
  1865                           
  1866                           	psect	cstackCOMRAM
  1867  00005E                     __pcstackCOMRAM:
  1868                           	opt callstack 0
  1869  00005E                     ??_TMR6_ISR:
  1870  00005E                     
  1871                           ; 1 bytes @ 0x0
  1872  00005E                     	ds	1
  1873  00005F                     
  1874                           ; 1 bytes @ 0x1
  1875 ;;
  1876 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1877 ;;
  1878 ;; *************** function _main *****************
  1879 ;; Defined at:
  1880 ;;		line 373 in file "main.c"
  1881 ;; Parameters:    Size  Location     Type
  1882 ;;		None
  1883 ;; Auto vars:     Size  Location     Type
  1884 ;;  mode            1  [STACK] enum E16897
  1885 ;; Return value:  Size  Location     Type
  1886 ;;                  1  [STACK] void 
  1887 ;; Registers used:
  1888 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1889 ;; Tracked objects:
  1890 ;;		On entry : 0/0
  1891 ;;		On exit  : 3F/0
  1892 ;;		Unchanged: 0/0
  1893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1898 ;;Total ram usage:        0 bytes
  1899 ;; Hardware stack levels required when called:   14
  1900 ;; This function calls:
  1901 ;;		_SYSTEM_Initialize
  1902 ;;		_StartTimer
  1903 ;;		_TimerDone
  1904 ;;		_UART1_put_buffer
  1905 ;;		_UART2_put_buffer
  1906 ;;		_WaitMs
  1907 ;;		_eaDogM_WriteCommand
  1908 ;;		_eaDogM_WriteStringAtPos
  1909 ;;		_hb_message
  1910 ;;		_init_display
  1911 ;;		_m_protocol
  1912 ;;		_r_protocol
  1913 ;;		_sprintf
  1914 ;;		_srand
  1915 ;;		_t_protocol
  1916 ;;		_wait_lcd_done
  1917 ;; This function is called by:
  1918 ;;		Startup code after reset
  1919 ;; This function uses a reentrant model
  1920 ;;
  1921                           
  1922                           	psect	text0
  1923  0020D8                     __ptext0:
  1924                           	opt callstack 0
  1925  0020D8                     _main:
  1926                           	opt callstack 0
  1927                           
  1928                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1929  0020D8  52E6               	movf	postinc1,f,c
  1930                           
  1931                           ;main.c: 375:  UI_STATES mode;;main.c: 378:  SYSTEM_Initialize();
  1932                           
  1933                           ;incstack = 0
  1934  0020DA  ECCA  F032         	call	_SYSTEM_Initialize	;wreg free
  1935                           
  1936                           ; BSR set to: 60
  1937                           ;main.c: 381:  (INTCON0bits.GIEH = 1);
  1938  0020DE  8ED2               	bsf	16338,7,c	;volatile
  1939                           
  1940                           ; BSR set to: 60
  1941                           ;main.c: 384:  (INTCON0bits.GIEL = 1);
  1942  0020E0  8CD2               	bsf	16338,6,c	;volatile
  1943                           
  1944                           ; BSR set to: 60
  1945                           ;main.c: 386:  V.ui_state = UI_STATE_INIT;
  1946  0020E2  0100               	movlb	0	; () banked
  1947  0020E4  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  1948                           
  1949                           ; BSR set to: 0
  1950                           ;main.c: 391:  WaitMs(300);
  1951  0020E6  0E2C               	movlw	44
  1952  0020E8  6EE6               	movwf	postinc1,c
  1953  0020EA  0E01               	movlw	1
  1954  0020EC  6EE6               	movwf	postinc1,c
  1955  0020EE  ECC3  F033         	call	_WaitMs	;wreg free
  1956                           
  1957                           ;main.c: 392:  if (PORTBbits.RB0) {
  1958  0020F2  A0CB               	btfss	16331,0,c	;volatile
  1959  0020F4  D004               	goto	l9738
  1960                           
  1961                           ;main.c: 393:   mode = UI_STATE_HOST;
  1962                           ;stkvar	_mode @ sp[(-1)+0]
  1963  0020F6  0EFF               	movlw	-1
  1964  0020F8  6AE3               	clrf	plusw1,c
  1965  0020FA  2AE3               	incf	plusw1,f,c
  1966                           
  1967                           ;main.c: 394:  } else {
  1968  0020FC  D004               	goto	l9740
  1969  0020FE                     l9738:
  1970                           
  1971                           ;main.c: 395:   mode = UI_STATE_LOG;
  1972                           ;stkvar	_mode @ sp[(-1)+0]
  1973  0020FE  0EFF               	movlw	-1
  1974  002100  6AE3               	clrf	plusw1,c
  1975  002102  80E3               	bsf	plusw1,0,c
  1976  002104  82E3               	bsf	plusw1,1,c	;indir
  1977  002106                     l9740:
  1978                           
  1979                           ;main.c: 398:  if (mode == UI_STATE_HOST) {
  1980                           ;stkvar	_mode @ sp[(-1)+0]
  1981  002106  0EFF               	movlw	-1
  1982  002108  04E3               	decf	plusw1,w,c
  1983  00210A  A4D8               	btfss	status,2,c
  1984  00210C  D003               	goto	l1242
  1985                           
  1986                           ;main.c: 399:   do { LATDbits.LATD0 = 1; } while(0);
  1987  00210E  80BD               	bsf	16317,0,c	;volatile
  1988                           
  1989                           ;main.c: 400:   do { LATDbits.LATD1 = 1; } while(0);
  1990  002110  82BD               	bsf	16317,1,c	;volatile
  1991  002112  D298               	goto	l9936
  1992  002114                     l1242:
  1993  002114  90BD               	bcf	16317,0,c	;volatile
  1994                           
  1995                           ;main.c: 403:   do { LATDbits.LATD1 = 0; } while(0);
  1996  002116  92BD               	bcf	16317,1,c	;volatile
  1997  002118  D295               	goto	l9936
  1998  00211A                     l9742:
  1999                           
  2000                           ; BSR set to: 0
  2001                           ;main.c: 409:    init_display();
  2002  00211A  ECF6  F02B         	call	_init_display	;wreg free
  2003                           
  2004                           ; BSR set to: 61
  2005                           ;main.c: 410:    eaDogM_WriteCommand(0b00001100);
  2006  00211E  0E0C               	movlw	12
  2007  002120  6EE6               	movwf	postinc1,c
  2008  002122  EC3E  F037         	call	_eaDogM_WriteCommand	;wreg free
  2009                           
  2010                           ; BSR set to: 0
  2011                           ;main.c: 412:    V.ui_state = mode;
  2012                           ;stkvar	_mode @ sp[(-1)+0]
  2013  002126  0EFF               	movlw	-1
  2014  002128  006F FF8C  F061    	movff	plusw1,_V+1	;volatile
  2015                           
  2016                           ; BSR set to: 0
  2017                           ;main.c: 413:    V.s_state = SEQ_STATE_INIT;
  2018  00212E  6B60               	clrf	_V& (0+255),b	;volatile
  2019                           
  2020                           ; BSR set to: 0
  2021                           ;main.c: 414:    srand(1957);
  2022  002130  0EA5               	movlw	165
  2023  002132  6EE6               	movwf	postinc1,c
  2024  002134  0E07               	movlw	7
  2025  002136  6EE6               	movwf	postinc1,c
  2026  002138  ECDE  F033         	call	_srand	;wreg free
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;main.c: 415:    sprintf(V.buf, " RVI HOST TESTER");
  2030  00213C  0E81               	movlw	STR_1& (0+255)
  2031  00213E  6EE6               	movwf	postinc1,c
  2032  002140  0E60               	movlw	_V& (0+255)
  2033  002142  0F06               	addlw	6
  2034  002144  6EE6               	movwf	postinc1,c
  2035  002146  0E02               	movlw	2
  2036  002148  6EE6               	movwf	postinc1,c
  2037  00214A  ECDE  F02C         	call	_sprintf	;wreg free
  2038                           
  2039                           ; BSR set to: 0
  2040                           ;main.c: 416:    wait_lcd_done();
  2041  00214E  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2042                           
  2043                           ; BSR set to: 0
  2044                           ;main.c: 417:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  2045  002152  0E60               	movlw	_V& (0+255)
  2046  002154  0F06               	addlw	6
  2047  002156  6EE6               	movwf	postinc1,c
  2048  002158  0E00               	movlw	0
  2049  00215A  6EE6               	movwf	postinc1,c
  2050  00215C  0E00               	movlw	0
  2051  00215E  6EE6               	movwf	postinc1,c
  2052  002160  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2053                           
  2054                           ; BSR set to: 0
  2055                           ;main.c: 418:    sprintf(V.buf, " Version %s", "0.88B");
  2056  002164  0EC7               	movlw	STR_3& (0+255)
  2057  002166  6E48               	movwf	btemp+11,c
  2058  002168  0060  F123  FFE6   	movff	btemp+11,postinc1
  2059  00216E  0E20               	movlw	high __smallconst
  2060  002170  6EE6               	movwf	postinc1,c
  2061  002172  0EAF               	movlw	STR_2& (0+255)
  2062  002174  6EE6               	movwf	postinc1,c
  2063  002176  0E60               	movlw	_V& (0+255)
  2064  002178  0F06               	addlw	6
  2065  00217A  6EE6               	movwf	postinc1,c
  2066  00217C  0E04               	movlw	4
  2067  00217E  6EE6               	movwf	postinc1,c
  2068  002180  ECDE  F02C         	call	_sprintf	;wreg free
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;main.c: 419:    wait_lcd_done();
  2072  002184  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2073                           
  2074                           ; BSR set to: 0
  2075                           ;main.c: 420:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2076  002188  0E60               	movlw	_V& (0+255)
  2077  00218A  0F06               	addlw	6
  2078  00218C  6EE6               	movwf	postinc1,c
  2079  00218E  0E00               	movlw	0
  2080  002190  6EE6               	movwf	postinc1,c
  2081  002192  0E01               	movlw	1
  2082  002194  6EE6               	movwf	postinc1,c
  2083  002196  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2084                           
  2085                           ; BSR set to: 0
  2086                           ;main.c: 421:    sprintf(V.buf, " FGB@MCHP FAB4");
  2087  00219A  0E92               	movlw	STR_4& (0+255)
  2088  00219C  6EE6               	movwf	postinc1,c
  2089  00219E  0E60               	movlw	_V& (0+255)
  2090  0021A0  0F06               	addlw	6
  2091  0021A2  6EE6               	movwf	postinc1,c
  2092  0021A4  0E02               	movlw	2
  2093  0021A6  6EE6               	movwf	postinc1,c
  2094  0021A8  ECDE  F02C         	call	_sprintf	;wreg free
  2095                           
  2096                           ; BSR set to: 0
  2097                           ;main.c: 422:    wait_lcd_done();
  2098  0021AC  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2099                           
  2100                           ; BSR set to: 0
  2101                           ;main.c: 423:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  2102  0021B0  0E60               	movlw	_V& (0+255)
  2103  0021B2  0F06               	addlw	6
  2104  0021B4  6EE6               	movwf	postinc1,c
  2105  0021B6  0E00               	movlw	0
  2106  0021B8  6EE6               	movwf	postinc1,c
  2107  0021BA  0E02               	movlw	2
  2108  0021BC  6EE6               	movwf	postinc1,c
  2109  0021BE  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;main.c: 424:    WaitMs(3000);
  2113  0021C2  0EB8               	movlw	184
  2114  0021C4  6EE6               	movwf	postinc1,c
  2115  0021C6  0E0B               	movlw	11
  2116  0021C8  6EE6               	movwf	postinc1,c
  2117  0021CA  ECC3  F033         	call	_WaitMs	;wreg free
  2118                           
  2119                           ;main.c: 425:    break;
  2120  0021CE  D24E               	goto	l1287
  2121  0021D0                     l1252:
  2122                           
  2123                           ; BSR set to: 0
  2124                           ;main.c: 429:     V.r_l_state = LINK_STATE_IDLE;
  2125  0021D0  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  2126                           
  2127                           ;main.c: 430:     V.t_l_state = LINK_STATE_IDLE;
  2128  0021D2  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2129                           
  2130                           ; BSR set to: 0
  2131                           ;main.c: 431:     V.s_state = SEQ_STATE_RX;
  2132  0021D4  0E01               	movlw	1
  2133  0021D6  6F60               	movwf	_V& (0+255),b	;volatile
  2134                           
  2135                           ; BSR set to: 0
  2136                           ;main.c: 432:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2137  0021D8  0E0A               	movlw	10
  2138  0021DA  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2139  0021DC  A4D8               	btfss	status,2,c
  2140  0021DE  D029               	goto	l9786
  2141                           
  2142                           ; BSR set to: 0
  2143  0021E0  0E0A               	movlw	10
  2144  0021E2  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2145  0021E4  A4D8               	btfss	status,2,c
  2146  0021E6  D025               	goto	l9786
  2147                           
  2148                           ; BSR set to: 0
  2149                           ;main.c: 433:      sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2150  0021E8  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2151  0021EA  6EE6               	movwf	postinc1,c
  2152  0021EC  0E00               	movlw	0
  2153  0021EE  6EE6               	movwf	postinc1,c
  2154  0021F0  0060  F29B  FFE6   	movff	_V+70,postinc1
  2155  0021F6  0060  F29F  FFE6   	movff	_V+71,postinc1
  2156  0021FC  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2157  002202  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2158  002208  0E35               	movlw	STR_5& (0+255)
  2159  00220A  6EE6               	movwf	postinc1,c
  2160  00220C  0E60               	movlw	_V& (0+255)
  2161  00220E  0F06               	addlw	6
  2162  002210  6EE6               	movwf	postinc1,c
  2163  002212  0E08               	movlw	8
  2164  002214  6EE6               	movwf	postinc1,c
  2165  002216  ECDE  F02C         	call	_sprintf	;wreg free
  2166                           
  2167                           ; BSR set to: 0
  2168                           ;main.c: 434:      V.buf[16] = 0;
  2169  00221A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;main.c: 435:      wait_lcd_done();
  2173  00221C  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2174                           
  2175                           ; BSR set to: 0
  2176                           ;main.c: 436:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  2177  002220  0E60               	movlw	_V& (0+255)
  2178  002222  0F06               	addlw	6
  2179  002224  6EE6               	movwf	postinc1,c
  2180  002226  0E00               	movlw	0
  2181  002228  6EE6               	movwf	postinc1,c
  2182  00222A  0E02               	movlw	2
  2183  00222C  6EE6               	movwf	postinc1,c
  2184  00222E  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2185  002232                     l9786:
  2186                           
  2187                           ; BSR set to: 0
  2188                           ;main.c: 439:     WaitMs(50);
  2189  002232  0E32               	movlw	50
  2190  002234  6EE6               	movwf	postinc1,c
  2191  002236  0E00               	movlw	0
  2192  002238  6EE6               	movwf	postinc1,c
  2193  00223A  ECC3  F033         	call	_WaitMs	;wreg free
  2194                           
  2195                           ;main.c: 440:     UART1_put_buffer(0x05);
  2196  00223E  0E05               	movlw	5
  2197  002240  6EE6               	movwf	postinc1,c
  2198  002242  EC7D  F034         	call	_UART1_put_buffer	;wreg free
  2199                           
  2200                           ;main.c: 442:     break;
  2201  002246  D0C1               	goto	l9850
  2202  002248                     l9790:
  2203                           
  2204                           ; BSR set to: 0
  2205                           ;main.c: 447:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  2206  002248  0E60               	movlw	_V& (0+255)
  2207  00224A  0F04               	addlw	4
  2208  00224C  6EE6               	movwf	postinc1,c
  2209  00224E  EC4D  F01B         	call	_r_protocol	;wreg free
  2210  002252  0E04               	movlw	4
  2211  002254  183D               	xorwf	btemp,w,c
  2212  002256  A4D8               	btfss	status,2,c
  2213  002258  D02F               	goto	l9810
  2214                           
  2215                           ;main.c: 448:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  2216  00225A  0100               	movlb	0	; () banked
  2217  00225C  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2218  00225E  6EE6               	movwf	postinc1,c
  2219  002260  0E00               	movlw	0
  2220  002262  6EE6               	movwf	postinc1,c
  2221  002264  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2222  002266  6EE6               	movwf	postinc1,c
  2223  002268  0E00               	movlw	0
  2224  00226A  6EE6               	movwf	postinc1,c
  2225  00226C  0EA1               	movlw	STR_6& (0+255)
  2226  00226E  6EE6               	movwf	postinc1,c
  2227  002270  0E60               	movlw	_V& (0+255)
  2228  002272  0F06               	addlw	6
  2229  002274  6EE6               	movwf	postinc1,c
  2230  002276  0E06               	movlw	6
  2231  002278  6EE6               	movwf	postinc1,c
  2232  00227A  ECDE  F02C         	call	_sprintf	;wreg free
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;main.c: 449:      V.buf[11] = 0;
  2236  00227E  6B71               	clrf	(_V+17)& (0+255),b	;volatile
  2237                           
  2238                           ; BSR set to: 0
  2239                           ;main.c: 450:      wait_lcd_done();
  2240  002280  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2241                           
  2242                           ; BSR set to: 0
  2243                           ;main.c: 451:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  2244  002284  0E60               	movlw	_V& (0+255)
  2245  002286  0F06               	addlw	6
  2246  002288  6EE6               	movwf	postinc1,c
  2247  00228A  0E00               	movlw	0
  2248  00228C  6EE6               	movwf	postinc1,c
  2249  00228E  0E00               	movlw	0
  2250  002290  6EE6               	movwf	postinc1,c
  2251  002292  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;main.c: 453:      WaitMs(5);
  2255  002296  0E05               	movlw	5
  2256  002298  6EE6               	movwf	postinc1,c
  2257  00229A  0E00               	movlw	0
  2258  00229C  6EE6               	movwf	postinc1,c
  2259  00229E  ECC3  F033         	call	_WaitMs	;wreg free
  2260                           
  2261                           ;main.c: 455:      if (V.wbit) {
  2262  0022A2  0100               	movlb	0	; () banked
  2263  0022A4  A3BD               	btfss	(_V+93)& (0+255),1,b	;volatile
  2264  0022A6  D006               	goto	l9808
  2265                           
  2266                           ; BSR set to: 0
  2267                           ;main.c: 456:       V.s_state = SEQ_STATE_TX;
  2268  0022A8  0E02               	movlw	2
  2269  0022AA  6F60               	movwf	_V& (0+255),b	;volatile
  2270                           
  2271                           ;main.c: 457:       V.failed_send = 0;
  2272  0022AC  0E87               	movlw	-121
  2273  0022AE  17BD               	andwf	(_V+93)& (0+255),f,b	;volatile
  2274                           
  2275                           ; BSR set to: 0
  2276                           ;main.c: 458:       V.t_l_state = LINK_STATE_IDLE;
  2277  0022B0  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2278                           
  2279                           ;main.c: 459:      } else {
  2280  0022B2  D002               	goto	l9810
  2281  0022B4                     l9808:
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;main.c: 460:       V.s_state = SEQ_STATE_TRIGGER;
  2285  0022B4  0E03               	movlw	3
  2286  0022B6  6F60               	movwf	_V& (0+255),b	;volatile
  2287  0022B8                     l9810:
  2288                           
  2289                           ;main.c: 463:     if (V.r_l_state == LINK_STATE_ERROR)
  2290  0022B8  0E06               	movlw	6
  2291  0022BA  0100               	movlb	0	; () banked
  2292  0022BC  1964               	xorwf	(_V+4)& (0+255),w,b	;volatile
  2293  0022BE  D00F               	goto	L28
  2294  0022C0                     l9814:
  2295                           
  2296                           ; BSR set to: 0
  2297                           ;main.c: 470:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  2298  0022C0  0E60               	movlw	_V& (0+255)
  2299  0022C2  0F05               	addlw	5
  2300  0022C4  6EE6               	movwf	postinc1,c
  2301  0022C6  EC91  F01E         	call	_t_protocol	;wreg free
  2302  0022CA  0E04               	movlw	4
  2303  0022CC  183D               	xorwf	btemp,w,c
  2304  0022CE  A4D8               	btfss	status,2,c
  2305  0022D0  D003               	goto	l9818
  2306                           
  2307                           ;main.c: 471:      V.s_state = SEQ_STATE_TRIGGER;
  2308  0022D2  0E03               	movlw	3
  2309  0022D4  0100               	movlb	0	; () banked
  2310  0022D6  6F60               	movwf	_V& (0+255),b	;volatile
  2311  0022D8                     l9818:
  2312                           
  2313                           ;main.c: 473:     if (V.t_l_state == LINK_STATE_ERROR)
  2314  0022D8  0E06               	movlw	6
  2315  0022DA  0100               	movlb	0	; () banked
  2316  0022DC  1965               	xorwf	(_V+5)& (0+255),w,b	;volatile
  2317  0022DE                     L28:
  2318  0022DE  A4D8               	btfss	status,2,c
  2319  0022E0  D074               	goto	l9850
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;main.c: 474:      V.s_state = SEQ_STATE_ERROR;
  2323  0022E2  0E06               	movlw	6
  2324  0022E4  6F60               	movwf	_V& (0+255),b	;volatile
  2325  0022E6  D071               	goto	l9850
  2326  0022E8                     l1263:
  2327                           
  2328                           ; BSR set to: 0
  2329                           ;main.c: 477:     if (V.queue) {
  2330  0022E8  A9BE               	btfss	(_V+94)& (0+255),4,b	;volatile
  2331  0022EA  D00E               	goto	l9828
  2332                           
  2333                           ; BSR set to: 0
  2334                           ;main.c: 478:      V.r_l_state = LINK_STATE_IDLE;
  2335  0022EC  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  2336                           
  2337                           ;main.c: 479:      V.t_l_state = LINK_STATE_IDLE;
  2338  0022EE  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2339                           
  2340                           ; BSR set to: 0
  2341                           ;main.c: 480:      V.s_state = SEQ_STATE_TX;
  2342  0022F0  0E02               	movlw	2
  2343  0022F2  6F60               	movwf	_V& (0+255),b	;volatile
  2344                           
  2345                           ; BSR set to: 0
  2346                           ;main.c: 481:      sprintf(V.buf, " OKQ#");
  2347  0022F4  0EC1               	movlw	STR_7& (0+255)
  2348  0022F6  6EE6               	movwf	postinc1,c
  2349  0022F8  0E60               	movlw	_V& (0+255)
  2350  0022FA  0F06               	addlw	6
  2351  0022FC  6EE6               	movwf	postinc1,c
  2352  0022FE  0E02               	movlw	2
  2353  002300  6EE6               	movwf	postinc1,c
  2354  002302  ECDE  F02C         	call	_sprintf	;wreg free
  2355                           
  2356                           ;main.c: 482:     } else {
  2357  002306  D00B               	goto	l9832
  2358  002308                     l9828:
  2359                           
  2360                           ; BSR set to: 0
  2361                           ;main.c: 483:      V.s_state = SEQ_STATE_DONE;
  2362  002308  0E05               	movlw	5
  2363  00230A  6F60               	movwf	_V& (0+255),b	;volatile
  2364                           
  2365                           ; BSR set to: 0
  2366                           ;main.c: 484:      sprintf(V.buf, " OK #");
  2367  00230C  0EBB               	movlw	STR_8& (0+255)
  2368  00230E  6EE6               	movwf	postinc1,c
  2369  002310  0E60               	movlw	_V& (0+255)
  2370  002312  0F06               	addlw	6
  2371  002314  6EE6               	movwf	postinc1,c
  2372  002316  0E02               	movlw	2
  2373  002318  6EE6               	movwf	postinc1,c
  2374  00231A  ECDE  F02C         	call	_sprintf	;wreg free
  2375  00231E                     l9832:
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;main.c: 486:     wait_lcd_done();
  2379  00231E  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2380                           
  2381                           ; BSR set to: 0
  2382                           ;main.c: 487:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  2383  002322  0E60               	movlw	_V& (0+255)
  2384  002324  0F06               	addlw	6
  2385  002326  6EE6               	movwf	postinc1,c
  2386  002328  0E0B               	movlw	11
  2387  00232A  6EE6               	movwf	postinc1,c
  2388  00232C  0E00               	movlw	0
  2389  00232E  6EE6               	movwf	postinc1,c
  2390  002330  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2391                           
  2392                           ;main.c: 488:     break;
  2393  002334  D04A               	goto	l9850
  2394  002336                     l1266:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;main.c: 490:     V.s_state = SEQ_STATE_INIT;
  2398  002336  6B60               	clrf	_V& (0+255),b	;volatile
  2399                           
  2400                           ;main.c: 491:     break;
  2401  002338  D048               	goto	l9850
  2402  00233A                     l1268:
  2403                           
  2404                           ; BSR set to: 0
  2405                           ;main.c: 494:     V.s_state = SEQ_STATE_INIT;
  2406  00233A  6B60               	clrf	_V& (0+255),b	;volatile
  2407                           
  2408                           ; BSR set to: 0
  2409                           ;main.c: 495:     sprintf(V.buf, "E%d A%d T%d G%d #", V.error, V.abort, V.timer_error, V
      +                          .g_state);
  2410  00233C  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2411  00233E  6EE6               	movwf	postinc1,c
  2412  002340  0E00               	movlw	0
  2413  002342  6EE6               	movwf	postinc1,c
  2414  002344  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2415  00234A  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2416  002350  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  2417  002352  6EE6               	movwf	postinc1,c
  2418  002354  0E00               	movlw	0
  2419  002356  6EE6               	movwf	postinc1,c
  2420  002358  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2421  00235A  6EE6               	movwf	postinc1,c
  2422  00235C  0E00               	movlw	0
  2423  00235E  6EE6               	movwf	postinc1,c
  2424  002360  0E5D               	movlw	STR_9& (0+255)
  2425  002362  6EE6               	movwf	postinc1,c
  2426  002364  0E60               	movlw	_V& (0+255)
  2427  002366  0F06               	addlw	6
  2428  002368  6EE6               	movwf	postinc1,c
  2429  00236A  0E0A               	movlw	10
  2430  00236C  6EE6               	movwf	postinc1,c
  2431  00236E  ECDE  F02C         	call	_sprintf	;wreg free
  2432                           
  2433                           ; BSR set to: 0
  2434                           ;main.c: 496:     V.buf[16] = 0;
  2435  002372  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;main.c: 497:     wait_lcd_done();
  2439  002374  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2440                           
  2441                           ; BSR set to: 0
  2442                           ;main.c: 498:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2443  002378  0E60               	movlw	_V& (0+255)
  2444  00237A  0F06               	addlw	6
  2445  00237C  6EE6               	movwf	postinc1,c
  2446  00237E  0E00               	movlw	0
  2447  002380  6EE6               	movwf	postinc1,c
  2448  002382  0E02               	movlw	2
  2449  002384  6EE6               	movwf	postinc1,c
  2450  002386  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2451                           
  2452                           ; BSR set to: 0
  2453                           ;main.c: 499:     WaitMs(2000);
  2454  00238A  0ED0               	movlw	208
  2455  00238C  6EE6               	movwf	postinc1,c
  2456  00238E  0E07               	movlw	7
  2457  002390  6EE6               	movwf	postinc1,c
  2458  002392  ECC3  F033         	call	_WaitMs	;wreg free
  2459                           
  2460                           ;main.c: 500:     break;
  2461  002396  D019               	goto	l9850
  2462  002398                     l9848:
  2463                           
  2464                           ; BSR set to: 0
  2465  002398  5160               	movf	_V& (0+255),w,b	;volatile
  2466  00239A  6E47               	movwf	btemp+10,c
  2467  00239C  6A48               	clrf	btemp+11,c
  2468                           
  2469                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2470                           ; Switch size 1, requested type "simple"
  2471                           ; Number of cases is 1, Range of values is 0 to 0
  2472                           ; switch strategies available:
  2473                           ; Name         Instructions Cycles
  2474                           ; simple_byte            4     3 (average)
  2475                           ;	Chosen strategy is simple_byte
  2476  00239E  5048               	movf	btemp+11,w,c
  2477  0023A0  0A00               	xorlw	0	; case 0
  2478  0023A2  A4D8               	btfss	status,2,c
  2479  0023A4  D7CA               	goto	l1268
  2480                           
  2481                           ; BSR set to: 0
  2482                           ; Switch size 1, requested type "simple"
  2483                           ; Number of cases is 6, Range of values is 0 to 6
  2484                           ; switch strategies available:
  2485                           ; Name         Instructions Cycles
  2486                           ; simple_byte           19    10 (average)
  2487                           ;	Chosen strategy is simple_byte
  2488  0023A6  5047               	movf	btemp+10,w,c
  2489  0023A8  0A00               	xorlw	0	; case 0
  2490  0023AA  B4D8               	btfsc	status,2,c
  2491  0023AC  D711               	goto	l1252
  2492  0023AE  0A01               	xorlw	1	; case 1
  2493  0023B0  B4D8               	btfsc	status,2,c
  2494  0023B2  D74A               	goto	l9790
  2495  0023B4  0A03               	xorlw	3	; case 2
  2496  0023B6  B4D8               	btfsc	status,2,c
  2497  0023B8  D783               	goto	l9814
  2498  0023BA  0A01               	xorlw	1	; case 3
  2499  0023BC  B4D8               	btfsc	status,2,c
  2500  0023BE  D794               	goto	l1263
  2501  0023C0  0A06               	xorlw	6	; case 5
  2502  0023C2  B4D8               	btfsc	status,2,c
  2503  0023C4  D7B8               	goto	l1266
  2504  0023C6  0A03               	xorlw	3	; case 6
  2505  0023C8  D7B8               	goto	l1268
  2506  0023CA                     l9850:
  2507                           
  2508                           ;main.c: 502:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2509  0023CA  0E0A               	movlw	10
  2510  0023CC  0100               	movlb	0	; () banked
  2511  0023CE  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2512  0023D0  A4D8               	btfss	status,2,c
  2513  0023D2  D14C               	goto	l1287
  2514                           
  2515                           ; BSR set to: 0
  2516  0023D4  0E0A               	movlw	10
  2517  0023D6  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2518  0023D8  A4D8               	btfss	status,2,c
  2519  0023DA  D148               	goto	l1287
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;main.c: 503:     sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2523  0023DC  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2524  0023DE  6EE6               	movwf	postinc1,c
  2525  0023E0  0E00               	movlw	0
  2526  0023E2  6EE6               	movwf	postinc1,c
  2527  0023E4  0060  F29B  FFE6   	movff	_V+70,postinc1
  2528  0023EA  0060  F29F  FFE6   	movff	_V+71,postinc1
  2529  0023F0  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2530  0023F6  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2531  0023FC  0E35               	movlw	STR_5& (0+255)
  2532  0023FE  6EE6               	movwf	postinc1,c
  2533  002400  0E60               	movlw	_V& (0+255)
  2534  002402  0F06               	addlw	6
  2535  002404  6EE6               	movwf	postinc1,c
  2536  002406  0E08               	movlw	8
  2537  002408  6EE6               	movwf	postinc1,c
  2538  00240A  ECDE  F02C         	call	_sprintf	;wreg free
  2539                           
  2540                           ; BSR set to: 0
  2541                           ;main.c: 504:     V.buf[16] = 0;
  2542  00240E  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;main.c: 505:     wait_lcd_done();
  2546  002410  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2547                           
  2548                           ; BSR set to: 0
  2549                           ;main.c: 506:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2550  002414  0E60               	movlw	_V& (0+255)
  2551  002416  0F06               	addlw	6
  2552  002418  6EE6               	movwf	postinc1,c
  2553  00241A  0E00               	movlw	0
  2554  00241C  6EE6               	movwf	postinc1,c
  2555  00241E  0E02               	movlw	2
  2556  002420  6EE6               	movwf	postinc1,c
  2557  002422  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2558                           
  2559                           ; BSR set to: 0
  2560                           ;main.c: 510:     if (V.g_state == GEM_STATE_REMOTE && V.s_state == SEQ_STATE_RX) {
  2561  002426  0E04               	movlw	4
  2562  002428  1962               	xorwf	(_V+2)& (0+255),w,b	;volatile
  2563  00242A  A4D8               	btfss	status,2,c
  2564  00242C  D11F               	goto	l1287
  2565                           
  2566                           ; BSR set to: 0
  2567  00242E  0560               	decf	_V& (0+255),w,b	;volatile
  2568  002430  A4D8               	btfss	status,2,c
  2569  002432  D11C               	goto	l1287
  2570                           
  2571                           ; BSR set to: 0
  2572                           ;main.c: 511:      if (TimerDone(TMR_HBIO)) {
  2573  002434  0E06               	movlw	6
  2574  002436  6EE6               	movwf	postinc1,c
  2575  002438  ECA6  F034         	call	_TimerDone	;wreg free
  2576  00243C  503D               	movf	btemp,w,c
  2577  00243E  B4D8               	btfsc	status,2,c
  2578  002440  D115               	goto	l1287
  2579                           
  2580                           ;main.c: 512:       StartTimer(TMR_HBIO, 10000);
  2581  002442  0E10               	movlw	16
  2582  002444  6EE6               	movwf	postinc1,c
  2583  002446  0E27               	movlw	39
  2584  002448  6EE6               	movwf	postinc1,c
  2585  00244A  0E06               	movlw	6
  2586  00244C  6EE6               	movwf	postinc1,c
  2587  00244E  ECEB  F032         	call	_StartTimer	;wreg free
  2588                           
  2589                           ;main.c: 514:       hb_message();
  2590  002452  ECE2  F036         	call	_hb_message	;wreg free
  2591                           
  2592                           ; BSR set to: 0
  2593                           ;main.c: 515:       sprintf(V.buf, " Ping G%d  P%3d #", V.g_state, V.ping);
  2594  002456  0060  F2EF  FFE6   	movff	_V+91,postinc1
  2595  00245C  0060  F2F3  FFE6   	movff	_V+92,postinc1
  2596  002462  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2597  002464  6EE6               	movwf	postinc1,c
  2598  002466  0E00               	movlw	0
  2599  002468  6EE6               	movwf	postinc1,c
  2600  00246A  0E6F               	movlw	STR_11& (0+255)
  2601  00246C  6EE6               	movwf	postinc1,c
  2602  00246E  0E60               	movlw	_V& (0+255)
  2603  002470  0F06               	addlw	6
  2604  002472  6EE6               	movwf	postinc1,c
  2605  002474  0E06               	movlw	6
  2606  002476  6EE6               	movwf	postinc1,c
  2607  002478  ECDE  F02C         	call	_sprintf	;wreg free
  2608                           
  2609                           ; BSR set to: 0
  2610                           ;main.c: 516:       V.buf[16] = 0;
  2611  00247C  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;main.c: 517:       wait_lcd_done();
  2615  00247E  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2616                           
  2617                           ; BSR set to: 0
  2618                           ;main.c: 518:       eaDogM_WriteStringAtPos(0, 0, V.buf);
  2619  002482  0E60               	movlw	_V& (0+255)
  2620  002484  0F06               	addlw	6
  2621  002486  6EE6               	movwf	postinc1,c
  2622  002488  0E00               	movlw	0
  2623  00248A  6EE6               	movwf	postinc1,c
  2624  00248C  0E00               	movlw	0
  2625  00248E  6EE6               	movwf	postinc1,c
  2626  002490  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2627                           
  2628                           ; BSR set to: 0
  2629                           ;main.c: 519:       WaitMs(1000);
  2630  002494  0EE8               	movlw	232
  2631  002496  6EE6               	movwf	postinc1,c
  2632  002498  0E03               	movlw	3
  2633  00249A  6EE6               	movwf	postinc1,c
  2634  00249C  ECC3  F033         	call	_WaitMs	;wreg free
  2635                           
  2636                           ;main.c: 523:    break;
  2637                           
  2638                           ;main.c: 522:    }
  2639  0024A0  D0E5               	goto	l1287
  2640  0024A2                     l1274:
  2641                           
  2642                           ; BSR set to: 0
  2643                           ;main.c: 527:     V.m_l_state = LINK_STATE_IDLE;
  2644  0024A2  6B63               	clrf	(_V+3)& (0+255),b	;volatile
  2645                           
  2646                           ; BSR set to: 0
  2647                           ;main.c: 528:     V.s_state = SEQ_STATE_RX;
  2648  0024A4  0E01               	movlw	1
  2649  0024A6  6F60               	movwf	_V& (0+255),b	;volatile
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;main.c: 529:     sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer
      +                          _error, V.checksum_error);
  2653  0024A8  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2654  0024AE  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2655  0024B4  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2656  0024BA  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2657  0024C0  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2658  0024C2  6EE6               	movwf	postinc1,c
  2659  0024C4  0E00               	movlw	0
  2660  0024C6  6EE6               	movwf	postinc1,c
  2661  0024C8  51C2               	movf	(_V+98)& (0+255),w,b	;volatile
  2662  0024CA  6EE6               	movwf	postinc1,c
  2663  0024CC  0E00               	movlw	0
  2664  0024CE  6EE6               	movwf	postinc1,c
  2665  0024D0  0E01               	movlw	STR_12& (0+255)
  2666  0024D2  6EE6               	movwf	postinc1,c
  2667  0024D4  0E60               	movlw	_V& (0+255)
  2668  0024D6  0F06               	addlw	6
  2669  0024D8  6EE6               	movwf	postinc1,c
  2670  0024DA  0E0A               	movlw	10
  2671  0024DC  6EE6               	movwf	postinc1,c
  2672  0024DE  ECDE  F02C         	call	_sprintf	;wreg free
  2673                           
  2674                           ; BSR set to: 0
  2675                           ;main.c: 530:     V.buf[16] = 0;
  2676  0024E2  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2677                           
  2678                           ; BSR set to: 0
  2679                           ;main.c: 531:     wait_lcd_done();
  2680  0024E4  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2681                           
  2682                           ; BSR set to: 0
  2683                           ;main.c: 532:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2684  0024E8  0E60               	movlw	_V& (0+255)
  2685  0024EA  0F06               	addlw	6
  2686  0024EC  6EE6               	movwf	postinc1,c
  2687  0024EE  0E00               	movlw	0
  2688  0024F0  6EE6               	movwf	postinc1,c
  2689  0024F2  0E02               	movlw	2
  2690  0024F4  6EE6               	movwf	postinc1,c
  2691  0024F6  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2692                           
  2693                           ; BSR set to: 0
  2694                           ;main.c: 534:     if (LATEbits.LATE0) {
  2695  0024FA  A0BE               	btfss	16318,0,c	;volatile
  2696  0024FC  D005               	goto	l9896
  2697                           
  2698                           ; BSR set to: 0
  2699                           ;main.c: 535:      UART2_put_buffer(0x05);
  2700  0024FE  0E05               	movlw	5
  2701  002500  6EE6               	movwf	postinc1,c
  2702  002502  EC68  F034         	call	_UART2_put_buffer	;wreg free
  2703                           
  2704                           ;main.c: 536:     } else {
  2705  002506  D071               	goto	l9926
  2706  002508                     l9896:
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;main.c: 537:      UART1_put_buffer(0x05);
  2710  002508  0E05               	movlw	5
  2711  00250A  6EE6               	movwf	postinc1,c
  2712  00250C  EC7D  F034         	call	_UART1_put_buffer	;wreg free
  2713  002510  D06C               	goto	l9926
  2714  002512                     l9898:
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;main.c: 545:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2718  002512  0E60               	movlw	_V& (0+255)
  2719  002514  0F03               	addlw	3
  2720  002516  6EE6               	movwf	postinc1,c
  2721  002518  EC7A  F016         	call	_m_protocol	;wreg free
  2722  00251C  0E04               	movlw	4
  2723  00251E  183D               	xorwf	btemp,w,c
  2724  002520  A4D8               	btfss	status,2,c
  2725  002522  D02C               	goto	l9910
  2726                           
  2727                           ;main.c: 546:      sprintf(V.buf, " S%dF%d #%ld      ", V.stream, V.function, V.ticks);
  2728  002524  0060  F29B  FFE6   	movff	_V+70,postinc1
  2729  00252A  0060  F29F  FFE6   	movff	_V+71,postinc1
  2730  002530  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2731  002536  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2732  00253C  0100               	movlb	0	; () banked
  2733  00253E  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2734  002540  6EE6               	movwf	postinc1,c
  2735  002542  0E00               	movlw	0
  2736  002544  6EE6               	movwf	postinc1,c
  2737  002546  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2738  002548  6EE6               	movwf	postinc1,c
  2739  00254A  0E00               	movlw	0
  2740  00254C  6EE6               	movwf	postinc1,c
  2741  00254E  0E4A               	movlw	STR_13& (0+255)
  2742  002550  6EE6               	movwf	postinc1,c
  2743  002552  0E60               	movlw	_V& (0+255)
  2744  002554  0F06               	addlw	6
  2745  002556  6EE6               	movwf	postinc1,c
  2746  002558  0E0A               	movlw	10
  2747  00255A  6EE6               	movwf	postinc1,c
  2748  00255C  ECDE  F02C         	call	_sprintf	;wreg free
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;main.c: 547:      V.buf[13] = 0;
  2752  002560  6B73               	clrf	(_V+19)& (0+255),b	;volatile
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;main.c: 548:      wait_lcd_done();
  2756  002562  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2757                           
  2758                           ; BSR set to: 0
  2759                           ;main.c: 549:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2760  002566  0E60               	movlw	_V& (0+255)
  2761  002568  0F06               	addlw	6
  2762  00256A  6EE6               	movwf	postinc1,c
  2763  00256C  0E00               	movlw	0
  2764  00256E  6EE6               	movwf	postinc1,c
  2765  002570  05C2               	decf	(_V+98)& (0+255),w,b	;volatile
  2766  002572  6EE6               	movwf	postinc1,c
  2767  002574  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;main.c: 550:      V.s_state = SEQ_STATE_TRIGGER;
  2771  002578  0E03               	movlw	3
  2772  00257A  6F60               	movwf	_V& (0+255),b	;volatile
  2773  00257C                     l9910:
  2774                           
  2775                           ;main.c: 552:     if (V.m_l_state == LINK_STATE_ERROR)
  2776  00257C  0E06               	movlw	6
  2777  00257E  0100               	movlb	0	; () banked
  2778  002580  1963               	xorwf	(_V+3)& (0+255),w,b	;volatile
  2779  002582  A4D8               	btfss	status,2,c
  2780  002584  D032               	goto	l9926
  2781                           
  2782                           ; BSR set to: 0
  2783                           ;main.c: 553:      V.s_state = SEQ_STATE_ERROR;
  2784  002586  0E06               	movlw	6
  2785  002588  6F60               	movwf	_V& (0+255),b	;volatile
  2786  00258A  D02F               	goto	l9926
  2787  00258C                     l9914:
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;main.c: 556:     V.s_state = SEQ_STATE_DONE;
  2791  00258C  0E05               	movlw	5
  2792  00258E  6F60               	movwf	_V& (0+255),b	;volatile
  2793                           
  2794                           ; BSR set to: 0
  2795                           ;main.c: 557:     sprintf(V.buf, " OK #");
  2796  002590  0EBB               	movlw	STR_8& (0+255)
  2797  002592  6EE6               	movwf	postinc1,c
  2798  002594  0E60               	movlw	_V& (0+255)
  2799  002596  0F06               	addlw	6
  2800  002598  6EE6               	movwf	postinc1,c
  2801  00259A  0E02               	movlw	2
  2802  00259C  6EE6               	movwf	postinc1,c
  2803  00259E  ECDE  F02C         	call	_sprintf	;wreg free
  2804                           
  2805                           ; BSR set to: 0
  2806                           ;main.c: 558:     wait_lcd_done();
  2807  0025A2  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;main.c: 559:     eaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  2811  0025A6  0E60               	movlw	_V& (0+255)
  2812  0025A8  0F06               	addlw	6
  2813  0025AA  6EE6               	movwf	postinc1,c
  2814  0025AC  0E0D               	movlw	13
  2815  0025AE  6EE6               	movwf	postinc1,c
  2816  0025B0  05C2               	decf	(_V+98)& (0+255),w,b	;volatile
  2817  0025B2  6EE6               	movwf	postinc1,c
  2818  0025B4  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2819                           
  2820                           ;main.c: 560:     break;
  2821  0025B8  D018               	goto	l9926
  2822  0025BA                     l1282:
  2823                           
  2824                           ; BSR set to: 0
  2825                           ;main.c: 566:     V.s_state = SEQ_STATE_INIT;
  2826                           
  2827                           ;main.c: 565:    default:
  2828                           
  2829                           ;main.c: 563:     break;
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;main.c: 562:     V.s_state = SEQ_STATE_INIT;
  2833  0025BA  6B60               	clrf	_V& (0+255),b	;volatile
  2834                           
  2835                           ;main.c: 567:     break;
  2836  0025BC  D016               	goto	l9926
  2837  0025BE                     l9924:
  2838                           
  2839                           ; BSR set to: 0
  2840  0025BE  5160               	movf	_V& (0+255),w,b	;volatile
  2841  0025C0  6E47               	movwf	btemp+10,c
  2842  0025C2  6A48               	clrf	btemp+11,c
  2843                           
  2844                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2845                           ; Switch size 1, requested type "simple"
  2846                           ; Number of cases is 1, Range of values is 0 to 0
  2847                           ; switch strategies available:
  2848                           ; Name         Instructions Cycles
  2849                           ; simple_byte            4     3 (average)
  2850                           ;	Chosen strategy is simple_byte
  2851  0025C4  5048               	movf	btemp+11,w,c
  2852  0025C6  0A00               	xorlw	0	; case 0
  2853  0025C8  A4D8               	btfss	status,2,c
  2854  0025CA  D7F7               	goto	l1282
  2855                           
  2856                           ; BSR set to: 0
  2857                           ; Switch size 1, requested type "simple"
  2858                           ; Number of cases is 5, Range of values is 0 to 6
  2859                           ; switch strategies available:
  2860                           ; Name         Instructions Cycles
  2861                           ; simple_byte           16     9 (average)
  2862                           ;	Chosen strategy is simple_byte
  2863  0025CC  5047               	movf	btemp+10,w,c
  2864  0025CE  0A00               	xorlw	0	; case 0
  2865  0025D0  B4D8               	btfsc	status,2,c
  2866  0025D2  D767               	goto	l1274
  2867  0025D4  0A01               	xorlw	1	; case 1
  2868  0025D6  B4D8               	btfsc	status,2,c
  2869  0025D8  D79C               	goto	l9898
  2870  0025DA  0A02               	xorlw	2	; case 3
  2871  0025DC  B4D8               	btfsc	status,2,c
  2872  0025DE  D7D6               	goto	l9914
  2873  0025E0  0A06               	xorlw	6	; case 5
  2874  0025E2  B4D8               	btfsc	status,2,c
  2875  0025E4  D7EA               	goto	l1282
  2876  0025E6  0A03               	xorlw	3	; case 6
  2877  0025E8  D7E8               	goto	l1282
  2878  0025EA                     l9926:
  2879                           
  2880                           ;main.c: 569:    sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer_
      +                          error, V.checksum_error);
  2881  0025EA  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2882  0025F0  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2883  0025F6  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2884  0025FC  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2885  002602  0100               	movlb	0	; () banked
  2886  002604  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2887  002606  6EE6               	movwf	postinc1,c
  2888  002608  0E00               	movlw	0
  2889  00260A  6EE6               	movwf	postinc1,c
  2890  00260C  51C2               	movf	(_V+98)& (0+255),w,b	;volatile
  2891  00260E  6EE6               	movwf	postinc1,c
  2892  002610  0E00               	movlw	0
  2893  002612  6EE6               	movwf	postinc1,c
  2894  002614  0E01               	movlw	STR_12& (0+255)
  2895  002616  6EE6               	movwf	postinc1,c
  2896  002618  0E60               	movlw	_V& (0+255)
  2897  00261A  0F06               	addlw	6
  2898  00261C  6EE6               	movwf	postinc1,c
  2899  00261E  0E0A               	movlw	10
  2900  002620  6EE6               	movwf	postinc1,c
  2901  002622  ECDE  F02C         	call	_sprintf	;wreg free
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;main.c: 570:    V.buf[16] = 0;
  2905  002626  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2906                           
  2907                           ; BSR set to: 0
  2908                           ;main.c: 571:    wait_lcd_done();
  2909  002628  ECB8  F036         	call	_wait_lcd_done	;wreg free
  2910                           
  2911                           ; BSR set to: 0
  2912                           ;main.c: 572:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  2913  00262C  0E60               	movlw	_V& (0+255)
  2914  00262E  0F06               	addlw	6
  2915  002630  6EE6               	movwf	postinc1,c
  2916  002632  0E00               	movlw	0
  2917  002634  6EE6               	movwf	postinc1,c
  2918  002636  0E02               	movlw	2
  2919  002638  6EE6               	movwf	postinc1,c
  2920  00263A  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  2921                           
  2922                           ;main.c: 573:    break;
  2923  00263E  D016               	goto	l1287
  2924  002640                     l1286:
  2925                           
  2926                           ; BSR set to: 0
  2927                           ;main.c: 576:    V.ui_state = UI_STATE_INIT;
  2928  002640  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  2929                           
  2930                           ;main.c: 577:    break;
  2931  002642  D014               	goto	l1287
  2932  002644                     l9936:
  2933  002644  0100               	movlb	0	; () banked
  2934  002646  5161               	movf	(_V+1)& (0+255),w,b	;volatile
  2935  002648  6E47               	movwf	btemp+10,c
  2936  00264A  6A48               	clrf	btemp+11,c
  2937                           
  2938                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2939                           ; Switch size 1, requested type "simple"
  2940                           ; Number of cases is 1, Range of values is 0 to 0
  2941                           ; switch strategies available:
  2942                           ; Name         Instructions Cycles
  2943                           ; simple_byte            4     3 (average)
  2944                           ;	Chosen strategy is simple_byte
  2945  00264C  5048               	movf	btemp+11,w,c
  2946  00264E  0A00               	xorlw	0	; case 0
  2947  002650  A4D8               	btfss	status,2,c
  2948  002652  D7F6               	goto	l1286
  2949                           
  2950                           ; BSR set to: 0
  2951                           ; Switch size 1, requested type "simple"
  2952                           ; Number of cases is 4, Range of values is 0 to 4
  2953                           ; switch strategies available:
  2954                           ; Name         Instructions Cycles
  2955                           ; simple_byte           13     7 (average)
  2956                           ;	Chosen strategy is simple_byte
  2957  002654  5047               	movf	btemp+10,w,c
  2958  002656  0A00               	xorlw	0	; case 0
  2959  002658  B4D8               	btfsc	status,2,c
  2960  00265A  D55F               	goto	l9742
  2961  00265C  0A01               	xorlw	1	; case 1
  2962  00265E  B4D8               	btfsc	status,2,c
  2963  002660  D69B               	goto	l9848
  2964  002662  0A02               	xorlw	2	; case 3
  2965  002664  B4D8               	btfsc	status,2,c
  2966  002666  D7AB               	goto	l9924
  2967  002668  0A07               	xorlw	7	; case 4
  2968  00266A  D7EA               	goto	l1286
  2969  00266C                     l1287:
  2970  00266C  84BE               	bsf	16318,2,c	;volatile
  2971                           
  2972                           ;main.c: 580:   if (V.ticks) {
  2973  00266E  0100               	movlb	0	; () banked
  2974  002670  51A6               	movf	(_V+70)& (0+255),w,b	;volatile
  2975  002672  11A7               	iorwf	(_V+71)& (0+255),w,b	;volatile
  2976  002674  11A8               	iorwf	(_V+72)& (0+255),w,b	;volatile
  2977  002676  11A9               	iorwf	(_V+73)& (0+255),w,b	;volatile
  2978  002678  B4D8               	btfsc	status,2,c
  2979  00267A  D016               	goto	l9944
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;main.c: 581:    if (V.failed_receive) {
  2983  00267C  51BE               	movf	(_V+94)& (0+255),w,b	;volatile
  2984  00267E  0B0F               	andlw	15
  2985  002680  0900               	iorlw	0
  2986  002682  B4D8               	btfsc	status,2,c
  2987  002684  D003               	goto	l1296
  2988                           
  2989                           ; BSR set to: 0
  2990                           
  2991                           ;main.c: 582:     do { LATDbits.LATD4 = 0; } while(0);
  2992  002686  98BD               	bcf	16317,4,c	;volatile
  2993                           
  2994                           ; BSR set to: 0
  2995                           
  2996                           ;main.c: 583:     do { LATDbits.LATD5 = 1; } while(0);
  2997  002688  8ABD               	bsf	16317,5,c	;volatile
  2998  00268A  D002               	goto	l9942
  2999  00268C                     l1296:
  3000                           
  3001                           ; BSR set to: 0
  3002  00268C  88BD               	bsf	16317,4,c	;volatile
  3003                           
  3004                           ; BSR set to: 0
  3005                           
  3006                           ;main.c: 586:     do { LATDbits.LATD5 = 0; } while(0);
  3007  00268E  9ABD               	bcf	16317,5,c	;volatile
  3008  002690                     l9942:
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;main.c: 588:    if (V.failed_send) {
  3012  002690  31BD               	rrcf	(_V+93)& (0+255),w,b	;volatile
  3013  002692  32E8               	rrcf	wreg,f,c
  3014  002694  32E8               	rrcf	wreg,f,c
  3015  002696  0B0F               	andlw	15
  3016  002698  0900               	iorlw	0
  3017  00269A  B4D8               	btfsc	status,2,c
  3018  00269C  D003               	goto	l1306
  3019                           
  3020                           ; BSR set to: 0
  3021                           
  3022                           ;main.c: 589:     do { LATDbits.LATD6 = 0; } while(0);
  3023  00269E  9CBD               	bcf	16317,6,c	;volatile
  3024                           
  3025                           ; BSR set to: 0
  3026                           
  3027                           ;main.c: 590:     do { LATDbits.LATD7 = 1; } while(0);
  3028  0026A0  8EBD               	bsf	16317,7,c	;volatile
  3029  0026A2  D002               	goto	l9944
  3030  0026A4                     l1306:
  3031                           
  3032                           ; BSR set to: 0
  3033  0026A4  8CBD               	bsf	16317,6,c	;volatile
  3034                           
  3035                           ; BSR set to: 0
  3036                           
  3037                           ;main.c: 593:     do { LATDbits.LATD7 = 0; } while(0);
  3038  0026A6  9EBD               	bcf	16317,7,c	;volatile
  3039  0026A8                     l9944:
  3040                           
  3041                           ; BSR set to: 0
  3042                           ;main.c: 596:   sprintf(V.buf, "R%d %d, T%d %d C%d      #", V.r_l_state, V.failed_receiv
      +                          e, V.t_l_state, V.failed_send, V.checksum_error);
  3043  0026A8  0060  F2DF  FFE6   	movff	_V+87,postinc1
  3044  0026AE  0060  F2E3  FFE6   	movff	_V+88,postinc1
  3045  0026B4  31BD               	rrcf	(_V+93)& (0+255),w,b	;volatile
  3046  0026B6  32E8               	rrcf	wreg,f,c
  3047  0026B8  32E8               	rrcf	wreg,f,c
  3048  0026BA  0B0F               	andlw	15
  3049  0026BC  6EE6               	movwf	postinc1,c
  3050  0026BE  0E00               	movlw	0
  3051  0026C0  6EE6               	movwf	postinc1,c
  3052  0026C2  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  3053  0026C4  6EE6               	movwf	postinc1,c
  3054  0026C6  0E00               	movlw	0
  3055  0026C8  6EE6               	movwf	postinc1,c
  3056  0026CA  51BE               	movf	(_V+94)& (0+255),w,b	;volatile
  3057  0026CC  0B0F               	andlw	15
  3058  0026CE  6EE6               	movwf	postinc1,c
  3059  0026D0  0E00               	movlw	0
  3060  0026D2  6EE6               	movwf	postinc1,c
  3061  0026D4  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  3062  0026D6  6EE6               	movwf	postinc1,c
  3063  0026D8  0E00               	movlw	0
  3064  0026DA  6EE6               	movwf	postinc1,c
  3065  0026DC  0E1B               	movlw	STR_16& (0+255)
  3066  0026DE  6EE6               	movwf	postinc1,c
  3067  0026E0  0E60               	movlw	_V& (0+255)
  3068  0026E2  0F06               	addlw	6
  3069  0026E4  6EE6               	movwf	postinc1,c
  3070  0026E6  0E0C               	movlw	12
  3071  0026E8  6EE6               	movwf	postinc1,c
  3072  0026EA  ECDE  F02C         	call	_sprintf	;wreg free
  3073                           
  3074                           ; BSR set to: 0
  3075                           ;main.c: 597:   V.buf[16] = 0;
  3076  0026EE  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  3077                           
  3078                           ; BSR set to: 0
  3079                           ;main.c: 598:   wait_lcd_done();
  3080  0026F0  ECB8  F036         	call	_wait_lcd_done	;wreg free
  3081                           
  3082                           ; BSR set to: 0
  3083                           ;main.c: 599:   if (mode != UI_STATE_LOG)
  3084                           ;stkvar	_mode @ sp[(-1)+0]
  3085  0026F4  0EFF               	movlw	-1
  3086  0026F6  006F FF8C  F03D    	movff	plusw1,btemp
  3087  0026FC  0E03               	movlw	3
  3088  0026FE  183D               	xorwf	btemp,w,c
  3089  002700  B4D8               	btfsc	status,2,c
  3090  002702  D009               	goto	l9954
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;main.c: 600:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  3094  002704  0E60               	movlw	_V& (0+255)
  3095  002706  0F06               	addlw	6
  3096  002708  6EE6               	movwf	postinc1,c
  3097  00270A  0E00               	movlw	0
  3098  00270C  6EE6               	movwf	postinc1,c
  3099  00270E  0E01               	movlw	1
  3100  002710  6EE6               	movwf	postinc1,c
  3101  002712  EC10  F034         	call	_eaDogM_WriteStringAtPos	;wreg free
  3102  002716                     l9954:
  3103                           
  3104                           ; BSR set to: 0
  3105  002716  94BE               	bcf	16318,2,c	;volatile
  3106  002718  D795               	goto	l9936
  3107  00271A                     __end_of_main:
  3108                           	opt callstack 0
  3109                           
  3110 ;; *************** function _t_protocol *****************
  3111 ;; Defined at:
  3112 ;;		line 334 in file "gemsecs.c"
  3113 ;; Parameters:    Size  Location     Type
  3114 ;;  t_link          1  [STACK] PTR enum E16173
  3115 ;;		 -> V(100), 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  rxData          1  [STACK] unsigned char 
  3118 ;; Return value:  Size  Location     Type
  3119 ;;                  1  [STACK] enum E16913
  3120 ;; Registers used:
  3121 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  3122 ;; Tracked objects:
  3123 ;;		On entry : 0/0
  3124 ;;		On exit  : 0/0
  3125 ;;		Unchanged: 0/0
  3126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3131 ;;Total ram usage:        0 bytes
  3132 ;; Hardware stack levels used:    1
  3133 ;; Hardware stack levels required when called:    7
  3134 ;; This function calls:
  3135 ;;		_StartTimer
  3136 ;;		_TimerDone
  3137 ;;		_UART1_Read
  3138 ;;		_UART1_Write
  3139 ;;		_UART1_is_rx_ready
  3140 ;;		_UART1_put_buffer
  3141 ;;		_WaitMs
  3142 ;;		_rand
  3143 ;;		_secs_II_message
  3144 ;;		_secs_send
  3145 ;; This function is called by:
  3146 ;;		_main
  3147 ;; This function uses a reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text1
  3151  003D22                     __ptext1:
  3152                           	opt callstack 0
  3153  003D22                     _t_protocol:
  3154                           	opt callstack 0
  3155                           
  3156                           ; BSR set to: 0
  3157                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3158  003D22  52E6               	movf	postinc1,f,c
  3159                           
  3160                           ;gemsecs.c: 334: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 335: {;gemsecs.
      +                          c: 336:  uint8_t rxData;;gemsecs.c: 337:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          338:  static response_type block;;gemsecs.c: 340:  switch (*t_link) {
  3161                           
  3162                           ;incstack = 0
  3163  003D24  D134               	goto	l9492
  3164  003D26                     l9384:
  3165                           
  3166                           ;gemsecs.c: 342:   V.error = LINK_ERROR_NONE;
  3167  003D26  0E0A               	movlw	10
  3168  003D28  0100               	movlb	0	; () banked
  3169  003D2A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3170                           
  3171                           ;gemsecs.c: 343:   retry = 3;
  3172  003D2C  0E03               	movlw	3
  3173  003D2E  6E2D               	movwf	t_protocol@retry,c
  3174                           
  3175                           ; BSR set to: 0
  3176                           ;gemsecs.c: 344:   UART1_Write(0x05);
  3177  003D30  0E05               	movlw	5
  3178  003D32  6EE6               	movwf	postinc1,c
  3179  003D34  EC4A  F033         	call	_UART1_Write	;wreg free
  3180                           
  3181                           ; BSR set to: 57
  3182                           ;gemsecs.c: 345:   StartTimer(TMR_T2, 2000);
  3183  003D38  0ED0               	movlw	208
  3184  003D3A  6EE6               	movwf	postinc1,c
  3185  003D3C  0E07               	movlw	7
  3186  003D3E  6EE6               	movwf	postinc1,c
  3187  003D40  0E02               	movlw	2
  3188  003D42  6EE6               	movwf	postinc1,c
  3189  003D44  ECEB  F032         	call	_StartTimer	;wreg free
  3190                           
  3191                           ;gemsecs.c: 346:   *t_link = LINK_STATE_ENQ;
  3192                           ;stkvar	_t_link @ sp[(-1)+-1]
  3193  003D48  0EFE               	movlw	-2
  3194  003D4A  50E3               	movf	plusw1,w,c
  3195  003D4C  6ED9               	movwf	fsr2l,c
  3196  003D4E  6ADA               	clrf	fsr2h,c
  3197  003D50  0E01               	movlw	1
  3198  003D52  6EDF               	movwf	indf2,c
  3199                           
  3200                           ;gemsecs.c: 348:   WaitMs(5);
  3201  003D54  0E05               	movlw	5
  3202  003D56  6EE6               	movwf	postinc1,c
  3203  003D58  0E00               	movlw	0
  3204  003D5A  6EE6               	movwf	postinc1,c
  3205  003D5C  ECC3  F033         	call	_WaitMs	;wreg free
  3206                           
  3207                           ;gemsecs.c: 349:   UART1_put_buffer(0x04);
  3208  003D60  0E04               	movlw	4
  3209  003D62  6EE6               	movwf	postinc1,c
  3210  003D64  EC7D  F034         	call	_UART1_put_buffer	;wreg free
  3211                           
  3212                           ;gemsecs.c: 351:   break;
  3213  003D68  D133               	goto	l9494
  3214  003D6A                     l9396:
  3215                           
  3216                           ;gemsecs.c: 353:   if (TimerDone(TMR_T2)) {
  3217  003D6A  0E02               	movlw	2
  3218  003D6C  6EE6               	movwf	postinc1,c
  3219  003D6E  ECA6  F034         	call	_TimerDone	;wreg free
  3220  003D72  503D               	movf	btemp,w,c
  3221  003D74  B4D8               	btfsc	status,2,c
  3222  003D76  D01C               	goto	l9408
  3223                           
  3224                           ;gemsecs.c: 354:    V.timer_error++;
  3225  003D78  0100               	movlb	0	; () banked
  3226  003D7A  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  3227  003D7C  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  3228                           
  3229                           ; BSR set to: 0
  3230                           ;gemsecs.c: 355:    if (!retry--) {
  3231  003D7E  062D               	decf	t_protocol@retry,f,c
  3232  003D80  282D               	incf	t_protocol@retry,w,c
  3233  003D82  A4D8               	btfss	status,2,c
  3234  003D84  D00C               	goto	l9406
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;gemsecs.c: 356:     V.error = LINK_ERROR_T2;
  3238  003D86  0E0C               	movlw	12
  3239  003D88  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3240                           
  3241                           ;gemsecs.c: 357:     V.failed_send = 1;
  3242  003D8A  51BD               	movf	(_V+93)& (0+255),w,b	;volatile
  3243  003D8C  0B87               	andlw	-121
  3244  003D8E  0908               	iorlw	8
  3245  003D90  6FBD               	movwf	(_V+93)& (0+255),b	;volatile
  3246                           
  3247                           ; BSR set to: 0
  3248                           ;gemsecs.c: 358:     *t_link = LINK_STATE_NAK;
  3249                           ;stkvar	_t_link @ sp[(-1)+-1]
  3250  003D92  0EFE               	movlw	-2
  3251  003D94  50E3               	movf	plusw1,w,c
  3252  003D96  6ED9               	movwf	fsr2l,c
  3253  003D98  6ADA               	clrf	fsr2h,c
  3254  003D9A  0E05               	movlw	5
  3255  003D9C  D0F6               	goto	L2
  3256  003D9E                     l9406:
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;gemsecs.c: 360:     StartTimer(TMR_T2, 2000);
  3260  003D9E  0ED0               	movlw	208
  3261  003DA0  6EE6               	movwf	postinc1,c
  3262  003DA2  0E07               	movlw	7
  3263  003DA4  6EE6               	movwf	postinc1,c
  3264  003DA6  0E02               	movlw	2
  3265  003DA8  6EE6               	movwf	postinc1,c
  3266  003DAA  ECEB  F032         	call	_StartTimer	;wreg free
  3267  003DAE  D110               	goto	l9494
  3268  003DB0                     l9408:
  3269                           
  3270                           ;gemsecs.c: 363:    if (UART1_is_rx_ready()) {
  3271  003DB0  EC7F  F037         	call	_UART1_is_rx_ready	;wreg free
  3272  003DB4  503D               	movf	btemp,w,c
  3273  003DB6  B4D8               	btfsc	status,2,c
  3274  003DB8  D10B               	goto	l9494
  3275                           
  3276                           ;gemsecs.c: 364:     rxData = UART1_Read();
  3277  003DBA  EC88  F033         	call	_UART1_Read	;wreg free
  3278                           
  3279                           ;stkvar	_rxData @ sp[(-1)+0]
  3280  003DBE  0EFF               	movlw	-1
  3281  003DC0  0060  F0F7  FFE3   	movff	btemp,plusw1
  3282                           
  3283                           ; BSR set to: 57
  3284                           ;gemsecs.c: 365:     if (rxData == 0x04) {
  3285                           ;stkvar	_rxData @ sp[(-1)+0]
  3286  003DC6  0EFF               	movlw	-1
  3287  003DC8  006F FF8C  F03D    	movff	plusw1,btemp
  3288  003DCE  0E04               	movlw	4
  3289  003DD0  183D               	xorwf	btemp,w,c
  3290  003DD2  A4D8               	btfss	status,2,c
  3291  003DD4  D00E               	goto	l9418
  3292                           
  3293                           ; BSR set to: 57
  3294                           ;gemsecs.c: 366:      StartTimer(TMR_T3, 5000);
  3295  003DD6  0E88               	movlw	136
  3296  003DD8  6EE6               	movwf	postinc1,c
  3297  003DDA  0E13               	movlw	19
  3298  003DDC  6EE6               	movwf	postinc1,c
  3299  003DDE  0E03               	movlw	3
  3300  003DE0  6EE6               	movwf	postinc1,c
  3301  003DE2  ECEB  F032         	call	_StartTimer	;wreg free
  3302                           
  3303                           ;gemsecs.c: 367:      *t_link = LINK_STATE_EOT;
  3304                           ;stkvar	_t_link @ sp[(-1)+-1]
  3305  003DE6  0EFE               	movlw	-2
  3306  003DE8  50E3               	movf	plusw1,w,c
  3307  003DEA  6ED9               	movwf	fsr2l,c
  3308  003DEC  6ADA               	clrf	fsr2h,c
  3309  003DEE  0E02               	movlw	2
  3310  003DF0  6EDF               	movwf	indf2,c
  3311  003DF2                     l9418:
  3312                           
  3313                           ;gemsecs.c: 369:     if (rxData == 0x05) {
  3314                           ;stkvar	_rxData @ sp[(-1)+0]
  3315  003DF2  0EFF               	movlw	-1
  3316  003DF4  006F FF8C  F03D    	movff	plusw1,btemp
  3317  003DFA  0E05               	movlw	5
  3318  003DFC  183D               	xorwf	btemp,w,c
  3319  003DFE  A4D8               	btfss	status,2,c
  3320  003E00  D0E7               	goto	l9494
  3321                           
  3322                           ;gemsecs.c: 370:      UART1_put_buffer(0x04);
  3323  003E02  0E04               	movlw	4
  3324  003E04  6EE6               	movwf	postinc1,c
  3325  003E06  EC7D  F034         	call	_UART1_put_buffer	;wreg free
  3326  003E0A                     l9422:
  3327                           
  3328                           ;gemsecs.c: 371:      *t_link = LINK_STATE_DONE;
  3329                           ;stkvar	_t_link @ sp[(-1)+-1]
  3330  003E0A  0EFE               	movlw	-2
  3331  003E0C  50E3               	movf	plusw1,w,c
  3332  003E0E  6ED9               	movwf	fsr2l,c
  3333  003E10  6ADA               	clrf	fsr2h,c
  3334  003E12  0E04               	movlw	4
  3335  003E14  D0BA               	goto	L2
  3336  003E16                     l9424:
  3337                           
  3338                           ;gemsecs.c: 377:   if (!requeue)
  3339  003E16  502C               	movf	t_protocol@requeue,w,c
  3340  003E18  A4D8               	btfss	status,2,c
  3341  003E1A  D010               	goto	l9428
  3342                           
  3343                           ;gemsecs.c: 378:    block = secs_II_message(V.stream, V.function);
  3344  003E1C  0100               	movlb	0	; () banked
  3345  003E1E  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  3346  003E20  6EE6               	movwf	postinc1,c
  3347  003E22  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  3348  003E24  6EE6               	movwf	postinc1,c
  3349  003E26  EC50  F021         	call	_secs_II_message	;wreg free
  3350  003E2A  EE20  F0DD         	lfsr	2,t_protocol@block
  3351  003E2E  0E06               	movlw	6
  3352  003E30                     u6191:
  3353  003E30  52E5               	movf	postdec1,f,c
  3354  003E32  006F FF9F FFDB     	movff	indf1,plusw2
  3355  003E38  06E8               	decf	wreg,f,c
  3356  003E3A  E2FA               	bc	u6191
  3357  003E3C                     l9428:
  3358                           
  3359                           ;gemsecs.c: 380:   if (V.abort == LINK_ERROR_ABORT) {
  3360  003E3C  0E11               	movlw	17
  3361  003E3E  0100               	movlb	0	; () banked
  3362  003E40  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  3363  003E42  A4D8               	btfss	status,2,c
  3364  003E44  D019               	goto	l9436
  3365                           
  3366                           ; BSR set to: 0
  3367                           ;gemsecs.c: 381:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  3368  003E46  0E01               	movlw	1
  3369  003E48  6EE6               	movwf	postinc1,c
  3370  003E4A  0E00               	movlw	0
  3371  003E4C  6EE6               	movwf	postinc1,c
  3372  003E4E  51DF               	movf	(t_protocol@block+2)& (0+255),w,b
  3373  003E50  6EE6               	movwf	postinc1,c
  3374  003E52  0060  F377  FFE6   	movff	t_protocol@block,postinc1
  3375  003E58  0060  F37B  FFE6   	movff	t_protocol@block+1,postinc1
  3376  003E5E  ECE3  F023         	call	_secs_send	;wreg free
  3377                           
  3378                           ;gemsecs.c: 382:    V.failed_send = 2;
  3379  003E62  0100               	movlb	0	; () banked
  3380  003E64  51BD               	movf	(_V+93)& (0+255),w,b	;volatile
  3381  003E66  0B87               	andlw	-121
  3382  003E68  0910               	iorlw	16
  3383  003E6A  6FBD               	movwf	(_V+93)& (0+255),b	;volatile
  3384                           
  3385                           ; BSR set to: 0
  3386                           ;gemsecs.c: 383:    *t_link = LINK_STATE_ERROR;
  3387                           ;stkvar	_t_link @ sp[(-1)+-1]
  3388  003E6C  0EFE               	movlw	-2
  3389  003E6E  50E3               	movf	plusw1,w,c
  3390  003E70  6ED9               	movwf	fsr2l,c
  3391  003E72  6ADA               	clrf	fsr2h,c
  3392  003E74  0E06               	movlw	6
  3393  003E76  D031               	goto	L3
  3394  003E78                     l9436:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ;gemsecs.c: 385:    if (!requeue) {
  3398  003E78  502C               	movf	t_protocol@requeue,w,c
  3399  003E7A  A4D8               	btfss	status,2,c
  3400  003E7C  D014               	goto	l1715
  3401                           
  3402                           ; BSR set to: 0
  3403                           ;gemsecs.c: 386:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  3404  003E7E  0E01               	movlw	1
  3405  003E80  6EE6               	movwf	postinc1,c
  3406  003E82  0E00               	movlw	0
  3407  003E84  6EE6               	movwf	postinc1,c
  3408  003E86  51DF               	movf	(t_protocol@block+2)& (0+255),w,b
  3409  003E88  6EE6               	movwf	postinc1,c
  3410  003E8A  0060  F377  FFE6   	movff	t_protocol@block,postinc1
  3411  003E90  0060  F37B  FFE6   	movff	t_protocol@block+1,postinc1
  3412  003E96  ECE3  F023         	call	_secs_send	;wreg free
  3413                           
  3414                           ;gemsecs.c: 387:     if (V.queue)
  3415  003E9A  0100               	movlb	0	; () banked
  3416  003E9C  A9BE               	btfss	(_V+94)& (0+255),4,b	;volatile
  3417  003E9E  D013               	goto	l9446
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;gemsecs.c: 388:      requeue = 1;
  3421  003EA0  0E01               	movlw	1
  3422  003EA2  6E2C               	movwf	t_protocol@requeue,c
  3423  003EA4  D010               	goto	l9446
  3424  003EA6                     l1715:
  3425                           
  3426                           ; BSR set to: 0
  3427                           ;gemsecs.c: 390:     requeue = 0;
  3428  003EA6  6A2C               	clrf	t_protocol@requeue,c
  3429                           
  3430                           ;gemsecs.c: 391:     V.queue = 0;
  3431  003EA8  99BE               	bcf	(_V+94)& (0+255),4,b	;volatile
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;gemsecs.c: 392:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  3435  003EAA  0E01               	movlw	1
  3436  003EAC  6EE6               	movwf	postinc1,c
  3437  003EAE  0E00               	movlw	0
  3438  003EB0  6EE6               	movwf	postinc1,c
  3439  003EB2  51E2               	movf	(t_protocol@block+5)& (0+255),w,b
  3440  003EB4  6EE6               	movwf	postinc1,c
  3441  003EB6  0060  F383  FFE6   	movff	t_protocol@block+3,postinc1
  3442  003EBC  0060  F387  FFE6   	movff	t_protocol@block+4,postinc1
  3443  003EC2  ECE3  F023         	call	_secs_send	;wreg free
  3444  003EC6                     l9446:
  3445                           
  3446                           ;gemsecs.c: 394:    if (V.error == LINK_ERROR_NONE) {
  3447  003EC6  0E0A               	movlw	10
  3448  003EC8  0100               	movlb	0	; () banked
  3449  003ECA  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  3450  003ECC  A4D8               	btfss	status,2,c
  3451  003ECE  D007               	goto	l9450
  3452                           
  3453                           ; BSR set to: 0
  3454                           ;gemsecs.c: 395:     *t_link = LINK_STATE_ACK;
  3455                           ;stkvar	_t_link @ sp[(-1)+-1]
  3456  003ED0  0EFE               	movlw	-2
  3457  003ED2  50E3               	movf	plusw1,w,c
  3458  003ED4  6ED9               	movwf	fsr2l,c
  3459  003ED6  6ADA               	clrf	fsr2h,c
  3460  003ED8  0E03               	movlw	3
  3461  003EDA                     L3:
  3462  003EDA  6EDF               	movwf	indf2,c
  3463                           
  3464                           ;gemsecs.c: 396:    } else {
  3465  003EDC  D004               	goto	l9454
  3466  003EDE                     l9450:
  3467                           
  3468                           ; BSR set to: 0
  3469                           ;gemsecs.c: 397:     V.failed_send = 3;
  3470  003EDE  51BD               	movf	(_V+93)& (0+255),w,b	;volatile
  3471  003EE0  0B87               	andlw	-121
  3472  003EE2  0918               	iorlw	24
  3473  003EE4  D7C2               	goto	L4
  3474  003EE6                     l9454:
  3475                           
  3476                           ; BSR set to: 0
  3477                           ;gemsecs.c: 402:   WaitMs(5);
  3478  003EE6  0E05               	movlw	5
  3479  003EE8  6EE6               	movwf	postinc1,c
  3480  003EEA  0E00               	movlw	0
  3481  003EEC  6EE6               	movwf	postinc1,c
  3482  003EEE  ECC3  F033         	call	_WaitMs	;wreg free
  3483                           
  3484                           ;gemsecs.c: 404:   if (rand() < 31000)
  3485  003EF2  ECC4  F028         	call	_rand	;wreg free
  3486  003EF6  BE3E               	btfsc	btemp+1,7,c
  3487  003EF8  D006               	goto	u6240
  3488  003EFA  0E18               	movlw	24
  3489  003EFC  5C3D               	subwf	btemp,w,c
  3490  003EFE  0E79               	movlw	121
  3491  003F00  583E               	subwfb	btemp+1,w,c
  3492  003F02  B0D8               	btfsc	status,0,c
  3493  003F04  D065               	goto	l9494
  3494  003F06                     u6240:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ;gemsecs.c: 406:    UART1_put_buffer(0x06);
  3498  003F06  0E06               	movlw	6
  3499  003F08  6EE6               	movwf	postinc1,c
  3500  003F0A  EC7D  F034         	call	_UART1_put_buffer	;wreg free
  3501  003F0E  D060               	goto	l9494
  3502  003F10                     l9460:
  3503                           
  3504                           ;gemsecs.c: 410:   if (TimerDone(TMR_T3)) {
  3505  003F10  0E03               	movlw	3
  3506  003F12  6EE6               	movwf	postinc1,c
  3507  003F14  ECA6  F034         	call	_TimerDone	;wreg free
  3508  003F18  503D               	movf	btemp,w,c
  3509  003F1A  B4D8               	btfsc	status,2,c
  3510  003F1C  D009               	goto	l9470
  3511                           
  3512                           ;gemsecs.c: 411:    V.timer_error++;
  3513  003F1E  0100               	movlb	0	; () banked
  3514  003F20  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  3515  003F22  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;gemsecs.c: 412:    V.error = LINK_ERROR_T3;
  3519  003F24  0E0D               	movlw	13
  3520  003F26  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3521                           
  3522                           ; BSR set to: 0
  3523                           ;gemsecs.c: 413:    V.failed_send = 4;
  3524  003F28  51BD               	movf	(_V+93)& (0+255),w,b	;volatile
  3525  003F2A  0B87               	andlw	-121
  3526  003F2C  0920               	iorlw	32
  3527  003F2E  D730               	goto	L5
  3528  003F30                     l9470:
  3529                           
  3530                           ;gemsecs.c: 416:    if (UART1_is_rx_ready()) {
  3531  003F30  EC7F  F037         	call	_UART1_is_rx_ready	;wreg free
  3532  003F34  503D               	movf	btemp,w,c
  3533  003F36  B4D8               	btfsc	status,2,c
  3534  003F38  D04B               	goto	l9494
  3535                           
  3536                           ;gemsecs.c: 417:     rxData = UART1_Read();
  3537  003F3A  EC88  F033         	call	_UART1_Read	;wreg free
  3538                           
  3539                           ;stkvar	_rxData @ sp[(-1)+0]
  3540  003F3E  0EFF               	movlw	-1
  3541  003F40  0060  F0F7  FFE3   	movff	btemp,plusw1
  3542                           
  3543                           ; BSR set to: 57
  3544                           ;gemsecs.c: 418:     if (rxData == 0x06) {
  3545                           ;stkvar	_rxData @ sp[(-1)+0]
  3546  003F46  0EFF               	movlw	-1
  3547  003F48  006F FF8C  F03D    	movff	plusw1,btemp
  3548  003F4E  0E06               	movlw	6
  3549  003F50  183D               	xorwf	btemp,w,c
  3550  003F52  A4D8               	btfss	status,2,c
  3551  003F54  D03D               	goto	l9494
  3552                           
  3553                           ; BSR set to: 57
  3554                           ;gemsecs.c: 419:      V.failed_send = 0;
  3555  003F56  0E87               	movlw	-121
  3556  003F58  0100               	movlb	0	; () banked
  3557  003F5A  17BD               	andwf	(_V+93)& (0+255),f,b	;volatile
  3558  003F5C  D756               	goto	l9422
  3559  003F5E                     l9480:
  3560                           
  3561                           ;gemsecs.c: 426:   *t_link = LINK_STATE_ERROR;
  3562                           ;stkvar	_t_link @ sp[(-1)+-1]
  3563  003F5E  0EFE               	movlw	-2
  3564  003F60  50E3               	movf	plusw1,w,c
  3565  003F62  6ED9               	movwf	fsr2l,c
  3566  003F64  6ADA               	clrf	fsr2h,c
  3567  003F66  0E06               	movlw	6
  3568  003F68  6EDF               	movwf	indf2,c
  3569                           
  3570                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3571  003F6A  D002               	goto	l9484
  3572  003F6C                     l9482:
  3573                           
  3574                           ;gemsecs.c: 428:    UART1_Read();
  3575  003F6C  EC88  F033         	call	_UART1_Read	;wreg free
  3576  003F70                     l9484:
  3577                           
  3578                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3579  003F70  5037               	movf	_uart1RxCount,w,c	;volatile
  3580  003F72  B4D8               	btfsc	status,2,c
  3581  003F74  D02D               	goto	l9494
  3582  003F76  D7FA               	goto	l9482
  3583  003F78                     l9486:
  3584                           
  3585                           ;gemsecs.c: 434:   V.failed_send = 0;
  3586  003F78  0E87               	movlw	-121
  3587  003F7A  0100               	movlb	0	; () banked
  3588  003F7C  17BD               	andwf	(_V+93)& (0+255),f,b	;volatile
  3589                           
  3590                           ;gemsecs.c: 435:   break;
  3591  003F7E  D028               	goto	l9494
  3592  003F80                     l9488:
  3593                           
  3594                           ;gemsecs.c: 437:   *t_link = LINK_STATE_IDLE;
  3595                           ;stkvar	_t_link @ sp[(-1)+-1]
  3596  003F80  0EFE               	movlw	-2
  3597  003F82  50E3               	movf	plusw1,w,c
  3598  003F84  6ED9               	movwf	fsr2l,c
  3599  003F86  6ADA               	clrf	fsr2h,c
  3600  003F88  0E00               	movlw	0
  3601  003F8A                     L2:
  3602  003F8A  6EDF               	movwf	indf2,c
  3603                           
  3604                           ;gemsecs.c: 439:   break;
  3605  003F8C  D021               	goto	l9494
  3606  003F8E                     l9492:
  3607                           
  3608                           ;stkvar	_t_link @ sp[(-1)+-1]
  3609  003F8E  0EFE               	movlw	-2
  3610  003F90  50E3               	movf	plusw1,w,c
  3611  003F92  6ED9               	movwf	fsr2l,c
  3612  003F94  6ADA               	clrf	fsr2h,c
  3613  003F96  50DF               	movf	indf2,w,c
  3614  003F98  6E47               	movwf	btemp+10,c
  3615  003F9A  6A48               	clrf	btemp+11,c
  3616                           
  3617                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3618                           ; Switch size 1, requested type "simple"
  3619                           ; Number of cases is 1, Range of values is 0 to 0
  3620                           ; switch strategies available:
  3621                           ; Name         Instructions Cycles
  3622                           ; simple_byte            4     3 (average)
  3623                           ;	Chosen strategy is simple_byte
  3624  003F9C  5048               	movf	btemp+11,w,c
  3625  003F9E  0A00               	xorlw	0	; case 0
  3626  003FA0  A4D8               	btfss	status,2,c
  3627  003FA2  D7EE               	goto	l9488
  3628                           
  3629                           ; Switch size 1, requested type "simple"
  3630                           ; Number of cases is 7, Range of values is 0 to 6
  3631                           ; switch strategies available:
  3632                           ; Name         Instructions Cycles
  3633                           ; simple_byte           22    12 (average)
  3634                           ;	Chosen strategy is simple_byte
  3635  003FA4  5047               	movf	btemp+10,w,c
  3636  003FA6  0A00               	xorlw	0	; case 0
  3637  003FA8  B4D8               	btfsc	status,2,c
  3638  003FAA  D6BD               	goto	l9384
  3639  003FAC  0A01               	xorlw	1	; case 1
  3640  003FAE  B4D8               	btfsc	status,2,c
  3641  003FB0  D6DC               	goto	l9396
  3642  003FB2  0A03               	xorlw	3	; case 2
  3643  003FB4  B4D8               	btfsc	status,2,c
  3644  003FB6  D72F               	goto	l9424
  3645  003FB8  0A01               	xorlw	1	; case 3
  3646  003FBA  B4D8               	btfsc	status,2,c
  3647  003FBC  D7A9               	goto	l9460
  3648  003FBE  0A07               	xorlw	7	; case 4
  3649  003FC0  B4D8               	btfsc	status,2,c
  3650  003FC2  D7DA               	goto	l9486
  3651  003FC4  0A01               	xorlw	1	; case 5
  3652  003FC6  B4D8               	btfsc	status,2,c
  3653  003FC8  D7CA               	goto	l9480
  3654  003FCA  0A03               	xorlw	3	; case 6
  3655  003FCC  A4D8               	btfss	status,2,c
  3656  003FCE  D7D8               	goto	l9488
  3657  003FD0                     l9494:
  3658                           
  3659                           ;gemsecs.c: 442:  return *t_link;
  3660                           ;stkvar	_t_link @ sp[(-1)+-1]
  3661  003FD0  0EFE               	movlw	-2
  3662  003FD2  50E3               	movf	plusw1,w,c
  3663  003FD4  6ED9               	movwf	fsr2l,c
  3664  003FD6  6ADA               	clrf	fsr2h,c
  3665  003FD8  50DF               	movf	indf2,w,c
  3666  003FDA  6E3D               	movwf	btemp,c
  3667                           
  3668                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3669  003FDC  52E5               	movf	postdec1,f,c
  3670  003FDE  52E5               	movf	postdec1,f,c
  3671  003FE0  0012               	return		;funcret
  3672  003FE2                     __end_of_t_protocol:
  3673                           	opt callstack 0
  3674                           
  3675 ;; *************** function _secs_II_message *****************
  3676 ;; Defined at:
  3677 ;;		line 515 in file "gemsecs.c"
  3678 ;; Parameters:    Size  Location     Type
  3679 ;;  stream          1  [STACK] unsigned char 
  3680 ;;  function        1  [STACK] unsigned char 
  3681 ;; Auto vars:     Size  Location     Type
  3682 ;;		None
  3683 ;; Return value:  Size  Location     Type
  3684 ;;                  7  [STACK] struct response_type
  3685 ;; Registers used:
  3686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  3687 ;; Tracked objects:
  3688 ;;		On entry : 3F/0
  3689 ;;		On exit  : 3E/0
  3690 ;;		Unchanged: 0/0
  3691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3696 ;;Total ram usage:        0 bytes
  3697 ;; Hardware stack levels used:    1
  3698 ;; Hardware stack levels required when called:    3
  3699 ;; This function calls:
  3700 ;;		Nothing
  3701 ;; This function is called by:
  3702 ;;		_t_protocol
  3703 ;; This function uses a reentrant model
  3704 ;;
  3705                           
  3706                           	psect	text2
  3707  0042A0                     __ptext2:
  3708                           	opt callstack 0
  3709  0042A0                     _secs_II_message:
  3710                           	opt callstack 0
  3711                           
  3712                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  3713  0042A0  0E05               	movlw	5
  3714  0042A2  26E1               	addwf	fsr1l,f,c
  3715  0042A4  0E00               	movlw	0
  3716  0042A6  22E2               	addwfc	fsr1h,f,c
  3717                           
  3718                           ;gemsecs.c: 515: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 516: {;gemsecs.c: 517:  static response_type block;;gemsecs.c: 519:  V.abort = LINK_
      +                          ERROR_NONE;
  3719                           
  3720                           ;incstack = 0
  3721  0042A8  0E0A               	movlw	10
  3722  0042AA  0100               	movlb	0	; () banked
  3723  0042AC  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;gemsecs.c: 520:  V.queue = 0;
  3727  0042AE  99BE               	bcf	(_V+94)& (0+255),4,b	;volatile
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;gemsecs.c: 521:  block.respond = 0;
  3731  0042B0  9007               	bcf	secs_II_message@block+6,0,c
  3732                           
  3733                           ;gemsecs.c: 523:  switch (stream) {
  3734  0042B2  D121               	goto	l7084
  3735  0042B4                     l6928:
  3736                           
  3737                           ; BSR set to: 0
  3738                           ;gemsecs.c: 527:    block.header = (uint8_t*) & H12[0];
  3739  0042B4  0E62               	movlw	low _H12
  3740  0042B6  6E01               	movwf	secs_II_message@block,c
  3741  0042B8  0E01               	movlw	high _H12
  3742  0042BA  6E02               	movwf	secs_II_message@block+1,c
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;gemsecs.c: 528:    block.length = sizeof(header12);
  3746  0042BC  0E0F               	movlw	15
  3747  0042BE  6E03               	movwf	secs_II_message@block+2,c
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;gemsecs.c: 529:    H12[0].block.block.systemb = V.systemb;
  3751  0042C0  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  3752  0042C4  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  3753  0042C8  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  3754  0042CC  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  3755                           
  3756                           ; BSR set to: 0
  3757                           ;gemsecs.c: 530:    H10[0].block.block.systemb = V.systemb;
  3758  0042D0  C0AA  F109         	movff	_V+74,_H10+2	;volatile
  3759  0042D4  C0AB  F10A         	movff	_V+75,_H10+3	;volatile
  3760  0042D8  C0AC  F10B         	movff	_V+76,_H10+4	;volatile
  3761  0042DC  C0AD  F10C         	movff	_V+77,_H10+5	;volatile
  3762                           
  3763                           ; BSR set to: 0
  3764                           ;gemsecs.c: 531:    block.respond = 1;
  3765  0042E0  8007               	bsf	secs_II_message@block+6,0,c
  3766                           
  3767                           ; BSR set to: 0
  3768                           ;gemsecs.c: 532:    block.reply = (uint8_t*) & H10[0];
  3769  0042E2  0E07               	movlw	low _H10
  3770  0042E4  6E04               	movwf	secs_II_message@block+3,c
  3771  0042E6  0E01               	movlw	high _H10
  3772  0042E8  6E05               	movwf	secs_II_message@block+4,c
  3773                           
  3774                           ;gemsecs.c: 533:    block.reply_length = sizeof(header10);
  3775  0042EA  0E0D               	movlw	13
  3776  0042EC                     L6:
  3777  0042EC  6E06               	movwf	secs_II_message@block+5,c
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;gemsecs.c: 534:    V.queue = 1;
  3781  0042EE  89BE               	bsf	(_V+94)& (0+255),4,b	;volatile
  3782                           
  3783                           ;gemsecs.c: 535:    break;
  3784  0042F0  D11E               	goto	l7086
  3785  0042F2                     l6942:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;gemsecs.c: 537:    block.header = (uint8_t*) & H10[0];
  3789  0042F2  0E07               	movlw	low _H10
  3790  0042F4  6E01               	movwf	secs_II_message@block,c
  3791  0042F6  0E01               	movlw	high _H10
  3792  0042F8  6E02               	movwf	secs_II_message@block+1,c
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;gemsecs.c: 538:    block.length = sizeof(header10);
  3796  0042FA  0E0D               	movlw	13
  3797  0042FC  6E03               	movwf	secs_II_message@block+2,c
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;gemsecs.c: 539:    H10[0].block.block.systemb = V.systemb;
  3801  0042FE  C0AA  F109         	movff	_V+74,_H10+2	;volatile
  3802  004302  C0AB  F10A         	movff	_V+75,_H10+3	;volatile
  3803  004306  C0AC  F10B         	movff	_V+76,_H10+4	;volatile
  3804  00430A  C0AD  F10C         	movff	_V+77,_H10+5	;volatile
  3805                           
  3806                           ;gemsecs.c: 540:    break;
  3807  00430E  D10F               	goto	l7086
  3808  004310                     l6948:
  3809                           
  3810                           ; BSR set to: 0
  3811                           ;gemsecs.c: 542:    block.header = (uint8_t*) & H14[0];
  3812  004310  0EAF               	movlw	low _H14
  3813  004312  6E01               	movwf	secs_II_message@block,c
  3814  004314  0E01               	movlw	high _H14
  3815  004316  6E02               	movwf	secs_II_message@block+1,c
  3816                           
  3817                           ; BSR set to: 0
  3818                           ;gemsecs.c: 543:    block.length = sizeof(header14);
  3819  004318  0E11               	movlw	17
  3820  00431A  6E03               	movwf	secs_II_message@block+2,c
  3821                           
  3822                           ; BSR set to: 0
  3823                           ;gemsecs.c: 544:    H14[0].block.block.systemb = V.systemb;
  3824  00431C  C0AA  F1B5         	movff	_V+74,_H14+6	;volatile
  3825  004320  C0AB  F1B6         	movff	_V+75,_H14+7	;volatile
  3826  004324  C0AC  F1B7         	movff	_V+76,_H14+8	;volatile
  3827  004328  C0AD  F1B8         	movff	_V+77,_H14+9	;volatile
  3828                           
  3829                           ;gemsecs.c: 545:    break;
  3830  00432C  D100               	goto	l7086
  3831  00432E                     l6954:
  3832                           
  3833                           ; BSR set to: 0
  3834                           ;gemsecs.c: 547:    block.header = (uint8_t*) & H17[0];
  3835  00432E  0E9B               	movlw	low _H17
  3836  004330  6E01               	movwf	secs_II_message@block,c
  3837  004332  0E01               	movlw	high _H17
  3838  004334  6E02               	movwf	secs_II_message@block+1,c
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;gemsecs.c: 548:    block.length = sizeof(header17);
  3842  004336  0E14               	movlw	20
  3843  004338  6E03               	movwf	secs_II_message@block+2,c
  3844                           
  3845                           ; BSR set to: 0
  3846                           ;gemsecs.c: 549:    H17[0].block.block.systemb = V.systemb;
  3847  00433A  C0AA  F1A4         	movff	_V+74,_H17+9	;volatile
  3848  00433E  C0AB  F1A5         	movff	_V+75,_H17+10	;volatile
  3849  004342  C0AC  F1A6         	movff	_V+76,_H17+11	;volatile
  3850  004346  C0AD  F1A7         	movff	_V+77,_H17+12	;volatile
  3851                           
  3852                           ; BSR set to: 0
  3853                           ;gemsecs.c: 550:    H12[1].block.block.systemb = V.systemb;
  3854  00434A  C0AA  F175         	movff	_V+74,_H12+19	;volatile
  3855  00434E  C0AB  F176         	movff	_V+75,_H12+20	;volatile
  3856  004352  C0AC  F177         	movff	_V+76,_H12+21	;volatile
  3857  004356  C0AD  F178         	movff	_V+77,_H12+22	;volatile
  3858                           
  3859                           ; BSR set to: 0
  3860                           ;gemsecs.c: 551:    block.respond = 1;
  3861  00435A  8007               	bsf	secs_II_message@block+6,0,c
  3862                           
  3863                           ; BSR set to: 0
  3864                           ;gemsecs.c: 552:    block.reply = (uint8_t*) & H12[1];
  3865  00435C  0E71               	movlw	low (_H12+15)
  3866  00435E  6E04               	movwf	secs_II_message@block+3,c
  3867  004360  0E01               	movlw	high (_H12+15)
  3868  004362  6E05               	movwf	secs_II_message@block+4,c
  3869                           
  3870                           ;gemsecs.c: 553:    block.reply_length = sizeof(header12);
  3871  004364  0E0F               	movlw	15
  3872  004366  D7C2               	goto	L6
  3873  004368                     l6968:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;gemsecs.c: 557:    block.header = (uint8_t*) & H10[2];
  3877  004368  0E21               	movlw	low (_H10+26)
  3878  00436A  6E01               	movwf	secs_II_message@block,c
  3879  00436C  0E01               	movlw	high (_H10+26)
  3880  00436E  6E02               	movwf	secs_II_message@block+1,c
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;gemsecs.c: 558:    block.length = sizeof(header10);
  3884  004370  0E0D               	movlw	13
  3885  004372  6E03               	movwf	secs_II_message@block+2,c
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;gemsecs.c: 559:    H10[2].block.block.systemb = V.systemb;
  3889  004374  C0AA  F123         	movff	_V+74,_H10+28	;volatile
  3890  004378  C0AB  F124         	movff	_V+75,_H10+29	;volatile
  3891  00437C  C0AC  F125         	movff	_V+76,_H10+30	;volatile
  3892  004380  C0AD  F126         	movff	_V+77,_H10+31	;volatile
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;gemsecs.c: 560:    V.abort = LINK_ERROR_ABORT;
  3896  004384  0E11               	movlw	17
  3897  004386  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  3898                           
  3899                           ;gemsecs.c: 561:    break;
  3900  004388  D0D2               	goto	l7086
  3901  00438A                     l6978:
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;stkvar	_function @ sp[(0)+-7]
  3905  00438A  0EF9               	movlw	-7
  3906  00438C  50E3               	movf	plusw1,w,c
  3907  00438E  6E47               	movwf	btemp+10,c
  3908  004390  6A48               	clrf	btemp+11,c
  3909                           
  3910                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3911                           ; Switch size 1, requested type "simple"
  3912                           ; Number of cases is 1, Range of values is 0 to 0
  3913                           ; switch strategies available:
  3914                           ; Name         Instructions Cycles
  3915                           ; simple_byte            4     3 (average)
  3916                           ;	Chosen strategy is simple_byte
  3917  004392  5048               	movf	btemp+11,w,c
  3918  004394  0A00               	xorlw	0	; case 0
  3919  004396  A4D8               	btfss	status,2,c
  3920  004398  D7E7               	goto	l6968
  3921                           
  3922                           ; BSR set to: 0
  3923                           ; Switch size 1, requested type "simple"
  3924                           ; Number of cases is 4, Range of values is 1 to 13
  3925                           ; switch strategies available:
  3926                           ; Name         Instructions Cycles
  3927                           ; simple_byte           13     7 (average)
  3928                           ;	Chosen strategy is simple_byte
  3929  00439A  5047               	movf	btemp+10,w,c
  3930  00439C  0A01               	xorlw	1	; case 1
  3931  00439E  B4D8               	btfsc	status,2,c
  3932  0043A0  D789               	goto	l6928
  3933  0043A2  0A03               	xorlw	3	; case 2
  3934  0043A4  B4D8               	btfsc	status,2,c
  3935  0043A6  D7A5               	goto	l6942
  3936  0043A8  0A01               	xorlw	1	; case 3
  3937  0043AA  B4D8               	btfsc	status,2,c
  3938  0043AC  D7B1               	goto	l6948
  3939  0043AE  0A0E               	xorlw	14	; case 13
  3940  0043B0  B4D8               	btfsc	status,2,c
  3941  0043B2  D7BD               	goto	l6954
  3942  0043B4  D7D9               	goto	l6968
  3943  0043B6                     l6980:
  3944                           
  3945                           ; BSR set to: 0
  3946                           ;gemsecs.c: 567:    block.header = (uint8_t*) & H24[0];
  3947  0043B6  0E80               	movlw	low _H24
  3948  0043B8  6E01               	movwf	secs_II_message@block,c
  3949  0043BA  0E01               	movlw	high _H24
  3950  0043BC  6E02               	movwf	secs_II_message@block+1,c
  3951                           
  3952                           ; BSR set to: 0
  3953                           ;gemsecs.c: 568:    block.length = sizeof(header24);
  3954  0043BE  0E1B               	movlw	27
  3955  0043C0  6E03               	movwf	secs_II_message@block+2,c
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;gemsecs.c: 569:    H24[0].block.block.systemb = V.systemb;
  3959  0043C2  C0AA  F190         	movff	_V+74,_H24+16	;volatile
  3960  0043C6  C0AB  F191         	movff	_V+75,_H24+17	;volatile
  3961  0043CA  C0AC  F192         	movff	_V+76,_H24+18	;volatile
  3962  0043CE  C0AD  F193         	movff	_V+77,_H24+19	;volatile
  3963                           
  3964                           ; BSR set to: 0
  3965                           ;gemsecs.c: 570:    H24[0].data[12] = 12;
  3966  0043D2  0E0C               	movlw	12
  3967  0043D4  0101               	movlb	1	; () banked
  3968  0043D6  6F8E               	movwf	(_H24+14)& (0+255),b
  3969                           
  3970                           ;gemsecs.c: 571:    break;
  3971  0043D8  D0AA               	goto	l7086
  3972  0043DA                     l6998:
  3973                           
  3974                           ; BSR set to: 0
  3975                           ;stkvar	_function @ sp[(0)+-7]
  3976  0043DA  0EF9               	movlw	-7
  3977  0043DC  50E3               	movf	plusw1,w,c
  3978  0043DE  6E47               	movwf	btemp+10,c
  3979  0043E0  6A48               	clrf	btemp+11,c
  3980                           
  3981                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3982                           ; Switch size 1, requested type "simple"
  3983                           ; Number of cases is 1, Range of values is 0 to 0
  3984                           ; switch strategies available:
  3985                           ; Name         Instructions Cycles
  3986                           ; simple_byte            4     3 (average)
  3987                           ;	Chosen strategy is simple_byte
  3988  0043E2  5048               	movf	btemp+11,w,c
  3989  0043E4  0A00               	xorlw	0	; case 0
  3990  0043E6  A4D8               	btfss	status,2,c
  3991  0043E8  D7BF               	goto	l6968
  3992                           
  3993                           ; BSR set to: 0
  3994                           ; Switch size 1, requested type "simple"
  3995                           ; Number of cases is 1, Range of values is 17 to 17
  3996                           ; switch strategies available:
  3997                           ; Name         Instructions Cycles
  3998                           ; simple_byte            4     3 (average)
  3999                           ;	Chosen strategy is simple_byte
  4000  0043EA  5047               	movf	btemp+10,w,c
  4001  0043EC  0A11               	xorlw	17	; case 17
  4002  0043EE  B4D8               	btfsc	status,2,c
  4003  0043F0  D7E2               	goto	l6980
  4004  0043F2  D7BA               	goto	l6968
  4005  0043F4                     l7000:
  4006                           
  4007                           ; BSR set to: 0
  4008                           ;gemsecs.c: 583:    block.header = (uint8_t*) & H13[2];
  4009  0043F4  0EA0               	movlw	low (_H13+32)
  4010  0043F6  6E01               	movwf	secs_II_message@block,c
  4011  0043F8  0E02               	movlw	high (_H13+32)
  4012  0043FA  6E02               	movwf	secs_II_message@block+1,c
  4013                           
  4014                           ; BSR set to: 0
  4015                           ;gemsecs.c: 584:    block.length = sizeof(header13);
  4016  0043FC  0E10               	movlw	16
  4017  0043FE  6E03               	movwf	secs_II_message@block+2,c
  4018                           
  4019                           ; BSR set to: 0
  4020                           ;gemsecs.c: 585:    H13[2].block.block.systemb = V.systemb;
  4021  004400  C0AA  F2A5         	movff	_V+74,_H13+37	;volatile
  4022  004404  C0AB  F2A6         	movff	_V+75,_H13+38	;volatile
  4023  004408  C0AC  F2A7         	movff	_V+76,_H13+39	;volatile
  4024  00440C  C0AD  F2A8         	movff	_V+77,_H13+40	;volatile
  4025                           
  4026                           ;gemsecs.c: 586:    break;
  4027  004410  D08E               	goto	l7086
  4028  004412                     l7016:
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;stkvar	_function @ sp[(0)+-7]
  4032  004412  0EF9               	movlw	-7
  4033  004414  50E3               	movf	plusw1,w,c
  4034  004416  6E47               	movwf	btemp+10,c
  4035  004418  6A48               	clrf	btemp+11,c
  4036                           
  4037                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4038                           ; Switch size 1, requested type "simple"
  4039                           ; Number of cases is 1, Range of values is 0 to 0
  4040                           ; switch strategies available:
  4041                           ; Name         Instructions Cycles
  4042                           ; simple_byte            4     3 (average)
  4043                           ;	Chosen strategy is simple_byte
  4044  00441A  5048               	movf	btemp+11,w,c
  4045  00441C  0A00               	xorlw	0	; case 0
  4046  00441E  A4D8               	btfss	status,2,c
  4047  004420  D7A3               	goto	l6968
  4048                           
  4049                           ; BSR set to: 0
  4050                           ; Switch size 1, requested type "simple"
  4051                           ; Number of cases is 1, Range of values is 1 to 1
  4052                           ; switch strategies available:
  4053                           ; Name         Instructions Cycles
  4054                           ; simple_byte            4     3 (average)
  4055                           ;	Chosen strategy is simple_byte
  4056  004422  5047               	movf	btemp+10,w,c
  4057  004424  0A01               	xorlw	1	; case 1
  4058  004426  B4D8               	btfsc	status,2,c
  4059  004428  D7E5               	goto	l7000
  4060  00442A  D79E               	goto	l6968
  4061  00442C                     l7018:
  4062                           
  4063                           ; BSR set to: 0
  4064                           ;gemsecs.c: 598:    block.header = (uint8_t*) & H13[0];
  4065  00442C  0E80               	movlw	low _H13
  4066  00442E  6E01               	movwf	secs_II_message@block,c
  4067  004430  0E02               	movlw	high _H13
  4068  004432  6E02               	movwf	secs_II_message@block+1,c
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;gemsecs.c: 599:    block.length = sizeof(header13);
  4072  004434  0E10               	movlw	16
  4073  004436  6E03               	movwf	secs_II_message@block+2,c
  4074                           
  4075                           ; BSR set to: 0
  4076                           ;gemsecs.c: 600:    H13[0].block.block.systemb = V.systemb;
  4077  004438  C0AA  F285         	movff	_V+74,_H13+5	;volatile
  4078  00443C  C0AB  F286         	movff	_V+75,_H13+6	;volatile
  4079  004440  C0AC  F287         	movff	_V+76,_H13+7	;volatile
  4080  004444  C0AD  F288         	movff	_V+77,_H13+8	;volatile
  4081                           
  4082                           ;gemsecs.c: 601:    break;
  4083  004448  D072               	goto	l7086
  4084  00444A                     l7034:
  4085                           
  4086                           ; BSR set to: 0
  4087                           ;stkvar	_function @ sp[(0)+-7]
  4088  00444A  0EF9               	movlw	-7
  4089  00444C  50E3               	movf	plusw1,w,c
  4090  00444E  6E47               	movwf	btemp+10,c
  4091  004450  6A48               	clrf	btemp+11,c
  4092                           
  4093                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4094                           ; Switch size 1, requested type "simple"
  4095                           ; Number of cases is 1, Range of values is 0 to 0
  4096                           ; switch strategies available:
  4097                           ; Name         Instructions Cycles
  4098                           ; simple_byte            4     3 (average)
  4099                           ;	Chosen strategy is simple_byte
  4100  004452  5048               	movf	btemp+11,w,c
  4101  004454  0A00               	xorlw	0	; case 0
  4102  004456  A4D8               	btfss	status,2,c
  4103  004458  D787               	goto	l6968
  4104                           
  4105                           ; BSR set to: 0
  4106                           ; Switch size 1, requested type "simple"
  4107                           ; Number of cases is 1, Range of values is 11 to 11
  4108                           ; switch strategies available:
  4109                           ; Name         Instructions Cycles
  4110                           ; simple_byte            4     3 (average)
  4111                           ;	Chosen strategy is simple_byte
  4112  00445A  5047               	movf	btemp+10,w,c
  4113  00445C  0A0B               	xorlw	11	; case 11
  4114  00445E  B4D8               	btfsc	status,2,c
  4115  004460  D7E5               	goto	l7018
  4116  004462  D782               	goto	l6968
  4117  004464                     l7046:
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;stkvar	_function @ sp[(0)+-7]
  4121  004464  0EF9               	movlw	-7
  4122  004466  50E3               	movf	plusw1,w,c
  4123  004468  6E47               	movwf	btemp+10,c
  4124  00446A  6A48               	clrf	btemp+11,c
  4125                           
  4126                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4127                           ; Switch size 1, requested type "simple"
  4128                           ; Number of cases is 1, Range of values is 0 to 0
  4129                           ; switch strategies available:
  4130                           ; Name         Instructions Cycles
  4131                           ; simple_byte            4     3 (average)
  4132                           ;	Chosen strategy is simple_byte
  4133  00446C  5048               	movf	btemp+11,w,c
  4134  00446E  0A00               	xorlw	0	; case 0
  4135  004470  A4D8               	btfss	status,2,c
  4136  004472  D77A               	goto	l6968
  4137                           
  4138                           ; BSR set to: 0
  4139                           ; Switch size 1, requested type "simple"
  4140                           ; Number of cases is 7, Range of values is 1 to 13
  4141                           ; switch strategies available:
  4142                           ; Name         Instructions Cycles
  4143                           ; simple_byte           22    12 (average)
  4144                           ;	Chosen strategy is simple_byte
  4145  004474  5047               	movf	btemp+10,w,c
  4146  004476  0A01               	xorlw	1	; case 1
  4147  004478  B4D8               	btfsc	status,2,c
  4148  00447A  D059               	goto	l7086
  4149  00447C  0A02               	xorlw	2	; case 3
  4150  00447E  B4D8               	btfsc	status,2,c
  4151  004480  D056               	goto	l7086
  4152  004482  0A06               	xorlw	6	; case 5
  4153  004484  B4D8               	btfsc	status,2,c
  4154  004486  D053               	goto	l7086
  4155  004488  0A02               	xorlw	2	; case 7
  4156  00448A  B4D8               	btfsc	status,2,c
  4157  00448C  D050               	goto	l7086
  4158  00448E  0A0E               	xorlw	14	; case 9
  4159  004490  B4D8               	btfsc	status,2,c
  4160  004492  D04D               	goto	l7086
  4161  004494  0A02               	xorlw	2	; case 11
  4162  004496  B4D8               	btfsc	status,2,c
  4163  004498  D04A               	goto	l7086
  4164  00449A  0A06               	xorlw	6	; case 13
  4165  00449C  B4D8               	btfsc	status,2,c
  4166  00449E  D047               	goto	l7086
  4167  0044A0  D763               	goto	l6968
  4168  0044A2                     l7048:
  4169                           
  4170                           ; BSR set to: 0
  4171                           ;gemsecs.c: 637:    block.header = (uint8_t*) & H13[1];
  4172  0044A2  0E90               	movlw	low (_H13+16)
  4173  0044A4  6E01               	movwf	secs_II_message@block,c
  4174  0044A6  0E02               	movlw	high (_H13+16)
  4175  0044A8  6E02               	movwf	secs_II_message@block+1,c
  4176                           
  4177                           ; BSR set to: 0
  4178                           ;gemsecs.c: 638:    block.length = sizeof(header13);
  4179  0044AA  0E10               	movlw	16
  4180  0044AC  6E03               	movwf	secs_II_message@block+2,c
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;gemsecs.c: 639:    H13[1].block.block.systemb = V.systemb;
  4184  0044AE  C0AA  F295         	movff	_V+74,_H13+21	;volatile
  4185  0044B2  C0AB  F296         	movff	_V+75,_H13+22	;volatile
  4186  0044B6  C0AC  F297         	movff	_V+76,_H13+23	;volatile
  4187  0044BA  C0AD  F298         	movff	_V+77,_H13+24	;volatile
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;gemsecs.c: 640:    H53[0].block.block.systemb = V.systemb;
  4191  0044BE  C0AA  F3F0         	movff	_V+74,_H53+45	;volatile
  4192  0044C2  C0AB  F3F1         	movff	_V+75,_H53+46	;volatile
  4193  0044C6  C0AC  F3F2         	movff	_V+76,_H53+47	;volatile
  4194  0044CA  C0AD  F3F3         	movff	_V+77,_H53+48	;volatile
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;gemsecs.c: 641:    block.respond = 1;
  4198  0044CE  8007               	bsf	secs_II_message@block+6,0,c
  4199                           
  4200                           ; BSR set to: 0
  4201                           ;gemsecs.c: 642:    block.reply = (uint8_t*) & H53[0];
  4202  0044D0  0EC3               	movlw	low _H53
  4203  0044D2  6E04               	movwf	secs_II_message@block+3,c
  4204  0044D4  0E03               	movlw	high _H53
  4205  0044D6  6E05               	movwf	secs_II_message@block+4,c
  4206                           
  4207                           ;gemsecs.c: 643:    block.reply_length = sizeof(header53);
  4208  0044D8  0E38               	movlw	56
  4209  0044DA  D708               	goto	L6
  4210  0044DC                     l7072:
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;stkvar	_function @ sp[(0)+-7]
  4214  0044DC  0EF9               	movlw	-7
  4215  0044DE  50E3               	movf	plusw1,w,c
  4216  0044E0  6E47               	movwf	btemp+10,c
  4217  0044E2  6A48               	clrf	btemp+11,c
  4218                           
  4219                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4220                           ; Switch size 1, requested type "simple"
  4221                           ; Number of cases is 1, Range of values is 0 to 0
  4222                           ; switch strategies available:
  4223                           ; Name         Instructions Cycles
  4224                           ; simple_byte            4     3 (average)
  4225                           ;	Chosen strategy is simple_byte
  4226  0044E4  5048               	movf	btemp+11,w,c
  4227  0044E6  0A00               	xorlw	0	; case 0
  4228  0044E8  A4D8               	btfss	status,2,c
  4229  0044EA  D73E               	goto	l6968
  4230                           
  4231                           ; BSR set to: 0
  4232                           ; Switch size 1, requested type "simple"
  4233                           ; Number of cases is 1, Range of values is 1 to 1
  4234                           ; switch strategies available:
  4235                           ; Name         Instructions Cycles
  4236                           ; simple_byte            4     3 (average)
  4237                           ;	Chosen strategy is simple_byte
  4238  0044EC  5047               	movf	btemp+10,w,c
  4239  0044EE  0A01               	xorlw	1	; case 1
  4240  0044F0  B4D8               	btfsc	status,2,c
  4241  0044F2  D7D7               	goto	l7048
  4242  0044F4  D739               	goto	l6968
  4243  0044F6                     l7084:
  4244                           
  4245                           ; BSR set to: 0
  4246                           ;stkvar	_stream @ sp[(0)+-6]
  4247  0044F6  0EFA               	movlw	-6
  4248  0044F8  50E3               	movf	plusw1,w,c
  4249  0044FA  6E47               	movwf	btemp+10,c
  4250  0044FC  6A48               	clrf	btemp+11,c
  4251                           
  4252                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4253                           ; Switch size 1, requested type "simple"
  4254                           ; Number of cases is 1, Range of values is 0 to 0
  4255                           ; switch strategies available:
  4256                           ; Name         Instructions Cycles
  4257                           ; simple_byte            4     3 (average)
  4258                           ;	Chosen strategy is simple_byte
  4259  0044FE  5048               	movf	btemp+11,w,c
  4260  004500  0A00               	xorlw	0	; case 0
  4261  004502  A4D8               	btfss	status,2,c
  4262  004504  D731               	goto	l6968
  4263                           
  4264                           ; BSR set to: 0
  4265                           ; Switch size 1, requested type "simple"
  4266                           ; Number of cases is 6, Range of values is 1 to 10
  4267                           ; switch strategies available:
  4268                           ; Name         Instructions Cycles
  4269                           ; simple_byte           19    10 (average)
  4270                           ;	Chosen strategy is simple_byte
  4271  004506  5047               	movf	btemp+10,w,c
  4272  004508  0A01               	xorlw	1	; case 1
  4273  00450A  B4D8               	btfsc	status,2,c
  4274  00450C  D73E               	goto	l6978
  4275  00450E  0A03               	xorlw	3	; case 2
  4276  004510  B4D8               	btfsc	status,2,c
  4277  004512  D763               	goto	l6998
  4278  004514  0A07               	xorlw	7	; case 5
  4279  004516  B4D8               	btfsc	status,2,c
  4280  004518  D77C               	goto	l7016
  4281  00451A  0A03               	xorlw	3	; case 6
  4282  00451C  B4D8               	btfsc	status,2,c
  4283  00451E  D795               	goto	l7034
  4284  004520  0A0F               	xorlw	15	; case 9
  4285  004522  B4D8               	btfsc	status,2,c
  4286  004524  D79F               	goto	l7046
  4287  004526  0A03               	xorlw	3	; case 10
  4288  004528  B4D8               	btfsc	status,2,c
  4289  00452A  D7D8               	goto	l7072
  4290  00452C  D71D               	goto	l6968
  4291  00452E                     l7086:
  4292                           
  4293                           ;gemsecs.c: 662:  return(block);
  4294  00452E  EE20  F001         	lfsr	2,secs_II_message@block
  4295                           
  4296                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  4297  004532  0E07               	movlw	7
  4298  004534  6E3D               	movwf	btemp,c
  4299  004536  0EF9               	movlw	-7
  4300  004538                     us410999:
  4301  004538  006F FF7B FFE3     	movff	postinc2,plusw1
  4302  00453E  28E8               	incf	wreg,w,c
  4303  004540  2E3D               	decfsz	btemp,f,c
  4304  004542  D7FA               	bra	us410999
  4305                           
  4306                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  4307  004544  0012               	return		;funcret
  4308  004546                     __end_of_secs_II_message:
  4309                           	opt callstack 0
  4310                           
  4311 ;; *************** function _srand *****************
  4312 ;; Defined at:
  4313 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  s               2  [STACK] unsigned int 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;		None
  4318 ;; Return value:  Size  Location     Type
  4319 ;;                  1  [STACK] void 
  4320 ;; Registers used:
  4321 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4322 ;; Tracked objects:
  4323 ;;		On entry : 3F/0
  4324 ;;		On exit  : 3F/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4331 ;;Total ram usage:        0 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:    3
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_main
  4338 ;; This function uses a reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text3
  4342  0067BC                     __ptext3:
  4343                           	opt callstack 0
  4344  0067BC                     _srand:
  4345                           	opt callstack 27
  4346                           
  4347                           ;stkvar	_s @ sp[(0)+-2]
  4348                           
  4349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4350                           ;incstack = 0
  4351  0067BC  0EFE               	movlw	-2
  4352  0067BE  50E3               	movf	plusw1,w,c
  4353  0067C0  0FFF               	addlw	255
  4354  0067C2  6E47               	movwf	btemp+10,c
  4355  0067C4  0EFF               	movlw	-1
  4356  0067C6  006F FF8C  F048    	movff	plusw1,btemp+11
  4357  0067CC  0EFF               	movlw	255
  4358  0067CE  2248               	addwfc	btemp+11,f,c
  4359  0067D0  0060  F11C  F0F3   	movff	btemp+10,_seed
  4360  0067D6  0060  F120  F0F4   	movff	btemp+11,_seed+1
  4361  0067DC  0100               	movlb	0	; () banked
  4362  0067DE  6BF5               	clrf	(_seed+2)& (0+255),b
  4363  0067E0  6BF6               	clrf	(_seed+3)& (0+255),b
  4364  0067E2  6BF7               	clrf	(_seed+4)& (0+255),b
  4365  0067E4  6BF8               	clrf	(_seed+5)& (0+255),b
  4366  0067E6  6BF9               	clrf	(_seed+6)& (0+255),b
  4367  0067E8  6BFA               	clrf	(_seed+7)& (0+255),b
  4368                           
  4369                           ; BSR set to: 0
  4370                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4371  0067EA  52E5               	movf	postdec1,f,c
  4372  0067EC  52E5               	movf	postdec1,f,c
  4373  0067EE  0012               	return		;funcret
  4374  0067F0                     __end_of_srand:
  4375                           	opt callstack 0
  4376                           
  4377 ;; *************** function _sprintf *****************
  4378 ;; Defined at:
  4379 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4380 ;; Parameters:    Size  Location     Type
  4381 ;;  s               1  [STACK] PTR unsigned char 
  4382 ;;		 -> V(100), 
  4383 ;;  fmt             1  [STACK] PTR const unsigned char 
  4384 ;;		 -> STR_16(26), STR_15(26), STR_14(6), STR_13(19), 
  4385 ;;		 -> STR_12(26), STR_11(18), STR_10(21), STR_9(18), 
  4386 ;;		 -> STR_8(6), STR_7(6), STR_6(14), STR_5(21), 
  4387 ;;		 -> STR_4(15), STR_2(12), STR_1(17), 
  4388 ;; Auto vars:     Size  Location     Type
  4389 ;;  f               5  [STACK] struct _IO_FILE
  4390 ;;  ap              2  [STACK] PTR void [1]
  4391 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4392 ;;  ret             2    0        int 
  4393 ;; Return value:  Size  Location     Type
  4394 ;;                  2  [STACK] int 
  4395 ;; Registers used:
  4396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  4397 ;; Tracked objects:
  4398 ;;		On entry : 3F/0
  4399 ;;		On exit  : 3F/0
  4400 ;;		Unchanged: 0/0
  4401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4406 ;;Total ram usage:        0 bytes
  4407 ;; Hardware stack levels used:    1
  4408 ;; Hardware stack levels required when called:   11
  4409 ;; This function calls:
  4410 ;;		_vfprintf
  4411 ;; This function is called by:
  4412 ;;		_main
  4413 ;; This function uses a reentrant model
  4414 ;;
  4415                           
  4416                           	psect	text4
  4417  0059BC                     __ptext4:
  4418                           	opt callstack 0
  4419  0059BC                     _sprintf:
  4420                           	opt callstack 0
  4421                           
  4422                           ; BSR set to: 0
  4423                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  4424  0059BC  0E07               	movlw	7
  4425  0059BE  26E1               	addwf	fsr1l,f,c
  4426  0059C0  0E00               	movlw	0
  4427  0059C2  22E2               	addwfc	fsr1h,f,c
  4428                           
  4429                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  4430                           
  4431                           ;incstack = 0
  4432  0059C4  0EF6               	movlw	246
  4433  0059C6  24E1               	addwf	fsr1l,w,c
  4434  0059C8  6E47               	movwf	btemp+10,c
  4435  0059CA  0EFF               	movlw	255
  4436  0059CC  20E2               	addwfc	fsr1h,w,c
  4437  0059CE  6E48               	movwf	btemp+11,c
  4438                           
  4439                           ;stkvar	_ap @ sp[(-7)+5]
  4440  0059D0  0EFF               	movlw	-1
  4441  0059D2  0060  F123  FFE3   	movff	btemp+11,plusw1
  4442  0059D8  0EFE               	movlw	-2
  4443  0059DA  0060  F11F  FFE3   	movff	btemp+10,plusw1
  4444                           
  4445                           ;stkvar	_s @ sp[(-7)+-2]
  4446  0059E0  0EF7               	movlw	-9
  4447  0059E2  006F FF8C  F048    	movff	plusw1,btemp+11
  4448                           
  4449                           ;stkvar	_f @ sp[(-7)+0]
  4450  0059E8  0EF9               	movlw	-7
  4451  0059EA  0060  F123  FFE3   	movff	btemp+11,plusw1
  4452                           
  4453                           ;stkvar	_f @ sp[(-7)+0]
  4454  0059F0  0EFA               	movlw	250
  4455  0059F2  24E1               	addwf	fsr1l,w,c
  4456  0059F4  6ED9               	movwf	fsr2l,c
  4457  0059F6  0EFF               	movlw	255
  4458  0059F8  20E2               	addwfc	fsr1h,w,c
  4459  0059FA  6EDA               	movwf	fsr2h,c
  4460  0059FC  0E00               	movlw	0
  4461  0059FE  6EDE               	movwf	postinc2,c
  4462  005A00  0E00               	movlw	0
  4463  005A02  6EDD               	movwf	postdec2,c
  4464                           
  4465                           ;stkvar	_f @ sp[(-7)+0]
  4466  005A04  0EFC               	movlw	252
  4467  005A06  24E1               	addwf	fsr1l,w,c
  4468  005A08  6ED9               	movwf	fsr2l,c
  4469  005A0A  0EFF               	movlw	255
  4470  005A0C  20E2               	addwfc	fsr1h,w,c
  4471  005A0E  6EDA               	movwf	fsr2h,c
  4472  005A10  0E00               	movlw	0
  4473  005A12  6EDE               	movwf	postinc2,c
  4474  005A14  0E00               	movlw	0
  4475  005A16  6EDD               	movwf	postdec2,c
  4476                           
  4477                           ;stkvar	_ap @ sp[(-7)+5]
  4478  005A18  0EFE               	movlw	254
  4479  005A1A  24E1               	addwf	fsr1l,w,c
  4480  005A1C  6E3D               	movwf	btemp,c
  4481  005A1E  0EFF               	movlw	255
  4482  005A20  20E2               	addwfc	fsr1h,w,c
  4483  005A22  6E3E               	movwf	btemp+1,c
  4484  005A24  0060  F0F7  FFE6   	movff	btemp,postinc1
  4485  005A2A  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  4486                           
  4487                           ;stkvar	_fmt @ sp[(-9)+-3]
  4488  005A30  0EF4               	movlw	-12
  4489  005A32  50E3               	movf	plusw1,w,c
  4490  005A34  6EE6               	movwf	postinc1,c
  4491                           
  4492                           ;stkvar	_f @ sp[(-10)+0]
  4493  005A36  0EF6               	movlw	246
  4494  005A38  24E1               	addwf	fsr1l,w,c
  4495  005A3A  6E3D               	movwf	btemp,c
  4496  005A3C  0EFF               	movlw	255
  4497  005A3E  20E2               	addwfc	fsr1h,w,c
  4498  005A40  6E3E               	movwf	btemp+1,c
  4499  005A42  0060  F0F7  FFE6   	movff	btemp,postinc1
  4500  005A48  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  4501  005A4E  ECF3  F02E         	call	_vfprintf	;wreg free
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;stkvar	_f @ sp[(-7)+0]
  4505  005A52  0EFA               	movlw	250
  4506  005A54  24E1               	addwf	fsr1l,w,c
  4507  005A56  6ED9               	movwf	fsr2l,c
  4508  005A58  0EFF               	movlw	255
  4509  005A5A  20E2               	addwfc	fsr1h,w,c
  4510  005A5C  6EDA               	movwf	fsr2h,c
  4511  005A5E  50DF               	movf	indf2,w,c
  4512  005A60  6E48               	movwf	btemp+11,c
  4513                           
  4514                           ;stkvar	_s @ sp[(-7)+-2]
  4515  005A62  0EF7               	movlw	-9
  4516  005A64  50E3               	movf	plusw1,w,c
  4517  005A66  2448               	addwf	btemp+11,w,c
  4518  005A68  6ED9               	movwf	fsr2l,c
  4519  005A6A  6ADA               	clrf	fsr2h,c
  4520  005A6C  0E00               	movlw	0
  4521  005A6E  6EDF               	movwf	indf2,c
  4522                           
  4523                           ; BSR set to: 0
  4524                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 2, vargsize = 0
  4525  005A70  0EF9               	movlw	249
  4526  005A72  26E1               	addwf	fsr1l,f,c
  4527  005A74  0EFF               	movlw	255
  4528  005A76  22E2               	addwfc	fsr1h,f,c
  4529  005A78  52E5               	movf	postdec1,f,c
  4530  005A7A  50E7               	movf	indf1,w,c
  4531  005A7C  5EE1               	subwf	fsr1l,f,c
  4532  005A7E  0E00               	movlw	0
  4533  005A80  5AE2               	subwfb	fsr1h,f,c
  4534  005A82  0012               	return		;funcret
  4535  005A84                     __end_of_sprintf:
  4536                           	opt callstack 0
  4537                           
  4538 ;; *************** function _r_protocol *****************
  4539 ;; Defined at:
  4540 ;;		line 213 in file "gemsecs.c"
  4541 ;; Parameters:    Size  Location     Type
  4542 ;;  r_link          1  [STACK] PTR enum E16173
  4543 ;;		 -> V(100), 
  4544 ;; Auto vars:     Size  Location     Type
  4545 ;;  rxData          1  [STACK] unsigned char 
  4546 ;; Return value:  Size  Location     Type
  4547 ;;                  1  [STACK] enum E16913
  4548 ;; Registers used:
  4549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  4550 ;; Tracked objects:
  4551 ;;		On entry : 0/0
  4552 ;;		On exit  : 0/0
  4553 ;;		Unchanged: 0/0
  4554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4559 ;;Total ram usage:        0 bytes
  4560 ;; Hardware stack levels used:    1
  4561 ;; Hardware stack levels required when called:    7
  4562 ;; This function calls:
  4563 ;;		_StartTimer
  4564 ;;		_TimerDone
  4565 ;;		_UART1_Read
  4566 ;;		_UART1_Write
  4567 ;;		_UART1_is_rx_ready
  4568 ;;		_WaitMs
  4569 ;;		_run_checksum
  4570 ;;		_secs_gem_state
  4571 ;;		_secs_send
  4572 ;; This function is called by:
  4573 ;;		_main
  4574 ;; This function uses a reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text5
  4578  00369A                     __ptext5:
  4579                           	opt callstack 0
  4580  00369A                     _r_protocol:
  4581                           	opt callstack 0
  4582                           
  4583                           ; BSR set to: 0
  4584                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4585  00369A  52E6               	movf	postinc1,f,c
  4586                           
  4587                           ;gemsecs.c: 213: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 214: {;gemsecs.
      +                          c: 215:  uint8_t rxData;;gemsecs.c: 216:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck;;gemsecs.c: 218:  switch (*r_link) {
  4588                           
  4589                           ;incstack = 0
  4590  00369C  D1A2               	goto	l9370
  4591  00369E                     l9232:
  4592                           
  4593                           ;gemsecs.c: 220:   if (UART1_is_rx_ready()) {
  4594  00369E  EC7F  F037         	call	_UART1_is_rx_ready	;wreg free
  4595  0036A2  503D               	movf	btemp,w,c
  4596  0036A4  B4D8               	btfsc	status,2,c
  4597  0036A6  D1BE               	goto	l9372
  4598                           
  4599                           ;gemsecs.c: 221:    rxData = UART1_Read();
  4600  0036A8  EC88  F033         	call	_UART1_Read	;wreg free
  4601                           
  4602                           ;stkvar	_rxData @ sp[(-1)+0]
  4603  0036AC  0EFF               	movlw	-1
  4604  0036AE  0060  F0F7  FFE3   	movff	btemp,plusw1
  4605                           
  4606                           ; BSR set to: 57
  4607                           ;gemsecs.c: 222:    if (rxData == 0x05) {
  4608                           ;stkvar	_rxData @ sp[(-1)+0]
  4609  0036B4  0EFF               	movlw	-1
  4610  0036B6  006F FF8C  F03D    	movff	plusw1,btemp
  4611  0036BC  0E05               	movlw	5
  4612  0036BE  183D               	xorwf	btemp,w,c
  4613  0036C0  A4D8               	btfss	status,2,c
  4614  0036C2  D1B0               	goto	l9372
  4615                           
  4616                           ; BSR set to: 57
  4617                           ;gemsecs.c: 223:     V.error = LINK_ERROR_NONE;
  4618  0036C4  0E0A               	movlw	10
  4619  0036C6  0100               	movlb	0	; () banked
  4620  0036C8  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4621                           
  4622                           ; BSR set to: 0
  4623                           ;gemsecs.c: 224:     *r_link = LINK_STATE_ENQ;
  4624                           ;stkvar	_r_link @ sp[(-1)+-1]
  4625  0036CA  0EFE               	movlw	-2
  4626  0036CC  50E3               	movf	plusw1,w,c
  4627  0036CE  6ED9               	movwf	fsr2l,c
  4628  0036D0  6ADA               	clrf	fsr2h,c
  4629  0036D2  0E01               	movlw	1
  4630  0036D4  D16D               	goto	L10
  4631  0036D6                     l1661:
  4632                           
  4633                           ;gemsecs.c: 229:   rxData_l = 0;
  4634  0036D6  6A2E               	clrf	r_protocol@rxData_l,c
  4635                           
  4636                           ;gemsecs.c: 230:   b_block = (uint8_t*) & H254[0];
  4637  0036D8  0E43               	movlw	low _H254
  4638  0036DA  6E23               	movwf	r_protocol@b_block,c
  4639  0036DC  0E04               	movlw	high _H254
  4640  0036DE  6E24               	movwf	r_protocol@b_block+1,c
  4641                           
  4642                           ;gemsecs.c: 231:   UART1_Write(0x04);
  4643  0036E0  0E04               	movlw	4
  4644  0036E2  6EE6               	movwf	postinc1,c
  4645  0036E4  EC4A  F033         	call	_UART1_Write	;wreg free
  4646                           
  4647                           ; BSR set to: 57
  4648                           ;gemsecs.c: 232:   StartTimer(TMR_T2, 2000);
  4649  0036E8  0ED0               	movlw	208
  4650  0036EA  6EE6               	movwf	postinc1,c
  4651  0036EC  0E07               	movlw	7
  4652  0036EE  6EE6               	movwf	postinc1,c
  4653  0036F0  0E02               	movlw	2
  4654  0036F2  6EE6               	movwf	postinc1,c
  4655  0036F4  ECEB  F032         	call	_StartTimer	;wreg free
  4656                           
  4657                           ;gemsecs.c: 233:   *r_link = LINK_STATE_EOT;
  4658                           ;stkvar	_r_link @ sp[(-1)+-1]
  4659  0036F8  0EFE               	movlw	-2
  4660  0036FA  50E3               	movf	plusw1,w,c
  4661  0036FC  6ED9               	movwf	fsr2l,c
  4662  0036FE  6ADA               	clrf	fsr2h,c
  4663  003700  0E02               	movlw	2
  4664  003702  6EDF               	movwf	indf2,c
  4665                           
  4666                           ;gemsecs.c: 235:   WaitMs(5);
  4667  003704  0E05               	movlw	5
  4668  003706  6EE6               	movwf	postinc1,c
  4669  003708  0E00               	movlw	0
  4670  00370A  6EE6               	movwf	postinc1,c
  4671  00370C  ECC3  F033         	call	_WaitMs	;wreg free
  4672                           
  4673                           ;gemsecs.c: 238:   H10[3].block.block.systemb = V.ticks;
  4674  003710  C0A6  F130         	movff	_V+70,_H10+41	;volatile
  4675  003714  C0A7  F131         	movff	_V+71,_H10+42	;volatile
  4676  003718  C0A8  F132         	movff	_V+72,_H10+43	;volatile
  4677  00371C  C0A9  F133         	movff	_V+73,_H10+44	;volatile
  4678                           
  4679                           ;gemsecs.c: 239:   secs_send((uint8_t*) & H10[3], sizeof(header10), 1, 1);
  4680  003720  0E01               	movlw	1
  4681  003722  6EE6               	movwf	postinc1,c
  4682  003724  0E01               	movlw	1
  4683  003726  6EE6               	movwf	postinc1,c
  4684  003728  0E0D               	movlw	13
  4685  00372A  6EE6               	movwf	postinc1,c
  4686  00372C  0E2E               	movlw	low (_H10+39)
  4687  00372E  6EE6               	movwf	postinc1,c
  4688  003730  0E01               	movlw	high (_H10+39)
  4689  003732  6EE6               	movwf	postinc1,c
  4690  003734  ECE3  F023         	call	_secs_send	;wreg free
  4691                           
  4692                           ;gemsecs.c: 241:   break;
  4693  003738  D175               	goto	l9372
  4694  00373A                     l9256:
  4695                           
  4696                           ;gemsecs.c: 243:   if (TimerDone(TMR_T2)) {
  4697  00373A  0E02               	movlw	2
  4698  00373C  6EE6               	movwf	postinc1,c
  4699  00373E  ECA6  F034         	call	_TimerDone	;wreg free
  4700  003742  503D               	movf	btemp,w,c
  4701  003744  B4D8               	btfsc	status,2,c
  4702  003746  D019               	goto	l9268
  4703                           
  4704                           ;gemsecs.c: 244:    V.timer_error++;
  4705  003748  0100               	movlb	0	; () banked
  4706  00374A  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  4707  00374C  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  4708                           
  4709                           ; BSR set to: 0
  4710                           ;gemsecs.c: 245:    if (!retry--) {
  4711  00374E  065D               	decf	r_protocol@retry,f,c
  4712  003750  285D               	incf	r_protocol@retry,w,c
  4713  003752  A4D8               	btfss	status,2,c
  4714  003754  D00C               	goto	l9266
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;gemsecs.c: 246:     V.error = LINK_ERROR_T2;
  4718  003756  0E0C               	movlw	12
  4719  003758  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  4720                           
  4721                           ;gemsecs.c: 247:     V.failed_receive = 1;
  4722  00375A  51BE               	movf	(_V+94)& (0+255),w,b	;volatile
  4723  00375C  0BF0               	andlw	-16
  4724  00375E  0901               	iorlw	1
  4725  003760  6FBE               	movwf	(_V+94)& (0+255),b	;volatile
  4726                           
  4727                           ; BSR set to: 0
  4728                           ;gemsecs.c: 248:     *r_link = LINK_STATE_NAK;
  4729                           ;stkvar	_r_link @ sp[(-1)+-1]
  4730  003762  0EFE               	movlw	-2
  4731  003764  50E3               	movf	plusw1,w,c
  4732  003766  6ED9               	movwf	fsr2l,c
  4733  003768  6ADA               	clrf	fsr2h,c
  4734  00376A  0E05               	movlw	5
  4735  00376C  D121               	goto	L10
  4736  00376E                     l9266:
  4737                           
  4738                           ;gemsecs.c: 250:     *r_link = LINK_STATE_IDLE;
  4739                           ;stkvar	_r_link @ sp[(-1)+-1]
  4740  00376E  0EFE               	movlw	-2
  4741  003770  50E3               	movf	plusw1,w,c
  4742  003772  6ED9               	movwf	fsr2l,c
  4743  003774  6ADA               	clrf	fsr2h,c
  4744  003776  0E00               	movlw	0
  4745  003778  D11B               	goto	L10
  4746  00377A                     l9268:
  4747                           
  4748                           ;gemsecs.c: 253:    if (UART1_is_rx_ready()) {
  4749  00377A  EC7F  F037         	call	_UART1_is_rx_ready	;wreg free
  4750  00377E  503D               	movf	btemp,w,c
  4751  003780  B4D8               	btfsc	status,2,c
  4752  003782  D150               	goto	l9372
  4753                           
  4754                           ;gemsecs.c: 254:     rxData = UART1_Read();
  4755  003784  EC88  F033         	call	_UART1_Read	;wreg free
  4756                           
  4757                           ;stkvar	_rxData @ sp[(-1)+0]
  4758  003788  0EFF               	movlw	-1
  4759  00378A  0060  F0F7  FFE3   	movff	btemp,plusw1
  4760                           
  4761                           ; BSR set to: 57
  4762                           ;gemsecs.c: 255:     if (rxData_l == 0) {
  4763  003790  502E               	movf	r_protocol@rxData_l,w,c
  4764  003792  A4D8               	btfss	status,2,c
  4765  003794  D01C               	goto	l9282
  4766                           
  4767                           ; BSR set to: 57
  4768                           ;gemsecs.c: 256:      r_block.length = rxData;
  4769                           ;stkvar	_rxData @ sp[(-1)+0]
  4770  003796  0EFF               	movlw	-1
  4771  003798  006F FF8C  F0D0    	movff	plusw1,_r_block+12
  4772                           
  4773                           ; BSR set to: 57
  4774                           ;gemsecs.c: 257:      run_checksum(0, 1);
  4775  00379E  0E01               	movlw	1
  4776  0037A0  6EE6               	movwf	postinc1,c
  4777  0037A2  0E00               	movlw	0
  4778  0037A4  6EE6               	movwf	postinc1,c
  4779  0037A6  EC92  F034         	call	_run_checksum	;wreg free
  4780                           
  4781                           ;gemsecs.c: 258:      rxData_l++;
  4782  0037AA  2A2E               	incf	r_protocol@rxData_l,f,c
  4783                           
  4784                           ;gemsecs.c: 259:      b_block[sizeof(header254) - rxData_l] = rxData;
  4785                           ;stkvar	_rxData @ sp[(-1)+0]
  4786  0037AC  502E               	movf	r_protocol@rxData_l,w,c
  4787  0037AE  5C23               	subwf	r_protocol@b_block,w,c
  4788  0037B0  6E47               	movwf	btemp+10,c
  4789  0037B2  0E00               	movlw	0
  4790  0037B4  5824               	subwfb	r_protocol@b_block+1,w,c
  4791  0037B6  6E48               	movwf	btemp+11,c
  4792  0037B8  0E01               	movlw	1
  4793  0037BA  2447               	addwf	btemp+10,w,c
  4794  0037BC  6ED9               	movwf	fsr2l,c
  4795  0037BE  0E01               	movlw	1
  4796  0037C0  2048               	addwfc	btemp+11,w,c
  4797  0037C2  6EDA               	movwf	fsr2h,c
  4798  0037C4  0EFF               	movlw	-1
  4799  0037C6  006F FF8F FFDF     	movff	plusw1,indf2
  4800                           
  4801                           ;gemsecs.c: 260:     } else {
  4802  0037CC  D12B               	goto	l9372
  4803  0037CE                     l9282:
  4804                           
  4805                           ; BSR set to: 57
  4806                           ;gemsecs.c: 264:      if (rxData_l <= sizeof(block10))
  4807  0037CE  0E0B               	movlw	11
  4808  0037D0  602E               	cpfslt	r_protocol@rxData_l,c
  4809  0037D2  D00C               	goto	l9286
  4810                           
  4811                           ; BSR set to: 57
  4812                           ;gemsecs.c: 265:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  4813                           ;stkvar	_rxData @ sp[(-1)+0]
  4814  0037D4  502E               	movf	r_protocol@rxData_l,w,c
  4815  0037D6  0820               	sublw	low (_H10+25)
  4816  0037D8  6ED9               	movwf	fsr2l,c
  4817  0037DA  0E00               	movlw	0
  4818  0037DC  A0D8               	btfss	status,0,c
  4819  0037DE  2AE8               	incf	wreg,f,c
  4820  0037E0  0801               	sublw	high (_H10+25)
  4821  0037E2  6EDA               	movwf	fsr2h,c
  4822  0037E4  0EFF               	movlw	-1
  4823  0037E6  006F FF8F FFDF     	movff	plusw1,indf2
  4824  0037EC                     l9286:
  4825                           
  4826                           ; BSR set to: 57
  4827                           ;gemsecs.c: 267:      if (rxData_l == sizeof(block10) + 1)
  4828  0037EC  0E0B               	movlw	11
  4829  0037EE  182E               	xorwf	r_protocol@rxData_l,w,c
  4830  0037F0  A4D8               	btfss	status,2,c
  4831  0037F2  D004               	goto	l9290
  4832                           
  4833                           ; BSR set to: 57
  4834                           ;gemsecs.c: 268:       V.ack[2] = rxData;
  4835                           ;stkvar	_rxData @ sp[(-1)+0]
  4836  0037F4  0EFF               	movlw	-1
  4837  0037F6  006F FF8C  F0C1    	movff	plusw1,_V+97	;volatile
  4838  0037FC                     l9290:
  4839                           
  4840                           ; BSR set to: 57
  4841                           ;gemsecs.c: 269:      if (rxData_l == sizeof(block10) + 2)
  4842  0037FC  0E0C               	movlw	12
  4843  0037FE  182E               	xorwf	r_protocol@rxData_l,w,c
  4844  003800  A4D8               	btfss	status,2,c
  4845  003802  D004               	goto	l9294
  4846                           
  4847                           ; BSR set to: 57
  4848                           ;gemsecs.c: 270:       V.ack[1] = rxData;
  4849                           ;stkvar	_rxData @ sp[(-1)+0]
  4850  003804  0EFF               	movlw	-1
  4851  003806  006F FF8C  F0C0    	movff	plusw1,_V+96	;volatile
  4852  00380C                     l9294:
  4853                           
  4854                           ; BSR set to: 57
  4855                           ;gemsecs.c: 271:      if (rxData_l == sizeof(block10) + 3)
  4856  00380C  0E0D               	movlw	13
  4857  00380E  182E               	xorwf	r_protocol@rxData_l,w,c
  4858  003810  A4D8               	btfss	status,2,c
  4859  003812  D004               	goto	l9298
  4860                           
  4861                           ; BSR set to: 57
  4862                           ;gemsecs.c: 272:       V.ack[0] = rxData;
  4863                           ;stkvar	_rxData @ sp[(-1)+0]
  4864  003814  0EFF               	movlw	-1
  4865  003816  006F FF8C  F0BF    	movff	plusw1,_V+95	;volatile
  4866  00381C                     l9298:
  4867                           
  4868                           ; BSR set to: 57
  4869                           ;gemsecs.c: 274:      if (rxData_l <= r_block.length)
  4870  00381C  502E               	movf	r_protocol@rxData_l,w,c
  4871  00381E  0100               	movlb	0	; () banked
  4872  003820  5DD0               	subwf	(_r_block+12)& (0+255),w,b
  4873  003822  A0D8               	btfss	status,0,c
  4874  003824  D00D               	goto	l9302
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;gemsecs.c: 275:       V.r_checksum = run_checksum(rxData, 0);
  4878  003826  0E00               	movlw	0
  4879  003828  6EE6               	movwf	postinc1,c
  4880                           
  4881                           ;stkvar	_rxData @ sp[(-2)+0]
  4882  00382A  0EFE               	movlw	-2
  4883  00382C  50E3               	movf	plusw1,w,c
  4884  00382E  6EE6               	movwf	postinc1,c
  4885  003830  EC92  F034         	call	_run_checksum	;wreg free
  4886  003834  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  4887  00383A  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  4888  003840                     l9302:
  4889                           
  4890                           ;gemsecs.c: 277:      if (rxData_l == r_block.length + 1)
  4891  003840  502E               	movf	r_protocol@rxData_l,w,c
  4892  003842  6E47               	movwf	btemp+10,c
  4893  003844  6A48               	clrf	btemp+11,c
  4894  003846  0100               	movlb	0	; () banked
  4895  003848  51D0               	movf	(_r_block+12)& (0+255),w,b
  4896  00384A  6E45               	movwf	btemp+8,c
  4897  00384C  6A46               	clrf	btemp+9,c
  4898  00384E  0E01               	movlw	1
  4899  003850  2645               	addwf	btemp+8,f,c
  4900  003852  0E00               	movlw	0
  4901  003854  2246               	addwfc	btemp+9,f,c
  4902  003856  5047               	movf	btemp+10,w,c
  4903  003858  1845               	xorwf	btemp+8,w,c
  4904  00385A  E109               	bnz	l9306
  4905  00385C  5048               	movf	btemp+11,w,c
  4906  00385E  1846               	xorwf	btemp+9,w,c
  4907  003860  A4D8               	btfss	status,2,c
  4908  003862  D005               	goto	l9306
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;gemsecs.c: 278:       H10[1].checksum = (uint16_t) rxData << 8;
  4912                           ;stkvar	_rxData @ sp[(-1)+0]
  4913  003864  0EFF               	movlw	-1
  4914  003866  50E3               	movf	plusw1,w,c
  4915  003868  0101               	movlb	1	; () banked
  4916  00386A  6F15               	movwf	(_H10+14)& (0+255),b
  4917  00386C  6B14               	clrf	(_H10+13)& (0+255),b
  4918  00386E                     l9306:
  4919                           
  4920                           ;gemsecs.c: 279:      if (rxData_l == r_block.length + 2)
  4921  00386E  502E               	movf	r_protocol@rxData_l,w,c
  4922  003870  6E47               	movwf	btemp+10,c
  4923  003872  6A48               	clrf	btemp+11,c
  4924  003874  0100               	movlb	0	; () banked
  4925  003876  51D0               	movf	(_r_block+12)& (0+255),w,b
  4926  003878  6E45               	movwf	btemp+8,c
  4927  00387A  6A46               	clrf	btemp+9,c
  4928  00387C  0E02               	movlw	2
  4929  00387E  2645               	addwf	btemp+8,f,c
  4930  003880  0E00               	movlw	0
  4931  003882  2246               	addwfc	btemp+9,f,c
  4932  003884  5047               	movf	btemp+10,w,c
  4933  003886  1845               	xorwf	btemp+8,w,c
  4934  003888  E10A               	bnz	l9310
  4935  00388A  5048               	movf	btemp+11,w,c
  4936  00388C  1846               	xorwf	btemp+9,w,c
  4937  00388E  A4D8               	btfss	status,2,c
  4938  003890  D006               	goto	l9310
  4939                           
  4940                           ; BSR set to: 0
  4941                           ;gemsecs.c: 280:       H10[1].checksum += rxData;
  4942                           ;stkvar	_rxData @ sp[(-1)+0]
  4943  003892  0EFF               	movlw	-1
  4944  003894  50E3               	movf	plusw1,w,c
  4945  003896  0101               	movlb	1	; () banked
  4946  003898  2714               	addwf	(_H10+13)& (0+255),f,b
  4947  00389A  0E00               	movlw	0
  4948  00389C  2315               	addwfc	(_H10+14)& (0+255),f,b
  4949  00389E                     l9310:
  4950                           
  4951                           ;gemsecs.c: 282:      rxData_l++;
  4952  00389E  2A2E               	incf	r_protocol@rxData_l,f,c
  4953                           
  4954                           ;gemsecs.c: 283:      b_block[sizeof(header254) - rxData_l] = rxData;
  4955                           ;stkvar	_rxData @ sp[(-1)+0]
  4956  0038A0  502E               	movf	r_protocol@rxData_l,w,c
  4957  0038A2  5C23               	subwf	r_protocol@b_block,w,c
  4958  0038A4  6E47               	movwf	btemp+10,c
  4959  0038A6  0E00               	movlw	0
  4960  0038A8  5824               	subwfb	r_protocol@b_block+1,w,c
  4961  0038AA  6E48               	movwf	btemp+11,c
  4962  0038AC  0E01               	movlw	1
  4963  0038AE  2447               	addwf	btemp+10,w,c
  4964  0038B0  6ED9               	movwf	fsr2l,c
  4965  0038B2  0E01               	movlw	1
  4966  0038B4  2048               	addwfc	btemp+11,w,c
  4967  0038B6  6EDA               	movwf	fsr2h,c
  4968  0038B8  0EFF               	movlw	-1
  4969  0038BA  006F FF8F FFDF     	movff	plusw1,indf2
  4970                           
  4971                           ;gemsecs.c: 284:      if (rxData_l > (r_block.length + 2)) {
  4972  0038C0  502E               	movf	r_protocol@rxData_l,w,c
  4973  0038C2  6E47               	movwf	btemp+10,c
  4974  0038C4  6A48               	clrf	btemp+11,c
  4975  0038C6  0100               	movlb	0	; () banked
  4976  0038C8  51D0               	movf	(_r_block+12)& (0+255),w,b
  4977  0038CA  6E45               	movwf	btemp+8,c
  4978  0038CC  6A46               	clrf	btemp+9,c
  4979  0038CE  0E02               	movlw	2
  4980  0038D0  2645               	addwf	btemp+8,f,c
  4981  0038D2  0E00               	movlw	0
  4982  0038D4  2246               	addwfc	btemp+9,f,c
  4983  0038D6  5047               	movf	btemp+10,w,c
  4984  0038D8  5C45               	subwf	btemp+8,w,c
  4985  0038DA  5046               	movf	btemp+9,w,c
  4986  0038DC  0A80               	xorlw	128
  4987  0038DE  6E3D               	movwf	btemp,c
  4988  0038E0  5048               	movf	btemp+11,w,c
  4989  0038E2  0A80               	xorlw	128
  4990  0038E4  583D               	subwfb	btemp,w,c
  4991  0038E6  B0D8               	btfsc	status,0,c
  4992  0038E8  D09D               	goto	l9372
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;gemsecs.c: 285:       if (V.r_checksum == H10[1].checksum) {
  4996  0038EA  0101               	movlb	1	; () banked
  4997  0038EC  5114               	movf	(_H10+13)& (0+255),w,b
  4998  0038EE  0100               	movlb	0	; () banked
  4999  0038F0  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5000  0038F2  E10E               	bnz	l9322
  5001  0038F4  0101               	movlb	1	; () banked
  5002  0038F6  5115               	movf	(_H10+14)& (0+255),w,b
  5003  0038F8  0100               	movlb	0	; () banked
  5004  0038FA  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5005  0038FC  A4D8               	btfss	status,2,c
  5006  0038FE  D008               	goto	l9322
  5007                           
  5008                           ; BSR set to: 0
  5009                           ;gemsecs.c: 286:        *r_link = LINK_STATE_ACK;
  5010                           ;stkvar	_r_link @ sp[(-1)+-1]
  5011  003900  0EFE               	movlw	-2
  5012  003902  50E3               	movf	plusw1,w,c
  5013  003904  6ED9               	movwf	fsr2l,c
  5014  003906  6ADA               	clrf	fsr2h,c
  5015  003908  0E03               	movlw	3
  5016  00390A  D052               	goto	L10
  5017  00390C                     l9320:
  5018  00390C  EC88  F033         	call	_UART1_Read	;wreg free
  5019  003910                     l9322:
  5020                           
  5021                           ;gemsecs.c: 288:        while (UART1_is_rx_ready())
  5022  003910  EC7F  F037         	call	_UART1_is_rx_ready	;wreg free
  5023  003914  503D               	movf	btemp,w,c
  5024  003916  A4D8               	btfss	status,2,c
  5025  003918  D7F9               	goto	l9320
  5026                           
  5027                           ;gemsecs.c: 290:        WaitMs(500);
  5028  00391A  0EF4               	movlw	244
  5029  00391C  6EE6               	movwf	postinc1,c
  5030  00391E  0E01               	movlw	1
  5031  003920  6EE6               	movwf	postinc1,c
  5032  003922  ECC3  F033         	call	_WaitMs	;wreg free
  5033                           
  5034                           ;gemsecs.c: 291:        V.error = LINK_ERROR_CHECKSUM;
  5035  003926  0E0F               	movlw	15
  5036  003928  0100               	movlb	0	; () banked
  5037  00392A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5038                           
  5039                           ; BSR set to: 0
  5040                           ;gemsecs.c: 292:        V.checksum_error++;
  5041  00392C  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5042  00392E  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5043                           
  5044                           ; BSR set to: 0
  5045                           ;gemsecs.c: 293:        V.failed_receive = 2;
  5046  003930  51BE               	movf	(_V+94)& (0+255),w,b	;volatile
  5047  003932  0BF0               	andlw	-16
  5048  003934  0902               	iorlw	2
  5049  003936  D714               	goto	L11
  5050  003938                     l9334:
  5051                           
  5052                           ;gemsecs.c: 302:   V.stream = H10[1].block.block.stream;
  5053  003938  0101               	movlb	1	; () banked
  5054  00393A  511D               	movf	(_H10+22)& (0+255),w,b
  5055  00393C  0B7F               	andlw	127
  5056  00393E  0100               	movlb	0	; () banked
  5057  003940  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  5058                           
  5059                           ; BSR set to: 0
  5060                           ;gemsecs.c: 303:   V.function = H10[1].block.block.function;
  5061  003942  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  5062                           
  5063                           ; BSR set to: 0
  5064                           ;gemsecs.c: 304:   V.systemb = H10[1].block.block.systemb;
  5065  003946  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  5066  00394A  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  5067  00394E  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  5068  003952  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  5069                           
  5070                           ; BSR set to: 0
  5071                           ;gemsecs.c: 305:   V.rbit = H10[1].block.block.rbit;
  5072  003956  0101               	movlb	1	; () banked
  5073  003958  AF1F               	btfss	(_H10+24)& (0+255),7,b
  5074  00395A  D003               	bra	u6095
  5075  00395C  0100               	movlb	0	; () banked
  5076  00395E  81BD               	bsf	(_V+93)& (0+255),0,b	;volatile
  5077  003960  D002               	bra	u6097
  5078  003962                     u6095:
  5079  003962  0100               	movlb	0	; () banked
  5080  003964  91BD               	bcf	(_V+93)& (0+255),0,b	;volatile
  5081  003966                     u6097:
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;gemsecs.c: 306:   V.wbit = H10[1].block.block.wbit;
  5085  003966  0101               	movlb	1	; () banked
  5086  003968  AF1D               	btfss	(_H10+22)& (0+255),7,b
  5087  00396A  D003               	bra	u6105
  5088  00396C  0100               	movlb	0	; () banked
  5089  00396E  83BD               	bsf	(_V+93)& (0+255),1,b	;volatile
  5090  003970  D002               	bra	u6107
  5091  003972                     u6105:
  5092  003972  0100               	movlb	0	; () banked
  5093  003974  93BD               	bcf	(_V+93)& (0+255),1,b	;volatile
  5094  003976                     u6107:
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;gemsecs.c: 307:   V.ebit = H10[1].block.block.ebit;
  5098  003976  0101               	movlb	1	; () banked
  5099  003978  AF1B               	btfss	(_H10+20)& (0+255),7,b
  5100  00397A  D003               	bra	u6115
  5101  00397C  0100               	movlb	0	; () banked
  5102  00397E  85BD               	bsf	(_V+93)& (0+255),2,b	;volatile
  5103  003980  D002               	bra	u6117
  5104  003982                     u6115:
  5105  003982  0100               	movlb	0	; () banked
  5106  003984  95BD               	bcf	(_V+93)& (0+255),2,b	;volatile
  5107  003986                     u6117:
  5108                           
  5109                           ; BSR set to: 0
  5110                           ;gemsecs.c: 308:   V.g_state = secs_gem_state(V.stream, V.function);
  5111  003986  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  5112  003988  6EE6               	movwf	postinc1,c
  5113  00398A  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  5114  00398C  6EE6               	movwf	postinc1,c
  5115  00398E  EC6B  F02C         	call	_secs_gem_state	;wreg free
  5116  003992  503D               	movf	btemp,w,c
  5117  003994  0100               	movlb	0	; () banked
  5118  003996  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;gemsecs.c: 309:   UART1_Write(0x06);
  5122  003998  0E06               	movlw	6
  5123  00399A  6EE6               	movwf	postinc1,c
  5124  00399C  EC4A  F033         	call	_UART1_Write	;wreg free
  5125                           
  5126                           ; BSR set to: 57
  5127                           ;gemsecs.c: 310:   V.failed_receive = 0;
  5128  0039A0  0EF0               	movlw	-16
  5129  0039A2  0100               	movlb	0	; () banked
  5130  0039A4  17BE               	andwf	(_V+94)& (0+255),f,b	;volatile
  5131                           
  5132                           ; BSR set to: 0
  5133                           ;gemsecs.c: 311:   *r_link = LINK_STATE_DONE;
  5134                           ;stkvar	_r_link @ sp[(-1)+-1]
  5135  0039A6  0EFE               	movlw	-2
  5136  0039A8  50E3               	movf	plusw1,w,c
  5137  0039AA  6ED9               	movwf	fsr2l,c
  5138  0039AC  6ADA               	clrf	fsr2h,c
  5139  0039AE  0E04               	movlw	4
  5140  0039B0                     L10:
  5141  0039B0  6EDF               	movwf	indf2,c
  5142                           
  5143                           ;gemsecs.c: 312:   break;
  5144  0039B2  D038               	goto	l9372
  5145  0039B4                     l9354:
  5146                           
  5147                           ;gemsecs.c: 314:   UART1_Write(0x15);
  5148  0039B4  0E15               	movlw	21
  5149  0039B6  6EE6               	movwf	postinc1,c
  5150  0039B8  EC4A  F033         	call	_UART1_Write	;wreg free
  5151                           
  5152                           ; BSR set to: 57
  5153                           ;gemsecs.c: 315:   *r_link = LINK_STATE_ERROR;
  5154                           ;stkvar	_r_link @ sp[(-1)+-1]
  5155  0039BC  0EFE               	movlw	-2
  5156  0039BE  50E3               	movf	plusw1,w,c
  5157  0039C0  6ED9               	movwf	fsr2l,c
  5158  0039C2  6ADA               	clrf	fsr2h,c
  5159  0039C4  0E06               	movlw	6
  5160  0039C6  6EDF               	movwf	indf2,c
  5161                           
  5162                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  5163  0039C8  D002               	goto	l9360
  5164  0039CA                     l9358:
  5165                           
  5166                           ; BSR set to: 57
  5167                           ;gemsecs.c: 317:    UART1_Read();
  5168  0039CA  EC88  F033         	call	_UART1_Read	;wreg free
  5169  0039CE                     l9360:
  5170                           
  5171                           ; BSR set to: 57
  5172                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  5173  0039CE  5037               	movf	_uart1RxCount,w,c	;volatile
  5174  0039D0  A4D8               	btfss	status,2,c
  5175  0039D2  D7FB               	goto	l9358
  5176                           
  5177                           ; BSR set to: 57
  5178                           ;gemsecs.c: 319:   retry = 3;
  5179  0039D4  0E03               	movlw	3
  5180  0039D6  6E5D               	movwf	r_protocol@retry,c
  5181                           
  5182                           ;gemsecs.c: 320:   break;
  5183  0039D8  D025               	goto	l9372
  5184  0039DA                     l9364:
  5185                           
  5186                           ;gemsecs.c: 324:   V.failed_receive = 0;
  5187  0039DA  0EF0               	movlw	-16
  5188  0039DC  0100               	movlb	0	; () banked
  5189  0039DE  17BE               	andwf	(_V+94)& (0+255),f,b	;volatile
  5190  0039E0  D6C6               	goto	l9266
  5191  0039E2                     l9370:
  5192                           
  5193                           ;stkvar	_r_link @ sp[(-1)+-1]
  5194  0039E2  0EFE               	movlw	-2
  5195  0039E4  50E3               	movf	plusw1,w,c
  5196  0039E6  6ED9               	movwf	fsr2l,c
  5197  0039E8  6ADA               	clrf	fsr2h,c
  5198  0039EA  50DF               	movf	indf2,w,c
  5199  0039EC  6E47               	movwf	btemp+10,c
  5200  0039EE  6A48               	clrf	btemp+11,c
  5201                           
  5202                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5203                           ; Switch size 1, requested type "simple"
  5204                           ; Number of cases is 1, Range of values is 0 to 0
  5205                           ; switch strategies available:
  5206                           ; Name         Instructions Cycles
  5207                           ; simple_byte            4     3 (average)
  5208                           ;	Chosen strategy is simple_byte
  5209  0039F0  5048               	movf	btemp+11,w,c
  5210  0039F2  0A00               	xorlw	0	; case 0
  5211  0039F4  A4D8               	btfss	status,2,c
  5212  0039F6  D6BB               	goto	l9266
  5213                           
  5214                           ; Switch size 1, requested type "simple"
  5215                           ; Number of cases is 7, Range of values is 0 to 6
  5216                           ; switch strategies available:
  5217                           ; Name         Instructions Cycles
  5218                           ; simple_byte           22    12 (average)
  5219                           ;	Chosen strategy is simple_byte
  5220  0039F8  5047               	movf	btemp+10,w,c
  5221  0039FA  0A00               	xorlw	0	; case 0
  5222  0039FC  B4D8               	btfsc	status,2,c
  5223  0039FE  D64F               	goto	l9232
  5224  003A00  0A01               	xorlw	1	; case 1
  5225  003A02  B4D8               	btfsc	status,2,c
  5226  003A04  D668               	goto	l1661
  5227  003A06  0A03               	xorlw	3	; case 2
  5228  003A08  B4D8               	btfsc	status,2,c
  5229  003A0A  D697               	goto	l9256
  5230  003A0C  0A01               	xorlw	1	; case 3
  5231  003A0E  B4D8               	btfsc	status,2,c
  5232  003A10  D793               	goto	l9334
  5233  003A12  0A07               	xorlw	7	; case 4
  5234  003A14  B4D8               	btfsc	status,2,c
  5235  003A16  D7E1               	goto	l9364
  5236  003A18  0A01               	xorlw	1	; case 5
  5237  003A1A  B4D8               	btfsc	status,2,c
  5238  003A1C  D7CB               	goto	l9354
  5239  003A1E  0A03               	xorlw	3	; case 6
  5240  003A20  A4D8               	btfss	status,2,c
  5241  003A22  D6A5               	goto	l9266
  5242  003A24                     l9372:
  5243                           
  5244                           ;gemsecs.c: 331:  return *r_link;
  5245                           ;stkvar	_r_link @ sp[(-1)+-1]
  5246  003A24  0EFE               	movlw	-2
  5247  003A26  50E3               	movf	plusw1,w,c
  5248  003A28  6ED9               	movwf	fsr2l,c
  5249  003A2A  6ADA               	clrf	fsr2h,c
  5250  003A2C  50DF               	movf	indf2,w,c
  5251  003A2E  6E3D               	movwf	btemp,c
  5252                           
  5253                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5254  003A30  52E5               	movf	postdec1,f,c
  5255  003A32  52E5               	movf	postdec1,f,c
  5256  003A34  0012               	return		;funcret
  5257  003A36                     __end_of_r_protocol:
  5258                           	opt callstack 0
  5259                           
  5260 ;; *************** function _m_protocol *****************
  5261 ;; Defined at:
  5262 ;;		line 47 in file "gemsecs.c"
  5263 ;; Parameters:    Size  Location     Type
  5264 ;;  m_link          1  [STACK] PTR enum E16173
  5265 ;;		 -> V(100), 
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;  rxData          1  [STACK] unsigned char 
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1  [STACK] enum E16913
  5270 ;; Registers used:
  5271 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, prodl, prodh
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5281 ;;Total ram usage:        0 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; Hardware stack levels required when called:    7
  5284 ;; This function calls:
  5285 ;;		_StartTimer
  5286 ;;		_TimerDone
  5287 ;;		_UART1_Read
  5288 ;;		_UART1_is_rx_ready
  5289 ;;		_UART2_Read
  5290 ;;		_UART2_is_rx_ready
  5291 ;;		_WaitMs
  5292 ;;		_rand
  5293 ;;		_run_checksum
  5294 ;;		_secs_gem_state
  5295 ;;		_secs_send
  5296 ;; This function is called by:
  5297 ;;		_main
  5298 ;; This function uses a reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text6
  5302  002CF4                     __ptext6:
  5303                           	opt callstack 0
  5304  002CF4                     _m_protocol:
  5305                           	opt callstack 0
  5306                           
  5307                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5308  002CF4  52E6               	movf	postinc1,f,c
  5309                           
  5310                           ;gemsecs.c: 47: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 48: {;gemsecs.c: 
      +                          49:  uint8_t rxData;;gemsecs.c: 50:  static uint8_t rxData_l = 0;;gemsecs.c: 52:  switch
      +                           (*m_link) {
  5311                           
  5312                           ;incstack = 0
  5313  002CF6  D267               	goto	l9702
  5314  002CF8                     l9506:
  5315                           
  5316                           ;gemsecs.c: 55:   WaitMs(50);
  5317  002CF8  0E32               	movlw	50
  5318  002CFA  6EE6               	movwf	postinc1,c
  5319  002CFC  0E00               	movlw	0
  5320  002CFE  6EE6               	movwf	postinc1,c
  5321  002D00  ECC3  F033         	call	_WaitMs	;wreg free
  5322                           
  5323                           ;gemsecs.c: 57:   if (UART1_is_rx_ready()) {
  5324  002D04  EC7F  F037         	call	_UART1_is_rx_ready	;wreg free
  5325  002D08  503D               	movf	btemp,w,c
  5326  002D0A  B4D8               	btfsc	status,2,c
  5327  002D0C  D022               	goto	l9522
  5328                           
  5329                           ;gemsecs.c: 58:    rxData = UART1_Read();
  5330  002D0E  EC88  F033         	call	_UART1_Read	;wreg free
  5331                           
  5332                           ;stkvar	_rxData @ sp[(-1)+0]
  5333  002D12  0EFF               	movlw	-1
  5334  002D14  0060  F0F7  FFE3   	movff	btemp,plusw1
  5335                           
  5336                           ; BSR set to: 57
  5337                           ;gemsecs.c: 59:    if (rxData == 0x05) {
  5338                           ;stkvar	_rxData @ sp[(-1)+0]
  5339  002D1A  0EFF               	movlw	-1
  5340  002D1C  006F FF8C  F03D    	movff	plusw1,btemp
  5341  002D22  0E05               	movlw	5
  5342  002D24  183D               	xorwf	btemp,w,c
  5343  002D26  A4D8               	btfss	status,2,c
  5344  002D28  D014               	goto	l9522
  5345                           
  5346                           ; BSR set to: 57
  5347                           ;gemsecs.c: 60:     V.uart = 1;
  5348  002D2A  0E01               	movlw	1
  5349  002D2C  0100               	movlb	0	; () banked
  5350  002D2E  6FC2               	movwf	(_V+98)& (0+255),b	;volatile
  5351                           
  5352                           ; BSR set to: 0
  5353                           ;gemsecs.c: 61:     StartTimer(TMR_T2, 2000);
  5354  002D30  0ED0               	movlw	208
  5355  002D32  6EE6               	movwf	postinc1,c
  5356  002D34  0E07               	movlw	7
  5357  002D36  6EE6               	movwf	postinc1,c
  5358  002D38  0E02               	movlw	2
  5359  002D3A  6EE6               	movwf	postinc1,c
  5360  002D3C  ECEB  F032         	call	_StartTimer	;wreg free
  5361                           
  5362                           ;gemsecs.c: 62:     V.error = LINK_ERROR_NONE;
  5363  002D40  0E0A               	movlw	10
  5364  002D42  0100               	movlb	0	; () banked
  5365  002D44  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;gemsecs.c: 63:     *m_link = LINK_STATE_ENQ;
  5369                           ;stkvar	_m_link @ sp[(-1)+-1]
  5370  002D46  0EFE               	movlw	-2
  5371  002D48  50E3               	movf	plusw1,w,c
  5372  002D4A  6ED9               	movwf	fsr2l,c
  5373  002D4C  6ADA               	clrf	fsr2h,c
  5374  002D4E  0E01               	movlw	1
  5375  002D50  6EDF               	movwf	indf2,c
  5376  002D52                     l9522:
  5377                           
  5378                           ;gemsecs.c: 66:   if (UART2_is_rx_ready()) {
  5379  002D52  EC7B  F037         	call	_UART2_is_rx_ready	;wreg free
  5380  002D56  503D               	movf	btemp,w,c
  5381  002D58  B4D8               	btfsc	status,2,c
  5382  002D5A  D256               	goto	l9704
  5383                           
  5384                           ;gemsecs.c: 67:    rxData = UART2_Read();
  5385  002D5C  EC69  F033         	call	_UART2_Read	;wreg free
  5386                           
  5387                           ;stkvar	_rxData @ sp[(-1)+0]
  5388  002D60  0EFF               	movlw	-1
  5389  002D62  0060  F0F7  FFE3   	movff	btemp,plusw1
  5390                           
  5391                           ; BSR set to: 57
  5392                           ;gemsecs.c: 68:    if (rxData == 0x05) {
  5393                           ;stkvar	_rxData @ sp[(-1)+0]
  5394  002D68  0EFF               	movlw	-1
  5395  002D6A  006F FF8C  F03D    	movff	plusw1,btemp
  5396  002D70  0E05               	movlw	5
  5397  002D72  183D               	xorwf	btemp,w,c
  5398  002D74  A4D8               	btfss	status,2,c
  5399  002D76  D248               	goto	l9704
  5400                           
  5401                           ; BSR set to: 57
  5402                           ;gemsecs.c: 69:     V.uart = 2;
  5403  002D78  0E02               	movlw	2
  5404  002D7A  0100               	movlb	0	; () banked
  5405  002D7C  6FC2               	movwf	(_V+98)& (0+255),b	;volatile
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;gemsecs.c: 70:     StartTimer(TMR_T2, 2000);
  5409  002D7E  0ED0               	movlw	208
  5410  002D80  6EE6               	movwf	postinc1,c
  5411  002D82  0E07               	movlw	7
  5412  002D84  6EE6               	movwf	postinc1,c
  5413  002D86  0E02               	movlw	2
  5414  002D88  6EE6               	movwf	postinc1,c
  5415  002D8A  ECEB  F032         	call	_StartTimer	;wreg free
  5416                           
  5417                           ;gemsecs.c: 71:     V.error = LINK_ERROR_NONE;
  5418  002D8E  0E0A               	movlw	10
  5419  002D90  0100               	movlb	0	; () banked
  5420  002D92  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5421                           
  5422                           ; BSR set to: 0
  5423                           ;gemsecs.c: 72:     *m_link = LINK_STATE_ENQ;
  5424                           ;stkvar	_m_link @ sp[(-1)+-1]
  5425  002D94  0EFE               	movlw	-2
  5426  002D96  50E3               	movf	plusw1,w,c
  5427  002D98  6ED9               	movwf	fsr2l,c
  5428  002D9A  6ADA               	clrf	fsr2h,c
  5429  002D9C  0E01               	movlw	1
  5430  002D9E  D211               	goto	L17
  5431  002DA0                     l1602:
  5432                           
  5433                           ;gemsecs.c: 77:   rxData_l = 0;
  5434  002DA0  6A2F               	clrf	m_protocol@rxData_l,c
  5435                           
  5436                           ;gemsecs.c: 79:   WaitMs(50);
  5437  002DA2  0E32               	movlw	50
  5438  002DA4  6EE6               	movwf	postinc1,c
  5439  002DA6  0E00               	movlw	0
  5440  002DA8  6EE6               	movwf	postinc1,c
  5441  002DAA  ECC3  F033         	call	_WaitMs	;wreg free
  5442                           
  5443                           ;gemsecs.c: 80:   if (V.uart == 1)
  5444  002DAE  0100               	movlb	0	; () banked
  5445  002DB0  05C2               	decf	(_V+98)& (0+255),w,b	;volatile
  5446  002DB2  A4D8               	btfss	status,2,c
  5447  002DB4  D016               	goto	l9544
  5448                           
  5449                           ; BSR set to: 0
  5450                           ;gemsecs.c: 82:    if (rand() < 31000)
  5451  002DB6  ECC4  F028         	call	_rand	;wreg free
  5452  002DBA  BE3E               	btfsc	btemp+1,7,c
  5453  002DBC  D006               	goto	u6340
  5454  002DBE  0E18               	movlw	24
  5455  002DC0  5C3D               	subwf	btemp,w,c
  5456  002DC2  0E79               	movlw	121
  5457  002DC4  583E               	subwfb	btemp+1,w,c
  5458  002DC6  B0D8               	btfsc	status,0,c
  5459  002DC8  D00C               	goto	l9544
  5460  002DCA                     u6340:
  5461                           
  5462                           ; BSR set to: 0
  5463                           ;gemsecs.c: 84:     secs_send((uint8_t*) & H27[0], sizeof(header27), 1, V.uart);
  5464  002DCA  51C2               	movf	(_V+98)& (0+255),w,b	;volatile
  5465  002DCC  6EE6               	movwf	postinc1,c
  5466  002DCE  0E01               	movlw	1
  5467  002DD0  6EE6               	movwf	postinc1,c
  5468  002DD2  0E1E               	movlw	30
  5469  002DD4  6EE6               	movwf	postinc1,c
  5470  002DD6  0EB0               	movlw	low _H27
  5471  002DD8  6EE6               	movwf	postinc1,c
  5472  002DDA  0E02               	movlw	high _H27
  5473  002DDC  6EE6               	movwf	postinc1,c
  5474  002DDE  ECE3  F023         	call	_secs_send	;wreg free
  5475  002DE2                     l9544:
  5476                           
  5477                           ;gemsecs.c: 85:   if (V.uart == 2)
  5478  002DE2  0E02               	movlw	2
  5479  002DE4  0100               	movlb	0	; () banked
  5480  002DE6  19C2               	xorwf	(_V+98)& (0+255),w,b	;volatile
  5481  002DE8  A4D8               	btfss	status,2,c
  5482  002DEA  D016               	goto	l9550
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;gemsecs.c: 87:    if (rand() < 31000)
  5486  002DEC  ECC4  F028         	call	_rand	;wreg free
  5487  002DF0  BE3E               	btfsc	btemp+1,7,c
  5488  002DF2  D006               	goto	u6360
  5489  002DF4  0E18               	movlw	24
  5490  002DF6  5C3D               	subwf	btemp,w,c
  5491  002DF8  0E79               	movlw	121
  5492  002DFA  583E               	subwfb	btemp+1,w,c
  5493  002DFC  B0D8               	btfsc	status,0,c
  5494  002DFE  D00C               	goto	l9550
  5495  002E00                     u6360:
  5496                           
  5497                           ; BSR set to: 0
  5498                           ;gemsecs.c: 89:     secs_send((uint8_t*) & H10[0], sizeof(header10), 1, V.uart);
  5499  002E00  51C2               	movf	(_V+98)& (0+255),w,b	;volatile
  5500  002E02  6EE6               	movwf	postinc1,c
  5501  002E04  0E01               	movlw	1
  5502  002E06  6EE6               	movwf	postinc1,c
  5503  002E08  0E0D               	movlw	13
  5504  002E0A  6EE6               	movwf	postinc1,c
  5505  002E0C  0E07               	movlw	low _H10
  5506  002E0E  6EE6               	movwf	postinc1,c
  5507  002E10  0E01               	movlw	high _H10
  5508  002E12  6EE6               	movwf	postinc1,c
  5509  002E14  ECE3  F023         	call	_secs_send	;wreg free
  5510  002E18                     l9550:
  5511                           
  5512                           ;gemsecs.c: 91:   V.error = LINK_ERROR_NONE;
  5513  002E18  0E0A               	movlw	10
  5514  002E1A  0100               	movlb	0	; () banked
  5515  002E1C  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5516                           
  5517                           ; BSR set to: 0
  5518                           ;gemsecs.c: 92:   *m_link = LINK_STATE_EOT;
  5519                           ;stkvar	_m_link @ sp[(-1)+-1]
  5520  002E1E  0EFE               	movlw	-2
  5521  002E20  50E3               	movf	plusw1,w,c
  5522  002E22  6ED9               	movwf	fsr2l,c
  5523  002E24  6ADA               	clrf	fsr2h,c
  5524  002E26  0E02               	movlw	2
  5525  002E28  6EDF               	movwf	indf2,c
  5526                           
  5527                           ; BSR set to: 0
  5528                           ;gemsecs.c: 93:   StartTimer(TMR_T2, 2000);
  5529  002E2A  0ED0               	movlw	208
  5530  002E2C  6EE6               	movwf	postinc1,c
  5531  002E2E  0E07               	movlw	7
  5532  002E30  6EE6               	movwf	postinc1,c
  5533  002E32  0E02               	movlw	2
  5534  002E34  6EE6               	movwf	postinc1,c
  5535  002E36  ECEB  F032         	call	_StartTimer	;wreg free
  5536                           
  5537                           ;gemsecs.c: 94:   break;
  5538  002E3A  D1E6               	goto	l9704
  5539  002E3C                     l9556:
  5540                           
  5541                           ;gemsecs.c: 96:   if (TimerDone(TMR_T2)) {
  5542  002E3C  0E02               	movlw	2
  5543  002E3E  6EE6               	movwf	postinc1,c
  5544  002E40  ECA6  F034         	call	_TimerDone	;wreg free
  5545  002E44  503D               	movf	btemp,w,c
  5546  002E46  B4D8               	btfsc	status,2,c
  5547  002E48  D00F               	goto	l9566
  5548                           
  5549                           ;gemsecs.c: 97:    V.error = LINK_ERROR_T2;
  5550  002E4A  0E0C               	movlw	12
  5551  002E4C  0100               	movlb	0	; () banked
  5552  002E4E  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;gemsecs.c: 98:    V.timer_error++;
  5556  002E50  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  5557  002E52  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  5558                           
  5559                           ; BSR set to: 0
  5560                           ;gemsecs.c: 99:    V.failed_receive = 2;
  5561  002E54  51BE               	movf	(_V+94)& (0+255),w,b	;volatile
  5562  002E56  0BF0               	andlw	-16
  5563  002E58  0902               	iorlw	2
  5564  002E5A  6FBE               	movwf	(_V+94)& (0+255),b	;volatile
  5565                           
  5566                           ; BSR set to: 0
  5567                           ;gemsecs.c: 100:    *m_link = LINK_STATE_NAK;
  5568                           ;stkvar	_m_link @ sp[(-1)+-1]
  5569  002E5C  0EFE               	movlw	-2
  5570  002E5E  50E3               	movf	plusw1,w,c
  5571  002E60  6ED9               	movwf	fsr2l,c
  5572  002E62  6ADA               	clrf	fsr2h,c
  5573  002E64  0E05               	movlw	5
  5574  002E66  D1AD               	goto	L17
  5575  002E68                     l9566:
  5576                           
  5577                           ;gemsecs.c: 102:    if (UART1_is_rx_ready()) {
  5578  002E68  EC7F  F037         	call	_UART1_is_rx_ready	;wreg free
  5579  002E6C  503D               	movf	btemp,w,c
  5580  002E6E  B4D8               	btfsc	status,2,c
  5581  002E70  D0A8               	goto	l9616
  5582                           
  5583                           ;gemsecs.c: 103:     rxData = UART1_Read();
  5584  002E72  EC88  F033         	call	_UART1_Read	;wreg free
  5585                           
  5586                           ;stkvar	_rxData @ sp[(-1)+0]
  5587  002E76  0EFF               	movlw	-1
  5588  002E78  0060  F0F7  FFE3   	movff	btemp,plusw1
  5589                           
  5590                           ; BSR set to: 57
  5591                           ;gemsecs.c: 104:     if (rxData_l == 0) {
  5592  002E7E  502F               	movf	m_protocol@rxData_l,w,c
  5593  002E80  A4D8               	btfss	status,2,c
  5594  002E82  D00C               	goto	l9578
  5595                           
  5596                           ; BSR set to: 57
  5597                           ;gemsecs.c: 105:      r_block.length = rxData;
  5598                           ;stkvar	_rxData @ sp[(-1)+0]
  5599  002E84  0EFF               	movlw	-1
  5600  002E86  006F FF8C  F0D0    	movff	plusw1,_r_block+12
  5601                           
  5602                           ; BSR set to: 57
  5603                           ;gemsecs.c: 106:      run_checksum(0, 1);
  5604  002E8C  0E01               	movlw	1
  5605  002E8E  6EE6               	movwf	postinc1,c
  5606  002E90  0E00               	movlw	0
  5607  002E92  6EE6               	movwf	postinc1,c
  5608  002E94  EC92  F034         	call	_run_checksum	;wreg free
  5609                           
  5610                           ;gemsecs.c: 107:      rxData_l++;
  5611  002E98  2A2F               	incf	m_protocol@rxData_l,f,c
  5612                           
  5613                           ;gemsecs.c: 108:     } else {
  5614  002E9A  D093               	goto	l9616
  5615  002E9C                     l9578:
  5616                           
  5617                           ; BSR set to: 57
  5618                           ;gemsecs.c: 112:      if (rxData_l <= sizeof(block10))
  5619  002E9C  0E0B               	movlw	11
  5620  002E9E  602F               	cpfslt	m_protocol@rxData_l,c
  5621  002EA0  D00C               	goto	l9582
  5622                           
  5623                           ; BSR set to: 57
  5624                           ;gemsecs.c: 113:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5625                           ;stkvar	_rxData @ sp[(-1)+0]
  5626  002EA2  502F               	movf	m_protocol@rxData_l,w,c
  5627  002EA4  0820               	sublw	low (_H10+25)
  5628  002EA6  6ED9               	movwf	fsr2l,c
  5629  002EA8  0E00               	movlw	0
  5630  002EAA  A0D8               	btfss	status,0,c
  5631  002EAC  2AE8               	incf	wreg,f,c
  5632  002EAE  0801               	sublw	high (_H10+25)
  5633  002EB0  6EDA               	movwf	fsr2h,c
  5634  002EB2  0EFF               	movlw	-1
  5635  002EB4  006F FF8F FFDF     	movff	plusw1,indf2
  5636  002EBA                     l9582:
  5637                           
  5638                           ; BSR set to: 57
  5639                           ;gemsecs.c: 114:      if (rxData_l <= r_block.length)
  5640  002EBA  502F               	movf	m_protocol@rxData_l,w,c
  5641  002EBC  0100               	movlb	0	; () banked
  5642  002EBE  5DD0               	subwf	(_r_block+12)& (0+255),w,b
  5643  002EC0  A0D8               	btfss	status,0,c
  5644  002EC2  D00D               	goto	l9586
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;gemsecs.c: 115:       V.r_checksum = run_checksum(rxData, 0);
  5648  002EC4  0E00               	movlw	0
  5649  002EC6  6EE6               	movwf	postinc1,c
  5650                           
  5651                           ;stkvar	_rxData @ sp[(-2)+0]
  5652  002EC8  0EFE               	movlw	-2
  5653  002ECA  50E3               	movf	plusw1,w,c
  5654  002ECC  6EE6               	movwf	postinc1,c
  5655  002ECE  EC92  F034         	call	_run_checksum	;wreg free
  5656  002ED2  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  5657  002ED8  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  5658  002EDE                     l9586:
  5659                           
  5660                           ;gemsecs.c: 117:      if (rxData_l == r_block.length + 1)
  5661  002EDE  502F               	movf	m_protocol@rxData_l,w,c
  5662  002EE0  6E47               	movwf	btemp+10,c
  5663  002EE2  6A48               	clrf	btemp+11,c
  5664  002EE4  0100               	movlb	0	; () banked
  5665  002EE6  51D0               	movf	(_r_block+12)& (0+255),w,b
  5666  002EE8  6E45               	movwf	btemp+8,c
  5667  002EEA  6A46               	clrf	btemp+9,c
  5668  002EEC  0E01               	movlw	1
  5669  002EEE  2645               	addwf	btemp+8,f,c
  5670  002EF0  0E00               	movlw	0
  5671  002EF2  2246               	addwfc	btemp+9,f,c
  5672  002EF4  5047               	movf	btemp+10,w,c
  5673  002EF6  1845               	xorwf	btemp+8,w,c
  5674  002EF8  E109               	bnz	l9590
  5675  002EFA  5048               	movf	btemp+11,w,c
  5676  002EFC  1846               	xorwf	btemp+9,w,c
  5677  002EFE  A4D8               	btfss	status,2,c
  5678  002F00  D005               	goto	l9590
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;gemsecs.c: 118:       H10[1].checksum = (uint16_t) rxData << 8;
  5682                           ;stkvar	_rxData @ sp[(-1)+0]
  5683  002F02  0EFF               	movlw	-1
  5684  002F04  50E3               	movf	plusw1,w,c
  5685  002F06  0101               	movlb	1	; () banked
  5686  002F08  6F15               	movwf	(_H10+14)& (0+255),b
  5687  002F0A  6B14               	clrf	(_H10+13)& (0+255),b
  5688  002F0C                     l9590:
  5689                           
  5690                           ;gemsecs.c: 119:      if (rxData_l == r_block.length + 2)
  5691  002F0C  502F               	movf	m_protocol@rxData_l,w,c
  5692  002F0E  6E47               	movwf	btemp+10,c
  5693  002F10  6A48               	clrf	btemp+11,c
  5694  002F12  0100               	movlb	0	; () banked
  5695  002F14  51D0               	movf	(_r_block+12)& (0+255),w,b
  5696  002F16  6E45               	movwf	btemp+8,c
  5697  002F18  6A46               	clrf	btemp+9,c
  5698  002F1A  0E02               	movlw	2
  5699  002F1C  2645               	addwf	btemp+8,f,c
  5700  002F1E  0E00               	movlw	0
  5701  002F20  2246               	addwfc	btemp+9,f,c
  5702  002F22  5047               	movf	btemp+10,w,c
  5703  002F24  1845               	xorwf	btemp+8,w,c
  5704  002F26  E10A               	bnz	l9594
  5705  002F28  5048               	movf	btemp+11,w,c
  5706  002F2A  1846               	xorwf	btemp+9,w,c
  5707  002F2C  A4D8               	btfss	status,2,c
  5708  002F2E  D006               	goto	l9594
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;gemsecs.c: 120:       H10[1].checksum += rxData;
  5712                           ;stkvar	_rxData @ sp[(-1)+0]
  5713  002F30  0EFF               	movlw	-1
  5714  002F32  50E3               	movf	plusw1,w,c
  5715  002F34  0101               	movlb	1	; () banked
  5716  002F36  2714               	addwf	(_H10+13)& (0+255),f,b
  5717  002F38  0E00               	movlw	0
  5718  002F3A  2315               	addwfc	(_H10+14)& (0+255),f,b
  5719  002F3C                     l9594:
  5720                           
  5721                           ;gemsecs.c: 122:      rxData_l++;
  5722  002F3C  2A2F               	incf	m_protocol@rxData_l,f,c
  5723                           
  5724                           ;gemsecs.c: 123:      if (rxData_l > (r_block.length + 2)) {
  5725  002F3E  502F               	movf	m_protocol@rxData_l,w,c
  5726  002F40  6E47               	movwf	btemp+10,c
  5727  002F42  6A48               	clrf	btemp+11,c
  5728  002F44  0100               	movlb	0	; () banked
  5729  002F46  51D0               	movf	(_r_block+12)& (0+255),w,b
  5730  002F48  6E45               	movwf	btemp+8,c
  5731  002F4A  6A46               	clrf	btemp+9,c
  5732  002F4C  0E02               	movlw	2
  5733  002F4E  2645               	addwf	btemp+8,f,c
  5734  002F50  0E00               	movlw	0
  5735  002F52  2246               	addwfc	btemp+9,f,c
  5736  002F54  5047               	movf	btemp+10,w,c
  5737  002F56  5C45               	subwf	btemp+8,w,c
  5738  002F58  5046               	movf	btemp+9,w,c
  5739  002F5A  0A80               	xorlw	128
  5740  002F5C  6E3D               	movwf	btemp,c
  5741  002F5E  5048               	movf	btemp+11,w,c
  5742  002F60  0A80               	xorlw	128
  5743  002F62  583D               	subwfb	btemp,w,c
  5744  002F64  B0D8               	btfsc	status,0,c
  5745  002F66  D02D               	goto	l9616
  5746                           
  5747                           ; BSR set to: 0
  5748                           ;gemsecs.c: 124:       if (V.r_checksum == H10[1].checksum) {
  5749  002F68  0101               	movlb	1	; () banked
  5750  002F6A  5114               	movf	(_H10+13)& (0+255),w,b
  5751  002F6C  0100               	movlb	0	; () banked
  5752  002F6E  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5753  002F70  E10E               	bnz	l9604
  5754  002F72  0101               	movlb	1	; () banked
  5755  002F74  5115               	movf	(_H10+14)& (0+255),w,b
  5756  002F76  0100               	movlb	0	; () banked
  5757  002F78  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5758  002F7A  A4D8               	btfss	status,2,c
  5759  002F7C  D008               	goto	l9604
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;gemsecs.c: 125:        *m_link = LINK_STATE_ACK;
  5763                           ;stkvar	_m_link @ sp[(-1)+-1]
  5764  002F7E  0EFE               	movlw	-2
  5765  002F80  50E3               	movf	plusw1,w,c
  5766  002F82  6ED9               	movwf	fsr2l,c
  5767  002F84  6ADA               	clrf	fsr2h,c
  5768  002F86  0E03               	movlw	3
  5769  002F88  D01B               	goto	L14
  5770  002F8A                     l9602:
  5771  002F8A  EC88  F033         	call	_UART1_Read	;wreg free
  5772  002F8E                     l9604:
  5773                           
  5774                           ;gemsecs.c: 127:        while (UART1_is_rx_ready())
  5775  002F8E  EC7F  F037         	call	_UART1_is_rx_ready	;wreg free
  5776  002F92  503D               	movf	btemp,w,c
  5777  002F94  A4D8               	btfss	status,2,c
  5778  002F96  D7F9               	goto	l9602
  5779                           
  5780                           ;gemsecs.c: 129:        WaitMs(500);
  5781  002F98  0EF4               	movlw	244
  5782  002F9A  6EE6               	movwf	postinc1,c
  5783  002F9C  0E01               	movlw	1
  5784  002F9E  6EE6               	movwf	postinc1,c
  5785  002FA0  ECC3  F033         	call	_WaitMs	;wreg free
  5786                           
  5787                           ;gemsecs.c: 130:        V.error = LINK_ERROR_CHECKSUM;
  5788  002FA4  0E0F               	movlw	15
  5789  002FA6  0100               	movlb	0	; () banked
  5790  002FA8  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5791                           
  5792                           ; BSR set to: 0
  5793                           ;gemsecs.c: 131:        V.checksum_error++;
  5794  002FAA  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5795  002FAC  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5796                           
  5797                           ; BSR set to: 0
  5798                           ;gemsecs.c: 132:        V.failed_receive = 3;
  5799  002FAE  51BE               	movf	(_V+94)& (0+255),w,b	;volatile
  5800  002FB0  0BF0               	andlw	-16
  5801  002FB2  0903               	iorlw	3
  5802  002FB4  6FBE               	movwf	(_V+94)& (0+255),b	;volatile
  5803                           
  5804                           ; BSR set to: 0
  5805                           ;gemsecs.c: 133:        *m_link = LINK_STATE_NAK;
  5806                           ;stkvar	_m_link @ sp[(-1)+-1]
  5807  002FB6  0EFE               	movlw	-2
  5808  002FB8  50E3               	movf	plusw1,w,c
  5809  002FBA  6ED9               	movwf	fsr2l,c
  5810  002FBC  6ADA               	clrf	fsr2h,c
  5811  002FBE  0E05               	movlw	5
  5812  002FC0                     L14:
  5813  002FC0  6EDF               	movwf	indf2,c
  5814  002FC2                     l9616:
  5815                           
  5816                           ;gemsecs.c: 139:    if (UART2_is_rx_ready()) {
  5817  002FC2  EC7B  F037         	call	_UART2_is_rx_ready	;wreg free
  5818  002FC6  503D               	movf	btemp,w,c
  5819  002FC8  B4D8               	btfsc	status,2,c
  5820  002FCA  D11E               	goto	l9704
  5821                           
  5822                           ;gemsecs.c: 140:     rxData = UART2_Read();
  5823  002FCC  EC69  F033         	call	_UART2_Read	;wreg free
  5824                           
  5825                           ;stkvar	_rxData @ sp[(-1)+0]
  5826  002FD0  0EFF               	movlw	-1
  5827  002FD2  0060  F0F7  FFE3   	movff	btemp,plusw1
  5828                           
  5829                           ; BSR set to: 57
  5830                           ;gemsecs.c: 141:     if (rxData_l == 0) {
  5831  002FD8  502F               	movf	m_protocol@rxData_l,w,c
  5832  002FDA  A4D8               	btfss	status,2,c
  5833  002FDC  D00C               	goto	l9628
  5834                           
  5835                           ; BSR set to: 57
  5836                           ;gemsecs.c: 142:      r_block.length = rxData;
  5837                           ;stkvar	_rxData @ sp[(-1)+0]
  5838  002FDE  0EFF               	movlw	-1
  5839  002FE0  006F FF8C  F0D0    	movff	plusw1,_r_block+12
  5840                           
  5841                           ; BSR set to: 57
  5842                           ;gemsecs.c: 143:      run_checksum(0, 1);
  5843  002FE6  0E01               	movlw	1
  5844  002FE8  6EE6               	movwf	postinc1,c
  5845  002FEA  0E00               	movlw	0
  5846  002FEC  6EE6               	movwf	postinc1,c
  5847  002FEE  EC92  F034         	call	_run_checksum	;wreg free
  5848                           
  5849                           ;gemsecs.c: 144:      rxData_l++;
  5850  002FF2  2A2F               	incf	m_protocol@rxData_l,f,c
  5851                           
  5852                           ;gemsecs.c: 145:     } else {
  5853  002FF4  D109               	goto	l9704
  5854  002FF6                     l9628:
  5855                           
  5856                           ; BSR set to: 57
  5857                           ;gemsecs.c: 149:      if (rxData_l <= sizeof(block10))
  5858  002FF6  0E0B               	movlw	11
  5859  002FF8  602F               	cpfslt	m_protocol@rxData_l,c
  5860  002FFA  D00C               	goto	l9632
  5861                           
  5862                           ; BSR set to: 57
  5863                           ;gemsecs.c: 150:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5864                           ;stkvar	_rxData @ sp[(-1)+0]
  5865  002FFC  502F               	movf	m_protocol@rxData_l,w,c
  5866  002FFE  0820               	sublw	low (_H10+25)
  5867  003000  6ED9               	movwf	fsr2l,c
  5868  003002  0E00               	movlw	0
  5869  003004  A0D8               	btfss	status,0,c
  5870  003006  2AE8               	incf	wreg,f,c
  5871  003008  0801               	sublw	high (_H10+25)
  5872  00300A  6EDA               	movwf	fsr2h,c
  5873  00300C  0EFF               	movlw	-1
  5874  00300E  006F FF8F FFDF     	movff	plusw1,indf2
  5875  003014                     l9632:
  5876                           
  5877                           ; BSR set to: 57
  5878                           ;gemsecs.c: 151:      if (rxData_l <= r_block.length)
  5879  003014  502F               	movf	m_protocol@rxData_l,w,c
  5880  003016  0100               	movlb	0	; () banked
  5881  003018  5DD0               	subwf	(_r_block+12)& (0+255),w,b
  5882  00301A  A0D8               	btfss	status,0,c
  5883  00301C  D00D               	goto	l9636
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;gemsecs.c: 152:       V.r_checksum = run_checksum(rxData, 0);
  5887  00301E  0E00               	movlw	0
  5888  003020  6EE6               	movwf	postinc1,c
  5889                           
  5890                           ;stkvar	_rxData @ sp[(-2)+0]
  5891  003022  0EFE               	movlw	-2
  5892  003024  50E3               	movf	plusw1,w,c
  5893  003026  6EE6               	movwf	postinc1,c
  5894  003028  EC92  F034         	call	_run_checksum	;wreg free
  5895  00302C  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  5896  003032  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  5897  003038                     l9636:
  5898                           
  5899                           ;gemsecs.c: 154:      if (rxData_l == r_block.length + 1)
  5900  003038  502F               	movf	m_protocol@rxData_l,w,c
  5901  00303A  6E47               	movwf	btemp+10,c
  5902  00303C  6A48               	clrf	btemp+11,c
  5903  00303E  0100               	movlb	0	; () banked
  5904  003040  51D0               	movf	(_r_block+12)& (0+255),w,b
  5905  003042  6E45               	movwf	btemp+8,c
  5906  003044  6A46               	clrf	btemp+9,c
  5907  003046  0E01               	movlw	1
  5908  003048  2645               	addwf	btemp+8,f,c
  5909  00304A  0E00               	movlw	0
  5910  00304C  2246               	addwfc	btemp+9,f,c
  5911  00304E  5047               	movf	btemp+10,w,c
  5912  003050  1845               	xorwf	btemp+8,w,c
  5913  003052  E109               	bnz	l9640
  5914  003054  5048               	movf	btemp+11,w,c
  5915  003056  1846               	xorwf	btemp+9,w,c
  5916  003058  A4D8               	btfss	status,2,c
  5917  00305A  D005               	goto	l9640
  5918                           
  5919                           ; BSR set to: 0
  5920                           ;gemsecs.c: 155:       H10[1].checksum = (uint16_t) rxData << 8;
  5921                           ;stkvar	_rxData @ sp[(-1)+0]
  5922  00305C  0EFF               	movlw	-1
  5923  00305E  50E3               	movf	plusw1,w,c
  5924  003060  0101               	movlb	1	; () banked
  5925  003062  6F15               	movwf	(_H10+14)& (0+255),b
  5926  003064  6B14               	clrf	(_H10+13)& (0+255),b
  5927  003066                     l9640:
  5928                           
  5929                           ;gemsecs.c: 156:      if (rxData_l == r_block.length + 2)
  5930  003066  502F               	movf	m_protocol@rxData_l,w,c
  5931  003068  6E47               	movwf	btemp+10,c
  5932  00306A  6A48               	clrf	btemp+11,c
  5933  00306C  0100               	movlb	0	; () banked
  5934  00306E  51D0               	movf	(_r_block+12)& (0+255),w,b
  5935  003070  6E45               	movwf	btemp+8,c
  5936  003072  6A46               	clrf	btemp+9,c
  5937  003074  0E02               	movlw	2
  5938  003076  2645               	addwf	btemp+8,f,c
  5939  003078  0E00               	movlw	0
  5940  00307A  2246               	addwfc	btemp+9,f,c
  5941  00307C  5047               	movf	btemp+10,w,c
  5942  00307E  1845               	xorwf	btemp+8,w,c
  5943  003080  E10A               	bnz	l9644
  5944  003082  5048               	movf	btemp+11,w,c
  5945  003084  1846               	xorwf	btemp+9,w,c
  5946  003086  A4D8               	btfss	status,2,c
  5947  003088  D006               	goto	l9644
  5948                           
  5949                           ; BSR set to: 0
  5950                           ;gemsecs.c: 157:       H10[1].checksum += rxData;
  5951                           ;stkvar	_rxData @ sp[(-1)+0]
  5952  00308A  0EFF               	movlw	-1
  5953  00308C  50E3               	movf	plusw1,w,c
  5954  00308E  0101               	movlb	1	; () banked
  5955  003090  2714               	addwf	(_H10+13)& (0+255),f,b
  5956  003092  0E00               	movlw	0
  5957  003094  2315               	addwfc	(_H10+14)& (0+255),f,b
  5958  003096                     l9644:
  5959                           
  5960                           ;gemsecs.c: 159:      rxData_l++;
  5961  003096  2A2F               	incf	m_protocol@rxData_l,f,c
  5962                           
  5963                           ;gemsecs.c: 160:      if (rxData_l > (r_block.length + 2)) {
  5964  003098  502F               	movf	m_protocol@rxData_l,w,c
  5965  00309A  6E47               	movwf	btemp+10,c
  5966  00309C  6A48               	clrf	btemp+11,c
  5967  00309E  0100               	movlb	0	; () banked
  5968  0030A0  51D0               	movf	(_r_block+12)& (0+255),w,b
  5969  0030A2  6E45               	movwf	btemp+8,c
  5970  0030A4  6A46               	clrf	btemp+9,c
  5971  0030A6  0E02               	movlw	2
  5972  0030A8  2645               	addwf	btemp+8,f,c
  5973  0030AA  0E00               	movlw	0
  5974  0030AC  2246               	addwfc	btemp+9,f,c
  5975  0030AE  5047               	movf	btemp+10,w,c
  5976  0030B0  5C45               	subwf	btemp+8,w,c
  5977  0030B2  5046               	movf	btemp+9,w,c
  5978  0030B4  0A80               	xorlw	128
  5979  0030B6  6E3D               	movwf	btemp,c
  5980  0030B8  5048               	movf	btemp+11,w,c
  5981  0030BA  0A80               	xorlw	128
  5982  0030BC  583D               	subwfb	btemp,w,c
  5983  0030BE  B0D8               	btfsc	status,0,c
  5984  0030C0  D0A3               	goto	l9704
  5985                           
  5986                           ; BSR set to: 0
  5987                           ;gemsecs.c: 161:       if (V.r_checksum == H10[1].checksum) {
  5988  0030C2  0101               	movlb	1	; () banked
  5989  0030C4  5114               	movf	(_H10+13)& (0+255),w,b
  5990  0030C6  0100               	movlb	0	; () banked
  5991  0030C8  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5992  0030CA  E10E               	bnz	l9654
  5993  0030CC  0101               	movlb	1	; () banked
  5994  0030CE  5115               	movf	(_H10+14)& (0+255),w,b
  5995  0030D0  0100               	movlb	0	; () banked
  5996  0030D2  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5997  0030D4  A4D8               	btfss	status,2,c
  5998  0030D6  D008               	goto	l9654
  5999                           
  6000                           ; BSR set to: 0
  6001                           ;gemsecs.c: 162:        *m_link = LINK_STATE_ACK;
  6002                           ;stkvar	_m_link @ sp[(-1)+-1]
  6003  0030D8  0EFE               	movlw	-2
  6004  0030DA  50E3               	movf	plusw1,w,c
  6005  0030DC  6ED9               	movwf	fsr2l,c
  6006  0030DE  6ADA               	clrf	fsr2h,c
  6007  0030E0  0E03               	movlw	3
  6008  0030E2  D06F               	goto	L17
  6009  0030E4                     l9652:
  6010  0030E4  EC69  F033         	call	_UART2_Read	;wreg free
  6011  0030E8                     l9654:
  6012                           
  6013                           ;gemsecs.c: 164:        while (UART2_is_rx_ready())
  6014  0030E8  EC7B  F037         	call	_UART2_is_rx_ready	;wreg free
  6015  0030EC  503D               	movf	btemp,w,c
  6016  0030EE  A4D8               	btfss	status,2,c
  6017  0030F0  D7F9               	goto	l9652
  6018                           
  6019                           ;gemsecs.c: 166:        WaitMs(500);
  6020  0030F2  0EF4               	movlw	244
  6021  0030F4  6EE6               	movwf	postinc1,c
  6022  0030F6  0E01               	movlw	1
  6023  0030F8  6EE6               	movwf	postinc1,c
  6024  0030FA  ECC3  F033         	call	_WaitMs	;wreg free
  6025                           
  6026                           ;gemsecs.c: 167:        V.error = LINK_ERROR_CHECKSUM;
  6027  0030FE  0E0F               	movlw	15
  6028  003100  0100               	movlb	0	; () banked
  6029  003102  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6030                           
  6031                           ; BSR set to: 0
  6032                           ;gemsecs.c: 168:        V.checksum_error++;
  6033  003104  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  6034  003106  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  6035                           
  6036                           ; BSR set to: 0
  6037                           ;gemsecs.c: 169:        V.failed_receive = 4;
  6038  003108  51BE               	movf	(_V+94)& (0+255),w,b	;volatile
  6039  00310A  0BF0               	andlw	-16
  6040  00310C  0904               	iorlw	4
  6041  00310E  D6A5               	goto	L16
  6042  003110                     l9666:
  6043                           
  6044                           ;gemsecs.c: 179:   WaitMs(50);
  6045  003110  0E32               	movlw	50
  6046  003112  6EE6               	movwf	postinc1,c
  6047  003114  0E00               	movlw	0
  6048  003116  6EE6               	movwf	postinc1,c
  6049  003118  ECC3  F033         	call	_WaitMs	;wreg free
  6050                           
  6051                           ;gemsecs.c: 181:   V.stream = H10[1].block.block.stream;
  6052  00311C  0101               	movlb	1	; () banked
  6053  00311E  511D               	movf	(_H10+22)& (0+255),w,b
  6054  003120  0B7F               	andlw	127
  6055  003122  0100               	movlb	0	; () banked
  6056  003124  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;gemsecs.c: 182:   V.function = H10[1].block.block.function;
  6060  003126  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  6061                           
  6062                           ; BSR set to: 0
  6063                           ;gemsecs.c: 183:   V.systemb = H10[1].block.block.systemb;
  6064  00312A  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  6065  00312E  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  6066  003132  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  6067  003136  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  6068                           
  6069                           ; BSR set to: 0
  6070                           ;gemsecs.c: 184:   V.rbit = H10[1].block.block.rbit;
  6071  00313A  0101               	movlb	1	; () banked
  6072  00313C  AF1F               	btfss	(_H10+24)& (0+255),7,b
  6073  00313E  D003               	bra	u6565
  6074  003140  0100               	movlb	0	; () banked
  6075  003142  81BD               	bsf	(_V+93)& (0+255),0,b	;volatile
  6076  003144  D002               	bra	u6567
  6077  003146                     u6565:
  6078  003146  0100               	movlb	0	; () banked
  6079  003148  91BD               	bcf	(_V+93)& (0+255),0,b	;volatile
  6080  00314A                     u6567:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;gemsecs.c: 185:   V.wbit = H10[1].block.block.wbit;
  6084  00314A  0101               	movlb	1	; () banked
  6085  00314C  AF1D               	btfss	(_H10+22)& (0+255),7,b
  6086  00314E  D003               	bra	u6575
  6087  003150  0100               	movlb	0	; () banked
  6088  003152  83BD               	bsf	(_V+93)& (0+255),1,b	;volatile
  6089  003154  D002               	bra	u6577
  6090  003156                     u6575:
  6091  003156  0100               	movlb	0	; () banked
  6092  003158  93BD               	bcf	(_V+93)& (0+255),1,b	;volatile
  6093  00315A                     u6577:
  6094                           
  6095                           ; BSR set to: 0
  6096                           ;gemsecs.c: 186:   V.ebit = H10[1].block.block.ebit;
  6097  00315A  0101               	movlb	1	; () banked
  6098  00315C  AF1B               	btfss	(_H10+20)& (0+255),7,b
  6099  00315E  D003               	bra	u6585
  6100  003160  0100               	movlb	0	; () banked
  6101  003162  85BD               	bsf	(_V+93)& (0+255),2,b	;volatile
  6102  003164  D002               	bra	u6587
  6103  003166                     u6585:
  6104  003166  0100               	movlb	0	; () banked
  6105  003168  95BD               	bcf	(_V+93)& (0+255),2,b	;volatile
  6106  00316A                     u6587:
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;gemsecs.c: 187:   V.failed_receive = 0;
  6110  00316A  0EF0               	movlw	-16
  6111  00316C  17BE               	andwf	(_V+94)& (0+255),f,b	;volatile
  6112                           
  6113                           ; BSR set to: 0
  6114                           ;gemsecs.c: 188:   V.g_state = secs_gem_state(V.stream, V.function);
  6115  00316E  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  6116  003170  6EE6               	movwf	postinc1,c
  6117  003172  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  6118  003174  6EE6               	movwf	postinc1,c
  6119  003176  EC6B  F02C         	call	_secs_gem_state	;wreg free
  6120  00317A  503D               	movf	btemp,w,c
  6121  00317C  0100               	movlb	0	; () banked
  6122  00317E  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;gemsecs.c: 189:   *m_link = LINK_STATE_DONE;
  6126                           ;stkvar	_m_link @ sp[(-1)+-1]
  6127  003180  0EFE               	movlw	-2
  6128  003182  50E3               	movf	plusw1,w,c
  6129  003184  6ED9               	movwf	fsr2l,c
  6130  003186  6ADA               	clrf	fsr2h,c
  6131  003188  0E04               	movlw	4
  6132  00318A  D01B               	goto	L17
  6133  00318C                     l9686:
  6134                           
  6135                           ;gemsecs.c: 192:   *m_link = LINK_STATE_ERROR;
  6136                           ;stkvar	_m_link @ sp[(-1)+-1]
  6137  00318C  0EFE               	movlw	-2
  6138  00318E  50E3               	movf	plusw1,w,c
  6139  003190  6ED9               	movwf	fsr2l,c
  6140  003192  6ADA               	clrf	fsr2h,c
  6141  003194  0E06               	movlw	6
  6142  003196  6EDF               	movwf	indf2,c
  6143                           
  6144                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  6145  003198  D002               	goto	l9690
  6146  00319A                     l9688:
  6147                           
  6148                           ;gemsecs.c: 194:    UART1_Read();
  6149  00319A  EC88  F033         	call	_UART1_Read	;wreg free
  6150  00319E                     l9690:
  6151                           
  6152                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  6153  00319E  5037               	movf	_uart1RxCount,w,c	;volatile
  6154  0031A0  B4D8               	btfsc	status,2,c
  6155  0031A2  D003               	goto	l9694
  6156  0031A4  D7FA               	goto	l9688
  6157  0031A6                     l9692:
  6158                           
  6159                           ;gemsecs.c: 197:    UART2_Read();
  6160  0031A6  EC69  F033         	call	_UART2_Read	;wreg free
  6161  0031AA                     l9694:
  6162                           
  6163                           ;gemsecs.c: 196:   while ((uart2RxCount)) {
  6164  0031AA  5031               	movf	_uart2RxCount,w,c	;volatile
  6165  0031AC  B4D8               	btfsc	status,2,c
  6166  0031AE  D02C               	goto	l9704
  6167  0031B0  D7FA               	goto	l9692
  6168  0031B2                     l9696:
  6169                           
  6170                           ;gemsecs.c: 203:   V.failed_receive = 0;
  6171  0031B2  0EF0               	movlw	-16
  6172  0031B4  0100               	movlb	0	; () banked
  6173  0031B6  17BE               	andwf	(_V+94)& (0+255),f,b	;volatile
  6174  0031B8                     l9698:
  6175                           
  6176                           ;gemsecs.c: 205:   *m_link = LINK_STATE_IDLE;
  6177                           ;stkvar	_m_link @ sp[(-1)+-1]
  6178  0031B8  0EFE               	movlw	-2
  6179  0031BA  50E3               	movf	plusw1,w,c
  6180  0031BC  6ED9               	movwf	fsr2l,c
  6181  0031BE  6ADA               	clrf	fsr2h,c
  6182  0031C0  0E00               	movlw	0
  6183  0031C2                     L17:
  6184  0031C2  6EDF               	movwf	indf2,c
  6185                           
  6186                           ;gemsecs.c: 207:   break;
  6187  0031C4  D021               	goto	l9704
  6188  0031C6                     l9702:
  6189                           
  6190                           ;stkvar	_m_link @ sp[(-1)+-1]
  6191  0031C6  0EFE               	movlw	-2
  6192  0031C8  50E3               	movf	plusw1,w,c
  6193  0031CA  6ED9               	movwf	fsr2l,c
  6194  0031CC  6ADA               	clrf	fsr2h,c
  6195  0031CE  50DF               	movf	indf2,w,c
  6196  0031D0  6E47               	movwf	btemp+10,c
  6197  0031D2  6A48               	clrf	btemp+11,c
  6198                           
  6199                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6200                           ; Switch size 1, requested type "simple"
  6201                           ; Number of cases is 1, Range of values is 0 to 0
  6202                           ; switch strategies available:
  6203                           ; Name         Instructions Cycles
  6204                           ; simple_byte            4     3 (average)
  6205                           ;	Chosen strategy is simple_byte
  6206  0031D4  5048               	movf	btemp+11,w,c
  6207  0031D6  0A00               	xorlw	0	; case 0
  6208  0031D8  A4D8               	btfss	status,2,c
  6209  0031DA  D7EE               	goto	l9698
  6210                           
  6211                           ; Switch size 1, requested type "simple"
  6212                           ; Number of cases is 7, Range of values is 0 to 6
  6213                           ; switch strategies available:
  6214                           ; Name         Instructions Cycles
  6215                           ; simple_byte           22    12 (average)
  6216                           ;	Chosen strategy is simple_byte
  6217  0031DC  5047               	movf	btemp+10,w,c
  6218  0031DE  0A00               	xorlw	0	; case 0
  6219  0031E0  B4D8               	btfsc	status,2,c
  6220  0031E2  D58A               	goto	l9506
  6221  0031E4  0A01               	xorlw	1	; case 1
  6222  0031E6  B4D8               	btfsc	status,2,c
  6223  0031E8  D5DB               	goto	l1602
  6224  0031EA  0A03               	xorlw	3	; case 2
  6225  0031EC  B4D8               	btfsc	status,2,c
  6226  0031EE  D626               	goto	l9556
  6227  0031F0  0A01               	xorlw	1	; case 3
  6228  0031F2  B4D8               	btfsc	status,2,c
  6229  0031F4  D78D               	goto	l9666
  6230  0031F6  0A07               	xorlw	7	; case 4
  6231  0031F8  B4D8               	btfsc	status,2,c
  6232  0031FA  D7DB               	goto	l9696
  6233  0031FC  0A01               	xorlw	1	; case 5
  6234  0031FE  B4D8               	btfsc	status,2,c
  6235  003200  D7C5               	goto	l9686
  6236  003202  0A03               	xorlw	3	; case 6
  6237  003204  A4D8               	btfss	status,2,c
  6238  003206  D7D8               	goto	l9698
  6239  003208                     l9704:
  6240                           
  6241                           ;gemsecs.c: 210:  return *m_link;
  6242                           ;stkvar	_m_link @ sp[(-1)+-1]
  6243  003208  0EFE               	movlw	-2
  6244  00320A  50E3               	movf	plusw1,w,c
  6245  00320C  6ED9               	movwf	fsr2l,c
  6246  00320E  6ADA               	clrf	fsr2h,c
  6247  003210  50DF               	movf	indf2,w,c
  6248  003212  6E3D               	movwf	btemp,c
  6249                           
  6250                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6251  003214  52E5               	movf	postdec1,f,c
  6252  003216  52E5               	movf	postdec1,f,c
  6253  003218  0012               	return		;funcret
  6254  00321A                     __end_of_m_protocol:
  6255                           	opt callstack 0
  6256                           
  6257 ;; *************** function _secs_send *****************
  6258 ;; Defined at:
  6259 ;;		line 446 in file "gemsecs.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;  byte_block      2  [STACK] PTR unsigned char 
  6262 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  6263 ;;		 -> H14(17), H13(48), H12(30), H10(91), 
  6264 ;;  length          1  [STACK] unsigned char 
  6265 ;;  fake            1  [STACK] _Bool 
  6266 ;;  s_uart          1  [STACK] unsigned char 
  6267 ;; Auto vars:     Size  Location     Type
  6268 ;;  k               2  [STACK] PTR unsigned char 
  6269 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  6270 ;;		 -> H14(17), H13(48), H12(30), H10(91), 
  6271 ;;  checksum        2  [STACK] unsigned short 
  6272 ;;  i               1  [STACK] unsigned char 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;                  1  [STACK] _Bool 
  6275 ;; Registers used:
  6276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6285 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6286 ;;Total ram usage:        0 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    6
  6289 ;; This function calls:
  6290 ;;		_UART1_Write
  6291 ;;		_UART1_is_tx_ready
  6292 ;;		_UART1_put_buffer
  6293 ;;		_UART2_Write
  6294 ;;		_UART2_is_tx_ready
  6295 ;;		_UART2_put_buffer
  6296 ;;		_block_checksum
  6297 ;; This function is called by:
  6298 ;;		_m_protocol
  6299 ;;		_r_protocol
  6300 ;;		_t_protocol
  6301 ;; This function uses a reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text7
  6305  0047C6                     __ptext7:
  6306                           	opt callstack 0
  6307  0047C6                     _secs_send:
  6308                           	opt callstack 0
  6309                           
  6310                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6311  0047C6  0E05               	movlw	5
  6312  0047C8  26E1               	addwf	fsr1l,f,c
  6313  0047CA  0E00               	movlw	0
  6314  0047CC  22E2               	addwfc	fsr1h,f,c
  6315                           
  6316                           ;gemsecs.c: 446: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 447: {;gemsecs.c: 448:  uint8_t i, *k;;gemsecs.c: 449:  uint16_t ch
      +                          ecksum;;gemsecs.c: 451:  k = (uint8_t *) byte_block;
  6317                           ;stkvar	_byte_block @ sp[(-5)+-2]
  6318                           
  6319                           ;incstack = 0
  6320  0047CE  0EF9               	movlw	-7
  6321  0047D0  006F FF8C  F047    	movff	plusw1,btemp+10
  6322  0047D6  0EFA               	movlw	-6
  6323  0047D8  006F FF8C  F048    	movff	plusw1,btemp+11
  6324                           
  6325                           ;stkvar	_k @ sp[(-5)+0]
  6326  0047DE  0EFC               	movlw	-4
  6327  0047E0  0060  F123  FFE3   	movff	btemp+11,plusw1
  6328  0047E6  0EFB               	movlw	-5
  6329  0047E8  0060  F11F  FFE3   	movff	btemp+10,plusw1
  6330                           
  6331                           ;gemsecs.c: 453:  ++V.ticks;
  6332  0047EE  0E01               	movlw	1
  6333  0047F0  0100               	movlb	0	; () banked
  6334  0047F2  27A6               	addwf	(_V+70)& (0+255),f,b	;volatile
  6335  0047F4  0E00               	movlw	0
  6336  0047F6  23A7               	addwfc	(_V+71)& (0+255),f,b	;volatile
  6337  0047F8  23A8               	addwfc	(_V+72)& (0+255),f,b	;volatile
  6338  0047FA  23A9               	addwfc	(_V+73)& (0+255),f,b	;volatile
  6339                           
  6340                           ; BSR set to: 0
  6341                           ;gemsecs.c: 454:  V.error = LINK_ERROR_NONE;
  6342  0047FC  0E0A               	movlw	10
  6343  0047FE  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;gemsecs.c: 455:  if ((length - 3) != k[length - 1]) {
  6347                           ;stkvar	_length @ sp[(-5)+-3]
  6348  004800  0EF8               	movlw	-8
  6349  004802  50E3               	movf	plusw1,w,c
  6350  004804  6E47               	movwf	btemp+10,c
  6351  004806  6A48               	clrf	btemp+11,c
  6352                           
  6353                           ;stkvar	_k @ sp[(-5)+0]
  6354  004808  0EFB               	movlw	-5
  6355  00480A  50E3               	movf	plusw1,w,c
  6356  00480C  2647               	addwf	btemp+10,f,c
  6357  00480E  0EFC               	movlw	-4
  6358  004810  50E3               	movf	plusw1,w,c
  6359  004812  2248               	addwfc	btemp+11,f,c
  6360  004814  0EFF               	movlw	255
  6361  004816  2447               	addwf	btemp+10,w,c
  6362  004818  6ED9               	movwf	fsr2l,c
  6363  00481A  0EFF               	movlw	255
  6364  00481C  2048               	addwfc	btemp+11,w,c
  6365  00481E  6EDA               	movwf	fsr2h,c
  6366  004820  50DF               	movf	indf2,w,c
  6367  004822  6E47               	movwf	btemp+10,c
  6368  004824  6A48               	clrf	btemp+11,c
  6369  004826  0EFD               	movlw	253
  6370  004828  6E45               	movwf	btemp+8,c
  6371  00482A  0EFF               	movlw	255
  6372  00482C  6E46               	movwf	btemp+9,c
  6373                           
  6374                           ;stkvar	_length @ sp[(-5)+-3]
  6375  00482E  0EF8               	movlw	-8
  6376  004830  50E3               	movf	plusw1,w,c
  6377  004832  6E43               	movwf	btemp+6,c
  6378  004834  6A44               	clrf	btemp+7,c
  6379  004836  5045               	movf	btemp+8,w,c
  6380  004838  2643               	addwf	btemp+6,f,c
  6381  00483A  5046               	movf	btemp+9,w,c
  6382  00483C  2244               	addwfc	btemp+7,f,c
  6383  00483E  5047               	movf	btemp+10,w,c
  6384  004840  1843               	xorwf	btemp+6,w,c
  6385  004842  E104               	bnz	u5860
  6386  004844  5048               	movf	btemp+11,w,c
  6387  004846  1844               	xorwf	btemp+7,w,c
  6388  004848  B4D8               	btfsc	status,2,c
  6389  00484A  D003               	goto	l9100
  6390  00484C                     u5860:
  6391                           
  6392                           ; BSR set to: 0
  6393                           ;gemsecs.c: 456:   V.error = LINK_ERROR_SEND;
  6394  00484C  0E12               	movlw	18
  6395  00484E  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6396  004850  D0EA               	goto	l1737
  6397  004852                     l9100:
  6398                           
  6399                           ; BSR set to: 0
  6400                           ;gemsecs.c: 465:  checksum = block_checksum(&k[2], length - 3);
  6401  004852  0EFD               	movlw	253
  6402  004854  6E47               	movwf	btemp+10,c
  6403  004856  0EFF               	movlw	255
  6404  004858  6E48               	movwf	btemp+11,c
  6405                           
  6406                           ;stkvar	_length @ sp[(-5)+-3]
  6407  00485A  0EF8               	movlw	-8
  6408  00485C  50E3               	movf	plusw1,w,c
  6409  00485E  6E45               	movwf	btemp+8,c
  6410  004860  6A46               	clrf	btemp+9,c
  6411  004862  5047               	movf	btemp+10,w,c
  6412  004864  2645               	addwf	btemp+8,f,c
  6413  004866  5048               	movf	btemp+11,w,c
  6414  004868  2246               	addwfc	btemp+9,f,c
  6415  00486A  0060  F117  FFE6   	movff	btemp+8,postinc1
  6416  004870  0060  F11B  FFE6   	movff	btemp+9,postinc1
  6417                           
  6418                           ;stkvar	_k @ sp[(-7)+0]
  6419  004876  0EF9               	movlw	-7
  6420  004878  50E3               	movf	plusw1,w,c
  6421  00487A  0F02               	addlw	2
  6422  00487C  6E47               	movwf	btemp+10,c
  6423  00487E  0EFA               	movlw	-6
  6424  004880  006F FF8C  F048    	movff	plusw1,btemp+11
  6425  004886  0E00               	movlw	0
  6426  004888  2248               	addwfc	btemp+11,f,c
  6427  00488A  0060  F11F  FFE6   	movff	btemp+10,postinc1
  6428  004890  0060  F123  FFE6   	movff	btemp+11,postinc1
  6429  004896  ECF1  F02A         	call	_block_checksum	;wreg free
  6430                           
  6431                           ;stkvar	_checksum @ sp[(-5)+2]
  6432  00489A  0EFD               	movlw	-3
  6433  00489C  0060  F0F7  FFE3   	movff	btemp,plusw1
  6434  0048A2  0EFE               	movlw	-2
  6435  0048A4  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  6436                           
  6437                           ; BSR set to: 0
  6438                           ;gemsecs.c: 466:  k[0] = checksum & 0xff;
  6439                           ;stkvar	_checksum @ sp[(-5)+2]
  6440                           ;stkvar	_k @ sp[(-5)+0]
  6441  0048AA  0EFB               	movlw	-5
  6442  0048AC  006F FF8F FFD9     	movff	plusw1,fsr2l
  6443  0048B2  0EFC               	movlw	-4
  6444  0048B4  006F FF8F FFDA     	movff	plusw1,fsr2h
  6445  0048BA  0EFD               	movlw	-3
  6446  0048BC  006F FF8F FFDF     	movff	plusw1,indf2
  6447                           
  6448                           ; BSR set to: 0
  6449                           ;gemsecs.c: 467:  k[1] = (checksum >> 8)&0xff;
  6450                           ;stkvar	_checksum @ sp[(-5)+2]
  6451  0048C2  0EFE               	movlw	254
  6452  0048C4  24E1               	addwf	fsr1l,w,c
  6453  0048C6  6ED9               	movwf	fsr2l,c
  6454  0048C8  0EFF               	movlw	255
  6455  0048CA  20E2               	addwfc	fsr1h,w,c
  6456  0048CC  6EDA               	movwf	fsr2h,c
  6457                           
  6458                           ;stkvar	_k @ sp[(-5)+0]
  6459  0048CE  0EFB               	movlw	-5
  6460  0048D0  006F FF8C  F047    	movff	plusw1,btemp+10
  6461  0048D6  0EFC               	movlw	-4
  6462  0048D8  006F FF8C  F048    	movff	plusw1,btemp+11
  6463  0048DE  0E01               	movlw	1
  6464  0048E0  2447               	addwf	btemp+10,w,c
  6465  0048E2  6EE9               	movwf	fsr0l,c
  6466  0048E4  0E00               	movlw	0
  6467  0048E6  2048               	addwfc	btemp+11,w,c
  6468  0048E8  6EEA               	movwf	fsr0h,c
  6469  0048EA  006F FF7F FFEF     	movff	indf2,indf0
  6470                           
  6471                           ; BSR set to: 0
  6472                           ;gemsecs.c: 468:  V.t_checksum = checksum;
  6473                           ;stkvar	_checksum @ sp[(-5)+2]
  6474  0048F0  0EFD               	movlw	-3
  6475  0048F2  006F FF8C  F0B5    	movff	plusw1,_V+85	;volatile
  6476  0048F8  0EFE               	movlw	-2
  6477  0048FA  006F FF8C  F0B6    	movff	plusw1,_V+86	;volatile
  6478                           
  6479                           ;gemsecs.c: 470:  switch (s_uart) {
  6480  004900  D082               	goto	l9146
  6481  004902                     l9108:
  6482  004902  EC73  F037         	call	_UART2_is_tx_ready	;wreg free
  6483  004906  0E3F               	movlw	63
  6484  004908  643D               	cpfsgt	btemp,c
  6485  00490A  D7FB               	goto	l9108
  6486                           
  6487                           ;gemsecs.c: 473:   for (i = length; i > 0; i--) {
  6488                           ;stkvar	_length @ sp[(-5)+-3]
  6489                           ;stkvar	_i @ sp[(-5)+4]
  6490  00490C  0EF8               	movlw	-8
  6491  00490E  006F FF8C  F03D    	movff	plusw1,btemp
  6492  004914  0EFF               	movlw	-1
  6493  004916  0060  F0F7  FFE3   	movff	btemp,plusw1
  6494  00491C                     l9112:
  6495                           
  6496                           ;stkvar	_i @ sp[(-5)+4]
  6497  00491C  0EFF               	movlw	-1
  6498  00491E  50E3               	movf	plusw1,w,c
  6499  004920  B4D8               	btfsc	status,2,c
  6500  004922  D081               	goto	l1737
  6501                           
  6502                           ;gemsecs.c: 474:    if (fake) {
  6503                           ;stkvar	_fake @ sp[(-5)+-4]
  6504  004924  0EF7               	movlw	-9
  6505  004926  50E3               	movf	plusw1,w,c
  6506  004928  B4D8               	btfsc	status,2,c
  6507  00492A  D015               	goto	l9120
  6508                           
  6509                           ;gemsecs.c: 475:     UART2_put_buffer(k[i - 1]);
  6510                           ;stkvar	_i @ sp[(-5)+4]
  6511  00492C  0EFF               	movlw	-1
  6512  00492E  50E3               	movf	plusw1,w,c
  6513  004930  6E47               	movwf	btemp+10,c
  6514  004932  6A48               	clrf	btemp+11,c
  6515                           
  6516                           ;stkvar	_k @ sp[(-5)+0]
  6517  004934  0EFB               	movlw	-5
  6518  004936  50E3               	movf	plusw1,w,c
  6519  004938  2647               	addwf	btemp+10,f,c
  6520  00493A  0EFC               	movlw	-4
  6521  00493C  50E3               	movf	plusw1,w,c
  6522  00493E  2248               	addwfc	btemp+11,f,c
  6523  004940  0EFF               	movlw	255
  6524  004942  2447               	addwf	btemp+10,w,c
  6525  004944  6ED9               	movwf	fsr2l,c
  6526  004946  0EFF               	movlw	255
  6527  004948  2048               	addwfc	btemp+11,w,c
  6528  00494A  6EDA               	movwf	fsr2h,c
  6529  00494C  50DF               	movf	indf2,w,c
  6530  00494E  6EE6               	movwf	postinc1,c
  6531  004950  EC68  F034         	call	_UART2_put_buffer	;wreg free
  6532                           
  6533                           ;gemsecs.c: 476:    } else {
  6534  004954  D014               	goto	l9122
  6535  004956                     l9120:
  6536                           
  6537                           ;gemsecs.c: 478:     UART2_Write(k[i - 1]);
  6538                           ;stkvar	_i @ sp[(-5)+4]
  6539  004956  0EFF               	movlw	-1
  6540  004958  50E3               	movf	plusw1,w,c
  6541  00495A  6E47               	movwf	btemp+10,c
  6542  00495C  6A48               	clrf	btemp+11,c
  6543                           
  6544                           ;stkvar	_k @ sp[(-5)+0]
  6545  00495E  0EFB               	movlw	-5
  6546  004960  50E3               	movf	plusw1,w,c
  6547  004962  2647               	addwf	btemp+10,f,c
  6548  004964  0EFC               	movlw	-4
  6549  004966  50E3               	movf	plusw1,w,c
  6550  004968  2248               	addwfc	btemp+11,f,c
  6551  00496A  0EFF               	movlw	255
  6552  00496C  2447               	addwf	btemp+10,w,c
  6553  00496E  6ED9               	movwf	fsr2l,c
  6554  004970  0EFF               	movlw	255
  6555  004972  2048               	addwfc	btemp+11,w,c
  6556  004974  6EDA               	movwf	fsr2h,c
  6557  004976  50DF               	movf	indf2,w,c
  6558  004978  6EE6               	movwf	postinc1,c
  6559  00497A  EC2B  F033         	call	_UART2_Write	;wreg free
  6560  00497E                     l9122:
  6561                           
  6562                           ; BSR set to: 57
  6563                           ;gemsecs.c: 480:   }
  6564                           ;stkvar	_i @ sp[(-5)+4]
  6565  00497E  0EFF               	movlw	-1
  6566  004980  06E3               	decf	plusw1,f,c
  6567  004982  D7CC               	goto	l9112
  6568  004984                     l9126:
  6569  004984  EC77  F037         	call	_UART1_is_tx_ready	;wreg free
  6570  004988  0E3F               	movlw	63
  6571  00498A  643D               	cpfsgt	btemp,c
  6572  00498C  D7FB               	goto	l9126
  6573                           
  6574                           ;gemsecs.c: 485:   for (i = length; i > 0; i--) {
  6575                           ;stkvar	_length @ sp[(-5)+-3]
  6576                           ;stkvar	_i @ sp[(-5)+4]
  6577  00498E  0EF8               	movlw	-8
  6578  004990  006F FF8C  F03D    	movff	plusw1,btemp
  6579  004996  0EFF               	movlw	-1
  6580  004998  0060  F0F7  FFE3   	movff	btemp,plusw1
  6581  00499E                     l9130:
  6582                           
  6583                           ;stkvar	_i @ sp[(-5)+4]
  6584  00499E  0EFF               	movlw	-1
  6585  0049A0  50E3               	movf	plusw1,w,c
  6586  0049A2  B4D8               	btfsc	status,2,c
  6587  0049A4  D040               	goto	l1737
  6588                           
  6589                           ;gemsecs.c: 486:    if (fake) {
  6590                           ;stkvar	_fake @ sp[(-5)+-4]
  6591  0049A6  0EF7               	movlw	-9
  6592  0049A8  50E3               	movf	plusw1,w,c
  6593  0049AA  B4D8               	btfsc	status,2,c
  6594  0049AC  D015               	goto	l9138
  6595                           
  6596                           ;gemsecs.c: 487:     UART1_put_buffer(k[i - 1]);
  6597                           ;stkvar	_i @ sp[(-5)+4]
  6598  0049AE  0EFF               	movlw	-1
  6599  0049B0  50E3               	movf	plusw1,w,c
  6600  0049B2  6E47               	movwf	btemp+10,c
  6601  0049B4  6A48               	clrf	btemp+11,c
  6602                           
  6603                           ;stkvar	_k @ sp[(-5)+0]
  6604  0049B6  0EFB               	movlw	-5
  6605  0049B8  50E3               	movf	plusw1,w,c
  6606  0049BA  2647               	addwf	btemp+10,f,c
  6607  0049BC  0EFC               	movlw	-4
  6608  0049BE  50E3               	movf	plusw1,w,c
  6609  0049C0  2248               	addwfc	btemp+11,f,c
  6610  0049C2  0EFF               	movlw	255
  6611  0049C4  2447               	addwf	btemp+10,w,c
  6612  0049C6  6ED9               	movwf	fsr2l,c
  6613  0049C8  0EFF               	movlw	255
  6614  0049CA  2048               	addwfc	btemp+11,w,c
  6615  0049CC  6EDA               	movwf	fsr2h,c
  6616  0049CE  50DF               	movf	indf2,w,c
  6617  0049D0  6EE6               	movwf	postinc1,c
  6618  0049D2  EC7D  F034         	call	_UART1_put_buffer	;wreg free
  6619                           
  6620                           ;gemsecs.c: 488:    } else {
  6621  0049D6  D014               	goto	l9140
  6622  0049D8                     l9138:
  6623                           
  6624                           ;gemsecs.c: 490:     UART1_Write(k[i - 1]);
  6625                           ;stkvar	_i @ sp[(-5)+4]
  6626  0049D8  0EFF               	movlw	-1
  6627  0049DA  50E3               	movf	plusw1,w,c
  6628  0049DC  6E47               	movwf	btemp+10,c
  6629  0049DE  6A48               	clrf	btemp+11,c
  6630                           
  6631                           ;stkvar	_k @ sp[(-5)+0]
  6632  0049E0  0EFB               	movlw	-5
  6633  0049E2  50E3               	movf	plusw1,w,c
  6634  0049E4  2647               	addwf	btemp+10,f,c
  6635  0049E6  0EFC               	movlw	-4
  6636  0049E8  50E3               	movf	plusw1,w,c
  6637  0049EA  2248               	addwfc	btemp+11,f,c
  6638  0049EC  0EFF               	movlw	255
  6639  0049EE  2447               	addwf	btemp+10,w,c
  6640  0049F0  6ED9               	movwf	fsr2l,c
  6641  0049F2  0EFF               	movlw	255
  6642  0049F4  2048               	addwfc	btemp+11,w,c
  6643  0049F6  6EDA               	movwf	fsr2h,c
  6644  0049F8  50DF               	movf	indf2,w,c
  6645  0049FA  6EE6               	movwf	postinc1,c
  6646  0049FC  EC4A  F033         	call	_UART1_Write	;wreg free
  6647  004A00                     l9140:
  6648                           
  6649                           ; BSR set to: 57
  6650                           ;gemsecs.c: 492:   }
  6651                           ;stkvar	_i @ sp[(-5)+4]
  6652  004A00  0EFF               	movlw	-1
  6653  004A02  06E3               	decf	plusw1,f,c
  6654  004A04  D7CC               	goto	l9130
  6655  004A06                     l9146:
  6656                           
  6657                           ; BSR set to: 0
  6658                           ;stkvar	_s_uart @ sp[(-5)+-5]
  6659  004A06  0EF6               	movlw	-10
  6660  004A08  50E3               	movf	plusw1,w,c
  6661  004A0A  6E47               	movwf	btemp+10,c
  6662  004A0C  6A48               	clrf	btemp+11,c
  6663                           
  6664                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6665                           ; Switch size 1, requested type "simple"
  6666                           ; Number of cases is 1, Range of values is 0 to 0
  6667                           ; switch strategies available:
  6668                           ; Name         Instructions Cycles
  6669                           ; simple_byte            4     3 (average)
  6670                           ;	Chosen strategy is simple_byte
  6671  004A0E  5048               	movf	btemp+11,w,c
  6672  004A10  0A00               	xorlw	0	; case 0
  6673  004A12  A4D8               	btfss	status,2,c
  6674  004A14  D7B7               	goto	l9126
  6675                           
  6676                           ; BSR set to: 0
  6677                           ; Switch size 1, requested type "simple"
  6678                           ; Number of cases is 2, Range of values is 1 to 2
  6679                           ; switch strategies available:
  6680                           ; Name         Instructions Cycles
  6681                           ; simple_byte            7     4 (average)
  6682                           ;	Chosen strategy is simple_byte
  6683  004A16  5047               	movf	btemp+10,w,c
  6684  004A18  0A01               	xorlw	1	; case 1
  6685  004A1A  B4D8               	btfsc	status,2,c
  6686  004A1C  D7B3               	goto	l9126
  6687  004A1E  0A03               	xorlw	3	; case 2
  6688  004A20  B4D8               	btfsc	status,2,c
  6689  004A22  D76F               	goto	l9108
  6690  004A24  D7AF               	goto	l9126
  6691  004A26                     l1737:
  6692                           
  6693                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  6694  004A26  0EF6               	movlw	246
  6695  004A28  26E1               	addwf	fsr1l,f,c
  6696  004A2A  0EFF               	movlw	255
  6697  004A2C  22E2               	addwfc	fsr1h,f,c
  6698  004A2E  0012               	return		;funcret
  6699  004A30                     __end_of_secs_send:
  6700                           	opt callstack 0
  6701                           
  6702 ;; *************** function _block_checksum *****************
  6703 ;; Defined at:
  6704 ;;		line 19 in file "gemsecs.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;  byte_block      2  [STACK] PTR unsigned char 
  6707 ;;		 -> H53(56), H27(30), H24(27), H17(20), 
  6708 ;;		 -> H14(17), H13(48), H12(30), H10(91), 
  6709 ;;  byte_count      2  [STACK] unsigned short 
  6710 ;; Auto vars:     Size  Location     Type
  6711 ;;  i               2  [STACK] unsigned short 
  6712 ;;  sum             2  [STACK] unsigned short 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  2  [STACK] unsigned short 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btem
      +p+23
  6717 ;; Tracked objects:
  6718 ;;		On entry : 3F/0
  6719 ;;		On exit  : 3F/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6725 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6726 ;;Total ram usage:        0 bytes
  6727 ;; Hardware stack levels used:    1
  6728 ;; Hardware stack levels required when called:    5
  6729 ;; This function calls:
  6730 ;;		_rand
  6731 ;; This function is called by:
  6732 ;;		_secs_send
  6733 ;; This function uses a reentrant model
  6734 ;;
  6735                           
  6736                           	psect	text8
  6737  0055E2                     __ptext8:
  6738                           	opt callstack 0
  6739  0055E2                     _block_checksum:
  6740                           	opt callstack 0
  6741                           
  6742                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6743  0055E2  52E6               	movf	postinc1,f,c
  6744  0055E4  52E6               	movf	postinc1,f,c
  6745  0055E6  52E6               	movf	postinc1,f,c
  6746  0055E8  52E6               	movf	postinc1,f,c
  6747                           
  6748                           ;gemsecs.c: 19: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 20: {;gemsecs.c: 21:  uint16_t sum = 0, i;
  6749                           ;stkvar	_sum @ sp[(-4)+2]
  6750                           
  6751                           ;incstack = 0
  6752  0055EA  0EFE               	movlw	-2
  6753  0055EC  6AE3               	clrf	plusw1,c
  6754  0055EE  0EFF               	movlw	-1
  6755  0055F0  6AE3               	clrf	plusw1,c
  6756                           
  6757                           ;gemsecs.c: 23:  for (i = 0; i < byte_count; i++) {
  6758                           ;stkvar	_i @ sp[(-4)+0]
  6759  0055F2  0EFC               	movlw	-4
  6760  0055F4  6AE3               	clrf	plusw1,c
  6761  0055F6  0EFD               	movlw	-3
  6762  0055F8  6AE3               	clrf	plusw1,c
  6763  0055FA  D039               	goto	l9036
  6764  0055FC                     l9032:
  6765                           
  6766                           ;gemsecs.c: 24:   sum += byte_block[i];
  6767                           ;stkvar	_i @ sp[(-4)+0]
  6768  0055FC  0EFC               	movlw	-4
  6769  0055FE  006F FF8C  F047    	movff	plusw1,btemp+10
  6770  005604  0EFD               	movlw	-3
  6771  005606  006F FF8C  F048    	movff	plusw1,btemp+11
  6772                           
  6773                           ;stkvar	_byte_block @ sp[(-4)+-2]
  6774  00560C  0EFA               	movlw	-6
  6775  00560E  006F FF8C  F045    	movff	plusw1,btemp+8
  6776  005614  0EFB               	movlw	-5
  6777  005616  006F FF8C  F046    	movff	plusw1,btemp+9
  6778  00561C  5047               	movf	btemp+10,w,c
  6779  00561E  2445               	addwf	btemp+8,w,c
  6780  005620  6ED9               	movwf	fsr2l,c
  6781  005622  5048               	movf	btemp+11,w,c
  6782  005624  2046               	addwfc	btemp+9,w,c
  6783  005626  6EDA               	movwf	fsr2h,c
  6784  005628  50DF               	movf	indf2,w,c
  6785  00562A  6E48               	movwf	btemp+11,c
  6786                           
  6787                           ;stkvar	_sum @ sp[(-4)+2]
  6788  00562C  0EFE               	movlw	-2
  6789  00562E  50E3               	movf	plusw1,w,c
  6790  005630  2448               	addwf	btemp+11,w,c
  6791  005632  6E3D               	movwf	btemp,c
  6792  005634  0EFE               	movlw	-2
  6793  005636  0060  F0F7  FFE3   	movff	btemp,plusw1
  6794  00563C  6A3D               	clrf	btemp,c
  6795  00563E  0EFF               	movlw	-1
  6796  005640  50E3               	movf	plusw1,w,c
  6797  005642  223D               	addwfc	btemp,f,c
  6798  005644  0EFF               	movlw	-1
  6799  005646  0060  F0F7  FFE3   	movff	btemp,plusw1
  6800                           
  6801                           ;gemsecs.c: 25:  }
  6802                           ;stkvar	_i @ sp[(-4)+0]
  6803  00564C  0EFC               	movlw	-4
  6804  00564E  50E3               	movf	plusw1,w,c
  6805  005650  0F01               	addlw	1
  6806  005652  6E3D               	movwf	btemp,c
  6807  005654  0EFC               	movlw	-4
  6808  005656  0060  F0F7  FFE3   	movff	btemp,plusw1
  6809  00565C  6A3D               	clrf	btemp,c
  6810  00565E  0EFD               	movlw	-3
  6811  005660  50E3               	movf	plusw1,w,c
  6812  005662  203D               	addwfc	btemp,w,c
  6813  005664  6E3D               	movwf	btemp,c
  6814  005666  0EFD               	movlw	-3
  6815  005668  0060  F0F7  FFE3   	movff	btemp,plusw1
  6816  00566E                     l9036:
  6817                           
  6818                           ;stkvar	_byte_count @ sp[(-4)+-4]
  6819  00566E  0EF8               	movlw	-8
  6820  005670  006F FF8C  F047    	movff	plusw1,btemp+10
  6821  005676  0EF9               	movlw	-7
  6822  005678  006F FF8C  F048    	movff	plusw1,btemp+11
  6823                           
  6824                           ;stkvar	_i @ sp[(-4)+0]
  6825  00567E  0EFC               	movlw	-4
  6826  005680  006F FF8C  F045    	movff	plusw1,btemp+8
  6827  005686  0EFD               	movlw	-3
  6828  005688  006F FF8C  F046    	movff	plusw1,btemp+9
  6829  00568E  5047               	movf	btemp+10,w,c
  6830  005690  5C45               	subwf	btemp+8,w,c
  6831  005692  5048               	movf	btemp+11,w,c
  6832  005694  5846               	subwfb	btemp+9,w,c
  6833  005696  A0D8               	btfss	status,0,c
  6834  005698  D7B1               	goto	l9032
  6835                           
  6836                           ;gemsecs.c: 27:  if (rand() > 30000)
  6837  00569A  ECC4  F028         	call	_rand	;wreg free
  6838  00569E  BE3E               	btfsc	btemp+1,7,c
  6839  0056A0  D017               	goto	l9042
  6840  0056A2  0E31               	movlw	49
  6841  0056A4  5C3D               	subwf	btemp,w,c
  6842  0056A6  0E75               	movlw	117
  6843  0056A8  583E               	subwfb	btemp+1,w,c
  6844  0056AA  A0D8               	btfss	status,0,c
  6845  0056AC  D011               	goto	l9042
  6846                           
  6847                           ; BSR set to: 0
  6848                           ;gemsecs.c: 28:   sum++;
  6849                           ;stkvar	_sum @ sp[(-4)+2]
  6850  0056AE  0EFE               	movlw	-2
  6851  0056B0  50E3               	movf	plusw1,w,c
  6852  0056B2  0F01               	addlw	1
  6853  0056B4  6E3D               	movwf	btemp,c
  6854  0056B6  0EFE               	movlw	-2
  6855  0056B8  0060  F0F7  FFE3   	movff	btemp,plusw1
  6856  0056BE  6A3D               	clrf	btemp,c
  6857  0056C0  0EFF               	movlw	-1
  6858  0056C2  50E3               	movf	plusw1,w,c
  6859  0056C4  203D               	addwfc	btemp,w,c
  6860  0056C6  6E3D               	movwf	btemp,c
  6861  0056C8  0EFF               	movlw	-1
  6862  0056CA  0060  F0F7  FFE3   	movff	btemp,plusw1
  6863  0056D0                     l9042:
  6864                           
  6865                           ; BSR set to: 0
  6866                           ;gemsecs.c: 30:  return sum;
  6867                           ;stkvar	_sum @ sp[(-4)+2]
  6868  0056D0  0EFE               	movlw	-2
  6869  0056D2  006F FF8C  F03D    	movff	plusw1,btemp
  6870  0056D8  0EFF               	movlw	-1
  6871  0056DA  006F FF8C  F03E    	movff	plusw1,btemp+1
  6872                           
  6873                           ; BSR set to: 0
  6874                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  6875  0056E0  0EF8               	movlw	248
  6876  0056E2  26E1               	addwf	fsr1l,f,c
  6877  0056E4  0EFF               	movlw	255
  6878  0056E6  22E2               	addwfc	fsr1h,f,c
  6879  0056E8  0012               	return		;funcret
  6880  0056EA                     __end_of_block_checksum:
  6881                           	opt callstack 0
  6882                           
  6883 ;; *************** function _rand *****************
  6884 ;; Defined at:
  6885 ;;		line 15 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  6886 ;; Parameters:    Size  Location     Type
  6887 ;;		None
  6888 ;; Auto vars:     Size  Location     Type
  6889 ;;		None
  6890 ;; Return value:  Size  Location     Type
  6891 ;;                  2  [STACK] int 
  6892 ;; Registers used:
  6893 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23
  6894 ;; Tracked objects:
  6895 ;;		On entry : 0/0
  6896 ;;		On exit  : 3F/0
  6897 ;;		Unchanged: 0/0
  6898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6899 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6900 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6901 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6902 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6903 ;;Total ram usage:        0 bytes
  6904 ;; Hardware stack levels used:    1
  6905 ;; Hardware stack levels required when called:    4
  6906 ;; This function calls:
  6907 ;;		___omul
  6908 ;; This function is called by:
  6909 ;;		_block_checksum
  6910 ;;		_m_protocol
  6911 ;;		_t_protocol
  6912 ;; This function uses a reentrant model
  6913 ;;
  6914                           
  6915                           	psect	text9
  6916  005188                     __ptext9:
  6917                           	opt callstack 0
  6918  005188                     _rand:
  6919                           	opt callstack 23
  6920                           
  6921                           ; BSR set to: 0
  6922                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6923                           ;incstack = 0
  6924  005188  0E2D               	movlw	45
  6925  00518A  6EE6               	movwf	postinc1,c
  6926  00518C  0E7F               	movlw	127
  6927  00518E  6EE6               	movwf	postinc1,c
  6928  005190  0E95               	movlw	149
  6929  005192  6EE6               	movwf	postinc1,c
  6930  005194  0E4C               	movlw	76
  6931  005196  6EE6               	movwf	postinc1,c
  6932  005198  0E2D               	movlw	45
  6933  00519A  6EE6               	movwf	postinc1,c
  6934  00519C  0EF4               	movlw	244
  6935  00519E  6EE6               	movwf	postinc1,c
  6936  0051A0  0E51               	movlw	81
  6937  0051A2  6EE6               	movwf	postinc1,c
  6938  0051A4  0E58               	movlw	88
  6939  0051A6  6EE6               	movwf	postinc1,c
  6940  0051A8  EE20  F0F3         	lfsr	2,_seed
  6941  0051AC  006F FF7B FFE6     	movff	postinc2,postinc1
  6942  0051B2  006F FF7B FFE6     	movff	postinc2,postinc1
  6943  0051B8  006F FF7B FFE6     	movff	postinc2,postinc1
  6944  0051BE  006F FF7B FFE6     	movff	postinc2,postinc1
  6945  0051C4  006F FF7B FFE6     	movff	postinc2,postinc1
  6946  0051CA  006F FF7B FFE6     	movff	postinc2,postinc1
  6947  0051D0  006F FF7B FFE6     	movff	postinc2,postinc1
  6948  0051D6  006F FF7B FFE6     	movff	postinc2,postinc1
  6949  0051DC  EC17  F028         	call	___omul	;wreg free
  6950  0051E0  52E5               	movf	postdec1,f,c
  6951  0051E2  006F FF9C  F054    	movff	indf1,btemp+23
  6952  0051E8  52E5               	movf	postdec1,f,c
  6953  0051EA  006F FF9C  F053    	movff	indf1,btemp+22
  6954  0051F0  52E5               	movf	postdec1,f,c
  6955  0051F2  006F FF9C  F052    	movff	indf1,btemp+21
  6956  0051F8  52E5               	movf	postdec1,f,c
  6957  0051FA  006F FF9C  F051    	movff	indf1,btemp+20
  6958  005200  52E5               	movf	postdec1,f,c
  6959  005202  006F FF9C  F050    	movff	indf1,btemp+19
  6960  005208  52E5               	movf	postdec1,f,c
  6961  00520A  006F FF9C  F04F    	movff	indf1,btemp+18
  6962  005210  52E5               	movf	postdec1,f,c
  6963  005212  006F FF9C  F04E    	movff	indf1,btemp+17
  6964  005218  52E5               	movf	postdec1,f,c
  6965  00521A  006F FF9C  F04D    	movff	indf1,btemp+16
  6966  005220  0EF8               	movlw	248
  6967  005222  26E1               	addwf	fsr1l,f,c
  6968  005224  0EFF               	movlw	255
  6969  005226  22E2               	addwfc	fsr1h,f,c
  6970  005228  0E01               	movlw	1
  6971  00522A  244D               	addwf	btemp+16,w,c
  6972  00522C  0100               	movlb	0	; () banked
  6973  00522E  6FF3               	movwf	_seed& (0+255),b
  6974  005230  0E00               	movlw	0
  6975  005232  204E               	addwfc	btemp+17,w,c
  6976  005234  6FF4               	movwf	(_seed+1)& (0+255),b
  6977  005236  0E00               	movlw	0
  6978  005238  204F               	addwfc	btemp+18,w,c
  6979  00523A  6FF5               	movwf	(_seed+2)& (0+255),b
  6980  00523C  0E00               	movlw	0
  6981  00523E  2050               	addwfc	btemp+19,w,c
  6982  005240  6FF6               	movwf	(_seed+3)& (0+255),b
  6983  005242  0E00               	movlw	0
  6984  005244  2051               	addwfc	btemp+20,w,c
  6985  005246  6FF7               	movwf	(_seed+4)& (0+255),b
  6986  005248  0E00               	movlw	0
  6987  00524A  2052               	addwfc	btemp+21,w,c
  6988  00524C  6FF8               	movwf	(_seed+5)& (0+255),b
  6989  00524E  0E00               	movlw	0
  6990  005250  2053               	addwfc	btemp+22,w,c
  6991  005252  6FF9               	movwf	(_seed+6)& (0+255),b
  6992  005254  0E00               	movlw	0
  6993  005256  2054               	addwfc	btemp+23,w,c
  6994  005258  6FFA               	movwf	(_seed+7)& (0+255),b
  6995                           
  6996                           ; BSR set to: 0
  6997  00525A  0060  F3CC  F03D   	movff	_seed,btemp
  6998  005260  0060  F3D0  F03E   	movff	_seed+1,btemp+1
  6999  005266  0060  F3D4  F03F   	movff	_seed+2,btemp+2
  7000  00526C  0060  F3D8  F040   	movff	_seed+3,btemp+3
  7001  005272  0060  F3DC  F041   	movff	_seed+4,btemp+4
  7002  005278  0060  F3E0  F042   	movff	_seed+5,btemp+5
  7003  00527E  0060  F3E4  F043   	movff	_seed+6,btemp+6
  7004  005284  0060  F3E8  F044   	movff	_seed+7,btemp+7
  7005  00528A  0E08               	movlw	8
  7006  00528C  D009               	goto	u3680
  7007  00528E                     u3685:
  7008  00528E  90D8               	bcf	status,0,c
  7009  005290  3244               	rrcf	btemp+7,f,c
  7010  005292  3243               	rrcf	btemp+6,f,c
  7011  005294  3242               	rrcf	btemp+5,f,c
  7012  005296  3241               	rrcf	btemp+4,f,c
  7013  005298  3240               	rrcf	btemp+3,f,c
  7014  00529A  323F               	rrcf	btemp+2,f,c
  7015  00529C  323E               	rrcf	btemp+1,f,c
  7016  00529E  323D               	rrcf	btemp,f,c
  7017  0052A0                     u3680:
  7018  0052A0  2EE8               	decfsz	wreg,f,c
  7019  0052A2  D7F5               	goto	u3685
  7020                           
  7021                           ; BSR set to: 0
  7022                           ; _rand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize 
      +                          = 0, vargsize = 0
  7023  0052A4  0012               	return		;funcret
  7024  0052A6                     __end_of_rand:
  7025                           	opt callstack 0
  7026                           
  7027 ;; *************** function ___omul *****************
  7028 ;; Defined at:
  7029 ;;		line 91 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/Umul64.c"
  7030 ;; Parameters:    Size  Location     Type
  7031 ;;  multiplier      8  [STACK] unsigned long long 
  7032 ;;  multiplicand    8  [STACK] unsigned long long 
  7033 ;; Auto vars:     Size  Location     Type
  7034 ;;  product         8  [STACK] unsigned long long 
  7035 ;; Return value:  Size  Location     Type
  7036 ;;                  8  [STACK] unsigned long long 
  7037 ;; Registers used:
  7038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  7039 ;; Tracked objects:
  7040 ;;		On entry : 0/0
  7041 ;;		On exit  : 0/0
  7042 ;;		Unchanged: 0/0
  7043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7048 ;;Total ram usage:        0 bytes
  7049 ;; Hardware stack levels used:    1
  7050 ;; Hardware stack levels required when called:    3
  7051 ;; This function calls:
  7052 ;;		Nothing
  7053 ;; This function is called by:
  7054 ;;		_rand
  7055 ;; This function uses a reentrant model
  7056 ;;
  7057                           
  7058                           	psect	text10
  7059  00502E                     __ptext10:
  7060                           	opt callstack 0
  7061  00502E                     ___omul:
  7062                           	opt callstack 0
  7063                           
  7064                           ; BSR set to: 0
  7065                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  7066  00502E  0E08               	movlw	8
  7067  005030  26E1               	addwf	fsr1l,f,c
  7068  005032  0E00               	movlw	0
  7069  005034  22E2               	addwfc	fsr1h,f,c
  7070                           
  7071                           ;stkvar	_product @ sp[(-8)+0]
  7072                           
  7073                           ;incstack = 0
  7074  005036  0E07               	movlw	7
  7075  005038  6E3D               	movwf	btemp,c
  7076  00503A  0EF8               	movlw	-8
  7077  00503C                     u3581:
  7078  00503C  6AE3               	clrf	plusw1,c
  7079  00503E  2AE8               	incf	wreg,f,c
  7080  005040  063D               	decf	btemp,f,c
  7081  005042  E2FC               	bc	u3581
  7082  005044                     l6114:
  7083                           
  7084                           ;stkvar	_multiplier @ sp[(-8)+-8]
  7085  005044  0EF0               	movlw	-16
  7086  005046  A0E3               	btfss	plusw1,0,c
  7087  005048  D050               	goto	l6118
  7088                           
  7089                           ;stkvar	_multiplicand @ sp[(-8)+-16]
  7090                           ;stkvar	_product @ sp[(-8)+0]
  7091  00504A  0EF8               	movlw	-8
  7092  00504C  50E3               	movf	plusw1,w,c
  7093  00504E  6E3D               	movwf	btemp,c
  7094  005050  0EE8               	movlw	-24
  7095  005052  50E3               	movf	plusw1,w,c
  7096  005054  263D               	addwf	btemp,f,c
  7097  005056  0EF8               	movlw	-8
  7098  005058  0060  F0F7  FFE3   	movff	btemp,plusw1
  7099  00505E  0EF9               	movlw	-7
  7100  005060  50E3               	movf	plusw1,w,c
  7101  005062  6E3D               	movwf	btemp,c
  7102  005064  0EE9               	movlw	-23
  7103  005066  50E3               	movf	plusw1,w,c
  7104  005068  223D               	addwfc	btemp,f,c
  7105  00506A  0EF9               	movlw	-7
  7106  00506C  0060  F0F7  FFE3   	movff	btemp,plusw1
  7107  005072  0EFA               	movlw	-6
  7108  005074  50E3               	movf	plusw1,w,c
  7109  005076  6E3D               	movwf	btemp,c
  7110  005078  0EEA               	movlw	-22
  7111  00507A  50E3               	movf	plusw1,w,c
  7112  00507C  223D               	addwfc	btemp,f,c
  7113  00507E  0EFA               	movlw	-6
  7114  005080  0060  F0F7  FFE3   	movff	btemp,plusw1
  7115  005086  0EFB               	movlw	-5
  7116  005088  50E3               	movf	plusw1,w,c
  7117  00508A  6E3D               	movwf	btemp,c
  7118  00508C  0EEB               	movlw	-21
  7119  00508E  50E3               	movf	plusw1,w,c
  7120  005090  223D               	addwfc	btemp,f,c
  7121  005092  0EFB               	movlw	-5
  7122  005094  0060  F0F7  FFE3   	movff	btemp,plusw1
  7123  00509A  0EFC               	movlw	-4
  7124  00509C  50E3               	movf	plusw1,w,c
  7125  00509E  6E3D               	movwf	btemp,c
  7126  0050A0  0EEC               	movlw	-20
  7127  0050A2  50E3               	movf	plusw1,w,c
  7128  0050A4  223D               	addwfc	btemp,f,c
  7129  0050A6  0EFC               	movlw	-4
  7130  0050A8  0060  F0F7  FFE3   	movff	btemp,plusw1
  7131  0050AE  0EFD               	movlw	-3
  7132  0050B0  50E3               	movf	plusw1,w,c
  7133  0050B2  6E3D               	movwf	btemp,c
  7134  0050B4  0EED               	movlw	-19
  7135  0050B6  50E3               	movf	plusw1,w,c
  7136  0050B8  223D               	addwfc	btemp,f,c
  7137  0050BA  0EFD               	movlw	-3
  7138  0050BC  0060  F0F7  FFE3   	movff	btemp,plusw1
  7139  0050C2  0EFE               	movlw	-2
  7140  0050C4  50E3               	movf	plusw1,w,c
  7141  0050C6  6E3D               	movwf	btemp,c
  7142  0050C8  0EEE               	movlw	-18
  7143  0050CA  50E3               	movf	plusw1,w,c
  7144  0050CC  223D               	addwfc	btemp,f,c
  7145  0050CE  0EFE               	movlw	-2
  7146  0050D0  0060  F0F7  FFE3   	movff	btemp,plusw1
  7147  0050D6  0EFF               	movlw	-1
  7148  0050D8  50E3               	movf	plusw1,w,c
  7149  0050DA  6E3D               	movwf	btemp,c
  7150  0050DC  0EEF               	movlw	-17
  7151  0050DE  50E3               	movf	plusw1,w,c
  7152  0050E0  223D               	addwfc	btemp,f,c
  7153  0050E2  0EFF               	movlw	-1
  7154  0050E4  0060  F0F7  FFE3   	movff	btemp,plusw1
  7155  0050EA                     l6118:
  7156                           
  7157                           ;stkvar	_multiplicand @ sp[(-8)+-16]
  7158  0050EA  90D8               	bcf	status,0,c
  7159  0050EC  0EE8               	movlw	-24
  7160  0050EE  36E3               	rlcf	plusw1,f,c
  7161  0050F0  0EE9               	movlw	-23
  7162  0050F2  36E3               	rlcf	plusw1,f,c
  7163  0050F4  0EEA               	movlw	-22
  7164  0050F6  36E3               	rlcf	plusw1,f,c
  7165  0050F8  0EEB               	movlw	-21
  7166  0050FA  36E3               	rlcf	plusw1,f,c
  7167  0050FC  0EEC               	movlw	-20
  7168  0050FE  36E3               	rlcf	plusw1,f,c
  7169  005100  0EED               	movlw	-19
  7170  005102  36E3               	rlcf	plusw1,f,c
  7171  005104  0EEE               	movlw	-18
  7172  005106  36E3               	rlcf	plusw1,f,c
  7173  005108  0EEF               	movlw	-17
  7174  00510A  36E3               	rlcf	plusw1,f,c
  7175                           
  7176                           ;stkvar	_multiplier @ sp[(-8)+-8]
  7177  00510C  90D8               	bcf	status,0,c
  7178  00510E  0EF7               	movlw	-9
  7179  005110  32E3               	rrcf	plusw1,f,c
  7180  005112  0EF6               	movlw	-10
  7181  005114  32E3               	rrcf	plusw1,f,c
  7182  005116  0EF5               	movlw	-11
  7183  005118  32E3               	rrcf	plusw1,f,c
  7184  00511A  0EF4               	movlw	-12
  7185  00511C  32E3               	rrcf	plusw1,f,c
  7186  00511E  0EF3               	movlw	-13
  7187  005120  32E3               	rrcf	plusw1,f,c
  7188  005122  0EF2               	movlw	-14
  7189  005124  32E3               	rrcf	plusw1,f,c
  7190  005126  0EF1               	movlw	-15
  7191  005128  32E3               	rrcf	plusw1,f,c
  7192  00512A  0EF0               	movlw	-16
  7193  00512C  32E3               	rrcf	plusw1,f,c
  7194                           
  7195                           ;stkvar	_multiplier @ sp[(-8)+-8]
  7196  00512E  0EF0               	movlw	-16
  7197  005130  50E3               	movf	plusw1,w,c
  7198  005132  E188               	bnz	l6114
  7199  005134  0EF1               	movlw	-15
  7200  005136  50E3               	movf	plusw1,w,c
  7201  005138  E185               	bnz	l6114
  7202  00513A  0EF2               	movlw	-14
  7203  00513C  50E3               	movf	plusw1,w,c
  7204  00513E  E182               	bnz	l6114
  7205  005140  0EF3               	movlw	-13
  7206  005142  50E3               	movf	plusw1,w,c
  7207  005144  E10C               	bnz	u3601
  7208  005146  0EF4               	movlw	-12
  7209  005148  50E3               	movf	plusw1,w,c
  7210  00514A  E109               	bnz	u3601
  7211  00514C  0EF5               	movlw	-11
  7212  00514E  50E3               	movf	plusw1,w,c
  7213  005150  E106               	bnz	u3601
  7214  005152  0EF6               	movlw	-10
  7215  005154  50E3               	movf	plusw1,w,c
  7216  005156  E103               	bnz	u3601
  7217  005158  0EF7               	movlw	-9
  7218  00515A  50E3               	movf	plusw1,w,c
  7219  00515C  A4D8               	btfss	status,2,c
  7220  00515E                     u3601:
  7221  00515E  D772               	goto	l6114
  7222                           
  7223                           ;stkvar	_product @ sp[(-8)+0]
  7224  005160  0EF8               	movlw	248
  7225  005162  24E1               	addwf	fsr1l,w,c
  7226  005164  6ED9               	movwf	fsr2l,c
  7227  005166  0EFF               	movlw	255
  7228  005168  20E2               	addwfc	fsr1h,w,c
  7229  00516A  6EDA               	movwf	fsr2h,c
  7230                           
  7231                           ;stkvar	?___omul @ sp[(-8)+-8]
  7232  00516C  0E08               	movlw	8
  7233  00516E  6E3D               	movwf	btemp,c
  7234  005170  0EF0               	movlw	-16
  7235  005172                     us361999:
  7236  005172  006F FF7B FFE3     	movff	postinc2,plusw1
  7237  005178  28E8               	incf	wreg,w,c
  7238  00517A  2E3D               	decfsz	btemp,f,c
  7239  00517C  D7FA               	bra	us361999
  7240                           
  7241                           ; ___omul: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsi
      +                          ze = 16, vargsize = 0
  7242  00517E  0EF8               	movlw	248
  7243  005180  26E1               	addwf	fsr1l,f,c
  7244  005182  0EFF               	movlw	255
  7245  005184  22E2               	addwfc	fsr1h,f,c
  7246  005186  0012               	return		;funcret
  7247  005188                     __end_of___omul:
  7248                           	opt callstack 0
  7249                           
  7250 ;; *************** function _UART2_put_buffer *****************
  7251 ;; Defined at:
  7252 ;;		line 257 in file "mcc_generated_files/uart2.c"
  7253 ;; Parameters:    Size  Location     Type
  7254 ;;  bufData         1  [STACK] unsigned char 
  7255 ;; Auto vars:     Size  Location     Type
  7256 ;;		None
  7257 ;; Return value:  Size  Location     Type
  7258 ;;                  1  [STACK] void 
  7259 ;; Registers used:
  7260 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7261 ;; Tracked objects:
  7262 ;;		On entry : 0/0
  7263 ;;		On exit  : 3F/39
  7264 ;;		Unchanged: 0/0
  7265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7266 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7267 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7268 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7269 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7270 ;;Total ram usage:        0 bytes
  7271 ;; Hardware stack levels used:    1
  7272 ;; Hardware stack levels required when called:    3
  7273 ;; This function calls:
  7274 ;;		Nothing
  7275 ;; This function is called by:
  7276 ;;		_main
  7277 ;;		_secs_send
  7278 ;; This function uses a reentrant model
  7279 ;;
  7280                           
  7281                           	psect	text11
  7282  0068D0                     __ptext11:
  7283                           	opt callstack 0
  7284  0068D0                     _UART2_put_buffer:
  7285                           	opt callstack 25
  7286                           
  7287                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  7288                           
  7289                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7290                           ;incstack = 0
  7291  0068D0  0139               	movlb	57	; () banked
  7292  0068D2  9596               	bcf	150,2,b	;volatile
  7293                           
  7294                           ; BSR set to: 57
  7295                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  7296                           ;stkvar	_bufData @ sp[(0)+-1]
  7297  0068D4  0E00               	movlw	low _uart2RxBuffer
  7298  0068D6  2433               	addwf	_uart2RxHead,w,c	;volatile
  7299  0068D8  6ED9               	movwf	fsr2l,c
  7300  0068DA  6ADA               	clrf	fsr2h,c
  7301  0068DC  0E02               	movlw	high _uart2RxBuffer
  7302  0068DE  22DA               	addwfc	fsr2h,f,c
  7303  0068E0  0EFF               	movlw	-1
  7304  0068E2  006F FF8F FFDF     	movff	plusw1,indf2
  7305                           
  7306                           ; BSR set to: 57
  7307  0068E8  2A33               	incf	_uart2RxHead,f,c	;volatile
  7308                           
  7309                           ; BSR set to: 57
  7310                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  7311  0068EA  0E3F               	movlw	63
  7312  0068EC  6433               	cpfsgt	_uart2RxHead,c
  7313  0068EE  D001               	goto	l6276
  7314                           
  7315                           ; BSR set to: 57
  7316                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  7317  0068F0  6A33               	clrf	_uart2RxHead,c	;volatile
  7318  0068F2                     l6276:
  7319                           
  7320                           ; BSR set to: 57
  7321                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  7322  0068F2  2A31               	incf	_uart2RxCount,f,c	;volatile
  7323                           
  7324                           ; BSR set to: 57
  7325                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  7326  0068F4  8596               	bsf	150,2,b	;volatile
  7327                           
  7328                           ; BSR set to: 57
  7329                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7330  0068F6  52E5               	movf	postdec1,f,c
  7331  0068F8  0012               	return		;funcret
  7332  0068FA                     __end_of_UART2_put_buffer:
  7333                           	opt callstack 0
  7334                           
  7335 ;; *************** function _UART2_is_tx_ready *****************
  7336 ;; Defined at:
  7337 ;;		line 142 in file "mcc_generated_files/uart2.c"
  7338 ;; Parameters:    Size  Location     Type
  7339 ;;		None
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;		None
  7342 ;; Return value:  Size  Location     Type
  7343 ;;                  1  [STACK] unsigned char 
  7344 ;; Registers used:
  7345 ;;		btemp
  7346 ;; Tracked objects:
  7347 ;;		On entry : 0/0
  7348 ;;		On exit  : 0/0
  7349 ;;		Unchanged: 0/0
  7350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7355 ;;Total ram usage:        0 bytes
  7356 ;; Hardware stack levels used:    1
  7357 ;; Hardware stack levels required when called:    3
  7358 ;; This function calls:
  7359 ;;		Nothing
  7360 ;; This function is called by:
  7361 ;;		_secs_send
  7362 ;; This function uses a reentrant model
  7363 ;;
  7364                           
  7365                           	psect	text12
  7366  006EE6                     __ptext12:
  7367                           	opt callstack 0
  7368  006EE6                     _UART2_is_tx_ready:
  7369                           	opt callstack 25
  7370                           
  7371                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  7372                           
  7373                           ; BSR set to: 57
  7374                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7375                           ;incstack = 0
  7376  006EE6  0060  F0D0  F03D   	movff	_uart2TxBufferRemaining,btemp	;volatile
  7377                           
  7378                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7379  006EEC  0012               	return		;funcret
  7380  006EEE                     __end_of_UART2_is_tx_ready:
  7381                           	opt callstack 0
  7382                           
  7383 ;; *************** function _UART2_Write *****************
  7384 ;; Defined at:
  7385 ;;		line 172 in file "mcc_generated_files/uart2.c"
  7386 ;; Parameters:    Size  Location     Type
  7387 ;;  txData          1  [STACK] unsigned char 
  7388 ;; Auto vars:     Size  Location     Type
  7389 ;;		None
  7390 ;; Return value:  Size  Location     Type
  7391 ;;                  1  [STACK] void 
  7392 ;; Registers used:
  7393 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7394 ;; Tracked objects:
  7395 ;;		On entry : 0/0
  7396 ;;		On exit  : 3F/39
  7397 ;;		Unchanged: 0/0
  7398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7403 ;;Total ram usage:        0 bytes
  7404 ;; Hardware stack levels used:    1
  7405 ;; Hardware stack levels required when called:    3
  7406 ;; This function calls:
  7407 ;;		Nothing
  7408 ;; This function is called by:
  7409 ;;		_secs_send
  7410 ;; This function uses a reentrant model
  7411 ;;
  7412                           
  7413                           	psect	text13
  7414  006656                     __ptext13:
  7415                           	opt callstack 0
  7416  006656                     _UART2_Write:
  7417                           	opt callstack 25
  7418                           
  7419                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  7420                           
  7421                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  7422                           
  7423                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7424                           ;incstack = 0
  7425  006656  5034               	movf	_uart2TxBufferRemaining,w,c	;volatile
  7426  006658  B4D8               	btfsc	status,2,c
  7427  00665A  D7FD               	goto	_UART2_Write
  7428                           
  7429                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  7430  00665C  0139               	movlb	57	; () banked
  7431  00665E  B796               	btfsc	150,3,b	;volatile
  7432  006660  D005               	goto	l699
  7433                           
  7434                           ; BSR set to: 57
  7435                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  7436                           ;stkvar	_txData @ sp[(0)+-1]
  7437  006662  0EFF               	movlw	-1
  7438  006664  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  7439                           
  7440                           ;mcc_generated_files/uart2.c: 181:     }
  7441  00666A  D011               	goto	l6264
  7442  00666C                     l699:
  7443                           
  7444                           ; BSR set to: 57
  7445                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  7446  00666C  9796               	bcf	150,3,b	;volatile
  7447                           
  7448                           ; BSR set to: 57
  7449                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  7450                           ;stkvar	_txData @ sp[(0)+-1]
  7451  00666E  0E00               	movlw	low _uart2TxBuffer
  7452  006670  2436               	addwf	_uart2TxHead,w,c	;volatile
  7453  006672  6ED9               	movwf	fsr2l,c
  7454  006674  6ADA               	clrf	fsr2h,c
  7455  006676  0E03               	movlw	high _uart2TxBuffer
  7456  006678  22DA               	addwfc	fsr2h,f,c
  7457  00667A  0EFF               	movlw	-1
  7458  00667C  006F FF8F FFDF     	movff	plusw1,indf2
  7459                           
  7460                           ; BSR set to: 57
  7461  006682  2A36               	incf	_uart2TxHead,f,c	;volatile
  7462                           
  7463                           ; BSR set to: 57
  7464                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  7465  006684  0E3F               	movlw	63
  7466  006686  6436               	cpfsgt	_uart2TxHead,c
  7467  006688  D001               	goto	l6262
  7468                           
  7469                           ; BSR set to: 57
  7470                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  7471  00668A  6A36               	clrf	_uart2TxHead,c	;volatile
  7472  00668C                     l6262:
  7473                           
  7474                           ; BSR set to: 57
  7475                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  7476  00668C  0634               	decf	_uart2TxBufferRemaining,f,c	;volatile
  7477  00668E                     l6264:
  7478                           
  7479                           ; BSR set to: 57
  7480                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  7481  00668E  8796               	bsf	150,3,b	;volatile
  7482                           
  7483                           ; BSR set to: 57
  7484                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7485  006690  52E5               	movf	postdec1,f,c
  7486  006692  0012               	return		;funcret
  7487  006694                     __end_of_UART2_Write:
  7488                           	opt callstack 0
  7489                           
  7490 ;; *************** function _UART1_put_buffer *****************
  7491 ;; Defined at:
  7492 ;;		line 250 in file "mcc_generated_files/uart1.c"
  7493 ;; Parameters:    Size  Location     Type
  7494 ;;  bufData         1  [STACK] unsigned char 
  7495 ;; Auto vars:     Size  Location     Type
  7496 ;;		None
  7497 ;; Return value:  Size  Location     Type
  7498 ;;                  1  [STACK] void 
  7499 ;; Registers used:
  7500 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7501 ;; Tracked objects:
  7502 ;;		On entry : 0/0
  7503 ;;		On exit  : 3F/39
  7504 ;;		Unchanged: 0/0
  7505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7506 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7510 ;;Total ram usage:        0 bytes
  7511 ;; Hardware stack levels used:    1
  7512 ;; Hardware stack levels required when called:    3
  7513 ;; This function calls:
  7514 ;;		Nothing
  7515 ;; This function is called by:
  7516 ;;		_main
  7517 ;;		_t_protocol
  7518 ;;		_secs_send
  7519 ;; This function uses a reentrant model
  7520 ;;
  7521                           
  7522                           	psect	text14
  7523  0068FA                     __ptext14:
  7524                           	opt callstack 0
  7525  0068FA                     _UART1_put_buffer:
  7526                           	opt callstack 25
  7527                           
  7528                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  7529                           
  7530                           ; BSR set to: 57
  7531                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7532                           ;incstack = 0
  7533  0068FA  0139               	movlb	57	; () banked
  7534  0068FC  9793               	bcf	147,3,b	;volatile
  7535                           
  7536                           ; BSR set to: 57
  7537                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  7538                           ;stkvar	_bufData @ sp[(0)+-1]
  7539  0068FE  0E40               	movlw	low _uart1RxBuffer
  7540  006900  2439               	addwf	_uart1RxHead,w,c	;volatile
  7541  006902  6ED9               	movwf	fsr2l,c
  7542  006904  6ADA               	clrf	fsr2h,c
  7543  006906  0E02               	movlw	high _uart1RxBuffer
  7544  006908  22DA               	addwfc	fsr2h,f,c
  7545  00690A  0EFF               	movlw	-1
  7546  00690C  006F FF8F FFDF     	movff	plusw1,indf2
  7547                           
  7548                           ; BSR set to: 57
  7549  006912  2A39               	incf	_uart1RxHead,f,c	;volatile
  7550                           
  7551                           ; BSR set to: 57
  7552                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  7553  006914  0E3F               	movlw	63
  7554  006916  6439               	cpfsgt	_uart1RxHead,c
  7555  006918  D001               	goto	l6236
  7556                           
  7557                           ; BSR set to: 57
  7558                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  7559  00691A  6A39               	clrf	_uart1RxHead,c	;volatile
  7560  00691C                     l6236:
  7561                           
  7562                           ; BSR set to: 57
  7563                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  7564  00691C  2A37               	incf	_uart1RxCount,f,c	;volatile
  7565                           
  7566                           ; BSR set to: 57
  7567                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  7568  00691E  8793               	bsf	147,3,b	;volatile
  7569                           
  7570                           ; BSR set to: 57
  7571                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  7572  006920  52E5               	movf	postdec1,f,c
  7573  006922  0012               	return		;funcret
  7574  006924                     __end_of_UART1_put_buffer:
  7575                           	opt callstack 0
  7576                           
  7577 ;; *************** function _UART1_is_tx_ready *****************
  7578 ;; Defined at:
  7579 ;;		line 151 in file "mcc_generated_files/uart1.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;		None
  7582 ;; Auto vars:     Size  Location     Type
  7583 ;;		None
  7584 ;; Return value:  Size  Location     Type
  7585 ;;                  1  [STACK] unsigned char 
  7586 ;; Registers used:
  7587 ;;		btemp
  7588 ;; Tracked objects:
  7589 ;;		On entry : 0/0
  7590 ;;		On exit  : 0/0
  7591 ;;		Unchanged: 0/0
  7592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7597 ;;Total ram usage:        0 bytes
  7598 ;; Hardware stack levels used:    1
  7599 ;; Hardware stack levels required when called:    3
  7600 ;; This function calls:
  7601 ;;		Nothing
  7602 ;; This function is called by:
  7603 ;;		_secs_send
  7604 ;; This function uses a reentrant model
  7605 ;;
  7606                           
  7607                           	psect	text15
  7608  006EEE                     __ptext15:
  7609                           	opt callstack 0
  7610  006EEE                     _UART1_is_tx_ready:
  7611                           	opt callstack 25
  7612                           
  7613                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  7614                           
  7615                           ; BSR set to: 57
  7616                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7617                           ;incstack = 0
  7618  006EEE  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  7619                           
  7620                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7621  006EF4  0012               	return		;funcret
  7622  006EF6                     __end_of_UART1_is_tx_ready:
  7623                           	opt callstack 0
  7624                           
  7625 ;; *************** function _UART1_Write *****************
  7626 ;; Defined at:
  7627 ;;		line 179 in file "mcc_generated_files/uart1.c"
  7628 ;; Parameters:    Size  Location     Type
  7629 ;;  txData          1  [STACK] unsigned char 
  7630 ;; Auto vars:     Size  Location     Type
  7631 ;;		None
  7632 ;; Return value:  Size  Location     Type
  7633 ;;                  1  [STACK] void 
  7634 ;; Registers used:
  7635 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7636 ;; Tracked objects:
  7637 ;;		On entry : 0/0
  7638 ;;		On exit  : 3F/39
  7639 ;;		Unchanged: 0/0
  7640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7645 ;;Total ram usage:        0 bytes
  7646 ;; Hardware stack levels used:    1
  7647 ;; Hardware stack levels required when called:    3
  7648 ;; This function calls:
  7649 ;;		Nothing
  7650 ;; This function is called by:
  7651 ;;		_r_protocol
  7652 ;;		_t_protocol
  7653 ;;		_secs_send
  7654 ;; This function uses a reentrant model
  7655 ;;
  7656                           
  7657                           	psect	text16
  7658  006694                     __ptext16:
  7659                           	opt callstack 0
  7660  006694                     _UART1_Write:
  7661                           	opt callstack 25
  7662                           
  7663                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  7664                           
  7665                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  7666                           
  7667                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7668                           ;incstack = 0
  7669  006694  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  7670  006696  B4D8               	btfsc	status,2,c
  7671  006698  D7FD               	goto	_UART1_Write
  7672                           
  7673                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  7674  00669A  0139               	movlb	57	; () banked
  7675  00669C  B993               	btfsc	147,4,b	;volatile
  7676  00669E  D005               	goto	l579
  7677                           
  7678                           ; BSR set to: 57
  7679                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  7680                           ;stkvar	_txData @ sp[(0)+-1]
  7681  0066A0  0EFF               	movlw	-1
  7682  0066A2  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  7683                           
  7684                           ;mcc_generated_files/uart1.c: 186:  } else {
  7685  0066A8  D011               	goto	l6224
  7686  0066AA                     l579:
  7687                           
  7688                           ; BSR set to: 57
  7689                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  7690  0066AA  9993               	bcf	147,4,b	;volatile
  7691                           
  7692                           ; BSR set to: 57
  7693                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  7694                           ;stkvar	_txData @ sp[(0)+-1]
  7695  0066AC  0E40               	movlw	low _uart1TxBuffer
  7696  0066AE  243C               	addwf	_uart1TxHead,w,c	;volatile
  7697  0066B0  6ED9               	movwf	fsr2l,c
  7698  0066B2  6ADA               	clrf	fsr2h,c
  7699  0066B4  0E03               	movlw	high _uart1TxBuffer
  7700  0066B6  22DA               	addwfc	fsr2h,f,c
  7701  0066B8  0EFF               	movlw	-1
  7702  0066BA  006F FF8F FFDF     	movff	plusw1,indf2
  7703                           
  7704                           ; BSR set to: 57
  7705  0066C0  2A3C               	incf	_uart1TxHead,f,c	;volatile
  7706                           
  7707                           ; BSR set to: 57
  7708                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  7709  0066C2  0E3F               	movlw	63
  7710  0066C4  643C               	cpfsgt	_uart1TxHead,c
  7711  0066C6  D001               	goto	l6222
  7712                           
  7713                           ; BSR set to: 57
  7714                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  7715  0066C8  6A3C               	clrf	_uart1TxHead,c	;volatile
  7716  0066CA                     l6222:
  7717                           
  7718                           ; BSR set to: 57
  7719                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  7720  0066CA  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  7721  0066CC                     l6224:
  7722                           
  7723                           ; BSR set to: 57
  7724                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  7725  0066CC  8993               	bsf	147,4,b	;volatile
  7726                           
  7727                           ; BSR set to: 57
  7728                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  7729  0066CE  52E5               	movf	postdec1,f,c
  7730  0066D0  0012               	return		;funcret
  7731  0066D2                     __end_of_UART1_Write:
  7732                           	opt callstack 0
  7733                           
  7734 ;; *************** function _secs_gem_state *****************
  7735 ;; Defined at:
  7736 ;;		line 668 in file "gemsecs.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  stream          1  [STACK] unsigned char 
  7739 ;;  function        1  [STACK] unsigned char 
  7740 ;; Auto vars:     Size  Location     Type
  7741 ;;		None
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  1  [STACK] enum E16164
  7744 ;; Registers used:
  7745 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7746 ;; Tracked objects:
  7747 ;;		On entry : 3F/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7755 ;;Total ram usage:        0 bytes
  7756 ;; Hardware stack levels used:    1
  7757 ;; Hardware stack levels required when called:    4
  7758 ;; This function calls:
  7759 ;;		_StartTimer
  7760 ;; This function is called by:
  7761 ;;		_m_protocol
  7762 ;;		_r_protocol
  7763 ;; This function uses a reentrant model
  7764 ;;
  7765                           
  7766                           	psect	text17
  7767  0058D6                     __ptext17:
  7768                           	opt callstack 0
  7769  0058D6                     _secs_gem_state:
  7770                           	opt callstack 25
  7771                           
  7772                           ;gemsecs.c: 668: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          669: {;gemsecs.c: 670:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 672:  sw
      +                          itch (stream) {
  7773                           
  7774                           ; BSR set to: 57
  7775                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7776                           ;incstack = 0
  7777  0058D6  D059               	goto	l6908
  7778  0058D8                     l6860:
  7779                           
  7780                           ;gemsecs.c: 679:    if (block != GEM_STATE_REMOTE)
  7781  0058D8  0E04               	movlw	4
  7782  0058DA  182B               	xorwf	secs_gem_state@block,w,c
  7783  0058DC  B4D8               	btfsc	status,2,c
  7784  0058DE  D008               	goto	l6864
  7785                           
  7786                           ;gemsecs.c: 680:     StartTimer(TMR_HBIO, 10000);
  7787  0058E0  0E10               	movlw	16
  7788  0058E2  6EE6               	movwf	postinc1,c
  7789  0058E4  0E27               	movlw	39
  7790  0058E6  6EE6               	movwf	postinc1,c
  7791  0058E8  0E06               	movlw	6
  7792  0058EA  6EE6               	movwf	postinc1,c
  7793  0058EC  ECEB  F032         	call	_StartTimer	;wreg free
  7794  0058F0                     l6864:
  7795                           
  7796                           ;gemsecs.c: 682:    block = GEM_STATE_REMOTE;
  7797  0058F0  0E04               	movlw	4
  7798  0058F2                     L19:
  7799  0058F2  6E2B               	movwf	secs_gem_state@block,c
  7800                           
  7801                           ;gemsecs.c: 683:    V.ticker = 0;
  7802  0058F4  0100               	movlb	0	; () banked
  7803  0058F6  6BC3               	clrf	(_V+99)& (0+255),b	;volatile
  7804                           
  7805                           ;gemsecs.c: 685:    break;
  7806  0058F8  D05B               	goto	l6910
  7807  0058FA                     l6868:
  7808                           
  7809                           ;gemsecs.c: 690:    block = GEM_STATE_COMM;
  7810  0058FA  0E01               	movlw	1
  7811  0058FC  6E2B               	movwf	secs_gem_state@block,c
  7812                           
  7813                           ;gemsecs.c: 691:    V.ticker = 15;
  7814  0058FE  0E0F               	movlw	15
  7815  005900  D041               	goto	L21
  7816  005902                     l6870:
  7817                           
  7818                           ;gemsecs.c: 697:    block = GEM_STATE_OFFLINE;
  7819  005902  0E02               	movlw	2
  7820  005904  D7F6               	goto	L19
  7821  005906                     l6874:
  7822                           
  7823                           ;gemsecs.c: 704:    block = GEM_STATE_ONLINE;
  7824  005906  0E03               	movlw	3
  7825  005908  D7F4               	goto	L19
  7826  00590A                     l6878:
  7827                           
  7828                           ;gemsecs.c: 708:    if (block == GEM_STATE_DISABLE) {
  7829  00590A  502B               	movf	secs_gem_state@block,w,c
  7830  00590C  B4D8               	btfsc	status,2,c
  7831  00590E  D7F5               	goto	l6868
  7832  005910  D04F               	goto	l6910
  7833  005912                     l6884:
  7834                           
  7835                           ;stkvar	_function @ sp[(0)+-2]
  7836  005912  0EFE               	movlw	-2
  7837  005914  50E3               	movf	plusw1,w,c
  7838  005916  6E47               	movwf	btemp+10,c
  7839  005918  6A48               	clrf	btemp+11,c
  7840                           
  7841                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7842                           ; Switch size 1, requested type "simple"
  7843                           ; Number of cases is 1, Range of values is 0 to 0
  7844                           ; switch strategies available:
  7845                           ; Name         Instructions Cycles
  7846                           ; simple_byte            4     3 (average)
  7847                           ;	Chosen strategy is simple_byte
  7848  00591A  5048               	movf	btemp+11,w,c
  7849  00591C  0A00               	xorlw	0	; case 0
  7850  00591E  A4D8               	btfss	status,2,c
  7851  005920  D7F4               	goto	l6878
  7852                           
  7853                           ; Switch size 1, requested type "simple"
  7854                           ; Number of cases is 8, Range of values is 1 to 18
  7855                           ; switch strategies available:
  7856                           ; Name         Instructions Cycles
  7857                           ; simple_byte           25    13 (average)
  7858                           ;	Chosen strategy is simple_byte
  7859  005922  5047               	movf	btemp+10,w,c
  7860  005924  0A01               	xorlw	1	; case 1
  7861  005926  B4D8               	btfsc	status,2,c
  7862  005928  D7D7               	goto	l6860
  7863  00592A  0A03               	xorlw	3	; case 2
  7864  00592C  B4D8               	btfsc	status,2,c
  7865  00592E  D7D4               	goto	l6860
  7866  005930  0A0F               	xorlw	15	; case 13
  7867  005932  B4D8               	btfsc	status,2,c
  7868  005934  D7E2               	goto	l6868
  7869  005936  0A03               	xorlw	3	; case 14
  7870  005938  B4D8               	btfsc	status,2,c
  7871  00593A  D7DF               	goto	l6868
  7872  00593C  0A01               	xorlw	1	; case 15
  7873  00593E  B4D8               	btfsc	status,2,c
  7874  005940  D7E0               	goto	l6870
  7875  005942  0A1F               	xorlw	31	; case 16
  7876  005944  B4D8               	btfsc	status,2,c
  7877  005946  D7DD               	goto	l6870
  7878  005948  0A01               	xorlw	1	; case 17
  7879  00594A  B4D8               	btfsc	status,2,c
  7880  00594C  D7DC               	goto	l6874
  7881  00594E  0A03               	xorlw	3	; case 18
  7882  005950  B4D8               	btfsc	status,2,c
  7883  005952  D7D9               	goto	l6874
  7884  005954  D7DA               	goto	l6878
  7885  005956                     l6886:
  7886                           
  7887                           ;gemsecs.c: 718:    block = GEM_STATE_ALARM;
  7888  005956  0E05               	movlw	5
  7889  005958  6E2B               	movwf	secs_gem_state@block,c
  7890                           
  7891                           ;gemsecs.c: 719:    if (V.ticker != 45)
  7892  00595A  0E2D               	movlw	45
  7893  00595C  0100               	movlb	0	; () banked
  7894  00595E  19C3               	xorwf	(_V+99)& (0+255),w,b	;volatile
  7895  005960  B4D8               	btfsc	status,2,c
  7896  005962  D026               	goto	l6910
  7897  005964                     u4070:
  7898                           
  7899                           ; BSR set to: 0
  7900                           ;gemsecs.c: 720:     V.ticker = 15;
  7901  005964  0E0F               	movlw	15
  7902  005966  D00F               	goto	L20
  7903  005968                     l6894:
  7904                           
  7905                           ;gemsecs.c: 727:    block = GEM_STATE_ERROR;
  7906  005968  0E06               	movlw	6
  7907  00596A  6E2B               	movwf	secs_gem_state@block,c
  7908                           
  7909                           ;gemsecs.c: 728:    if (V.ticker != 45)
  7910  00596C  0E2D               	movlw	45
  7911  00596E  0100               	movlb	0	; () banked
  7912  005970  19C3               	xorwf	(_V+99)& (0+255),w,b	;volatile
  7913  005972  A4D8               	btfss	status,2,c
  7914  005974  D7F7               	goto	u4070
  7915  005976  D01C               	goto	l6910
  7916  005978                     l6902:
  7917                           
  7918                           ;gemsecs.c: 734:   if (block == GEM_STATE_DISABLE) {
  7919  005978  502B               	movf	secs_gem_state@block,w,c
  7920  00597A  A4D8               	btfss	status,2,c
  7921  00597C  D019               	goto	l6910
  7922                           
  7923                           ;gemsecs.c: 735:    block = GEM_STATE_COMM;
  7924  00597E  0E01               	movlw	1
  7925  005980  6E2B               	movwf	secs_gem_state@block,c
  7926                           
  7927                           ;gemsecs.c: 736:    V.ticker = 45;
  7928  005982  0E2D               	movlw	45
  7929  005984                     L21:
  7930  005984  0100               	movlb	0	; () banked
  7931  005986                     L20:
  7932  005986  6FC3               	movwf	(_V+99)& (0+255),b	;volatile
  7933  005988  D013               	goto	l6910
  7934  00598A                     l6908:
  7935                           
  7936                           ;stkvar	_stream @ sp[(0)+-1]
  7937  00598A  0EFF               	movlw	-1
  7938  00598C  50E3               	movf	plusw1,w,c
  7939  00598E  6E47               	movwf	btemp+10,c
  7940  005990  6A48               	clrf	btemp+11,c
  7941                           
  7942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7943                           ; Switch size 1, requested type "simple"
  7944                           ; Number of cases is 1, Range of values is 0 to 0
  7945                           ; switch strategies available:
  7946                           ; Name         Instructions Cycles
  7947                           ; simple_byte            4     3 (average)
  7948                           ;	Chosen strategy is simple_byte
  7949  005992  5048               	movf	btemp+11,w,c
  7950  005994  0A00               	xorlw	0	; case 0
  7951  005996  A4D8               	btfss	status,2,c
  7952  005998  D7EF               	goto	l6902
  7953                           
  7954                           ; Switch size 1, requested type "simple"
  7955                           ; Number of cases is 3, Range of values is 1 to 9
  7956                           ; switch strategies available:
  7957                           ; Name         Instructions Cycles
  7958                           ; simple_byte           10     6 (average)
  7959                           ;	Chosen strategy is simple_byte
  7960  00599A  5047               	movf	btemp+10,w,c
  7961  00599C  0A01               	xorlw	1	; case 1
  7962  00599E  B4D8               	btfsc	status,2,c
  7963  0059A0  D7B8               	goto	l6884
  7964  0059A2  0A04               	xorlw	4	; case 5
  7965  0059A4  B4D8               	btfsc	status,2,c
  7966  0059A6  D7D7               	goto	l6886
  7967  0059A8  0A0C               	xorlw	12	; case 9
  7968  0059AA  B4D8               	btfsc	status,2,c
  7969  0059AC  D7DD               	goto	l6894
  7970  0059AE  D7E4               	goto	l6902
  7971  0059B0                     l6910:
  7972                           
  7973                           ;gemsecs.c: 741:  return(block);
  7974  0059B0  0060  F0AC  F03D   	movff	secs_gem_state@block,btemp
  7975                           
  7976                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  7977  0059B6  52E5               	movf	postdec1,f,c
  7978  0059B8  52E5               	movf	postdec1,f,c
  7979  0059BA  0012               	return		;funcret
  7980  0059BC                     __end_of_secs_gem_state:
  7981                           	opt callstack 0
  7982                           
  7983 ;; *************** function _run_checksum *****************
  7984 ;; Defined at:
  7985 ;;		line 36 in file "gemsecs.c"
  7986 ;; Parameters:    Size  Location     Type
  7987 ;;  byte_block      1  [STACK] unsigned char 
  7988 ;;  clear           1  [STACK] _Bool 
  7989 ;; Auto vars:     Size  Location     Type
  7990 ;;		None
  7991 ;; Return value:  Size  Location     Type
  7992 ;;                  2  [STACK] unsigned short 
  7993 ;; Registers used:
  7994 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  7995 ;; Tracked objects:
  7996 ;;		On entry : 6/39
  7997 ;;		On exit  : 0/0
  7998 ;;		Unchanged: 0/0
  7999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8004 ;;Total ram usage:        0 bytes
  8005 ;; Hardware stack levels used:    1
  8006 ;; Hardware stack levels required when called:    3
  8007 ;; This function calls:
  8008 ;;		Nothing
  8009 ;; This function is called by:
  8010 ;;		_m_protocol
  8011 ;;		_r_protocol
  8012 ;; This function uses a reentrant model
  8013 ;;
  8014                           
  8015                           	psect	text18
  8016  006924                     __ptext18:
  8017                           	opt callstack 0
  8018  006924                     _run_checksum:
  8019                           	opt callstack 26
  8020                           
  8021                           ;gemsecs.c: 36: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 37: {;
      +                          gemsecs.c: 38:  static uint16_t sum = 0;;gemsecs.c: 40:  if (clear)
  8022                           ;stkvar	_clear @ sp[(0)+-2]
  8023                           
  8024                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8025                           ;incstack = 0
  8026  006924  0EFE               	movlw	-2
  8027  006926  50E3               	movf	plusw1,w,c
  8028  006928  B4D8               	btfsc	status,2,c
  8029  00692A  D002               	goto	l6786
  8030                           
  8031                           ;gemsecs.c: 41:   sum = 0;
  8032  00692C  6A25               	clrf	run_checksum@sum,c
  8033  00692E  6A26               	clrf	run_checksum@sum+1,c
  8034  006930                     l6786:
  8035                           
  8036                           ;gemsecs.c: 43:  sum += byte_block;
  8037                           ;stkvar	_byte_block @ sp[(0)+-1]
  8038  006930  0EFF               	movlw	-1
  8039  006932  50E3               	movf	plusw1,w,c
  8040  006934  2625               	addwf	run_checksum@sum,f,c
  8041  006936  0E00               	movlw	0
  8042  006938  2226               	addwfc	run_checksum@sum+1,f,c
  8043                           
  8044                           ;gemsecs.c: 44:  return sum;
  8045  00693A  0060  F094  F03D   	movff	run_checksum@sum,btemp
  8046  006940  0060  F098  F03E   	movff	run_checksum@sum+1,btemp+1
  8047                           
  8048                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  8049  006946  52E5               	movf	postdec1,f,c
  8050  006948  52E5               	movf	postdec1,f,c
  8051  00694A  0012               	return		;funcret
  8052  00694C                     __end_of_run_checksum:
  8053                           	opt callstack 0
  8054                           
  8055 ;; *************** function _WaitMs *****************
  8056 ;; Defined at:
  8057 ;;		line 32 in file "timers.c"
  8058 ;; Parameters:    Size  Location     Type
  8059 ;;  numMilliseco    2  [STACK] unsigned short 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;		None
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  1  [STACK] void 
  8064 ;; Registers used:
  8065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8075 ;;Total ram usage:        0 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:    4
  8078 ;; This function calls:
  8079 ;;		_StartTimer
  8080 ;;		_TimerDone
  8081 ;; This function is called by:
  8082 ;;		_main
  8083 ;;		_m_protocol
  8084 ;;		_r_protocol
  8085 ;;		_t_protocol
  8086 ;; This function uses a reentrant model
  8087 ;;
  8088                           
  8089                           	psect	text19
  8090  006786                     __ptext19:
  8091                           	opt callstack 0
  8092  006786                     _WaitMs:
  8093                           	opt callstack 25
  8094                           
  8095                           ;timers.c: 32: void WaitMs(uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  8096                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  8097                           
  8098                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8099                           ;incstack = 0
  8100  006786  0EFE               	movlw	-2
  8101  006788  006F FF8F FFE6     	movff	plusw1,postinc1
  8102  00678E  006F FF8F FFE6     	movff	plusw1,postinc1
  8103  006794  0E00               	movlw	0
  8104  006796  6EE6               	movwf	postinc1,c
  8105  006798  ECEB  F032         	call	_StartTimer	;wreg free
  8106                           
  8107                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8108  00679C  D005               	goto	l6726
  8109  00679E                     l1854:
  8110                           
  8111                           ;timers.c: 36:   __nop();
  8112  00679E  F000               	nop	
  8113                           
  8114                           ;timers.c: 37:   __nop();
  8115  0067A0  F000               	nop	
  8116                           
  8117                           ;timers.c: 38:   __nop();
  8118  0067A2  F000               	nop	
  8119                           
  8120                           ;timers.c: 39:   __nop();
  8121  0067A4  F000               	nop	
  8122  0067A6  0004               	clrwdt		;# 
  8123  0067A8                     l6726:
  8124                           
  8125                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  8126  0067A8  0E00               	movlw	0
  8127  0067AA  6EE6               	movwf	postinc1,c
  8128  0067AC  ECA6  F034         	call	_TimerDone	;wreg free
  8129  0067B0  503D               	movf	btemp,w,c
  8130  0067B2  B4D8               	btfsc	status,2,c
  8131  0067B4  D7F4               	goto	l1854
  8132                           
  8133                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  8134  0067B6  52E5               	movf	postdec1,f,c
  8135  0067B8  52E5               	movf	postdec1,f,c
  8136  0067BA  0012               	return		;funcret
  8137  0067BC                     __end_of_WaitMs:
  8138                           	opt callstack 0
  8139                           
  8140 ;; *************** function _TimerDone *****************
  8141 ;; Defined at:
  8142 ;;		line 20 in file "timers.c"
  8143 ;; Parameters:    Size  Location     Type
  8144 ;;  timer           1  [STACK] unsigned char 
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;		None
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1  [STACK] _Bool 
  8149 ;; Registers used:
  8150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8159 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8160 ;;Total ram usage:        0 bytes
  8161 ;; Hardware stack levels used:    1
  8162 ;; Hardware stack levels required when called:    3
  8163 ;; This function calls:
  8164 ;;		Nothing
  8165 ;; This function is called by:
  8166 ;;		_main
  8167 ;;		_m_protocol
  8168 ;;		_r_protocol
  8169 ;;		_t_protocol
  8170 ;;		_WaitMs
  8171 ;; This function uses a reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text20
  8175  00694C                     __ptext20:
  8176                           	opt callstack 0
  8177  00694C                     _TimerDone:
  8178                           	opt callstack 25
  8179                           
  8180                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8181                           ;incstack = 0
  8182  00694C  0004               	clrwdt		;# 
  8183                           
  8184                           ;timers.c: 23:  if (tickCount[timer] == 0) {
  8185                           ;stkvar	_timer @ sp[(0)+-1]
  8186  00694E  0EFF               	movlw	-1
  8187  006950  50E3               	movf	plusw1,w,c
  8188  006952  0D02               	mullw	2
  8189  006954  0EC0               	movlw	low _tickCount
  8190  006956  24F3               	addwf	prodl,w,c
  8191  006958  6ED9               	movwf	fsr2l,c
  8192  00695A  0E01               	movlw	high _tickCount
  8193  00695C  20F4               	addwfc	prodh,w,c
  8194  00695E  6EDA               	movwf	fsr2h,c
  8195  006960  50DE               	movf	postinc2,w,c
  8196  006962  10DE               	iorwf	postinc2,w,c
  8197  006964  A4D8               	btfss	status,2,c
  8198  006966  D002               	goto	l6304
  8199                           
  8200                           ;timers.c: 24:   return 1;
  8201  006968  0E01               	movlw	1
  8202  00696A  D001               	goto	L22
  8203  00696C                     l6304:
  8204                           
  8205                           ;timers.c: 26:  return 0;
  8206  00696C  0E00               	movlw	0
  8207  00696E                     L22:
  8208  00696E  6E3D               	movwf	btemp,c
  8209                           
  8210                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  8211  006970  52E5               	movf	postdec1,f,c
  8212  006972  0012               	return		;funcret
  8213  006974                     __end_of_TimerDone:
  8214                           	opt callstack 0
  8215                           
  8216 ;; *************** function _StartTimer *****************
  8217 ;; Defined at:
  8218 ;;		line 12 in file "timers.c"
  8219 ;; Parameters:    Size  Location     Type
  8220 ;;  timer           1  [STACK] unsigned char 
  8221 ;;  count           2  [STACK] unsigned short 
  8222 ;; Auto vars:     Size  Location     Type
  8223 ;;		None
  8224 ;; Return value:  Size  Location     Type
  8225 ;;                  1  [STACK] void 
  8226 ;; Registers used:
  8227 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  8228 ;; Tracked objects:
  8229 ;;		On entry : 0/0
  8230 ;;		On exit  : 0/0
  8231 ;;		Unchanged: 0/0
  8232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8237 ;;Total ram usage:        0 bytes
  8238 ;; Hardware stack levels used:    1
  8239 ;; Hardware stack levels required when called:    3
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_main
  8244 ;;		_m_protocol
  8245 ;;		_r_protocol
  8246 ;;		_t_protocol
  8247 ;;		_secs_gem_state
  8248 ;;		_WaitMs
  8249 ;; This function uses a reentrant model
  8250 ;;
  8251                           
  8252                           	psect	text21
  8253  0065D6                     __ptext21:
  8254                           	opt callstack 0
  8255  0065D6                     _StartTimer:
  8256                           	opt callstack 25
  8257                           
  8258                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  8259                           ;stkvar	_count @ sp[(0)+-3]
  8260                           
  8261                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8262                           ;incstack = 0
  8263  0065D6  0EFD               	movlw	-3
  8264  0065D8  006F FF8C  F047    	movff	plusw1,btemp+10
  8265  0065DE  0EFE               	movlw	-2
  8266  0065E0  006F FF8C  F048    	movff	plusw1,btemp+11
  8267  0065E6  90D8               	bcf	status,0,c
  8268  0065E8  3447               	rlcf	btemp+10,w,c
  8269  0065EA  6E45               	movwf	btemp+8,c
  8270  0065EC  3448               	rlcf	btemp+11,w,c
  8271  0065EE  6E46               	movwf	btemp+9,c
  8272                           
  8273                           ;stkvar	_timer @ sp[(0)+-1]
  8274  0065F0  0EFF               	movlw	-1
  8275  0065F2  50E3               	movf	plusw1,w,c
  8276  0065F4  0D02               	mullw	2
  8277  0065F6  0EC0               	movlw	low _tickCount
  8278  0065F8  24F3               	addwf	prodl,w,c
  8279  0065FA  6ED9               	movwf	fsr2l,c
  8280  0065FC  0E01               	movlw	high _tickCount
  8281  0065FE  20F4               	addwfc	prodh,w,c
  8282  006600  6EDA               	movwf	fsr2h,c
  8283  006602  0060  F117  FFDE   	movff	btemp+8,postinc2
  8284  006608  0060  F11B  FFDD   	movff	btemp+9,postdec2
  8285                           
  8286                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  8287  00660E  52E5               	movf	postdec1,f,c
  8288  006610  52E5               	movf	postdec1,f,c
  8289  006612  52E5               	movf	postdec1,f,c
  8290  006614  0012               	return		;funcret
  8291  006616                     __end_of_StartTimer:
  8292                           	opt callstack 0
  8293                           
  8294 ;; *************** function _UART2_is_rx_ready *****************
  8295 ;; Defined at:
  8296 ;;		line 137 in file "mcc_generated_files/uart2.c"
  8297 ;; Parameters:    Size  Location     Type
  8298 ;;		None
  8299 ;; Auto vars:     Size  Location     Type
  8300 ;;		None
  8301 ;; Return value:  Size  Location     Type
  8302 ;;                  1  [STACK] unsigned char 
  8303 ;; Registers used:
  8304 ;;		btemp
  8305 ;; Tracked objects:
  8306 ;;		On entry : 0/0
  8307 ;;		On exit  : 0/0
  8308 ;;		Unchanged: 0/0
  8309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8310 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8313 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8314 ;;Total ram usage:        0 bytes
  8315 ;; Hardware stack levels used:    1
  8316 ;; Hardware stack levels required when called:    3
  8317 ;; This function calls:
  8318 ;;		Nothing
  8319 ;; This function is called by:
  8320 ;;		_m_protocol
  8321 ;; This function uses a reentrant model
  8322 ;;
  8323                           
  8324                           	psect	text22
  8325  006EF6                     __ptext22:
  8326                           	opt callstack 0
  8327  006EF6                     _UART2_is_rx_ready:
  8328                           	opt callstack 26
  8329                           
  8330                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  8331                           
  8332                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8333                           ;incstack = 0
  8334  006EF6  0060  F0C4  F03D   	movff	_uart2RxCount,btemp	;volatile
  8335                           
  8336                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  8337  006EFC  0012               	return		;funcret
  8338  006EFE                     __end_of_UART2_is_rx_ready:
  8339                           	opt callstack 0
  8340                           
  8341 ;; *************** function _UART2_Read *****************
  8342 ;; Defined at:
  8343 ;;		line 152 in file "mcc_generated_files/uart2.c"
  8344 ;; Parameters:    Size  Location     Type
  8345 ;;		None
  8346 ;; Auto vars:     Size  Location     Type
  8347 ;;  readValue       1  [STACK] unsigned char 
  8348 ;; Return value:  Size  Location     Type
  8349 ;;                  1  [STACK] unsigned char 
  8350 ;; Registers used:
  8351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  8352 ;; Tracked objects:
  8353 ;;		On entry : 0/0
  8354 ;;		On exit  : 3F/39
  8355 ;;		Unchanged: 0/0
  8356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8360 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8361 ;;Total ram usage:        0 bytes
  8362 ;; Hardware stack levels used:    1
  8363 ;; Hardware stack levels required when called:    3
  8364 ;; This function calls:
  8365 ;;		Nothing
  8366 ;; This function is called by:
  8367 ;;		_m_protocol
  8368 ;; This function uses a reentrant model
  8369 ;;
  8370                           
  8371                           	psect	text23
  8372  0066D2                     __ptext23:
  8373                           	opt callstack 0
  8374  0066D2                     _UART2_Read:
  8375                           	opt callstack 0
  8376                           
  8377                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8378  0066D2  52E6               	movf	postinc1,f,c
  8379  0066D4                     
  8380                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  8381                           
  8382                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  8383  0066D4  5031               	movf	_uart2RxCount,w,c	;volatile
  8384  0066D6  B4D8               	btfsc	status,2,c
  8385  0066D8  D7FD               	goto	l6688
  8386                           
  8387                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  8388  0066DA  0E00               	movlw	low _uart2RxBuffer
  8389  0066DC  2432               	addwf	_uart2RxTail,w,c	;volatile
  8390  0066DE  6ED9               	movwf	fsr2l,c
  8391  0066E0  6ADA               	clrf	fsr2h,c
  8392  0066E2  0E02               	movlw	high _uart2RxBuffer
  8393  0066E4  22DA               	addwfc	fsr2h,f,c
  8394  0066E6  50DF               	movf	indf2,w,c
  8395  0066E8  6E48               	movwf	btemp+11,c
  8396                           
  8397                           ;stkvar	_readValue @ sp[(-1)+0]
  8398  0066EA  0EFF               	movlw	-1
  8399  0066EC  0060  F123  FFE3   	movff	btemp+11,plusw1
  8400  0066F2  2A32               	incf	_uart2RxTail,f,c	;volatile
  8401                           
  8402                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  8403  0066F4  0E3F               	movlw	63
  8404  0066F6  6432               	cpfsgt	_uart2RxTail,c
  8405  0066F8  D001               	goto	l692
  8406                           
  8407                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  8408  0066FA  6A32               	clrf	_uart2RxTail,c	;volatile
  8409  0066FC                     l692:
  8410                           
  8411                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  8412  0066FC  0139               	movlb	57	; () banked
  8413  0066FE  9596               	bcf	150,2,b	;volatile
  8414                           
  8415                           ; BSR set to: 57
  8416                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  8417  006700  0631               	decf	_uart2RxCount,f,c	;volatile
  8418                           
  8419                           ; BSR set to: 57
  8420                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  8421  006702  8596               	bsf	150,2,b	;volatile
  8422                           
  8423                           ; BSR set to: 57
  8424                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  8425                           ;stkvar	_readValue @ sp[(-1)+0]
  8426  006704  0EFF               	movlw	-1
  8427  006706  006F FF8C  F03D    	movff	plusw1,btemp
  8428                           
  8429                           ; BSR set to: 57
  8430                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8431  00670C  52E5               	movf	postdec1,f,c
  8432  00670E  0012               	return		;funcret
  8433  006710                     __end_of_UART2_Read:
  8434                           	opt callstack 0
  8435                           
  8436 ;; *************** function _UART1_is_rx_ready *****************
  8437 ;; Defined at:
  8438 ;;		line 146 in file "mcc_generated_files/uart1.c"
  8439 ;; Parameters:    Size  Location     Type
  8440 ;;		None
  8441 ;; Auto vars:     Size  Location     Type
  8442 ;;		None
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  1  [STACK] unsigned char 
  8445 ;; Registers used:
  8446 ;;		btemp
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8452 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8455 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8456 ;;Total ram usage:        0 bytes
  8457 ;; Hardware stack levels used:    1
  8458 ;; Hardware stack levels required when called:    3
  8459 ;; This function calls:
  8460 ;;		Nothing
  8461 ;; This function is called by:
  8462 ;;		_m_protocol
  8463 ;;		_r_protocol
  8464 ;;		_t_protocol
  8465 ;; This function uses a reentrant model
  8466 ;;
  8467                           
  8468                           	psect	text24
  8469  006EFE                     __ptext24:
  8470                           	opt callstack 0
  8471  006EFE                     _UART1_is_rx_ready:
  8472                           	opt callstack 26
  8473                           
  8474                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  8475                           
  8476                           ; BSR set to: 57
  8477                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8478                           ;incstack = 0
  8479  006EFE  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  8480                           
  8481                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  8482  006F04  0012               	return		;funcret
  8483  006F06                     __end_of_UART1_is_rx_ready:
  8484                           	opt callstack 0
  8485                           
  8486 ;; *************** function _UART1_Read *****************
  8487 ;; Defined at:
  8488 ;;		line 161 in file "mcc_generated_files/uart1.c"
  8489 ;; Parameters:    Size  Location     Type
  8490 ;;		None
  8491 ;; Auto vars:     Size  Location     Type
  8492 ;;  readValue       1  [STACK] unsigned char 
  8493 ;; Return value:  Size  Location     Type
  8494 ;;                  1  [STACK] unsigned char 
  8495 ;; Registers used:
  8496 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  8497 ;; Tracked objects:
  8498 ;;		On entry : 0/0
  8499 ;;		On exit  : 3F/39
  8500 ;;		Unchanged: 0/0
  8501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8506 ;;Total ram usage:        0 bytes
  8507 ;; Hardware stack levels used:    1
  8508 ;; Hardware stack levels required when called:    3
  8509 ;; This function calls:
  8510 ;;		Nothing
  8511 ;; This function is called by:
  8512 ;;		_m_protocol
  8513 ;;		_r_protocol
  8514 ;;		_t_protocol
  8515 ;; This function uses a reentrant model
  8516 ;;
  8517                           
  8518                           	psect	text25
  8519  006710                     __ptext25:
  8520                           	opt callstack 0
  8521  006710                     _UART1_Read:
  8522                           	opt callstack 0
  8523                           
  8524                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8525  006710  52E6               	movf	postinc1,f,c
  8526  006712                     
  8527                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  8528                           
  8529                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  8530  006712  5037               	movf	_uart1RxCount,w,c	;volatile
  8531  006714  B4D8               	btfsc	status,2,c
  8532  006716  D7FD               	goto	l6664
  8533                           
  8534                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  8535  006718  0E40               	movlw	low _uart1RxBuffer
  8536  00671A  2438               	addwf	_uart1RxTail,w,c	;volatile
  8537  00671C  6ED9               	movwf	fsr2l,c
  8538  00671E  6ADA               	clrf	fsr2h,c
  8539  006720  0E02               	movlw	high _uart1RxBuffer
  8540  006722  22DA               	addwfc	fsr2h,f,c
  8541  006724  50DF               	movf	indf2,w,c
  8542  006726  6E48               	movwf	btemp+11,c
  8543                           
  8544                           ;stkvar	_readValue @ sp[(-1)+0]
  8545  006728  0EFF               	movlw	-1
  8546  00672A  0060  F123  FFE3   	movff	btemp+11,plusw1
  8547  006730  2A38               	incf	_uart1RxTail,f,c	;volatile
  8548                           
  8549                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  8550  006732  0E3F               	movlw	63
  8551  006734  6438               	cpfsgt	_uart1RxTail,c
  8552  006736  D001               	goto	l572
  8553                           
  8554                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  8555  006738  6A38               	clrf	_uart1RxTail,c	;volatile
  8556  00673A                     l572:
  8557                           
  8558                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  8559  00673A  0139               	movlb	57	; () banked
  8560  00673C  9793               	bcf	147,3,b	;volatile
  8561                           
  8562                           ; BSR set to: 57
  8563                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  8564  00673E  0637               	decf	_uart1RxCount,f,c	;volatile
  8565                           
  8566                           ; BSR set to: 57
  8567                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  8568  006740  8793               	bsf	147,3,b	;volatile
  8569                           
  8570                           ; BSR set to: 57
  8571                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  8572                           ;stkvar	_readValue @ sp[(-1)+0]
  8573  006742  0EFF               	movlw	-1
  8574  006744  006F FF8C  F03D    	movff	plusw1,btemp
  8575                           
  8576                           ; BSR set to: 57
  8577                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  8578  00674A  52E5               	movf	postdec1,f,c
  8579  00674C  0012               	return		;funcret
  8580  00674E                     __end_of_UART1_Read:
  8581                           	opt callstack 0
  8582                           
  8583 ;; *************** function _init_display *****************
  8584 ;; Defined at:
  8585 ;;		line 35 in file "eadog.c"
  8586 ;; Parameters:    Size  Location     Type
  8587 ;;		None
  8588 ;; Auto vars:     Size  Location     Type
  8589 ;;		None
  8590 ;; Return value:  Size  Location     Type
  8591 ;;                  1  [STACK] void 
  8592 ;; Registers used:
  8593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8594 ;; Tracked objects:
  8595 ;;		On entry : 0/0
  8596 ;;		On exit  : 3F/3D
  8597 ;;		Unchanged: 0/0
  8598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8603 ;;Total ram usage:        0 bytes
  8604 ;; Hardware stack levels used:    1
  8605 ;; Hardware stack levels required when called:    5
  8606 ;; This function calls:
  8607 ;;		_ringBufS_init
  8608 ;;		_send_lcd_cmd
  8609 ;;		_send_lcd_cmd_long
  8610 ;;		_wdtdelay
  8611 ;; This function is called by:
  8612 ;;		_main
  8613 ;; This function uses a reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text26
  8617  0057EC                     __ptext26:
  8618                           	opt callstack 0
  8619  0057EC                     _init_display:
  8620                           	opt callstack 25
  8621                           
  8622                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  8623                           
  8624                           ; BSR set to: 57
  8625                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8626                           ;incstack = 0
  8627  0057EC  0E80               	movlw	low _ring_buf1
  8628  0057EE  0100               	movlb	0	; () banked
  8629  0057F0  6FD7               	movwf	(_spi_link+6)& (0+255),b	;volatile
  8630  0057F2  0E03               	movlw	high _ring_buf1
  8631  0057F4  6FD8               	movwf	(_spi_link+7)& (0+255),b	;volatile
  8632                           
  8633                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  8634  0057F6  0E00               	movlw	low _ring_buf2
  8635  0057F8  6FD5               	movwf	(_spi_link+4)& (0+255),b	;volatile
  8636  0057FA  0E04               	movlw	high _ring_buf2
  8637  0057FC  6FD6               	movwf	(_spi_link+5)& (0+255),b	;volatile
  8638                           
  8639                           ; BSR set to: 0
  8640                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  8641  0057FE  0060  F35F  FFE6   	movff	_spi_link+6,postinc1
  8642  005804  0060  F363  FFE6   	movff	_spi_link+7,postinc1
  8643  00580A  ECE2  F034         	call	_ringBufS_init	;wreg free
  8644                           
  8645                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  8646  00580E  0060  F357  FFE6   	movff	_spi_link+4,postinc1
  8647  005814  0060  F35B  FFE6   	movff	_spi_link+5,postinc1
  8648  00581A  ECE2  F034         	call	_ringBufS_init	;wreg free
  8649                           
  8650                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  8651  00581E  80BE               	bsf	16318,0,c	;volatile
  8652  005820  84BC               	bsf	16316,2,c	;volatile
  8653                           
  8654                           ;eadog.c: 44:  wdtdelay(350000);
  8655  005822  0E30               	movlw	48
  8656  005824  6EE6               	movwf	postinc1,c
  8657  005826  0E57               	movlw	87
  8658  005828  6EE6               	movwf	postinc1,c
  8659  00582A  0E05               	movlw	5
  8660  00582C  6EE6               	movwf	postinc1,c
  8661  00582E  0E00               	movlw	0
  8662  005830  6EE6               	movwf	postinc1,c
  8663  005832  EC44  F031         	call	_wdtdelay	;wreg free
  8664                           
  8665                           ; BSR set to: 0
  8666                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  8667  005836  0E39               	movlw	57
  8668  005838  6EE6               	movwf	postinc1,c
  8669  00583A  ECCE  F034         	call	_send_lcd_cmd	;wreg free
  8670                           
  8671                           ; BSR set to: 0
  8672                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  8673  00583E  0E1D               	movlw	29
  8674  005840  6EE6               	movwf	postinc1,c
  8675  005842  ECCE  F034         	call	_send_lcd_cmd	;wreg free
  8676                           
  8677                           ; BSR set to: 0
  8678                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  8679  005846  0E50               	movlw	80
  8680  005848  6EE6               	movwf	postinc1,c
  8681  00584A  ECCE  F034         	call	_send_lcd_cmd	;wreg free
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  8685  00584E  0E6C               	movlw	108
  8686  005850  6EE6               	movwf	postinc1,c
  8687  005852  ECCE  F034         	call	_send_lcd_cmd	;wreg free
  8688                           
  8689                           ; BSR set to: 0
  8690                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  8691  005856  0E76               	movlw	118
  8692  005858  6EE6               	movwf	postinc1,c
  8693  00585A  ECCE  F034         	call	_send_lcd_cmd	;wreg free
  8694                           
  8695                           ; BSR set to: 0
  8696                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  8697  00585E  0E38               	movlw	56
  8698  005860  6EE6               	movwf	postinc1,c
  8699  005862  ECBA  F034         	call	_send_lcd_cmd_long	;wreg free
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  8703  005866  0E0F               	movlw	15
  8704  005868  6EE6               	movwf	postinc1,c
  8705  00586A  ECCE  F034         	call	_send_lcd_cmd	;wreg free
  8706                           
  8707                           ; BSR set to: 0
  8708                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  8709  00586E  0E01               	movlw	1
  8710  005870  6EE6               	movwf	postinc1,c
  8711  005872  ECBA  F034         	call	_send_lcd_cmd_long	;wreg free
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  8715  005876  0E02               	movlw	2
  8716  005878  6EE6               	movwf	postinc1,c
  8717  00587A  ECCE  F034         	call	_send_lcd_cmd	;wreg free
  8718                           
  8719                           ; BSR set to: 0
  8720                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  8721  00587E  0E06               	movlw	6
  8722  005880  6EE6               	movwf	postinc1,c
  8723  005882  ECCE  F034         	call	_send_lcd_cmd	;wreg free
  8724                           
  8725                           ; BSR set to: 0
  8726                           ;eadog.c: 55:  wdtdelay(30);
  8727  005886  0E1E               	movlw	30
  8728  005888  6EE6               	movwf	postinc1,c
  8729  00588A  0E00               	movlw	0
  8730  00588C  6EE6               	movwf	postinc1,c
  8731  00588E  0E00               	movlw	0
  8732  005890  6EE6               	movwf	postinc1,c
  8733  005892  0E00               	movlw	0
  8734  005894  6EE6               	movwf	postinc1,c
  8735  005896  EC44  F031         	call	_wdtdelay	;wreg free
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  8739  00589A  0E02               	movlw	2
  8740  00589C  013D               	movlb	61	; () banked
  8741  00589E  6F16               	movwf	22,b	;volatile
  8742                           
  8743                           ; BSR set to: 61
  8744                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  8745  0058A0  0E40               	movlw	64
  8746  0058A2  6F15               	movwf	21,b	;volatile
  8747                           
  8748                           ; BSR set to: 61
  8749                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  8750  0058A4  0E83               	movlw	131
  8751  0058A6  6F14               	movwf	20,b	;volatile
  8752                           
  8753                           ; BSR set to: 61
  8754                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  8755  0058A8  931A               	bcf	26,1,b	;volatile
  8756                           
  8757                           ; BSR set to: 61
  8758                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  8759  0058AA  0E3F               	movlw	-193
  8760  0058AC  013B               	movlb	59	; () banked
  8761  0058AE  17FD               	andwf	253,f,b	;volatile
  8762                           
  8763                           ; BSR set to: 59
  8764                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  8765  0058B0  9BFD               	bcf	253,5,b	;volatile
  8766                           
  8767                           ; BSR set to: 59
  8768                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  8769  0058B2  51FD               	movf	253,w,b	;volatile
  8770  0058B4  0BF9               	andlw	-7
  8771  0058B6  0902               	iorlw	2
  8772  0058B8  6FFD               	movwf	253,b	;volatile
  8773                           
  8774                           ; BSR set to: 59
  8775                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  8776  0058BA  0EE7               	movlw	-25
  8777  0058BC  17FD               	andwf	253,f,b	;volatile
  8778                           
  8779                           ; BSR set to: 59
  8780                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  8781  0058BE  81FD               	bsf	253,0,b	;volatile
  8782                           
  8783                           ; BSR set to: 59
  8784                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  8785  0058C0  0E80               	movlw	low _ring_buf1
  8786  0058C2  6FF9               	movwf	249,b	;volatile
  8787  0058C4  0E03               	movlw	high _ring_buf1
  8788  0058C6  6FFA               	movwf	250,b	;volatile
  8789  0058C8  0E00               	movlw	low (_ring_buf1 shr (0+16))
  8790  0058CA  6FFB               	movwf	251,b	;volatile
  8791                           
  8792                           ; BSR set to: 59
  8793                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  8794  0058CC  9BFC               	bcf	252,5,b	;volatile
  8795                           
  8796                           ; BSR set to: 59
  8797                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  8798  0058CE  013D               	movlb	61	; () banked
  8799  0058D0  831A               	bsf	26,1,b	;volatile
  8800                           
  8801                           ; BSR set to: 61
  8802                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  8803  0058D2  90BE               	bcf	16318,0,c	;volatile
  8804                           
  8805                           ; BSR set to: 61
  8806                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8807  0058D4  0012               	return		;funcret
  8808  0058D6                     __end_of_init_display:
  8809                           	opt callstack 0
  8810                           
  8811 ;; *************** function _send_lcd_cmd_long *****************
  8812 ;; Defined at:
  8813 ;;		line 97 in file "eadog.c"
  8814 ;; Parameters:    Size  Location     Type
  8815 ;;  cmd             1  [STACK] unsigned char 
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;		None
  8818 ;; Return value:  Size  Location     Type
  8819 ;;                  1  [STACK] void 
  8820 ;; Registers used:
  8821 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8822 ;; Tracked objects:
  8823 ;;		On entry : 3F/0
  8824 ;;		On exit  : 3F/0
  8825 ;;		Unchanged: 0/0
  8826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8828 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8830 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8831 ;;Total ram usage:        0 bytes
  8832 ;; Hardware stack levels used:    1
  8833 ;; Hardware stack levels required when called:    4
  8834 ;; This function calls:
  8835 ;;		_SPI1_Exchange8bit
  8836 ;;		_wdtdelay
  8837 ;; This function is called by:
  8838 ;;		_init_display
  8839 ;; This function uses a reentrant model
  8840 ;;
  8841                           
  8842                           	psect	text27
  8843  006974                     __ptext27:
  8844                           	opt callstack 0
  8845  006974                     _send_lcd_cmd_long:
  8846                           	opt callstack 25
  8847                           
  8848                           ; BSR set to: 61
  8849                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8850                           ;incstack = 0
  8851                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  8852  006974  92BC               	bcf	16316,1,c	;volatile
  8853                           
  8854                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  8855  006976  94BC               	bcf	16316,2,c	;volatile
  8856                           
  8857                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  8858                           ;stkvar	_cmd @ sp[(0)+-1]
  8859  006978  0EFF               	movlw	-1
  8860  00697A  50E3               	movf	plusw1,w,c
  8861  00697C  6EE6               	movwf	postinc1,c
  8862  00697E  ECA9  F036         	call	_SPI1_Exchange8bit	;wreg free
  8863                           
  8864                           ; BSR set to: 57
  8865                           ;eadog.c: 102:  wdtdelay(800);
  8866  006982  0E20               	movlw	32
  8867  006984  6EE6               	movwf	postinc1,c
  8868  006986  0E03               	movlw	3
  8869  006988  6EE6               	movwf	postinc1,c
  8870  00698A  0E00               	movlw	0
  8871  00698C  6EE6               	movwf	postinc1,c
  8872  00698E  0E00               	movlw	0
  8873  006990  6EE6               	movwf	postinc1,c
  8874  006992  EC44  F031         	call	_wdtdelay	;wreg free
  8875                           
  8876                           ; BSR set to: 0
  8877  006996  82BC               	bsf	16316,1,c	;volatile
  8878                           
  8879                           ; BSR set to: 0
  8880                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8881  006998  52E5               	movf	postdec1,f,c
  8882  00699A  0012               	return		;funcret
  8883  00699C                     __end_of_send_lcd_cmd_long:
  8884                           	opt callstack 0
  8885                           
  8886 ;; *************** function _send_lcd_cmd *****************
  8887 ;; Defined at:
  8888 ;;		line 85 in file "eadog.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  cmd             1  [STACK] unsigned char 
  8891 ;; Auto vars:     Size  Location     Type
  8892 ;;		None
  8893 ;; Return value:  Size  Location     Type
  8894 ;;                  1  [STACK] void 
  8895 ;; Registers used:
  8896 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8897 ;; Tracked objects:
  8898 ;;		On entry : 3F/0
  8899 ;;		On exit  : 3F/0
  8900 ;;		Unchanged: 0/0
  8901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8902 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8905 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8906 ;;Total ram usage:        0 bytes
  8907 ;; Hardware stack levels used:    1
  8908 ;; Hardware stack levels required when called:    4
  8909 ;; This function calls:
  8910 ;;		_SPI1_Exchange8bit
  8911 ;;		_wdtdelay
  8912 ;; This function is called by:
  8913 ;;		_init_display
  8914 ;; This function uses a reentrant model
  8915 ;;
  8916                           
  8917                           	psect	text28
  8918  00699C                     __ptext28:
  8919                           	opt callstack 0
  8920  00699C                     _send_lcd_cmd:
  8921                           	opt callstack 25
  8922                           
  8923                           ; BSR set to: 0
  8924                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8925                           ;incstack = 0
  8926                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  8927  00699C  92BC               	bcf	16316,1,c	;volatile
  8928                           
  8929                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  8930  00699E  94BC               	bcf	16316,2,c	;volatile
  8931                           
  8932                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  8933                           ;stkvar	_cmd @ sp[(0)+-1]
  8934  0069A0  0EFF               	movlw	-1
  8935  0069A2  50E3               	movf	plusw1,w,c
  8936  0069A4  6EE6               	movwf	postinc1,c
  8937  0069A6  ECA9  F036         	call	_SPI1_Exchange8bit	;wreg free
  8938                           
  8939                           ; BSR set to: 57
  8940                           ;eadog.c: 90:  wdtdelay(30);
  8941  0069AA  0E1E               	movlw	30
  8942  0069AC  6EE6               	movwf	postinc1,c
  8943  0069AE  0E00               	movlw	0
  8944  0069B0  6EE6               	movwf	postinc1,c
  8945  0069B2  0E00               	movlw	0
  8946  0069B4  6EE6               	movwf	postinc1,c
  8947  0069B6  0E00               	movlw	0
  8948  0069B8  6EE6               	movwf	postinc1,c
  8949  0069BA  EC44  F031         	call	_wdtdelay	;wreg free
  8950                           
  8951                           ; BSR set to: 0
  8952  0069BE  82BC               	bsf	16316,1,c	;volatile
  8953                           
  8954                           ; BSR set to: 0
  8955                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8956  0069C0  52E5               	movf	postdec1,f,c
  8957  0069C2  0012               	return		;funcret
  8958  0069C4                     __end_of_send_lcd_cmd:
  8959                           	opt callstack 0
  8960                           
  8961 ;; *************** function _SPI1_Exchange8bit *****************
  8962 ;; Defined at:
  8963 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8964 ;; Parameters:    Size  Location     Type
  8965 ;;  data            1  [STACK] unsigned char 
  8966 ;; Auto vars:     Size  Location     Type
  8967 ;;		None
  8968 ;; Return value:  Size  Location     Type
  8969 ;;                  1  [STACK] unsigned char 
  8970 ;; Registers used:
  8971 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8972 ;; Tracked objects:
  8973 ;;		On entry : 0/0
  8974 ;;		On exit  : 3F/39
  8975 ;;		Unchanged: 0/0
  8976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8981 ;;Total ram usage:        0 bytes
  8982 ;; Hardware stack levels used:    1
  8983 ;; Hardware stack levels required when called:    3
  8984 ;; This function calls:
  8985 ;;		Nothing
  8986 ;; This function is called by:
  8987 ;;		_send_lcd_cmd
  8988 ;;		_send_lcd_cmd_long
  8989 ;; This function uses a reentrant model
  8990 ;;
  8991                           
  8992                           	psect	text29
  8993  006D52                     __ptext29:
  8994                           	opt callstack 0
  8995  006D52                     _SPI1_Exchange8bit:
  8996                           	opt callstack 25
  8997                           
  8998                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8999                           
  9000                           ; BSR set to: 0
  9001                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9002                           ;incstack = 0
  9003  006D52  0E01               	movlw	1
  9004  006D54  013D               	movlb	61	; () banked
  9005  006D56  6F12               	movwf	18,b	;volatile
  9006                           
  9007                           ; BSR set to: 61
  9008                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  9009                           ;stkvar	_data @ sp[(0)+-1]
  9010  006D58  0EFF               	movlw	-1
  9011  006D5A  006F FF8F FD11     	movff	plusw1,15633	;volatile
  9012  006D60                     l851:
  9013                           
  9014                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  9015  006D60  0139               	movlb	57	; () banked
  9016  006D62  A9A2               	btfss	162,4,b	;volatile
  9017  006D64  D7FD               	goto	l851
  9018                           
  9019                           ; BSR set to: 57
  9020                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  9021  006D66  006F F440  F03D    	movff	15632,btemp	;volatile
  9022                           
  9023                           ; BSR set to: 57
  9024                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  9025  006D6C  52E5               	movf	postdec1,f,c
  9026  006D6E  0012               	return		;funcret
  9027  006D70                     __end_of_SPI1_Exchange8bit:
  9028                           	opt callstack 0
  9029                           
  9030 ;; *************** function _ringBufS_init *****************
  9031 ;; Defined at:
  9032 ;;		line 22 in file "ringbufs.c"
  9033 ;; Parameters:    Size  Location     Type
  9034 ;;  _this           2  [STACK] PTR volatile struct ring
  9035 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9036 ;; Auto vars:     Size  Location     Type
  9037 ;;		None
  9038 ;; Return value:  Size  Location     Type
  9039 ;;                  1  [STACK] void 
  9040 ;; Registers used:
  9041 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9042 ;; Tracked objects:
  9043 ;;		On entry : 0/0
  9044 ;;		On exit  : 0/0
  9045 ;;		Unchanged: 0/0
  9046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9047 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9048 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9050 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9051 ;;Total ram usage:        0 bytes
  9052 ;; Hardware stack levels used:    1
  9053 ;; Hardware stack levels required when called:    4
  9054 ;; This function calls:
  9055 ;;		_memset
  9056 ;; This function is called by:
  9057 ;;		_init_display
  9058 ;; This function uses a reentrant model
  9059 ;;
  9060                           
  9061                           	psect	text30
  9062  0069C4                     __ptext30:
  9063                           	opt callstack 0
  9064  0069C4                     _ringBufS_init:
  9065                           	opt callstack 25
  9066                           
  9067                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  9068                           
  9069                           ; BSR set to: 57
  9070                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9071                           ;incstack = 0
  9072  0069C4  0E43               	movlw	67
  9073  0069C6  6EE6               	movwf	postinc1,c
  9074  0069C8  0E00               	movlw	0
  9075  0069CA  6EE6               	movwf	postinc1,c
  9076  0069CC  0E00               	movlw	0
  9077  0069CE  6EE6               	movwf	postinc1,c
  9078  0069D0  0E00               	movlw	0
  9079  0069D2  6EE6               	movwf	postinc1,c
  9080                           
  9081                           ;stkvar	__this @ sp[(-4)+-2]
  9082  0069D4  0EFA               	movlw	-6
  9083  0069D6  006F FF8F FFE6     	movff	plusw1,postinc1
  9084  0069DC  006F FF8F FFE6     	movff	plusw1,postinc1
  9085  0069E2  EC1B  F01D         	call	_memset	;wreg free
  9086                           
  9087                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  9088  0069E6  52E5               	movf	postdec1,f,c
  9089  0069E8  52E5               	movf	postdec1,f,c
  9090  0069EA  0012               	return		;funcret
  9091  0069EC                     __end_of_ringBufS_init:
  9092                           	opt callstack 0
  9093                           
  9094 ;; *************** function _hb_message *****************
  9095 ;; Defined at:
  9096 ;;		line 502 in file "gemsecs.c"
  9097 ;; Parameters:    Size  Location     Type
  9098 ;;		None
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;		None
  9101 ;; Return value:  Size  Location     Type
  9102 ;;                  1  [STACK] void 
  9103 ;; Registers used:
  9104 ;;		wreg, status,2, status,0
  9105 ;; Tracked objects:
  9106 ;;		On entry : 0/0
  9107 ;;		On exit  : 3F/0
  9108 ;;		Unchanged: 0/0
  9109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9114 ;;Total ram usage:        0 bytes
  9115 ;; Hardware stack levels used:    1
  9116 ;; Hardware stack levels required when called:    3
  9117 ;; This function calls:
  9118 ;;		Nothing
  9119 ;; This function is called by:
  9120 ;;		_main
  9121 ;; This function uses a reentrant model
  9122 ;;
  9123                           
  9124                           	psect	text31
  9125  006DC4                     __ptext31:
  9126                           	opt callstack 0
  9127  006DC4                     _hb_message:
  9128                           	opt callstack 27
  9129                           
  9130                           ;gemsecs.c: 504:  V.ping++;
  9131                           
  9132                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9133                           ;incstack = 0
  9134  006DC4  0100               	movlb	0	; () banked
  9135  006DC6  4BBB               	infsnz	(_V+91)& (0+255),f,b	;volatile
  9136  006DC8  2BBC               	incf	(_V+92)& (0+255),f,b	;volatile
  9137                           
  9138                           ; BSR set to: 0
  9139                           ;gemsecs.c: 505:  V.s_state = SEQ_STATE_TX;
  9140  006DCA  0E02               	movlw	2
  9141  006DCC  6F60               	movwf	_V& (0+255),b	;volatile
  9142                           
  9143                           ; BSR set to: 0
  9144                           ;gemsecs.c: 506:  V.failed_send = 0;
  9145  006DCE  0E87               	movlw	-121
  9146  006DD0  17BD               	andwf	(_V+93)& (0+255),f,b	;volatile
  9147                           
  9148                           ; BSR set to: 0
  9149                           ;gemsecs.c: 507:  V.t_l_state = LINK_STATE_IDLE;
  9150  006DD2  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;gemsecs.c: 508:  V.stream = 1;
  9154  006DD4  0E01               	movlw	1
  9155  006DD6  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  9156                           
  9157                           ; BSR set to: 0
  9158                           ;gemsecs.c: 509:  V.function = 2;
  9159  006DD8  0E02               	movlw	2
  9160  006DDA  6FAF               	movwf	(_V+79)& (0+255),b	;volatile
  9161                           
  9162                           ; BSR set to: 0
  9163                           ; _hb_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  9164  006DDC  0012               	return		;funcret
  9165  006DDE                     __end_of_hb_message:
  9166                           	opt callstack 0
  9167                           
  9168 ;; *************** function _eaDogM_WriteStringAtPos *****************
  9169 ;; Defined at:
  9170 ;;		line 223 in file "eadog.c"
  9171 ;; Parameters:    Size  Location     Type
  9172 ;;  r               1  [STACK] unsigned char 
  9173 ;;  c               1  [STACK] unsigned char 
  9174 ;;  strPtr          1  [STACK] PTR unsigned char 
  9175 ;;		 -> V(100), 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;		None
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1  [STACK] void 
  9180 ;; Registers used:
  9181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  9182 ;; Tracked objects:
  9183 ;;		On entry : 3F/0
  9184 ;;		On exit  : 3F/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9191 ;;Total ram usage:        0 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:   13
  9194 ;; This function calls:
  9195 ;;		_eaDogM_WriteString
  9196 ;;		_send_lcd_cmd_dma
  9197 ;; This function is called by:
  9198 ;;		_main
  9199 ;; This function uses a reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text32
  9203  006820                     __ptext32:
  9204                           	opt callstack 0
  9205  006820                     _eaDogM_WriteStringAtPos:
  9206                           	opt callstack 17
  9207                           
  9208                           ;eadog.c: 223: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           224: {;eadog.c: 225:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  9209                           ;stkvar	_c @ sp[(0)+-2]
  9210                           
  9211                           ; BSR set to: 0
  9212                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9213                           ;incstack = 0
  9214  006820  0EFE               	movlw	-2
  9215  006822  006F FF8C  F048    	movff	plusw1,btemp+11
  9216                           
  9217                           ;stkvar	_r @ sp[(0)+-1]
  9218  006828  0EFF               	movlw	-1
  9219  00682A  50E3               	movf	plusw1,w,c
  9220  00682C  0D10               	mullw	16
  9221  00682E  50F3               	movf	prodl,w,c
  9222  006830  2448               	addwf	btemp+11,w,c
  9223  006832  0F80               	addlw	128
  9224  006834  6EE6               	movwf	postinc1,c
  9225  006836  EC9B  F031         	call	_send_lcd_cmd_dma	;wreg free
  9226                           
  9227                           ;eadog.c: 226:  eaDogM_WriteString(strPtr);
  9228                           ;stkvar	_strPtr @ sp[(0)+-3]
  9229  00683A  0EFD               	movlw	-3
  9230  00683C  50E3               	movf	plusw1,w,c
  9231  00683E  6EE6               	movwf	postinc1,c
  9232  006840  ECA2  F02D         	call	_eaDogM_WriteString	;wreg free
  9233                           
  9234                           ; BSR set to: 0
  9235                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  9236  006844  52E5               	movf	postdec1,f,c
  9237  006846  52E5               	movf	postdec1,f,c
  9238  006848  52E5               	movf	postdec1,f,c
  9239  00684A  0012               	return		;funcret
  9240  00684C                     __end_of_eaDogM_WriteStringAtPos:
  9241                           	opt callstack 0
  9242                           
  9243 ;; *************** function _eaDogM_WriteString *****************
  9244 ;; Defined at:
  9245 ;;		line 167 in file "eadog.c"
  9246 ;; Parameters:    Size  Location     Type
  9247 ;;  strPtr          1  [STACK] PTR unsigned char 
  9248 ;;		 -> V(100), 
  9249 ;; Auto vars:     Size  Location     Type
  9250 ;;		None
  9251 ;; Return value:  Size  Location     Type
  9252 ;;                  1  [STACK] void 
  9253 ;; Registers used:
  9254 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  9255 ;; Tracked objects:
  9256 ;;		On entry : 3F/0
  9257 ;;		On exit  : 3F/0
  9258 ;;		Unchanged: 0/0
  9259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9263 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9264 ;;Total ram usage:        0 bytes
  9265 ;; Hardware stack levels used:    1
  9266 ;; Hardware stack levels required when called:   12
  9267 ;; This function calls:
  9268 ;;		_printf
  9269 ;;		_ringBufS_flush
  9270 ;;		_start_lcd
  9271 ;;		_strlen
  9272 ;;		_wait_lcd_set
  9273 ;;		_wdtdelay
  9274 ;; This function is called by:
  9275 ;;		_eaDogM_WriteStringAtPos
  9276 ;; This function uses a reentrant model
  9277 ;;
  9278                           
  9279                           	psect	text33
  9280  005B44                     __ptext33:
  9281                           	opt callstack 0
  9282  005B44                     _eaDogM_WriteString:
  9283                           	opt callstack 17
  9284                           
  9285                           ; BSR set to: 0
  9286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9287                           ;incstack = 0
  9288                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  9289  005B44  82BE               	bsf	16318,1,c	;volatile
  9290                           
  9291                           ;eadog.c: 170:  wait_lcd_set();
  9292  005B46  EC83  F037         	call	_wait_lcd_set	;wreg free
  9293                           
  9294                           ; BSR set to: 0
  9295                           ;eadog.c: 172:  ringBufS_flush(spi_link.tx1a, 0);
  9296  005B4A  0E00               	movlw	0
  9297  005B4C  6EE6               	movwf	postinc1,c
  9298  005B4E  0060  F35F  FFE6   	movff	_spi_link+6,postinc1
  9299  005B54  0060  F363  FFE6   	movff	_spi_link+7,postinc1
  9300  005B5A  EC8B  F02F         	call	_ringBufS_flush	;wreg free
  9301  005B5E  94BC               	bcf	16316,2,c	;volatile
  9302                           
  9303                           ;eadog.c: 174:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  9304                           ;stkvar	_strPtr @ sp[(0)+-1]
  9305  005B60  0EFF               	movlw	-1
  9306  005B62  006F FF8C  F048    	movff	plusw1,btemp+11
  9307  005B68  0060  F123  FFE6   	movff	btemp+11,postinc1
  9308  005B6E  0E00               	movlw	0
  9309  005B70  6EE6               	movwf	postinc1,c
  9310  005B72  ECA2  F02E         	call	_strlen	;wreg free
  9311  005B76  503E               	movf	btemp+1,w,c
  9312  005B78  E104               	bnz	u5850
  9313  005B7A  0E41               	movlw	65
  9314  005B7C  5C3D               	subwf	btemp,w,c
  9315  005B7E  A0D8               	btfss	status,0,c
  9316  005B80  D008               	goto	l9076
  9317  005B82                     u5850:
  9318                           
  9319                           ;stkvar	_strPtr @ sp[(0)+-1]
  9320  005B82  0EFF               	movlw	-1
  9321  005B84  50E3               	movf	plusw1,w,c
  9322  005B86  6ED9               	movwf	fsr2l,c
  9323  005B88  6ADA               	clrf	fsr2h,c
  9324  005B8A  0E40               	movlw	64
  9325  005B8C  26D9               	addwf	fsr2l,f,c
  9326  005B8E  0E00               	movlw	0
  9327  005B90  6EDF               	movwf	indf2,c
  9328  005B92                     l9076:
  9329                           
  9330                           ;eadog.c: 175:  DMA1CON0bits.EN = 0;
  9331  005B92  013B               	movlb	59	; () banked
  9332  005B94  9FFC               	bcf	252,7,b	;volatile
  9333                           
  9334                           ; BSR set to: 59
  9335                           ;eadog.c: 176:  DMA1SSZ = strlen(strPtr);
  9336                           ;stkvar	_strPtr @ sp[(0)+-1]
  9337  005B96  0EFF               	movlw	-1
  9338  005B98  006F FF8C  F048    	movff	plusw1,btemp+11
  9339  005B9E  0060  F123  FFE6   	movff	btemp+11,postinc1
  9340  005BA4  0E00               	movlw	0
  9341  005BA6  6EE6               	movwf	postinc1,c
  9342  005BA8  ECA2  F02E         	call	_strlen	;wreg free
  9343  005BAC  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  9344  005BB2  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  9345                           
  9346                           ;eadog.c: 177:  DMA1CON0bits.EN = 1;
  9347  005BB8  013B               	movlb	59	; () banked
  9348  005BBA  8FFC               	bsf	252,7,b	;volatile
  9349                           
  9350                           ; BSR set to: 59
  9351                           ;eadog.c: 178:  printf("%s", strPtr);
  9352                           ;stkvar	_strPtr @ sp[(0)+-1]
  9353  005BBC  0EFF               	movlw	-1
  9354  005BBE  006F FF8C  F048    	movff	plusw1,btemp+11
  9355  005BC4  0060  F123  FFE6   	movff	btemp+11,postinc1
  9356  005BCA  0E00               	movlw	0
  9357  005BCC  6EE6               	movwf	postinc1,c
  9358  005BCE  0EB8               	movlw	(STR_2+9)& (0+255)
  9359  005BD0  6EE6               	movwf	postinc1,c
  9360  005BD2  0E03               	movlw	3
  9361  005BD4  6EE6               	movwf	postinc1,c
  9362  005BD6  ECE4  F030         	call	_printf	;wreg free
  9363                           
  9364                           ; BSR set to: 0
  9365                           ;eadog.c: 179:  start_lcd();
  9366  005BDA  EC86  F037         	call	_start_lcd	;wreg free
  9367                           
  9368                           ; BSR set to: 59
  9369                           ;eadog.c: 181:  wdtdelay(9000);
  9370  005BDE  0E28               	movlw	40
  9371  005BE0  6EE6               	movwf	postinc1,c
  9372  005BE2  0E23               	movlw	35
  9373  005BE4  6EE6               	movwf	postinc1,c
  9374  005BE6  0E00               	movlw	0
  9375  005BE8  6EE6               	movwf	postinc1,c
  9376  005BEA  0E00               	movlw	0
  9377  005BEC  6EE6               	movwf	postinc1,c
  9378  005BEE  EC44  F031         	call	_wdtdelay	;wreg free
  9379                           
  9380                           ; BSR set to: 0
  9381                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  9382  005BF2  52E5               	movf	postdec1,f,c
  9383  005BF4  0012               	return		;funcret
  9384  005BF6                     __end_of_eaDogM_WriteString:
  9385                           	opt callstack 0
  9386                           
  9387 ;; *************** function _eaDogM_WriteCommand *****************
  9388 ;; Defined at:
  9389 ;;		line 143 in file "eadog.c"
  9390 ;; Parameters:    Size  Location     Type
  9391 ;;  cmd             1  [STACK] unsigned char 
  9392 ;; Auto vars:     Size  Location     Type
  9393 ;;		None
  9394 ;; Return value:  Size  Location     Type
  9395 ;;                  1  [STACK] void 
  9396 ;; Registers used:
  9397 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  9398 ;; Tracked objects:
  9399 ;;		On entry : 3F/3D
  9400 ;;		On exit  : 3F/0
  9401 ;;		Unchanged: 0/0
  9402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9407 ;;Total ram usage:        0 bytes
  9408 ;; Hardware stack levels used:    1
  9409 ;; Hardware stack levels required when called:   13
  9410 ;; This function calls:
  9411 ;;		_send_lcd_cmd_dma
  9412 ;; This function is called by:
  9413 ;;		_main
  9414 ;; This function uses a reentrant model
  9415 ;;
  9416                           
  9417                           	psect	text34
  9418  006E7C                     __ptext34:
  9419                           	opt callstack 0
  9420  006E7C                     _eaDogM_WriteCommand:
  9421                           	opt callstack 17
  9422                           
  9423                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  9424                           ;stkvar	_cmd @ sp[(0)+-1]
  9425                           
  9426                           ; BSR set to: 0
  9427                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9428                           ;incstack = 0
  9429  006E7C  0EFF               	movlw	-1
  9430  006E7E  50E3               	movf	plusw1,w,c
  9431  006E80  6EE6               	movwf	postinc1,c
  9432  006E82  EC9B  F031         	call	_send_lcd_cmd_dma	;wreg free
  9433                           
  9434                           ; BSR set to: 0
  9435                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  9436  006E86  52E5               	movf	postdec1,f,c
  9437  006E88  0012               	return		;funcret
  9438  006E8A                     __end_of_eaDogM_WriteCommand:
  9439                           	opt callstack 0
  9440                           
  9441 ;; *************** function _send_lcd_cmd_dma *****************
  9442 ;; Defined at:
  9443 ;;		line 188 in file "eadog.c"
  9444 ;; Parameters:    Size  Location     Type
  9445 ;;  strPtr          1  [STACK] unsigned char 
  9446 ;; Auto vars:     Size  Location     Type
  9447 ;;		None
  9448 ;; Return value:  Size  Location     Type
  9449 ;;                  1  [STACK] void 
  9450 ;; Registers used:
  9451 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  9452 ;; Tracked objects:
  9453 ;;		On entry : 0/0
  9454 ;;		On exit  : 3F/0
  9455 ;;		Unchanged: 0/0
  9456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9461 ;;Total ram usage:        0 bytes
  9462 ;; Hardware stack levels used:    1
  9463 ;; Hardware stack levels required when called:   12
  9464 ;; This function calls:
  9465 ;;		_printf
  9466 ;;		_ringBufS_flush
  9467 ;;		_start_lcd
  9468 ;;		_wait_lcd_done
  9469 ;;		_wait_lcd_set
  9470 ;; This function is called by:
  9471 ;;		_eaDogM_WriteCommand
  9472 ;;		_eaDogM_WriteStringAtPos
  9473 ;; This function uses a reentrant model
  9474 ;;
  9475                           
  9476                           	psect	text35
  9477  006336                     __ptext35:
  9478                           	opt callstack 0
  9479  006336                     _send_lcd_cmd_dma:
  9480                           	opt callstack 17
  9481                           
  9482                           ; BSR set to: 0
  9483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9484                           ;incstack = 0
  9485                           ;eadog.c: 188: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 189: {;eadog.c: 190:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  9486  006336  82BE               	bsf	16318,1,c	;volatile
  9487                           
  9488                           ;eadog.c: 191:  wait_lcd_set();
  9489  006338  EC83  F037         	call	_wait_lcd_set	;wreg free
  9490                           
  9491                           ; BSR set to: 0
  9492                           ;eadog.c: 193:  ringBufS_flush(spi_link.tx1a, 0);
  9493  00633C  0E00               	movlw	0
  9494  00633E  6EE6               	movwf	postinc1,c
  9495  006340  0060  F35F  FFE6   	movff	_spi_link+6,postinc1
  9496  006346  0060  F363  FFE6   	movff	_spi_link+7,postinc1
  9497  00634C  EC8B  F02F         	call	_ringBufS_flush	;wreg free
  9498  006350  92BC               	bcf	16316,1,c	;volatile
  9499  006352  94BC               	bcf	16316,2,c	;volatile
  9500                           
  9501                           ;eadog.c: 196:  DMA1CON0bits.EN = 0;
  9502  006354  013B               	movlb	59	; () banked
  9503  006356  9FFC               	bcf	252,7,b	;volatile
  9504                           
  9505                           ; BSR set to: 59
  9506                           ;eadog.c: 197:  DMA1SSZ = 1;
  9507  006358  0E00               	movlw	0
  9508  00635A  6FF8               	movwf	248,b	;volatile
  9509  00635C  0E01               	movlw	1
  9510  00635E  6FF7               	movwf	247,b	;volatile
  9511                           
  9512                           ; BSR set to: 59
  9513                           ;eadog.c: 198:  DMA1CON0bits.EN = 1;
  9514  006360  8FFC               	bsf	252,7,b	;volatile
  9515                           
  9516                           ; BSR set to: 59
  9517                           ;eadog.c: 199:  printf("%c", strPtr);
  9518                           ;stkvar	_strPtr @ sp[(0)+-1]
  9519  006362  0EFF               	movlw	-1
  9520  006364  50E3               	movf	plusw1,w,c
  9521  006366  6EE6               	movwf	postinc1,c
  9522  006368  0E00               	movlw	0
  9523  00636A  6EE6               	movwf	postinc1,c
  9524  00636C  0ED3               	movlw	STR_18& (0+255)
  9525  00636E  6EE6               	movwf	postinc1,c
  9526  006370  0E03               	movlw	3
  9527  006372  6EE6               	movwf	postinc1,c
  9528  006374  ECE4  F030         	call	_printf	;wreg free
  9529                           
  9530                           ; BSR set to: 0
  9531                           ;eadog.c: 200:  start_lcd();
  9532  006378  EC86  F037         	call	_start_lcd	;wreg free
  9533                           
  9534                           ; BSR set to: 59
  9535                           ;eadog.c: 201:  wait_lcd_done();
  9536  00637C  ECB8  F036         	call	_wait_lcd_done	;wreg free
  9537                           
  9538                           ; BSR set to: 0
  9539  006380  82BC               	bsf	16316,1,c	;volatile
  9540                           
  9541                           ; BSR set to: 0
  9542                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  9543  006382  52E5               	movf	postdec1,f,c
  9544  006384  0012               	return		;funcret
  9545  006386                     __end_of_send_lcd_cmd_dma:
  9546                           	opt callstack 0
  9547                           
  9548 ;; *************** function _wait_lcd_set *****************
  9549 ;; Defined at:
  9550 ;;		line 114 in file "eadog.c"
  9551 ;; Parameters:    Size  Location     Type
  9552 ;;		None
  9553 ;; Auto vars:     Size  Location     Type
  9554 ;;		None
  9555 ;; Return value:  Size  Location     Type
  9556 ;;                  1  [STACK] void 
  9557 ;; Registers used:
  9558 ;;		None
  9559 ;; Tracked objects:
  9560 ;;		On entry : 0/0
  9561 ;;		On exit  : 3F/0
  9562 ;;		Unchanged: 0/0
  9563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9564 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9565 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9566 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9567 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9568 ;;Total ram usage:        0 bytes
  9569 ;; Hardware stack levels used:    1
  9570 ;; Hardware stack levels required when called:    3
  9571 ;; This function calls:
  9572 ;;		Nothing
  9573 ;; This function is called by:
  9574 ;;		_eaDogM_WriteString
  9575 ;;		_send_lcd_cmd_dma
  9576 ;; This function uses a reentrant model
  9577 ;;
  9578                           
  9579                           	psect	text36
  9580  006F06                     __ptext36:
  9581                           	opt callstack 0
  9582  006F06                     _wait_lcd_set:
  9583                           	opt callstack 25
  9584                           
  9585                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  9586                           
  9587                           ; BSR set to: 0
  9588                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9589                           ;incstack = 0
  9590  006F06  0100               	movlb	0	; () banked
  9591  006F08  87D1               	bsf	_spi_link& (0+255),3,b	;volatile
  9592                           
  9593                           ; BSR set to: 0
  9594                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  9595  006F0A  0012               	return		;funcret
  9596  006F0C                     __end_of_wait_lcd_set:
  9597                           	opt callstack 0
  9598                           
  9599 ;; *************** function _wait_lcd_done *****************
  9600 ;; Defined at:
  9601 ;;		line 124 in file "eadog.c"
  9602 ;; Parameters:    Size  Location     Type
  9603 ;;		None
  9604 ;; Auto vars:     Size  Location     Type
  9605 ;;		None
  9606 ;; Return value:  Size  Location     Type
  9607 ;;                  1  [STACK] void 
  9608 ;; Registers used:
  9609 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9610 ;; Tracked objects:
  9611 ;;		On entry : 4/0
  9612 ;;		On exit  : 3F/0
  9613 ;;		Unchanged: 0/0
  9614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9619 ;;Total ram usage:        0 bytes
  9620 ;; Hardware stack levels used:    1
  9621 ;; Hardware stack levels required when called:    4
  9622 ;; This function calls:
  9623 ;;		_wdtdelay
  9624 ;; This function is called by:
  9625 ;;		_main
  9626 ;;		_send_lcd_cmd_dma
  9627 ;; This function uses a reentrant model
  9628 ;;
  9629                           
  9630                           	psect	text37
  9631  006D70                     __ptext37:
  9632                           	opt callstack 0
  9633  006D70                     _wait_lcd_done:
  9634                           	opt callstack 26
  9635                           
  9636                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  9637                           
  9638                           ; BSR set to: 0
  9639                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9640                           ;incstack = 0
  9641  006D70  0100               	movlb	0	; () banked
  9642  006D72  B7D1               	btfsc	_spi_link& (0+255),3,b	;volatile
  9643  006D74  D7FD               	goto	_wait_lcd_done
  9644                           
  9645                           ; BSR set to: 0
  9646                           ;eadog.c: 127:  wdtdelay(50);
  9647  006D76  0E32               	movlw	50
  9648  006D78  6EE6               	movwf	postinc1,c
  9649  006D7A  0E00               	movlw	0
  9650  006D7C  6EE6               	movwf	postinc1,c
  9651  006D7E  0E00               	movlw	0
  9652  006D80  6EE6               	movwf	postinc1,c
  9653  006D82  0E00               	movlw	0
  9654  006D84  6EE6               	movwf	postinc1,c
  9655  006D86  EC44  F031         	call	_wdtdelay	;wreg free
  9656                           
  9657                           ; BSR set to: 0
  9658                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  9659  006D8A  0012               	return		;funcret
  9660  006D8C                     __end_of_wait_lcd_done:
  9661                           	opt callstack 0
  9662                           
  9663 ;; *************** function _wdtdelay *****************
  9664 ;; Defined at:
  9665 ;;		line 21 in file "eadog.c"
  9666 ;; Parameters:    Size  Location     Type
  9667 ;;  delay           4  [STACK] unsigned long 
  9668 ;; Auto vars:     Size  Location     Type
  9669 ;;		None
  9670 ;; Return value:  Size  Location     Type
  9671 ;;                  1  [STACK] void 
  9672 ;; Registers used:
  9673 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  9674 ;; Tracked objects:
  9675 ;;		On entry : 0/0
  9676 ;;		On exit  : 3F/0
  9677 ;;		Unchanged: 0/0
  9678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9679 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9680 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9681 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9682 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9683 ;;Total ram usage:        0 bytes
  9684 ;; Hardware stack levels used:    1
  9685 ;; Hardware stack levels required when called:    3
  9686 ;; This function calls:
  9687 ;;		Nothing
  9688 ;; This function is called by:
  9689 ;;		_init_display
  9690 ;;		_send_lcd_cmd
  9691 ;;		_send_lcd_cmd_long
  9692 ;;		_wait_lcd_done
  9693 ;;		_eaDogM_WriteString
  9694 ;; This function uses a reentrant model
  9695 ;;
  9696                           
  9697                           	psect	text38
  9698  006288                     __ptext38:
  9699                           	opt callstack 0
  9700  006288                     _wdtdelay:
  9701                           	opt callstack 26
  9702                           
  9703                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  9704                           
  9705                           ; BSR set to: 0
  9706                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9707                           ;incstack = 0
  9708  006288  0100               	movlb	0	; () banked
  9709  00628A  6BE4               	clrf	wdtdelay@dcount& (0+255),b
  9710  00628C  6BE5               	clrf	(wdtdelay@dcount+1)& (0+255),b
  9711  00628E  6BE6               	clrf	(wdtdelay@dcount+2)& (0+255),b
  9712  006290  6BE7               	clrf	(wdtdelay@dcount+3)& (0+255),b
  9713  006292  D009               	goto	l6130
  9714  006294                     l1369:
  9715                           
  9716                           ; BSR set to: 0
  9717                           ;eadog.c: 26:   __nop();
  9718  006294  F000               	nop	
  9719  006296  0004               	clrwdt		;# 
  9720                           
  9721                           ;eadog.c: 28:  };
  9722  006298  0E01               	movlw	1
  9723  00629A  0100               	movlb	0	; () banked
  9724  00629C  27E4               	addwf	wdtdelay@dcount& (0+255),f,b
  9725  00629E  0E00               	movlw	0
  9726  0062A0  23E5               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  9727  0062A2  23E6               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  9728  0062A4  23E7               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  9729  0062A6                     l6130:
  9730                           
  9731                           ; BSR set to: 0
  9732                           ;stkvar	_delay @ sp[(0)+-4]
  9733  0062A6  0EFC               	movlw	-4
  9734  0062A8  006F FF8C  F03D    	movff	plusw1,btemp
  9735  0062AE  51E4               	movf	wdtdelay@dcount& (0+255),w,b
  9736  0062B0  5C3D               	subwf	btemp,w,c
  9737  0062B2  0EFD               	movlw	-3
  9738  0062B4  006F FF8C  F03D    	movff	plusw1,btemp
  9739  0062BA  51E5               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  9740  0062BC  583D               	subwfb	btemp,w,c
  9741  0062BE  0EFE               	movlw	-2
  9742  0062C0  006F FF8C  F03D    	movff	plusw1,btemp
  9743  0062C6  51E6               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  9744  0062C8  583D               	subwfb	btemp,w,c
  9745  0062CA  0EFF               	movlw	-1
  9746  0062CC  006F FF8C  F03D    	movff	plusw1,btemp
  9747  0062D2  51E7               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  9748  0062D4  583D               	subwfb	btemp,w,c
  9749  0062D6  B0D8               	btfsc	status,0,c
  9750  0062D8  D7DD               	goto	l1369
  9751                           
  9752                           ; BSR set to: 0
  9753                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  9754  0062DA  52E5               	movf	postdec1,f,c
  9755  0062DC  52E5               	movf	postdec1,f,c
  9756  0062DE  52E5               	movf	postdec1,f,c
  9757  0062E0  52E5               	movf	postdec1,f,c
  9758  0062E2  0012               	return		;funcret
  9759  0062E4                     __end_of_wdtdelay:
  9760                           	opt callstack 0
  9761                           
  9762 ;; *************** function _start_lcd *****************
  9763 ;; Defined at:
  9764 ;;		line 109 in file "eadog.c"
  9765 ;; Parameters:    Size  Location     Type
  9766 ;;		None
  9767 ;; Auto vars:     Size  Location     Type
  9768 ;;		None
  9769 ;; Return value:  Size  Location     Type
  9770 ;;                  1  [STACK] void 
  9771 ;; Registers used:
  9772 ;;		None
  9773 ;; Tracked objects:
  9774 ;;		On entry : 3F/0
  9775 ;;		On exit  : 3F/3B
  9776 ;;		Unchanged: 0/0
  9777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9779 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9780 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9781 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9782 ;;Total ram usage:        0 bytes
  9783 ;; Hardware stack levels used:    1
  9784 ;; Hardware stack levels required when called:    3
  9785 ;; This function calls:
  9786 ;;		Nothing
  9787 ;; This function is called by:
  9788 ;;		_eaDogM_WriteString
  9789 ;;		_send_lcd_cmd_dma
  9790 ;; This function uses a reentrant model
  9791 ;;
  9792                           
  9793                           	psect	text39
  9794  006F0C                     __ptext39:
  9795                           	opt callstack 0
  9796  006F0C                     _start_lcd:
  9797                           	opt callstack 25
  9798                           
  9799                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  9800                           
  9801                           ; BSR set to: 0
  9802                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9803                           ;incstack = 0
  9804  006F0C  013B               	movlb	59	; () banked
  9805  006F0E  8DFC               	bsf	252,6,b	;volatile
  9806                           
  9807                           ; BSR set to: 59
  9808                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  9809  006F10  0012               	return		;funcret
  9810  006F12                     __end_of_start_lcd:
  9811                           	opt callstack 0
  9812                           
  9813 ;; *************** function _ringBufS_flush *****************
  9814 ;; Defined at:
  9815 ;;		line 76 in file "ringbufs.c"
  9816 ;; Parameters:    Size  Location     Type
  9817 ;;  _this           2  [STACK] PTR struct ringBufS_t
  9818 ;;		 -> ring_buf1(67), 
  9819 ;;  clearBuffer     1  [STACK] const char 
  9820 ;; Auto vars:     Size  Location     Type
  9821 ;;		None
  9822 ;; Return value:  Size  Location     Type
  9823 ;;                  1  [STACK] void 
  9824 ;; Registers used:
  9825 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9826 ;; Tracked objects:
  9827 ;;		On entry : 3F/0
  9828 ;;		On exit  : 0/0
  9829 ;;		Unchanged: 0/0
  9830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9831 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9832 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9834 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9835 ;;Total ram usage:        0 bytes
  9836 ;; Hardware stack levels used:    1
  9837 ;; Hardware stack levels required when called:    4
  9838 ;; This function calls:
  9839 ;;		_memset
  9840 ;; This function is called by:
  9841 ;;		_eaDogM_WriteString
  9842 ;;		_send_lcd_cmd_dma
  9843 ;; This function uses a reentrant model
  9844 ;;
  9845                           
  9846                           	psect	text40
  9847  005F16                     __ptext40:
  9848                           	opt callstack 0
  9849  005F16                     _ringBufS_flush:
  9850                           	opt callstack 24
  9851                           
  9852                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  9853                           ;stkvar	__this @ sp[(0)+-2]
  9854                           
  9855                           ; BSR set to: 59
  9856                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9857                           ;incstack = 0
  9858  005F16  0EFE               	movlw	-2
  9859  005F18  006F FF8C  F047    	movff	plusw1,btemp+10
  9860  005F1E  0EFF               	movlw	-1
  9861  005F20  006F FF8C  F048    	movff	plusw1,btemp+11
  9862  005F26  0E42               	movlw	66
  9863  005F28  2447               	addwf	btemp+10,w,c
  9864  005F2A  6ED9               	movwf	fsr2l,c
  9865  005F2C  0E00               	movlw	0
  9866  005F2E  2048               	addwfc	btemp+11,w,c
  9867  005F30  6EDA               	movwf	fsr2h,c
  9868  005F32  0E00               	movlw	0
  9869  005F34  6EDF               	movwf	indf2,c
  9870                           
  9871                           ;ringbufs.c: 79:  _this->head = 0;
  9872                           ;stkvar	__this @ sp[(0)+-2]
  9873  005F36  0EFE               	movlw	-2
  9874  005F38  006F FF8C  F047    	movff	plusw1,btemp+10
  9875  005F3E  0EFF               	movlw	-1
  9876  005F40  006F FF8C  F048    	movff	plusw1,btemp+11
  9877  005F46  0E40               	movlw	64
  9878  005F48  2447               	addwf	btemp+10,w,c
  9879  005F4A  6ED9               	movwf	fsr2l,c
  9880  005F4C  0E00               	movlw	0
  9881  005F4E  2048               	addwfc	btemp+11,w,c
  9882  005F50  6EDA               	movwf	fsr2h,c
  9883  005F52  0E00               	movlw	0
  9884  005F54  6EDF               	movwf	indf2,c
  9885                           
  9886                           ;ringbufs.c: 80:  _this->tail = 0;
  9887                           ;stkvar	__this @ sp[(0)+-2]
  9888  005F56  0EFE               	movlw	-2
  9889  005F58  006F FF8C  F047    	movff	plusw1,btemp+10
  9890  005F5E  0EFF               	movlw	-1
  9891  005F60  006F FF8C  F048    	movff	plusw1,btemp+11
  9892  005F66  0E41               	movlw	65
  9893  005F68  2447               	addwf	btemp+10,w,c
  9894  005F6A  6ED9               	movwf	fsr2l,c
  9895  005F6C  0E00               	movlw	0
  9896  005F6E  2048               	addwfc	btemp+11,w,c
  9897  005F70  6EDA               	movwf	fsr2h,c
  9898  005F72  0E00               	movlw	0
  9899  005F74  6EDF               	movwf	indf2,c
  9900                           
  9901                           ;ringbufs.c: 81:  if (clearBuffer) {
  9902                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  9903  005F76  0EFD               	movlw	-3
  9904  005F78  50E3               	movf	plusw1,w,c
  9905  005F7A  B4D8               	btfsc	status,2,c
  9906  005F7C  D011               	goto	l1509
  9907                           
  9908                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  9909  005F7E  0E40               	movlw	64
  9910  005F80  6EE6               	movwf	postinc1,c
  9911  005F82  0E00               	movlw	0
  9912  005F84  6EE6               	movwf	postinc1,c
  9913  005F86  0E00               	movlw	0
  9914  005F88  6EE6               	movwf	postinc1,c
  9915  005F8A  0E00               	movlw	0
  9916  005F8C  6EE6               	movwf	postinc1,c
  9917                           
  9918                           ;stkvar	__this @ sp[(-4)+-2]
  9919  005F8E  0EFA               	movlw	-6
  9920  005F90  006F FF8F FFE6     	movff	plusw1,postinc1
  9921  005F96  006F FF8F FFE6     	movff	plusw1,postinc1
  9922  005F9C  EC1B  F01D         	call	_memset	;wreg free
  9923  005FA0                     l1509:
  9924                           
  9925                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  9926  005FA0  52E5               	movf	postdec1,f,c
  9927  005FA2  52E5               	movf	postdec1,f,c
  9928  005FA4  52E5               	movf	postdec1,f,c
  9929  005FA6  0012               	return		;funcret
  9930  005FA8                     __end_of_ringBufS_flush:
  9931                           	opt callstack 0
  9932                           
  9933 ;; *************** function _memset *****************
  9934 ;; Defined at:
  9935 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  9936 ;; Parameters:    Size  Location     Type
  9937 ;;  dest            2  [STACK] PTR void 
  9938 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9939 ;;  c               2  [STACK] int 
  9940 ;;  n               2  [STACK] unsigned int 
  9941 ;; Auto vars:     Size  Location     Type
  9942 ;;  s               2  [STACK] PTR unsigned char 
  9943 ;;		 -> ring_buf2(67), ring_buf1(67), 
  9944 ;;  k               2  [STACK] unsigned int 
  9945 ;; Return value:  Size  Location     Type
  9946 ;;                  2  [STACK] PTR void 
  9947 ;; Registers used:
  9948 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  9949 ;; Tracked objects:
  9950 ;;		On entry : 0/0
  9951 ;;		On exit  : 0/0
  9952 ;;		Unchanged: 0/0
  9953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9954 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9955 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9956 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9957 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9958 ;;Total ram usage:        0 bytes
  9959 ;; Hardware stack levels used:    1
  9960 ;; Hardware stack levels required when called:    3
  9961 ;; This function calls:
  9962 ;;		Nothing
  9963 ;; This function is called by:
  9964 ;;		_ringBufS_init
  9965 ;;		_ringBufS_flush
  9966 ;; This function uses a reentrant model
  9967 ;;
  9968                           
  9969                           	psect	text41
  9970  003A36                     __ptext41:
  9971                           	opt callstack 0
  9972  003A36                     _memset:
  9973                           	opt callstack 0
  9974                           
  9975                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9976  003A36  52E6               	movf	postinc1,f,c
  9977  003A38  52E6               	movf	postinc1,f,c
  9978  003A3A  52E6               	movf	postinc1,f,c
  9979  003A3C  52E6               	movf	postinc1,f,c
  9980                           
  9981                           ;stkvar	_dest @ sp[(-4)+-2]
  9982                           
  9983                           ;incstack = 0
  9984  003A3E  0EFA               	movlw	-6
  9985  003A40  006F FF8C  F047    	movff	plusw1,btemp+10
  9986  003A46  0EFB               	movlw	-5
  9987  003A48  006F FF8C  F048    	movff	plusw1,btemp+11
  9988                           
  9989                           ;stkvar	_s @ sp[(-4)+0]
  9990  003A4E  0EFD               	movlw	-3
  9991  003A50  0060  F123  FFE3   	movff	btemp+11,plusw1
  9992  003A56  0EFC               	movlw	-4
  9993  003A58  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9994                           
  9995                           ;stkvar	_n @ sp[(-4)+-6]
  9996  003A5E  0EF6               	movlw	-10
  9997  003A60  006F FF8C  F03D    	movff	plusw1,btemp
  9998  003A66  0EF7               	movlw	-9
  9999  003A68  50E3               	movf	plusw1,w,c
 10000  003A6A  103D               	iorwf	btemp,w,c
 10001  003A6C  B4D8               	btfsc	status,2,c
 10002  003A6E  D154               	goto	u5800
 10003                           
 10004                           ;stkvar	_c @ sp[(-4)+-4]
 10005                           ;stkvar	_s @ sp[(-4)+0]
 10006  003A70  0EFC               	movlw	-4
 10007  003A72  006F FF8F FFD9     	movff	plusw1,fsr2l
 10008  003A78  0EFD               	movlw	-3
 10009  003A7A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10010  003A80  0EF8               	movlw	-8
 10011  003A82  006F FF8F FFDF     	movff	plusw1,indf2
 10012                           
 10013                           ;stkvar	_c @ sp[(-4)+-4]
 10014                           ;stkvar	_n @ sp[(-4)+-6]
 10015                           ;stkvar	_s @ sp[(-4)+0]
 10016  003A88  0EFC               	movlw	-4
 10017  003A8A  006F FF8C  F047    	movff	plusw1,btemp+10
 10018  003A90  0EFD               	movlw	-3
 10019  003A92  006F FF8C  F048    	movff	plusw1,btemp+11
 10020  003A98  0EF6               	movlw	-10
 10021  003A9A  50E3               	movf	plusw1,w,c
 10022  003A9C  2647               	addwf	btemp+10,f,c
 10023  003A9E  0EF7               	movlw	-9
 10024  003AA0  50E3               	movf	plusw1,w,c
 10025  003AA2  2248               	addwfc	btemp+11,f,c
 10026  003AA4  0EFF               	movlw	255
 10027  003AA6  2447               	addwf	btemp+10,w,c
 10028  003AA8  6ED9               	movwf	fsr2l,c
 10029  003AAA  0EFF               	movlw	255
 10030  003AAC  2048               	addwfc	btemp+11,w,c
 10031  003AAE  6EDA               	movwf	fsr2h,c
 10032  003AB0  0EF8               	movlw	-8
 10033  003AB2  006F FF8F FFDF     	movff	plusw1,indf2
 10034                           
 10035                           ;stkvar	_n @ sp[(-4)+-6]
 10036  003AB8  0EF7               	movlw	-9
 10037  003ABA  50E3               	movf	plusw1,w,c
 10038  003ABC  E108               	bnz	l8978
 10039  003ABE  0EF6               	movlw	-10
 10040  003AC0  006F FF8C  F03D    	movff	plusw1,btemp
 10041  003AC6  0E03               	movlw	3
 10042  003AC8  5E3D               	subwf	btemp,f,c
 10043  003ACA  A0D8               	btfss	status,0,c
 10044  003ACC  D125               	goto	u5800
 10045  003ACE                     l8978:
 10046                           
 10047                           ;stkvar	_c @ sp[(-4)+-4]
 10048                           ;stkvar	_s @ sp[(-4)+0]
 10049  003ACE  0EFC               	movlw	-4
 10050  003AD0  006F FF8C  F047    	movff	plusw1,btemp+10
 10051  003AD6  0EFD               	movlw	-3
 10052  003AD8  006F FF8C  F048    	movff	plusw1,btemp+11
 10053  003ADE  0E01               	movlw	1
 10054  003AE0  2447               	addwf	btemp+10,w,c
 10055  003AE2  6ED9               	movwf	fsr2l,c
 10056  003AE4  0E00               	movlw	0
 10057  003AE6  2048               	addwfc	btemp+11,w,c
 10058  003AE8  6EDA               	movwf	fsr2h,c
 10059  003AEA  0EF8               	movlw	-8
 10060  003AEC  006F FF8F FFDF     	movff	plusw1,indf2
 10061                           
 10062                           ;stkvar	_c @ sp[(-4)+-4]
 10063                           ;stkvar	_s @ sp[(-4)+0]
 10064  003AF2  0EFC               	movlw	-4
 10065  003AF4  006F FF8C  F047    	movff	plusw1,btemp+10
 10066  003AFA  0EFD               	movlw	-3
 10067  003AFC  006F FF8C  F048    	movff	plusw1,btemp+11
 10068  003B02  0E02               	movlw	2
 10069  003B04  2447               	addwf	btemp+10,w,c
 10070  003B06  6ED9               	movwf	fsr2l,c
 10071  003B08  0E00               	movlw	0
 10072  003B0A  2048               	addwfc	btemp+11,w,c
 10073  003B0C  6EDA               	movwf	fsr2h,c
 10074  003B0E  0EF8               	movlw	-8
 10075  003B10  006F FF8F FFDF     	movff	plusw1,indf2
 10076                           
 10077                           ;stkvar	_c @ sp[(-4)+-4]
 10078                           ;stkvar	_n @ sp[(-4)+-6]
 10079                           ;stkvar	_s @ sp[(-4)+0]
 10080  003B16  0EFC               	movlw	-4
 10081  003B18  006F FF8C  F047    	movff	plusw1,btemp+10
 10082  003B1E  0EFD               	movlw	-3
 10083  003B20  006F FF8C  F048    	movff	plusw1,btemp+11
 10084  003B26  0EF6               	movlw	-10
 10085  003B28  50E3               	movf	plusw1,w,c
 10086  003B2A  2647               	addwf	btemp+10,f,c
 10087  003B2C  0EF7               	movlw	-9
 10088  003B2E  50E3               	movf	plusw1,w,c
 10089  003B30  2248               	addwfc	btemp+11,f,c
 10090  003B32  0EFE               	movlw	254
 10091  003B34  2447               	addwf	btemp+10,w,c
 10092  003B36  6ED9               	movwf	fsr2l,c
 10093  003B38  0EFF               	movlw	255
 10094  003B3A  2048               	addwfc	btemp+11,w,c
 10095  003B3C  6EDA               	movwf	fsr2h,c
 10096  003B3E  0EF8               	movlw	-8
 10097  003B40  006F FF8F FFDF     	movff	plusw1,indf2
 10098                           
 10099                           ;stkvar	_c @ sp[(-4)+-4]
 10100                           ;stkvar	_n @ sp[(-4)+-6]
 10101                           ;stkvar	_s @ sp[(-4)+0]
 10102  003B46  0EFC               	movlw	-4
 10103  003B48  006F FF8C  F047    	movff	plusw1,btemp+10
 10104  003B4E  0EFD               	movlw	-3
 10105  003B50  006F FF8C  F048    	movff	plusw1,btemp+11
 10106  003B56  0EF6               	movlw	-10
 10107  003B58  50E3               	movf	plusw1,w,c
 10108  003B5A  2647               	addwf	btemp+10,f,c
 10109  003B5C  0EF7               	movlw	-9
 10110  003B5E  50E3               	movf	plusw1,w,c
 10111  003B60  2248               	addwfc	btemp+11,f,c
 10112  003B62  0EFD               	movlw	253
 10113  003B64  2447               	addwf	btemp+10,w,c
 10114  003B66  6ED9               	movwf	fsr2l,c
 10115  003B68  0EFF               	movlw	255
 10116  003B6A  2048               	addwfc	btemp+11,w,c
 10117  003B6C  6EDA               	movwf	fsr2h,c
 10118  003B6E  0EF8               	movlw	-8
 10119  003B70  006F FF8F FFDF     	movff	plusw1,indf2
 10120                           
 10121                           ;stkvar	_n @ sp[(-4)+-6]
 10122  003B76  0EF7               	movlw	-9
 10123  003B78  50E3               	movf	plusw1,w,c
 10124  003B7A  E108               	bnz	l8984
 10125  003B7C  0EF6               	movlw	-10
 10126  003B7E  006F FF8C  F03D    	movff	plusw1,btemp
 10127  003B84  0E07               	movlw	7
 10128  003B86  5E3D               	subwf	btemp,f,c
 10129  003B88  A0D8               	btfss	status,0,c
 10130  003B8A  D0C6               	goto	u5800
 10131  003B8C                     l8984:
 10132                           
 10133                           ;stkvar	_c @ sp[(-4)+-4]
 10134                           ;stkvar	_s @ sp[(-4)+0]
 10135  003B8C  0EFC               	movlw	-4
 10136  003B8E  006F FF8C  F047    	movff	plusw1,btemp+10
 10137  003B94  0EFD               	movlw	-3
 10138  003B96  006F FF8C  F048    	movff	plusw1,btemp+11
 10139  003B9C  0E03               	movlw	3
 10140  003B9E  2447               	addwf	btemp+10,w,c
 10141  003BA0  6ED9               	movwf	fsr2l,c
 10142  003BA2  0E00               	movlw	0
 10143  003BA4  2048               	addwfc	btemp+11,w,c
 10144  003BA6  6EDA               	movwf	fsr2h,c
 10145  003BA8  0EF8               	movlw	-8
 10146  003BAA  006F FF8F FFDF     	movff	plusw1,indf2
 10147                           
 10148                           ;stkvar	_c @ sp[(-4)+-4]
 10149                           ;stkvar	_n @ sp[(-4)+-6]
 10150                           ;stkvar	_s @ sp[(-4)+0]
 10151  003BB0  0EFC               	movlw	-4
 10152  003BB2  006F FF8C  F047    	movff	plusw1,btemp+10
 10153  003BB8  0EFD               	movlw	-3
 10154  003BBA  006F FF8C  F048    	movff	plusw1,btemp+11
 10155  003BC0  0EF6               	movlw	-10
 10156  003BC2  50E3               	movf	plusw1,w,c
 10157  003BC4  2647               	addwf	btemp+10,f,c
 10158  003BC6  0EF7               	movlw	-9
 10159  003BC8  50E3               	movf	plusw1,w,c
 10160  003BCA  2248               	addwfc	btemp+11,f,c
 10161  003BCC  0EFC               	movlw	252
 10162  003BCE  2447               	addwf	btemp+10,w,c
 10163  003BD0  6ED9               	movwf	fsr2l,c
 10164  003BD2  0EFF               	movlw	255
 10165  003BD4  2048               	addwfc	btemp+11,w,c
 10166  003BD6  6EDA               	movwf	fsr2h,c
 10167  003BD8  0EF8               	movlw	-8
 10168  003BDA  006F FF8F FFDF     	movff	plusw1,indf2
 10169                           
 10170                           ;stkvar	_n @ sp[(-4)+-6]
 10171  003BE0  0EF7               	movlw	-9
 10172  003BE2  50E3               	movf	plusw1,w,c
 10173  003BE4  E108               	bnz	l8990
 10174  003BE6  0EF6               	movlw	-10
 10175  003BE8  006F FF8C  F03D    	movff	plusw1,btemp
 10176  003BEE  0E09               	movlw	9
 10177  003BF0  5E3D               	subwf	btemp,f,c
 10178  003BF2  A0D8               	btfss	status,0,c
 10179  003BF4  D091               	goto	u5800
 10180  003BF6                     l8990:
 10181                           
 10182                           ;stkvar	_s @ sp[(-4)+0]
 10183  003BF6  0EFC               	movlw	-4
 10184  003BF8  006F FF8C  F047    	movff	plusw1,btemp+10
 10185  003BFE  1E47               	comf	btemp+10,f,c
 10186  003C00  0EFD               	movlw	-3
 10187  003C02  006F FF8C  F048    	movff	plusw1,btemp+11
 10188  003C08  1E48               	comf	btemp+11,f,c
 10189  003C0A  2A47               	incf	btemp+10,f,c
 10190  003C0C  B4D8               	btfsc	status,2,c
 10191  003C0E  2A48               	incf	btemp+11,f,c
 10192  003C10  0E03               	movlw	3
 10193  003C12  1647               	andwf	btemp+10,f,c
 10194  003C14  0E00               	movlw	0
 10195  003C16  1648               	andwf	btemp+11,f,c
 10196                           
 10197                           ;stkvar	_k @ sp[(-4)+2]
 10198  003C18  0EFE               	movlw	-2
 10199  003C1A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10200  003C20  0EFF               	movlw	-1
 10201  003C22  0060  F123  FFE3   	movff	btemp+11,plusw1
 10202                           
 10203                           ;stkvar	_k @ sp[(-4)+2]
 10204                           ;stkvar	_s @ sp[(-4)+0]
 10205  003C28  0EFC               	movlw	-4
 10206  003C2A  50E3               	movf	plusw1,w,c
 10207  003C2C  6E3D               	movwf	btemp,c
 10208  003C2E  0EFE               	movlw	-2
 10209  003C30  50E3               	movf	plusw1,w,c
 10210  003C32  263D               	addwf	btemp,f,c
 10211  003C34  0EFC               	movlw	-4
 10212  003C36  0060  F0F7  FFE3   	movff	btemp,plusw1
 10213  003C3C  0EFD               	movlw	-3
 10214  003C3E  50E3               	movf	plusw1,w,c
 10215  003C40  6E3D               	movwf	btemp,c
 10216  003C42  0EFF               	movlw	-1
 10217  003C44  50E3               	movf	plusw1,w,c
 10218  003C46  223D               	addwfc	btemp,f,c
 10219  003C48  0EFD               	movlw	-3
 10220  003C4A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10221                           
 10222                           ;stkvar	_k @ sp[(-4)+2]
 10223                           ;stkvar	_n @ sp[(-4)+-6]
 10224  003C50  0EF6               	movlw	-10
 10225  003C52  50E3               	movf	plusw1,w,c
 10226  003C54  6E3D               	movwf	btemp,c
 10227  003C56  0EFE               	movlw	-2
 10228  003C58  50E3               	movf	plusw1,w,c
 10229  003C5A  5E3D               	subwf	btemp,f,c
 10230  003C5C  0EF6               	movlw	-10
 10231  003C5E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10232  003C64  0EF7               	movlw	-9
 10233  003C66  50E3               	movf	plusw1,w,c
 10234  003C68  6E3D               	movwf	btemp,c
 10235  003C6A  0EFF               	movlw	-1
 10236  003C6C  50E3               	movf	plusw1,w,c
 10237  003C6E  5A3D               	subwfb	btemp,f,c
 10238  003C70  0EF7               	movlw	-9
 10239  003C72  0060  F0F7  FFE3   	movff	btemp,plusw1
 10240  003C78  0EFC               	movlw	252
 10241  003C7A  6E47               	movwf	btemp+10,c
 10242  003C7C  0EFF               	movlw	255
 10243  003C7E  6E48               	movwf	btemp+11,c
 10244                           
 10245                           ;stkvar	_n @ sp[(-4)+-6]
 10246  003C80  0EF6               	movlw	-10
 10247  003C82  006F FF8C  F03D    	movff	plusw1,btemp
 10248  003C88  5047               	movf	btemp+10,w,c
 10249  003C8A  163D               	andwf	btemp,f,c
 10250  003C8C  0EF6               	movlw	-10
 10251  003C8E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10252  003C94  0EF7               	movlw	-9
 10253  003C96  006F FF8C  F03D    	movff	plusw1,btemp
 10254  003C9C  5048               	movf	btemp+11,w,c
 10255  003C9E  163D               	andwf	btemp,f,c
 10256  003CA0  0EF7               	movlw	-9
 10257  003CA2  D02E               	goto	L23
 10258  003CA4                     l8998:
 10259                           
 10260                           ;stkvar	_c @ sp[(-4)+-4]
 10261                           ;stkvar	_s @ sp[(-4)+0]
 10262  003CA4  0EFC               	movlw	-4
 10263  003CA6  006F FF8F FFD9     	movff	plusw1,fsr2l
 10264  003CAC  0EFD               	movlw	-3
 10265  003CAE  006F FF8F FFDA     	movff	plusw1,fsr2h
 10266  003CB4  0EF8               	movlw	-8
 10267  003CB6  006F FF8F FFDF     	movff	plusw1,indf2
 10268                           
 10269                           ;stkvar	_n @ sp[(-4)+-6]
 10270  003CBC  0EF6               	movlw	-10
 10271  003CBE  006F FF8C  F03D    	movff	plusw1,btemp
 10272  003CC4  0E01               	movlw	1
 10273  003CC6  5E3D               	subwf	btemp,f,c
 10274  003CC8  0EF6               	movlw	-10
 10275  003CCA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10276  003CD0  0EF7               	movlw	-9
 10277  003CD2  006F FF8C  F03D    	movff	plusw1,btemp
 10278  003CD8  0E00               	movlw	0
 10279  003CDA  5A3D               	subwfb	btemp,f,c
 10280  003CDC  0EF7               	movlw	-9
 10281  003CDE  0060  F0F7  FFE3   	movff	btemp,plusw1
 10282                           
 10283                           ;stkvar	_s @ sp[(-4)+0]
 10284  003CE4  0EFC               	movlw	-4
 10285  003CE6  50E3               	movf	plusw1,w,c
 10286  003CE8  0F01               	addlw	1
 10287  003CEA  6E3D               	movwf	btemp,c
 10288  003CEC  0EFC               	movlw	-4
 10289  003CEE  0060  F0F7  FFE3   	movff	btemp,plusw1
 10290  003CF4  6A3D               	clrf	btemp,c
 10291  003CF6  0EFD               	movlw	-3
 10292  003CF8  50E3               	movf	plusw1,w,c
 10293  003CFA  203D               	addwfc	btemp,w,c
 10294  003CFC  6E3D               	movwf	btemp,c
 10295  003CFE  0EFD               	movlw	-3
 10296  003D00                     L23:
 10297  003D00  0060  F0F7  FFE3   	movff	btemp,plusw1
 10298                           
 10299                           ;stkvar	_n @ sp[(-4)+-6]
 10300  003D06  0EF6               	movlw	-10
 10301  003D08  006F FF8C  F03D    	movff	plusw1,btemp
 10302  003D0E  0EF7               	movlw	-9
 10303  003D10  50E3               	movf	plusw1,w,c
 10304  003D12  103D               	iorwf	btemp,w,c
 10305  003D14  A4D8               	btfss	status,2,c
 10306  003D16  D7C6               	goto	l8998
 10307  003D18                     u5800:
 10308                           
 10309                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
 10310  003D18  0EF6               	movlw	246
 10311  003D1A  26E1               	addwf	fsr1l,f,c
 10312  003D1C  0EFF               	movlw	255
 10313  003D1E  22E2               	addwfc	fsr1h,f,c
 10314  003D20  0012               	return		;funcret
 10315  003D22                     __end_of_memset:
 10316                           	opt callstack 0
 10317                           
 10318 ;; *************** function _printf *****************
 10319 ;; Defined at:
 10320 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;  fmt             1  [STACK] PTR const unsigned char 
 10323 ;;		 -> STR_19(3), STR_18(3), STR_17(3), 
 10324 ;; Auto vars:     Size  Location     Type
 10325 ;;  ap              2  [STACK] PTR void [1]
 10326 ;;		 -> ?_printf(2), ?_sprintf(2), 
 10327 ;;  ret             2    0        int 
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  2  [STACK] int 
 10330 ;; Registers used:
 10331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 10332 ;; Tracked objects:
 10333 ;;		On entry : 3F/3B
 10334 ;;		On exit  : 3F/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10337 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10339 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10340 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10341 ;;Total ram usage:        0 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:   11
 10344 ;; This function calls:
 10345 ;;		_vfprintf
 10346 ;; This function is called by:
 10347 ;;		_eaDogM_WriteString
 10348 ;;		_send_lcd_cmd_dma
 10349 ;; This function uses a reentrant model
 10350 ;;
 10351                           
 10352                           	psect	text42
 10353  0061C8                     __ptext42:
 10354                           	opt callstack 0
 10355  0061C8                     _printf:
 10356                           	opt callstack 0
 10357                           
 10358                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10359  0061C8  52E6               	movf	postinc1,f,c
 10360  0061CA  52E6               	movf	postinc1,f,c
 10361                           
 10362                           ;stkvar	?_printf @ sp[(-2)+-3]
 10363                           
 10364                           ;incstack = 0
 10365  0061CC  0EFB               	movlw	251
 10366  0061CE  24E1               	addwf	fsr1l,w,c
 10367  0061D0  6E47               	movwf	btemp+10,c
 10368  0061D2  0EFF               	movlw	255
 10369  0061D4  20E2               	addwfc	fsr1h,w,c
 10370  0061D6  6E48               	movwf	btemp+11,c
 10371  0061D8  0E01               	movlw	1
 10372  0061DA  2647               	addwf	btemp+10,f,c
 10373  0061DC  0E00               	movlw	0
 10374  0061DE  2248               	addwfc	btemp+11,f,c
 10375                           
 10376                           ;stkvar	_ap @ sp[(-2)+0]
 10377  0061E0  0EFF               	movlw	-1
 10378  0061E2  0060  F123  FFE3   	movff	btemp+11,plusw1
 10379  0061E8  0EFE               	movlw	-2
 10380  0061EA  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10381                           
 10382                           ;stkvar	_ap @ sp[(-2)+0]
 10383  0061F0  0EFE               	movlw	254
 10384  0061F2  24E1               	addwf	fsr1l,w,c
 10385  0061F4  6E3D               	movwf	btemp,c
 10386  0061F6  0EFF               	movlw	255
 10387  0061F8  20E2               	addwfc	fsr1h,w,c
 10388  0061FA  6E3E               	movwf	btemp+1,c
 10389  0061FC  0060  F0F7  FFE6   	movff	btemp,postinc1
 10390  006202  0060  F0FB  FFE6   	movff	btemp+1,postinc1
 10391                           
 10392                           ;stkvar	_fmt @ sp[(-4)+-2]
 10393  006208  0EFA               	movlw	-6
 10394  00620A  50E3               	movf	plusw1,w,c
 10395  00620C  6EE6               	movwf	postinc1,c
 10396  00620E  0E00               	movlw	0
 10397  006210  6EE6               	movwf	postinc1,c
 10398  006212  0E00               	movlw	0
 10399  006214  6EE6               	movwf	postinc1,c
 10400  006216  ECF3  F02E         	call	_vfprintf	;wreg free
 10401                           
 10402                           ; BSR set to: 0
 10403                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
 10404  00621A  52E5               	movf	postdec1,f,c
 10405  00621C  52E5               	movf	postdec1,f,c
 10406  00621E  52E5               	movf	postdec1,f,c
 10407  006220  50E7               	movf	indf1,w,c
 10408  006222  5EE1               	subwf	fsr1l,f,c
 10409  006224  0E00               	movlw	0
 10410  006226  5AE2               	subwfb	fsr1h,f,c
 10411  006228  0012               	return		;funcret
 10412  00622A                     __end_of_printf:
 10413                           	opt callstack 0
 10414                           
 10415 ;; *************** function _vfprintf *****************
 10416 ;; Defined at:
 10417 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10418 ;; Parameters:    Size  Location     Type
 10419 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10420 ;;		 -> f(5), NULL(0), 
 10421 ;;  fmt             1  [STACK] PTR const unsigned char 
 10422 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(26), 
 10423 ;;		 -> STR_15(26), STR_14(6), STR_13(19), STR_12(26), 
 10424 ;;		 -> STR_11(18), STR_10(21), STR_9(18), STR_8(6), 
 10425 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
 10426 ;;		 -> STR_2(12), STR_1(17), 
 10427 ;;  ap              2  [STACK] PTR PTR void 
 10428 ;;		 -> ap(2), ap(2), 
 10429 ;; Auto vars:     Size  Location     Type
 10430 ;;  cfmt            1  [STACK] PTR unsigned char 
 10431 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(26), 
 10432 ;;		 -> STR_15(26), STR_14(6), STR_13(19), STR_12(26), 
 10433 ;;		 -> STR_11(18), STR_10(21), STR_9(18), STR_8(6), 
 10434 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
 10435 ;;		 -> STR_2(12), STR_1(17), 
 10436 ;; Return value:  Size  Location     Type
 10437 ;;                  2  [STACK] int 
 10438 ;; Registers used:
 10439 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 10440 ;; Tracked objects:
 10441 ;;		On entry : 0/0
 10442 ;;		On exit  : 3F/0
 10443 ;;		Unchanged: 0/0
 10444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10449 ;;Total ram usage:        0 bytes
 10450 ;; Hardware stack levels used:    1
 10451 ;; Hardware stack levels required when called:   10
 10452 ;; This function calls:
 10453 ;;		_vfpfcnvrt
 10454 ;; This function is called by:
 10455 ;;		_sprintf
 10456 ;;		_printf
 10457 ;; This function uses a reentrant model
 10458 ;;
 10459                           
 10460                           	psect	text43
 10461  005DE6                     __ptext43:
 10462                           	opt callstack 0
 10463  005DE6                     _vfprintf:
 10464                           	opt callstack 0
 10465                           
 10466                           ; BSR set to: 0
 10467                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10468  005DE6  52E6               	movf	postinc1,f,c
 10469                           
 10470                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
 10471                           ;stkvar	_fmt @ sp[(-1)+-3]
 10472                           
 10473                           ;incstack = 0
 10474  005DE8  0EFC               	movlw	-4
 10475  005DEA  006F FF8C  F048    	movff	plusw1,btemp+11
 10476                           
 10477                           ;stkvar	_cfmt @ sp[(-1)+0]
 10478  005DF0  0EFF               	movlw	-1
 10479  005DF2  0060  F123  FFE3   	movff	btemp+11,plusw1
 10480                           
 10481                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
 10482  005DF8  0100               	movlb	0	; () banked
 10483  005DFA  6BF1               	clrf	_nout& (0+255),b
 10484  005DFC  6BF2               	clrf	(_nout+1)& (0+255),b
 10485                           
 10486                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10487  005DFE  D021               	goto	l9012
 10488  005E00                     l9010:
 10489                           
 10490                           ; BSR set to: 0
 10491                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
 10492                           ;stkvar	_ap @ sp[(-1)+-5]
 10493  005E00  0EFA               	movlw	-6
 10494  005E02  006F FF8F FFE6     	movff	plusw1,postinc1
 10495  005E08  006F FF8F FFE6     	movff	plusw1,postinc1
 10496                           
 10497                           ;stkvar	_cfmt @ sp[(-3)+0]
 10498  005E0E  0EFD               	movlw	253
 10499  005E10  24E1               	addwf	fsr1l,w,c
 10500  005E12  6E3D               	movwf	btemp,c
 10501  005E14  0EFF               	movlw	255
 10502  005E16  20E2               	addwfc	fsr1h,w,c
 10503  005E18  6E3E               	movwf	btemp+1,c
 10504  005E1A  0060  F0F7  FFE6   	movff	btemp,postinc1
 10505  005E20  0060  F0FB  FFE6   	movff	btemp+1,postinc1
 10506                           
 10507                           ;stkvar	_fp @ sp[(-5)+-2]
 10508  005E26  0EF9               	movlw	-7
 10509  005E28  006F FF8F FFE6     	movff	plusw1,postinc1
 10510  005E2E  006F FF8F FFE6     	movff	plusw1,postinc1
 10511  005E34  EC8D  F013         	call	_vfpfcnvrt	;wreg free
 10512  005E38  503D               	movf	btemp,w,c
 10513  005E3A  0100               	movlb	0	; () banked
 10514  005E3C  27F1               	addwf	_nout& (0+255),f,b
 10515  005E3E  503E               	movf	btemp+1,w,c
 10516  005E40  23F2               	addwfc	(_nout+1)& (0+255),f,b
 10517  005E42                     l9012:
 10518                           
 10519                           ; BSR set to: 0
 10520                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
 10521                           ;stkvar	_cfmt @ sp[(-1)+0]
 10522  005E42  50E1               	movf	fsr1l,w,c
 10523  005E44  0FFF               	addlw	-1
 10524  005E46  6ED9               	movwf	fsr2l,c
 10525  005E48  50E2               	movf	fsr1h,w,c
 10526  005E4A  6EDA               	movwf	fsr2h,c
 10527  005E4C  0EFF               	movlw	255
 10528  005E4E  22DA               	addwfc	fsr2h,f,c
 10529  005E50  006F FF7F FFF6     	movff	indf2,tblptrl
 10530  005E56                     	if	1	;There is more than 1 active tblptr byte
 10531  005E56  0E20               	movlw	high __smallconst
 10532  005E58  6EF7               	movwf	tblptrh,c
 10533  005E5A                     	endif
 10534  005E5A                     	if	0	;tblptru may be non-zero
 10535  005E5A                     	endif
 10536  005E5A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10537  005E5A  0E00               	movlw	low (__smallconst shr (0+16))
 10538  005E5C  6EF8               	movwf	tblptru,c
 10539  005E5E                     	endif
 10540  005E5E  0008               	tblrd		*
 10541  005E60  50F5               	movf	tablat,w,c
 10542  005E62  0900               	iorlw	0
 10543  005E64  A4D8               	btfss	status,2,c
 10544  005E66  D7CC               	goto	l9010
 10545                           
 10546                           ; BSR set to: 0
 10547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
 10548  005E68  0060  F3C4  F03D   	movff	_nout,btemp
 10549  005E6E  0060  F3C8  F03E   	movff	_nout+1,btemp+1
 10550                           
 10551                           ; BSR set to: 0
 10552                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
 10553  005E74  0EFA               	movlw	250
 10554  005E76  26E1               	addwf	fsr1l,f,c
 10555  005E78  0EFF               	movlw	255
 10556  005E7A  22E2               	addwfc	fsr1h,f,c
 10557  005E7C  0012               	return		;funcret
 10558  005E7E                     __end_of_vfprintf:
 10559                           	opt callstack 0
 10560                           
 10561 ;; *************** function _vfpfcnvrt *****************
 10562 ;; Defined at:
 10563 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10564 ;; Parameters:    Size  Location     Type
 10565 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10566 ;;		 -> f(5), NULL(0), 
 10567 ;;  fmt             2  [STACK] PTR PTR unsigned char 
 10568 ;;		 -> cfmt(1), 
 10569 ;;  ap              2  [STACK] PTR PTR void 
 10570 ;;		 -> ap(2), ap(2), 
 10571 ;; Auto vars:     Size  Location     Type
 10572 ;;  ll              8  [STACK] long long 
 10573 ;;  llu             8    0        unsigned long long 
 10574 ;;  f               4    0        unsigned long long 
 10575 ;;  vp              3    0        PTR void 
 10576 ;;  ct              3    0        unsigned char [3]
 10577 ;;  cp              2  [STACK] PTR unsigned char 
 10578 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(100), 
 10579 ;;  i               2    0        int 
 10580 ;;  done            2    0        int 
 10581 ;;  c               1  [STACK] unsigned char 
 10582 ;; Return value:  Size  Location     Type
 10583 ;;                  2  [STACK] int 
 10584 ;; Registers used:
 10585 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
 10586 ;; Tracked objects:
 10587 ;;		On entry : 0/0
 10588 ;;		On exit  : 0/0
 10589 ;;		Unchanged: 0/0
 10590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10595 ;;Total ram usage:        0 bytes
 10596 ;; Hardware stack levels used:    1
 10597 ;; Hardware stack levels required when called:    9
 10598 ;; This function calls:
 10599 ;;		_atoi
 10600 ;;		_ctoa
 10601 ;;		_dtoa
 10602 ;;		_fputc
 10603 ;;		_isdigit
 10604 ;;		_stoa
 10605 ;;		_strncmp
 10606 ;; This function is called by:
 10607 ;;		_vfprintf
 10608 ;; This function uses a reentrant model
 10609 ;;
 10610                           
 10611                           	psect	text44
 10612  00271A                     __ptext44:
 10613                           	opt callstack 0
 10614  00271A                     _vfpfcnvrt:
 10615                           	opt callstack 0
 10616                           
 10617                           ; BSR set to: 0
 10618                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10619  00271A  0E0D               	movlw	13
 10620  00271C  26E1               	addwf	fsr1l,f,c
 10621  00271E  0E00               	movlw	0
 10622  002720  22E2               	addwfc	fsr1h,f,c
 10623                           
 10624                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
 10625                           ;stkvar	_fmt @ sp[(-13)+-4]
 10626                           
 10627                           ;incstack = 0
 10628  002722  0EEF               	movlw	-17
 10629  002724  006F FF8F FFD9     	movff	plusw1,fsr2l
 10630  00272A  0EF0               	movlw	-16
 10631  00272C  006F FF8F FFDA     	movff	plusw1,fsr2h
 10632  002732  006F FF7F FFF6     	movff	indf2,tblptrl
 10633  002738                     	if	1	;There is more than 1 active tblptr byte
 10634  002738  0E20               	movlw	high __smallconst
 10635  00273A  6EF7               	movwf	tblptrh,c
 10636  00273C                     	endif
 10637  00273C                     	if	0	;tblptru may be non-zero
 10638  00273C                     	endif
 10639  00273C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10640  00273C  0E00               	movlw	low (__smallconst shr (0+16))
 10641  00273E  6EF8               	movwf	tblptru,c
 10642  002740                     	endif
 10643  002740  0008               	tblrd		*
 10644  002742  50F5               	movf	tablat,w,c
 10645  002744  0A25               	xorlw	37
 10646  002746  A4D8               	btfss	status,2,c
 10647  002748  D2A9               	goto	l8956
 10648                           
 10649                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
 10650                           ;stkvar	_fmt @ sp[(-13)+-4]
 10651  00274A  0EEF               	movlw	-17
 10652  00274C  006F FF8F FFD9     	movff	plusw1,fsr2l
 10653  002752  0EF0               	movlw	-16
 10654  002754  006F FF8F FFDA     	movff	plusw1,fsr2h
 10655  00275A  2ADF               	incf	indf2,f,c
 10656                           
 10657                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
 10658  00275C  6A1D               	clrf	_width,c
 10659  00275E  6A1E               	clrf	_width+1,c
 10660  002760  6A21               	clrf	_flags,c
 10661  002762  6A22               	clrf	_flags+1,c
 10662                           
 10663                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
 10664  002764  681F               	setf	_prec,c
 10665  002766  6820               	setf	_prec+1,c
 10666                           
 10667                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
 10668                           ;stkvar	_fmt @ sp[(-13)+-4]
 10669  002768  0EEF               	movlw	-17
 10670  00276A  006F FF8F FFD9     	movff	plusw1,fsr2l
 10671  002770  0EF0               	movlw	-16
 10672  002772  006F FF8F FFDA     	movff	plusw1,fsr2h
 10673  002778  006F FF7F FFF6     	movff	indf2,tblptrl
 10674  00277E                     	if	1	;There is more than 1 active tblptr byte
 10675  00277E  0E20               	movlw	high __smallconst
 10676  002780  6EF7               	movwf	tblptrh,c
 10677  002782                     	endif
 10678  002782                     	if	0	;tblptru may be non-zero
 10679  002782                     	endif
 10680  002782                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10681  002782  0E00               	movlw	low (__smallconst shr (0+16))
 10682  002784  6EF8               	movwf	tblptru,c
 10683  002786                     	endif
 10684  002786  0008               	tblrd		*
 10685  002788  50F5               	movf	tablat,w,c
 10686  00278A  0A2A               	xorlw	42
 10687  00278C  A4D8               	btfss	status,2,c
 10688  00278E  D02F               	goto	l8886
 10689                           
 10690                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
 10691                           ;stkvar	_fmt @ sp[(-13)+-4]
 10692  002790  0EEF               	movlw	-17
 10693  002792  006F FF8F FFD9     	movff	plusw1,fsr2l
 10694  002798  0EF0               	movlw	-16
 10695  00279A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10696  0027A0  2ADF               	incf	indf2,f,c
 10697                           
 10698                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
 10699                           ;stkvar	_ap @ sp[(-13)+-6]
 10700  0027A2  0EED               	movlw	-19
 10701  0027A4  006F FF8F FFD9     	movff	plusw1,fsr2l
 10702  0027AA  0EEE               	movlw	-18
 10703  0027AC  006F FF8F FFDA     	movff	plusw1,fsr2h
 10704  0027B2  0E02               	movlw	2
 10705  0027B4  5EDE               	subwf	postinc2,f,c
 10706  0027B6  0E00               	movlw	0
 10707  0027B8  5ADD               	subwfb	postdec2,f,c
 10708  0027BA  006F FF78  F047    	movff	postinc2,btemp+10
 10709  0027C0  006F FF74  F048    	movff	postdec2,btemp+11
 10710  0027C6  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10711  0027CC  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10712  0027D2  006F FF78  F01D    	movff	postinc2,_width
 10713  0027D8  006F FF74  F01E    	movff	postdec2,_width+1
 10714                           
 10715                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
 10716  0027DE  AE1E               	btfss	_width+1,7,c
 10717  0027E0  D059               	goto	u5680
 10718                           
 10719                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
 10720  0027E2  8021               	bsf	_flags,0,c
 10721                           
 10722                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
 10723  0027E4  6C1D               	negf	_width,c
 10724  0027E6  1E1E               	comf	_width+1,f,c
 10725  0027E8  B0D8               	btfsc	status,0,c
 10726  0027EA  2A1E               	incf	_width+1,f,c
 10727  0027EC  D053               	goto	u5680
 10728  0027EE                     l8886:
 10729                           
 10730                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
 10731                           ;stkvar	_fmt @ sp[(-13)+-4]
 10732  0027EE  0EEF               	movlw	-17
 10733  0027F0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10734  0027F6  0EF0               	movlw	-16
 10735  0027F8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10736  0027FE  50DF               	movf	indf2,w,c
 10737  002800  6EE6               	movwf	postinc1,c
 10738  002802  EC38  F026         	call	_atoi	;wreg free
 10739  002806  0060  F0F4  F01D   	movff	btemp,_width
 10740  00280C  0060  F0F8  F01E   	movff	btemp+1,_width+1
 10741                           
 10742                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
 10743  002812  D009               	goto	l8890
 10744  002814                     l8888:
 10745                           
 10746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
 10747                           ;stkvar	_fmt @ sp[(-13)+-4]
 10748  002814  0EEF               	movlw	-17
 10749  002816  006F FF8F FFD9     	movff	plusw1,fsr2l
 10750  00281C  0EF0               	movlw	-16
 10751  00281E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10752  002824  2ADF               	incf	indf2,f,c
 10753  002826                     l8890:
 10754  002826  0ED0               	movlw	208
 10755  002828  6E47               	movwf	btemp+10,c
 10756  00282A  0EFF               	movlw	255
 10757  00282C  6E48               	movwf	btemp+11,c
 10758                           
 10759                           ;stkvar	_fmt @ sp[(-13)+-4]
 10760  00282E  0EEF               	movlw	-17
 10761  002830  006F FF8F FFD9     	movff	plusw1,fsr2l
 10762  002836  0EF0               	movlw	-16
 10763  002838  006F FF8F FFDA     	movff	plusw1,fsr2h
 10764  00283E  006F FF7F FFF6     	movff	indf2,tblptrl
 10765  002844                     	if	1	;There is more than 1 active tblptr byte
 10766  002844  0E20               	movlw	high __smallconst
 10767  002846  6EF7               	movwf	tblptrh,c
 10768  002848                     	endif
 10769  002848                     	if	0	;tblptru may be non-zero
 10770  002848                     	endif
 10771  002848                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10772  002848  0E00               	movlw	low (__smallconst shr (0+16))
 10773  00284A  6EF8               	movwf	tblptru,c
 10774  00284C                     	endif
 10775  00284C  0008               	tblrd		*
 10776  00284E  50F5               	movf	tablat,w,c
 10777  002850  6E45               	movwf	btemp+8,c
 10778  002852  6A46               	clrf	btemp+9,c
 10779  002854  5047               	movf	btemp+10,w,c
 10780  002856  2645               	addwf	btemp+8,f,c
 10781  002858  5048               	movf	btemp+11,w,c
 10782  00285A  2246               	addwfc	btemp+9,f,c
 10783  00285C  5046               	movf	btemp+9,w,c
 10784  00285E  E106               	bnz	u5660
 10785  002860  0E0A               	movlw	10
 10786  002862  5C45               	subwf	btemp+8,w,c
 10787  002864  B0D8               	btfsc	status,0,c
 10788  002866  D002               	goto	u5660
 10789  002868  0E01               	movlw	1
 10790  00286A  D001               	goto	u5670
 10791  00286C                     u5660:
 10792  00286C  0E00               	movlw	0
 10793  00286E                     u5670:
 10794  00286E  6E47               	movwf	btemp+10,c
 10795  002870  6A48               	clrf	btemp+11,c
 10796                           
 10797                           ;stkvar	_vfpfcnvrt$4074 @ sp[(-13)+0]
 10798  002872  0EF3               	movlw	-13
 10799  002874  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10800  00287A  0EF4               	movlw	-12
 10801  00287C  0060  F123  FFE3   	movff	btemp+11,plusw1
 10802                           
 10803                           ;stkvar	_vfpfcnvrt$4074 @ sp[(-13)+0]
 10804  002882  0EF3               	movlw	-13
 10805  002884  006F FF8C  F03D    	movff	plusw1,btemp
 10806  00288A  0EF4               	movlw	-12
 10807  00288C  50E3               	movf	plusw1,w,c
 10808  00288E  103D               	iorwf	btemp,w,c
 10809  002890  A4D8               	btfss	status,2,c
 10810  002892  D7C0               	goto	l8888
 10811  002894                     u5680:
 10812                           
 10813                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
 10814                           ;stkvar	_fmt @ sp[(-13)+-4]
 10815  002894  0EEF               	movlw	-17
 10816  002896  006F FF8F FFD9     	movff	plusw1,fsr2l
 10817  00289C  0EF0               	movlw	-16
 10818  00289E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10819  0028A4  006F FF7F FFF6     	movff	indf2,tblptrl
 10820  0028AA                     	if	1	;There is more than 1 active tblptr byte
 10821  0028AA  0E20               	movlw	high __smallconst
 10822  0028AC  6EF7               	movwf	tblptrh,c
 10823  0028AE                     	endif
 10824  0028AE                     	if	0	;tblptru may be non-zero
 10825  0028AE                     	endif
 10826  0028AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10827  0028AE  0E00               	movlw	low (__smallconst shr (0+16))
 10828  0028B0  6EF8               	movwf	tblptru,c
 10829  0028B2                     	endif
 10830  0028B2  0008               	tblrd		*
 10831  0028B4  50F5               	movf	tablat,w,c
 10832  0028B6  0A63               	xorlw	99
 10833  0028B8  A4D8               	btfss	status,2,c
 10834  0028BA  D034               	goto	l8906
 10835                           
 10836                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
 10837                           ;stkvar	_fmt @ sp[(-13)+-4]
 10838  0028BC  0EEF               	movlw	-17
 10839  0028BE  006F FF8F FFD9     	movff	plusw1,fsr2l
 10840  0028C4  0EF0               	movlw	-16
 10841  0028C6  006F FF8F FFDA     	movff	plusw1,fsr2h
 10842  0028CC  2ADF               	incf	indf2,f,c
 10843                           
 10844                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
 10845                           ;stkvar	_ap @ sp[(-13)+-6]
 10846  0028CE  0EED               	movlw	-19
 10847  0028D0  006F FF8F FFD9     	movff	plusw1,fsr2l
 10848  0028D6  0EEE               	movlw	-18
 10849  0028D8  006F FF8F FFDA     	movff	plusw1,fsr2h
 10850  0028DE  0E02               	movlw	2
 10851  0028E0  5EDE               	subwf	postinc2,f,c
 10852  0028E2  0E00               	movlw	0
 10853  0028E4  5ADD               	subwfb	postdec2,f,c
 10854  0028E6  006F FF78  F047    	movff	postinc2,btemp+10
 10855  0028EC  006F FF74  F048    	movff	postdec2,btemp+11
 10856  0028F2  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10857  0028F8  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10858  0028FE  50DF               	movf	indf2,w,c
 10859  002900  6E48               	movwf	btemp+11,c
 10860                           
 10861                           ;stkvar	_c @ sp[(-13)+12]
 10862  002902  0EFF               	movlw	-1
 10863  002904  0060  F123  FFE3   	movff	btemp+11,plusw1
 10864                           
 10865                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
 10866                           ;stkvar	_c @ sp[(-13)+12]
 10867  00290A  0EFF               	movlw	-1
 10868  00290C  50E3               	movf	plusw1,w,c
 10869  00290E  6EE6               	movwf	postinc1,c
 10870                           
 10871                           ;stkvar	_fp @ sp[(-14)+-2]
 10872  002910  0EF0               	movlw	-16
 10873  002912  006F FF8F FFE6     	movff	plusw1,postinc1
 10874  002918  006F FF8F FFE6     	movff	plusw1,postinc1
 10875  00291E  ECD4  F02F         	call	_ctoa	;wreg free
 10876  002922  D1E3               	goto	l1965
 10877  002924                     l8906:
 10878                           
 10879                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
 10880                           ;stkvar	_fmt @ sp[(-13)+-4]
 10881  002924  0EEF               	movlw	-17
 10882  002926  006F FF8F FFD9     	movff	plusw1,fsr2l
 10883  00292C  0EF0               	movlw	-16
 10884  00292E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10885  002934  006F FF7F FFF6     	movff	indf2,tblptrl
 10886  00293A                     	if	1	;There is more than 1 active tblptr byte
 10887  00293A  0E20               	movlw	high __smallconst
 10888  00293C  6EF7               	movwf	tblptrh,c
 10889  00293E                     	endif
 10890  00293E                     	if	0	;tblptru may be non-zero
 10891  00293E                     	endif
 10892  00293E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10893  00293E  0E00               	movlw	low (__smallconst shr (0+16))
 10894  002940  6EF8               	movwf	tblptru,c
 10895  002942                     	endif
 10896  002942  0008               	tblrd		*
 10897  002944  50F5               	movf	tablat,w,c
 10898  002946  0A64               	xorlw	100
 10899  002948  B4D8               	btfsc	status,2,c
 10900  00294A  D014               	goto	u5710
 10901                           
 10902                           ;stkvar	_fmt @ sp[(-13)+-4]
 10903  00294C  0EEF               	movlw	-17
 10904  00294E  006F FF8F FFD9     	movff	plusw1,fsr2l
 10905  002954  0EF0               	movlw	-16
 10906  002956  006F FF8F FFDA     	movff	plusw1,fsr2h
 10907  00295C  006F FF7F FFF6     	movff	indf2,tblptrl
 10908  002962                     	if	1	;There is more than 1 active tblptr byte
 10909  002962  0E20               	movlw	high __smallconst
 10910  002964  6EF7               	movwf	tblptrh,c
 10911  002966                     	endif
 10912  002966                     	if	0	;tblptru may be non-zero
 10913  002966                     	endif
 10914  002966                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10915  002966  0E00               	movlw	low (__smallconst shr (0+16))
 10916  002968  6EF8               	movwf	tblptru,c
 10917  00296A                     	endif
 10918  00296A  0008               	tblrd		*
 10919  00296C  50F5               	movf	tablat,w,c
 10920  00296E  0A69               	xorlw	105
 10921  002970  A4D8               	btfss	status,2,c
 10922  002972  D073               	goto	l8918
 10923  002974                     u5710:
 10924                           
 10925                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
 10926                           ;stkvar	_fmt @ sp[(-13)+-4]
 10927  002974  0EEF               	movlw	-17
 10928  002976  006F FF8F FFD9     	movff	plusw1,fsr2l
 10929  00297C  0EF0               	movlw	-16
 10930  00297E  006F FF8F FFDA     	movff	plusw1,fsr2h
 10931  002984  2ADF               	incf	indf2,f,c
 10932                           
 10933                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
 10934                           ;stkvar	_ap @ sp[(-13)+-6]
 10935  002986  0EED               	movlw	-19
 10936  002988  006F FF8F FFD9     	movff	plusw1,fsr2l
 10937  00298E  0EEE               	movlw	-18
 10938  002990  006F FF8F FFDA     	movff	plusw1,fsr2h
 10939  002996  0E02               	movlw	2
 10940  002998  5EDE               	subwf	postinc2,f,c
 10941  00299A  0E00               	movlw	0
 10942  00299C  5ADD               	subwfb	postdec2,f,c
 10943  00299E  006F FF78  F047    	movff	postinc2,btemp+10
 10944  0029A4  006F FF74  F048    	movff	postdec2,btemp+11
 10945  0029AA  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 10946  0029B0  0060  F123  FFDA   	movff	btemp+11,fsr2h
 10947  0029B6  006F FF78  F047    	movff	postinc2,btemp+10
 10948  0029BC  006F FF74  F048    	movff	postdec2,btemp+11
 10949                           
 10950                           ;stkvar	_ll @ sp[(-13)+2]
 10951  0029C2  0EF5               	movlw	-11
 10952  0029C4  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10953  0029CA  0EF6               	movlw	-10
 10954  0029CC  0060  F123  FFE3   	movff	btemp+11,plusw1
 10955  0029D2  6A3D               	clrf	btemp,c
 10956  0029D4  BEE3               	btfsc	plusw1,7,c
 10957  0029D6  683D               	setf	btemp,c
 10958  0029D8  0EF7               	movlw	-9
 10959  0029DA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10960  0029E0  0EF8               	movlw	-8
 10961  0029E2  0060  F0F7  FFE3   	movff	btemp,plusw1
 10962  0029E8  0EF9               	movlw	-7
 10963  0029EA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10964  0029F0  0EFA               	movlw	-6
 10965  0029F2  0060  F0F7  FFE3   	movff	btemp,plusw1
 10966  0029F8  0EFB               	movlw	-5
 10967  0029FA  0060  F0F7  FFE3   	movff	btemp,plusw1
 10968  002A00  0EFC               	movlw	-4
 10969  002A02  0060  F0F7  FFE3   	movff	btemp,plusw1
 10970  002A08                     l8914:
 10971                           
 10972                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
 10973                           ;stkvar	_ll @ sp[(-13)+2]
 10974  002A08  50E1               	movf	fsr1l,w,c
 10975  002A0A  0FF5               	addlw	-11
 10976  002A0C  6ED9               	movwf	fsr2l,c
 10977  002A0E  50E2               	movf	fsr1h,w,c
 10978  002A10  6EDA               	movwf	fsr2h,c
 10979  002A12  0EFF               	movlw	255
 10980  002A14  22DA               	addwfc	fsr2h,f,c
 10981  002A16  006F FF7B FFE6     	movff	postinc2,postinc1
 10982  002A1C  006F FF7B FFE6     	movff	postinc2,postinc1
 10983  002A22  006F FF7B FFE6     	movff	postinc2,postinc1
 10984  002A28  006F FF7B FFE6     	movff	postinc2,postinc1
 10985  002A2E  006F FF7B FFE6     	movff	postinc2,postinc1
 10986  002A34  006F FF7B FFE6     	movff	postinc2,postinc1
 10987  002A3A  006F FF7B FFE6     	movff	postinc2,postinc1
 10988  002A40  006F FF7B FFE6     	movff	postinc2,postinc1
 10989                           
 10990                           ;stkvar	_fp @ sp[(-21)+-2]
 10991  002A46  0EE9               	movlw	-23
 10992  002A48  006F FF8F FFE6     	movff	plusw1,postinc1
 10993  002A4E  006F FF8F FFE6     	movff	plusw1,postinc1
 10994  002A54  EC0D  F019         	call	_dtoa	;wreg free
 10995  002A58  D148               	goto	l1965
 10996  002A5A                     l8918:
 10997                           
 10998                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
 10999  002A5A  0E02               	movlw	2
 11000  002A5C  6EE6               	movwf	postinc1,c
 11001  002A5E  0E00               	movlw	0
 11002  002A60  6EE6               	movwf	postinc1,c
 11003  002A62  0ECD               	movlw	STR_20& (0+255)
 11004  002A64  6EE6               	movwf	postinc1,c
 11005                           
 11006                           ;stkvar	_fmt @ sp[(-16)+-4]
 11007  002A66  0EEC               	movlw	-20
 11008  002A68  006F FF8F FFD9     	movff	plusw1,fsr2l
 11009  002A6E  0EED               	movlw	-19
 11010  002A70  006F FF8F FFDA     	movff	plusw1,fsr2h
 11011  002A76  50DF               	movf	indf2,w,c
 11012  002A78  6EE6               	movwf	postinc1,c
 11013  002A7A  EC4F  F027         	call	_strncmp	;wreg free
 11014  002A7E  503D               	movf	btemp,w,c
 11015  002A80  103E               	iorwf	btemp+1,w,c
 11016  002A82  B4D8               	btfsc	status,2,c
 11017  002A84  D016               	goto	u5730
 11018  002A86  0E02               	movlw	2
 11019  002A88  6EE6               	movwf	postinc1,c
 11020  002A8A  0E00               	movlw	0
 11021  002A8C  6EE6               	movwf	postinc1,c
 11022  002A8E  0ED0               	movlw	STR_24& (0+255)
 11023  002A90  6EE6               	movwf	postinc1,c
 11024                           
 11025                           ;stkvar	_fmt @ sp[(-16)+-4]
 11026  002A92  0EEC               	movlw	-20
 11027  002A94  006F FF8F FFD9     	movff	plusw1,fsr2l
 11028  002A9A  0EED               	movlw	-19
 11029  002A9C  006F FF8F FFDA     	movff	plusw1,fsr2h
 11030  002AA2  50DF               	movf	indf2,w,c
 11031  002AA4  6EE6               	movwf	postinc1,c
 11032  002AA6  EC4F  F027         	call	_strncmp	;wreg free
 11033  002AAA  503D               	movf	btemp,w,c
 11034  002AAC  103E               	iorwf	btemp+1,w,c
 11035  002AAE  A4D8               	btfss	status,2,c
 11036  002AB0  D067               	goto	l8930
 11037  002AB2                     u5730:
 11038                           
 11039                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
 11040                           ;stkvar	_fmt @ sp[(-13)+-4]
 11041  002AB2  0EEF               	movlw	-17
 11042  002AB4  006F FF8F FFD9     	movff	plusw1,fsr2l
 11043  002ABA  0EF0               	movlw	-16
 11044  002ABC  006F FF8F FFDA     	movff	plusw1,fsr2h
 11045  002AC2  0E02               	movlw	2
 11046  002AC4  26DF               	addwf	indf2,f,c
 11047                           
 11048                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
 11049                           ;stkvar	_ap @ sp[(-13)+-6]
 11050  002AC6  0EED               	movlw	-19
 11051  002AC8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11052  002ACE  0EEE               	movlw	-18
 11053  002AD0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11054  002AD6  0E04               	movlw	4
 11055  002AD8  5EDE               	subwf	postinc2,f,c
 11056  002ADA  0E00               	movlw	0
 11057  002ADC  5ADD               	subwfb	postdec2,f,c
 11058  002ADE  006F FF78  F047    	movff	postinc2,btemp+10
 11059  002AE4  006F FF74  F048    	movff	postdec2,btemp+11
 11060  002AEA  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 11061  002AF0  0060  F123  FFDA   	movff	btemp+11,fsr2h
 11062  002AF6  006F FF78  F045    	movff	postinc2,btemp+8
 11063  002AFC  006F FF78  F046    	movff	postinc2,btemp+9
 11064  002B02  006F FF78  F047    	movff	postinc2,btemp+10
 11065  002B08  006F FF78  F048    	movff	postinc2,btemp+11
 11066  002B0E  0060  F114  F04D   	movff	btemp+8,btemp+16
 11067  002B14  0060  F118  F04E   	movff	btemp+9,btemp+17
 11068  002B1A  0060  F11C  F04F   	movff	btemp+10,btemp+18
 11069  002B20  0060  F120  F050   	movff	btemp+11,btemp+19
 11070  002B26  6A51               	clrf	btemp+20,c
 11071  002B28  BE50               	btfsc	btemp+19,7,c
 11072  002B2A  6851               	setf	btemp+20,c
 11073  002B2C  0060  F144  F052   	movff	btemp+20,btemp+21
 11074  002B32  0060  F144  F053   	movff	btemp+20,btemp+22
 11075  002B38  0060  F144  F054   	movff	btemp+20,btemp+23
 11076                           
 11077                           ;stkvar	_ll @ sp[(-13)+2]
 11078  002B3E  0EF5               	movlw	-11
 11079  002B40  0060  F137  FFE3   	movff	btemp+16,plusw1
 11080  002B46  0EF6               	movlw	-10
 11081  002B48  0060  F13B  FFE3   	movff	btemp+17,plusw1
 11082  002B4E  0EF7               	movlw	-9
 11083  002B50  0060  F13F  FFE3   	movff	btemp+18,plusw1
 11084  002B56  0EF8               	movlw	-8
 11085  002B58  0060  F143  FFE3   	movff	btemp+19,plusw1
 11086  002B5E  0EF9               	movlw	-7
 11087  002B60  0060  F147  FFE3   	movff	btemp+20,plusw1
 11088  002B66  0EFA               	movlw	-6
 11089  002B68  0060  F14B  FFE3   	movff	btemp+21,plusw1
 11090  002B6E  0EFB               	movlw	-5
 11091  002B70  0060  F14F  FFE3   	movff	btemp+22,plusw1
 11092  002B76  0EFC               	movlw	-4
 11093  002B78  0060  F153  FFE3   	movff	btemp+23,plusw1
 11094  002B7E  D744               	goto	l8914
 11095  002B80                     l8930:
 11096                           
 11097                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
 11098                           ;stkvar	_fmt @ sp[(-13)+-4]
 11099  002B80  0EEF               	movlw	-17
 11100  002B82  006F FF8F FFD9     	movff	plusw1,fsr2l
 11101  002B88  0EF0               	movlw	-16
 11102  002B8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11103  002B90  006F FF7F FFF6     	movff	indf2,tblptrl
 11104  002B96                     	if	1	;There is more than 1 active tblptr byte
 11105  002B96  0E20               	movlw	high __smallconst
 11106  002B98  6EF7               	movwf	tblptrh,c
 11107  002B9A                     	endif
 11108  002B9A                     	if	0	;tblptru may be non-zero
 11109  002B9A                     	endif
 11110  002B9A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11111  002B9A  0E00               	movlw	low (__smallconst shr (0+16))
 11112  002B9C  6EF8               	movwf	tblptru,c
 11113  002B9E                     	endif
 11114  002B9E  0008               	tblrd		*
 11115  002BA0  50F5               	movf	tablat,w,c
 11116  002BA2  0A73               	xorlw	115
 11117  002BA4  A4D8               	btfss	status,2,c
 11118  002BA6  D040               	goto	l8940
 11119                           
 11120                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
 11121                           ;stkvar	_fmt @ sp[(-13)+-4]
 11122  002BA8  0EEF               	movlw	-17
 11123  002BAA  006F FF8F FFD9     	movff	plusw1,fsr2l
 11124  002BB0  0EF0               	movlw	-16
 11125  002BB2  006F FF8F FFDA     	movff	plusw1,fsr2h
 11126  002BB8  2ADF               	incf	indf2,f,c
 11127                           
 11128                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
 11129                           ;stkvar	_ap @ sp[(-13)+-6]
 11130  002BBA  0EED               	movlw	-19
 11131  002BBC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11132  002BC2  0EEE               	movlw	-18
 11133  002BC4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11134  002BCA  0E02               	movlw	2
 11135  002BCC  5EDE               	subwf	postinc2,f,c
 11136  002BCE  0E00               	movlw	0
 11137  002BD0  5ADD               	subwfb	postdec2,f,c
 11138  002BD2  006F FF78  F047    	movff	postinc2,btemp+10
 11139  002BD8  006F FF74  F048    	movff	postdec2,btemp+11
 11140  002BDE  0060  F11F  FFD9   	movff	btemp+10,fsr2l
 11141  002BE4  0060  F123  FFDA   	movff	btemp+11,fsr2h
 11142  002BEA  006F FF78  F047    	movff	postinc2,btemp+10
 11143  002BF0  006F FF74  F048    	movff	postdec2,btemp+11
 11144                           
 11145                           ;stkvar	_cp @ sp[(-13)+10]
 11146  002BF6  0EFE               	movlw	-2
 11147  002BF8  0060  F123  FFE3   	movff	btemp+11,plusw1
 11148  002BFE  0EFD               	movlw	-3
 11149  002C00  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11150                           
 11151                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
 11152                           ;stkvar	_cp @ sp[(-13)+10]
 11153  002C06  0EFD               	movlw	-3
 11154  002C08  006F FF8F FFE6     	movff	plusw1,postinc1
 11155  002C0E  006F FF8F FFE6     	movff	plusw1,postinc1
 11156                           
 11157                           ;stkvar	_fp @ sp[(-15)+-2]
 11158  002C14  0EEF               	movlw	-17
 11159  002C16  006F FF8F FFE6     	movff	plusw1,postinc1
 11160  002C1C  006F FF8F FFE6     	movff	plusw1,postinc1
 11161  002C22  ECF1  F01F         	call	_stoa	;wreg free
 11162  002C26  D061               	goto	l1965
 11163  002C28                     l8940:
 11164                           
 11165                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
 11166                           ;stkvar	_fmt @ sp[(-13)+-4]
 11167  002C28  0EEF               	movlw	-17
 11168  002C2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 11169  002C30  0EF0               	movlw	-16
 11170  002C32  006F FF8F FFDA     	movff	plusw1,fsr2h
 11171  002C38  006F FF7F FFF6     	movff	indf2,tblptrl
 11172  002C3E                     	if	1	;There is more than 1 active tblptr byte
 11173  002C3E  0E20               	movlw	high __smallconst
 11174  002C40  6EF7               	movwf	tblptrh,c
 11175  002C42                     	endif
 11176  002C42                     	if	0	;tblptru may be non-zero
 11177  002C42                     	endif
 11178  002C42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11179  002C42  0E00               	movlw	low (__smallconst shr (0+16))
 11180  002C44  6EF8               	movwf	tblptru,c
 11181  002C46                     	endif
 11182  002C46  0008               	tblrd		*
 11183  002C48  50F5               	movf	tablat,w,c
 11184  002C4A  0A25               	xorlw	37
 11185  002C4C  A4D8               	btfss	status,2,c
 11186  002C4E  D018               	goto	l8950
 11187                           
 11188                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 11189                           ;stkvar	_fmt @ sp[(-13)+-4]
 11190  002C50  0EEF               	movlw	-17
 11191  002C52  006F FF8F FFD9     	movff	plusw1,fsr2l
 11192  002C58  0EF0               	movlw	-16
 11193  002C5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11194  002C60  2ADF               	incf	indf2,f,c
 11195                           
 11196                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 11197                           ;stkvar	_fp @ sp[(-13)+-2]
 11198  002C62  0EF1               	movlw	-15
 11199  002C64  006F FF8F FFE6     	movff	plusw1,postinc1
 11200  002C6A  006F FF8F FFE6     	movff	plusw1,postinc1
 11201  002C70  0E25               	movlw	37
 11202  002C72  6EE6               	movwf	postinc1,c
 11203  002C74  0E00               	movlw	0
 11204  002C76  6EE6               	movwf	postinc1,c
 11205  002C78  EC6B  F02A         	call	_fputc	;wreg free
 11206  002C7C                     l8946:
 11207                           
 11208                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 11209  002C7C  0E01               	movlw	1
 11210  002C7E  D00A               	goto	L24
 11211  002C80                     l8950:
 11212                           
 11213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 11214                           ;stkvar	_fmt @ sp[(-13)+-4]
 11215  002C80  0EEF               	movlw	-17
 11216  002C82  006F FF8F FFD9     	movff	plusw1,fsr2l
 11217  002C88  0EF0               	movlw	-16
 11218  002C8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 11219  002C90  2ADF               	incf	indf2,f,c
 11220                           
 11221                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 11222  002C92  0E00               	movlw	0
 11223  002C94                     L24:
 11224  002C94  6E3D               	movwf	btemp,c
 11225  002C96  0E00               	movlw	0
 11226  002C98  6E3E               	movwf	btemp+1,c
 11227  002C9A  D027               	goto	l1965
 11228  002C9C                     l8956:
 11229                           
 11230                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 11231                           ;stkvar	_fp @ sp[(-13)+-2]
 11232  002C9C  0EF1               	movlw	-15
 11233  002C9E  006F FF8F FFE6     	movff	plusw1,postinc1
 11234  002CA4  006F FF8F FFE6     	movff	plusw1,postinc1
 11235                           
 11236                           ;stkvar	_fmt @ sp[(-15)+-4]
 11237  002CAA  0EED               	movlw	-19
 11238  002CAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 11239  002CB2  0EEE               	movlw	-18
 11240  002CB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 11241  002CBA  006F FF7F FFF6     	movff	indf2,tblptrl
 11242  002CC0                     	if	1	;There is more than 1 active tblptr byte
 11243  002CC0  0E20               	movlw	high __smallconst
 11244  002CC2  6EF7               	movwf	tblptrh,c
 11245  002CC4                     	endif
 11246  002CC4                     	if	0	;tblptru may be non-zero
 11247  002CC4                     	endif
 11248  002CC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11249  002CC4  0E00               	movlw	low (__smallconst shr (0+16))
 11250  002CC6  6EF8               	movwf	tblptru,c
 11251  002CC8                     	endif
 11252  002CC8  0008               	tblrd		*
 11253  002CCA  50F5               	movf	tablat,w,c
 11254  002CCC  6EE6               	movwf	postinc1,c
 11255  002CCE  0E00               	movlw	0
 11256  002CD0  6EE6               	movwf	postinc1,c
 11257  002CD2  EC6B  F02A         	call	_fputc	;wreg free
 11258                           
 11259                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 11260                           ;stkvar	_fmt @ sp[(-13)+-4]
 11261  002CD6  0EEF               	movlw	-17
 11262  002CD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 11263  002CDE  0EF0               	movlw	-16
 11264  002CE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 11265  002CE6  2ADF               	incf	indf2,f,c
 11266  002CE8  D7C9               	goto	l8946
 11267  002CEA                     l1965:
 11268                           
 11269                           ; _vfpfcnvrt: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 11270  002CEA  0EED               	movlw	237
 11271  002CEC  26E1               	addwf	fsr1l,f,c
 11272  002CEE  0EFF               	movlw	255
 11273  002CF0  22E2               	addwfc	fsr1h,f,c
 11274  002CF2  0012               	return		;funcret
 11275  002CF4                     __end_of_vfpfcnvrt:
 11276                           	opt callstack 0
 11277                           
 11278 ;; *************** function _strncmp *****************
 11279 ;; Defined at:
 11280 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
 11281 ;; Parameters:    Size  Location     Type
 11282 ;;  _l              1  [STACK] PTR const unsigned char 
 11283 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(26), 
 11284 ;;		 -> STR_15(26), STR_14(6), STR_13(19), STR_12(26), 
 11285 ;;		 -> STR_11(18), STR_10(21), STR_9(18), STR_8(6), 
 11286 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
 11287 ;;		 -> STR_2(12), STR_1(17), 
 11288 ;;  _r              1  [STACK] PTR const unsigned char 
 11289 ;;		 -> STR_26(3), STR_22(3), 
 11290 ;;  n               2  [STACK] unsigned int 
 11291 ;; Auto vars:     Size  Location     Type
 11292 ;;  r               1  [STACK] PTR const unsigned char 
 11293 ;;		 -> STR_26(3), STR_22(3), 
 11294 ;;  l               1  [STACK] PTR const unsigned char 
 11295 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(26), 
 11296 ;;		 -> STR_15(26), STR_14(6), STR_13(19), STR_12(26), 
 11297 ;;		 -> STR_11(18), STR_10(21), STR_9(18), STR_8(6), 
 11298 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
 11299 ;;		 -> STR_2(12), STR_1(17), 
 11300 ;; Return value:  Size  Location     Type
 11301 ;;                  2  [STACK] int 
 11302 ;; Registers used:
 11303 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
 11304 ;; Tracked objects:
 11305 ;;		On entry : 0/0
 11306 ;;		On exit  : 0/0
 11307 ;;		Unchanged: 0/0
 11308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11313 ;;Total ram usage:        0 bytes
 11314 ;; Hardware stack levels used:    1
 11315 ;; Hardware stack levels required when called:    3
 11316 ;; This function calls:
 11317 ;;		Nothing
 11318 ;; This function is called by:
 11319 ;;		_vfpfcnvrt
 11320 ;; This function uses a reentrant model
 11321 ;;
 11322                           
 11323                           	psect	text45
 11324  004E9E                     __ptext45:
 11325                           	opt callstack 0
 11326  004E9E                     _strncmp:
 11327                           	opt callstack 0
 11328                           
 11329                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11330  004E9E  52E6               	movf	postinc1,f,c
 11331  004EA0  52E6               	movf	postinc1,f,c
 11332                           
 11333                           ;stkvar	__l @ sp[(-2)+-1]
 11334                           
 11335                           ;incstack = 0
 11336  004EA2  0EFD               	movlw	-3
 11337  004EA4  006F FF8C  F048    	movff	plusw1,btemp+11
 11338                           
 11339                           ;stkvar	_l @ sp[(-2)+1]
 11340  004EAA  0EFF               	movlw	-1
 11341  004EAC  0060  F123  FFE3   	movff	btemp+11,plusw1
 11342                           
 11343                           ;stkvar	__r @ sp[(-2)+-2]
 11344  004EB2  0EFC               	movlw	-4
 11345  004EB4  006F FF8C  F048    	movff	plusw1,btemp+11
 11346                           
 11347                           ;stkvar	_r @ sp[(-2)+0]
 11348  004EBA  0EFE               	movlw	-2
 11349  004EBC  0060  F123  FFE3   	movff	btemp+11,plusw1
 11350                           
 11351                           ;stkvar	_n @ sp[(-2)+-4]
 11352  004EC2  0EFA               	movlw	-6
 11353  004EC4  006F FF8C  F03D    	movff	plusw1,btemp
 11354  004ECA  0E01               	movlw	1
 11355  004ECC  5E3D               	subwf	btemp,f,c
 11356  004ECE  0EFA               	movlw	-6
 11357  004ED0  0060  F0F7  FFE3   	movff	btemp,plusw1
 11358  004ED6  0EFB               	movlw	-5
 11359  004ED8  006F FF8C  F03D    	movff	plusw1,btemp
 11360  004EDE  0E00               	movlw	0
 11361  004EE0  5A3D               	subwfb	btemp,f,c
 11362  004EE2  0EFB               	movlw	-5
 11363  004EE4  0060  F0F7  FFE3   	movff	btemp,plusw1
 11364  004EEA  0EFA               	movlw	-6
 11365  004EEC  28E3               	incf	plusw1,w,c
 11366  004EEE  E121               	bnz	l6004
 11367  004EF0  0EFB               	movlw	-5
 11368  004EF2  28E3               	incf	plusw1,w,c
 11369  004EF4  A4D8               	btfss	status,2,c
 11370  004EF6  D01D               	goto	l6004
 11371  004EF8  0E00               	movlw	0
 11372  004EFA  6E3D               	movwf	btemp,c
 11373  004EFC  0E00               	movlw	0
 11374  004EFE  6E3E               	movwf	btemp+1,c
 11375  004F00  D091               	goto	l2767
 11376  004F02                     l6000:
 11377                           
 11378                           ;stkvar	_l @ sp[(-2)+1]
 11379  004F02  0EFF               	movlw	-1
 11380  004F04  2AE3               	incf	plusw1,f,c
 11381                           
 11382                           ;stkvar	_r @ sp[(-2)+0]
 11383  004F06  0EFE               	movlw	-2
 11384  004F08  2AE3               	incf	plusw1,f,c
 11385                           
 11386                           ;stkvar	_n @ sp[(-2)+-4]
 11387  004F0A  0EFA               	movlw	-6
 11388  004F0C  006F FF8C  F03D    	movff	plusw1,btemp
 11389  004F12  0E01               	movlw	1
 11390  004F14  5E3D               	subwf	btemp,f,c
 11391  004F16  0EFA               	movlw	-6
 11392  004F18  0060  F0F7  FFE3   	movff	btemp,plusw1
 11393  004F1E  0EFB               	movlw	-5
 11394  004F20  006F FF8C  F03D    	movff	plusw1,btemp
 11395  004F26  0E00               	movlw	0
 11396  004F28  5A3D               	subwfb	btemp,f,c
 11397  004F2A  0EFB               	movlw	-5
 11398  004F2C  0060  F0F7  FFE3   	movff	btemp,plusw1
 11399  004F32                     l6004:
 11400                           
 11401                           ;stkvar	_l @ sp[(-2)+1]
 11402  004F32  50E1               	movf	fsr1l,w,c
 11403  004F34  0FFF               	addlw	-1
 11404  004F36  6ED9               	movwf	fsr2l,c
 11405  004F38  50E2               	movf	fsr1h,w,c
 11406  004F3A  6EDA               	movwf	fsr2h,c
 11407  004F3C  0EFF               	movlw	255
 11408  004F3E  22DA               	addwfc	fsr2h,f,c
 11409  004F40  006F FF7F FFF6     	movff	indf2,tblptrl
 11410  004F46                     	if	1	;There is more than 1 active tblptr byte
 11411  004F46  0E20               	movlw	high __smallconst
 11412  004F48  6EF7               	movwf	tblptrh,c
 11413  004F4A                     	endif
 11414  004F4A                     	if	0	;tblptru may be non-zero
 11415  004F4A                     	endif
 11416  004F4A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11417  004F4A  0E00               	movlw	low (__smallconst shr (0+16))
 11418  004F4C  6EF8               	movwf	tblptru,c
 11419  004F4E                     	endif
 11420  004F4E  0008               	tblrd		*
 11421  004F50  50F5               	movf	tablat,w,c
 11422  004F52  0900               	iorlw	0
 11423  004F54  B4D8               	btfsc	status,2,c
 11424  004F56  D041               	goto	u3440
 11425                           
 11426                           ;stkvar	_r @ sp[(-2)+0]
 11427  004F58  50E1               	movf	fsr1l,w,c
 11428  004F5A  0FFE               	addlw	-2
 11429  004F5C  6ED9               	movwf	fsr2l,c
 11430  004F5E  50E2               	movf	fsr1h,w,c
 11431  004F60  6EDA               	movwf	fsr2h,c
 11432  004F62  0EFF               	movlw	255
 11433  004F64  22DA               	addwfc	fsr2h,f,c
 11434  004F66  006F FF7F FFF6     	movff	indf2,tblptrl
 11435  004F6C                     	if	1	;There is more than 1 active tblptr byte
 11436  004F6C  0E20               	movlw	high __smallconst
 11437  004F6E  6EF7               	movwf	tblptrh,c
 11438  004F70                     	endif
 11439  004F70                     	if	0	;tblptru may be non-zero
 11440  004F70                     	endif
 11441  004F70                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11442  004F70  0E00               	movlw	low (__smallconst shr (0+16))
 11443  004F72  6EF8               	movwf	tblptru,c
 11444  004F74                     	endif
 11445  004F74  0008               	tblrd		*
 11446  004F76  50F5               	movf	tablat,w,c
 11447  004F78  0900               	iorlw	0
 11448  004F7A  B4D8               	btfsc	status,2,c
 11449  004F7C  D02E               	goto	u3440
 11450                           
 11451                           ;stkvar	_n @ sp[(-2)+-4]
 11452  004F7E  0EFA               	movlw	-6
 11453  004F80  006F FF8C  F03D    	movff	plusw1,btemp
 11454  004F86  0EFB               	movlw	-5
 11455  004F88  50E3               	movf	plusw1,w,c
 11456  004F8A  103D               	iorwf	btemp,w,c
 11457  004F8C  B4D8               	btfsc	status,2,c
 11458  004F8E  D025               	goto	u3440
 11459                           
 11460                           ;stkvar	_l @ sp[(-2)+1]
 11461  004F90  50E1               	movf	fsr1l,w,c
 11462  004F92  0FFF               	addlw	-1
 11463  004F94  6ED9               	movwf	fsr2l,c
 11464  004F96  50E2               	movf	fsr1h,w,c
 11465  004F98  6EDA               	movwf	fsr2h,c
 11466  004F9A  0EFF               	movlw	255
 11467  004F9C  22DA               	addwfc	fsr2h,f,c
 11468  004F9E  006F FF7F FFF6     	movff	indf2,tblptrl
 11469  004FA4                     	if	1	;There is more than 1 active tblptr byte
 11470  004FA4  0E20               	movlw	high __smallconst
 11471  004FA6  6EF7               	movwf	tblptrh,c
 11472  004FA8                     	endif
 11473  004FA8                     	if	0	;tblptru may be non-zero
 11474  004FA8                     	endif
 11475  004FA8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11476  004FA8  0E00               	movlw	low (__smallconst shr (0+16))
 11477  004FAA  6EF8               	movwf	tblptru,c
 11478  004FAC                     	endif
 11479  004FAC  0008               	tblrd		*
 11480  004FAE  006F FFD4  F048    	movff	tablat,btemp+11
 11481                           
 11482                           ;stkvar	_r @ sp[(-2)+0]
 11483  004FB4  50E1               	movf	fsr1l,w,c
 11484  004FB6  0FFE               	addlw	-2
 11485  004FB8  6ED9               	movwf	fsr2l,c
 11486  004FBA  50E2               	movf	fsr1h,w,c
 11487  004FBC  6EDA               	movwf	fsr2h,c
 11488  004FBE  0EFF               	movlw	255
 11489  004FC0  22DA               	addwfc	fsr2h,f,c
 11490  004FC2  006F FF7F FFF6     	movff	indf2,tblptrl
 11491  004FC8                     	if	1	;There is more than 1 active tblptr byte
 11492  004FC8  0E20               	movlw	high __smallconst
 11493  004FCA  6EF7               	movwf	tblptrh,c
 11494  004FCC                     	endif
 11495  004FCC                     	if	0	;tblptru may be non-zero
 11496  004FCC                     	endif
 11497  004FCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11498  004FCC  0E00               	movlw	low (__smallconst shr (0+16))
 11499  004FCE  6EF8               	movwf	tblptru,c
 11500  004FD0                     	endif
 11501  004FD0  0008               	tblrd		*
 11502  004FD2  50F5               	movf	tablat,w,c
 11503  004FD4  1848               	xorwf	btemp+11,w,c
 11504  004FD6  B4D8               	btfsc	status,2,c
 11505  004FD8  D794               	goto	l6000
 11506  004FDA                     u3440:
 11507                           
 11508                           ;stkvar	_l @ sp[(-2)+1]
 11509  004FDA  50E1               	movf	fsr1l,w,c
 11510  004FDC  0FFF               	addlw	-1
 11511  004FDE  6ED9               	movwf	fsr2l,c
 11512  004FE0  50E2               	movf	fsr1h,w,c
 11513  004FE2  6EDA               	movwf	fsr2h,c
 11514  004FE4  0EFF               	movlw	255
 11515  004FE6  22DA               	addwfc	fsr2h,f,c
 11516  004FE8  006F FF7F FFF6     	movff	indf2,tblptrl
 11517  004FEE                     	if	1	;There is more than 1 active tblptr byte
 11518  004FEE  0E20               	movlw	high __smallconst
 11519  004FF0  6EF7               	movwf	tblptrh,c
 11520  004FF2                     	endif
 11521  004FF2                     	if	0	;tblptru may be non-zero
 11522  004FF2                     	endif
 11523  004FF2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11524  004FF2  0E00               	movlw	low (__smallconst shr (0+16))
 11525  004FF4  6EF8               	movwf	tblptru,c
 11526  004FF6                     	endif
 11527  004FF6  0008               	tblrd		*
 11528  004FF8  50F5               	movf	tablat,w,c
 11529  004FFA  6E3D               	movwf	btemp,c
 11530  004FFC  6A3E               	clrf	btemp+1,c
 11531                           
 11532                           ;stkvar	_r @ sp[(-2)+0]
 11533  004FFE  50E1               	movf	fsr1l,w,c
 11534  005000  0FFE               	addlw	-2
 11535  005002  6ED9               	movwf	fsr2l,c
 11536  005004  50E2               	movf	fsr1h,w,c
 11537  005006  6EDA               	movwf	fsr2h,c
 11538  005008  0EFF               	movlw	255
 11539  00500A  22DA               	addwfc	fsr2h,f,c
 11540  00500C  006F FF7F FFF6     	movff	indf2,tblptrl
 11541  005012                     	if	1	;There is more than 1 active tblptr byte
 11542  005012  0E20               	movlw	high __smallconst
 11543  005014  6EF7               	movwf	tblptrh,c
 11544  005016                     	endif
 11545  005016                     	if	0	;tblptru may be non-zero
 11546  005016                     	endif
 11547  005016                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11548  005016  0E00               	movlw	low (__smallconst shr (0+16))
 11549  005018  6EF8               	movwf	tblptru,c
 11550  00501A                     	endif
 11551  00501A  0008               	tblrd		*
 11552  00501C  50F5               	movf	tablat,w,c
 11553  00501E  5E3D               	subwf	btemp,f,c
 11554  005020  0E00               	movlw	0
 11555  005022  5A3E               	subwfb	btemp+1,f,c
 11556  005024                     l2767:
 11557                           
 11558                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 11559  005024  0EFA               	movlw	250
 11560  005026  26E1               	addwf	fsr1l,f,c
 11561  005028  0EFF               	movlw	255
 11562  00502A  22E2               	addwfc	fsr1h,f,c
 11563  00502C  0012               	return		;funcret
 11564  00502E                     __end_of_strncmp:
 11565                           	opt callstack 0
 11566                           
 11567 ;; *************** function _stoa *****************
 11568 ;; Defined at:
 11569 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11570 ;; Parameters:    Size  Location     Type
 11571 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11572 ;;		 -> f(5), NULL(0), 
 11573 ;;  s               2  [STACK] PTR unsigned char 
 11574 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(100), 
 11575 ;; Auto vars:     Size  Location     Type
 11576 ;;  nuls            7  [STACK] unsigned char [7]
 11577 ;;  l               2  [STACK] int 
 11578 ;;  p               2  [STACK] int 
 11579 ;;  cp              2  [STACK] PTR unsigned char 
 11580 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
 11581 ;;		 -> V(100), 
 11582 ;;  w               2  [STACK] int 
 11583 ;;  i               2  [STACK] int 
 11584 ;; Return value:  Size  Location     Type
 11585 ;;                  2  [STACK] int 
 11586 ;; Registers used:
 11587 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 11588 ;; Tracked objects:
 11589 ;;		On entry : 0/0
 11590 ;;		On exit  : 0/0
 11591 ;;		Unchanged: 0/0
 11592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11597 ;;Total ram usage:        0 bytes
 11598 ;; Hardware stack levels used:    1
 11599 ;; Hardware stack levels required when called:    6
 11600 ;; This function calls:
 11601 ;;		_fputc
 11602 ;;		_strlen
 11603 ;; This function is called by:
 11604 ;;		_vfpfcnvrt
 11605 ;; This function uses a reentrant model
 11606 ;;
 11607                           
 11608                           	psect	text46
 11609  003FE2                     __ptext46:
 11610                           	opt callstack 0
 11611  003FE2                     _stoa:
 11612                           	opt callstack 0
 11613                           
 11614                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11615  003FE2  0E11               	movlw	17
 11616  003FE4  26E1               	addwf	fsr1l,f,c
 11617  003FE6  0E00               	movlw	0
 11618  003FE8  22E2               	addwfc	fsr1h,f,c
 11619                           
 11620                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 11621                           
 11622                           ;incstack = 0
 11623  003FEA  EE20  F100         	lfsr	2,stoa@F1144
 11624                           
 11625                           ;stkvar	_nuls @ sp[(-17)+0]
 11626  003FEE  0E07               	movlw	7
 11627  003FF0  6E3D               	movwf	btemp,c
 11628  003FF2  0EEF               	movlw	-17
 11629  003FF4                     us553999:
 11630  003FF4  006F FF7B FFE3     	movff	postinc2,plusw1
 11631  003FFA  28E8               	incf	wreg,w,c
 11632  003FFC  2E3D               	decfsz	btemp,f,c
 11633  003FFE  D7FA               	bra	us553999
 11634                           
 11635                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 11636                           ;stkvar	_s @ sp[(-17)+-4]
 11637  004000  0EEB               	movlw	-21
 11638  004002  006F FF8C  F047    	movff	plusw1,btemp+10
 11639  004008  0EEC               	movlw	-20
 11640  00400A  006F FF8C  F048    	movff	plusw1,btemp+11
 11641                           
 11642                           ;stkvar	_cp @ sp[(-17)+11]
 11643  004010  0EFB               	movlw	-5
 11644  004012  0060  F123  FFE3   	movff	btemp+11,plusw1
 11645  004018  0EFA               	movlw	-6
 11646  00401A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11647                           
 11648                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 11649                           ;stkvar	_cp @ sp[(-17)+11]
 11650  004020  0EFA               	movlw	-6
 11651  004022  006F FF8C  F03D    	movff	plusw1,btemp
 11652  004028  0EFB               	movlw	-5
 11653  00402A  50E3               	movf	plusw1,w,c
 11654  00402C  103D               	iorwf	btemp,w,c
 11655  00402E  A4D8               	btfss	status,2,c
 11656  004030  D00E               	goto	l8824
 11657                           
 11658                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 11659                           ;stkvar	_nuls @ sp[(-17)+0]
 11660  004032  0EEF               	movlw	239
 11661  004034  24E1               	addwf	fsr1l,w,c
 11662  004036  6E47               	movwf	btemp+10,c
 11663  004038  0EFF               	movlw	255
 11664  00403A  20E2               	addwfc	fsr1h,w,c
 11665  00403C  6E48               	movwf	btemp+11,c
 11666                           
 11667                           ;stkvar	_cp @ sp[(-17)+11]
 11668  00403E  0EFB               	movlw	-5
 11669  004040  0060  F123  FFE3   	movff	btemp+11,plusw1
 11670  004046  0EFA               	movlw	-6
 11671  004048  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11672  00404E                     l8824:
 11673                           
 11674                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 11675                           ;stkvar	_cp @ sp[(-17)+11]
 11676  00404E  0EFA               	movlw	-6
 11677  004050  006F FF8F FFE6     	movff	plusw1,postinc1
 11678  004056  006F FF8F FFE6     	movff	plusw1,postinc1
 11679  00405C  ECA2  F02E         	call	_strlen	;wreg free
 11680                           
 11681                           ;stkvar	_l @ sp[(-17)+7]
 11682  004060  0EF6               	movlw	-10
 11683  004062  0060  F0F7  FFE3   	movff	btemp,plusw1
 11684  004068  0EF7               	movlw	-9
 11685  00406A  0060  F0FB  FFE3   	movff	btemp+1,plusw1
 11686                           
 11687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 11688                           ;stkvar	_p @ sp[(-17)+9]
 11689  004070  0EF8               	movlw	-8
 11690  004072  0060  F07F  FFE3   	movff	_prec,plusw1
 11691  004078  0EF9               	movlw	-7
 11692  00407A  0060  F083  FFE3   	movff	_prec+1,plusw1
 11693                           
 11694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 11695                           ;stkvar	_p @ sp[(-17)+9]
 11696  004080  0EF9               	movlw	-7
 11697  004082  BEE3               	btfsc	plusw1,7,c
 11698  004084  D023               	goto	l1936
 11699                           
 11700                           ;stkvar	_l @ sp[(-17)+7]
 11701                           ;stkvar	_p @ sp[(-17)+9]
 11702  004086  50E1               	movf	fsr1l,w,c
 11703  004088  0FF8               	addlw	-8
 11704  00408A  6ED9               	movwf	fsr2l,c
 11705  00408C  50E2               	movf	fsr1h,w,c
 11706  00408E  6EDA               	movwf	fsr2h,c
 11707  004090  0EFF               	movlw	255
 11708  004092  22DA               	addwfc	fsr2h,f,c
 11709  004094  0EF6               	movlw	-10
 11710  004096  50E3               	movf	plusw1,w,c
 11711  004098  5CDE               	subwf	postinc2,w,c
 11712  00409A  50DE               	movf	postinc2,w,c
 11713  00409C  0A80               	xorlw	128
 11714  00409E  6E3D               	movwf	btemp,c
 11715  0040A0  0EF7               	movlw	-9
 11716  0040A2  50E3               	movf	plusw1,w,c
 11717  0040A4  0A80               	xorlw	128
 11718  0040A6  583D               	subwfb	btemp,w,c
 11719  0040A8  B0D8               	btfsc	status,0,c
 11720  0040AA  D010               	goto	l1936
 11721                           
 11722                           ;stkvar	_p @ sp[(-17)+9]
 11723                           ;stkvar	_l @ sp[(-17)+7]
 11724  0040AC  0EF8               	movlw	-8
 11725  0040AE  006F FF8C  F03D    	movff	plusw1,btemp
 11726  0040B4  0EF6               	movlw	-10
 11727  0040B6  0060  F0F7  FFE3   	movff	btemp,plusw1
 11728  0040BC  0EF9               	movlw	-7
 11729  0040BE  006F FF8C  F03D    	movff	plusw1,btemp
 11730  0040C4  0EF7               	movlw	-9
 11731  0040C6  0060  F0F7  FFE3   	movff	btemp,plusw1
 11732  0040CC                     l1936:
 11733                           
 11734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 11735                           ;stkvar	_l @ sp[(-17)+7]
 11736                           ;stkvar	_p @ sp[(-17)+9]
 11737  0040CC  0EF6               	movlw	-10
 11738  0040CE  006F FF8C  F03D    	movff	plusw1,btemp
 11739  0040D4  0EF8               	movlw	-8
 11740  0040D6  0060  F0F7  FFE3   	movff	btemp,plusw1
 11741  0040DC  0EF7               	movlw	-9
 11742  0040DE  006F FF8C  F03D    	movff	plusw1,btemp
 11743  0040E4  0EF9               	movlw	-7
 11744  0040E6  0060  F0F7  FFE3   	movff	btemp,plusw1
 11745                           
 11746                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 11747                           ;stkvar	_w @ sp[(-17)+13]
 11748  0040EC  0EFC               	movlw	-4
 11749  0040EE  0060  F077  FFE3   	movff	_width,plusw1
 11750  0040F4  0EFD               	movlw	-3
 11751  0040F6  0060  F07B  FFE3   	movff	_width+1,plusw1
 11752                           
 11753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 11754  0040FC  A021               	btfss	_flags,0,c
 11755  0040FE  D01F               	goto	l8844
 11756  004100  D031               	goto	u5580
 11757  004102                     l8840:
 11758                           
 11759                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 11760                           ;stkvar	_fp @ sp[(-17)+-2]
 11761  004102  0EED               	movlw	-19
 11762  004104  006F FF8F FFE6     	movff	plusw1,postinc1
 11763  00410A  006F FF8F FFE6     	movff	plusw1,postinc1
 11764  004110  0E20               	movlw	32
 11765  004112  6EE6               	movwf	postinc1,c
 11766  004114  0E00               	movlw	0
 11767  004116  6EE6               	movwf	postinc1,c
 11768  004118  EC6B  F02A         	call	_fputc	;wreg free
 11769                           
 11770                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 11771                           ;stkvar	_l @ sp[(-17)+7]
 11772  00411C  0EF6               	movlw	-10
 11773  00411E  50E3               	movf	plusw1,w,c
 11774  004120  0F01               	addlw	1
 11775  004122  6E3D               	movwf	btemp,c
 11776  004124  0EF6               	movlw	-10
 11777  004126  0060  F0F7  FFE3   	movff	btemp,plusw1
 11778  00412C  6A3D               	clrf	btemp,c
 11779  00412E  0EF7               	movlw	-9
 11780  004130  50E3               	movf	plusw1,w,c
 11781  004132  203D               	addwfc	btemp,w,c
 11782  004134  6E3D               	movwf	btemp,c
 11783  004136  0EF7               	movlw	-9
 11784  004138  0060  F0F7  FFE3   	movff	btemp,plusw1
 11785  00413E                     l8844:
 11786                           
 11787                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 11788                           ;stkvar	_w @ sp[(-17)+13]
 11789                           ;stkvar	_l @ sp[(-17)+7]
 11790  00413E  50E1               	movf	fsr1l,w,c
 11791  004140  0FF6               	addlw	-10
 11792  004142  6ED9               	movwf	fsr2l,c
 11793  004144  50E2               	movf	fsr1h,w,c
 11794  004146  6EDA               	movwf	fsr2h,c
 11795  004148  0EFF               	movlw	255
 11796  00414A  22DA               	addwfc	fsr2h,f,c
 11797  00414C  0EFC               	movlw	-4
 11798  00414E  50E3               	movf	plusw1,w,c
 11799  004150  5CDE               	subwf	postinc2,w,c
 11800  004152  50DE               	movf	postinc2,w,c
 11801  004154  0A80               	xorlw	128
 11802  004156  6E3D               	movwf	btemp,c
 11803  004158  0EFD               	movlw	-3
 11804  00415A  50E3               	movf	plusw1,w,c
 11805  00415C  0A80               	xorlw	128
 11806  00415E  583D               	subwfb	btemp,w,c
 11807  004160  A0D8               	btfss	status,0,c
 11808  004162  D7CF               	goto	l8840
 11809  004164                     u5580:
 11810                           
 11811                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 11812                           ;stkvar	_i @ sp[(-17)+15]
 11813  004164  0EFE               	movlw	-2
 11814  004166  6AE3               	clrf	plusw1,c
 11815  004168  0EFF               	movlw	-1
 11816  00416A  6AE3               	clrf	plusw1,c
 11817                           
 11818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11819  00416C  D045               	goto	l8854
 11820  00416E                     l8848:
 11821                           
 11822                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 11823                           ;stkvar	_fp @ sp[(-17)+-2]
 11824  00416E  0EED               	movlw	-19
 11825  004170  006F FF8F FFE6     	movff	plusw1,postinc1
 11826  004176  006F FF8F FFE6     	movff	plusw1,postinc1
 11827                           
 11828                           ;stkvar	_cp @ sp[(-19)+11]
 11829  00417C  0EF8               	movlw	-8
 11830  00417E  006F FF8F FFF6     	movff	plusw1,tblptrl
 11831  004184  0EF9               	movlw	-7
 11832  004186  006F FF8F FFF7     	movff	plusw1,tblptrh
 11833  00418C  0E00               	movlw	low (__smallconst shr (0+16))
 11834  00418E  6EF8               	movwf	tblptru,c
 11835  004190  0E1F               	movlw	(high __ramtop+-1)
 11836  004192  64F7               	cpfsgt	tblptrh,c
 11837  004194  D003               	bra	u5597
 11838  004196  0008               	tblrd		*
 11839  004198  50F5               	movf	tablat,w,c
 11840  00419A  D007               	bra	u5590
 11841  00419C                     u5597:
 11842  00419C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 11843  0041A2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 11844  0041A8  50EF               	movf	indf0,w,c
 11845  0041AA                     u5590:
 11846  0041AA  6EE6               	movwf	postinc1,c
 11847  0041AC  0E00               	movlw	0
 11848  0041AE  6EE6               	movwf	postinc1,c
 11849  0041B0  EC6B  F02A         	call	_fputc	;wreg free
 11850                           
 11851                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 11852                           ;stkvar	_cp @ sp[(-17)+11]
 11853  0041B4  0EFA               	movlw	-6
 11854  0041B6  50E3               	movf	plusw1,w,c
 11855  0041B8  0F01               	addlw	1
 11856  0041BA  6E3D               	movwf	btemp,c
 11857  0041BC  0EFA               	movlw	-6
 11858  0041BE  0060  F0F7  FFE3   	movff	btemp,plusw1
 11859  0041C4  6A3D               	clrf	btemp,c
 11860  0041C6  0EFB               	movlw	-5
 11861  0041C8  50E3               	movf	plusw1,w,c
 11862  0041CA  203D               	addwfc	btemp,w,c
 11863  0041CC  6E3D               	movwf	btemp,c
 11864  0041CE  0EFB               	movlw	-5
 11865  0041D0  0060  F0F7  FFE3   	movff	btemp,plusw1
 11866                           
 11867                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 11868                           ;stkvar	_i @ sp[(-17)+15]
 11869  0041D6  0EFE               	movlw	-2
 11870  0041D8  50E3               	movf	plusw1,w,c
 11871  0041DA  0F01               	addlw	1
 11872  0041DC  6E3D               	movwf	btemp,c
 11873  0041DE  0EFE               	movlw	-2
 11874  0041E0  0060  F0F7  FFE3   	movff	btemp,plusw1
 11875  0041E6  6A3D               	clrf	btemp,c
 11876  0041E8  0EFF               	movlw	-1
 11877  0041EA  50E3               	movf	plusw1,w,c
 11878  0041EC  203D               	addwfc	btemp,w,c
 11879  0041EE  6E3D               	movwf	btemp,c
 11880  0041F0  0EFF               	movlw	-1
 11881  0041F2  0060  F0F7  FFE3   	movff	btemp,plusw1
 11882  0041F8                     l8854:
 11883                           
 11884                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11885                           ;stkvar	_p @ sp[(-17)+9]
 11886                           ;stkvar	_i @ sp[(-17)+15]
 11887  0041F8  50E1               	movf	fsr1l,w,c
 11888  0041FA  0FFE               	addlw	-2
 11889  0041FC  6ED9               	movwf	fsr2l,c
 11890  0041FE  50E2               	movf	fsr1h,w,c
 11891  004200  6EDA               	movwf	fsr2h,c
 11892  004202  0EFF               	movlw	255
 11893  004204  22DA               	addwfc	fsr2h,f,c
 11894  004206  0EF8               	movlw	-8
 11895  004208  50E3               	movf	plusw1,w,c
 11896  00420A  5CDE               	subwf	postinc2,w,c
 11897  00420C  50DE               	movf	postinc2,w,c
 11898  00420E  0A80               	xorlw	128
 11899  004210  6E3D               	movwf	btemp,c
 11900  004212  0EF9               	movlw	-7
 11901  004214  50E3               	movf	plusw1,w,c
 11902  004216  0A80               	xorlw	128
 11903  004218  583D               	subwfb	btemp,w,c
 11904  00421A  A0D8               	btfss	status,0,c
 11905  00421C  D7A8               	goto	l8848
 11906                           
 11907                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11908  00421E  B021               	btfsc	_flags,0,c
 11909  004220  D01F               	goto	l8862
 11910  004222  D031               	goto	u5620
 11911  004224                     l8858:
 11912                           
 11913                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11914                           ;stkvar	_fp @ sp[(-17)+-2]
 11915  004224  0EED               	movlw	-19
 11916  004226  006F FF8F FFE6     	movff	plusw1,postinc1
 11917  00422C  006F FF8F FFE6     	movff	plusw1,postinc1
 11918  004232  0E20               	movlw	32
 11919  004234  6EE6               	movwf	postinc1,c
 11920  004236  0E00               	movlw	0
 11921  004238  6EE6               	movwf	postinc1,c
 11922  00423A  EC6B  F02A         	call	_fputc	;wreg free
 11923                           
 11924                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11925                           ;stkvar	_l @ sp[(-17)+7]
 11926  00423E  0EF6               	movlw	-10
 11927  004240  50E3               	movf	plusw1,w,c
 11928  004242  0F01               	addlw	1
 11929  004244  6E3D               	movwf	btemp,c
 11930  004246  0EF6               	movlw	-10
 11931  004248  0060  F0F7  FFE3   	movff	btemp,plusw1
 11932  00424E  6A3D               	clrf	btemp,c
 11933  004250  0EF7               	movlw	-9
 11934  004252  50E3               	movf	plusw1,w,c
 11935  004254  203D               	addwfc	btemp,w,c
 11936  004256  6E3D               	movwf	btemp,c
 11937  004258  0EF7               	movlw	-9
 11938  00425A  0060  F0F7  FFE3   	movff	btemp,plusw1
 11939  004260                     l8862:
 11940                           
 11941                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11942                           ;stkvar	_w @ sp[(-17)+13]
 11943                           ;stkvar	_l @ sp[(-17)+7]
 11944  004260  50E1               	movf	fsr1l,w,c
 11945  004262  0FF6               	addlw	-10
 11946  004264  6ED9               	movwf	fsr2l,c
 11947  004266  50E2               	movf	fsr1h,w,c
 11948  004268  6EDA               	movwf	fsr2h,c
 11949  00426A  0EFF               	movlw	255
 11950  00426C  22DA               	addwfc	fsr2h,f,c
 11951  00426E  0EFC               	movlw	-4
 11952  004270  50E3               	movf	plusw1,w,c
 11953  004272  5CDE               	subwf	postinc2,w,c
 11954  004274  50DE               	movf	postinc2,w,c
 11955  004276  0A80               	xorlw	128
 11956  004278  6E3D               	movwf	btemp,c
 11957  00427A  0EFD               	movlw	-3
 11958  00427C  50E3               	movf	plusw1,w,c
 11959  00427E  0A80               	xorlw	128
 11960  004280  583D               	subwfb	btemp,w,c
 11961  004282  A0D8               	btfss	status,0,c
 11962  004284  D7CF               	goto	l8858
 11963  004286                     u5620:
 11964                           
 11965                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 11966                           ;stkvar	_l @ sp[(-17)+7]
 11967  004286  0EF6               	movlw	-10
 11968  004288  006F FF8C  F03D    	movff	plusw1,btemp
 11969  00428E  0EF7               	movlw	-9
 11970  004290  006F FF8C  F03E    	movff	plusw1,btemp+1
 11971                           
 11972                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11973  004296  0EEB               	movlw	235
 11974  004298  26E1               	addwf	fsr1l,f,c
 11975  00429A  0EFF               	movlw	255
 11976  00429C  22E2               	addwfc	fsr1h,f,c
 11977  00429E  0012               	return		;funcret
 11978  0042A0                     __end_of_stoa:
 11979                           	opt callstack 0
 11980                           
 11981 ;; *************** function _dtoa *****************
 11982 ;; Defined at:
 11983 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 11984 ;; Parameters:    Size  Location     Type
 11985 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11986 ;;		 -> f(5), NULL(0), 
 11987 ;;  d               8  [STACK] long long 
 11988 ;; Auto vars:     Size  Location     Type
 11989 ;;  n               8  [STACK] long long 
 11990 ;;  i               2  [STACK] int 
 11991 ;;  s               2  [STACK] int 
 11992 ;;  w               2  [STACK] int 
 11993 ;;  p               2  [STACK] int 
 11994 ;; Return value:  Size  Location     Type
 11995 ;;                  2  [STACK] int 
 11996 ;; Registers used:
 11997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 11998 ;; Tracked objects:
 11999 ;;		On entry : 0/0
 12000 ;;		On exit  : 0/0
 12001 ;;		Unchanged: 0/0
 12002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12007 ;;Total ram usage:        0 bytes
 12008 ;; Hardware stack levels used:    1
 12009 ;; Hardware stack levels required when called:    8
 12010 ;; This function calls:
 12011 ;;		___aodiv
 12012 ;;		___aomod
 12013 ;;		_abs
 12014 ;;		_pad
 12015 ;; This function is called by:
 12016 ;;		_vfpfcnvrt
 12017 ;; This function uses a reentrant model
 12018 ;;
 12019                           
 12020                           	psect	text47
 12021  00321A                     __ptext47:
 12022                           	opt callstack 0
 12023  00321A                     _dtoa:
 12024                           	opt callstack 0
 12025                           
 12026                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 12027  00321A  0E12               	movlw	18
 12028  00321C  26E1               	addwf	fsr1l,f,c
 12029  00321E  0E00               	movlw	0
 12030  003220  22E2               	addwfc	fsr1h,f,c
 12031                           
 12032                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 12033                           ;stkvar	_d @ sp[(-18)+-10]
 12034                           
 12035                           ;incstack = 0
 12036  003222  0EE4               	movlw	228
 12037  003224  24E1               	addwf	fsr1l,w,c
 12038  003226  6ED9               	movwf	fsr2l,c
 12039  003228  0EFF               	movlw	255
 12040  00322A  20E2               	addwfc	fsr1h,w,c
 12041  00322C  6EDA               	movwf	fsr2h,c
 12042                           
 12043                           ;stkvar	_n @ sp[(-18)+2]
 12044  00322E  0E08               	movlw	8
 12045  003230  6E3D               	movwf	btemp,c
 12046  003232  0EF0               	movlw	-16
 12047  003234                     us536999:
 12048  003234  006F FF7B FFE3     	movff	postinc2,plusw1
 12049  00323A  28E8               	incf	wreg,w,c
 12050  00323C  2E3D               	decfsz	btemp,f,c
 12051  00323E  D7FA               	bra	us536999
 12052                           
 12053                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 12054                           ;stkvar	_n @ sp[(-18)+2]
 12055  003240  0EF7               	movlw	-9
 12056  003242  AEE3               	btfss	plusw1,7,c
 12057  003244  D002               	goto	u5370
 12058  003246  0E01               	movlw	1
 12059  003248  D001               	goto	u5380
 12060  00324A                     u5370:
 12061  00324A  0E00               	movlw	0
 12062  00324C                     u5380:
 12063  00324C  6E47               	movwf	btemp+10,c
 12064  00324E  6A48               	clrf	btemp+11,c
 12065                           
 12066                           ;stkvar	_s @ sp[(-18)+12]
 12067  003250  0EFA               	movlw	-6
 12068  003252  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12069  003258  0EFB               	movlw	-5
 12070  00325A  0060  F123  FFE3   	movff	btemp+11,plusw1
 12071                           
 12072                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 12073                           ;stkvar	_s @ sp[(-18)+12]
 12074  003260  0EFA               	movlw	-6
 12075  003262  006F FF8C  F03D    	movff	plusw1,btemp
 12076  003268  0EFB               	movlw	-5
 12077  00326A  50E3               	movf	plusw1,w,c
 12078  00326C  103D               	iorwf	btemp,w,c
 12079  00326E  B4D8               	btfsc	status,2,c
 12080  003270  D025               	goto	u5400
 12081                           
 12082                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 12083                           ;stkvar	_n @ sp[(-18)+2]
 12084                           ;stkvar	_n @ sp[(-18)+2]
 12085  003272  0EF0               	movlw	-16
 12086  003274  6CE3               	negf	plusw1,c
 12087  003276  0EF1               	movlw	-15
 12088  003278  1EE3               	comf	plusw1,f,c
 12089  00327A  0EF2               	movlw	-14
 12090  00327C  1EE3               	comf	plusw1,f,c
 12091  00327E  0EF3               	movlw	-13
 12092  003280  1EE3               	comf	plusw1,f,c
 12093  003282  0EF4               	movlw	-12
 12094  003284  1EE3               	comf	plusw1,f,c
 12095  003286  0EF5               	movlw	-11
 12096  003288  1EE3               	comf	plusw1,f,c
 12097  00328A  0EF6               	movlw	-10
 12098  00328C  1EE3               	comf	plusw1,f,c
 12099  00328E  0EF7               	movlw	-9
 12100  003290  1EE3               	comf	plusw1,f,c
 12101  003292  E314               	bnc	u5400
 12102  003294  0EF1               	movlw	-15
 12103  003296  2AE3               	incf	plusw1,f,c
 12104  003298  E311               	bnc	u5400
 12105  00329A  0EF2               	movlw	-14
 12106  00329C  2AE3               	incf	plusw1,f,c
 12107  00329E  E30E               	bnc	u5400
 12108  0032A0  0EF3               	movlw	-13
 12109  0032A2  2AE3               	incf	plusw1,f,c
 12110  0032A4  E30B               	bnc	u5400
 12111  0032A6  0EF4               	movlw	-12
 12112  0032A8  2AE3               	incf	plusw1,f,c
 12113  0032AA  E308               	bnc	u5400
 12114  0032AC  0EF5               	movlw	-11
 12115  0032AE  2AE3               	incf	plusw1,f,c
 12116  0032B0  E305               	bnc	u5400
 12117  0032B2  0EF6               	movlw	-10
 12118  0032B4  2AE3               	incf	plusw1,f,c
 12119  0032B6  E302               	bnc	u5400
 12120  0032B8  0EF7               	movlw	-9
 12121  0032BA  2AE3               	incf	plusw1,f,c
 12122  0032BC                     u5400:
 12123                           
 12124                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 12125  0032BC  AE20               	btfss	_prec+1,7,c
 12126                           
 12127                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 12128  0032BE  9221               	bcf	_flags,1,c
 12129                           
 12130                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 12131  0032C0  BE20               	btfsc	_prec+1,7,c
 12132  0032C2  D005               	goto	u5420
 12133  0032C4  5020               	movf	_prec+1,w,c
 12134  0032C6  E110               	bnz	l8766
 12135  0032C8  041F               	decf	_prec,w,c
 12136  0032CA  B0D8               	btfsc	status,0,c
 12137  0032CC  D00D               	goto	l8766
 12138  0032CE                     u5420:
 12139  0032CE  0E01               	movlw	1
 12140  0032D0  6E47               	movwf	btemp+10,c
 12141  0032D2  0E00               	movlw	0
 12142  0032D4  6E48               	movwf	btemp+11,c
 12143                           
 12144                           ;stkvar	_p @ sp[(-18)+16]
 12145  0032D6  0EFE               	movlw	-2
 12146  0032D8  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12147  0032DE  0EFF               	movlw	-1
 12148  0032E0  0060  F123  FFE3   	movff	btemp+11,plusw1
 12149  0032E6  D008               	goto	l1909
 12150  0032E8                     l8766:
 12151                           
 12152                           ;stkvar	_p @ sp[(-18)+16]
 12153  0032E8  0EFE               	movlw	-2
 12154  0032EA  0060  F07F  FFE3   	movff	_prec,plusw1
 12155  0032F0  0EFF               	movlw	-1
 12156  0032F2  0060  F083  FFE3   	movff	_prec+1,plusw1
 12157  0032F8                     l1909:
 12158                           
 12159                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 12160                           ;stkvar	_w @ sp[(-18)+14]
 12161  0032F8  0EFC               	movlw	-4
 12162  0032FA  0060  F077  FFE3   	movff	_width,plusw1
 12163  003300  0EFD               	movlw	-3
 12164  003302  0060  F07B  FFE3   	movff	_width+1,plusw1
 12165                           
 12166                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 12167                           ;stkvar	_s @ sp[(-18)+12]
 12168  003308  0EFA               	movlw	-6
 12169  00330A  006F FF8C  F03D    	movff	plusw1,btemp
 12170  003310  0EFB               	movlw	-5
 12171  003312  50E3               	movf	plusw1,w,c
 12172  003314  103D               	iorwf	btemp,w,c
 12173  003316  A4D8               	btfss	status,2,c
 12174  003318  D002               	goto	u5440
 12175  00331A  A421               	btfss	_flags,2,c
 12176  00331C  D00A               	goto	l8774
 12177  00331E                     u5440:
 12178                           
 12179                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 12180                           ;stkvar	_w @ sp[(-18)+14]
 12181  00331E  50E1               	movf	fsr1l,w,c
 12182  003320  0FFC               	addlw	-4
 12183  003322  6ED9               	movwf	fsr2l,c
 12184  003324  50E2               	movf	fsr1h,w,c
 12185  003326  6EDA               	movwf	fsr2h,c
 12186  003328  0EFF               	movlw	255
 12187  00332A  22DA               	addwfc	fsr2h,f,c
 12188  00332C  06DE               	decf	postinc2,f,c
 12189  00332E  0E00               	movlw	0
 12190  003330  5ADD               	subwfb	postdec2,f,c
 12191  003332                     l8774:
 12192                           
 12193                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 12194  003332  0E1F               	movlw	31
 12195  003334  6E47               	movwf	btemp+10,c
 12196  003336  0E00               	movlw	0
 12197  003338  6E48               	movwf	btemp+11,c
 12198                           
 12199                           ;stkvar	_i @ sp[(-18)+10]
 12200  00333A  0EF8               	movlw	-8
 12201  00333C  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12202  003342  0EF9               	movlw	-7
 12203  003344  0060  F123  FFE3   	movff	btemp+11,plusw1
 12204                           
 12205                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 12206  00334A  0101               	movlb	1	; () banked
 12207  00334C  6BED               	clrf	(_dbuf+31)& (0+255),b
 12208                           
 12209                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12210  00334E  D109               	goto	l8788
 12211  003350                     l8778:
 12212                           
 12213                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 12214                           ;stkvar	_i @ sp[(-18)+10]
 12215  003350  50E1               	movf	fsr1l,w,c
 12216  003352  0FF8               	addlw	-8
 12217  003354  6ED9               	movwf	fsr2l,c
 12218  003356  50E2               	movf	fsr1h,w,c
 12219  003358  6EDA               	movwf	fsr2h,c
 12220  00335A  0EFF               	movlw	255
 12221  00335C  22DA               	addwfc	fsr2h,f,c
 12222  00335E  06DE               	decf	postinc2,f,c
 12223  003360  0E00               	movlw	0
 12224  003362  5ADD               	subwfb	postdec2,f,c
 12225                           
 12226                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 12227  003364  0E0A               	movlw	10
 12228  003366  6EE6               	movwf	postinc1,c
 12229  003368  0E00               	movlw	0
 12230  00336A  6EE6               	movwf	postinc1,c
 12231  00336C  0E00               	movlw	0
 12232  00336E  6EE6               	movwf	postinc1,c
 12233  003370  0E00               	movlw	0
 12234  003372  6EE6               	movwf	postinc1,c
 12235  003374  0E00               	movlw	0
 12236  003376  6EE6               	movwf	postinc1,c
 12237  003378  0E00               	movlw	0
 12238  00337A  6EE6               	movwf	postinc1,c
 12239  00337C  0E00               	movlw	0
 12240  00337E  6EE6               	movwf	postinc1,c
 12241  003380  0E00               	movlw	0
 12242  003382  6EE6               	movwf	postinc1,c
 12243                           
 12244                           ;stkvar	_n @ sp[(-26)+2]
 12245  003384  50E1               	movf	fsr1l,w,c
 12246  003386  0FE8               	addlw	-24
 12247  003388  6ED9               	movwf	fsr2l,c
 12248  00338A  50E2               	movf	fsr1h,w,c
 12249  00338C  6EDA               	movwf	fsr2h,c
 12250  00338E  0EFF               	movlw	255
 12251  003390  22DA               	addwfc	fsr2h,f,c
 12252  003392  006F FF7B FFE6     	movff	postinc2,postinc1
 12253  003398  006F FF7B FFE6     	movff	postinc2,postinc1
 12254  00339E  006F FF7B FFE6     	movff	postinc2,postinc1
 12255  0033A4  006F FF7B FFE6     	movff	postinc2,postinc1
 12256  0033AA  006F FF7B FFE6     	movff	postinc2,postinc1
 12257  0033B0  006F FF7B FFE6     	movff	postinc2,postinc1
 12258  0033B6  006F FF7B FFE6     	movff	postinc2,postinc1
 12259  0033BC  006F FF7B FFE6     	movff	postinc2,postinc1
 12260  0033C2  EC18  F025         	call	___aomod	;wreg free
 12261  0033C6  52E5               	movf	postdec1,f,c
 12262  0033C8  006F FF9C  F054    	movff	indf1,btemp+23
 12263  0033CE  52E5               	movf	postdec1,f,c
 12264  0033D0  006F FF9C  F053    	movff	indf1,btemp+22
 12265  0033D6  52E5               	movf	postdec1,f,c
 12266  0033D8  006F FF9C  F052    	movff	indf1,btemp+21
 12267  0033DE  52E5               	movf	postdec1,f,c
 12268  0033E0  006F FF9C  F051    	movff	indf1,btemp+20
 12269  0033E6  52E5               	movf	postdec1,f,c
 12270  0033E8  006F FF9C  F050    	movff	indf1,btemp+19
 12271  0033EE  52E5               	movf	postdec1,f,c
 12272  0033F0  006F FF9C  F04F    	movff	indf1,btemp+18
 12273  0033F6  52E5               	movf	postdec1,f,c
 12274  0033F8  006F FF9C  F04E    	movff	indf1,btemp+17
 12275  0033FE  52E5               	movf	postdec1,f,c
 12276  003400  006F FF9C  F04D    	movff	indf1,btemp+16
 12277  003406  0EF8               	movlw	248
 12278  003408  26E1               	addwf	fsr1l,f,c
 12279  00340A  0EFF               	movlw	255
 12280  00340C  22E2               	addwfc	fsr1h,f,c
 12281  00340E  0060  F134  F047   	movff	btemp+16,btemp+10
 12282  003414  0060  F138  F048   	movff	btemp+17,btemp+11
 12283  00341A  0060  F11F  FFE6   	movff	btemp+10,postinc1
 12284  003420  0060  F123  FFE6   	movff	btemp+11,postinc1
 12285  003426  EC84  F032         	call	_abs	;wreg free
 12286  00342A  0E30               	movlw	48
 12287  00342C  263D               	addwf	btemp,f,c
 12288                           
 12289                           ;stkvar	_i @ sp[(-18)+10]
 12290  00342E  0EF8               	movlw	-8
 12291  003430  006F FF8C  F047    	movff	plusw1,btemp+10
 12292  003436  0EF9               	movlw	-7
 12293  003438  006F FF8C  F048    	movff	plusw1,btemp+11
 12294  00343E  0ECE               	movlw	low _dbuf
 12295  003440  2447               	addwf	btemp+10,w,c
 12296  003442  6ED9               	movwf	fsr2l,c
 12297  003444  0E01               	movlw	high _dbuf
 12298  003446  2048               	addwfc	btemp+11,w,c
 12299  003448  6EDA               	movwf	fsr2h,c
 12300  00344A  0060  F0F7  FFDF   	movff	btemp,indf2
 12301                           
 12302                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 12303                           ;stkvar	_p @ sp[(-18)+16]
 12304  003450  50E1               	movf	fsr1l,w,c
 12305  003452  0FFE               	addlw	-2
 12306  003454  6ED9               	movwf	fsr2l,c
 12307  003456  50E2               	movf	fsr1h,w,c
 12308  003458  6EDA               	movwf	fsr2h,c
 12309  00345A  0EFF               	movlw	255
 12310  00345C  22DA               	addwfc	fsr2h,f,c
 12311  00345E  06DE               	decf	postinc2,f,c
 12312  003460  0E00               	movlw	0
 12313  003462  5ADD               	subwfb	postdec2,f,c
 12314                           
 12315                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 12316                           ;stkvar	_w @ sp[(-18)+14]
 12317  003464  50E1               	movf	fsr1l,w,c
 12318  003466  0FFC               	addlw	-4
 12319  003468  6ED9               	movwf	fsr2l,c
 12320  00346A  50E2               	movf	fsr1h,w,c
 12321  00346C  6EDA               	movwf	fsr2h,c
 12322  00346E  0EFF               	movlw	255
 12323  003470  22DA               	addwfc	fsr2h,f,c
 12324  003472  06DE               	decf	postinc2,f,c
 12325  003474  0E00               	movlw	0
 12326  003476  5ADD               	subwfb	postdec2,f,c
 12327                           
 12328                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 12329  003478  0E0A               	movlw	10
 12330  00347A  6EE6               	movwf	postinc1,c
 12331  00347C  0E00               	movlw	0
 12332  00347E  6EE6               	movwf	postinc1,c
 12333  003480  0E00               	movlw	0
 12334  003482  6EE6               	movwf	postinc1,c
 12335  003484  0E00               	movlw	0
 12336  003486  6EE6               	movwf	postinc1,c
 12337  003488  0E00               	movlw	0
 12338  00348A  6EE6               	movwf	postinc1,c
 12339  00348C  0E00               	movlw	0
 12340  00348E  6EE6               	movwf	postinc1,c
 12341  003490  0E00               	movlw	0
 12342  003492  6EE6               	movwf	postinc1,c
 12343  003494  0E00               	movlw	0
 12344  003496  6EE6               	movwf	postinc1,c
 12345                           
 12346                           ;stkvar	_n @ sp[(-26)+2]
 12347  003498  50E1               	movf	fsr1l,w,c
 12348  00349A  0FE8               	addlw	-24
 12349  00349C  6ED9               	movwf	fsr2l,c
 12350  00349E  50E2               	movf	fsr1h,w,c
 12351  0034A0  6EDA               	movwf	fsr2h,c
 12352  0034A2  0EFF               	movlw	255
 12353  0034A4  22DA               	addwfc	fsr2h,f,c
 12354  0034A6  006F FF7B FFE6     	movff	postinc2,postinc1
 12355  0034AC  006F FF7B FFE6     	movff	postinc2,postinc1
 12356  0034B2  006F FF7B FFE6     	movff	postinc2,postinc1
 12357  0034B8  006F FF7B FFE6     	movff	postinc2,postinc1
 12358  0034BE  006F FF7B FFE6     	movff	postinc2,postinc1
 12359  0034C4  006F FF7B FFE6     	movff	postinc2,postinc1
 12360  0034CA  006F FF7B FFE6     	movff	postinc2,postinc1
 12361  0034D0  006F FF7B FFE6     	movff	postinc2,postinc1
 12362  0034D6  ECA3  F022         	call	___aodiv	;wreg free
 12363  0034DA  52E5               	movf	postdec1,f,c
 12364  0034DC  006F FF9C  F054    	movff	indf1,btemp+23
 12365  0034E2  52E5               	movf	postdec1,f,c
 12366  0034E4  006F FF9C  F053    	movff	indf1,btemp+22
 12367  0034EA  52E5               	movf	postdec1,f,c
 12368  0034EC  006F FF9C  F052    	movff	indf1,btemp+21
 12369  0034F2  52E5               	movf	postdec1,f,c
 12370  0034F4  006F FF9C  F051    	movff	indf1,btemp+20
 12371  0034FA  52E5               	movf	postdec1,f,c
 12372  0034FC  006F FF9C  F050    	movff	indf1,btemp+19
 12373  003502  52E5               	movf	postdec1,f,c
 12374  003504  006F FF9C  F04F    	movff	indf1,btemp+18
 12375  00350A  52E5               	movf	postdec1,f,c
 12376  00350C  006F FF9C  F04E    	movff	indf1,btemp+17
 12377  003512  52E5               	movf	postdec1,f,c
 12378  003514  006F FF9C  F04D    	movff	indf1,btemp+16
 12379  00351A  0EF8               	movlw	248
 12380  00351C  26E1               	addwf	fsr1l,f,c
 12381  00351E  0EFF               	movlw	255
 12382  003520  22E2               	addwfc	fsr1h,f,c
 12383                           
 12384                           ;stkvar	_n @ sp[(-18)+2]
 12385  003522  0EF0               	movlw	-16
 12386  003524  0060  F137  FFE3   	movff	btemp+16,plusw1
 12387  00352A  0EF1               	movlw	-15
 12388  00352C  0060  F13B  FFE3   	movff	btemp+17,plusw1
 12389  003532  0EF2               	movlw	-14
 12390  003534  0060  F13F  FFE3   	movff	btemp+18,plusw1
 12391  00353A  0EF3               	movlw	-13
 12392  00353C  0060  F143  FFE3   	movff	btemp+19,plusw1
 12393  003542  0EF4               	movlw	-12
 12394  003544  0060  F147  FFE3   	movff	btemp+20,plusw1
 12395  00354A  0EF5               	movlw	-11
 12396  00354C  0060  F14B  FFE3   	movff	btemp+21,plusw1
 12397  003552  0EF6               	movlw	-10
 12398  003554  0060  F14F  FFE3   	movff	btemp+22,plusw1
 12399  00355A  0EF7               	movlw	-9
 12400  00355C  0060  F153  FFE3   	movff	btemp+23,plusw1
 12401  003562                     l8788:
 12402                           
 12403                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12404                           ;stkvar	_i @ sp[(-18)+10]
 12405  003562  0EF9               	movlw	-7
 12406  003564  BEE3               	btfsc	plusw1,7,c
 12407  003566  D036               	goto	u5490
 12408  003568  0EF9               	movlw	-7
 12409  00356A  50E3               	movf	plusw1,w,c
 12410  00356C  E104               	bnz	u5450
 12411  00356E  0EF8               	movlw	-8
 12412  003570  04E3               	decf	plusw1,w,c
 12413  003572  A0D8               	btfss	status,0,c
 12414  003574  D02F               	goto	u5490
 12415  003576                     u5450:
 12416                           
 12417                           ;stkvar	_n @ sp[(-18)+2]
 12418  003576  0EF0               	movlw	-16
 12419  003578  50E3               	movf	plusw1,w,c
 12420  00357A  E115               	bnz	u5461
 12421  00357C  0EF1               	movlw	-15
 12422  00357E  50E3               	movf	plusw1,w,c
 12423  003580  E112               	bnz	u5461
 12424  003582  0EF2               	movlw	-14
 12425  003584  50E3               	movf	plusw1,w,c
 12426  003586  E10F               	bnz	u5461
 12427  003588  0EF3               	movlw	-13
 12428  00358A  50E3               	movf	plusw1,w,c
 12429  00358C  E10C               	bnz	u5461
 12430  00358E  0EF4               	movlw	-12
 12431  003590  50E3               	movf	plusw1,w,c
 12432  003592  E109               	bnz	u5461
 12433  003594  0EF5               	movlw	-11
 12434  003596  50E3               	movf	plusw1,w,c
 12435  003598  E106               	bnz	u5461
 12436  00359A  0EF6               	movlw	-10
 12437  00359C  50E3               	movf	plusw1,w,c
 12438  00359E  E103               	bnz	u5461
 12439  0035A0  0EF7               	movlw	-9
 12440  0035A2  50E3               	movf	plusw1,w,c
 12441  0035A4  A4D8               	btfss	status,2,c
 12442  0035A6                     u5461:
 12443  0035A6  D6D4               	goto	l8778
 12444                           
 12445                           ;stkvar	_p @ sp[(-18)+16]
 12446  0035A8  0EFF               	movlw	-1
 12447  0035AA  BEE3               	btfsc	plusw1,7,c
 12448  0035AC  D007               	goto	u5470
 12449  0035AE  0EFF               	movlw	-1
 12450  0035B0  50E3               	movf	plusw1,w,c
 12451  0035B2  E103               	bnz	u5471
 12452  0035B4  0EFE               	movlw	-2
 12453  0035B6  04E3               	decf	plusw1,w,c
 12454  0035B8  B0D8               	btfsc	status,0,c
 12455  0035BA                     u5471:
 12456  0035BA  D6CA               	goto	l8778
 12457  0035BC                     u5470:
 12458                           
 12459                           ;stkvar	_w @ sp[(-18)+14]
 12460  0035BC  0EFD               	movlw	-3
 12461  0035BE  BEE3               	btfsc	plusw1,7,c
 12462  0035C0  D009               	goto	u5490
 12463  0035C2  0EFD               	movlw	-3
 12464  0035C4  50E3               	movf	plusw1,w,c
 12465  0035C6  E104               	bnz	u5480
 12466  0035C8  0EFC               	movlw	-4
 12467  0035CA  04E3               	decf	plusw1,w,c
 12468  0035CC  A0D8               	btfss	status,0,c
 12469  0035CE  D002               	goto	u5490
 12470  0035D0                     u5480:
 12471  0035D0  B221               	btfsc	_flags,1,c
 12472  0035D2  D6BE               	goto	l8778
 12473  0035D4                     u5490:
 12474                           
 12475                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 12476                           ;stkvar	_s @ sp[(-18)+12]
 12477  0035D4  0EFA               	movlw	-6
 12478  0035D6  006F FF8C  F03D    	movff	plusw1,btemp
 12479  0035DC  0EFB               	movlw	-5
 12480  0035DE  50E3               	movf	plusw1,w,c
 12481  0035E0  103D               	iorwf	btemp,w,c
 12482  0035E2  A4D8               	btfss	status,2,c
 12483  0035E4  D002               	goto	u5510
 12484  0035E6  A421               	btfss	_flags,2,c
 12485  0035E8  D033               	goto	l8812
 12486  0035EA                     u5510:
 12487                           
 12488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 12489                           ;stkvar	_i @ sp[(-18)+10]
 12490  0035EA  50E1               	movf	fsr1l,w,c
 12491  0035EC  0FF8               	addlw	-8
 12492  0035EE  6ED9               	movwf	fsr2l,c
 12493  0035F0  50E2               	movf	fsr1h,w,c
 12494  0035F2  6EDA               	movwf	fsr2h,c
 12495  0035F4  0EFF               	movlw	255
 12496  0035F6  22DA               	addwfc	fsr2h,f,c
 12497  0035F8  06DE               	decf	postinc2,f,c
 12498  0035FA  0E00               	movlw	0
 12499  0035FC  5ADD               	subwfb	postdec2,f,c
 12500                           
 12501                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 12502                           ;stkvar	_s @ sp[(-18)+12]
 12503  0035FE  0EFA               	movlw	-6
 12504  003600  006F FF8C  F03D    	movff	plusw1,btemp
 12505  003606  0EFB               	movlw	-5
 12506  003608  50E3               	movf	plusw1,w,c
 12507  00360A  103D               	iorwf	btemp,w,c
 12508  00360C  A4D8               	btfss	status,2,c
 12509  00360E  D002               	goto	l8808
 12510  003610  0E2B               	movlw	43
 12511  003612  D001               	goto	L25
 12512  003614                     l8808:
 12513  003614  0E2D               	movlw	45
 12514  003616                     L25:
 12515  003616  6E47               	movwf	btemp+10,c
 12516  003618  0E00               	movlw	0
 12517  00361A  6E48               	movwf	btemp+11,c
 12518                           
 12519                           ;stkvar	_dtoa$4050 @ sp[(-18)+0]
 12520  00361C  0EEE               	movlw	-18
 12521  00361E  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12522  003624  0EEF               	movlw	-17
 12523  003626  0060  F123  FFE3   	movff	btemp+11,plusw1
 12524                           
 12525                           ;stkvar	_dtoa$4050 @ sp[(-18)+0]
 12526                           ;stkvar	_i @ sp[(-18)+10]
 12527  00362C  0EF8               	movlw	-8
 12528  00362E  006F FF8C  F047    	movff	plusw1,btemp+10
 12529  003634  0EF9               	movlw	-7
 12530  003636  006F FF8C  F048    	movff	plusw1,btemp+11
 12531  00363C  0ECE               	movlw	low _dbuf
 12532  00363E  2447               	addwf	btemp+10,w,c
 12533  003640  6ED9               	movwf	fsr2l,c
 12534  003642  0E01               	movlw	high _dbuf
 12535  003644  2048               	addwfc	btemp+11,w,c
 12536  003646  6EDA               	movwf	fsr2h,c
 12537  003648  0EEE               	movlw	-18
 12538  00364A  006F FF8F FFDF     	movff	plusw1,indf2
 12539  003650                     l8812:
 12540                           
 12541                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 12542                           ;stkvar	_w @ sp[(-18)+14]
 12543  003650  0EFC               	movlw	-4
 12544  003652  006F FF8F FFE6     	movff	plusw1,postinc1
 12545  003658  006F FF8F FFE6     	movff	plusw1,postinc1
 12546                           
 12547                           ;stkvar	_i @ sp[(-20)+10]
 12548  00365E  0ECE               	movlw	low _dbuf
 12549  003660  6E47               	movwf	btemp+10,c
 12550  003662  0E01               	movlw	high _dbuf
 12551  003664  6E48               	movwf	btemp+11,c
 12552  003666  0EF6               	movlw	-10
 12553  003668  50E3               	movf	plusw1,w,c
 12554  00366A  2647               	addwf	btemp+10,f,c
 12555  00366C  0EF7               	movlw	-9
 12556  00366E  50E3               	movf	plusw1,w,c
 12557  003670  2248               	addwfc	btemp+11,f,c
 12558  003672  0060  F11F  FFE6   	movff	btemp+10,postinc1
 12559  003678  0060  F123  FFE6   	movff	btemp+11,postinc1
 12560                           
 12561                           ;stkvar	_fp @ sp[(-22)+-2]
 12562  00367E  0EE8               	movlw	-24
 12563  003680  006F FF8F FFE6     	movff	plusw1,postinc1
 12564  003686  006F FF8F FFE6     	movff	plusw1,postinc1
 12565  00368C  ECE1  F029         	call	_pad	;wreg free
 12566                           
 12567                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 12568  003690  0EE4               	movlw	228
 12569  003692  26E1               	addwf	fsr1l,f,c
 12570  003694  0EFF               	movlw	255
 12571  003696  22E2               	addwfc	fsr1h,f,c
 12572  003698  0012               	return		;funcret
 12573  00369A                     __end_of_dtoa:
 12574                           	opt callstack 0
 12575                           
 12576 ;; *************** function _abs *****************
 12577 ;; Defined at:
 12578 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 12579 ;; Parameters:    Size  Location     Type
 12580 ;;  a               2  [STACK] int 
 12581 ;; Auto vars:     Size  Location     Type
 12582 ;;		None
 12583 ;; Return value:  Size  Location     Type
 12584 ;;                  2  [STACK] int 
 12585 ;; Registers used:
 12586 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 12587 ;; Tracked objects:
 12588 ;;		On entry : 0/1
 12589 ;;		On exit  : 0/0
 12590 ;;		Unchanged: 0/0
 12591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12596 ;;Total ram usage:        0 bytes
 12597 ;; Hardware stack levels used:    1
 12598 ;; Hardware stack levels required when called:    3
 12599 ;; This function calls:
 12600 ;;		Nothing
 12601 ;; This function is called by:
 12602 ;;		_dtoa
 12603 ;; This function uses a reentrant model
 12604 ;;
 12605                           
 12606                           	psect	text48
 12607  006508                     __ptext48:
 12608                           	opt callstack 0
 12609  006508                     _abs:
 12610                           	opt callstack 23
 12611                           
 12612                           ;stkvar	_a @ sp[(0)+-2]
 12613                           
 12614                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12615                           ;incstack = 0
 12616  006508  0EFF               	movlw	-1
 12617  00650A  BEE3               	btfsc	plusw1,7,c
 12618  00650C  D007               	goto	u2770
 12619  00650E  0EFF               	movlw	-1
 12620  006510  50E3               	movf	plusw1,w,c
 12621  006512  E112               	bnz	l5716
 12622  006514  0EFE               	movlw	-2
 12623  006516  04E3               	decf	plusw1,w,c
 12624  006518  B0D8               	btfsc	status,0,c
 12625  00651A  D00E               	goto	l5716
 12626  00651C                     u2770:
 12627                           
 12628                           ;stkvar	_a @ sp[(0)+-2]
 12629  00651C  0EFE               	movlw	-2
 12630  00651E  006F FF8C  F03D    	movff	plusw1,btemp
 12631  006524  1E3D               	comf	btemp,f,c
 12632  006526  0EFF               	movlw	-1
 12633  006528  006F FF8C  F03E    	movff	plusw1,btemp+1
 12634  00652E  1E3E               	comf	btemp+1,f,c
 12635  006530  2A3D               	incf	btemp,f,c
 12636  006532  B4D8               	btfsc	status,2,c
 12637  006534  2A3E               	incf	btemp+1,f,c
 12638  006536  D008               	goto	l2660
 12639  006538                     l5716:
 12640                           
 12641                           ;stkvar	_a @ sp[(0)+-2]
 12642  006538  0EFE               	movlw	-2
 12643  00653A  006F FF8C  F03D    	movff	plusw1,btemp
 12644  006540  0EFF               	movlw	-1
 12645  006542  006F FF8C  F03E    	movff	plusw1,btemp+1
 12646  006548                     l2660:
 12647                           
 12648                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 12649  006548  52E5               	movf	postdec1,f,c
 12650  00654A  52E5               	movf	postdec1,f,c
 12651  00654C  0012               	return		;funcret
 12652  00654E                     __end_of_abs:
 12653                           	opt callstack 0
 12654                           
 12655 ;; *************** function ___aomod *****************
 12656 ;; Defined at:
 12657 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 12658 ;; Parameters:    Size  Location     Type
 12659 ;;  dividend        8  [STACK] long long 
 12660 ;;  divisor         8  [STACK] long long 
 12661 ;; Auto vars:     Size  Location     Type
 12662 ;;  sign            1  [STACK] unsigned char 
 12663 ;;  counter         1  [STACK] unsigned char 
 12664 ;; Return value:  Size  Location     Type
 12665 ;;                  8  [STACK] long long 
 12666 ;; Registers used:
 12667 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 12668 ;; Tracked objects:
 12669 ;;		On entry : 0/1
 12670 ;;		On exit  : 0/0
 12671 ;;		Unchanged: 0/0
 12672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12677 ;;Total ram usage:        0 bytes
 12678 ;; Hardware stack levels used:    1
 12679 ;; Hardware stack levels required when called:    3
 12680 ;; This function calls:
 12681 ;;		Nothing
 12682 ;; This function is called by:
 12683 ;;		_dtoa
 12684 ;; This function uses a reentrant model
 12685 ;;
 12686                           
 12687                           	psect	text49
 12688  004A30                     __ptext49:
 12689                           	opt callstack 0
 12690  004A30                     ___aomod:
 12691                           	opt callstack 0
 12692                           
 12693                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 12694  004A30  52E6               	movf	postinc1,f,c
 12695  004A32  52E6               	movf	postinc1,f,c
 12696                           
 12697                           ;stkvar	_sign @ sp[(-2)+0]
 12698                           
 12699                           ;incstack = 0
 12700  004A34  0EFE               	movlw	-2
 12701  004A36  6AE3               	clrf	plusw1,c
 12702                           
 12703                           ;stkvar	_dividend @ sp[(-2)+-8]
 12704  004A38  0EFD               	movlw	-3
 12705  004A3A  AEE3               	btfss	plusw1,7,c
 12706  004A3C  D028               	goto	l5776
 12707                           
 12708                           ;stkvar	_dividend @ sp[(-2)+-8]
 12709                           ;stkvar	_dividend @ sp[(-2)+-8]
 12710  004A3E  0EF6               	movlw	-10
 12711  004A40  6CE3               	negf	plusw1,c
 12712  004A42  0EF7               	movlw	-9
 12713  004A44  1EE3               	comf	plusw1,f,c
 12714  004A46  0EF8               	movlw	-8
 12715  004A48  1EE3               	comf	plusw1,f,c
 12716  004A4A  0EF9               	movlw	-7
 12717  004A4C  1EE3               	comf	plusw1,f,c
 12718  004A4E  0EFA               	movlw	-6
 12719  004A50  1EE3               	comf	plusw1,f,c
 12720  004A52  0EFB               	movlw	-5
 12721  004A54  1EE3               	comf	plusw1,f,c
 12722  004A56  0EFC               	movlw	-4
 12723  004A58  1EE3               	comf	plusw1,f,c
 12724  004A5A  0EFD               	movlw	-3
 12725  004A5C  1EE3               	comf	plusw1,f,c
 12726  004A5E  E314               	bnc	u2930
 12727  004A60  0EF7               	movlw	-9
 12728  004A62  2AE3               	incf	plusw1,f,c
 12729  004A64  E311               	bnc	u2930
 12730  004A66  0EF8               	movlw	-8
 12731  004A68  2AE3               	incf	plusw1,f,c
 12732  004A6A  E30E               	bnc	u2930
 12733  004A6C  0EF9               	movlw	-7
 12734  004A6E  2AE3               	incf	plusw1,f,c
 12735  004A70  E30B               	bnc	u2930
 12736  004A72  0EFA               	movlw	-6
 12737  004A74  2AE3               	incf	plusw1,f,c
 12738  004A76  E308               	bnc	u2930
 12739  004A78  0EFB               	movlw	-5
 12740  004A7A  2AE3               	incf	plusw1,f,c
 12741  004A7C  E305               	bnc	u2930
 12742  004A7E  0EFC               	movlw	-4
 12743  004A80  2AE3               	incf	plusw1,f,c
 12744  004A82  E302               	bnc	u2930
 12745  004A84  0EFD               	movlw	-3
 12746  004A86  2AE3               	incf	plusw1,f,c
 12747  004A88                     u2930:
 12748                           
 12749                           ;stkvar	_sign @ sp[(-2)+0]
 12750  004A88  0EFE               	movlw	-2
 12751  004A8A  6AE3               	clrf	plusw1,c
 12752  004A8C  2AE3               	incf	plusw1,f,c
 12753  004A8E                     l5776:
 12754                           
 12755                           ;stkvar	_divisor @ sp[(-2)+-16]
 12756  004A8E  0EF5               	movlw	-11
 12757  004A90  AEE3               	btfss	plusw1,7,c
 12758  004A92  D025               	goto	u2950
 12759                           
 12760                           ;stkvar	_divisor @ sp[(-2)+-16]
 12761                           ;stkvar	_divisor @ sp[(-2)+-16]
 12762  004A94  0EEE               	movlw	-18
 12763  004A96  6CE3               	negf	plusw1,c
 12764  004A98  0EEF               	movlw	-17
 12765  004A9A  1EE3               	comf	plusw1,f,c
 12766  004A9C  0EF0               	movlw	-16
 12767  004A9E  1EE3               	comf	plusw1,f,c
 12768  004AA0  0EF1               	movlw	-15
 12769  004AA2  1EE3               	comf	plusw1,f,c
 12770  004AA4  0EF2               	movlw	-14
 12771  004AA6  1EE3               	comf	plusw1,f,c
 12772  004AA8  0EF3               	movlw	-13
 12773  004AAA  1EE3               	comf	plusw1,f,c
 12774  004AAC  0EF4               	movlw	-12
 12775  004AAE  1EE3               	comf	plusw1,f,c
 12776  004AB0  0EF5               	movlw	-11
 12777  004AB2  1EE3               	comf	plusw1,f,c
 12778  004AB4  E314               	bnc	u2950
 12779  004AB6  0EEF               	movlw	-17
 12780  004AB8  2AE3               	incf	plusw1,f,c
 12781  004ABA  E311               	bnc	u2950
 12782  004ABC  0EF0               	movlw	-16
 12783  004ABE  2AE3               	incf	plusw1,f,c
 12784  004AC0  E30E               	bnc	u2950
 12785  004AC2  0EF1               	movlw	-15
 12786  004AC4  2AE3               	incf	plusw1,f,c
 12787  004AC6  E30B               	bnc	u2950
 12788  004AC8  0EF2               	movlw	-14
 12789  004ACA  2AE3               	incf	plusw1,f,c
 12790  004ACC  E308               	bnc	u2950
 12791  004ACE  0EF3               	movlw	-13
 12792  004AD0  2AE3               	incf	plusw1,f,c
 12793  004AD2  E305               	bnc	u2950
 12794  004AD4  0EF4               	movlw	-12
 12795  004AD6  2AE3               	incf	plusw1,f,c
 12796  004AD8  E302               	bnc	u2950
 12797  004ADA  0EF5               	movlw	-11
 12798  004ADC  2AE3               	incf	plusw1,f,c
 12799  004ADE                     u2950:
 12800                           
 12801                           ;stkvar	_divisor @ sp[(-2)+-16]
 12802  004ADE  0EEE               	movlw	-18
 12803  004AE0  50E3               	movf	plusw1,w,c
 12804  004AE2  E116               	bnz	u2960
 12805  004AE4  0EEF               	movlw	-17
 12806  004AE6  50E3               	movf	plusw1,w,c
 12807  004AE8  E113               	bnz	u2960
 12808  004AEA  0EF0               	movlw	-16
 12809  004AEC  50E3               	movf	plusw1,w,c
 12810  004AEE  E110               	bnz	u2960
 12811  004AF0  0EF1               	movlw	-15
 12812  004AF2  50E3               	movf	plusw1,w,c
 12813  004AF4  E10D               	bnz	u2960
 12814  004AF6  0EF2               	movlw	-14
 12815  004AF8  50E3               	movf	plusw1,w,c
 12816  004AFA  E10A               	bnz	u2960
 12817  004AFC  0EF3               	movlw	-13
 12818  004AFE  50E3               	movf	plusw1,w,c
 12819  004B00  E107               	bnz	u2960
 12820  004B02  0EF4               	movlw	-12
 12821  004B04  50E3               	movf	plusw1,w,c
 12822  004B06  E104               	bnz	u2960
 12823  004B08  0EF5               	movlw	-11
 12824  004B0A  50E3               	movf	plusw1,w,c
 12825  004B0C  B4D8               	btfsc	status,2,c
 12826  004B0E  D075               	goto	u2990
 12827  004B10                     u2960:
 12828                           
 12829                           ;stkvar	_counter @ sp[(-2)+1]
 12830  004B10  0EFF               	movlw	-1
 12831  004B12  6AE3               	clrf	plusw1,c
 12832  004B14  D012               	goto	L26
 12833  004B16                     l5784:
 12834                           
 12835                           ;stkvar	_divisor @ sp[(-2)+-16]
 12836  004B16  90D8               	bcf	status,0,c
 12837  004B18  0EEE               	movlw	-18
 12838  004B1A  36E3               	rlcf	plusw1,f,c
 12839  004B1C  0EEF               	movlw	-17
 12840  004B1E  36E3               	rlcf	plusw1,f,c
 12841  004B20  0EF0               	movlw	-16
 12842  004B22  36E3               	rlcf	plusw1,f,c
 12843  004B24  0EF1               	movlw	-15
 12844  004B26  36E3               	rlcf	plusw1,f,c
 12845  004B28  0EF2               	movlw	-14
 12846  004B2A  36E3               	rlcf	plusw1,f,c
 12847  004B2C  0EF3               	movlw	-13
 12848  004B2E  36E3               	rlcf	plusw1,f,c
 12849  004B30  0EF4               	movlw	-12
 12850  004B32  36E3               	rlcf	plusw1,f,c
 12851  004B34  0EF5               	movlw	-11
 12852  004B36  36E3               	rlcf	plusw1,f,c
 12853                           
 12854                           ;stkvar	_counter @ sp[(-2)+1]
 12855  004B38  0EFF               	movlw	-1
 12856  004B3A                     L26:
 12857  004B3A  2AE3               	incf	plusw1,f,c
 12858                           
 12859                           ;stkvar	_divisor @ sp[(-2)+-16]
 12860  004B3C  0EF5               	movlw	-11
 12861  004B3E  AEE3               	btfss	plusw1,7,c
 12862  004B40  D7EA               	goto	l5784
 12863  004B42                     u2970:
 12864                           
 12865                           ;stkvar	_divisor @ sp[(-2)+-16]
 12866                           ;stkvar	_dividend @ sp[(-2)+-8]
 12867  004B42  50E1               	movf	fsr1l,w,c
 12868  004B44  0FF6               	addlw	-10
 12869  004B46  6ED9               	movwf	fsr2l,c
 12870  004B48  50E2               	movf	fsr1h,w,c
 12871  004B4A  6EDA               	movwf	fsr2h,c
 12872  004B4C  0EFF               	movlw	255
 12873  004B4E  22DA               	addwfc	fsr2h,f,c
 12874  004B50  0EEE               	movlw	-18
 12875  004B52  50E3               	movf	plusw1,w,c
 12876  004B54  5CDE               	subwf	postinc2,w,c
 12877  004B56  0EEF               	movlw	-17
 12878  004B58  50E3               	movf	plusw1,w,c
 12879  004B5A  58DE               	subwfb	postinc2,w,c
 12880  004B5C  0EF0               	movlw	-16
 12881  004B5E  50E3               	movf	plusw1,w,c
 12882  004B60  58DE               	subwfb	postinc2,w,c
 12883  004B62  0EF1               	movlw	-15
 12884  004B64  50E3               	movf	plusw1,w,c
 12885  004B66  58DE               	subwfb	postinc2,w,c
 12886  004B68  0EF2               	movlw	-14
 12887  004B6A  50E3               	movf	plusw1,w,c
 12888  004B6C  58DE               	subwfb	postinc2,w,c
 12889  004B6E  0EF3               	movlw	-13
 12890  004B70  50E3               	movf	plusw1,w,c
 12891  004B72  58DE               	subwfb	postinc2,w,c
 12892  004B74  0EF4               	movlw	-12
 12893  004B76  50E3               	movf	plusw1,w,c
 12894  004B78  58DE               	subwfb	postinc2,w,c
 12895  004B7A  0EF5               	movlw	-11
 12896  004B7C  50E3               	movf	plusw1,w,c
 12897  004B7E  58DE               	subwfb	postinc2,w,c
 12898  004B80  A0D8               	btfss	status,0,c
 12899  004B82  D01F               	goto	l5792
 12900                           
 12901                           ;stkvar	_divisor @ sp[(-2)+-16]
 12902                           ;stkvar	_dividend @ sp[(-2)+-8]
 12903  004B84  50E1               	movf	fsr1l,w,c
 12904  004B86  0FF6               	addlw	-10
 12905  004B88  6ED9               	movwf	fsr2l,c
 12906  004B8A  50E2               	movf	fsr1h,w,c
 12907  004B8C  6EDA               	movwf	fsr2h,c
 12908  004B8E  0EFF               	movlw	255
 12909  004B90  22DA               	addwfc	fsr2h,f,c
 12910  004B92  0EEE               	movlw	-18
 12911  004B94  50E3               	movf	plusw1,w,c
 12912  004B96  5EDE               	subwf	postinc2,f,c
 12913  004B98  0EEF               	movlw	-17
 12914  004B9A  50E3               	movf	plusw1,w,c
 12915  004B9C  5ADE               	subwfb	postinc2,f,c
 12916  004B9E  0EF0               	movlw	-16
 12917  004BA0  50E3               	movf	plusw1,w,c
 12918  004BA2  5ADE               	subwfb	postinc2,f,c
 12919  004BA4  0EF1               	movlw	-15
 12920  004BA6  50E3               	movf	plusw1,w,c
 12921  004BA8  5ADE               	subwfb	postinc2,f,c
 12922  004BAA  0EF2               	movlw	-14
 12923  004BAC  50E3               	movf	plusw1,w,c
 12924  004BAE  5ADE               	subwfb	postinc2,f,c
 12925  004BB0  0EF3               	movlw	-13
 12926  004BB2  50E3               	movf	plusw1,w,c
 12927  004BB4  5ADE               	subwfb	postinc2,f,c
 12928  004BB6  0EF4               	movlw	-12
 12929  004BB8  50E3               	movf	plusw1,w,c
 12930  004BBA  5ADE               	subwfb	postinc2,f,c
 12931  004BBC  0EF5               	movlw	-11
 12932  004BBE  50E3               	movf	plusw1,w,c
 12933  004BC0  5ADE               	subwfb	postinc2,f,c
 12934  004BC2                     l5792:
 12935                           
 12936                           ;stkvar	_divisor @ sp[(-2)+-16]
 12937  004BC2  90D8               	bcf	status,0,c
 12938  004BC4  0EF5               	movlw	-11
 12939  004BC6  32E3               	rrcf	plusw1,f,c
 12940  004BC8  0EF4               	movlw	-12
 12941  004BCA  32E3               	rrcf	plusw1,f,c
 12942  004BCC  0EF3               	movlw	-13
 12943  004BCE  32E3               	rrcf	plusw1,f,c
 12944  004BD0  0EF2               	movlw	-14
 12945  004BD2  32E3               	rrcf	plusw1,f,c
 12946  004BD4  0EF1               	movlw	-15
 12947  004BD6  32E3               	rrcf	plusw1,f,c
 12948  004BD8  0EF0               	movlw	-16
 12949  004BDA  32E3               	rrcf	plusw1,f,c
 12950  004BDC  0EEF               	movlw	-17
 12951  004BDE  32E3               	rrcf	plusw1,f,c
 12952  004BE0  0EEE               	movlw	-18
 12953  004BE2  32E3               	rrcf	plusw1,f,c
 12954                           
 12955                           ;stkvar	_counter @ sp[(-2)+1]
 12956  004BE4  0EFF               	movlw	-1
 12957  004BE6  50E3               	movf	plusw1,w,c
 12958  004BE8  6E3D               	movwf	btemp,c
 12959  004BEA  0E01               	movlw	1
 12960  004BEC  5E3D               	subwf	btemp,f,c
 12961  004BEE  0EFF               	movlw	-1
 12962  004BF0  0060  F0F7  FFE3   	movff	btemp,plusw1
 12963  004BF6  A4D8               	btfss	status,2,c
 12964  004BF8  D7A4               	goto	u2970
 12965  004BFA                     u2990:
 12966                           
 12967                           ;stkvar	_sign @ sp[(-2)+0]
 12968  004BFA  0EFE               	movlw	-2
 12969  004BFC  50E3               	movf	plusw1,w,c
 12970  004BFE  B4D8               	btfsc	status,2,c
 12971  004C00  D025               	goto	u3010
 12972                           
 12973                           ;stkvar	_dividend @ sp[(-2)+-8]
 12974                           ;stkvar	_dividend @ sp[(-2)+-8]
 12975  004C02  0EF6               	movlw	-10
 12976  004C04  6CE3               	negf	plusw1,c
 12977  004C06  0EF7               	movlw	-9
 12978  004C08  1EE3               	comf	plusw1,f,c
 12979  004C0A  0EF8               	movlw	-8
 12980  004C0C  1EE3               	comf	plusw1,f,c
 12981  004C0E  0EF9               	movlw	-7
 12982  004C10  1EE3               	comf	plusw1,f,c
 12983  004C12  0EFA               	movlw	-6
 12984  004C14  1EE3               	comf	plusw1,f,c
 12985  004C16  0EFB               	movlw	-5
 12986  004C18  1EE3               	comf	plusw1,f,c
 12987  004C1A  0EFC               	movlw	-4
 12988  004C1C  1EE3               	comf	plusw1,f,c
 12989  004C1E  0EFD               	movlw	-3
 12990  004C20  1EE3               	comf	plusw1,f,c
 12991  004C22  E314               	bnc	u3010
 12992  004C24  0EF7               	movlw	-9
 12993  004C26  2AE3               	incf	plusw1,f,c
 12994  004C28  E311               	bnc	u3010
 12995  004C2A  0EF8               	movlw	-8
 12996  004C2C  2AE3               	incf	plusw1,f,c
 12997  004C2E  E30E               	bnc	u3010
 12998  004C30  0EF9               	movlw	-7
 12999  004C32  2AE3               	incf	plusw1,f,c
 13000  004C34  E30B               	bnc	u3010
 13001  004C36  0EFA               	movlw	-6
 13002  004C38  2AE3               	incf	plusw1,f,c
 13003  004C3A  E308               	bnc	u3010
 13004  004C3C  0EFB               	movlw	-5
 13005  004C3E  2AE3               	incf	plusw1,f,c
 13006  004C40  E305               	bnc	u3010
 13007  004C42  0EFC               	movlw	-4
 13008  004C44  2AE3               	incf	plusw1,f,c
 13009  004C46  E302               	bnc	u3010
 13010  004C48  0EFD               	movlw	-3
 13011  004C4A  2AE3               	incf	plusw1,f,c
 13012  004C4C                     u3010:
 13013                           
 13014                           ;stkvar	_dividend @ sp[(-2)+-8]
 13015  004C4C  0EF6               	movlw	246
 13016  004C4E  24E1               	addwf	fsr1l,w,c
 13017  004C50  6ED9               	movwf	fsr2l,c
 13018  004C52  0EFF               	movlw	255
 13019  004C54  20E2               	addwfc	fsr1h,w,c
 13020  004C56  6EDA               	movwf	fsr2h,c
 13021                           
 13022                           ;stkvar	?___aomod @ sp[(-2)+-8]
 13023  004C58  0E08               	movlw	8
 13024  004C5A  6E3D               	movwf	btemp,c
 13025  004C5C  0EF6               	movlw	-10
 13026  004C5E                     us302999:
 13027  004C5E  006F FF7B FFE3     	movff	postinc2,plusw1
 13028  004C64  28E8               	incf	wreg,w,c
 13029  004C66  2E3D               	decfsz	btemp,f,c
 13030  004C68  D7FA               	bra	us302999
 13031                           
 13032                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 13033  004C6A  52E5               	movf	postdec1,f,c
 13034  004C6C  52E5               	movf	postdec1,f,c
 13035  004C6E  0012               	return		;funcret
 13036  004C70                     __end_of___aomod:
 13037                           	opt callstack 0
 13038                           
 13039 ;; *************** function ___aodiv *****************
 13040 ;; Defined at:
 13041 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;  dividend        8  [STACK] long long 
 13044 ;;  divisor         8  [STACK] long long 
 13045 ;; Auto vars:     Size  Location     Type
 13046 ;;  quotient        8  [STACK] long long 
 13047 ;;  sign            1  [STACK] unsigned char 
 13048 ;;  counter         1  [STACK] unsigned char 
 13049 ;; Return value:  Size  Location     Type
 13050 ;;                  8  [STACK] long long 
 13051 ;; Registers used:
 13052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 13053 ;; Tracked objects:
 13054 ;;		On entry : 0/1
 13055 ;;		On exit  : 0/0
 13056 ;;		Unchanged: 0/0
 13057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13062 ;;Total ram usage:        0 bytes
 13063 ;; Hardware stack levels used:    1
 13064 ;; Hardware stack levels required when called:    3
 13065 ;; This function calls:
 13066 ;;		Nothing
 13067 ;; This function is called by:
 13068 ;;		_dtoa
 13069 ;; This function uses a reentrant model
 13070 ;;
 13071                           
 13072                           	psect	text50
 13073  004546                     __ptext50:
 13074                           	opt callstack 0
 13075  004546                     ___aodiv:
 13076                           	opt callstack 0
 13077                           
 13078                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 13079  004546  0E0A               	movlw	10
 13080  004548  26E1               	addwf	fsr1l,f,c
 13081  00454A  0E00               	movlw	0
 13082  00454C  22E2               	addwfc	fsr1h,f,c
 13083                           
 13084                           ;stkvar	_sign @ sp[(-10)+8]
 13085                           
 13086                           ;incstack = 0
 13087  00454E  0EFE               	movlw	-2
 13088  004550  6AE3               	clrf	plusw1,c
 13089                           
 13090                           ;stkvar	_divisor @ sp[(-10)+-16]
 13091  004552  0EED               	movlw	-19
 13092  004554  AEE3               	btfss	plusw1,7,c
 13093  004556  D028               	goto	l5732
 13094                           
 13095                           ;stkvar	_divisor @ sp[(-10)+-16]
 13096                           ;stkvar	_divisor @ sp[(-10)+-16]
 13097  004558  0EE6               	movlw	-26
 13098  00455A  6CE3               	negf	plusw1,c
 13099  00455C  0EE7               	movlw	-25
 13100  00455E  1EE3               	comf	plusw1,f,c
 13101  004560  0EE8               	movlw	-24
 13102  004562  1EE3               	comf	plusw1,f,c
 13103  004564  0EE9               	movlw	-23
 13104  004566  1EE3               	comf	plusw1,f,c
 13105  004568  0EEA               	movlw	-22
 13106  00456A  1EE3               	comf	plusw1,f,c
 13107  00456C  0EEB               	movlw	-21
 13108  00456E  1EE3               	comf	plusw1,f,c
 13109  004570  0EEC               	movlw	-20
 13110  004572  1EE3               	comf	plusw1,f,c
 13111  004574  0EED               	movlw	-19
 13112  004576  1EE3               	comf	plusw1,f,c
 13113  004578  E314               	bnc	u2810
 13114  00457A  0EE7               	movlw	-25
 13115  00457C  2AE3               	incf	plusw1,f,c
 13116  00457E  E311               	bnc	u2810
 13117  004580  0EE8               	movlw	-24
 13118  004582  2AE3               	incf	plusw1,f,c
 13119  004584  E30E               	bnc	u2810
 13120  004586  0EE9               	movlw	-23
 13121  004588  2AE3               	incf	plusw1,f,c
 13122  00458A  E30B               	bnc	u2810
 13123  00458C  0EEA               	movlw	-22
 13124  00458E  2AE3               	incf	plusw1,f,c
 13125  004590  E308               	bnc	u2810
 13126  004592  0EEB               	movlw	-21
 13127  004594  2AE3               	incf	plusw1,f,c
 13128  004596  E305               	bnc	u2810
 13129  004598  0EEC               	movlw	-20
 13130  00459A  2AE3               	incf	plusw1,f,c
 13131  00459C  E302               	bnc	u2810
 13132  00459E  0EED               	movlw	-19
 13133  0045A0  2AE3               	incf	plusw1,f,c
 13134  0045A2                     u2810:
 13135                           
 13136                           ;stkvar	_sign @ sp[(-10)+8]
 13137  0045A2  0EFE               	movlw	-2
 13138  0045A4  6AE3               	clrf	plusw1,c
 13139  0045A6  2AE3               	incf	plusw1,f,c
 13140  0045A8                     l5732:
 13141                           
 13142                           ;stkvar	_dividend @ sp[(-10)+-8]
 13143  0045A8  0EF5               	movlw	-11
 13144  0045AA  AEE3               	btfss	plusw1,7,c
 13145  0045AC  D027               	goto	l5738
 13146                           
 13147                           ;stkvar	_dividend @ sp[(-10)+-8]
 13148                           ;stkvar	_dividend @ sp[(-10)+-8]
 13149  0045AE  0EEE               	movlw	-18
 13150  0045B0  6CE3               	negf	plusw1,c
 13151  0045B2  0EEF               	movlw	-17
 13152  0045B4  1EE3               	comf	plusw1,f,c
 13153  0045B6  0EF0               	movlw	-16
 13154  0045B8  1EE3               	comf	plusw1,f,c
 13155  0045BA  0EF1               	movlw	-15
 13156  0045BC  1EE3               	comf	plusw1,f,c
 13157  0045BE  0EF2               	movlw	-14
 13158  0045C0  1EE3               	comf	plusw1,f,c
 13159  0045C2  0EF3               	movlw	-13
 13160  0045C4  1EE3               	comf	plusw1,f,c
 13161  0045C6  0EF4               	movlw	-12
 13162  0045C8  1EE3               	comf	plusw1,f,c
 13163  0045CA  0EF5               	movlw	-11
 13164  0045CC  1EE3               	comf	plusw1,f,c
 13165  0045CE  E314               	bnc	u2830
 13166  0045D0  0EEF               	movlw	-17
 13167  0045D2  2AE3               	incf	plusw1,f,c
 13168  0045D4  E311               	bnc	u2830
 13169  0045D6  0EF0               	movlw	-16
 13170  0045D8  2AE3               	incf	plusw1,f,c
 13171  0045DA  E30E               	bnc	u2830
 13172  0045DC  0EF1               	movlw	-15
 13173  0045DE  2AE3               	incf	plusw1,f,c
 13174  0045E0  E30B               	bnc	u2830
 13175  0045E2  0EF2               	movlw	-14
 13176  0045E4  2AE3               	incf	plusw1,f,c
 13177  0045E6  E308               	bnc	u2830
 13178  0045E8  0EF3               	movlw	-13
 13179  0045EA  2AE3               	incf	plusw1,f,c
 13180  0045EC  E305               	bnc	u2830
 13181  0045EE  0EF4               	movlw	-12
 13182  0045F0  2AE3               	incf	plusw1,f,c
 13183  0045F2  E302               	bnc	u2830
 13184  0045F4  0EF5               	movlw	-11
 13185  0045F6  2AE3               	incf	plusw1,f,c
 13186  0045F8                     u2830:
 13187                           
 13188                           ;stkvar	_sign @ sp[(-10)+8]
 13189  0045F8  0EFE               	movlw	-2
 13190  0045FA  70E3               	btg	plusw1,0,c
 13191  0045FC                     l5738:
 13192                           
 13193                           ;stkvar	_quotient @ sp[(-10)+0]
 13194  0045FC  0E07               	movlw	7
 13195  0045FE  6E3D               	movwf	btemp,c
 13196  004600  0EF6               	movlw	-10
 13197  004602                     u2841:
 13198  004602  6AE3               	clrf	plusw1,c
 13199  004604  2AE8               	incf	wreg,f,c
 13200  004606  063D               	decf	btemp,f,c
 13201  004608  E2FC               	bc	u2841
 13202                           
 13203                           ;stkvar	_divisor @ sp[(-10)+-16]
 13204  00460A  0EE6               	movlw	-26
 13205  00460C  50E3               	movf	plusw1,w,c
 13206  00460E  E116               	bnz	u2850
 13207  004610  0EE7               	movlw	-25
 13208  004612  50E3               	movf	plusw1,w,c
 13209  004614  E113               	bnz	u2850
 13210  004616  0EE8               	movlw	-24
 13211  004618  50E3               	movf	plusw1,w,c
 13212  00461A  E110               	bnz	u2850
 13213  00461C  0EE9               	movlw	-23
 13214  00461E  50E3               	movf	plusw1,w,c
 13215  004620  E10D               	bnz	u2850
 13216  004622  0EEA               	movlw	-22
 13217  004624  50E3               	movf	plusw1,w,c
 13218  004626  E10A               	bnz	u2850
 13219  004628  0EEB               	movlw	-21
 13220  00462A  50E3               	movf	plusw1,w,c
 13221  00462C  E107               	bnz	u2850
 13222  00462E  0EEC               	movlw	-20
 13223  004630  50E3               	movf	plusw1,w,c
 13224  004632  E104               	bnz	u2850
 13225  004634  0EED               	movlw	-19
 13226  004636  50E3               	movf	plusw1,w,c
 13227  004638  B4D8               	btfsc	status,2,c
 13228  00463A  D088               	goto	u2880
 13229  00463C                     u2850:
 13230                           
 13231                           ;stkvar	_counter @ sp[(-10)+9]
 13232  00463C  0EFF               	movlw	-1
 13233  00463E  6AE3               	clrf	plusw1,c
 13234  004640  D012               	goto	L27
 13235  004642                     l5744:
 13236                           
 13237                           ;stkvar	_divisor @ sp[(-10)+-16]
 13238  004642  90D8               	bcf	status,0,c
 13239  004644  0EE6               	movlw	-26
 13240  004646  36E3               	rlcf	plusw1,f,c
 13241  004648  0EE7               	movlw	-25
 13242  00464A  36E3               	rlcf	plusw1,f,c
 13243  00464C  0EE8               	movlw	-24
 13244  00464E  36E3               	rlcf	plusw1,f,c
 13245  004650  0EE9               	movlw	-23
 13246  004652  36E3               	rlcf	plusw1,f,c
 13247  004654  0EEA               	movlw	-22
 13248  004656  36E3               	rlcf	plusw1,f,c
 13249  004658  0EEB               	movlw	-21
 13250  00465A  36E3               	rlcf	plusw1,f,c
 13251  00465C  0EEC               	movlw	-20
 13252  00465E  36E3               	rlcf	plusw1,f,c
 13253  004660  0EED               	movlw	-19
 13254  004662  36E3               	rlcf	plusw1,f,c
 13255                           
 13256                           ;stkvar	_counter @ sp[(-10)+9]
 13257  004664  0EFF               	movlw	-1
 13258  004666                     L27:
 13259  004666  2AE3               	incf	plusw1,f,c
 13260                           
 13261                           ;stkvar	_divisor @ sp[(-10)+-16]
 13262  004668  0EED               	movlw	-19
 13263  00466A  AEE3               	btfss	plusw1,7,c
 13264  00466C  D7EA               	goto	l5744
 13265  00466E                     u2860:
 13266                           
 13267                           ;stkvar	_quotient @ sp[(-10)+0]
 13268  00466E  90D8               	bcf	status,0,c
 13269  004670  0EF6               	movlw	-10
 13270  004672  36E3               	rlcf	plusw1,f,c
 13271  004674  0EF7               	movlw	-9
 13272  004676  36E3               	rlcf	plusw1,f,c
 13273  004678  0EF8               	movlw	-8
 13274  00467A  36E3               	rlcf	plusw1,f,c
 13275  00467C  0EF9               	movlw	-7
 13276  00467E  36E3               	rlcf	plusw1,f,c
 13277  004680  0EFA               	movlw	-6
 13278  004682  36E3               	rlcf	plusw1,f,c
 13279  004684  0EFB               	movlw	-5
 13280  004686  36E3               	rlcf	plusw1,f,c
 13281  004688  0EFC               	movlw	-4
 13282  00468A  36E3               	rlcf	plusw1,f,c
 13283  00468C  0EFD               	movlw	-3
 13284  00468E  36E3               	rlcf	plusw1,f,c
 13285                           
 13286                           ;stkvar	_divisor @ sp[(-10)+-16]
 13287                           ;stkvar	_dividend @ sp[(-10)+-8]
 13288  004690  50E1               	movf	fsr1l,w,c
 13289  004692  0FEE               	addlw	-18
 13290  004694  6ED9               	movwf	fsr2l,c
 13291  004696  50E2               	movf	fsr1h,w,c
 13292  004698  6EDA               	movwf	fsr2h,c
 13293  00469A  0EFF               	movlw	255
 13294  00469C  22DA               	addwfc	fsr2h,f,c
 13295  00469E  0EE6               	movlw	-26
 13296  0046A0  50E3               	movf	plusw1,w,c
 13297  0046A2  5CDE               	subwf	postinc2,w,c
 13298  0046A4  0EE7               	movlw	-25
 13299  0046A6  50E3               	movf	plusw1,w,c
 13300  0046A8  58DE               	subwfb	postinc2,w,c
 13301  0046AA  0EE8               	movlw	-24
 13302  0046AC  50E3               	movf	plusw1,w,c
 13303  0046AE  58DE               	subwfb	postinc2,w,c
 13304  0046B0  0EE9               	movlw	-23
 13305  0046B2  50E3               	movf	plusw1,w,c
 13306  0046B4  58DE               	subwfb	postinc2,w,c
 13307  0046B6  0EEA               	movlw	-22
 13308  0046B8  50E3               	movf	plusw1,w,c
 13309  0046BA  58DE               	subwfb	postinc2,w,c
 13310  0046BC  0EEB               	movlw	-21
 13311  0046BE  50E3               	movf	plusw1,w,c
 13312  0046C0  58DE               	subwfb	postinc2,w,c
 13313  0046C2  0EEC               	movlw	-20
 13314  0046C4  50E3               	movf	plusw1,w,c
 13315  0046C6  58DE               	subwfb	postinc2,w,c
 13316  0046C8  0EED               	movlw	-19
 13317  0046CA  50E3               	movf	plusw1,w,c
 13318  0046CC  58DE               	subwfb	postinc2,w,c
 13319  0046CE  A0D8               	btfss	status,0,c
 13320  0046D0  D021               	goto	l5756
 13321                           
 13322                           ;stkvar	_divisor @ sp[(-10)+-16]
 13323                           ;stkvar	_dividend @ sp[(-10)+-8]
 13324  0046D2  50E1               	movf	fsr1l,w,c
 13325  0046D4  0FEE               	addlw	-18
 13326  0046D6  6ED9               	movwf	fsr2l,c
 13327  0046D8  50E2               	movf	fsr1h,w,c
 13328  0046DA  6EDA               	movwf	fsr2h,c
 13329  0046DC  0EFF               	movlw	255
 13330  0046DE  22DA               	addwfc	fsr2h,f,c
 13331  0046E0  0EE6               	movlw	-26
 13332  0046E2  50E3               	movf	plusw1,w,c
 13333  0046E4  5EDE               	subwf	postinc2,f,c
 13334  0046E6  0EE7               	movlw	-25
 13335  0046E8  50E3               	movf	plusw1,w,c
 13336  0046EA  5ADE               	subwfb	postinc2,f,c
 13337  0046EC  0EE8               	movlw	-24
 13338  0046EE  50E3               	movf	plusw1,w,c
 13339  0046F0  5ADE               	subwfb	postinc2,f,c
 13340  0046F2  0EE9               	movlw	-23
 13341  0046F4  50E3               	movf	plusw1,w,c
 13342  0046F6  5ADE               	subwfb	postinc2,f,c
 13343  0046F8  0EEA               	movlw	-22
 13344  0046FA  50E3               	movf	plusw1,w,c
 13345  0046FC  5ADE               	subwfb	postinc2,f,c
 13346  0046FE  0EEB               	movlw	-21
 13347  004700  50E3               	movf	plusw1,w,c
 13348  004702  5ADE               	subwfb	postinc2,f,c
 13349  004704  0EEC               	movlw	-20
 13350  004706  50E3               	movf	plusw1,w,c
 13351  004708  5ADE               	subwfb	postinc2,f,c
 13352  00470A  0EED               	movlw	-19
 13353  00470C  50E3               	movf	plusw1,w,c
 13354  00470E  5ADE               	subwfb	postinc2,f,c
 13355                           
 13356                           ;stkvar	_quotient @ sp[(-10)+0]
 13357  004710  0EF6               	movlw	-10
 13358  004712  80E3               	bsf	plusw1,0,c
 13359  004714                     l5756:
 13360                           
 13361                           ;stkvar	_divisor @ sp[(-10)+-16]
 13362  004714  90D8               	bcf	status,0,c
 13363  004716  0EED               	movlw	-19
 13364  004718  32E3               	rrcf	plusw1,f,c
 13365  00471A  0EEC               	movlw	-20
 13366  00471C  32E3               	rrcf	plusw1,f,c
 13367  00471E  0EEB               	movlw	-21
 13368  004720  32E3               	rrcf	plusw1,f,c
 13369  004722  0EEA               	movlw	-22
 13370  004724  32E3               	rrcf	plusw1,f,c
 13371  004726  0EE9               	movlw	-23
 13372  004728  32E3               	rrcf	plusw1,f,c
 13373  00472A  0EE8               	movlw	-24
 13374  00472C  32E3               	rrcf	plusw1,f,c
 13375  00472E  0EE7               	movlw	-25
 13376  004730  32E3               	rrcf	plusw1,f,c
 13377  004732  0EE6               	movlw	-26
 13378  004734  32E3               	rrcf	plusw1,f,c
 13379                           
 13380                           ;stkvar	_counter @ sp[(-10)+9]
 13381  004736  0EFF               	movlw	-1
 13382  004738  50E3               	movf	plusw1,w,c
 13383  00473A  6E3D               	movwf	btemp,c
 13384  00473C  0E01               	movlw	1
 13385  00473E  5E3D               	subwf	btemp,f,c
 13386  004740  0EFF               	movlw	-1
 13387  004742  0060  F0F7  FFE3   	movff	btemp,plusw1
 13388  004748  A4D8               	btfss	status,2,c
 13389  00474A  D791               	goto	u2860
 13390  00474C                     u2880:
 13391                           
 13392                           ;stkvar	_sign @ sp[(-10)+8]
 13393  00474C  0EFE               	movlw	-2
 13394  00474E  50E3               	movf	plusw1,w,c
 13395  004750  B4D8               	btfsc	status,2,c
 13396  004752  D025               	goto	u2900
 13397                           
 13398                           ;stkvar	_quotient @ sp[(-10)+0]
 13399                           ;stkvar	_quotient @ sp[(-10)+0]
 13400  004754  0EF6               	movlw	-10
 13401  004756  6CE3               	negf	plusw1,c
 13402  004758  0EF7               	movlw	-9
 13403  00475A  1EE3               	comf	plusw1,f,c
 13404  00475C  0EF8               	movlw	-8
 13405  00475E  1EE3               	comf	plusw1,f,c
 13406  004760  0EF9               	movlw	-7
 13407  004762  1EE3               	comf	plusw1,f,c
 13408  004764  0EFA               	movlw	-6
 13409  004766  1EE3               	comf	plusw1,f,c
 13410  004768  0EFB               	movlw	-5
 13411  00476A  1EE3               	comf	plusw1,f,c
 13412  00476C  0EFC               	movlw	-4
 13413  00476E  1EE3               	comf	plusw1,f,c
 13414  004770  0EFD               	movlw	-3
 13415  004772  1EE3               	comf	plusw1,f,c
 13416  004774  E314               	bnc	u2900
 13417  004776  0EF7               	movlw	-9
 13418  004778  2AE3               	incf	plusw1,f,c
 13419  00477A  E311               	bnc	u2900
 13420  00477C  0EF8               	movlw	-8
 13421  00477E  2AE3               	incf	plusw1,f,c
 13422  004780  E30E               	bnc	u2900
 13423  004782  0EF9               	movlw	-7
 13424  004784  2AE3               	incf	plusw1,f,c
 13425  004786  E30B               	bnc	u2900
 13426  004788  0EFA               	movlw	-6
 13427  00478A  2AE3               	incf	plusw1,f,c
 13428  00478C  E308               	bnc	u2900
 13429  00478E  0EFB               	movlw	-5
 13430  004790  2AE3               	incf	plusw1,f,c
 13431  004792  E305               	bnc	u2900
 13432  004794  0EFC               	movlw	-4
 13433  004796  2AE3               	incf	plusw1,f,c
 13434  004798  E302               	bnc	u2900
 13435  00479A  0EFD               	movlw	-3
 13436  00479C  2AE3               	incf	plusw1,f,c
 13437  00479E                     u2900:
 13438                           
 13439                           ;stkvar	_quotient @ sp[(-10)+0]
 13440  00479E  0EF6               	movlw	246
 13441  0047A0  24E1               	addwf	fsr1l,w,c
 13442  0047A2  6ED9               	movwf	fsr2l,c
 13443  0047A4  0EFF               	movlw	255
 13444  0047A6  20E2               	addwfc	fsr1h,w,c
 13445  0047A8  6EDA               	movwf	fsr2h,c
 13446                           
 13447                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 13448  0047AA  0E08               	movlw	8
 13449  0047AC  6E3D               	movwf	btemp,c
 13450  0047AE  0EEE               	movlw	-18
 13451  0047B0                     us291999:
 13452  0047B0  006F FF7B FFE3     	movff	postinc2,plusw1
 13453  0047B6  28E8               	incf	wreg,w,c
 13454  0047B8  2E3D               	decfsz	btemp,f,c
 13455  0047BA  D7FA               	bra	us291999
 13456                           
 13457                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 13458  0047BC  0EF6               	movlw	246
 13459  0047BE  26E1               	addwf	fsr1l,f,c
 13460  0047C0  0EFF               	movlw	255
 13461  0047C2  22E2               	addwfc	fsr1h,f,c
 13462  0047C4  0012               	return		;funcret
 13463  0047C6                     __end_of___aodiv:
 13464                           	opt callstack 0
 13465                           
 13466 ;; *************** function _ctoa *****************
 13467 ;; Defined at:
 13468 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 13469 ;; Parameters:    Size  Location     Type
 13470 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13471 ;;		 -> f(5), NULL(0), 
 13472 ;;  c               1  [STACK] unsigned char 
 13473 ;; Auto vars:     Size  Location     Type
 13474 ;;  w               2  [STACK] int 
 13475 ;;  l               2    0        int 
 13476 ;; Return value:  Size  Location     Type
 13477 ;;                  2  [STACK] int 
 13478 ;; Registers used:
 13479 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13480 ;; Tracked objects:
 13481 ;;		On entry : 0/0
 13482 ;;		On exit  : 0/0
 13483 ;;		Unchanged: 0/0
 13484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13489 ;;Total ram usage:        0 bytes
 13490 ;; Hardware stack levels used:    1
 13491 ;; Hardware stack levels required when called:    8
 13492 ;; This function calls:
 13493 ;;		_pad
 13494 ;; This function is called by:
 13495 ;;		_vfpfcnvrt
 13496 ;; This function uses a reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text51
 13500  005FA8                     __ptext51:
 13501                           	opt callstack 0
 13502  005FA8                     _ctoa:
 13503                           	opt callstack 0
 13504                           
 13505                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13506  005FA8  52E6               	movf	postinc1,f,c
 13507  005FAA  52E6               	movf	postinc1,f,c
 13508                           
 13509                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 13510                           
 13511                           ;incstack = 0
 13512  005FAC  501D               	movf	_width,w,c
 13513  005FAE  101E               	iorwf	_width+1,w,c
 13514  005FB0  A4D8               	btfss	status,2,c
 13515  005FB2  D009               	goto	l8740
 13516                           
 13517                           ;stkvar	_w @ sp[(-2)+0]
 13518  005FB4  0EFE               	movlw	-2
 13519  005FB6  0060  F077  FFE3   	movff	_width,plusw1
 13520  005FBC  0EFF               	movlw	-1
 13521  005FBE  0060  F07B  FFE3   	movff	_width+1,plusw1
 13522  005FC4  D016               	goto	l8742
 13523  005FC6                     l8740:
 13524  005FC6  0EFF               	movlw	255
 13525  005FC8  6E47               	movwf	btemp+10,c
 13526  005FCA  0EFF               	movlw	255
 13527  005FCC  6E48               	movwf	btemp+11,c
 13528  005FCE  0060  F074  F045   	movff	_width,btemp+8
 13529  005FD4  0060  F078  F046   	movff	_width+1,btemp+9
 13530  005FDA  5047               	movf	btemp+10,w,c
 13531  005FDC  2645               	addwf	btemp+8,f,c
 13532  005FDE  5048               	movf	btemp+11,w,c
 13533  005FE0  2246               	addwfc	btemp+9,f,c
 13534                           
 13535                           ;stkvar	_w @ sp[(-2)+0]
 13536  005FE2  0EFE               	movlw	-2
 13537  005FE4  0060  F117  FFE3   	movff	btemp+8,plusw1
 13538  005FEA  0EFF               	movlw	-1
 13539  005FEC  0060  F11B  FFE3   	movff	btemp+9,plusw1
 13540  005FF2                     l8742:
 13541                           
 13542                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 13543                           ;stkvar	_c @ sp[(-2)+-3]
 13544  005FF2  0EFB               	movlw	-5
 13545  005FF4  006F FF8C  F1CE    	movff	plusw1,_dbuf
 13546                           
 13547                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 13548  005FFA  0101               	movlb	1	; () banked
 13549  005FFC  6BCF               	clrf	(_dbuf+1)& (0+255),b
 13550                           
 13551                           ; BSR set to: 1
 13552                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 13553                           ;stkvar	_w @ sp[(-2)+0]
 13554  005FFE  0EFE               	movlw	-2
 13555  006000  006F FF8F FFE6     	movff	plusw1,postinc1
 13556  006006  006F FF8F FFE6     	movff	plusw1,postinc1
 13557  00600C  0ECE               	movlw	low _dbuf
 13558  00600E  6EE6               	movwf	postinc1,c
 13559  006010  0E01               	movlw	high _dbuf
 13560  006012  6EE6               	movwf	postinc1,c
 13561                           
 13562                           ;stkvar	_fp @ sp[(-6)+-2]
 13563  006014  0EF8               	movlw	-8
 13564  006016  006F FF8F FFE6     	movff	plusw1,postinc1
 13565  00601C  006F FF8F FFE6     	movff	plusw1,postinc1
 13566  006022  ECE1  F029         	call	_pad	;wreg free
 13567                           
 13568                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 13569  006026  0EFB               	movlw	251
 13570  006028  26E1               	addwf	fsr1l,f,c
 13571  00602A  0EFF               	movlw	255
 13572  00602C  22E2               	addwfc	fsr1h,f,c
 13573  00602E  0012               	return		;funcret
 13574  006030                     __end_of_ctoa:
 13575                           	opt callstack 0
 13576                           
 13577 ;; *************** function _pad *****************
 13578 ;; Defined at:
 13579 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 13580 ;; Parameters:    Size  Location     Type
 13581 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13582 ;;		 -> f(5), NULL(0), 
 13583 ;;  buf             2  [STACK] PTR unsigned char 
 13584 ;;		 -> dbuf(32), 
 13585 ;;  p               2  [STACK] int 
 13586 ;; Auto vars:     Size  Location     Type
 13587 ;;  w               2  [STACK] int 
 13588 ;;  i               2  [STACK] int 
 13589 ;; Return value:  Size  Location     Type
 13590 ;;                  2  [STACK] int 
 13591 ;; Registers used:
 13592 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 13593 ;; Tracked objects:
 13594 ;;		On entry : 0/1
 13595 ;;		On exit  : 0/0
 13596 ;;		Unchanged: 0/0
 13597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13602 ;;Total ram usage:        0 bytes
 13603 ;; Hardware stack levels used:    1
 13604 ;; Hardware stack levels required when called:    7
 13605 ;; This function calls:
 13606 ;;		_fputc
 13607 ;;		_fputs
 13608 ;;		_strlen
 13609 ;; This function is called by:
 13610 ;;		_ctoa
 13611 ;;		_dtoa
 13612 ;; This function uses a reentrant model
 13613 ;;
 13614                           
 13615                           	psect	text52
 13616  0053C2                     __ptext52:
 13617                           	opt callstack 0
 13618  0053C2                     _pad:
 13619                           	opt callstack 0
 13620                           
 13621                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13622  0053C2  52E6               	movf	postinc1,f,c
 13623  0053C4  52E6               	movf	postinc1,f,c
 13624  0053C6  52E6               	movf	postinc1,f,c
 13625  0053C8  52E6               	movf	postinc1,f,c
 13626                           
 13627                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 13628                           
 13629                           ;incstack = 0
 13630  0053CA  A021               	btfss	_flags,0,c
 13631  0053CC  D010               	goto	l8718
 13632                           
 13633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 13634                           ;stkvar	_fp @ sp[(-4)+-2]
 13635  0053CE  0EFA               	movlw	-6
 13636  0053D0  006F FF8F FFE6     	movff	plusw1,postinc1
 13637  0053D6  006F FF8F FFE6     	movff	plusw1,postinc1
 13638                           
 13639                           ;stkvar	_buf @ sp[(-6)+-4]
 13640  0053DC  0EF6               	movlw	-10
 13641  0053DE  006F FF8F FFE6     	movff	plusw1,postinc1
 13642  0053E4  006F FF8F FFE6     	movff	plusw1,postinc1
 13643  0053EA  EC3F  F02F         	call	_fputs	;wreg free
 13644  0053EE                     l8718:
 13645                           
 13646                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 13647                           ;stkvar	_p @ sp[(-4)+-6]
 13648  0053EE  0EF7               	movlw	-9
 13649  0053F0  BEE3               	btfsc	plusw1,7,c
 13650  0053F2  D011               	goto	l8722
 13651                           
 13652                           ;stkvar	_p @ sp[(-4)+-6]
 13653                           ;stkvar	_w @ sp[(-4)+0]
 13654  0053F4  0EF6               	movlw	-10
 13655  0053F6  006F FF8C  F03D    	movff	plusw1,btemp
 13656  0053FC  0EFC               	movlw	-4
 13657  0053FE  0060  F0F7  FFE3   	movff	btemp,plusw1
 13658  005404  0EF7               	movlw	-9
 13659  005406  006F FF8C  F03D    	movff	plusw1,btemp
 13660  00540C  0EFD               	movlw	-3
 13661  00540E  0060  F0F7  FFE3   	movff	btemp,plusw1
 13662  005414  D004               	goto	l1889
 13663  005416                     l8722:
 13664                           
 13665                           ;stkvar	_w @ sp[(-4)+0]
 13666  005416  0EFC               	movlw	-4
 13667  005418  6AE3               	clrf	plusw1,c
 13668  00541A  0EFD               	movlw	-3
 13669  00541C  6AE3               	clrf	plusw1,c
 13670  00541E                     l1889:
 13671                           
 13672                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 13673                           ;stkvar	_i @ sp[(-4)+2]
 13674  00541E  0EFE               	movlw	-2
 13675  005420  6AE3               	clrf	plusw1,c
 13676  005422  0EFF               	movlw	-1
 13677  005424  6AE3               	clrf	plusw1,c
 13678                           
 13679                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 13680  005426  D01E               	goto	l8728
 13681  005428                     l8724:
 13682                           
 13683                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 13684                           ;stkvar	_fp @ sp[(-4)+-2]
 13685  005428  0EFA               	movlw	-6
 13686  00542A  006F FF8F FFE6     	movff	plusw1,postinc1
 13687  005430  006F FF8F FFE6     	movff	plusw1,postinc1
 13688  005436  0E20               	movlw	32
 13689  005438  6EE6               	movwf	postinc1,c
 13690  00543A  0E00               	movlw	0
 13691  00543C  6EE6               	movwf	postinc1,c
 13692  00543E  EC6B  F02A         	call	_fputc	;wreg free
 13693                           
 13694                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 13695                           ;stkvar	_i @ sp[(-4)+2]
 13696  005442  0EFE               	movlw	-2
 13697  005444  50E3               	movf	plusw1,w,c
 13698  005446  0F01               	addlw	1
 13699  005448  6E3D               	movwf	btemp,c
 13700  00544A  0EFE               	movlw	-2
 13701  00544C  0060  F0F7  FFE3   	movff	btemp,plusw1
 13702  005452  6A3D               	clrf	btemp,c
 13703  005454  0EFF               	movlw	-1
 13704  005456  50E3               	movf	plusw1,w,c
 13705  005458  203D               	addwfc	btemp,w,c
 13706  00545A  6E3D               	movwf	btemp,c
 13707  00545C  0EFF               	movlw	-1
 13708  00545E  0060  F0F7  FFE3   	movff	btemp,plusw1
 13709  005464                     l8728:
 13710                           
 13711                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 13712                           ;stkvar	_w @ sp[(-4)+0]
 13713                           ;stkvar	_i @ sp[(-4)+2]
 13714  005464  50E1               	movf	fsr1l,w,c
 13715  005466  0FFE               	addlw	-2
 13716  005468  6ED9               	movwf	fsr2l,c
 13717  00546A  50E2               	movf	fsr1h,w,c
 13718  00546C  6EDA               	movwf	fsr2h,c
 13719  00546E  0EFF               	movlw	255
 13720  005470  22DA               	addwfc	fsr2h,f,c
 13721  005472  0EFC               	movlw	-4
 13722  005474  50E3               	movf	plusw1,w,c
 13723  005476  5CDE               	subwf	postinc2,w,c
 13724  005478  50DE               	movf	postinc2,w,c
 13725  00547A  0A80               	xorlw	128
 13726  00547C  6E3D               	movwf	btemp,c
 13727  00547E  0EFD               	movlw	-3
 13728  005480  50E3               	movf	plusw1,w,c
 13729  005482  0A80               	xorlw	128
 13730  005484  583D               	subwfb	btemp,w,c
 13731  005486  A0D8               	btfss	status,0,c
 13732  005488  D7CF               	goto	l8724
 13733                           
 13734                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 13735  00548A  B021               	btfsc	_flags,0,c
 13736  00548C  D010               	goto	l8732
 13737                           
 13738                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 13739                           ;stkvar	_fp @ sp[(-4)+-2]
 13740  00548E  0EFA               	movlw	-6
 13741  005490  006F FF8F FFE6     	movff	plusw1,postinc1
 13742  005496  006F FF8F FFE6     	movff	plusw1,postinc1
 13743                           
 13744                           ;stkvar	_buf @ sp[(-6)+-4]
 13745  00549C  0EF6               	movlw	-10
 13746  00549E  006F FF8F FFE6     	movff	plusw1,postinc1
 13747  0054A4  006F FF8F FFE6     	movff	plusw1,postinc1
 13748  0054AA  EC3F  F02F         	call	_fputs	;wreg free
 13749  0054AE                     l8732:
 13750                           
 13751                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 13752                           ;stkvar	_w @ sp[(-4)+0]
 13753                           ;stkvar	_buf @ sp[(-4)+-4]
 13754  0054AE  0EF8               	movlw	-8
 13755  0054B0  006F FF8F FFE6     	movff	plusw1,postinc1
 13756  0054B6  006F FF8F FFE6     	movff	plusw1,postinc1
 13757  0054BC  ECA2  F02E         	call	_strlen	;wreg free
 13758  0054C0  0EFC               	movlw	-4
 13759  0054C2  50E3               	movf	plusw1,w,c
 13760  0054C4  263D               	addwf	btemp,f,c
 13761  0054C6  0EFD               	movlw	-3
 13762  0054C8  50E3               	movf	plusw1,w,c
 13763  0054CA  223E               	addwfc	btemp+1,f,c
 13764                           
 13765                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 13766  0054CC  0EF6               	movlw	246
 13767  0054CE  26E1               	addwf	fsr1l,f,c
 13768  0054D0  0EFF               	movlw	255
 13769  0054D2  22E2               	addwfc	fsr1h,f,c
 13770  0054D4  0012               	return		;funcret
 13771  0054D6                     __end_of_pad:
 13772                           	opt callstack 0
 13773                           
 13774 ;; *************** function _strlen *****************
 13775 ;; Defined at:
 13776 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 13777 ;; Parameters:    Size  Location     Type
 13778 ;;  s               2  [STACK] PTR const unsigned char 
 13779 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 13780 ;;		 -> STR_3(6), V(100), 
 13781 ;; Auto vars:     Size  Location     Type
 13782 ;;  a               2  [STACK] PTR const unsigned char 
 13783 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 13784 ;;		 -> STR_3(6), V(100), 
 13785 ;; Return value:  Size  Location     Type
 13786 ;;                  2  [STACK] unsigned int 
 13787 ;; Registers used:
 13788 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 13789 ;; Tracked objects:
 13790 ;;		On entry : 0/0
 13791 ;;		On exit  : 0/0
 13792 ;;		Unchanged: 0/0
 13793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13794 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13795 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13797 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13798 ;;Total ram usage:        0 bytes
 13799 ;; Hardware stack levels used:    1
 13800 ;; Hardware stack levels required when called:    3
 13801 ;; This function calls:
 13802 ;;		Nothing
 13803 ;; This function is called by:
 13804 ;;		_eaDogM_WriteString
 13805 ;;		_pad
 13806 ;;		_stoa
 13807 ;; This function uses a reentrant model
 13808 ;;
 13809                           
 13810                           	psect	text53
 13811  005D44                     __ptext53:
 13812                           	opt callstack 0
 13813  005D44                     _strlen:
 13814                           	opt callstack 0
 13815                           
 13816                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13817  005D44  52E6               	movf	postinc1,f,c
 13818  005D46  52E6               	movf	postinc1,f,c
 13819                           
 13820                           ;stkvar	_s @ sp[(-2)+-2]
 13821                           
 13822                           ;incstack = 0
 13823  005D48  0EFC               	movlw	-4
 13824  005D4A  006F FF8C  F047    	movff	plusw1,btemp+10
 13825  005D50  0EFD               	movlw	-3
 13826  005D52  006F FF8C  F048    	movff	plusw1,btemp+11
 13827                           
 13828                           ;stkvar	_a @ sp[(-2)+0]
 13829  005D58  0EFF               	movlw	-1
 13830  005D5A  0060  F123  FFE3   	movff	btemp+11,plusw1
 13831  005D60  0EFE               	movlw	-2
 13832  005D62  0060  F11F  FFE3   	movff	btemp+10,plusw1
 13833  005D68  D011               	goto	l8700
 13834  005D6A                     l8698:
 13835                           
 13836                           ;stkvar	_s @ sp[(-2)+-2]
 13837  005D6A  0EFC               	movlw	-4
 13838  005D6C  50E3               	movf	plusw1,w,c
 13839  005D6E  0F01               	addlw	1
 13840  005D70  6E3D               	movwf	btemp,c
 13841  005D72  0EFC               	movlw	-4
 13842  005D74  0060  F0F7  FFE3   	movff	btemp,plusw1
 13843  005D7A  6A3D               	clrf	btemp,c
 13844  005D7C  0EFD               	movlw	-3
 13845  005D7E  50E3               	movf	plusw1,w,c
 13846  005D80  203D               	addwfc	btemp,w,c
 13847  005D82  6E3D               	movwf	btemp,c
 13848  005D84  0EFD               	movlw	-3
 13849  005D86  0060  F0F7  FFE3   	movff	btemp,plusw1
 13850  005D8C                     l8700:
 13851                           
 13852                           ;stkvar	_s @ sp[(-2)+-2]
 13853  005D8C  0EFC               	movlw	-4
 13854  005D8E  006F FF8F FFF6     	movff	plusw1,tblptrl
 13855  005D94  0EFD               	movlw	-3
 13856  005D96  006F FF8F FFF7     	movff	plusw1,tblptrh
 13857  005D9C  0E00               	movlw	low (__smallconst shr (0+16))
 13858  005D9E  6EF8               	movwf	tblptru,c
 13859  005DA0  0E1F               	movlw	(high __ramtop+-1)
 13860  005DA2  64F7               	cpfsgt	tblptrh,c
 13861  005DA4  D003               	bra	u5287
 13862  005DA6  0008               	tblrd		*
 13863  005DA8  50F5               	movf	tablat,w,c
 13864  005DAA  D007               	bra	u5280
 13865  005DAC                     u5287:
 13866  005DAC  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13867  005DB2  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13868  005DB8  50EF               	movf	indf0,w,c
 13869  005DBA                     u5280:
 13870  005DBA  0900               	iorlw	0
 13871  005DBC  A4D8               	btfss	status,2,c
 13872  005DBE  D7D5               	goto	l8698
 13873                           
 13874                           ;stkvar	_a @ sp[(-2)+0]
 13875                           ;stkvar	_s @ sp[(-2)+-2]
 13876  005DC0  0EFC               	movlw	-4
 13877  005DC2  006F FF8C  F03D    	movff	plusw1,btemp
 13878  005DC8  0EFD               	movlw	-3
 13879  005DCA  006F FF8C  F03E    	movff	plusw1,btemp+1
 13880  005DD0  0EFE               	movlw	-2
 13881  005DD2  50E3               	movf	plusw1,w,c
 13882  005DD4  5E3D               	subwf	btemp,f,c
 13883  005DD6  0EFF               	movlw	-1
 13884  005DD8  50E3               	movf	plusw1,w,c
 13885  005DDA  5A3E               	subwfb	btemp+1,f,c
 13886                           
 13887                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 13888  005DDC  52E5               	movf	postdec1,f,c
 13889  005DDE  52E5               	movf	postdec1,f,c
 13890  005DE0  52E5               	movf	postdec1,f,c
 13891  005DE2  52E5               	movf	postdec1,f,c
 13892  005DE4  0012               	return		;funcret
 13893  005DE6                     __end_of_strlen:
 13894                           	opt callstack 0
 13895                           
 13896 ;; *************** function _fputs *****************
 13897 ;; Defined at:
 13898 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 13899 ;; Parameters:    Size  Location     Type
 13900 ;;  s               2  [STACK] PTR const unsigned char 
 13901 ;;		 -> dbuf(32), 
 13902 ;;  fp              2  [STACK] PTR struct _IO_FILE
 13903 ;;		 -> f(5), NULL(0), 
 13904 ;; Auto vars:     Size  Location     Type
 13905 ;;  i               2  [STACK] int 
 13906 ;;  c               1  [STACK] unsigned char 
 13907 ;; Return value:  Size  Location     Type
 13908 ;;                  2  [STACK] int 
 13909 ;; Registers used:
 13910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 13911 ;; Tracked objects:
 13912 ;;		On entry : 0/1
 13913 ;;		On exit  : 0/0
 13914 ;;		Unchanged: 0/0
 13915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13920 ;;Total ram usage:        0 bytes
 13921 ;; Hardware stack levels used:    1
 13922 ;; Hardware stack levels required when called:    6
 13923 ;; This function calls:
 13924 ;;		_fputc
 13925 ;; This function is called by:
 13926 ;;		_pad
 13927 ;; This function uses a reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text54
 13931  005E7E                     __ptext54:
 13932                           	opt callstack 0
 13933  005E7E                     _fputs:
 13934                           	opt callstack 0
 13935                           
 13936                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13937  005E7E  52E6               	movf	postinc1,f,c
 13938  005E80  52E6               	movf	postinc1,f,c
 13939  005E82  52E6               	movf	postinc1,f,c
 13940                           
 13941                           ;stkvar	_i @ sp[(-3)+0]
 13942                           
 13943                           ;incstack = 0
 13944  005E84  0EFD               	movlw	-3
 13945  005E86  6AE3               	clrf	plusw1,c
 13946  005E88  0EFE               	movlw	-2
 13947  005E8A  6AE3               	clrf	plusw1,c
 13948  005E8C  D01F               	goto	l8712
 13949  005E8E                     l8708:
 13950                           
 13951                           ;stkvar	_fp @ sp[(-3)+-4]
 13952  005E8E  0EF9               	movlw	-7
 13953  005E90  006F FF8F FFE6     	movff	plusw1,postinc1
 13954  005E96  006F FF8F FFE6     	movff	plusw1,postinc1
 13955                           
 13956                           ;stkvar	_c @ sp[(-5)+2]
 13957  005E9C  0EFD               	movlw	-3
 13958  005E9E  50E3               	movf	plusw1,w,c
 13959  005EA0  6EE6               	movwf	postinc1,c
 13960  005EA2  0E00               	movlw	0
 13961  005EA4  6EE6               	movwf	postinc1,c
 13962  005EA6  EC6B  F02A         	call	_fputc	;wreg free
 13963                           
 13964                           ;stkvar	_i @ sp[(-3)+0]
 13965  005EAA  0EFD               	movlw	-3
 13966  005EAC  50E3               	movf	plusw1,w,c
 13967  005EAE  0F01               	addlw	1
 13968  005EB0  6E3D               	movwf	btemp,c
 13969  005EB2  0EFD               	movlw	-3
 13970  005EB4  0060  F0F7  FFE3   	movff	btemp,plusw1
 13971  005EBA  6A3D               	clrf	btemp,c
 13972  005EBC  0EFE               	movlw	-2
 13973  005EBE  50E3               	movf	plusw1,w,c
 13974  005EC0  203D               	addwfc	btemp,w,c
 13975  005EC2  6E3D               	movwf	btemp,c
 13976  005EC4  0EFE               	movlw	-2
 13977  005EC6  0060  F0F7  FFE3   	movff	btemp,plusw1
 13978  005ECC                     l8712:
 13979                           
 13980                           ;stkvar	_i @ sp[(-3)+0]
 13981  005ECC  0EFD               	movlw	-3
 13982  005ECE  006F FF8C  F047    	movff	plusw1,btemp+10
 13983  005ED4  0EFE               	movlw	-2
 13984  005ED6  006F FF8C  F048    	movff	plusw1,btemp+11
 13985                           
 13986                           ;stkvar	_s @ sp[(-3)+-2]
 13987  005EDC  0EFB               	movlw	-5
 13988  005EDE  006F FF8C  F045    	movff	plusw1,btemp+8
 13989  005EE4  0EFC               	movlw	-4
 13990  005EE6  006F FF8C  F046    	movff	plusw1,btemp+9
 13991  005EEC  5047               	movf	btemp+10,w,c
 13992  005EEE  2445               	addwf	btemp+8,w,c
 13993  005EF0  6ED9               	movwf	fsr2l,c
 13994  005EF2  5048               	movf	btemp+11,w,c
 13995  005EF4  2046               	addwfc	btemp+9,w,c
 13996  005EF6  6EDA               	movwf	fsr2h,c
 13997  005EF8  50DF               	movf	indf2,w,c
 13998  005EFA  6E48               	movwf	btemp+11,c
 13999                           
 14000                           ;stkvar	_c @ sp[(-3)+2]
 14001  005EFC  0EFF               	movlw	-1
 14002  005EFE  0060  F123  FFE3   	movff	btemp+11,plusw1
 14003  005F04  0EFF               	movlw	-1
 14004  005F06  50E3               	movf	plusw1,w,c
 14005  005F08  A4D8               	btfss	status,2,c
 14006  005F0A  D7C1               	goto	l8708
 14007                           
 14008                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14009  005F0C  0EF9               	movlw	249
 14010  005F0E  26E1               	addwf	fsr1l,f,c
 14011  005F10  0EFF               	movlw	255
 14012  005F12  22E2               	addwfc	fsr1h,f,c
 14013  005F14  0012               	return		;funcret
 14014  005F16                     __end_of_fputs:
 14015                           	opt callstack 0
 14016                           
 14017 ;; *************** function _fputc *****************
 14018 ;; Defined at:
 14019 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 14020 ;; Parameters:    Size  Location     Type
 14021 ;;  c               2  [STACK] int 
 14022 ;;  fp              2  [STACK] PTR struct _IO_FILE
 14023 ;;		 -> f(5), NULL(0), 
 14024 ;; Auto vars:     Size  Location     Type
 14025 ;;		None
 14026 ;; Return value:  Size  Location     Type
 14027 ;;                  2  [STACK] int 
 14028 ;; Registers used:
 14029 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 14030 ;; Tracked objects:
 14031 ;;		On entry : 0/0
 14032 ;;		On exit  : 0/0
 14033 ;;		Unchanged: 0/0
 14034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14036 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14037 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14038 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14039 ;;Total ram usage:        0 bytes
 14040 ;; Hardware stack levels used:    1
 14041 ;; Hardware stack levels required when called:    5
 14042 ;; This function calls:
 14043 ;;		_putch
 14044 ;; This function is called by:
 14045 ;;		_pad
 14046 ;;		_stoa
 14047 ;;		_vfpfcnvrt
 14048 ;;		_fputs
 14049 ;; This function uses a reentrant model
 14050 ;;
 14051                           
 14052                           	psect	text55
 14053  0054D6                     __ptext55:
 14054                           	opt callstack 0
 14055  0054D6                     _fputc:
 14056                           	opt callstack 21
 14057                           
 14058                           ;stkvar	_fp @ sp[(0)+-4]
 14059                           
 14060                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14061                           ;incstack = 0
 14062  0054D6  0EFC               	movlw	-4
 14063  0054D8  006F FF8C  F03D    	movff	plusw1,btemp
 14064  0054DE  0EFD               	movlw	-3
 14065  0054E0  50E3               	movf	plusw1,w,c
 14066  0054E2  103D               	iorwf	btemp,w,c
 14067  0054E4  B4D8               	btfsc	status,2,c
 14068  0054E6  D009               	goto	u5250
 14069                           
 14070                           ;stkvar	_fp @ sp[(0)+-4]
 14071  0054E8  0EFC               	movlw	-4
 14072  0054EA  006F FF8C  F03D    	movff	plusw1,btemp
 14073  0054F0  0EFD               	movlw	-3
 14074  0054F2  50E3               	movf	plusw1,w,c
 14075  0054F4  103D               	iorwf	btemp,w,c
 14076  0054F6  A4D8               	btfss	status,2,c
 14077  0054F8  D006               	goto	l8688
 14078  0054FA                     u5250:
 14079                           
 14080                           ;stkvar	_c @ sp[(0)+-2]
 14081  0054FA  0EFE               	movlw	-2
 14082  0054FC  50E3               	movf	plusw1,w,c
 14083  0054FE  6EE6               	movwf	postinc1,c
 14084  005500  ECEF  F036         	call	_putch	;wreg free
 14085  005504  D069               	goto	l2727
 14086  005506                     l8688:
 14087                           
 14088                           ;stkvar	_fp @ sp[(0)+-4]
 14089  005506  0EFC               	movlw	-4
 14090  005508  006F FF8C  F047    	movff	plusw1,btemp+10
 14091  00550E  0EFD               	movlw	-3
 14092  005510  006F FF8C  F048    	movff	plusw1,btemp+11
 14093  005516  0E03               	movlw	3
 14094  005518  2447               	addwf	btemp+10,w,c
 14095  00551A  6ED9               	movwf	fsr2l,c
 14096  00551C  0E00               	movlw	0
 14097  00551E  2048               	addwfc	btemp+11,w,c
 14098  005520  6EDA               	movwf	fsr2h,c
 14099  005522  50DE               	movf	postinc2,w,c
 14100  005524  10DE               	iorwf	postinc2,w,c
 14101  005526  B4D8               	btfsc	status,2,c
 14102  005528  D026               	goto	u5270
 14103                           
 14104                           ;stkvar	_fp @ sp[(0)+-4]
 14105  00552A  0EFC               	movlw	-4
 14106  00552C  006F FF8C  F047    	movff	plusw1,btemp+10
 14107  005532  0EFD               	movlw	-3
 14108  005534  006F FF8C  F048    	movff	plusw1,btemp+11
 14109  00553A  0E03               	movlw	3
 14110  00553C  2447               	addwf	btemp+10,w,c
 14111  00553E  6ED9               	movwf	fsr2l,c
 14112  005540  0E00               	movlw	0
 14113  005542  2048               	addwfc	btemp+11,w,c
 14114  005544  6EDA               	movwf	fsr2h,c
 14115                           
 14116                           ;stkvar	_fp @ sp[(0)+-4]
 14117  005546  0EFC               	movlw	-4
 14118  005548  006F FF8C  F047    	movff	plusw1,btemp+10
 14119  00554E  0EFD               	movlw	-3
 14120  005550  006F FF8C  F048    	movff	plusw1,btemp+11
 14121  005556  0E01               	movlw	1
 14122  005558  2447               	addwf	btemp+10,w,c
 14123  00555A  6EE9               	movwf	fsr0l,c
 14124  00555C  0E00               	movlw	0
 14125  00555E  2048               	addwfc	btemp+11,w,c
 14126  005560  6EEA               	movwf	fsr0h,c
 14127  005562  50DE               	movf	postinc2,w,c
 14128  005564  5CEE               	subwf	postinc0,w,c
 14129  005566  50EE               	movf	postinc0,w,c
 14130  005568  0A80               	xorlw	128
 14131  00556A  6E3D               	movwf	btemp,c
 14132  00556C  50DE               	movf	postinc2,w,c
 14133  00556E  0A80               	xorlw	128
 14134  005570  583D               	subwfb	btemp,w,c
 14135  005572  B0D8               	btfsc	status,0,c
 14136  005574  D031               	goto	l2727
 14137  005576                     u5270:
 14138                           
 14139                           ;stkvar	_c @ sp[(0)+-2]
 14140                           ;stkvar	_fp @ sp[(0)+-4]
 14141  005576  0EFC               	movlw	-4
 14142  005578  006F FF8C  F047    	movff	plusw1,btemp+10
 14143  00557E  0EFD               	movlw	-3
 14144  005580  006F FF8C  F048    	movff	plusw1,btemp+11
 14145  005586  0E01               	movlw	1
 14146  005588  2447               	addwf	btemp+10,w,c
 14147  00558A  6ED9               	movwf	fsr2l,c
 14148  00558C  0E00               	movlw	0
 14149  00558E  2048               	addwfc	btemp+11,w,c
 14150  005590  6EDA               	movwf	fsr2h,c
 14151  005592  50DF               	movf	indf2,w,c
 14152  005594  6E48               	movwf	btemp+11,c
 14153                           
 14154                           ;stkvar	_fp @ sp[(0)+-4]
 14155  005596  0EFC               	movlw	-4
 14156  005598  006F FF8F FFD9     	movff	plusw1,fsr2l
 14157  00559E  0EFD               	movlw	-3
 14158  0055A0  006F FF8F FFDA     	movff	plusw1,fsr2h
 14159  0055A6  50DF               	movf	indf2,w,c
 14160  0055A8  2448               	addwf	btemp+11,w,c
 14161  0055AA  6ED9               	movwf	fsr2l,c
 14162  0055AC  6ADA               	clrf	fsr2h,c
 14163  0055AE  0EFE               	movlw	-2
 14164  0055B0  006F FF8F FFDF     	movff	plusw1,indf2
 14165                           
 14166                           ;stkvar	_fp @ sp[(0)+-4]
 14167  0055B6  0EFC               	movlw	-4
 14168  0055B8  006F FF8C  F047    	movff	plusw1,btemp+10
 14169  0055BE  0EFD               	movlw	-3
 14170  0055C0  006F FF8C  F048    	movff	plusw1,btemp+11
 14171  0055C6  0E01               	movlw	1
 14172  0055C8  2447               	addwf	btemp+10,w,c
 14173  0055CA  6ED9               	movwf	fsr2l,c
 14174  0055CC  0E00               	movlw	0
 14175  0055CE  2048               	addwfc	btemp+11,w,c
 14176  0055D0  6EDA               	movwf	fsr2h,c
 14177  0055D2  2ADE               	incf	postinc2,f,c
 14178  0055D4  0E00               	movlw	0
 14179  0055D6  22DD               	addwfc	postdec2,f,c
 14180  0055D8                     l2727:
 14181                           
 14182                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 14183  0055D8  52E5               	movf	postdec1,f,c
 14184  0055DA  52E5               	movf	postdec1,f,c
 14185  0055DC  52E5               	movf	postdec1,f,c
 14186  0055DE  52E5               	movf	postdec1,f,c
 14187  0055E0  0012               	return		;funcret
 14188  0055E2                     __end_of_fputc:
 14189                           	opt callstack 0
 14190                           
 14191 ;; *************** function _putch *****************
 14192 ;; Defined at:
 14193 ;;		line 138 in file "eadog.c"
 14194 ;; Parameters:    Size  Location     Type
 14195 ;;  c               1  [STACK] unsigned char 
 14196 ;; Auto vars:     Size  Location     Type
 14197 ;;		None
 14198 ;; Return value:  Size  Location     Type
 14199 ;;                  1  [STACK] void 
 14200 ;; Registers used:
 14201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14202 ;; Tracked objects:
 14203 ;;		On entry : 0/0
 14204 ;;		On exit  : 0/0
 14205 ;;		Unchanged: 0/0
 14206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14211 ;;Total ram usage:        0 bytes
 14212 ;; Hardware stack levels used:    1
 14213 ;; Hardware stack levels required when called:    4
 14214 ;; This function calls:
 14215 ;;		_ringBufS_put_dma
 14216 ;; This function is called by:
 14217 ;;		_fputc
 14218 ;; This function uses a reentrant model
 14219 ;;
 14220                           
 14221                           	psect	text56
 14222  006DDE                     __ptext56:
 14223                           	opt callstack 0
 14224  006DDE                     _putch:
 14225                           	opt callstack 21
 14226                           
 14227                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 14228                           ;stkvar	_c @ sp[(0)+-1]
 14229                           
 14230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14231                           ;incstack = 0
 14232  006DDE  0EFF               	movlw	-1
 14233  006DE0  50E3               	movf	plusw1,w,c
 14234  006DE2  6EE6               	movwf	postinc1,c
 14235  006DE4  0060  F35F  FFE6   	movff	_spi_link+6,postinc1
 14236  006DEA  0060  F363  FFE6   	movff	_spi_link+7,postinc1
 14237  006DF0  ECFB  F02D         	call	_ringBufS_put_dma	;wreg free
 14238                           
 14239                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 14240  006DF4  52E5               	movf	postdec1,f,c
 14241  006DF6  0012               	return		;funcret
 14242  006DF8                     __end_of_putch:
 14243                           	opt callstack 0
 14244                           
 14245 ;; *************** function _ringBufS_put_dma *****************
 14246 ;; Defined at:
 14247 ;;		line 67 in file "ringbufs.c"
 14248 ;; Parameters:    Size  Location     Type
 14249 ;;  _this           2  [STACK] PTR struct ringBufS_t
 14250 ;;		 -> ring_buf1(67), 
 14251 ;;  c               1  [STACK] const unsigned char 
 14252 ;; Auto vars:     Size  Location     Type
 14253 ;;		None
 14254 ;; Return value:  Size  Location     Type
 14255 ;;                  1  [STACK] void 
 14256 ;; Registers used:
 14257 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 14258 ;; Tracked objects:
 14259 ;;		On entry : 0/0
 14260 ;;		On exit  : 0/0
 14261 ;;		Unchanged: 0/0
 14262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14263 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14264 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14265 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14266 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14267 ;;Total ram usage:        0 bytes
 14268 ;; Hardware stack levels used:    1
 14269 ;; Hardware stack levels required when called:    3
 14270 ;; This function calls:
 14271 ;;		Nothing
 14272 ;; This function is called by:
 14273 ;;		_putch
 14274 ;; This function uses a reentrant model
 14275 ;;
 14276                           
 14277                           	psect	text57
 14278  005BF6                     __ptext57:
 14279                           	opt callstack 0
 14280  005BF6                     _ringBufS_put_dma:
 14281                           	opt callstack 21
 14282                           
 14283                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 14284                           ;stkvar	__this @ sp[(0)+-2]
 14285                           
 14286                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14287                           ;incstack = 0
 14288  005BF6  0EFE               	movlw	-2
 14289  005BF8  006F FF8C  F047    	movff	plusw1,btemp+10
 14290  005BFE  0EFF               	movlw	-1
 14291  005C00  006F FF8C  F048    	movff	plusw1,btemp+11
 14292  005C06  0E42               	movlw	66
 14293  005C08  2447               	addwf	btemp+10,w,c
 14294  005C0A  6ED9               	movwf	fsr2l,c
 14295  005C0C  0E00               	movlw	0
 14296  005C0E  2048               	addwfc	btemp+11,w,c
 14297  005C10  6EDA               	movwf	fsr2h,c
 14298  005C12  0E40               	movlw	64
 14299  005C14  60DF               	cpfslt	indf2,c
 14300  005C16  D040               	goto	l1505
 14301                           
 14302                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 14303                           ;stkvar	_c @ sp[(0)+-3]
 14304                           ;stkvar	__this @ sp[(0)+-2]
 14305  005C18  0EFE               	movlw	-2
 14306  005C1A  006F FF8C  F047    	movff	plusw1,btemp+10
 14307  005C20  0EFF               	movlw	-1
 14308  005C22  006F FF8C  F048    	movff	plusw1,btemp+11
 14309  005C28  0E40               	movlw	64
 14310  005C2A  2447               	addwf	btemp+10,w,c
 14311  005C2C  6ED9               	movwf	fsr2l,c
 14312  005C2E  0E00               	movlw	0
 14313  005C30  2048               	addwfc	btemp+11,w,c
 14314  005C32  6EDA               	movwf	fsr2h,c
 14315  005C34  50DF               	movf	indf2,w,c
 14316  005C36  6E48               	movwf	btemp+11,c
 14317                           
 14318                           ;stkvar	__this @ sp[(0)+-2]
 14319  005C38  0EFE               	movlw	-2
 14320  005C3A  006F FF8C  F045    	movff	plusw1,btemp+8
 14321  005C40  0EFF               	movlw	-1
 14322  005C42  006F FF8C  F046    	movff	plusw1,btemp+9
 14323  005C48  5048               	movf	btemp+11,w,c
 14324  005C4A  2445               	addwf	btemp+8,w,c
 14325  005C4C  6ED9               	movwf	fsr2l,c
 14326  005C4E  0E00               	movlw	0
 14327  005C50  2046               	addwfc	btemp+9,w,c
 14328  005C52  6EDA               	movwf	fsr2h,c
 14329  005C54  0EFD               	movlw	-3
 14330  005C56  006F FF8F FFDF     	movff	plusw1,indf2
 14331                           
 14332                           ;ringbufs.c: 71:   ++_this->head;
 14333                           ;stkvar	__this @ sp[(0)+-2]
 14334  005C5C  0EFE               	movlw	-2
 14335  005C5E  006F FF8C  F047    	movff	plusw1,btemp+10
 14336  005C64  0EFF               	movlw	-1
 14337  005C66  006F FF8C  F048    	movff	plusw1,btemp+11
 14338  005C6C  0E40               	movlw	64
 14339  005C6E  2447               	addwf	btemp+10,w,c
 14340  005C70  6ED9               	movwf	fsr2l,c
 14341  005C72  0E00               	movlw	0
 14342  005C74  2048               	addwfc	btemp+11,w,c
 14343  005C76  6EDA               	movwf	fsr2h,c
 14344  005C78  2ADF               	incf	indf2,f,c
 14345                           
 14346                           ;ringbufs.c: 72:   ++_this->count;
 14347                           ;stkvar	__this @ sp[(0)+-2]
 14348  005C7A  0EFE               	movlw	-2
 14349  005C7C  006F FF8C  F047    	movff	plusw1,btemp+10
 14350  005C82  0EFF               	movlw	-1
 14351  005C84  006F FF8C  F048    	movff	plusw1,btemp+11
 14352  005C8A  0E42               	movlw	66
 14353  005C8C  2447               	addwf	btemp+10,w,c
 14354  005C8E  6ED9               	movwf	fsr2l,c
 14355  005C90  0E00               	movlw	0
 14356  005C92  2048               	addwfc	btemp+11,w,c
 14357  005C94  6EDA               	movwf	fsr2h,c
 14358  005C96  2ADF               	incf	indf2,f,c
 14359  005C98                     l1505:
 14360                           
 14361                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 14362  005C98  52E5               	movf	postdec1,f,c
 14363  005C9A  52E5               	movf	postdec1,f,c
 14364  005C9C  52E5               	movf	postdec1,f,c
 14365  005C9E  0012               	return		;funcret
 14366  005CA0                     __end_of_ringBufS_put_dma:
 14367                           	opt callstack 0
 14368                           
 14369 ;; *************** function _atoi *****************
 14370 ;; Defined at:
 14371 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/atoi.c"
 14372 ;; Parameters:    Size  Location     Type
 14373 ;;  s               1  [STACK] PTR const unsigned char 
 14374 ;;		 -> STR_19(3), STR_18(3), STR_17(3), STR_16(26), 
 14375 ;;		 -> STR_15(26), STR_14(6), STR_13(19), STR_12(26), 
 14376 ;;		 -> STR_11(18), STR_10(21), STR_9(18), STR_8(6), 
 14377 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
 14378 ;;		 -> STR_2(12), STR_1(17), 
 14379 ;; Auto vars:     Size  Location     Type
 14380 ;;  n               2  [STACK] int 
 14381 ;;  neg             2  [STACK] int 
 14382 ;; Return value:  Size  Location     Type
 14383 ;;                  2  [STACK] int 
 14384 ;; Registers used:
 14385 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 14386 ;; Tracked objects:
 14387 ;;		On entry : 0/0
 14388 ;;		On exit  : 0/0
 14389 ;;		Unchanged: 0/0
 14390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14392 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14394 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14395 ;;Total ram usage:        0 bytes
 14396 ;; Hardware stack levels used:    1
 14397 ;; Hardware stack levels required when called:    4
 14398 ;; This function calls:
 14399 ;;		_isdigit
 14400 ;;		_isspace
 14401 ;; This function is called by:
 14402 ;;		_vfpfcnvrt
 14403 ;; This function uses a reentrant model
 14404 ;;
 14405                           
 14406                           	psect	text58
 14407  004C70                     __ptext58:
 14408                           	opt callstack 0
 14409  004C70                     _atoi:
 14410                           	opt callstack 0
 14411                           
 14412                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14413  004C70  0E09               	movlw	9
 14414  004C72  26E1               	addwf	fsr1l,f,c
 14415  004C74  0E00               	movlw	0
 14416  004C76  22E2               	addwfc	fsr1h,f,c
 14417                           
 14418                           ;stkvar	_n @ sp[(-9)+5]
 14419                           
 14420                           ;incstack = 0
 14421  004C78  0EFC               	movlw	-4
 14422  004C7A  6AE3               	clrf	plusw1,c
 14423  004C7C  0EFD               	movlw	-3
 14424  004C7E  6AE3               	clrf	plusw1,c
 14425                           
 14426                           ;stkvar	_neg @ sp[(-9)+7]
 14427  004C80  0EFE               	movlw	-2
 14428  004C82  6AE3               	clrf	plusw1,c
 14429  004C84  0EFF               	movlw	-1
 14430  004C86  6AE3               	clrf	plusw1,c
 14431  004C88  D002               	goto	l2667
 14432  004C8A                     l5950:
 14433                           
 14434                           ;stkvar	_s @ sp[(-9)+-1]
 14435  004C8A  0EF6               	movlw	-10
 14436  004C8C  2AE3               	incf	plusw1,f,c
 14437  004C8E                     l2667:
 14438                           
 14439                           ;stkvar	_atoi$4543 @ sp[(-9)+4]
 14440  004C8E  0EFB               	movlw	-5
 14441  004C90  6AE3               	clrf	plusw1,c
 14442  004C92  2AE3               	incf	plusw1,f,c
 14443                           
 14444                           ;stkvar	_s @ sp[(-9)+-1]
 14445  004C94  50E1               	movf	fsr1l,w,c
 14446  004C96  0FF6               	addlw	-10
 14447  004C98  6ED9               	movwf	fsr2l,c
 14448  004C9A  50E2               	movf	fsr1h,w,c
 14449  004C9C  6EDA               	movwf	fsr2h,c
 14450  004C9E  0EFF               	movlw	255
 14451  004CA0  22DA               	addwfc	fsr2h,f,c
 14452  004CA2  006F FF7F FFF6     	movff	indf2,tblptrl
 14453  004CA8                     	if	1	;There is more than 1 active tblptr byte
 14454  004CA8  0E20               	movlw	high __smallconst
 14455  004CAA  6EF7               	movwf	tblptrh,c
 14456  004CAC                     	endif
 14457  004CAC                     	if	0	;tblptru may be non-zero
 14458  004CAC                     	endif
 14459  004CAC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14460  004CAC  0E00               	movlw	low (__smallconst shr (0+16))
 14461  004CAE  6EF8               	movwf	tblptru,c
 14462  004CB0                     	endif
 14463  004CB0  0008               	tblrd		*
 14464  004CB2  50F5               	movf	tablat,w,c
 14465  004CB4  0A20               	xorlw	32
 14466  004CB6  B4D8               	btfsc	status,2,c
 14467  004CB8  D022               	goto	l5958
 14468  004CBA  0EF7               	movlw	247
 14469  004CBC  6E47               	movwf	btemp+10,c
 14470  004CBE  0EFF               	movlw	255
 14471  004CC0  6E48               	movwf	btemp+11,c
 14472                           
 14473                           ;stkvar	_s @ sp[(-9)+-1]
 14474  004CC2  50E1               	movf	fsr1l,w,c
 14475  004CC4  0FF6               	addlw	-10
 14476  004CC6  6ED9               	movwf	fsr2l,c
 14477  004CC8  50E2               	movf	fsr1h,w,c
 14478  004CCA  6EDA               	movwf	fsr2h,c
 14479  004CCC  0EFF               	movlw	255
 14480  004CCE  22DA               	addwfc	fsr2h,f,c
 14481  004CD0  006F FF7F FFF6     	movff	indf2,tblptrl
 14482  004CD6                     	if	1	;There is more than 1 active tblptr byte
 14483  004CD6  0E20               	movlw	high __smallconst
 14484  004CD8  6EF7               	movwf	tblptrh,c
 14485  004CDA                     	endif
 14486  004CDA                     	if	0	;tblptru may be non-zero
 14487  004CDA                     	endif
 14488  004CDA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14489  004CDA  0E00               	movlw	low (__smallconst shr (0+16))
 14490  004CDC  6EF8               	movwf	tblptru,c
 14491  004CDE                     	endif
 14492  004CDE  0008               	tblrd		*
 14493  004CE0  50F5               	movf	tablat,w,c
 14494  004CE2  6E45               	movwf	btemp+8,c
 14495  004CE4  6A46               	clrf	btemp+9,c
 14496  004CE6  5047               	movf	btemp+10,w,c
 14497  004CE8  2645               	addwf	btemp+8,f,c
 14498  004CEA  5048               	movf	btemp+11,w,c
 14499  004CEC  2246               	addwfc	btemp+9,f,c
 14500  004CEE  5046               	movf	btemp+9,w,c
 14501  004CF0  E104               	bnz	u3340
 14502  004CF2  0E05               	movlw	5
 14503  004CF4  5C45               	subwf	btemp+8,w,c
 14504  004CF6  A0D8               	btfss	status,0,c
 14505  004CF8  D002               	goto	l5958
 14506  004CFA                     u3340:
 14507                           
 14508                           ;stkvar	_atoi$4543 @ sp[(-9)+4]
 14509  004CFA  0EFB               	movlw	-5
 14510  004CFC  6AE3               	clrf	plusw1,c
 14511  004CFE                     l5958:
 14512                           
 14513                           ;stkvar	_atoi$4543 @ sp[(-9)+4]
 14514  004CFE  0EFB               	movlw	-5
 14515  004D00  50E3               	movf	plusw1,w,c
 14516  004D02  6E47               	movwf	btemp+10,c
 14517  004D04  6A48               	clrf	btemp+11,c
 14518                           
 14519                           ;stkvar	_atoi$4542 @ sp[(-9)+2]
 14520  004D06  0EF9               	movlw	-7
 14521  004D08  0060  F11F  FFE3   	movff	btemp+10,plusw1
 14522  004D0E  0EFA               	movlw	-6
 14523  004D10  0060  F123  FFE3   	movff	btemp+11,plusw1
 14524                           
 14525                           ;stkvar	_atoi$4542 @ sp[(-9)+2]
 14526  004D16  0EF9               	movlw	-7
 14527  004D18  006F FF8C  F03D    	movff	plusw1,btemp
 14528  004D1E  0EFA               	movlw	-6
 14529  004D20  50E3               	movf	plusw1,w,c
 14530  004D22  103D               	iorwf	btemp,w,c
 14531  004D24  B4D8               	btfsc	status,2,c
 14532  004D26  D010               	goto	l5968
 14533  004D28  D7B0               	goto	l5950
 14534  004D2A                     l5964:
 14535  004D2A  0E01               	movlw	1
 14536  004D2C  6E47               	movwf	btemp+10,c
 14537  004D2E  0E00               	movlw	0
 14538  004D30  6E48               	movwf	btemp+11,c
 14539                           
 14540                           ;stkvar	_neg @ sp[(-9)+7]
 14541  004D32  0EFE               	movlw	-2
 14542  004D34  0060  F11F  FFE3   	movff	btemp+10,plusw1
 14543  004D3A  0EFF               	movlw	-1
 14544  004D3C  0060  F123  FFE3   	movff	btemp+11,plusw1
 14545  004D42                     l5966:
 14546                           
 14547                           ;stkvar	_s @ sp[(-9)+-1]
 14548  004D42  0EF6               	movlw	-10
 14549  004D44  2AE3               	incf	plusw1,f,c
 14550  004D46  D051               	goto	l5974
 14551  004D48                     l5968:
 14552                           
 14553                           ;stkvar	_s @ sp[(-9)+-1]
 14554  004D48  50E1               	movf	fsr1l,w,c
 14555  004D4A  0FF6               	addlw	-10
 14556  004D4C  6ED9               	movwf	fsr2l,c
 14557  004D4E  50E2               	movf	fsr1h,w,c
 14558  004D50  6EDA               	movwf	fsr2h,c
 14559  004D52  0EFF               	movlw	255
 14560  004D54  22DA               	addwfc	fsr2h,f,c
 14561  004D56  006F FF7F FFF6     	movff	indf2,tblptrl
 14562  004D5C                     	if	1	;There is more than 1 active tblptr byte
 14563  004D5C  0E20               	movlw	high __smallconst
 14564  004D5E  6EF7               	movwf	tblptrh,c
 14565  004D60                     	endif
 14566  004D60                     	if	0	;tblptru may be non-zero
 14567  004D60                     	endif
 14568  004D60                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14569  004D60  0E00               	movlw	low (__smallconst shr (0+16))
 14570  004D62  6EF8               	movwf	tblptru,c
 14571  004D64                     	endif
 14572  004D64  0008               	tblrd		*
 14573  004D66  50F5               	movf	tablat,w,c
 14574  004D68  6E47               	movwf	btemp+10,c
 14575  004D6A  6A48               	clrf	btemp+11,c
 14576                           
 14577                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14578                           ; Switch size 1, requested type "simple"
 14579                           ; Number of cases is 1, Range of values is 0 to 0
 14580                           ; switch strategies available:
 14581                           ; Name         Instructions Cycles
 14582                           ; simple_byte            4     3 (average)
 14583                           ;	Chosen strategy is simple_byte
 14584  004D6C  5048               	movf	btemp+11,w,c
 14585  004D6E  0A00               	xorlw	0	; case 0
 14586  004D70  A4D8               	btfss	status,2,c
 14587  004D72  D03B               	goto	l5974
 14588                           
 14589                           ; Switch size 1, requested type "simple"
 14590                           ; Number of cases is 2, Range of values is 43 to 45
 14591                           ; switch strategies available:
 14592                           ; Name         Instructions Cycles
 14593                           ; simple_byte            7     4 (average)
 14594                           ;	Chosen strategy is simple_byte
 14595  004D74  5047               	movf	btemp+10,w,c
 14596  004D76  0A2B               	xorlw	43	; case 43
 14597  004D78  B4D8               	btfsc	status,2,c
 14598  004D7A  D7E3               	goto	l5966
 14599  004D7C  0A06               	xorlw	6	; case 45
 14600  004D7E  B4D8               	btfsc	status,2,c
 14601  004D80  D7D4               	goto	l5964
 14602  004D82  D033               	goto	l5974
 14603  004D84                     l5970:
 14604                           
 14605                           ;stkvar	_n @ sp[(-9)+5]
 14606  004D84  0EFC               	movlw	-4
 14607  004D86  006F FF8C  F047    	movff	plusw1,btemp+10
 14608  004D8C  0EFD               	movlw	-3
 14609  004D8E  006F FF8C  F048    	movff	plusw1,btemp+11
 14610  004D94  0E0A               	movlw	10
 14611  004D96  0247               	mulwf	btemp+10,c
 14612  004D98  006F FFCC  F045    	movff	prodl,btemp+8
 14613  004D9E  006F FFD0  F046    	movff	prodh,btemp+9
 14614  004DA4  0248               	mulwf	btemp+11,c
 14615  004DA6  50F3               	movf	prodl,w,c
 14616  004DA8  2646               	addwf	btemp+9,f,c
 14617                           
 14618                           ;stkvar	_s @ sp[(-9)+-1]
 14619  004DAA  50E1               	movf	fsr1l,w,c
 14620  004DAC  0FF6               	addlw	-10
 14621  004DAE  6ED9               	movwf	fsr2l,c
 14622  004DB0  50E2               	movf	fsr1h,w,c
 14623  004DB2  6EDA               	movwf	fsr2h,c
 14624  004DB4  0EFF               	movlw	255
 14625  004DB6  22DA               	addwfc	fsr2h,f,c
 14626  004DB8  006F FF7F FFF6     	movff	indf2,tblptrl
 14627  004DBE                     	if	1	;There is more than 1 active tblptr byte
 14628  004DBE  0E20               	movlw	high __smallconst
 14629  004DC0  6EF7               	movwf	tblptrh,c
 14630  004DC2                     	endif
 14631  004DC2                     	if	0	;tblptru may be non-zero
 14632  004DC2                     	endif
 14633  004DC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14634  004DC2  0E00               	movlw	low (__smallconst shr (0+16))
 14635  004DC4  6EF8               	movwf	tblptru,c
 14636  004DC6                     	endif
 14637  004DC6  0008               	tblrd		*
 14638  004DC8  50F5               	movf	tablat,w,c
 14639  004DCA  5E45               	subwf	btemp+8,f,c
 14640  004DCC  0E00               	movlw	0
 14641  004DCE  5A46               	subwfb	btemp+9,f,c
 14642  004DD0  0E30               	movlw	48
 14643  004DD2  2645               	addwf	btemp+8,f,c
 14644  004DD4  0E00               	movlw	0
 14645  004DD6  2246               	addwfc	btemp+9,f,c
 14646                           
 14647                           ;stkvar	_n @ sp[(-9)+5]
 14648  004DD8  0EFC               	movlw	-4
 14649  004DDA  0060  F117  FFE3   	movff	btemp+8,plusw1
 14650  004DE0  0EFD               	movlw	-3
 14651  004DE2  0060  F11B  FFE3   	movff	btemp+9,plusw1
 14652  004DE8  D7AC               	goto	l5966
 14653  004DEA                     l5974:
 14654  004DEA  0ED0               	movlw	208
 14655  004DEC  6E47               	movwf	btemp+10,c
 14656  004DEE  0EFF               	movlw	255
 14657  004DF0  6E48               	movwf	btemp+11,c
 14658                           
 14659                           ;stkvar	_s @ sp[(-9)+-1]
 14660  004DF2  50E1               	movf	fsr1l,w,c
 14661  004DF4  0FF6               	addlw	-10
 14662  004DF6  6ED9               	movwf	fsr2l,c
 14663  004DF8  50E2               	movf	fsr1h,w,c
 14664  004DFA  6EDA               	movwf	fsr2h,c
 14665  004DFC  0EFF               	movlw	255
 14666  004DFE  22DA               	addwfc	fsr2h,f,c
 14667  004E00  006F FF7F FFF6     	movff	indf2,tblptrl
 14668  004E06                     	if	1	;There is more than 1 active tblptr byte
 14669  004E06  0E20               	movlw	high __smallconst
 14670  004E08  6EF7               	movwf	tblptrh,c
 14671  004E0A                     	endif
 14672  004E0A                     	if	0	;tblptru may be non-zero
 14673  004E0A                     	endif
 14674  004E0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14675  004E0A  0E00               	movlw	low (__smallconst shr (0+16))
 14676  004E0C  6EF8               	movwf	tblptru,c
 14677  004E0E                     	endif
 14678  004E0E  0008               	tblrd		*
 14679  004E10  50F5               	movf	tablat,w,c
 14680  004E12  6E45               	movwf	btemp+8,c
 14681  004E14  6A46               	clrf	btemp+9,c
 14682  004E16  5047               	movf	btemp+10,w,c
 14683  004E18  2645               	addwf	btemp+8,f,c
 14684  004E1A  5048               	movf	btemp+11,w,c
 14685  004E1C  2246               	addwfc	btemp+9,f,c
 14686  004E1E  5046               	movf	btemp+9,w,c
 14687  004E20  E106               	bnz	u3360
 14688  004E22  0E0A               	movlw	10
 14689  004E24  5C45               	subwf	btemp+8,w,c
 14690  004E26  B0D8               	btfsc	status,0,c
 14691  004E28  D002               	goto	u3360
 14692  004E2A  0E01               	movlw	1
 14693  004E2C  D001               	goto	u3370
 14694  004E2E                     u3360:
 14695  004E2E  0E00               	movlw	0
 14696  004E30                     u3370:
 14697  004E30  6E47               	movwf	btemp+10,c
 14698  004E32  6A48               	clrf	btemp+11,c
 14699                           
 14700                           ;stkvar	_atoi$4544 @ sp[(-9)+0]
 14701  004E34  0EF7               	movlw	-9
 14702  004E36  0060  F11F  FFE3   	movff	btemp+10,plusw1
 14703  004E3C  0EF8               	movlw	-8
 14704  004E3E  0060  F123  FFE3   	movff	btemp+11,plusw1
 14705                           
 14706                           ;stkvar	_atoi$4544 @ sp[(-9)+0]
 14707  004E44  0EF7               	movlw	-9
 14708  004E46  006F FF8C  F03D    	movff	plusw1,btemp
 14709  004E4C  0EF8               	movlw	-8
 14710  004E4E  50E3               	movf	plusw1,w,c
 14711  004E50  103D               	iorwf	btemp,w,c
 14712  004E52  A4D8               	btfss	status,2,c
 14713  004E54  D797               	goto	l5970
 14714                           
 14715                           ;stkvar	_neg @ sp[(-9)+7]
 14716  004E56  0EFE               	movlw	-2
 14717  004E58  006F FF8C  F03D    	movff	plusw1,btemp
 14718  004E5E  0EFF               	movlw	-1
 14719  004E60  50E3               	movf	plusw1,w,c
 14720  004E62  103D               	iorwf	btemp,w,c
 14721  004E64  A4D8               	btfss	status,2,c
 14722  004E66  D00E               	goto	l5984
 14723                           
 14724                           ;stkvar	_n @ sp[(-9)+5]
 14725  004E68  0EFC               	movlw	-4
 14726  004E6A  006F FF8C  F03D    	movff	plusw1,btemp
 14727  004E70  1E3D               	comf	btemp,f,c
 14728  004E72  0EFD               	movlw	-3
 14729  004E74  006F FF8C  F03E    	movff	plusw1,btemp+1
 14730  004E7A  1E3E               	comf	btemp+1,f,c
 14731  004E7C  2A3D               	incf	btemp,f,c
 14732  004E7E  B4D8               	btfsc	status,2,c
 14733  004E80  2A3E               	incf	btemp+1,f,c
 14734  004E82  D008               	goto	l2691
 14735  004E84                     l5984:
 14736                           
 14737                           ;stkvar	_n @ sp[(-9)+5]
 14738  004E84  0EFC               	movlw	-4
 14739  004E86  006F FF8C  F03D    	movff	plusw1,btemp
 14740  004E8C  0EFD               	movlw	-3
 14741  004E8E  006F FF8C  F03E    	movff	plusw1,btemp+1
 14742  004E94                     l2691:
 14743                           
 14744                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize 
      +                          = 1, vargsize = 0
 14745  004E94  0EF6               	movlw	246
 14746  004E96  26E1               	addwf	fsr1l,f,c
 14747  004E98  0EFF               	movlw	255
 14748  004E9A  22E2               	addwfc	fsr1h,f,c
 14749  004E9C  0012               	return		;funcret
 14750  004E9E                     __end_of_atoi:
 14751                           	opt callstack 0
 14752                           
 14753 ;; *************** function _isspace *****************
 14754 ;; Defined at:
 14755 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isspace.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;  c               2  [STACK] int 
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;		None
 14760 ;; Return value:  Size  Location     Type
 14761 ;;                  2  [STACK] int 
 14762 ;; Registers used:
 14763 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14764 ;; Tracked objects:
 14765 ;;		On entry : 0/0
 14766 ;;		On exit  : 0/0
 14767 ;;		Unchanged: 0/0
 14768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14773 ;;Total ram usage:        0 bytes
 14774 ;; Hardware stack levels used:    1
 14775 ;; Hardware stack levels required when called:    3
 14776 ;; This function calls:
 14777 ;;		Nothing
 14778 ;; This function is called by:
 14779 ;;		_atoi
 14780 ;; This function uses a reentrant model
 14781 ;;
 14782                           
 14783                           	psect	text59
 14784  0062E4                     __ptext59:
 14785                           	opt callstack 0
 14786  0062E4                     _isspace:
 14787                           	opt callstack 0
 14788                           
 14789                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14790  0062E4  52E6               	movf	postinc1,f,c
 14791                           
 14792                           ;stkvar	_isspace$4560 @ sp[(-1)+0]
 14793                           
 14794                           ;incstack = 0
 14795  0062E6  0EFF               	movlw	-1
 14796  0062E8  6AE3               	clrf	plusw1,c
 14797  0062EA  2AE3               	incf	plusw1,f,c
 14798                           
 14799                           ;stkvar	_c @ sp[(-1)+-2]
 14800  0062EC  0EFD               	movlw	-3
 14801  0062EE  006F FF8C  F03D    	movff	plusw1,btemp
 14802  0062F4  0E20               	movlw	32
 14803  0062F6  183D               	xorwf	btemp,w,c
 14804  0062F8  E104               	bnz	u3030
 14805  0062FA  0EFE               	movlw	-2
 14806  0062FC  50E3               	movf	plusw1,w,c
 14807  0062FE  B4D8               	btfsc	status,2,c
 14808  006300  D012               	goto	l5812
 14809  006302                     u3030:
 14810                           
 14811                           ;stkvar	_c @ sp[(-1)+-2]
 14812  006302  0EFD               	movlw	-3
 14813  006304  50E3               	movf	plusw1,w,c
 14814  006306  0FF7               	addlw	247
 14815  006308  6E47               	movwf	btemp+10,c
 14816  00630A  0EFE               	movlw	-2
 14817  00630C  006F FF8C  F048    	movff	plusw1,btemp+11
 14818  006312  0EFF               	movlw	255
 14819  006314  2248               	addwfc	btemp+11,f,c
 14820  006316  5048               	movf	btemp+11,w,c
 14821  006318  E104               	bnz	u3040
 14822  00631A  0E05               	movlw	5
 14823  00631C  5C47               	subwf	btemp+10,w,c
 14824  00631E  A0D8               	btfss	status,0,c
 14825  006320  D002               	goto	l5812
 14826  006322                     u3040:
 14827                           
 14828                           ;stkvar	_isspace$4560 @ sp[(-1)+0]
 14829  006322  0EFF               	movlw	-1
 14830  006324  6AE3               	clrf	plusw1,c
 14831  006326                     l5812:
 14832                           
 14833                           ;stkvar	_isspace$4560 @ sp[(-1)+0]
 14834  006326  0EFF               	movlw	-1
 14835  006328  50E3               	movf	plusw1,w,c
 14836  00632A  6E3D               	movwf	btemp,c
 14837  00632C  6A3E               	clrf	btemp+1,c
 14838                           
 14839                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14840  00632E  52E5               	movf	postdec1,f,c
 14841  006330  52E5               	movf	postdec1,f,c
 14842  006332  52E5               	movf	postdec1,f,c
 14843  006334  0012               	return		;funcret
 14844  006336                     __end_of_isspace:
 14845                           	opt callstack 0
 14846                           
 14847 ;; *************** function _isdigit *****************
 14848 ;; Defined at:
 14849 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/isdigit.c"
 14850 ;; Parameters:    Size  Location     Type
 14851 ;;  c               2  [STACK] int 
 14852 ;; Auto vars:     Size  Location     Type
 14853 ;;		None
 14854 ;; Return value:  Size  Location     Type
 14855 ;;                  2  [STACK] int 
 14856 ;; Registers used:
 14857 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 14858 ;; Tracked objects:
 14859 ;;		On entry : 0/0
 14860 ;;		On exit  : 0/0
 14861 ;;		Unchanged: 0/0
 14862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14866 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14867 ;;Total ram usage:        0 bytes
 14868 ;; Hardware stack levels used:    1
 14869 ;; Hardware stack levels required when called:    3
 14870 ;; This function calls:
 14871 ;;		Nothing
 14872 ;; This function is called by:
 14873 ;;		_vfpfcnvrt
 14874 ;;		_atoi
 14875 ;; This function uses a reentrant model
 14876 ;;
 14877                           
 14878                           	psect	text60
 14879  0067F0                     __ptext60:
 14880                           	opt callstack 0
 14881  0067F0                     _isdigit:
 14882                           	opt callstack 24
 14883                           
 14884                           ;stkvar	_c @ sp[(0)+-2]
 14885                           
 14886                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14887                           ;incstack = 0
 14888  0067F0  0EFE               	movlw	-2
 14889  0067F2  50E3               	movf	plusw1,w,c
 14890  0067F4  0FD0               	addlw	208
 14891  0067F6  6E47               	movwf	btemp+10,c
 14892  0067F8  0EFF               	movlw	-1
 14893  0067FA  006F FF8C  F048    	movff	plusw1,btemp+11
 14894  006800  0EFF               	movlw	255
 14895  006802  2248               	addwfc	btemp+11,f,c
 14896  006804  5048               	movf	btemp+11,w,c
 14897  006806  E106               	bnz	u2780
 14898  006808  0E0A               	movlw	10
 14899  00680A  5C47               	subwf	btemp+10,w,c
 14900  00680C  B0D8               	btfsc	status,0,c
 14901  00680E  D002               	goto	u2780
 14902  006810  0E01               	movlw	1
 14903  006812  D001               	goto	u2790
 14904  006814                     u2780:
 14905  006814  0E00               	movlw	0
 14906  006816                     u2790:
 14907  006816  6E3D               	movwf	btemp,c
 14908  006818  6A3E               	clrf	btemp+1,c
 14909                           
 14910                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 14911  00681A  52E5               	movf	postdec1,f,c
 14912  00681C  52E5               	movf	postdec1,f,c
 14913  00681E  0012               	return		;funcret
 14914  006820                     __end_of_isdigit:
 14915                           	opt callstack 0
 14916                           
 14917 ;; *************** function _SYSTEM_Initialize *****************
 14918 ;; Defined at:
 14919 ;;		line 50 in file "mcc_generated_files/mcc.c"
 14920 ;; Parameters:    Size  Location     Type
 14921 ;;		None
 14922 ;; Auto vars:     Size  Location     Type
 14923 ;;		None
 14924 ;; Return value:  Size  Location     Type
 14925 ;;                  1  [STACK] void 
 14926 ;; Registers used:
 14927 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 14928 ;; Tracked objects:
 14929 ;;		On entry : 0/0
 14930 ;;		On exit  : 3F/3C
 14931 ;;		Unchanged: 0/0
 14932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14936 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14937 ;;Total ram usage:        0 bytes
 14938 ;; Hardware stack levels used:    1
 14939 ;; Hardware stack levels required when called:    5
 14940 ;; This function calls:
 14941 ;;		_ADCC_Initialize
 14942 ;;		_CLC1_Initialize
 14943 ;;		_CLKREF_Initialize
 14944 ;;		_DMA1_Initialize
 14945 ;;		_DSM_Initialize
 14946 ;;		_EXT_INT_Initialize
 14947 ;;		_INTERRUPT_Initialize
 14948 ;;		_NCO1_Initialize
 14949 ;;		_OSCILLATOR_Initialize
 14950 ;;		_PIN_MANAGER_Initialize
 14951 ;;		_PMD_Initialize
 14952 ;;		_SPI1_Initialize
 14953 ;;		_TMR5_Initialize
 14954 ;;		_TMR6_Initialize
 14955 ;;		_UART1_Initialize
 14956 ;;		_UART2_Initialize
 14957 ;; This function is called by:
 14958 ;;		_main
 14959 ;; This function uses a reentrant model
 14960 ;;
 14961                           
 14962                           	psect	text61
 14963  006594                     __ptext61:
 14964                           	opt callstack 0
 14965  006594                     _SYSTEM_Initialize:
 14966                           	opt callstack 25
 14967                           
 14968                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 14969                           
 14970                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14971                           ;incstack = 0
 14972  006594  EC4D  F030         	call	_INTERRUPT_Initialize	;wreg free
 14973                           
 14974                           ; BSR set to: 57
 14975                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 14976  006598  EC2C  F037         	call	_PMD_Initialize	;wreg free
 14977                           
 14978                           ; BSR set to: 57
 14979                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 14980  00659C  EC50  F02E         	call	_PIN_MANAGER_Initialize	;wreg free
 14981                           
 14982                           ; BSR set to: 58
 14983                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 14984  0065A0  EC21  F037         	call	_OSCILLATOR_Initialize	;wreg free
 14985                           
 14986                           ; BSR set to: 57
 14987                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 14988  0065A4  EC5F  F032         	call	_ADCC_Initialize	;wreg free
 14989                           
 14990                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 14991  0065A8  ECC6  F036         	call	_NCO1_Initialize	;wreg free
 14992                           
 14993                           ; BSR set to: 63
 14994                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 14995  0065AC  EC39  F032         	call	_EXT_INT_Initialize	;wreg free
 14996                           
 14997                           ; BSR set to: 57
 14998                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 14999  0065B0  EC46  F035         	call	_TMR6_Initialize	;wreg free
 15000                           
 15001                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 15002  0065B4  EC45  F036         	call	_CLC1_Initialize	;wreg free
 15003                           
 15004                           ; BSR set to: 60
 15005                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 15006  0065B8  ECA7  F032         	call	_TMR5_Initialize	;wreg free
 15007                           
 15008                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 15009  0065BC  ECD4  F036         	call	_DSM_Initialize	;wreg free
 15010                           
 15011                           ; BSR set to: 60
 15012                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 15013  0065C0  ECB2  F030         	call	_UART1_Initialize	;wreg free
 15014                           
 15015                           ; BSR set to: 57
 15016                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 15017  0065C4  EC15  F031         	call	_UART2_Initialize	;wreg free
 15018                           
 15019                           ; BSR set to: 57
 15020                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 15021  0065C8  EC16  F037         	call	_SPI1_Initialize	;wreg free
 15022                           
 15023                           ; BSR set to: 61
 15024                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 15025  0065CC  EC18  F030         	call	_DMA1_Initialize	;wreg free
 15026                           
 15027                           ; BSR set to: 59
 15028                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 15029  0065D0  EC5D  F037         	call	_CLKREF_Initialize	;wreg free
 15030                           
 15031                           ; BSR set to: 60
 15032                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15033  0065D4  0012               	return		;funcret
 15034  0065D6                     __end_of_SYSTEM_Initialize:
 15035                           	opt callstack 0
 15036                           
 15037 ;; *************** function _UART2_Initialize *****************
 15038 ;; Defined at:
 15039 ;;		line 78 in file "mcc_generated_files/uart2.c"
 15040 ;; Parameters:    Size  Location     Type
 15041 ;;		None
 15042 ;; Auto vars:     Size  Location     Type
 15043 ;;		None
 15044 ;; Return value:  Size  Location     Type
 15045 ;;                  1  [STACK] void 
 15046 ;; Registers used:
 15047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15048 ;; Tracked objects:
 15049 ;;		On entry : 3F/39
 15050 ;;		On exit  : 3F/39
 15051 ;;		Unchanged: 0/0
 15052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15057 ;;Total ram usage:        0 bytes
 15058 ;; Hardware stack levels used:    1
 15059 ;; Hardware stack levels required when called:    4
 15060 ;; This function calls:
 15061 ;;		_UART2_SetRxInterruptHandler
 15062 ;;		_UART2_SetTxInterruptHandler
 15063 ;; This function is called by:
 15064 ;;		_SYSTEM_Initialize
 15065 ;; This function uses a reentrant model
 15066 ;;
 15067                           
 15068                           	psect	text62
 15069  00622A                     __ptext62:
 15070                           	opt callstack 0
 15071  00622A                     _UART2_Initialize:
 15072                           	opt callstack 25
 15073                           
 15074                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 15075                           
 15076                           ; BSR set to: 60
 15077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15078                           ;incstack = 0
 15079  00622A  0139               	movlb	57	; () banked
 15080  00622C  9596               	bcf	150,2,b	;volatile
 15081                           
 15082                           ; BSR set to: 57
 15083                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 15084  00622E  0E32               	movlw	low _UART2_Receive_ISR
 15085  006230  6EE6               	movwf	postinc1,c
 15086  006232  0E6D               	movlw	high _UART2_Receive_ISR
 15087  006234  6EE6               	movwf	postinc1,c
 15088  006236  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 15089  006238  6EE6               	movwf	postinc1,c
 15090  00623A  EC0A  F035         	call	_UART2_SetRxInterruptHandler	;wreg free
 15091                           
 15092                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 15093  00623E  0139               	movlb	57	; () banked
 15094  006240  9796               	bcf	150,3,b	;volatile
 15095                           
 15096                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 15097  006242  0EA4               	movlw	low _UART2_Transmit_ISR
 15098  006244  6EE6               	movwf	postinc1,c
 15099  006246  0E68               	movlw	high _UART2_Transmit_ISR
 15100  006248  6EE6               	movwf	postinc1,c
 15101  00624A  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 15102  00624C  6EE6               	movwf	postinc1,c
 15103  00624E  ECF6  F034         	call	_UART2_SetTxInterruptHandler	;wreg free
 15104                           
 15105                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 15106  006252  013D               	movlb	61	; () banked
 15107  006254  6BD4               	clrf	212,b	;volatile
 15108                           
 15109                           ; BSR set to: 61
 15110                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 15111  006256  6BD6               	clrf	214,b	;volatile
 15112                           
 15113                           ; BSR set to: 61
 15114                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 15115  006258  6BD8               	clrf	216,b	;volatile
 15116                           
 15117                           ; BSR set to: 61
 15118                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 15119  00625A  0EB0               	movlw	176
 15120  00625C  6FDA               	movwf	218,b	;volatile
 15121                           
 15122                           ; BSR set to: 61
 15123                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 15124  00625E  0E80               	movlw	128
 15125  006260  6FDB               	movwf	219,b	;volatile
 15126                           
 15127                           ; BSR set to: 61
 15128                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 15129  006262  6BDC               	clrf	220,b	;volatile
 15130                           
 15131                           ; BSR set to: 61
 15132                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 15133  006264  0E82               	movlw	130
 15134  006266  6FDD               	movwf	221,b	;volatile
 15135                           
 15136                           ; BSR set to: 61
 15137                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 15138  006268  0E06               	movlw	6
 15139  00626A  6FDE               	movwf	222,b	;volatile
 15140                           
 15141                           ; BSR set to: 61
 15142                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 15143  00626C  6BDF               	clrf	223,b	;volatile
 15144                           
 15145                           ; BSR set to: 61
 15146                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 15147  00626E  6BE0               	clrf	224,b	;volatile
 15148                           
 15149                           ; BSR set to: 61
 15150                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 15151  006270  6BE1               	clrf	225,b	;volatile
 15152                           
 15153                           ; BSR set to: 61
 15154                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 15155  006272  6BE2               	clrf	226,b	;volatile
 15156                           
 15157                           ; BSR set to: 61
 15158                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 15159  006274  6A36               	clrf	_uart2TxHead,c	;volatile
 15160                           
 15161                           ; BSR set to: 61
 15162                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 15163  006276  6A35               	clrf	_uart2TxTail,c	;volatile
 15164                           
 15165                           ; BSR set to: 61
 15166                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 15167  006278  0E40               	movlw	64
 15168  00627A  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 15169                           
 15170                           ; BSR set to: 61
 15171                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 15172  00627C  6A33               	clrf	_uart2RxHead,c	;volatile
 15173                           
 15174                           ; BSR set to: 61
 15175                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 15176  00627E  6A32               	clrf	_uart2RxTail,c	;volatile
 15177                           
 15178                           ; BSR set to: 61
 15179                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 15180  006280  6A31               	clrf	_uart2RxCount,c	;volatile
 15181                           
 15182                           ; BSR set to: 61
 15183                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 15184  006282  0139               	movlb	57	; () banked
 15185  006284  8596               	bsf	150,2,b	;volatile
 15186                           
 15187                           ; BSR set to: 57
 15188                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 15189  006286  0012               	return		;funcret
 15190  006288                     __end_of_UART2_Initialize:
 15191                           	opt callstack 0
 15192                           
 15193 ;; *************** function _UART2_SetTxInterruptHandler *****************
 15194 ;; Defined at:
 15195 ;;		line 252 in file "mcc_generated_files/uart2.c"
 15196 ;; Parameters:    Size  Location     Type
 15197 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15198 ;;		 -> UART2_Transmit_ISR(1), 
 15199 ;; Auto vars:     Size  Location     Type
 15200 ;;		None
 15201 ;; Return value:  Size  Location     Type
 15202 ;;                  1  [STACK] void 
 15203 ;; Registers used:
 15204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15205 ;; Tracked objects:
 15206 ;;		On entry : 3F/39
 15207 ;;		On exit  : 0/0
 15208 ;;		Unchanged: 0/0
 15209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15214 ;;Total ram usage:        0 bytes
 15215 ;; Hardware stack levels used:    1
 15216 ;; Hardware stack levels required when called:    3
 15217 ;; This function calls:
 15218 ;;		Nothing
 15219 ;; This function is called by:
 15220 ;;		_UART2_Initialize
 15221 ;; This function uses a reentrant model
 15222 ;;
 15223                           
 15224                           	psect	text63
 15225  0069EC                     __ptext63:
 15226                           	opt callstack 0
 15227  0069EC                     _UART2_SetTxInterruptHandler:
 15228                           	opt callstack 25
 15229                           
 15230                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 15231                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15232                           
 15233                           ; BSR set to: 57
 15234                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15235                           ;incstack = 0
 15236  0069EC  50E1               	movf	fsr1l,w,c
 15237  0069EE  0FFD               	addlw	-3
 15238  0069F0  6ED9               	movwf	fsr2l,c
 15239  0069F2  50E2               	movf	fsr1h,w,c
 15240  0069F4  6EDA               	movwf	fsr2h,c
 15241  0069F6  0EFF               	movlw	255
 15242  0069F8  22DA               	addwfc	fsr2h,f,c
 15243  0069FA  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 15244  006A00  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 15245  006A06  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 15246                           
 15247                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15248  006A0C  52E5               	movf	postdec1,f,c
 15249  006A0E  52E5               	movf	postdec1,f,c
 15250  006A10  52E5               	movf	postdec1,f,c
 15251  006A12  0012               	return		;funcret
 15252  006A14                     __end_of_UART2_SetTxInterruptHandler:
 15253                           	opt callstack 0
 15254                           
 15255 ;; *************** function _UART2_SetRxInterruptHandler *****************
 15256 ;; Defined at:
 15257 ;;		line 248 in file "mcc_generated_files/uart2.c"
 15258 ;; Parameters:    Size  Location     Type
 15259 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15260 ;;		 -> UART2_Receive_ISR(1), 
 15261 ;; Auto vars:     Size  Location     Type
 15262 ;;		None
 15263 ;; Return value:  Size  Location     Type
 15264 ;;                  1  [STACK] void 
 15265 ;; Registers used:
 15266 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15267 ;; Tracked objects:
 15268 ;;		On entry : 3F/39
 15269 ;;		On exit  : 0/0
 15270 ;;		Unchanged: 0/0
 15271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15276 ;;Total ram usage:        0 bytes
 15277 ;; Hardware stack levels used:    1
 15278 ;; Hardware stack levels required when called:    3
 15279 ;; This function calls:
 15280 ;;		Nothing
 15281 ;; This function is called by:
 15282 ;;		_UART2_Initialize
 15283 ;; This function uses a reentrant model
 15284 ;;
 15285                           
 15286                           	psect	text64
 15287  006A14                     __ptext64:
 15288                           	opt callstack 0
 15289  006A14                     _UART2_SetRxInterruptHandler:
 15290                           	opt callstack 25
 15291                           
 15292                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 15293                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15294                           
 15295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15296                           ;incstack = 0
 15297  006A14  50E1               	movf	fsr1l,w,c
 15298  006A16  0FFD               	addlw	-3
 15299  006A18  6ED9               	movwf	fsr2l,c
 15300  006A1A  50E2               	movf	fsr1h,w,c
 15301  006A1C  6EDA               	movwf	fsr2h,c
 15302  006A1E  0EFF               	movlw	255
 15303  006A20  22DA               	addwfc	fsr2h,f,c
 15304  006A22  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 15305  006A28  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 15306  006A2E  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 15307                           
 15308                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15309  006A34  52E5               	movf	postdec1,f,c
 15310  006A36  52E5               	movf	postdec1,f,c
 15311  006A38  52E5               	movf	postdec1,f,c
 15312  006A3A  0012               	return		;funcret
 15313  006A3C                     __end_of_UART2_SetRxInterruptHandler:
 15314                           	opt callstack 0
 15315                           
 15316 ;; *************** function _UART1_Initialize *****************
 15317 ;; Defined at:
 15318 ;;		line 78 in file "mcc_generated_files/uart1.c"
 15319 ;; Parameters:    Size  Location     Type
 15320 ;;		None
 15321 ;; Auto vars:     Size  Location     Type
 15322 ;;		None
 15323 ;; Return value:  Size  Location     Type
 15324 ;;                  1  [STACK] void 
 15325 ;; Registers used:
 15326 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15327 ;; Tracked objects:
 15328 ;;		On entry : 3F/3C
 15329 ;;		On exit  : 3F/39
 15330 ;;		Unchanged: 0/0
 15331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15335 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15336 ;;Total ram usage:        0 bytes
 15337 ;; Hardware stack levels used:    1
 15338 ;; Hardware stack levels required when called:    4
 15339 ;; This function calls:
 15340 ;;		_UART1_SetRxInterruptHandler
 15341 ;;		_UART1_SetTxInterruptHandler
 15342 ;; This function is called by:
 15343 ;;		_SYSTEM_Initialize
 15344 ;; This function uses a reentrant model
 15345 ;;
 15346                           
 15347                           	psect	text65
 15348  006164                     __ptext65:
 15349                           	opt callstack 0
 15350  006164                     _UART1_Initialize:
 15351                           	opt callstack 25
 15352                           
 15353                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 15354                           
 15355                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15356                           ;incstack = 0
 15357  006164  0139               	movlb	57	; () banked
 15358  006166  9793               	bcf	147,3,b	;volatile
 15359                           
 15360                           ; BSR set to: 57
 15361                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 15362  006168  0E12               	movlw	low _UART1_Receive_ISR
 15363  00616A  6EE6               	movwf	postinc1,c
 15364  00616C  0E6D               	movlw	high _UART1_Receive_ISR
 15365  00616E  6EE6               	movwf	postinc1,c
 15366  006170  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 15367  006172  6EE6               	movwf	postinc1,c
 15368  006174  EC32  F035         	call	_UART1_SetRxInterruptHandler	;wreg free
 15369                           
 15370                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 15371  006178  0139               	movlb	57	; () banked
 15372  00617A  9993               	bcf	147,4,b	;volatile
 15373                           
 15374                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 15375  00617C  0E78               	movlw	low _UART1_Transmit_ISR
 15376  00617E  6EE6               	movwf	postinc1,c
 15377  006180  0E68               	movlw	high _UART1_Transmit_ISR
 15378  006182  6EE6               	movwf	postinc1,c
 15379  006184  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 15380  006186  6EE6               	movwf	postinc1,c
 15381  006188  EC1E  F035         	call	_UART1_SetTxInterruptHandler	;wreg free
 15382                           
 15383                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 15384  00618C  013D               	movlb	61	; () banked
 15385  00618E  6BEC               	clrf	236,b	;volatile
 15386                           
 15387                           ; BSR set to: 61
 15388                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 15389  006190  6BED               	clrf	237,b	;volatile
 15390                           
 15391                           ; BSR set to: 61
 15392                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 15393  006192  6BEE               	clrf	238,b	;volatile
 15394                           
 15395                           ; BSR set to: 61
 15396                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 15397  006194  6BEF               	clrf	239,b	;volatile
 15398                           
 15399                           ; BSR set to: 61
 15400                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 15401  006196  6BF0               	clrf	240,b	;volatile
 15402                           
 15403                           ; BSR set to: 61
 15404                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 15405  006198  6BF1               	clrf	241,b	;volatile
 15406                           
 15407                           ; BSR set to: 61
 15408                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 15409  00619A  0EB0               	movlw	176
 15410  00619C  6FF2               	movwf	242,b	;volatile
 15411                           
 15412                           ; BSR set to: 61
 15413                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 15414  00619E  0E80               	movlw	128
 15415  0061A0  6FF3               	movwf	243,b	;volatile
 15416                           
 15417                           ; BSR set to: 61
 15418                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 15419  0061A2  6BF4               	clrf	244,b	;volatile
 15420                           
 15421                           ; BSR set to: 61
 15422                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 15423  0061A4  0E82               	movlw	130
 15424  0061A6  6FF5               	movwf	245,b	;volatile
 15425                           
 15426                           ; BSR set to: 61
 15427                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 15428  0061A8  0E06               	movlw	6
 15429  0061AA  6FF6               	movwf	246,b	;volatile
 15430                           
 15431                           ; BSR set to: 61
 15432                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 15433  0061AC  6BF7               	clrf	247,b	;volatile
 15434                           
 15435                           ; BSR set to: 61
 15436                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 15437  0061AE  6BF8               	clrf	248,b	;volatile
 15438                           
 15439                           ; BSR set to: 61
 15440                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 15441  0061B0  6BF9               	clrf	249,b	;volatile
 15442                           
 15443                           ; BSR set to: 61
 15444                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 15445  0061B2  6BFA               	clrf	250,b	;volatile
 15446                           
 15447                           ; BSR set to: 61
 15448                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 15449  0061B4  6A3C               	clrf	_uart1TxHead,c	;volatile
 15450                           
 15451                           ; BSR set to: 61
 15452                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 15453  0061B6  6A3B               	clrf	_uart1TxTail,c	;volatile
 15454                           
 15455                           ; BSR set to: 61
 15456                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 15457  0061B8  0E40               	movlw	64
 15458  0061BA  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 15459                           
 15460                           ; BSR set to: 61
 15461                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 15462  0061BC  6A39               	clrf	_uart1RxHead,c	;volatile
 15463                           
 15464                           ; BSR set to: 61
 15465                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 15466  0061BE  6A38               	clrf	_uart1RxTail,c	;volatile
 15467                           
 15468                           ; BSR set to: 61
 15469                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 15470  0061C0  6A37               	clrf	_uart1RxCount,c	;volatile
 15471                           
 15472                           ; BSR set to: 61
 15473                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 15474  0061C2  0139               	movlb	57	; () banked
 15475  0061C4  8793               	bsf	147,3,b	;volatile
 15476                           
 15477                           ; BSR set to: 57
 15478                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 15479  0061C6  0012               	return		;funcret
 15480  0061C8                     __end_of_UART1_Initialize:
 15481                           	opt callstack 0
 15482                           
 15483 ;; *************** function _UART1_SetTxInterruptHandler *****************
 15484 ;; Defined at:
 15485 ;;		line 244 in file "mcc_generated_files/uart1.c"
 15486 ;; Parameters:    Size  Location     Type
 15487 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15488 ;;		 -> UART1_Transmit_ISR(1), 
 15489 ;; Auto vars:     Size  Location     Type
 15490 ;;		None
 15491 ;; Return value:  Size  Location     Type
 15492 ;;                  1  [STACK] void 
 15493 ;; Registers used:
 15494 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15495 ;; Tracked objects:
 15496 ;;		On entry : 3F/39
 15497 ;;		On exit  : 0/0
 15498 ;;		Unchanged: 0/0
 15499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15504 ;;Total ram usage:        0 bytes
 15505 ;; Hardware stack levels used:    1
 15506 ;; Hardware stack levels required when called:    3
 15507 ;; This function calls:
 15508 ;;		Nothing
 15509 ;; This function is called by:
 15510 ;;		_UART1_Initialize
 15511 ;; This function uses a reentrant model
 15512 ;;
 15513                           
 15514                           	psect	text66
 15515  006A3C                     __ptext66:
 15516                           	opt callstack 0
 15517  006A3C                     _UART1_SetTxInterruptHandler:
 15518                           	opt callstack 25
 15519                           
 15520                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 15521                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15522                           
 15523                           ; BSR set to: 57
 15524                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15525                           ;incstack = 0
 15526  006A3C  50E1               	movf	fsr1l,w,c
 15527  006A3E  0FFD               	addlw	-3
 15528  006A40  6ED9               	movwf	fsr2l,c
 15529  006A42  50E2               	movf	fsr1h,w,c
 15530  006A44  6EDA               	movwf	fsr2h,c
 15531  006A46  0EFF               	movlw	255
 15532  006A48  22DA               	addwfc	fsr2h,f,c
 15533  006A4A  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 15534  006A50  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 15535  006A56  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 15536                           
 15537                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15538  006A5C  52E5               	movf	postdec1,f,c
 15539  006A5E  52E5               	movf	postdec1,f,c
 15540  006A60  52E5               	movf	postdec1,f,c
 15541  006A62  0012               	return		;funcret
 15542  006A64                     __end_of_UART1_SetTxInterruptHandler:
 15543                           	opt callstack 0
 15544                           
 15545 ;; *************** function _UART1_SetRxInterruptHandler *****************
 15546 ;; Defined at:
 15547 ;;		line 239 in file "mcc_generated_files/uart1.c"
 15548 ;; Parameters:    Size  Location     Type
 15549 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15550 ;;		 -> UART1_Receive_ISR(1), 
 15551 ;; Auto vars:     Size  Location     Type
 15552 ;;		None
 15553 ;; Return value:  Size  Location     Type
 15554 ;;                  1  [STACK] void 
 15555 ;; Registers used:
 15556 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15557 ;; Tracked objects:
 15558 ;;		On entry : 3F/39
 15559 ;;		On exit  : 0/0
 15560 ;;		Unchanged: 0/0
 15561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15566 ;;Total ram usage:        0 bytes
 15567 ;; Hardware stack levels used:    1
 15568 ;; Hardware stack levels required when called:    3
 15569 ;; This function calls:
 15570 ;;		Nothing
 15571 ;; This function is called by:
 15572 ;;		_UART1_Initialize
 15573 ;; This function uses a reentrant model
 15574 ;;
 15575                           
 15576                           	psect	text67
 15577  006A64                     __ptext67:
 15578                           	opt callstack 0
 15579  006A64                     _UART1_SetRxInterruptHandler:
 15580                           	opt callstack 25
 15581                           
 15582                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 15583                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15584                           
 15585                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15586                           ;incstack = 0
 15587  006A64  50E1               	movf	fsr1l,w,c
 15588  006A66  0FFD               	addlw	-3
 15589  006A68  6ED9               	movwf	fsr2l,c
 15590  006A6A  50E2               	movf	fsr1h,w,c
 15591  006A6C  6EDA               	movwf	fsr2h,c
 15592  006A6E  0EFF               	movlw	255
 15593  006A70  22DA               	addwfc	fsr2h,f,c
 15594  006A72  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 15595  006A78  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 15596  006A7E  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 15597                           
 15598                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15599  006A84  52E5               	movf	postdec1,f,c
 15600  006A86  52E5               	movf	postdec1,f,c
 15601  006A88  52E5               	movf	postdec1,f,c
 15602  006A8A  0012               	return		;funcret
 15603  006A8C                     __end_of_UART1_SetRxInterruptHandler:
 15604                           	opt callstack 0
 15605                           
 15606 ;; *************** function _TMR6_Initialize *****************
 15607 ;; Defined at:
 15608 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 15609 ;; Parameters:    Size  Location     Type
 15610 ;;		None
 15611 ;; Auto vars:     Size  Location     Type
 15612 ;;		None
 15613 ;; Return value:  Size  Location     Type
 15614 ;;                  1  [STACK] void 
 15615 ;; Registers used:
 15616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15617 ;; Tracked objects:
 15618 ;;		On entry : 3F/39
 15619 ;;		On exit  : 0/0
 15620 ;;		Unchanged: 0/0
 15621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15626 ;;Total ram usage:        0 bytes
 15627 ;; Hardware stack levels used:    1
 15628 ;; Hardware stack levels required when called:    4
 15629 ;; This function calls:
 15630 ;;		_TMR6_SetInterruptHandler
 15631 ;; This function is called by:
 15632 ;;		_SYSTEM_Initialize
 15633 ;; This function uses a reentrant model
 15634 ;;
 15635                           
 15636                           	psect	text68
 15637  006A8C                     __ptext68:
 15638                           	opt callstack 0
 15639  006A8C                     _TMR6_Initialize:
 15640                           	opt callstack 25
 15641                           
 15642                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 15643                           
 15644                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15645                           ;incstack = 0
 15646  006A8C  0E01               	movlw	1
 15647  006A8E  6E96               	movwf	16278,c	;volatile
 15648                           
 15649                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 15650  006A90  6A95               	clrf	16277,c	;volatile
 15651                           
 15652                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 15653  006A92  6A97               	clrf	16279,c	;volatile
 15654                           
 15655                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 15656  006A94  0E03               	movlw	3
 15657  006A96  6E93               	movwf	16275,c	;volatile
 15658                           
 15659                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 15660  006A98  6A92               	clrf	16274,c	;volatile
 15661                           
 15662                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 15663  006A9A  0139               	movlb	57	; () banked
 15664  006A9C  91A9               	bcf	169,0,b	;volatile
 15665                           
 15666                           ; BSR set to: 57
 15667                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 15668  006A9E  8199               	bsf	153,0,b	;volatile
 15669                           
 15670                           ; BSR set to: 57
 15671                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 15672  006AA0  0ED4               	movlw	low _TMR6_DefaultInterruptHandler
 15673  006AA2  6EE6               	movwf	postinc1,c
 15674  006AA4  0E63               	movlw	high _TMR6_DefaultInterruptHandler
 15675  006AA6  6EE6               	movwf	postinc1,c
 15676  006AA8  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 15677  006AAA  6EE6               	movwf	postinc1,c
 15678  006AAC  EC5A  F035         	call	_TMR6_SetInterruptHandler	;wreg free
 15679                           
 15680                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 15681  006AB0  6894               	setf	16276,c	;volatile
 15682                           
 15683                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15684  006AB2  0012               	return		;funcret
 15685  006AB4                     __end_of_TMR6_Initialize:
 15686                           	opt callstack 0
 15687                           
 15688 ;; *************** function _TMR6_SetInterruptHandler *****************
 15689 ;; Defined at:
 15690 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 15691 ;; Parameters:    Size  Location     Type
 15692 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15693 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 15694 ;; Auto vars:     Size  Location     Type
 15695 ;;		None
 15696 ;; Return value:  Size  Location     Type
 15697 ;;                  1  [STACK] void 
 15698 ;; Registers used:
 15699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15700 ;; Tracked objects:
 15701 ;;		On entry : 3F/39
 15702 ;;		On exit  : 0/0
 15703 ;;		Unchanged: 0/0
 15704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15708 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15709 ;;Total ram usage:        0 bytes
 15710 ;; Hardware stack levels used:    1
 15711 ;; Hardware stack levels required when called:    3
 15712 ;; This function calls:
 15713 ;;		Nothing
 15714 ;; This function is called by:
 15715 ;;		_TMR6_Initialize
 15716 ;; This function uses a reentrant model
 15717 ;;
 15718                           
 15719                           	psect	text69
 15720  006AB4                     __ptext69:
 15721                           	opt callstack 0
 15722  006AB4                     _TMR6_SetInterruptHandler:
 15723                           	opt callstack 25
 15724                           
 15725                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 15726                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15727                           
 15728                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15729                           ;incstack = 0
 15730  006AB4  50E1               	movf	fsr1l,w,c
 15731  006AB6  0FFD               	addlw	-3
 15732  006AB8  6ED9               	movwf	fsr2l,c
 15733  006ABA  50E2               	movf	fsr1h,w,c
 15734  006ABC  6EDA               	movwf	fsr2h,c
 15735  006ABE  0EFF               	movlw	255
 15736  006AC0  22DA               	addwfc	fsr2h,f,c
 15737  006AC2  006F FF78  F0EB    	movff	postinc2,_TMR6_InterruptHandler
 15738  006AC8  006F FF78  F0EC    	movff	postinc2,_TMR6_InterruptHandler+1
 15739  006ACE  006F FF74  F0ED    	movff	postdec2,_TMR6_InterruptHandler+2
 15740                           
 15741                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15742  006AD4  52E5               	movf	postdec1,f,c
 15743  006AD6  52E5               	movf	postdec1,f,c
 15744  006AD8  52E5               	movf	postdec1,f,c
 15745  006ADA  0012               	return		;funcret
 15746  006ADC                     __end_of_TMR6_SetInterruptHandler:
 15747                           	opt callstack 0
 15748                           
 15749 ;; *************** function _TMR5_Initialize *****************
 15750 ;; Defined at:
 15751 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 15752 ;; Parameters:    Size  Location     Type
 15753 ;;		None
 15754 ;; Auto vars:     Size  Location     Type
 15755 ;;		None
 15756 ;; Return value:  Size  Location     Type
 15757 ;;                  1  [STACK] void 
 15758 ;; Registers used:
 15759 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 15760 ;; Tracked objects:
 15761 ;;		On entry : 3F/3C
 15762 ;;		On exit  : 0/0
 15763 ;;		Unchanged: 0/0
 15764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15765 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15766 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15767 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15768 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15769 ;;Total ram usage:        0 bytes
 15770 ;; Hardware stack levels used:    1
 15771 ;; Hardware stack levels required when called:    4
 15772 ;; This function calls:
 15773 ;;		_TMR5_SetInterruptHandler
 15774 ;; This function is called by:
 15775 ;;		_SYSTEM_Initialize
 15776 ;; This function uses a reentrant model
 15777 ;;
 15778                           
 15779                           	psect	text70
 15780  00654E                     __ptext70:
 15781                           	opt callstack 0
 15782  00654E                     _TMR5_Initialize:
 15783                           	opt callstack 25
 15784                           
 15785                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 15786                           
 15787                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15788                           ;incstack = 0
 15789  00654E  6A9B               	clrf	16283,c	;volatile
 15790                           
 15791                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 15792  006550  6A9C               	clrf	16284,c	;volatile
 15793                           
 15794                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 15795  006552  0E01               	movlw	1
 15796  006554  6E9D               	movwf	16285,c	;volatile
 15797                           
 15798                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 15799  006556  0E63               	movlw	99
 15800  006558  6E99               	movwf	16281,c	;volatile
 15801                           
 15802                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 15803  00655A  0EC0               	movlw	192
 15804  00655C  6E98               	movwf	16280,c	;volatile
 15805                           
 15806                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 15807  00655E  5098               	movf	16280,w,c	;volatile
 15808  006560  006F FE64  F03D    	movff	16281,btemp	;volatile
 15809  006566  6A3E               	clrf	btemp+1,c
 15810  006568  0060  F0F4  F03E   	movff	btemp,btemp+1
 15811  00656E  6A3D               	clrf	btemp,c
 15812  006570  103D               	iorwf	btemp,w,c
 15813  006572  6E29               	movwf	_timer5ReloadVal,c	;volatile
 15814  006574  503E               	movf	btemp+1,w,c
 15815  006576  6E2A               	movwf	_timer5ReloadVal+1,c	;volatile
 15816                           
 15817                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 15818  006578  0139               	movlb	57	; () banked
 15819  00657A  9DA8               	bcf	168,6,b	;volatile
 15820                           
 15821                           ; BSR set to: 57
 15822                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 15823  00657C  8D98               	bsf	152,6,b	;volatile
 15824                           
 15825                           ; BSR set to: 57
 15826                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 15827  00657E  0E12               	movlw	low _TMR5_DefaultInterruptHandler
 15828  006580  6EE6               	movwf	postinc1,c
 15829  006582  0E6E               	movlw	high _TMR5_DefaultInterruptHandler
 15830  006584  6EE6               	movwf	postinc1,c
 15831  006586  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 15832  006588  6EE6               	movwf	postinc1,c
 15833  00658A  EC6E  F035         	call	_TMR5_SetInterruptHandler	;wreg free
 15834                           
 15835                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 15836  00658E  0E31               	movlw	49
 15837  006590  6E9A               	movwf	16282,c	;volatile
 15838                           
 15839                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15840  006592  0012               	return		;funcret
 15841  006594                     __end_of_TMR5_Initialize:
 15842                           	opt callstack 0
 15843                           
 15844 ;; *************** function _TMR5_SetInterruptHandler *****************
 15845 ;; Defined at:
 15846 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 15847 ;; Parameters:    Size  Location     Type
 15848 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15849 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 15850 ;; Auto vars:     Size  Location     Type
 15851 ;;		None
 15852 ;; Return value:  Size  Location     Type
 15853 ;;                  1  [STACK] void 
 15854 ;; Registers used:
 15855 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15856 ;; Tracked objects:
 15857 ;;		On entry : 3F/39
 15858 ;;		On exit  : 0/0
 15859 ;;		Unchanged: 0/0
 15860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15864 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15865 ;;Total ram usage:        0 bytes
 15866 ;; Hardware stack levels used:    1
 15867 ;; Hardware stack levels required when called:    3
 15868 ;; This function calls:
 15869 ;;		Nothing
 15870 ;; This function is called by:
 15871 ;;		_TMR5_Initialize
 15872 ;; This function uses a reentrant model
 15873 ;;
 15874                           
 15875                           	psect	text71
 15876  006ADC                     __ptext71:
 15877                           	opt callstack 0
 15878  006ADC                     _TMR5_SetInterruptHandler:
 15879                           	opt callstack 25
 15880                           
 15881                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 15882                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15883                           
 15884                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15885                           ;incstack = 0
 15886  006ADC  50E1               	movf	fsr1l,w,c
 15887  006ADE  0FFD               	addlw	-3
 15888  006AE0  6ED9               	movwf	fsr2l,c
 15889  006AE2  50E2               	movf	fsr1h,w,c
 15890  006AE4  6EDA               	movwf	fsr2h,c
 15891  006AE6  0EFF               	movlw	255
 15892  006AE8  22DA               	addwfc	fsr2h,f,c
 15893  006AEA  006F FF78  F0E8    	movff	postinc2,_TMR5_InterruptHandler
 15894  006AF0  006F FF78  F0E9    	movff	postinc2,_TMR5_InterruptHandler+1
 15895  006AF6  006F FF74  F0EA    	movff	postdec2,_TMR5_InterruptHandler+2
 15896                           
 15897                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15898  006AFC  52E5               	movf	postdec1,f,c
 15899  006AFE  52E5               	movf	postdec1,f,c
 15900  006B00  52E5               	movf	postdec1,f,c
 15901  006B02  0012               	return		;funcret
 15902  006B04                     __end_of_TMR5_SetInterruptHandler:
 15903                           	opt callstack 0
 15904                           
 15905 ;; *************** function _SPI1_Initialize *****************
 15906 ;; Defined at:
 15907 ;;		line 64 in file "mcc_generated_files/spi1.c"
 15908 ;; Parameters:    Size  Location     Type
 15909 ;;		None
 15910 ;; Auto vars:     Size  Location     Type
 15911 ;;		None
 15912 ;; Return value:  Size  Location     Type
 15913 ;;                  1  [STACK] void 
 15914 ;; Registers used:
 15915 ;;		wreg, status,2
 15916 ;; Tracked objects:
 15917 ;;		On entry : 3F/39
 15918 ;;		On exit  : 3F/3D
 15919 ;;		Unchanged: 0/0
 15920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15921 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15922 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15923 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15924 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15925 ;;Total ram usage:        0 bytes
 15926 ;; Hardware stack levels used:    1
 15927 ;; Hardware stack levels required when called:    3
 15928 ;; This function calls:
 15929 ;;		Nothing
 15930 ;; This function is called by:
 15931 ;;		_SYSTEM_Initialize
 15932 ;; This function uses a reentrant model
 15933 ;;
 15934                           
 15935                           	psect	text72
 15936  006E2C                     __ptext72:
 15937                           	opt callstack 0
 15938  006E2C                     _SPI1_Initialize:
 15939                           	opt callstack 26
 15940                           
 15941                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 15942                           
 15943                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15944                           ;incstack = 0
 15945  006E2C  0E40               	movlw	64
 15946  006E2E  013D               	movlb	61	; () banked
 15947  006E30  6F15               	movwf	21,b	;volatile
 15948                           
 15949                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 15950  006E32  0E03               	movlw	3
 15951  006E34  6F16               	movwf	22,b	;volatile
 15952                           
 15953                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 15954  006E36  0E4F               	movlw	79
 15955  006E38  6F19               	movwf	25,b	;volatile
 15956                           
 15957                           ; BSR set to: 61
 15958                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 15959  006E3A  6B1C               	clrf	28,b	;volatile
 15960                           
 15961                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 15962  006E3C  0E83               	movlw	131
 15963  006E3E  6F14               	movwf	20,b	;volatile
 15964                           
 15965                           ; BSR set to: 61
 15966                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15967  006E40  0012               	return		;funcret
 15968  006E42                     __end_of_SPI1_Initialize:
 15969                           	opt callstack 0
 15970                           
 15971 ;; *************** function _PMD_Initialize *****************
 15972 ;; Defined at:
 15973 ;;		line 88 in file "mcc_generated_files/mcc.c"
 15974 ;; Parameters:    Size  Location     Type
 15975 ;;		None
 15976 ;; Auto vars:     Size  Location     Type
 15977 ;;		None
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  1  [STACK] void 
 15980 ;; Registers used:
 15981 ;;		None
 15982 ;; Tracked objects:
 15983 ;;		On entry : 3F/39
 15984 ;;		On exit  : 3F/39
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15991 ;;Total ram usage:        0 bytes
 15992 ;; Hardware stack levels used:    1
 15993 ;; Hardware stack levels required when called:    3
 15994 ;; This function calls:
 15995 ;;		Nothing
 15996 ;; This function is called by:
 15997 ;;		_SYSTEM_Initialize
 15998 ;; This function uses a reentrant model
 15999 ;;
 16000                           
 16001                           	psect	text73
 16002  006E58                     __ptext73:
 16003                           	opt callstack 0
 16004  006E58                     _PMD_Initialize:
 16005                           	opt callstack 26
 16006                           
 16007                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 16008                           
 16009                           ; BSR set to: 61
 16010                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16011                           ;incstack = 0
 16012  006E58  0139               	movlb	57	; () banked
 16013  006E5A  6BC0               	clrf	192,b	;volatile
 16014                           
 16015                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 16016  006E5C  6BC1               	clrf	193,b	;volatile
 16017                           
 16018                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 16019  006E5E  6BC2               	clrf	194,b	;volatile
 16020                           
 16021                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 16022  006E60  6BC3               	clrf	195,b	;volatile
 16023                           
 16024                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 16025  006E62  6BC4               	clrf	196,b	;volatile
 16026                           
 16027                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 16028  006E64  6BC5               	clrf	197,b	;volatile
 16029                           
 16030                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 16031  006E66  6BC6               	clrf	198,b	;volatile
 16032                           
 16033                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 16034  006E68  6BC7               	clrf	199,b	;volatile
 16035                           
 16036                           ; BSR set to: 57
 16037                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 16038  006E6A  0012               	return		;funcret
 16039  006E6C                     __end_of_PMD_Initialize:
 16040                           	opt callstack 0
 16041                           
 16042 ;; *************** function _PIN_MANAGER_Initialize *****************
 16043 ;; Defined at:
 16044 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 16045 ;; Parameters:    Size  Location     Type
 16046 ;;		None
 16047 ;; Auto vars:     Size  Location     Type
 16048 ;;		None
 16049 ;; Return value:  Size  Location     Type
 16050 ;;                  1  [STACK] void 
 16051 ;; Registers used:
 16052 ;;		wreg, status,2
 16053 ;; Tracked objects:
 16054 ;;		On entry : 3F/39
 16055 ;;		On exit  : 3F/3A
 16056 ;;		Unchanged: 0/0
 16057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16062 ;;Total ram usage:        0 bytes
 16063 ;; Hardware stack levels used:    1
 16064 ;; Hardware stack levels required when called:    3
 16065 ;; This function calls:
 16066 ;;		Nothing
 16067 ;; This function is called by:
 16068 ;;		_SYSTEM_Initialize
 16069 ;; This function uses a reentrant model
 16070 ;;
 16071                           
 16072                           	psect	text74
 16073  005CA0                     __ptext74:
 16074                           	opt callstack 0
 16075  005CA0                     _PIN_MANAGER_Initialize:
 16076                           	opt callstack 26
 16077                           
 16078                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 16079                           
 16080                           ; BSR set to: 57
 16081                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16082                           ;incstack = 0
 16083  005CA0  0E07               	movlw	7
 16084  005CA2  6EBE               	movwf	16318,c	;volatile
 16085                           
 16086                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 16087  005CA4  6ABD               	clrf	16317,c	;volatile
 16088                           
 16089                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 16090  005CA6  6ABA               	clrf	16314,c	;volatile
 16091                           
 16092                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 16093  005CA8  6ABF               	clrf	16319,c	;volatile
 16094                           
 16095                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 16096  005CAA  6ABB               	clrf	16315,c	;volatile
 16097                           
 16098                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 16099  005CAC  0E06               	movlw	6
 16100  005CAE  6EBC               	movwf	16316,c	;volatile
 16101                           
 16102                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 16103  005CB0  6AC6               	clrf	16326,c	;volatile
 16104                           
 16105                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 16106  005CB2  0E0F               	movlw	15
 16107  005CB4  6EC7               	movwf	16327,c	;volatile
 16108                           
 16109                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 16110  005CB6  0E8F               	movlw	143
 16111  005CB8  6EC2               	movwf	16322,c	;volatile
 16112                           
 16113                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 16114  005CBA  0EBF               	movlw	191
 16115  005CBC  6EC3               	movwf	16323,c	;volatile
 16116                           
 16117                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 16118  005CBE  0E91               	movlw	145
 16119  005CC0  6EC4               	movwf	16324,c	;volatile
 16120                           
 16121                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 16122  005CC2  0E0C               	movlw	12
 16123  005CC4  6EC5               	movwf	16325,c	;volatile
 16124                           
 16125                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 16126  005CC6  013A               	movlb	58	; () banked
 16127  005CC8  6B70               	clrf	112,b	;volatile
 16128                           
 16129                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 16130  005CCA  0E01               	movlw	1
 16131  005CCC  6F60               	movwf	96,b	;volatile
 16132                           
 16133                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 16134  005CCE  0E38               	movlw	56
 16135  005CD0  6F50               	movwf	80,b	;volatile
 16136                           
 16137                           ; BSR set to: 58
 16138                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 16139  005CD2  6B80               	clrf	128,b	;volatile
 16140                           
 16141                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x0F;
 16142  005CD4  0E0F               	movlw	15
 16143  005CD6  6F90               	movwf	144,b	;volatile
 16144                           
 16145                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 16146  005CD8  0E8F               	movlw	143
 16147  005CDA  6F40               	movwf	64,b	;volatile
 16148                           
 16149                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 16150  005CDC  0EFC               	movlw	252
 16151  005CDE  6F71               	movwf	113,b	;volatile
 16152                           
 16153                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0xF0;
 16154  005CE0  0EF0               	movlw	240
 16155  005CE2  6F91               	movwf	145,b	;volatile
 16156                           
 16157                           ; BSR set to: 58
 16158                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 16159  005CE4  6B81               	clrf	129,b	;volatile
 16160                           
 16161                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 16162  005CE6  0E87               	movlw	135
 16163  005CE8  6F51               	movwf	81,b	;volatile
 16164                           
 16165                           ; BSR set to: 58
 16166                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 16167  005CEA  6B41               	clrf	65,b	;volatile
 16168                           
 16169                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 16170  005CEC  0E90               	movlw	144
 16171  005CEE  6F61               	movwf	97,b	;volatile
 16172                           
 16173                           ; BSR set to: 58
 16174                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 16175  005CF0  6B82               	clrf	130,b	;volatile
 16176                           
 16177                           ; BSR set to: 58
 16178                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 16179  005CF2  6B92               	clrf	146,b	;volatile
 16180                           
 16181                           ; BSR set to: 58
 16182                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 16183  005CF4  6B42               	clrf	66,b	;volatile
 16184                           
 16185                           ; BSR set to: 58
 16186                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 16187  005CF6  6B52               	clrf	82,b	;volatile
 16188                           
 16189                           ; BSR set to: 58
 16190                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 16191  005CF8  6B62               	clrf	98,b	;volatile
 16192                           
 16193                           ; BSR set to: 58
 16194                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 16195  005CFA  6B72               	clrf	114,b	;volatile
 16196                           
 16197                           ; BSR set to: 58
 16198                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 16199  005CFC  6943               	setf	67,b	;volatile
 16200                           
 16201                           ; BSR set to: 58
 16202                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 16203  005CFE  6953               	setf	83,b	;volatile
 16204                           
 16205                           ; BSR set to: 58
 16206                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 16207  005D00  6963               	setf	99,b	;volatile
 16208                           
 16209                           ; BSR set to: 58
 16210                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 16211  005D02  6973               	setf	115,b	;volatile
 16212                           
 16213                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 16214  005D04  0E07               	movlw	7
 16215  005D06  6F83               	movwf	131,b	;volatile
 16216                           
 16217                           ; BSR set to: 58
 16218                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 16219  005D08  6993               	setf	147,b	;volatile
 16220                           
 16221                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 16222  005D0A  0E0F               	movlw	15
 16223  005D0C  6FE8               	movwf	232,b	;volatile
 16224                           
 16225                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 16226  005D0E  0E16               	movlw	22
 16227  005D10  6F0E               	movwf	14,b	;volatile
 16228                           
 16229                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 16230  005D12  0E1E               	movlw	30
 16231  005D14  6F13               	movwf	19,b	;volatile
 16232                           
 16233                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 16234  005D16  0E08               	movlw	8
 16235  005D18  6FC0               	movwf	192,b	;volatile
 16236                           
 16237                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 16238  005D1A  0E0A               	movlw	10
 16239  005D1C  6FC2               	movwf	194,b	;volatile
 16240                           
 16241                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 16242  005D1E  0E09               	movlw	9
 16243  005D20  6FC1               	movwf	193,b	;volatile
 16244                           
 16245                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 16246  005D22  0E17               	movlw	23
 16247  005D24  6FE5               	movwf	229,b	;volatile
 16248                           
 16249                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 16250  005D26  0E13               	movlw	19
 16251  005D28  6FDE               	movwf	222,b	;volatile
 16252                           
 16253                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 16254  005D2A  0E01               	movlw	1
 16255  005D2C  6F04               	movwf	4,b	;volatile
 16256                           
 16257                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 16258  005D2E  0E26               	movlw	38
 16259  005D30  6F05               	movwf	5,b	;volatile
 16260                           
 16261                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 16262  005D32  0E28               	movlw	40
 16263  005D34  6F06               	movwf	6,b	;volatile
 16264                           
 16265                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 16266  005D36  0E1F               	movlw	31
 16267  005D38  6F15               	movwf	21,b	;volatile
 16268                           
 16269                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 16270  005D3A  0E13               	movlw	19
 16271  005D3C  6F16               	movwf	22,b	;volatile
 16272                           
 16273                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 16274  005D3E  0E14               	movlw	20
 16275  005D40  6FDF               	movwf	223,b	;volatile
 16276                           
 16277                           ; BSR set to: 58
 16278                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 16279  005D42  0012               	return		;funcret
 16280  005D44                     __end_of_PIN_MANAGER_Initialize:
 16281                           	opt callstack 0
 16282                           
 16283 ;; *************** function _OSCILLATOR_Initialize *****************
 16284 ;; Defined at:
 16285 ;;		line 70 in file "mcc_generated_files/mcc.c"
 16286 ;; Parameters:    Size  Location     Type
 16287 ;;		None
 16288 ;; Auto vars:     Size  Location     Type
 16289 ;;		None
 16290 ;; Return value:  Size  Location     Type
 16291 ;;                  1  [STACK] void 
 16292 ;; Registers used:
 16293 ;;		wreg, status,2
 16294 ;; Tracked objects:
 16295 ;;		On entry : 3F/3A
 16296 ;;		On exit  : 3F/39
 16297 ;;		Unchanged: 0/0
 16298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16299 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16301 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16302 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16303 ;;Total ram usage:        0 bytes
 16304 ;; Hardware stack levels used:    1
 16305 ;; Hardware stack levels required when called:    3
 16306 ;; This function calls:
 16307 ;;		Nothing
 16308 ;; This function is called by:
 16309 ;;		_SYSTEM_Initialize
 16310 ;; This function uses a reentrant model
 16311 ;;
 16312                           
 16313                           	psect	text75
 16314  006E42                     __ptext75:
 16315                           	opt callstack 0
 16316  006E42                     _OSCILLATOR_Initialize:
 16317                           	opt callstack 26
 16318                           
 16319                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 16320                           
 16321                           ; BSR set to: 58
 16322                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16323                           ;incstack = 0
 16324  006E42  0E20               	movlw	32
 16325  006E44  0139               	movlb	57	; () banked
 16326  006E46  6FD9               	movwf	217,b	;volatile
 16327                           
 16328                           ; BSR set to: 57
 16329                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 16330  006E48  6BDB               	clrf	219,b	;volatile
 16331                           
 16332                           ; BSR set to: 57
 16333                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 16334  006E4A  6BDD               	clrf	221,b	;volatile
 16335                           
 16336                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 16337  006E4C  0E02               	movlw	2
 16338  006E4E  6FDF               	movwf	223,b	;volatile
 16339                           
 16340                           ; BSR set to: 57
 16341                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 16342  006E50  6BDE               	clrf	222,b	;volatile
 16343  006E52                     l194:
 16344                           
 16345                           ; BSR set to: 57
 16346                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 16347  006E52  B1DC               	btfsc	220,0,b	;volatile
 16348  006E54  0012               	return	
 16349  006E56  D7FD               	goto	l194
 16350  006E58                     __end_of_OSCILLATOR_Initialize:
 16351                           	opt callstack 0
 16352                           
 16353 ;; *************** function _NCO1_Initialize *****************
 16354 ;; Defined at:
 16355 ;;		line 58 in file "mcc_generated_files/nco1.c"
 16356 ;; Parameters:    Size  Location     Type
 16357 ;;		None
 16358 ;; Auto vars:     Size  Location     Type
 16359 ;;		None
 16360 ;; Return value:  Size  Location     Type
 16361 ;;                  1  [STACK] void 
 16362 ;; Registers used:
 16363 ;;		wreg, status,2
 16364 ;; Tracked objects:
 16365 ;;		On entry : 0/39
 16366 ;;		On exit  : 3F/3F
 16367 ;;		Unchanged: 0/0
 16368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16369 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16371 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16372 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16373 ;;Total ram usage:        0 bytes
 16374 ;; Hardware stack levels used:    1
 16375 ;; Hardware stack levels required when called:    3
 16376 ;; This function calls:
 16377 ;;		Nothing
 16378 ;; This function is called by:
 16379 ;;		_SYSTEM_Initialize
 16380 ;; This function uses a reentrant model
 16381 ;;
 16382                           
 16383                           	psect	text76
 16384  006D8C                     __ptext76:
 16385                           	opt callstack 0
 16386  006D8C                     _NCO1_Initialize:
 16387                           	opt callstack 26
 16388                           
 16389                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 16390                           
 16391                           ; BSR set to: 57
 16392                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16393                           ;incstack = 0
 16394  006D8C  013F               	movlb	63	; () banked
 16395  006D8E  6B3E               	clrf	62,b	;volatile
 16396                           
 16397                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 16398  006D90  6B3F               	clrf	63,b	;volatile
 16399                           
 16400                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 16401  006D92  6B3A               	clrf	58,b	;volatile
 16402                           
 16403                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 16404  006D94  6B39               	clrf	57,b	;volatile
 16405                           
 16406                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 16407  006D96  6B38               	clrf	56,b	;volatile
 16408                           
 16409                           ; BSR set to: 63
 16410                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 16411  006D98  0E06               	movlw	6
 16412  006D9A  6F3D               	movwf	61,b	;volatile
 16413                           
 16414                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 16415  006D9C  0EC7               	movlw	199
 16416  006D9E  6F3C               	movwf	60,b	;volatile
 16417                           
 16418                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 16419  006DA0  0EAE               	movlw	174
 16420  006DA2  6F3B               	movwf	59,b	;volatile
 16421                           
 16422                           ; BSR set to: 63
 16423                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 16424  006DA4  8F3E               	bsf	62,7,b	;volatile
 16425                           
 16426                           ; BSR set to: 63
 16427                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 16428  006DA6  0012               	return		;funcret
 16429  006DA8                     __end_of_NCO1_Initialize:
 16430                           	opt callstack 0
 16431                           
 16432 ;; *************** function _INTERRUPT_Initialize *****************
 16433 ;; Defined at:
 16434 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 16435 ;; Parameters:    Size  Location     Type
 16436 ;;		None
 16437 ;; Auto vars:     Size  Location     Type
 16438 ;;  state           1  [STACK] _Bool 
 16439 ;; Return value:  Size  Location     Type
 16440 ;;                  1  [STACK] void 
 16441 ;; Registers used:
 16442 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 16443 ;; Tracked objects:
 16444 ;;		On entry : 0/0
 16445 ;;		On exit  : 3F/39
 16446 ;;		Unchanged: 0/0
 16447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16452 ;;Total ram usage:        0 bytes
 16453 ;; Hardware stack levels used:    1
 16454 ;; Hardware stack levels required when called:    3
 16455 ;; This function calls:
 16456 ;;		Nothing
 16457 ;; This function is called by:
 16458 ;;		_SYSTEM_Initialize
 16459 ;; This function uses a reentrant model
 16460 ;;
 16461                           
 16462                           	psect	text77
 16463  00609A                     __ptext77:
 16464                           	opt callstack 0
 16465  00609A                     _INTERRUPT_Initialize:
 16466                           	opt callstack 0
 16467                           
 16468                           ; BSR set to: 63
 16469                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16470  00609A  52E6               	movf	postinc1,f,c
 16471                           
 16472                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 16473                           
 16474                           ;incstack = 0
 16475  00609C  8AD2               	bsf	16338,5,c	;volatile
 16476                           
 16477                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 16478  00609E  AED2               	btfss	16338,7,c	;volatile
 16479  0060A0  D003               	goto	u3840
 16480  0060A2  6A48               	clrf	btemp+11,c
 16481  0060A4  2A48               	incf	btemp+11,f,c
 16482  0060A6  D001               	goto	u3858
 16483  0060A8                     u3840:
 16484  0060A8  6A48               	clrf	btemp+11,c
 16485  0060AA                     u3858:
 16486                           
 16487                           ;stkvar	_state @ sp[(-1)+0]
 16488  0060AA  0EFF               	movlw	-1
 16489  0060AC  0060  F123  FFE3   	movff	btemp+11,plusw1
 16490                           
 16491                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 16492  0060B2  9ED2               	bcf	16338,7,c	;volatile
 16493                           
 16494                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 16495  0060B4  0E55               	movlw	85
 16496  0060B6  6ED4               	movwf	16340,c	;volatile
 16497                           
 16498                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 16499  0060B8  0EAA               	movlw	170
 16500  0060BA  6ED4               	movwf	16340,c	;volatile
 16501                           
 16502                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 16503  0060BC  90D4               	bcf	16340,0,c	;volatile
 16504                           
 16505                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 16506  0060BE  0138               	movlb	56	; () banked
 16507  0060C0  6B9F               	clrf	159,b	;volatile
 16508                           
 16509                           ; BSR set to: 56
 16510                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 16511  0060C2  6B9E               	clrf	158,b	;volatile
 16512                           
 16513                           ; BSR set to: 56
 16514                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 16515  0060C4  0E08               	movlw	8
 16516  0060C6  6F9D               	movwf	157,b	;volatile
 16517                           
 16518                           ; BSR set to: 56
 16519                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 16520  0060C8  0E55               	movlw	85
 16521  0060CA  6ED4               	movwf	16340,c	;volatile
 16522                           
 16523                           ; BSR set to: 56
 16524                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 16525  0060CC  0EAA               	movlw	170
 16526  0060CE  6ED4               	movwf	16340,c	;volatile
 16527                           
 16528                           ; BSR set to: 56
 16529                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 16530  0060D0  80D4               	bsf	16340,0,c	;volatile
 16531                           
 16532                           ; BSR set to: 56
 16533                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 16534                           ;stkvar	_state @ sp[(-1)+0]
 16535  0060D2  0EFF               	movlw	-1
 16536  0060D4  B0E3               	btfsc	plusw1,0,c
 16537  0060D6  D002               	bra	u3865
 16538  0060D8  9ED2               	bcf	16338,7,c	;volatile
 16539  0060DA  D001               	bra	u3866
 16540  0060DC                     u3865:
 16541  0060DC  8ED2               	bsf	16338,7,c	;volatile
 16542  0060DE                     u3866:
 16543                           
 16544                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 16545  0060DE  0139               	movlb	57	; () banked
 16546  0060E0  8782               	bsf	130,3,b	;volatile
 16547                           
 16548                           ; BSR set to: 57
 16549                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 16550  0060E2  8382               	bsf	130,1,b	;volatile
 16551                           
 16552                           ; BSR set to: 57
 16553                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 16554  0060E4  8182               	bsf	130,0,b	;volatile
 16555                           
 16556                           ; BSR set to: 57
 16557                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 16558  0060E6  8582               	bsf	130,2,b	;volatile
 16559                           
 16560                           ; BSR set to: 57
 16561                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 16562  0060E8  8786               	bsf	134,3,b	;volatile
 16563                           
 16564                           ; BSR set to: 57
 16565                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 16566  0060EA  8586               	bsf	134,2,b	;volatile
 16567                           
 16568                           ; BSR set to: 57
 16569                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 16570  0060EC  8983               	bsf	131,4,b	;volatile
 16571                           
 16572                           ; BSR set to: 57
 16573                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 16574  0060EE  8783               	bsf	131,3,b	;volatile
 16575                           
 16576                           ; BSR set to: 57
 16577                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 16578  0060F0  8181               	bsf	129,0,b	;volatile
 16579                           
 16580                           ; BSR set to: 57
 16581                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 16582  0060F2  8185               	bsf	133,0,b	;volatile
 16583                           
 16584                           ; BSR set to: 57
 16585                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 16586  0060F4  8B87               	bsf	135,5,b	;volatile
 16587                           
 16588                           ; BSR set to: 57
 16589                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 16590  0060F6  8189               	bsf	137,0,b	;volatile
 16591                           
 16592                           ; BSR set to: 57
 16593                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 16594  0060F8  8D88               	bsf	136,6,b	;volatile
 16595                           
 16596                           ; BSR set to: 57
 16597                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 16598  0060FA  8581               	bsf	129,2,b	;volatile
 16599                           
 16600                           ; BSR set to: 57
 16601                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 16602  0060FC  52E5               	movf	postdec1,f,c
 16603  0060FE  0012               	return		;funcret
 16604  006100                     __end_of_INTERRUPT_Initialize:
 16605                           	opt callstack 0
 16606                           
 16607 ;; *************** function _EXT_INT_Initialize *****************
 16608 ;; Defined at:
 16609 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 16610 ;; Parameters:    Size  Location     Type
 16611 ;;		None
 16612 ;; Auto vars:     Size  Location     Type
 16613 ;;		None
 16614 ;; Return value:  Size  Location     Type
 16615 ;;                  1  [STACK] void 
 16616 ;; Registers used:
 16617 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16618 ;; Tracked objects:
 16619 ;;		On entry : 3F/3F
 16620 ;;		On exit  : 3F/39
 16621 ;;		Unchanged: 0/0
 16622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16623 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16624 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16626 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16627 ;;Total ram usage:        0 bytes
 16628 ;; Hardware stack levels used:    1
 16629 ;; Hardware stack levels required when called:    4
 16630 ;; This function calls:
 16631 ;;		_INT0_SetInterruptHandler
 16632 ;;		_INT1_SetInterruptHandler
 16633 ;;		_INT2_SetInterruptHandler
 16634 ;; This function is called by:
 16635 ;;		_SYSTEM_Initialize
 16636 ;; This function uses a reentrant model
 16637 ;;
 16638                           
 16639                           	psect	text78
 16640  006472                     __ptext78:
 16641                           	opt callstack 0
 16642  006472                     _EXT_INT_Initialize:
 16643                           	opt callstack 25
 16644                           
 16645                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 16646                           
 16647                           ; BSR set to: 57
 16648                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16649                           ;incstack = 0
 16650  006472  0139               	movlb	57	; () banked
 16651  006474  91A1               	bcf	161,0,b	;volatile
 16652                           
 16653                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 16654  006476  90D2               	bcf	16338,0,c	;volatile
 16655                           
 16656                           ; BSR set to: 57
 16657                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 16658  006478  0E1A               	movlw	low _INT0_DefaultInterruptHandler
 16659  00647A  6EE6               	movwf	postinc1,c
 16660  00647C  0E6F               	movlw	high _INT0_DefaultInterruptHandler
 16661  00647E  6EE6               	movwf	postinc1,c
 16662  006480  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 16663  006482  6EE6               	movwf	postinc1,c
 16664  006484  ECAA  F035         	call	_INT0_SetInterruptHandler	;wreg free
 16665                           
 16666                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 16667  006488  0139               	movlb	57	; () banked
 16668  00648A  8191               	bsf	145,0,b	;volatile
 16669                           
 16670                           ; BSR set to: 57
 16671                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 16672  00648C  91A5               	bcf	165,0,b	;volatile
 16673                           
 16674                           ; BSR set to: 57
 16675                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 16676  00648E  92D2               	bcf	16338,1,c	;volatile
 16677                           
 16678                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 16679  006490  0E1C               	movlw	low _INT1_DefaultInterruptHandler
 16680  006492  6EE6               	movwf	postinc1,c
 16681  006494  0E6F               	movlw	high _INT1_DefaultInterruptHandler
 16682  006496  6EE6               	movwf	postinc1,c
 16683  006498  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 16684  00649A  6EE6               	movwf	postinc1,c
 16685  00649C  EC96  F035         	call	_INT1_SetInterruptHandler	;wreg free
 16686                           
 16687                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 16688  0064A0  0139               	movlb	57	; () banked
 16689  0064A2  8195               	bsf	149,0,b	;volatile
 16690                           
 16691                           ; BSR set to: 57
 16692                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 16693  0064A4  9BA7               	bcf	167,5,b	;volatile
 16694                           
 16695                           ; BSR set to: 57
 16696                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 16697  0064A6  94D2               	bcf	16338,2,c	;volatile
 16698                           
 16699                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 16700  0064A8  0E1E               	movlw	low _INT2_DefaultInterruptHandler
 16701  0064AA  6EE6               	movwf	postinc1,c
 16702  0064AC  0E6F               	movlw	high _INT2_DefaultInterruptHandler
 16703  0064AE  6EE6               	movwf	postinc1,c
 16704  0064B0  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 16705  0064B2  6EE6               	movwf	postinc1,c
 16706  0064B4  EC82  F035         	call	_INT2_SetInterruptHandler	;wreg free
 16707                           
 16708                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 16709  0064B8  0139               	movlb	57	; () banked
 16710  0064BA  8B97               	bsf	151,5,b	;volatile
 16711                           
 16712                           ; BSR set to: 57
 16713                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16714  0064BC  0012               	return		;funcret
 16715  0064BE                     __end_of_EXT_INT_Initialize:
 16716                           	opt callstack 0
 16717                           
 16718 ;; *************** function _INT2_SetInterruptHandler *****************
 16719 ;; Defined at:
 16720 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 16721 ;; Parameters:    Size  Location     Type
 16722 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16723 ;;		 -> INT2_DefaultInterruptHandler(1), 
 16724 ;; Auto vars:     Size  Location     Type
 16725 ;;		None
 16726 ;; Return value:  Size  Location     Type
 16727 ;;                  1  [STACK] void 
 16728 ;; Registers used:
 16729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16730 ;; Tracked objects:
 16731 ;;		On entry : 3F/39
 16732 ;;		On exit  : 0/0
 16733 ;;		Unchanged: 0/0
 16734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16739 ;;Total ram usage:        0 bytes
 16740 ;; Hardware stack levels used:    1
 16741 ;; Hardware stack levels required when called:    3
 16742 ;; This function calls:
 16743 ;;		Nothing
 16744 ;; This function is called by:
 16745 ;;		_EXT_INT_Initialize
 16746 ;; This function uses a reentrant model
 16747 ;;
 16748                           
 16749                           	psect	text79
 16750  006B04                     __ptext79:
 16751                           	opt callstack 0
 16752  006B04                     _INT2_SetInterruptHandler:
 16753                           	opt callstack 25
 16754                           
 16755                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 16756                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16757                           
 16758                           ; BSR set to: 57
 16759                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16760                           ;incstack = 0
 16761  006B04  50E1               	movf	fsr1l,w,c
 16762  006B06  0FFD               	addlw	-3
 16763  006B08  6ED9               	movwf	fsr2l,c
 16764  006B0A  50E2               	movf	fsr1h,w,c
 16765  006B0C  6EDA               	movwf	fsr2h,c
 16766  006B0E  0EFF               	movlw	255
 16767  006B10  22DA               	addwfc	fsr2h,f,c
 16768  006B12  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 16769  006B18  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 16770  006B1E  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 16771                           
 16772                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16773  006B24  52E5               	movf	postdec1,f,c
 16774  006B26  52E5               	movf	postdec1,f,c
 16775  006B28  52E5               	movf	postdec1,f,c
 16776  006B2A  0012               	return		;funcret
 16777  006B2C                     __end_of_INT2_SetInterruptHandler:
 16778                           	opt callstack 0
 16779                           
 16780 ;; *************** function _INT1_SetInterruptHandler *****************
 16781 ;; Defined at:
 16782 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 16783 ;; Parameters:    Size  Location     Type
 16784 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16785 ;;		 -> INT1_DefaultInterruptHandler(1), 
 16786 ;; Auto vars:     Size  Location     Type
 16787 ;;		None
 16788 ;; Return value:  Size  Location     Type
 16789 ;;                  1  [STACK] void 
 16790 ;; Registers used:
 16791 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16792 ;; Tracked objects:
 16793 ;;		On entry : 3F/39
 16794 ;;		On exit  : 0/0
 16795 ;;		Unchanged: 0/0
 16796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16801 ;;Total ram usage:        0 bytes
 16802 ;; Hardware stack levels used:    1
 16803 ;; Hardware stack levels required when called:    3
 16804 ;; This function calls:
 16805 ;;		Nothing
 16806 ;; This function is called by:
 16807 ;;		_EXT_INT_Initialize
 16808 ;; This function uses a reentrant model
 16809 ;;
 16810                           
 16811                           	psect	text80
 16812  006B2C                     __ptext80:
 16813                           	opt callstack 0
 16814  006B2C                     _INT1_SetInterruptHandler:
 16815                           	opt callstack 25
 16816                           
 16817                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 16818                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16819                           
 16820                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16821                           ;incstack = 0
 16822  006B2C  50E1               	movf	fsr1l,w,c
 16823  006B2E  0FFD               	addlw	-3
 16824  006B30  6ED9               	movwf	fsr2l,c
 16825  006B32  50E2               	movf	fsr1h,w,c
 16826  006B34  6EDA               	movwf	fsr2h,c
 16827  006B36  0EFF               	movlw	255
 16828  006B38  22DA               	addwfc	fsr2h,f,c
 16829  006B3A  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 16830  006B40  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 16831  006B46  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 16832                           
 16833                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16834  006B4C  52E5               	movf	postdec1,f,c
 16835  006B4E  52E5               	movf	postdec1,f,c
 16836  006B50  52E5               	movf	postdec1,f,c
 16837  006B52  0012               	return		;funcret
 16838  006B54                     __end_of_INT1_SetInterruptHandler:
 16839                           	opt callstack 0
 16840                           
 16841 ;; *************** function _INT0_SetInterruptHandler *****************
 16842 ;; Defined at:
 16843 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 16844 ;; Parameters:    Size  Location     Type
 16845 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 16846 ;;		 -> INT0_DefaultInterruptHandler(1), 
 16847 ;; Auto vars:     Size  Location     Type
 16848 ;;		None
 16849 ;; Return value:  Size  Location     Type
 16850 ;;                  1  [STACK] void 
 16851 ;; Registers used:
 16852 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 16853 ;; Tracked objects:
 16854 ;;		On entry : 3F/39
 16855 ;;		On exit  : 0/0
 16856 ;;		Unchanged: 0/0
 16857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16862 ;;Total ram usage:        0 bytes
 16863 ;; Hardware stack levels used:    1
 16864 ;; Hardware stack levels required when called:    3
 16865 ;; This function calls:
 16866 ;;		Nothing
 16867 ;; This function is called by:
 16868 ;;		_EXT_INT_Initialize
 16869 ;; This function uses a reentrant model
 16870 ;;
 16871                           
 16872                           	psect	text81
 16873  006B54                     __ptext81:
 16874                           	opt callstack 0
 16875  006B54                     _INT0_SetInterruptHandler:
 16876                           	opt callstack 25
 16877                           
 16878                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 16879                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 16880                           
 16881                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16882                           ;incstack = 0
 16883  006B54  50E1               	movf	fsr1l,w,c
 16884  006B56  0FFD               	addlw	-3
 16885  006B58  6ED9               	movwf	fsr2l,c
 16886  006B5A  50E2               	movf	fsr1h,w,c
 16887  006B5C  6EDA               	movwf	fsr2h,c
 16888  006B5E  0EFF               	movlw	255
 16889  006B60  22DA               	addwfc	fsr2h,f,c
 16890  006B62  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 16891  006B68  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 16892  006B6E  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 16893                           
 16894                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 16895  006B74  52E5               	movf	postdec1,f,c
 16896  006B76  52E5               	movf	postdec1,f,c
 16897  006B78  52E5               	movf	postdec1,f,c
 16898  006B7A  0012               	return		;funcret
 16899  006B7C                     __end_of_INT0_SetInterruptHandler:
 16900                           	opt callstack 0
 16901                           
 16902 ;; *************** function _DSM_Initialize *****************
 16903 ;; Defined at:
 16904 ;;		line 58 in file "mcc_generated_files/dsm.c"
 16905 ;; Parameters:    Size  Location     Type
 16906 ;;		None
 16907 ;; Auto vars:     Size  Location     Type
 16908 ;;		None
 16909 ;; Return value:  Size  Location     Type
 16910 ;;                  1  [STACK] void 
 16911 ;; Registers used:
 16912 ;;		wreg, status,2
 16913 ;; Tracked objects:
 16914 ;;		On entry : 0/3C
 16915 ;;		On exit  : 3F/3C
 16916 ;;		Unchanged: 0/0
 16917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16922 ;;Total ram usage:        0 bytes
 16923 ;; Hardware stack levels used:    1
 16924 ;; Hardware stack levels required when called:    3
 16925 ;; This function calls:
 16926 ;;		Nothing
 16927 ;; This function is called by:
 16928 ;;		_SYSTEM_Initialize
 16929 ;; This function uses a reentrant model
 16930 ;;
 16931                           
 16932                           	psect	text82
 16933  006DA8                     __ptext82:
 16934                           	opt callstack 0
 16935  006DA8                     _DSM_Initialize:
 16936                           	opt callstack 26
 16937                           
 16938                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 16939                           
 16940                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16941                           ;incstack = 0
 16942  006DA8  013C               	movlb	60	; () banked
 16943  006DAA  99FA               	bcf	250,4,b	;volatile
 16944                           
 16945                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 16946  006DAC  81FB               	bsf	251,0,b	;volatile
 16947                           
 16948                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 16949  006DAE  93FB               	bcf	251,1,b	;volatile
 16950                           
 16951                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 16952  006DB0  89FB               	bsf	251,4,b	;volatile
 16953                           
 16954                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 16955  006DB2  9BFB               	bcf	251,5,b	;volatile
 16956                           
 16957                           ; BSR set to: 60
 16958                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 16959  006DB4  0E13               	movlw	19
 16960  006DB6  6FFC               	movwf	252,b	;volatile
 16961                           
 16962                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 16963  006DB8  0E0E               	movlw	14
 16964  006DBA  6FFE               	movwf	254,b	;volatile
 16965                           
 16966                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 16967  006DBC  0E04               	movlw	4
 16968  006DBE  6FFD               	movwf	253,b	;volatile
 16969                           
 16970                           ; BSR set to: 60
 16971                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 16972  006DC0  8FFA               	bsf	250,7,b	;volatile
 16973                           
 16974                           ; BSR set to: 60
 16975                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 16976  006DC2  0012               	return		;funcret
 16977  006DC4                     __end_of_DSM_Initialize:
 16978                           	opt callstack 0
 16979                           
 16980 ;; *************** function _DMA1_Initialize *****************
 16981 ;; Defined at:
 16982 ;;		line 86 in file "mcc_generated_files/dma1.c"
 16983 ;; Parameters:    Size  Location     Type
 16984 ;;		None
 16985 ;; Auto vars:     Size  Location     Type
 16986 ;;		None
 16987 ;; Return value:  Size  Location     Type
 16988 ;;                  1  [STACK] void 
 16989 ;; Registers used:
 16990 ;;		wreg, status,2
 16991 ;; Tracked objects:
 16992 ;;		On entry : 3F/3D
 16993 ;;		On exit  : 3F/3B
 16994 ;;		Unchanged: 0/0
 16995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16999 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17000 ;;Total ram usage:        0 bytes
 17001 ;; Hardware stack levels used:    1
 17002 ;; Hardware stack levels required when called:    3
 17003 ;; This function calls:
 17004 ;;		Nothing
 17005 ;; This function is called by:
 17006 ;;		_SYSTEM_Initialize
 17007 ;; This function uses a reentrant model
 17008 ;;
 17009                           
 17010                           	psect	text83
 17011  006030                     __ptext83:
 17012                           	opt callstack 0
 17013  006030                     _DMA1_Initialize:
 17014                           	opt callstack 26
 17015                           
 17016                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 17017                           
 17018                           ; BSR set to: 60
 17019                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17020                           ;incstack = 0
 17021  006030  0E00               	movlw	0
 17022  006032  013B               	movlb	59	; () banked
 17023  006034  6FF9               	movwf	249,b	;volatile
 17024  006036  0E10               	movlw	16
 17025  006038  6FFA               	movwf	250,b	;volatile
 17026  00603A  0E00               	movlw	0
 17027  00603C  6FFB               	movwf	251,b	;volatile
 17028                           
 17029                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 17030  00603E  0E3D               	movlw	61
 17031  006040  6FF1               	movwf	241,b	;volatile
 17032  006042  0E11               	movlw	17
 17033  006044  6FF0               	movwf	240,b	;volatile
 17034                           
 17035                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 17036  006046  0E03               	movlw	3
 17037  006048  6FFD               	movwf	253,b	;volatile
 17038                           
 17039                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 17040  00604A  0E00               	movlw	0
 17041  00604C  6FF8               	movwf	248,b	;volatile
 17042  00604E  0E01               	movlw	1
 17043  006050  6FF7               	movwf	247,b	;volatile
 17044                           
 17045                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 17046  006052  0E00               	movlw	0
 17047  006054  6FEF               	movwf	239,b	;volatile
 17048  006056  0E01               	movlw	1
 17049  006058  6FEE               	movwf	238,b	;volatile
 17050                           
 17051                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 17052  00605A  0E15               	movlw	21
 17053  00605C  6FFF               	movwf	255,b	;volatile
 17054                           
 17055                           ; BSR set to: 59
 17056                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 17057  00605E  6BFE               	clrf	254,b	;volatile
 17058                           
 17059                           ; BSR set to: 59
 17060                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 17061  006060  0139               	movlb	57	; () banked
 17062  006062  93A2               	bcf	162,1,b	;volatile
 17063                           
 17064                           ; BSR set to: 57
 17065                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 17066  006064  91A2               	bcf	162,0,b	;volatile
 17067                           
 17068                           ; BSR set to: 57
 17069                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 17070  006066  97A2               	bcf	162,3,b	;volatile
 17071                           
 17072                           ; BSR set to: 57
 17073                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 17074  006068  95A2               	bcf	162,2,b	;volatile
 17075                           
 17076                           ; BSR set to: 57
 17077                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 17078  00606A  8392               	bsf	146,1,b	;volatile
 17079                           
 17080                           ; BSR set to: 57
 17081                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 17082  00606C  8192               	bsf	146,0,b	;volatile
 17083                           
 17084                           ; BSR set to: 57
 17085                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 17086  00606E  8792               	bsf	146,3,b	;volatile
 17087                           
 17088                           ; BSR set to: 57
 17089                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 17090  006070  8592               	bsf	146,2,b	;volatile
 17091                           
 17092                           ; BSR set to: 57
 17093                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 17094  006072  6BF1               	clrf	241,b	;volatile
 17095                           
 17096                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 17097  006074  0E01               	movlw	1
 17098  006076  6FF2               	movwf	242,b	;volatile
 17099                           
 17100                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 17101  006078  0E04               	movlw	4
 17102  00607A  6FF3               	movwf	243,b	;volatile
 17103                           
 17104                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 17105  00607C  0E02               	movlw	2
 17106  00607E  6FF4               	movwf	244,b	;volatile
 17107                           
 17108                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 17109  006080  0E03               	movlw	3
 17110  006082  6FF7               	movwf	247,b	;volatile
 17111  006084  9ED2               	bcf	16338,7,c	;# 
 17112  006086  0139               	banksel	14831	;# 
 17113  006088  0E55               	movlw	85	;# 
 17114  00608A  6FEF               	movwf	14831,b	;# 
 17115  00608C  0EAA               	movlw	170	;# 
 17116  00608E  6FEF               	movwf	14831,b	;# 
 17117  006090  81EF               	bsf	14831,0,b	;# 
 17118  006092  8ED2               	bsf	16338,7,c	;# 
 17119                           
 17120                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 17121  006094  013B               	movlb	59	; () banked
 17122  006096  6BFC               	clrf	252,b	;volatile
 17123                           
 17124                           ; BSR set to: 59
 17125                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17126  006098  0012               	return		;funcret
 17127  00609A                     __end_of_DMA1_Initialize:
 17128                           	opt callstack 0
 17129                           
 17130 ;; *************** function _CLKREF_Initialize *****************
 17131 ;; Defined at:
 17132 ;;		line 58 in file "mcc_generated_files/clkref.c"
 17133 ;; Parameters:    Size  Location     Type
 17134 ;;		None
 17135 ;; Auto vars:     Size  Location     Type
 17136 ;;		None
 17137 ;; Return value:  Size  Location     Type
 17138 ;;                  1  [STACK] void 
 17139 ;; Registers used:
 17140 ;;		wreg, status,2
 17141 ;; Tracked objects:
 17142 ;;		On entry : 3F/3B
 17143 ;;		On exit  : 3F/3C
 17144 ;;		Unchanged: 0/0
 17145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17147 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17149 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17150 ;;Total ram usage:        0 bytes
 17151 ;; Hardware stack levels used:    1
 17152 ;; Hardware stack levels required when called:    3
 17153 ;; This function calls:
 17154 ;;		Nothing
 17155 ;; This function is called by:
 17156 ;;		_SYSTEM_Initialize
 17157 ;; This function uses a reentrant model
 17158 ;;
 17159                           
 17160                           	psect	text84
 17161  006EBA                     __ptext84:
 17162                           	opt callstack 0
 17163  006EBA                     _CLKREF_Initialize:
 17164                           	opt callstack 26
 17165                           
 17166                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 17167                           
 17168                           ; BSR set to: 59
 17169                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17170                           ;incstack = 0
 17171  006EBA  013C               	movlb	60	; () banked
 17172  006EBC  6BE6               	clrf	230,b	;volatile
 17173                           
 17174                           ; BSR set to: 60
 17175                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 17176  006EBE  0E94               	movlw	148
 17177  006EC0  6FE5               	movwf	229,b	;volatile
 17178                           
 17179                           ; BSR set to: 60
 17180                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 17181  006EC2  0012               	return		;funcret
 17182  006EC4                     __end_of_CLKREF_Initialize:
 17183                           	opt callstack 0
 17184                           
 17185 ;; *************** function _CLC1_Initialize *****************
 17186 ;; Defined at:
 17187 ;;		line 58 in file "mcc_generated_files/clc1.c"
 17188 ;; Parameters:    Size  Location     Type
 17189 ;;		None
 17190 ;; Auto vars:     Size  Location     Type
 17191 ;;		None
 17192 ;; Return value:  Size  Location     Type
 17193 ;;                  1  [STACK] void 
 17194 ;; Registers used:
 17195 ;;		wreg, status,2
 17196 ;; Tracked objects:
 17197 ;;		On entry : 0/39
 17198 ;;		On exit  : 3F/3C
 17199 ;;		Unchanged: 0/0
 17200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17201 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17202 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17204 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17205 ;;Total ram usage:        0 bytes
 17206 ;; Hardware stack levels used:    1
 17207 ;; Hardware stack levels required when called:    3
 17208 ;; This function calls:
 17209 ;;		Nothing
 17210 ;; This function is called by:
 17211 ;;		_SYSTEM_Initialize
 17212 ;; This function uses a reentrant model
 17213 ;;
 17214                           
 17215                           	psect	text85
 17216  006C8A                     __ptext85:
 17217                           	opt callstack 0
 17218  006C8A                     _CLC1_Initialize:
 17219                           	opt callstack 26
 17220                           
 17221                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 17222                           
 17223                           ; BSR set to: 60
 17224                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17225                           ;incstack = 0
 17226  006C8A  013C               	movlb	60	; () banked
 17227  006C8C  6B75               	clrf	117,b	;volatile
 17228                           
 17229                           ; BSR set to: 60
 17230                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 17231  006C8E  0E04               	movlw	4
 17232  006C90  6F76               	movwf	118,b	;volatile
 17233                           
 17234                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 17235  006C92  0E04               	movlw	4
 17236  006C94  6F77               	movwf	119,b	;volatile
 17237                           
 17238                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 17239  006C96  0E04               	movlw	4
 17240  006C98  6F78               	movwf	120,b	;volatile
 17241                           
 17242                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 17243  006C9A  0E04               	movlw	4
 17244  006C9C  6F79               	movwf	121,b	;volatile
 17245                           
 17246                           ; BSR set to: 60
 17247                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 17248  006C9E  6B7A               	clrf	122,b	;volatile
 17249                           
 17250                           ; BSR set to: 60
 17251                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 17252  006CA0  6B7B               	clrf	123,b	;volatile
 17253                           
 17254                           ; BSR set to: 60
 17255                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 17256  006CA2  6B7C               	clrf	124,b	;volatile
 17257                           
 17258                           ; BSR set to: 60
 17259                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 17260  006CA4  6B7D               	clrf	125,b	;volatile
 17261                           
 17262                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 17263  006CA6  0E81               	movlw	129
 17264  006CA8  6F74               	movwf	116,b	;volatile
 17265                           
 17266                           ; BSR set to: 60
 17267                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17268  006CAA  0012               	return		;funcret
 17269  006CAC                     __end_of_CLC1_Initialize:
 17270                           	opt callstack 0
 17271                           
 17272 ;; *************** function _ADCC_Initialize *****************
 17273 ;; Defined at:
 17274 ;;		line 64 in file "mcc_generated_files/adcc.c"
 17275 ;; Parameters:    Size  Location     Type
 17276 ;;		None
 17277 ;; Auto vars:     Size  Location     Type
 17278 ;;		None
 17279 ;; Return value:  Size  Location     Type
 17280 ;;                  1  [STACK] void 
 17281 ;; Registers used:
 17282 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 17283 ;; Tracked objects:
 17284 ;;		On entry : 3F/39
 17285 ;;		On exit  : 0/0
 17286 ;;		Unchanged: 0/0
 17287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17292 ;;Total ram usage:        0 bytes
 17293 ;; Hardware stack levels used:    1
 17294 ;; Hardware stack levels required when called:    4
 17295 ;; This function calls:
 17296 ;;		_ADCC_SetADIInterruptHandler
 17297 ;; This function is called by:
 17298 ;;		_SYSTEM_Initialize
 17299 ;; This function uses a reentrant model
 17300 ;;
 17301                           
 17302                           	psect	text86
 17303  0064BE                     __ptext86:
 17304                           	opt callstack 0
 17305  0064BE                     _ADCC_Initialize:
 17306                           	opt callstack 25
 17307                           
 17308                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 17309                           
 17310                           ; BSR set to: 60
 17311                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17312                           ;incstack = 0
 17313  0064BE  013E               	movlb	62	; () banked
 17314  0064C0  6BDE               	clrf	222,b	;volatile
 17315                           
 17316                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 17317  0064C2  6BDF               	clrf	223,b	;volatile
 17318                           
 17319                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 17320  0064C4  6BE0               	clrf	224,b	;volatile
 17321                           
 17322                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 17323  0064C6  6BE1               	clrf	225,b	;volatile
 17324                           
 17325                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 17326  0064C8  6BE4               	clrf	228,b	;volatile
 17327                           
 17328                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 17329  0064CA  6BE5               	clrf	229,b	;volatile
 17330                           
 17331                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 17332  0064CC  6BEA               	clrf	234,b	;volatile
 17333                           
 17334                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 17335  0064CE  6BEC               	clrf	236,b	;volatile
 17336                           
 17337                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 17338  0064D0  6BF1               	clrf	241,b	;volatile
 17339                           
 17340                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 17341  0064D2  6BF3               	clrf	243,b	;volatile
 17342                           
 17343                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 17344  0064D4  6BF4               	clrf	244,b	;volatile
 17345                           
 17346                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 17347  0064D6  6BF5               	clrf	245,b	;volatile
 17348                           
 17349                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 17350  0064D8  6BF6               	clrf	246,b	;volatile
 17351                           
 17352                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 17353  0064DA  6BF7               	clrf	247,b	;volatile
 17354                           
 17355                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 17356  0064DC  6BF9               	clrf	249,b	;volatile
 17357                           
 17358                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 17359  0064DE  6BFA               	clrf	250,b	;volatile
 17360                           
 17361                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 17362  0064E0  6BFB               	clrf	251,b	;volatile
 17363                           
 17364                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 17365  0064E2  6BFC               	clrf	252,b	;volatile
 17366                           
 17367                           ; BSR set to: 62
 17368                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 17369  0064E4  0E02               	movlw	2
 17370  0064E6  6FFD               	movwf	253,b	;volatile
 17371                           
 17372                           ; BSR set to: 62
 17373                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 17374  0064E8  6BFE               	clrf	254,b	;volatile
 17375                           
 17376                           ; BSR set to: 62
 17377                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 17378  0064EA  6BFF               	clrf	255,b	;volatile
 17379                           
 17380                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 17381  0064EC  0E94               	movlw	148
 17382  0064EE  6FF8               	movwf	248,b	;volatile
 17383                           
 17384                           ; BSR set to: 62
 17385                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 17386  0064F0  0139               	movlb	57	; () banked
 17387  0064F2  95A1               	bcf	161,2,b	;volatile
 17388                           
 17389                           ; BSR set to: 57
 17390                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 17391  0064F4  8591               	bsf	145,2,b	;volatile
 17392                           
 17393                           ; BSR set to: 57
 17394                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 17395  0064F6  0E20               	movlw	low _ADCC_DefaultInterruptHandler
 17396  0064F8  6EE6               	movwf	postinc1,c
 17397  0064FA  0E6F               	movlw	high _ADCC_DefaultInterruptHandler
 17398  0064FC  6EE6               	movwf	postinc1,c
 17399  0064FE  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 17400  006500  6EE6               	movwf	postinc1,c
 17401  006502  ECBE  F035         	call	_ADCC_SetADIInterruptHandler	;wreg free
 17402                           
 17403                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 17404  006506  0012               	return		;funcret
 17405  006508                     __end_of_ADCC_Initialize:
 17406                           	opt callstack 0
 17407                           
 17408 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 17409 ;; Defined at:
 17410 ;;		line 316 in file "mcc_generated_files/adcc.c"
 17411 ;; Parameters:    Size  Location     Type
 17412 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 17413 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 17414 ;; Auto vars:     Size  Location     Type
 17415 ;;		None
 17416 ;; Return value:  Size  Location     Type
 17417 ;;                  1  [STACK] void 
 17418 ;; Registers used:
 17419 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 17420 ;; Tracked objects:
 17421 ;;		On entry : 3F/39
 17422 ;;		On exit  : 0/0
 17423 ;;		Unchanged: 0/0
 17424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17428 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17429 ;;Total ram usage:        0 bytes
 17430 ;; Hardware stack levels used:    1
 17431 ;; Hardware stack levels required when called:    3
 17432 ;; This function calls:
 17433 ;;		Nothing
 17434 ;; This function is called by:
 17435 ;;		_ADCC_Initialize
 17436 ;; This function uses a reentrant model
 17437 ;;
 17438                           
 17439                           	psect	text87
 17440  006B7C                     __ptext87:
 17441                           	opt callstack 0
 17442  006B7C                     _ADCC_SetADIInterruptHandler:
 17443                           	opt callstack 25
 17444                           
 17445                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 17446                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 17447                           
 17448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17449                           ;incstack = 0
 17450  006B7C  50E1               	movf	fsr1l,w,c
 17451  006B7E  0FFD               	addlw	-3
 17452  006B80  6ED9               	movwf	fsr2l,c
 17453  006B82  50E2               	movf	fsr1h,w,c
 17454  006B84  6EDA               	movwf	fsr2h,c
 17455  006B86  0EFF               	movlw	255
 17456  006B88  22DA               	addwfc	fsr2h,f,c
 17457  006B8A  006F FF78  F0EE    	movff	postinc2,_ADCC_ADI_InterruptHandler
 17458  006B90  006F FF78  F0EF    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 17459  006B96  006F FF74  F0F0    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 17460                           
 17461                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 17462  006B9C  52E5               	movf	postdec1,f,c
 17463  006B9E  52E5               	movf	postdec1,f,c
 17464  006BA0  52E5               	movf	postdec1,f,c
 17465  006BA2  0012               	return		;funcret
 17466  006BA4                     __end_of_ADCC_SetADIInterruptHandler:
 17467                           	opt callstack 0
 17468                           
 17469 ;; *************** function _INT0_ISR *****************
 17470 ;; Defined at:
 17471 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 17472 ;; Parameters:    Size  Location     Type
 17473 ;;		None
 17474 ;; Auto vars:     Size  Location     Type
 17475 ;;		None
 17476 ;; Return value:  Size  Location     Type
 17477 ;;                  1    wreg      void 
 17478 ;; Registers used:
 17479 ;;		wreg, status,2, status,0, pclath, tosl
 17480 ;; Tracked objects:
 17481 ;;		On entry : 0/0
 17482 ;;		On exit  : 0/0
 17483 ;;		Unchanged: 0/0
 17484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17489 ;;Total ram usage:        0 bytes
 17490 ;; Hardware stack levels used:    1
 17491 ;; Hardware stack levels required when called:    2
 17492 ;; This function calls:
 17493 ;;		_INT0_CallBack
 17494 ;; This function is called by:
 17495 ;;		Interrupt level 2
 17496 ;; This function uses a non-reentrant model
 17497 ;;
 17498                           
 17499                           	psect	text88
 17500  006E8C                     __ptext88:
 17501                           	opt callstack 0
 17502  006E8C                     _INT0_ISR:
 17503                           	opt callstack 17
 17504                           
 17505                           ;incstack = 0
 17506  006E8C  EE13  F22E         	lfsr	1,___inthi_sp
 17507                           
 17508                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 17509  006E90  0139               	movlb	57	; () banked
 17510  006E92  91A1               	bcf	161,0,b	;volatile
 17511                           
 17512                           ; BSR set to: 57
 17513                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 17514  006E94  EC56  F036         	call	_INT0_CallBack	;wreg free
 17515  006E98  0011               	retfie		f
 17516  006E9A                     __end_of_INT0_ISR:
 17517                           	opt callstack 0
 17518                           
 17519 ;; *************** function _INT0_CallBack *****************
 17520 ;; Defined at:
 17521 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 17522 ;; Parameters:    Size  Location     Type
 17523 ;;		None
 17524 ;; Auto vars:     Size  Location     Type
 17525 ;;		None
 17526 ;; Return value:  Size  Location     Type
 17527 ;;                  1  [STACK] void 
 17528 ;; Registers used:
 17529 ;;		wreg, status,2, status,0, pclath, tosl
 17530 ;; Tracked objects:
 17531 ;;		On entry : 3F/39
 17532 ;;		On exit  : 0/0
 17533 ;;		Unchanged: 0/0
 17534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17536 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17538 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17539 ;;Total ram usage:        0 bytes
 17540 ;; Hardware stack levels used:    1
 17541 ;; Hardware stack levels required when called:    1
 17542 ;; This function calls:
 17543 ;;		Absolute function
 17544 ;;		_INT0_DefaultInterruptHandler
 17545 ;; This function is called by:
 17546 ;;		_INT0_ISR
 17547 ;; This function uses a reentrant model
 17548 ;;
 17549                           
 17550                           	psect	text89
 17551  006CAC                     __ptext89:
 17552                           	opt callstack 0
 17553  006CAC                     _INT0_CallBack:
 17554                           	opt callstack 17
 17555                           
 17556                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 17557                           
 17558                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17559                           ;incstack = 0
 17560  006CAC  501A               	movf	_INT0_InterruptHandler,w,c
 17561  006CAE  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 17562  006CB0  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 17563  006CB2  B4D8               	btfsc	status,2,c
 17564  006CB4  0012               	return	
 17565                           
 17566                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 17567  006CB6  D801               	call	u148_48
 17568  006CB8  0012               	return	
 17569  006CBA                     u148_48:
 17570  006CBA  0005               	push	
 17571  006CBC  6EFA               	movwf	pclath,c
 17572  006CBE  501A               	movf	_INT0_InterruptHandler,w,c
 17573  006CC0  6EFD               	movwf	tosl,c
 17574  006CC2  501B               	movf	_INT0_InterruptHandler+1,w,c
 17575  006CC4  6EFE               	movwf	tosh,c
 17576  006CC6  501C               	movf	_INT0_InterruptHandler+2,w,c
 17577  006CC8  6EFF               	movwf	tosu,c
 17578  006CCA  50FA               	movf	pclath,w,c
 17579  006CCC  0012               	return		;indir
 17580  006CCE                     __end_of_INT0_CallBack:
 17581                           	opt callstack 0
 17582                           
 17583 ;; *************** function _INT0_DefaultInterruptHandler *****************
 17584 ;; Defined at:
 17585 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 17586 ;; Parameters:    Size  Location     Type
 17587 ;;		None
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;		None
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  1  [STACK] void 
 17592 ;; Registers used:
 17593 ;;		None
 17594 ;; Tracked objects:
 17595 ;;		On entry : 0/39
 17596 ;;		On exit  : 0/0
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17603 ;;Total ram usage:        0 bytes
 17604 ;; Hardware stack levels used:    1
 17605 ;; This function calls:
 17606 ;;		Nothing
 17607 ;; This function is called by:
 17608 ;;		_EXT_INT_Initialize
 17609 ;;		_INT0_CallBack
 17610 ;; This function uses a reentrant model
 17611 ;;
 17612                           
 17613                           	psect	text90
 17614  006F1A                     __ptext90:
 17615                           	opt callstack 0
 17616  006F1A                     _INT0_DefaultInterruptHandler:
 17617                           	opt callstack 17
 17618                           
 17619                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17620                           
 17621                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17622                           ;incstack = 0
 17623  006F1A  0012               	return		;funcret
 17624  006F1C                     __end_of_INT0_DefaultInterruptHandler:
 17625                           	opt callstack 0
 17626                           
 17627 ;; *************** function _INT1_ISR *****************
 17628 ;; Defined at:
 17629 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 17630 ;; Parameters:    Size  Location     Type
 17631 ;;		None
 17632 ;; Auto vars:     Size  Location     Type
 17633 ;;		None
 17634 ;; Return value:  Size  Location     Type
 17635 ;;                  1    wreg      void 
 17636 ;; Registers used:
 17637 ;;		wreg, status,2, status,0, pclath, tosl
 17638 ;; Tracked objects:
 17639 ;;		On entry : 0/0
 17640 ;;		On exit  : 0/0
 17641 ;;		Unchanged: 0/0
 17642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17647 ;;Total ram usage:        0 bytes
 17648 ;; Hardware stack levels used:    1
 17649 ;; Hardware stack levels required when called:    2
 17650 ;; This function calls:
 17651 ;;		_INT1_CallBack
 17652 ;; This function is called by:
 17653 ;;		Interrupt level 2
 17654 ;; This function uses a non-reentrant model
 17655 ;;
 17656                           
 17657                           	psect	text91
 17658  006E9C                     __ptext91:
 17659                           	opt callstack 0
 17660  006E9C                     _INT1_ISR:
 17661                           	opt callstack 17
 17662                           
 17663                           ;incstack = 0
 17664  006E9C  EE13  F22E         	lfsr	1,___inthi_sp
 17665                           
 17666                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 17667  006EA0  0139               	movlb	57	; () banked
 17668  006EA2  91A5               	bcf	165,0,b	;volatile
 17669                           
 17670                           ; BSR set to: 57
 17671                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 17672  006EA4  EC67  F036         	call	_INT1_CallBack	;wreg free
 17673  006EA8  0011               	retfie		f
 17674  006EAA                     __end_of_INT1_ISR:
 17675                           	opt callstack 0
 17676                           
 17677 ;; *************** function _INT1_CallBack *****************
 17678 ;; Defined at:
 17679 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 17680 ;; Parameters:    Size  Location     Type
 17681 ;;		None
 17682 ;; Auto vars:     Size  Location     Type
 17683 ;;		None
 17684 ;; Return value:  Size  Location     Type
 17685 ;;                  1  [STACK] void 
 17686 ;; Registers used:
 17687 ;;		wreg, status,2, status,0, pclath, tosl
 17688 ;; Tracked objects:
 17689 ;;		On entry : 3F/39
 17690 ;;		On exit  : 0/0
 17691 ;;		Unchanged: 0/0
 17692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17697 ;;Total ram usage:        0 bytes
 17698 ;; Hardware stack levels used:    1
 17699 ;; Hardware stack levels required when called:    1
 17700 ;; This function calls:
 17701 ;;		Absolute function
 17702 ;;		_INT1_DefaultInterruptHandler
 17703 ;; This function is called by:
 17704 ;;		_INT1_ISR
 17705 ;; This function uses a reentrant model
 17706 ;;
 17707                           
 17708                           	psect	text92
 17709  006CCE                     __ptext92:
 17710                           	opt callstack 0
 17711  006CCE                     _INT1_CallBack:
 17712                           	opt callstack 17
 17713                           
 17714                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 17715                           
 17716                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17717                           ;incstack = 0
 17718  006CCE  5017               	movf	_INT1_InterruptHandler,w,c
 17719  006CD0  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 17720  006CD2  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 17721  006CD4  B4D8               	btfsc	status,2,c
 17722  006CD6  0012               	return	
 17723                           
 17724                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 17725  006CD8  D801               	call	u150_48
 17726  006CDA  0012               	return	
 17727  006CDC                     u150_48:
 17728  006CDC  0005               	push	
 17729  006CDE  6EFA               	movwf	pclath,c
 17730  006CE0  5017               	movf	_INT1_InterruptHandler,w,c
 17731  006CE2  6EFD               	movwf	tosl,c
 17732  006CE4  5018               	movf	_INT1_InterruptHandler+1,w,c
 17733  006CE6  6EFE               	movwf	tosh,c
 17734  006CE8  5019               	movf	_INT1_InterruptHandler+2,w,c
 17735  006CEA  6EFF               	movwf	tosu,c
 17736  006CEC  50FA               	movf	pclath,w,c
 17737  006CEE  0012               	return		;indir
 17738  006CF0                     __end_of_INT1_CallBack:
 17739                           	opt callstack 0
 17740                           
 17741 ;; *************** function _INT1_DefaultInterruptHandler *****************
 17742 ;; Defined at:
 17743 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 17744 ;; Parameters:    Size  Location     Type
 17745 ;;		None
 17746 ;; Auto vars:     Size  Location     Type
 17747 ;;		None
 17748 ;; Return value:  Size  Location     Type
 17749 ;;                  1  [STACK] void 
 17750 ;; Registers used:
 17751 ;;		None
 17752 ;; Tracked objects:
 17753 ;;		On entry : 0/39
 17754 ;;		On exit  : 0/0
 17755 ;;		Unchanged: 0/0
 17756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17758 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17760 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17761 ;;Total ram usage:        0 bytes
 17762 ;; Hardware stack levels used:    1
 17763 ;; This function calls:
 17764 ;;		Nothing
 17765 ;; This function is called by:
 17766 ;;		_EXT_INT_Initialize
 17767 ;;		_INT1_CallBack
 17768 ;; This function uses a reentrant model
 17769 ;;
 17770                           
 17771                           	psect	text93
 17772  006F1C                     __ptext93:
 17773                           	opt callstack 0
 17774  006F1C                     _INT1_DefaultInterruptHandler:
 17775                           	opt callstack 17
 17776                           
 17777                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17778                           
 17779                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17780                           ;incstack = 0
 17781  006F1C  0012               	return		;funcret
 17782  006F1E                     __end_of_INT1_DefaultInterruptHandler:
 17783                           	opt callstack 0
 17784                           
 17785 ;; *************** function _INT2_ISR *****************
 17786 ;; Defined at:
 17787 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 17788 ;; Parameters:    Size  Location     Type
 17789 ;;		None
 17790 ;; Auto vars:     Size  Location     Type
 17791 ;;		None
 17792 ;; Return value:  Size  Location     Type
 17793 ;;                  1    wreg      void 
 17794 ;; Registers used:
 17795 ;;		wreg, status,2, status,0, pclath, tosl
 17796 ;; Tracked objects:
 17797 ;;		On entry : 0/0
 17798 ;;		On exit  : 0/0
 17799 ;;		Unchanged: 0/0
 17800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17805 ;;Total ram usage:        0 bytes
 17806 ;; Hardware stack levels used:    1
 17807 ;; Hardware stack levels required when called:    2
 17808 ;; This function calls:
 17809 ;;		_INT2_CallBack
 17810 ;; This function is called by:
 17811 ;;		Interrupt level 2
 17812 ;; This function uses a non-reentrant model
 17813 ;;
 17814                           
 17815                           	psect	text94
 17816  006EAC                     __ptext94:
 17817                           	opt callstack 0
 17818  006EAC                     _INT2_ISR:
 17819                           	opt callstack 17
 17820                           
 17821                           ;incstack = 0
 17822  006EAC  EE13  F22E         	lfsr	1,___inthi_sp
 17823                           
 17824                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 17825  006EB0  0139               	movlb	57	; () banked
 17826  006EB2  9BA7               	bcf	167,5,b	;volatile
 17827                           
 17828                           ; BSR set to: 57
 17829                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 17830  006EB4  EC78  F036         	call	_INT2_CallBack	;wreg free
 17831  006EB8  0011               	retfie		f
 17832  006EBA                     __end_of_INT2_ISR:
 17833                           	opt callstack 0
 17834                           
 17835 ;; *************** function _INT2_CallBack *****************
 17836 ;; Defined at:
 17837 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 17838 ;; Parameters:    Size  Location     Type
 17839 ;;		None
 17840 ;; Auto vars:     Size  Location     Type
 17841 ;;		None
 17842 ;; Return value:  Size  Location     Type
 17843 ;;                  1  [STACK] void 
 17844 ;; Registers used:
 17845 ;;		wreg, status,2, status,0, pclath, tosl
 17846 ;; Tracked objects:
 17847 ;;		On entry : 3F/39
 17848 ;;		On exit  : 0/0
 17849 ;;		Unchanged: 0/0
 17850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17855 ;;Total ram usage:        0 bytes
 17856 ;; Hardware stack levels used:    1
 17857 ;; Hardware stack levels required when called:    1
 17858 ;; This function calls:
 17859 ;;		Absolute function
 17860 ;;		_INT2_DefaultInterruptHandler
 17861 ;; This function is called by:
 17862 ;;		_INT2_ISR
 17863 ;; This function uses a reentrant model
 17864 ;;
 17865                           
 17866                           	psect	text95
 17867  006CF0                     __ptext95:
 17868                           	opt callstack 0
 17869  006CF0                     _INT2_CallBack:
 17870                           	opt callstack 17
 17871                           
 17872                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 17873                           
 17874                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17875                           ;incstack = 0
 17876  006CF0  5014               	movf	_INT2_InterruptHandler,w,c
 17877  006CF2  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 17878  006CF4  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 17879  006CF6  B4D8               	btfsc	status,2,c
 17880  006CF8  0012               	return	
 17881                           
 17882                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 17883  006CFA  D801               	call	u152_48
 17884  006CFC  0012               	return	
 17885  006CFE                     u152_48:
 17886  006CFE  0005               	push	
 17887  006D00  6EFA               	movwf	pclath,c
 17888  006D02  5014               	movf	_INT2_InterruptHandler,w,c
 17889  006D04  6EFD               	movwf	tosl,c
 17890  006D06  5015               	movf	_INT2_InterruptHandler+1,w,c
 17891  006D08  6EFE               	movwf	tosh,c
 17892  006D0A  5016               	movf	_INT2_InterruptHandler+2,w,c
 17893  006D0C  6EFF               	movwf	tosu,c
 17894  006D0E  50FA               	movf	pclath,w,c
 17895  006D10  0012               	return		;indir
 17896  006D12                     __end_of_INT2_CallBack:
 17897                           	opt callstack 0
 17898                           
 17899 ;; *************** function _INT2_DefaultInterruptHandler *****************
 17900 ;; Defined at:
 17901 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 17902 ;; Parameters:    Size  Location     Type
 17903 ;;		None
 17904 ;; Auto vars:     Size  Location     Type
 17905 ;;		None
 17906 ;; Return value:  Size  Location     Type
 17907 ;;                  1  [STACK] void 
 17908 ;; Registers used:
 17909 ;;		None
 17910 ;; Tracked objects:
 17911 ;;		On entry : 0/39
 17912 ;;		On exit  : 0/0
 17913 ;;		Unchanged: 0/0
 17914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17919 ;;Total ram usage:        0 bytes
 17920 ;; Hardware stack levels used:    1
 17921 ;; This function calls:
 17922 ;;		Nothing
 17923 ;; This function is called by:
 17924 ;;		_EXT_INT_Initialize
 17925 ;;		_INT2_CallBack
 17926 ;; This function uses a reentrant model
 17927 ;;
 17928                           
 17929                           	psect	text96
 17930  006F1E                     __ptext96:
 17931                           	opt callstack 0
 17932  006F1E                     _INT2_DefaultInterruptHandler:
 17933                           	opt callstack 17
 17934                           
 17935                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17936                           
 17937                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17938                           ;incstack = 0
 17939  006F1E  0012               	return		;funcret
 17940  006F20                     __end_of_INT2_DefaultInterruptHandler:
 17941                           	opt callstack 0
 17942                           
 17943 ;; *************** function _Default_ISR *****************
 17944 ;; Defined at:
 17945 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 17946 ;; Parameters:    Size  Location     Type
 17947 ;;		None
 17948 ;; Auto vars:     Size  Location     Type
 17949 ;;		None
 17950 ;; Return value:  Size  Location     Type
 17951 ;;                  1    wreg      void 
 17952 ;; Registers used:
 17953 ;;		None
 17954 ;; Tracked objects:
 17955 ;;		On entry : 0/0
 17956 ;;		On exit  : 0/0
 17957 ;;		Unchanged: 0/0
 17958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17963 ;;Total ram usage:        0 bytes
 17964 ;; Hardware stack levels used:    1
 17965 ;; This function calls:
 17966 ;;		Nothing
 17967 ;; This function is called by:
 17968 ;;		Interrupt level 2
 17969 ;; This function uses a non-reentrant model
 17970 ;;
 17971                           
 17972                           	psect	text97
 17973  006F14                     __ptext97:
 17974                           	opt callstack 0
 17975  006F14                     _Default_ISR:
 17976                           	opt callstack 19
 17977                           
 17978                           ;incstack = 0
 17979  006F14  EE13  F22E         	lfsr	1,___inthi_sp
 17980  006F18  0011               	retfie		f
 17981  006F1A                     __end_of_Default_ISR:
 17982                           	opt callstack 0
 17983                           
 17984 ;; *************** function _ADCC_ISR *****************
 17985 ;; Defined at:
 17986 ;;		line 307 in file "mcc_generated_files/adcc.c"
 17987 ;; Parameters:    Size  Location     Type
 17988 ;;		None
 17989 ;; Auto vars:     Size  Location     Type
 17990 ;;		None
 17991 ;; Return value:  Size  Location     Type
 17992 ;;                  1    wreg      void 
 17993 ;; Registers used:
 17994 ;;		wreg, status,2, status,0, pclath, tosl
 17995 ;; Tracked objects:
 17996 ;;		On entry : 0/0
 17997 ;;		On exit  : 0/0
 17998 ;;		Unchanged: 0/0
 17999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18004 ;;Total ram usage:        0 bytes
 18005 ;; Hardware stack levels used:    1
 18006 ;; Hardware stack levels required when called:    1
 18007 ;; This function calls:
 18008 ;;		Absolute function
 18009 ;;		_ADCC_DefaultInterruptHandler
 18010 ;; This function is called by:
 18011 ;;		Interrupt level 2
 18012 ;; This function uses a non-reentrant model
 18013 ;;
 18014                           
 18015                           	psect	text98
 18016  00684C                     __ptext98:
 18017                           	opt callstack 0
 18018  00684C                     _ADCC_ISR:
 18019                           	opt callstack 18
 18020                           
 18021                           ;incstack = 0
 18022  00684C  EE13  F22E         	lfsr	1,___inthi_sp
 18023                           
 18024                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 18025  006850  0139               	movlb	57	; () banked
 18026  006852  95A1               	bcf	161,2,b	;volatile
 18027                           
 18028                           ; BSR set to: 57
 18029                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 18030  006854  0100               	movlb	0	; () banked
 18031  006856  51EE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 18032  006858  11EF               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 18033  00685A  11F0               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 18034  00685C  B4D8               	btfsc	status,2,c
 18035  00685E  0011               	retfie		f
 18036                           
 18037                           ; BSR set to: 0
 18038                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 18039  006860  D801               	call	i2u491_48
 18040  006862  0011               	retfie		f
 18041  006864                     i2u491_48:
 18042  006864  0005               	push	
 18043  006866  6EFA               	movwf	pclath,c
 18044  006868  51EE               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 18045  00686A  6EFD               	movwf	tosl,c
 18046  00686C  51EF               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 18047  00686E  6EFE               	movwf	tosh,c
 18048  006870  51F0               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 18049  006872  6EFF               	movwf	tosu,c
 18050  006874  50FA               	movf	pclath,w,c
 18051  006876  0012               	return		;indir
 18052  006878                     __end_of_ADCC_ISR:
 18053                           	opt callstack 0
 18054                           
 18055 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 18056 ;; Defined at:
 18057 ;;		line 320 in file "mcc_generated_files/adcc.c"
 18058 ;; Parameters:    Size  Location     Type
 18059 ;;		None
 18060 ;; Auto vars:     Size  Location     Type
 18061 ;;		None
 18062 ;; Return value:  Size  Location     Type
 18063 ;;                  1  [STACK] void 
 18064 ;; Registers used:
 18065 ;;		None
 18066 ;; Tracked objects:
 18067 ;;		On entry : 3F/0
 18068 ;;		On exit  : 0/0
 18069 ;;		Unchanged: 0/0
 18070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18072 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18074 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18075 ;;Total ram usage:        0 bytes
 18076 ;; Hardware stack levels used:    1
 18077 ;; This function calls:
 18078 ;;		Nothing
 18079 ;; This function is called by:
 18080 ;;		_ADCC_Initialize
 18081 ;;		_ADCC_ISR
 18082 ;; This function uses a reentrant model
 18083 ;;
 18084                           
 18085                           	psect	text99
 18086  006F20                     __ptext99:
 18087                           	opt callstack 0
 18088  006F20                     _ADCC_DefaultInterruptHandler:
 18089                           	opt callstack 18
 18090                           
 18091                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 18092                           
 18093                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18094                           ;incstack = 0
 18095  006F20  0012               	return		;funcret
 18096  006F22                     __end_of_ADCC_DefaultInterruptHandler:
 18097                           	opt callstack 0
 18098                           
 18099 ;; *************** function _UART1_tx_vect_isr *****************
 18100 ;; Defined at:
 18101 ;;		line 197 in file "mcc_generated_files/uart1.c"
 18102 ;; Parameters:    Size  Location     Type
 18103 ;;		None
 18104 ;; Auto vars:     Size  Location     Type
 18105 ;;		None
 18106 ;; Return value:  Size  Location     Type
 18107 ;;                  1    wreg      void 
 18108 ;; Registers used:
 18109 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 18110 ;; Tracked objects:
 18111 ;;		On entry : 0/0
 18112 ;;		On exit  : 0/0
 18113 ;;		Unchanged: 0/0
 18114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18115 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18116 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18117 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18118 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18119 ;;Total ram usage:        0 bytes
 18120 ;; Hardware stack levels used:    1
 18121 ;; Hardware stack levels required when called:    1
 18122 ;; This function calls:
 18123 ;;		Absolute function
 18124 ;;		_UART1_Transmit_ISR
 18125 ;; This function is called by:
 18126 ;;		Interrupt level 2
 18127 ;; This function uses a non-reentrant model
 18128 ;;
 18129                           
 18130                           	psect	text100
 18131  006BA4                     __ptext100:
 18132                           	opt callstack 0
 18133  006BA4                     _UART1_tx_vect_isr:
 18134                           	opt callstack 18
 18135                           
 18136                           ;incstack = 0
 18137  006BA4  EE13  F22E         	lfsr	1,___inthi_sp
 18138                           
 18139                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 18140  006BA8  5008               	movf	_UART1_TxInterruptHandler,w,c
 18141  006BAA  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 18142  006BAC  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 18143  006BAE  B4D8               	btfsc	status,2,c
 18144  006BB0  0011               	retfie		f
 18145                           
 18146                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 18147  006BB2  D801               	call	i2u493_48
 18148  006BB4  0011               	retfie		f
 18149  006BB6                     i2u493_48:
 18150  006BB6  0005               	push	
 18151  006BB8  6EFA               	movwf	pclath,c
 18152  006BBA  5008               	movf	_UART1_TxInterruptHandler,w,c
 18153  006BBC  6EFD               	movwf	tosl,c
 18154  006BBE  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 18155  006BC0  6EFE               	movwf	tosh,c
 18156  006BC2  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 18157  006BC4  6EFF               	movwf	tosu,c
 18158  006BC6  50FA               	movf	pclath,w,c
 18159  006BC8  0012               	return		;indir
 18160  006BCA                     __end_of_UART1_tx_vect_isr:
 18161                           	opt callstack 0
 18162                           
 18163 ;; *************** function _UART1_Transmit_ISR *****************
 18164 ;; Defined at:
 18165 ;;		line 211 in file "mcc_generated_files/uart1.c"
 18166 ;; Parameters:    Size  Location     Type
 18167 ;;		None
 18168 ;; Auto vars:     Size  Location     Type
 18169 ;;		None
 18170 ;; Return value:  Size  Location     Type
 18171 ;;                  1  [STACK] void 
 18172 ;; Registers used:
 18173 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18174 ;; Tracked objects:
 18175 ;;		On entry : 0/0
 18176 ;;		On exit  : 3B/39
 18177 ;;		Unchanged: 0/0
 18178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18183 ;;Total ram usage:        0 bytes
 18184 ;; Hardware stack levels used:    1
 18185 ;; This function calls:
 18186 ;;		Nothing
 18187 ;; This function is called by:
 18188 ;;		_UART1_Initialize
 18189 ;;		_UART1_tx_vect_isr
 18190 ;; This function uses a reentrant model
 18191 ;;
 18192                           
 18193                           	psect	text101
 18194  006878                     __ptext101:
 18195                           	opt callstack 0
 18196  006878                     _UART1_Transmit_ISR:
 18197                           	opt callstack 18
 18198                           
 18199                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 18200                           
 18201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18202                           ;incstack = 0
 18203  006878  0E40               	movlw	64
 18204  00687A  603A               	cpfslt	_uart1TxBufferRemaining,c
 18205  00687C  D010               	goto	l597
 18206                           
 18207                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 18208  00687E  0E40               	movlw	low _uart1TxBuffer
 18209  006880  243B               	addwf	_uart1TxTail,w,c	;volatile
 18210  006882  6ED9               	movwf	fsr2l,c
 18211  006884  6ADA               	clrf	fsr2h,c
 18212  006886  0E03               	movlw	high _uart1TxBuffer
 18213  006888  22DA               	addwfc	fsr2h,f,c
 18214  00688A  50DF               	movf	indf2,w,c
 18215  00688C  013D               	movlb	61	; () banked
 18216  00688E  6FEA               	movwf	234,b	;volatile
 18217                           
 18218                           ; BSR set to: 61
 18219  006890  2A3B               	incf	_uart1TxTail,f,c	;volatile
 18220                           
 18221                           ; BSR set to: 61
 18222                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 18223  006892  0E3F               	movlw	63
 18224  006894  643B               	cpfsgt	_uart1TxTail,c
 18225  006896  D001               	goto	l7188
 18226                           
 18227                           ; BSR set to: 61
 18228                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 18229  006898  6A3B               	clrf	_uart1TxTail,c	;volatile
 18230  00689A                     l7188:
 18231                           
 18232                           ; BSR set to: 61
 18233                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 18234  00689A  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 18235                           
 18236                           ;mcc_generated_files/uart1.c: 220:  } else {
 18237  00689C  0012               	return	
 18238  00689E                     l597:
 18239                           
 18240                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 18241  00689E  0139               	movlb	57	; () banked
 18242  0068A0  9993               	bcf	147,4,b	;volatile
 18243                           
 18244                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 18245  0068A2  0012               	return		;funcret
 18246  0068A4                     __end_of_UART1_Transmit_ISR:
 18247                           	opt callstack 0
 18248                           
 18249 ;; *************** function _UART1_rx_vect_isr *****************
 18250 ;; Defined at:
 18251 ;;		line 204 in file "mcc_generated_files/uart1.c"
 18252 ;; Parameters:    Size  Location     Type
 18253 ;;		None
 18254 ;; Auto vars:     Size  Location     Type
 18255 ;;		None
 18256 ;; Return value:  Size  Location     Type
 18257 ;;                  1    wreg      void 
 18258 ;; Registers used:
 18259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 18260 ;; Tracked objects:
 18261 ;;		On entry : 0/0
 18262 ;;		On exit  : 0/0
 18263 ;;		Unchanged: 0/0
 18264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18269 ;;Total ram usage:        0 bytes
 18270 ;; Hardware stack levels used:    1
 18271 ;; Hardware stack levels required when called:    1
 18272 ;; This function calls:
 18273 ;;		Absolute function
 18274 ;;		_UART1_Receive_ISR
 18275 ;; This function is called by:
 18276 ;;		Interrupt level 2
 18277 ;; This function uses a non-reentrant model
 18278 ;;
 18279                           
 18280                           	psect	text102
 18281  006BCC                     __ptext102:
 18282                           	opt callstack 0
 18283  006BCC                     _UART1_rx_vect_isr:
 18284                           	opt callstack 18
 18285                           
 18286                           ;incstack = 0
 18287  006BCC  EE13  F22E         	lfsr	1,___inthi_sp
 18288                           
 18289                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 18290  006BD0  500B               	movf	_UART1_RxInterruptHandler,w,c
 18291  006BD2  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 18292  006BD4  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 18293  006BD6  B4D8               	btfsc	status,2,c
 18294  006BD8  0011               	retfie		f
 18295                           
 18296                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 18297  006BDA  D801               	call	i2u495_48
 18298  006BDC  0011               	retfie		f
 18299  006BDE                     i2u495_48:
 18300  006BDE  0005               	push	
 18301  006BE0  6EFA               	movwf	pclath,c
 18302  006BE2  500B               	movf	_UART1_RxInterruptHandler,w,c
 18303  006BE4  6EFD               	movwf	tosl,c
 18304  006BE6  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 18305  006BE8  6EFE               	movwf	tosh,c
 18306  006BEA  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 18307  006BEC  6EFF               	movwf	tosu,c
 18308  006BEE  50FA               	movf	pclath,w,c
 18309  006BF0  0012               	return		;indir
 18310  006BF2                     __end_of_UART1_rx_vect_isr:
 18311                           	opt callstack 0
 18312                           
 18313 ;; *************** function _UART1_Receive_ISR *****************
 18314 ;; Defined at:
 18315 ;;		line 227 in file "mcc_generated_files/uart1.c"
 18316 ;; Parameters:    Size  Location     Type
 18317 ;;		None
 18318 ;; Auto vars:     Size  Location     Type
 18319 ;;		None
 18320 ;; Return value:  Size  Location     Type
 18321 ;;                  1  [STACK] void 
 18322 ;; Registers used:
 18323 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18324 ;; Tracked objects:
 18325 ;;		On entry : 0/0
 18326 ;;		On exit  : 0/0
 18327 ;;		Unchanged: 0/0
 18328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18330 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18332 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18333 ;;Total ram usage:        0 bytes
 18334 ;; Hardware stack levels used:    1
 18335 ;; This function calls:
 18336 ;;		Nothing
 18337 ;; This function is called by:
 18338 ;;		_UART1_Initialize
 18339 ;;		_UART1_rx_vect_isr
 18340 ;; This function uses a reentrant model
 18341 ;;
 18342                           
 18343                           	psect	text103
 18344  006D12                     __ptext103:
 18345                           	opt callstack 0
 18346  006D12                     _UART1_Receive_ISR:
 18347                           	opt callstack 18
 18348                           
 18349                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 18350                           
 18351                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18352                           ;incstack = 0
 18353  006D12  0E40               	movlw	low _uart1RxBuffer
 18354  006D14  2439               	addwf	_uart1RxHead,w,c	;volatile
 18355  006D16  6ED9               	movwf	fsr2l,c
 18356  006D18  6ADA               	clrf	fsr2h,c
 18357  006D1A  0E02               	movlw	high _uart1RxBuffer
 18358  006D1C  22DA               	addwfc	fsr2h,f,c
 18359  006D1E  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 18360  006D24  2A39               	incf	_uart1RxHead,f,c	;volatile
 18361                           
 18362                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 18363  006D26  0E3F               	movlw	63
 18364  006D28  6439               	cpfsgt	_uart1RxHead,c
 18365  006D2A  D001               	goto	l7198
 18366                           
 18367                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 18368  006D2C  6A39               	clrf	_uart1RxHead,c	;volatile
 18369  006D2E                     l7198:
 18370                           
 18371                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 18372  006D2E  2A37               	incf	_uart1RxCount,f,c	;volatile
 18373                           
 18374                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 18375  006D30  0012               	return		;funcret
 18376  006D32                     __end_of_UART1_Receive_ISR:
 18377                           	opt callstack 0
 18378                           
 18379 ;; *************** function _UART2_tx_vect_isr *****************
 18380 ;; Defined at:
 18381 ;;		line 195 in file "mcc_generated_files/uart2.c"
 18382 ;; Parameters:    Size  Location     Type
 18383 ;;		None
 18384 ;; Auto vars:     Size  Location     Type
 18385 ;;		None
 18386 ;; Return value:  Size  Location     Type
 18387 ;;                  1    wreg      void 
 18388 ;; Registers used:
 18389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 18390 ;; Tracked objects:
 18391 ;;		On entry : 0/0
 18392 ;;		On exit  : 0/0
 18393 ;;		Unchanged: 0/0
 18394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18399 ;;Total ram usage:        0 bytes
 18400 ;; Hardware stack levels used:    1
 18401 ;; Hardware stack levels required when called:    1
 18402 ;; This function calls:
 18403 ;;		Absolute function
 18404 ;;		_UART2_Transmit_ISR
 18405 ;; This function is called by:
 18406 ;;		Interrupt level 2
 18407 ;; This function uses a non-reentrant model
 18408 ;;
 18409                           
 18410                           	psect	text104
 18411  006BF4                     __ptext104:
 18412                           	opt callstack 0
 18413  006BF4                     _UART2_tx_vect_isr:
 18414                           	opt callstack 18
 18415                           
 18416                           ;incstack = 0
 18417  006BF4  EE13  F22E         	lfsr	1,___inthi_sp
 18418                           
 18419                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 18420  006BF8  500E               	movf	_UART2_TxInterruptHandler,w,c
 18421  006BFA  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 18422  006BFC  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 18423  006BFE  B4D8               	btfsc	status,2,c
 18424  006C00  0011               	retfie		f
 18425                           
 18426                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 18427  006C02  D801               	call	i2u497_48
 18428  006C04  0011               	retfie		f
 18429  006C06                     i2u497_48:
 18430  006C06  0005               	push	
 18431  006C08  6EFA               	movwf	pclath,c
 18432  006C0A  500E               	movf	_UART2_TxInterruptHandler,w,c
 18433  006C0C  6EFD               	movwf	tosl,c
 18434  006C0E  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 18435  006C10  6EFE               	movwf	tosh,c
 18436  006C12  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 18437  006C14  6EFF               	movwf	tosu,c
 18438  006C16  50FA               	movf	pclath,w,c
 18439  006C18  0012               	return		;indir
 18440  006C1A                     __end_of_UART2_tx_vect_isr:
 18441                           	opt callstack 0
 18442                           
 18443 ;; *************** function _UART2_Transmit_ISR *****************
 18444 ;; Defined at:
 18445 ;;		line 213 in file "mcc_generated_files/uart2.c"
 18446 ;; Parameters:    Size  Location     Type
 18447 ;;		None
 18448 ;; Auto vars:     Size  Location     Type
 18449 ;;		None
 18450 ;; Return value:  Size  Location     Type
 18451 ;;                  1  [STACK] void 
 18452 ;; Registers used:
 18453 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18454 ;; Tracked objects:
 18455 ;;		On entry : 0/0
 18456 ;;		On exit  : 3B/39
 18457 ;;		Unchanged: 0/0
 18458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18462 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18463 ;;Total ram usage:        0 bytes
 18464 ;; Hardware stack levels used:    1
 18465 ;; This function calls:
 18466 ;;		Nothing
 18467 ;; This function is called by:
 18468 ;;		_UART2_Initialize
 18469 ;;		_UART2_tx_vect_isr
 18470 ;; This function uses a reentrant model
 18471 ;;
 18472                           
 18473                           	psect	text105
 18474  0068A4                     __ptext105:
 18475                           	opt callstack 0
 18476  0068A4                     _UART2_Transmit_ISR:
 18477                           	opt callstack 18
 18478                           
 18479                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 18480                           
 18481                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18482                           ;incstack = 0
 18483  0068A4  0E40               	movlw	64
 18484  0068A6  6034               	cpfslt	_uart2TxBufferRemaining,c
 18485  0068A8  D010               	goto	l717
 18486                           
 18487                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 18488  0068AA  0E00               	movlw	low _uart2TxBuffer
 18489  0068AC  2435               	addwf	_uart2TxTail,w,c	;volatile
 18490  0068AE  6ED9               	movwf	fsr2l,c
 18491  0068B0  6ADA               	clrf	fsr2h,c
 18492  0068B2  0E03               	movlw	high _uart2TxBuffer
 18493  0068B4  22DA               	addwfc	fsr2h,f,c
 18494  0068B6  50DF               	movf	indf2,w,c
 18495  0068B8  013D               	movlb	61	; () banked
 18496  0068BA  6FD2               	movwf	210,b	;volatile
 18497                           
 18498                           ; BSR set to: 61
 18499  0068BC  2A35               	incf	_uart2TxTail,f,c	;volatile
 18500                           
 18501                           ; BSR set to: 61
 18502                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 18503  0068BE  0E3F               	movlw	63
 18504  0068C0  6435               	cpfsgt	_uart2TxTail,c
 18505  0068C2  D001               	goto	l7210
 18506                           
 18507                           ; BSR set to: 61
 18508                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 18509  0068C4  6A35               	clrf	_uart2TxTail,c	;volatile
 18510  0068C6                     l7210:
 18511                           
 18512                           ; BSR set to: 61
 18513                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 18514  0068C6  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 18515                           
 18516                           ;mcc_generated_files/uart2.c: 224:     }
 18517  0068C8  0012               	return	
 18518  0068CA                     l717:
 18519                           
 18520                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 18521  0068CA  0139               	movlb	57	; () banked
 18522  0068CC  9796               	bcf	150,3,b	;volatile
 18523                           
 18524                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 18525  0068CE  0012               	return		;funcret
 18526  0068D0                     __end_of_UART2_Transmit_ISR:
 18527                           	opt callstack 0
 18528                           
 18529 ;; *************** function _UART2_rx_vect_isr *****************
 18530 ;; Defined at:
 18531 ;;		line 203 in file "mcc_generated_files/uart2.c"
 18532 ;; Parameters:    Size  Location     Type
 18533 ;;		None
 18534 ;; Auto vars:     Size  Location     Type
 18535 ;;		None
 18536 ;; Return value:  Size  Location     Type
 18537 ;;                  1    wreg      void 
 18538 ;; Registers used:
 18539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 18540 ;; Tracked objects:
 18541 ;;		On entry : 0/0
 18542 ;;		On exit  : 0/0
 18543 ;;		Unchanged: 0/0
 18544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18549 ;;Total ram usage:        0 bytes
 18550 ;; Hardware stack levels used:    1
 18551 ;; Hardware stack levels required when called:    1
 18552 ;; This function calls:
 18553 ;;		Absolute function
 18554 ;;		_UART2_Receive_ISR
 18555 ;; This function is called by:
 18556 ;;		Interrupt level 2
 18557 ;; This function uses a non-reentrant model
 18558 ;;
 18559                           
 18560                           	psect	text106
 18561  006C1C                     __ptext106:
 18562                           	opt callstack 0
 18563  006C1C                     _UART2_rx_vect_isr:
 18564                           	opt callstack 18
 18565                           
 18566                           ;incstack = 0
 18567  006C1C  EE13  F22E         	lfsr	1,___inthi_sp
 18568                           
 18569                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 18570  006C20  5011               	movf	_UART2_RxInterruptHandler,w,c
 18571  006C22  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 18572  006C24  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 18573  006C26  B4D8               	btfsc	status,2,c
 18574  006C28  0011               	retfie		f
 18575                           
 18576                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 18577  006C2A  D801               	call	i2u499_48
 18578  006C2C  0011               	retfie		f
 18579  006C2E                     i2u499_48:
 18580  006C2E  0005               	push	
 18581  006C30  6EFA               	movwf	pclath,c
 18582  006C32  5011               	movf	_UART2_RxInterruptHandler,w,c
 18583  006C34  6EFD               	movwf	tosl,c
 18584  006C36  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 18585  006C38  6EFE               	movwf	tosh,c
 18586  006C3A  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 18587  006C3C  6EFF               	movwf	tosu,c
 18588  006C3E  50FA               	movf	pclath,w,c
 18589  006C40  0012               	return		;indir
 18590  006C42                     __end_of_UART2_rx_vect_isr:
 18591                           	opt callstack 0
 18592                           
 18593 ;; *************** function _UART2_Receive_ISR *****************
 18594 ;; Defined at:
 18595 ;;		line 233 in file "mcc_generated_files/uart2.c"
 18596 ;; Parameters:    Size  Location     Type
 18597 ;;		None
 18598 ;; Auto vars:     Size  Location     Type
 18599 ;;		None
 18600 ;; Return value:  Size  Location     Type
 18601 ;;                  1  [STACK] void 
 18602 ;; Registers used:
 18603 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18604 ;; Tracked objects:
 18605 ;;		On entry : 0/0
 18606 ;;		On exit  : 0/0
 18607 ;;		Unchanged: 0/0
 18608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18613 ;;Total ram usage:        0 bytes
 18614 ;; Hardware stack levels used:    1
 18615 ;; This function calls:
 18616 ;;		Nothing
 18617 ;; This function is called by:
 18618 ;;		_UART2_Initialize
 18619 ;;		_UART2_rx_vect_isr
 18620 ;; This function uses a reentrant model
 18621 ;;
 18622                           
 18623                           	psect	text107
 18624  006D32                     __ptext107:
 18625                           	opt callstack 0
 18626  006D32                     _UART2_Receive_ISR:
 18627                           	opt callstack 18
 18628                           
 18629                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 18630                           
 18631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18632                           ;incstack = 0
 18633  006D32  0E00               	movlw	low _uart2RxBuffer
 18634  006D34  2433               	addwf	_uart2RxHead,w,c	;volatile
 18635  006D36  6ED9               	movwf	fsr2l,c
 18636  006D38  6ADA               	clrf	fsr2h,c
 18637  006D3A  0E02               	movlw	high _uart2RxBuffer
 18638  006D3C  22DA               	addwfc	fsr2h,f,c
 18639  006D3E  006F F743 FFDF     	movff	15824,indf2	;volatile
 18640  006D44  2A33               	incf	_uart2RxHead,f,c	;volatile
 18641                           
 18642                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 18643  006D46  0E3F               	movlw	63
 18644  006D48  6433               	cpfsgt	_uart2RxHead,c
 18645  006D4A  D001               	goto	l7220
 18646                           
 18647                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 18648  006D4C  6A33               	clrf	_uart2RxHead,c	;volatile
 18649  006D4E                     l7220:
 18650                           
 18651                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 18652  006D4E  2A31               	incf	_uart2RxCount,f,c	;volatile
 18653                           
 18654                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 18655  006D50  0012               	return		;funcret
 18656  006D52                     __end_of_UART2_Receive_ISR:
 18657                           	opt callstack 0
 18658                           
 18659 ;; *************** function _TMR6_ISR *****************
 18660 ;; Defined at:
 18661 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 18662 ;; Parameters:    Size  Location     Type
 18663 ;;		None
 18664 ;; Auto vars:     Size  Location     Type
 18665 ;;		None
 18666 ;; Return value:  Size  Location     Type
 18667 ;;                  1    wreg      void 
 18668 ;; Registers used:
 18669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 18670 ;; Tracked objects:
 18671 ;;		On entry : 0/0
 18672 ;;		On exit  : 0/0
 18673 ;;		Unchanged: 0/0
 18674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18677 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18679 ;;Total ram usage:        1 bytes
 18680 ;; Hardware stack levels used:    1
 18681 ;; Hardware stack levels required when called:    2
 18682 ;; This function calls:
 18683 ;;		_TMR6_CallBack
 18684 ;; This function is called by:
 18685 ;;		Interrupt level 2
 18686 ;; This function uses a non-reentrant model
 18687 ;;
 18688                           
 18689                           	psect	text108
 18690  006DF8                     __ptext108:
 18691                           	opt callstack 0
 18692  006DF8                     _TMR6_ISR:
 18693                           	opt callstack 17
 18694                           
 18695                           ;incstack = 0
 18696  006DF8  0060  F0F4  F05E   	movff	btemp,??_TMR6_ISR
 18697  006DFE  EE13  F22E         	lfsr	1,___inthi_sp
 18698                           
 18699                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 18700  006E02  0139               	movlb	57	; () banked
 18701  006E04  91A9               	bcf	169,0,b	;volatile
 18702                           
 18703                           ; BSR set to: 57
 18704                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 18705  006E06  EC21  F036         	call	_TMR6_CallBack	;wreg free
 18706  006E0A  0060  F178  F03D   	movff	??_TMR6_ISR,btemp
 18707  006E10  0011               	retfie		f
 18708  006E12                     __end_of_TMR6_ISR:
 18709                           	opt callstack 0
 18710                           
 18711 ;; *************** function _TMR6_CallBack *****************
 18712 ;; Defined at:
 18713 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 18714 ;; Parameters:    Size  Location     Type
 18715 ;;		None
 18716 ;; Auto vars:     Size  Location     Type
 18717 ;;		None
 18718 ;; Return value:  Size  Location     Type
 18719 ;;                  1  [STACK] void 
 18720 ;; Registers used:
 18721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 18722 ;; Tracked objects:
 18723 ;;		On entry : 3F/39
 18724 ;;		On exit  : 0/0
 18725 ;;		Unchanged: 0/0
 18726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18731 ;;Total ram usage:        0 bytes
 18732 ;; Hardware stack levels used:    1
 18733 ;; Hardware stack levels required when called:    1
 18734 ;; This function calls:
 18735 ;;		Absolute function
 18736 ;;		_TMR6_DefaultInterruptHandler
 18737 ;; This function is called by:
 18738 ;;		_TMR6_ISR
 18739 ;; This function uses a reentrant model
 18740 ;;
 18741                           
 18742                           	psect	text109
 18743  006C42                     __ptext109:
 18744                           	opt callstack 0
 18745  006C42                     _TMR6_CallBack:
 18746                           	opt callstack 17
 18747                           
 18748                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 18749                           
 18750                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18751                           ;incstack = 0
 18752  006C42  0100               	movlb	0	; () banked
 18753  006C44  51EB               	movf	_TMR6_InterruptHandler& (0+255),w,b
 18754  006C46  11EC               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 18755  006C48  11ED               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 18756  006C4A  B4D8               	btfsc	status,2,c
 18757  006C4C  0012               	return	
 18758                           
 18759                           ; BSR set to: 0
 18760                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 18761  006C4E  D801               	call	u418_48
 18762  006C50  0012               	return	
 18763  006C52                     u418_48:
 18764  006C52  0005               	push	
 18765  006C54  6EFA               	movwf	pclath,c
 18766  006C56  51EB               	movf	_TMR6_InterruptHandler& (0+255),w,b
 18767  006C58  6EFD               	movwf	tosl,c
 18768  006C5A  51EC               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 18769  006C5C  6EFE               	movwf	tosh,c
 18770  006C5E  51ED               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 18771  006C60  6EFF               	movwf	tosu,c
 18772  006C62  50FA               	movf	pclath,w,c
 18773  006C64  0012               	return		;indir
 18774  006C66                     __end_of_TMR6_CallBack:
 18775                           	opt callstack 0
 18776                           
 18777 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 18778 ;; Defined at:
 18779 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 18780 ;; Parameters:    Size  Location     Type
 18781 ;;		None
 18782 ;; Auto vars:     Size  Location     Type
 18783 ;;  i               1  [STACK] unsigned char 
 18784 ;; Return value:  Size  Location     Type
 18785 ;;                  1  [STACK] void 
 18786 ;; Registers used:
 18787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 18788 ;; Tracked objects:
 18789 ;;		On entry : 3F/0
 18790 ;;		On exit  : 0/0
 18791 ;;		Unchanged: 0/0
 18792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18794 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18796 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18797 ;;Total ram usage:        0 bytes
 18798 ;; Hardware stack levels used:    1
 18799 ;; This function calls:
 18800 ;;		Nothing
 18801 ;; This function is called by:
 18802 ;;		_TMR6_Initialize
 18803 ;;		_TMR6_CallBack
 18804 ;; This function uses a reentrant model
 18805 ;;
 18806                           
 18807                           	psect	text110
 18808  0063D4                     __ptext110:
 18809                           	opt callstack 0
 18810  0063D4                     _TMR6_DefaultInterruptHandler:
 18811                           	opt callstack 0
 18812                           
 18813                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18814  0063D4  52E6               	movf	postinc1,f,c
 18815                           
 18816                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 18817                           ;stkvar	_i @ sp[(-1)+0]
 18818                           
 18819                           ;incstack = 0
 18820  0063D6  0EFF               	movlw	-1
 18821  0063D8  6AE3               	clrf	plusw1,c
 18822  0063DA                     l6714:
 18823                           
 18824                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 18825                           ;stkvar	_i @ sp[(-1)+0]
 18826  0063DA  0EFF               	movlw	-1
 18827  0063DC  50E3               	movf	plusw1,w,c
 18828  0063DE  0D02               	mullw	2
 18829  0063E0  0EC0               	movlw	low _tickCount
 18830  0063E2  24F3               	addwf	prodl,w,c
 18831  0063E4  6ED9               	movwf	fsr2l,c
 18832  0063E6  0E01               	movlw	high _tickCount
 18833  0063E8  20F4               	addwfc	prodh,w,c
 18834  0063EA  6EDA               	movwf	fsr2h,c
 18835  0063EC  50DE               	movf	postinc2,w,c
 18836  0063EE  10DE               	iorwf	postinc2,w,c
 18837  0063F0  B4D8               	btfsc	status,2,c
 18838  0063F2  D00C               	goto	l6718
 18839                           
 18840                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 18841                           ;stkvar	_i @ sp[(-1)+0]
 18842  0063F4  0EFF               	movlw	-1
 18843  0063F6  50E3               	movf	plusw1,w,c
 18844  0063F8  0D02               	mullw	2
 18845  0063FA  0EC0               	movlw	low _tickCount
 18846  0063FC  24F3               	addwf	prodl,w,c
 18847  0063FE  6ED9               	movwf	fsr2l,c
 18848  006400  0E01               	movlw	high _tickCount
 18849  006402  20F4               	addwfc	prodh,w,c
 18850  006404  6EDA               	movwf	fsr2h,c
 18851  006406  06DE               	decf	postinc2,f,c
 18852  006408  0E00               	movlw	0
 18853  00640A  5ADD               	subwfb	postdec2,f,c
 18854  00640C                     l6718:
 18855                           
 18856                           ;mcc_generated_files/tmr6.c: 207:  }
 18857                           ;stkvar	_i @ sp[(-1)+0]
 18858  00640C  0EFF               	movlw	-1
 18859  00640E  2AE3               	incf	plusw1,f,c
 18860                           
 18861                           ;stkvar	_i @ sp[(-1)+0]
 18862  006410  0EFF               	movlw	-1
 18863  006412  006F FF8C  F03D    	movff	plusw1,btemp
 18864  006418  0E06               	movlw	6
 18865  00641A  643D               	cpfsgt	btemp,c
 18866  00641C  D7DE               	goto	l6714
 18867                           
 18868                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 18869  00641E  52E5               	movf	postdec1,f,c
 18870  006420  0012               	return		;funcret
 18871  006422                     __end_of_TMR6_DefaultInterruptHandler:
 18872                           	opt callstack 0
 18873                           
 18874 ;; *************** function _DMA1_DMASCNT_ISR *****************
 18875 ;; Defined at:
 18876 ;;		line 126 in file "mcc_generated_files/dma1.c"
 18877 ;; Parameters:    Size  Location     Type
 18878 ;;		None
 18879 ;; Auto vars:     Size  Location     Type
 18880 ;;		None
 18881 ;; Return value:  Size  Location     Type
 18882 ;;                  1    wreg      void 
 18883 ;; Registers used:
 18884 ;;		None
 18885 ;; Tracked objects:
 18886 ;;		On entry : 0/0
 18887 ;;		On exit  : 3F/0
 18888 ;;		Unchanged: 0/0
 18889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18894 ;;Total ram usage:        0 bytes
 18895 ;; Hardware stack levels used:    1
 18896 ;; This function calls:
 18897 ;;		Nothing
 18898 ;; This function is called by:
 18899 ;;		Interrupt level 2
 18900 ;; This function uses a non-reentrant model
 18901 ;;
 18902                           
 18903                           	psect	text111
 18904  006E6C                     __ptext111:
 18905                           	opt callstack 0
 18906  006E6C                     _DMA1_DMASCNT_ISR:
 18907                           	opt callstack 19
 18908                           
 18909                           ;incstack = 0
 18910  006E6C  EE13  F22E         	lfsr	1,___inthi_sp
 18911                           
 18912                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 18913  006E70  0139               	movlb	57	; () banked
 18914  006E72  91A2               	bcf	162,0,b	;volatile
 18915                           
 18916                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 18917  006E74  0100               	movlb	0	; () banked
 18918  006E76  97D1               	bcf	_spi_link& (0+255),3,b	;volatile
 18919                           
 18920                           ; BSR set to: 0
 18921                           
 18922                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE1 = 0; } while(0);
 18923  006E78  92BE               	bcf	16318,1,c	;volatile
 18924                           
 18925                           ; BSR set to: 0
 18926  006E7A  0011               	retfie		f
 18927  006E7C                     __end_of_DMA1_DMASCNT_ISR:
 18928                           	opt callstack 0
 18929                           
 18930 ;; *************** function _DMA1_DMADCNT_ISR *****************
 18931 ;; Defined at:
 18932 ;;		line 134 in file "mcc_generated_files/dma1.c"
 18933 ;; Parameters:    Size  Location     Type
 18934 ;;		None
 18935 ;; Auto vars:     Size  Location     Type
 18936 ;;		None
 18937 ;; Return value:  Size  Location     Type
 18938 ;;                  1    wreg      void 
 18939 ;; Registers used:
 18940 ;;		None
 18941 ;; Tracked objects:
 18942 ;;		On entry : 0/0
 18943 ;;		On exit  : 3F/39
 18944 ;;		Unchanged: 0/0
 18945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18949 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18950 ;;Total ram usage:        0 bytes
 18951 ;; Hardware stack levels used:    1
 18952 ;; This function calls:
 18953 ;;		Nothing
 18954 ;; This function is called by:
 18955 ;;		Interrupt level 2
 18956 ;; This function uses a non-reentrant model
 18957 ;;
 18958                           
 18959                           	psect	text112
 18960  006EC4                     __ptext112:
 18961                           	opt callstack 0
 18962  006EC4                     _DMA1_DMADCNT_ISR:
 18963                           	opt callstack 19
 18964                           
 18965                           ; BSR set to: 0
 18966                           ;incstack = 0
 18967  006EC4  EE13  F22E         	lfsr	1,___inthi_sp
 18968                           
 18969                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 18970  006EC8  0139               	movlb	57	; () banked
 18971  006ECA  93A2               	bcf	162,1,b	;volatile
 18972                           
 18973                           ; BSR set to: 57
 18974  006ECC  0011               	retfie		f
 18975  006ECE                     __end_of_DMA1_DMADCNT_ISR:
 18976                           	opt callstack 0
 18977                           
 18978 ;; *************** function _DMA1_DMAA_ISR *****************
 18979 ;; Defined at:
 18980 ;;		line 144 in file "mcc_generated_files/dma1.c"
 18981 ;; Parameters:    Size  Location     Type
 18982 ;;		None
 18983 ;; Auto vars:     Size  Location     Type
 18984 ;;		None
 18985 ;; Return value:  Size  Location     Type
 18986 ;;                  1    wreg      void 
 18987 ;; Registers used:
 18988 ;;		None
 18989 ;; Tracked objects:
 18990 ;;		On entry : 0/0
 18991 ;;		On exit  : 3F/39
 18992 ;;		Unchanged: 0/0
 18993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18996 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18997 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18998 ;;Total ram usage:        0 bytes
 18999 ;; Hardware stack levels used:    1
 19000 ;; This function calls:
 19001 ;;		Nothing
 19002 ;; This function is called by:
 19003 ;;		Interrupt level 2
 19004 ;; This function uses a non-reentrant model
 19005 ;;
 19006                           
 19007                           	psect	text113
 19008  006ED0                     __ptext113:
 19009                           	opt callstack 0
 19010  006ED0                     _DMA1_DMAA_ISR:
 19011                           	opt callstack 19
 19012                           
 19013                           ; BSR set to: 57
 19014                           ;incstack = 0
 19015  006ED0  EE13  F22E         	lfsr	1,___inthi_sp
 19016                           
 19017                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 19018  006ED4  0139               	movlb	57	; () banked
 19019  006ED6  97A2               	bcf	162,3,b	;volatile
 19020                           
 19021                           ; BSR set to: 57
 19022  006ED8  0011               	retfie		f
 19023  006EDA                     __end_of_DMA1_DMAA_ISR:
 19024                           	opt callstack 0
 19025                           
 19026 ;; *************** function _DMA1_DMAOR_ISR *****************
 19027 ;; Defined at:
 19028 ;;		line 155 in file "mcc_generated_files/dma1.c"
 19029 ;; Parameters:    Size  Location     Type
 19030 ;;		None
 19031 ;; Auto vars:     Size  Location     Type
 19032 ;;		None
 19033 ;; Return value:  Size  Location     Type
 19034 ;;                  1    wreg      void 
 19035 ;; Registers used:
 19036 ;;		None
 19037 ;; Tracked objects:
 19038 ;;		On entry : 0/0
 19039 ;;		On exit  : 3F/39
 19040 ;;		Unchanged: 0/0
 19041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19046 ;;Total ram usage:        0 bytes
 19047 ;; Hardware stack levels used:    1
 19048 ;; This function calls:
 19049 ;;		Nothing
 19050 ;; This function is called by:
 19051 ;;		Interrupt level 2
 19052 ;; This function uses a non-reentrant model
 19053 ;;
 19054                           
 19055                           	psect	text114
 19056  006EDC                     __ptext114:
 19057                           	opt callstack 0
 19058  006EDC                     _DMA1_DMAOR_ISR:
 19059                           	opt callstack 19
 19060                           
 19061                           ; BSR set to: 57
 19062                           ;incstack = 0
 19063  006EDC  EE13  F22E         	lfsr	1,___inthi_sp
 19064                           
 19065                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 19066  006EE0  0139               	movlb	57	; () banked
 19067  006EE2  95A2               	bcf	162,2,b	;volatile
 19068                           
 19069                           ; BSR set to: 57
 19070  006EE4  0011               	retfie		f
 19071  006EE6                     __end_of_DMA1_DMAOR_ISR:
 19072                           	opt callstack 0
 19073                           
 19074 ;; *************** function _TMR5_ISR *****************
 19075 ;; Defined at:
 19076 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 19077 ;; Parameters:    Size  Location     Type
 19078 ;;		None
 19079 ;; Auto vars:     Size  Location     Type
 19080 ;;		None
 19081 ;; Return value:  Size  Location     Type
 19082 ;;                  1    wreg      void 
 19083 ;; Registers used:
 19084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 19085 ;; Tracked objects:
 19086 ;;		On entry : 0/0
 19087 ;;		On exit  : 0/0
 19088 ;;		Unchanged: 0/0
 19089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19092 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19093 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19094 ;;Total ram usage:        3 bytes
 19095 ;; Hardware stack levels used:    1
 19096 ;; Hardware stack levels required when called:    2
 19097 ;; This function calls:
 19098 ;;		_TMR5_CallBack
 19099 ;;		_TMR5_WriteTimer
 19100 ;; This function is called by:
 19101 ;;		Interrupt level 2
 19102 ;; This function uses a non-reentrant model
 19103 ;;
 19104                           
 19105                           	psect	text115
 19106  006424                     __ptext115:
 19107                           	opt callstack 0
 19108  006424                     _TMR5_ISR:
 19109                           	opt callstack 17
 19110                           
 19111                           ; BSR set to: 57
 19112                           ;incstack = 0
 19113  006424  0060  F120  F0FD   	movff	btemp+11,??_TMR5_ISR+2
 19114  00642A  EE13  F22E         	lfsr	1,___inthi_sp
 19115                           
 19116                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 19117  00642E  0139               	movlb	57	; () banked
 19118  006430  9DA8               	bcf	168,6,b	;volatile
 19119                           
 19120                           ; BSR set to: 57
 19121                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 19122  006432  0060  F0A7  FFE6   	movff	_timer5ReloadVal,postinc1
 19123  006438  0060  F0AB  FFE6   	movff	_timer5ReloadVal+1,postinc1
 19124  00643E  EC0B  F033         	call	_TMR5_WriteTimer	;wreg free
 19125                           
 19126                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 19127  006442  0100               	movlb	0	; () banked
 19128  006444  51C3               	movf	(_V+99)& (0+255),w,b	;volatile
 19129  006446  6FFB               	movwf	??_TMR5_ISR& (0+255),b
 19130  006448  6BFC               	clrf	(??_TMR5_ISR+1)& (0+255),b
 19131  00644A  0E05               	movlw	5
 19132  00644C  27FB               	addwf	??_TMR5_ISR& (0+255),f,b
 19133  00644E  0E00               	movlw	0
 19134  006450  23FC               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 19135  006452  4A27               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 19136  006454  2A28               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 19137  006456  51FB               	movf	??_TMR5_ISR& (0+255),w,b
 19138  006458  5C27               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 19139  00645A  51FC               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 19140  00645C  5828               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 19141  00645E  A0D8               	btfss	status,0,c
 19142  006460  D004               	goto	i2l1145
 19143                           
 19144                           ; BSR set to: 0
 19145                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 19146  006462  EC33  F036         	call	_TMR5_CallBack	;wreg free
 19147                           
 19148                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 19149  006466  6A27               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 19150  006468  6A28               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 19151  00646A                     i2l1145:
 19152  00646A  0060  F3F4  F048   	movff	??_TMR5_ISR+2,btemp+11
 19153  006470  0011               	retfie		f
 19154  006472                     __end_of_TMR5_ISR:
 19155                           	opt callstack 0
 19156                           
 19157 ;; *************** function _TMR5_WriteTimer *****************
 19158 ;; Defined at:
 19159 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 19160 ;; Parameters:    Size  Location     Type
 19161 ;;  timerVal        2  [STACK] unsigned short 
 19162 ;; Auto vars:     Size  Location     Type
 19163 ;;		None
 19164 ;; Return value:  Size  Location     Type
 19165 ;;                  1  [STACK] void 
 19166 ;; Registers used:
 19167 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 19168 ;; Tracked objects:
 19169 ;;		On entry : 3F/39
 19170 ;;		On exit  : 0/0
 19171 ;;		Unchanged: 0/0
 19172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19177 ;;Total ram usage:        0 bytes
 19178 ;; Hardware stack levels used:    1
 19179 ;; This function calls:
 19180 ;;		Nothing
 19181 ;; This function is called by:
 19182 ;;		_TMR5_ISR
 19183 ;; This function uses a reentrant model
 19184 ;;
 19185                           
 19186                           	psect	text116
 19187  006616                     __ptext116:
 19188                           	opt callstack 0
 19189  006616                     _TMR5_WriteTimer:
 19190                           	opt callstack 18
 19191                           
 19192                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 19193                           
 19194                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19195                           ;incstack = 0
 19196  006616  A49A               	btfss	16282,2,c	;volatile
 19197  006618  D00F               	goto	l7236
 19198                           
 19199                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 19200  00661A  909A               	bcf	16282,0,c	;volatile
 19201                           
 19202                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 19203                           ;stkvar	_timerVal @ sp[(0)+-2]
 19204  00661C  0EFF               	movlw	255
 19205  00661E  24E1               	addwf	fsr1l,w,c
 19206  006620  6ED9               	movwf	fsr2l,c
 19207  006622  0EFF               	movlw	255
 19208  006624  20E2               	addwfc	fsr1h,w,c
 19209  006626  6EDA               	movwf	fsr2h,c
 19210  006628  50DF               	movf	indf2,w,c
 19211  00662A  6E99               	movwf	16281,c	;volatile
 19212                           
 19213                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 19214                           ;stkvar	_timerVal @ sp[(0)+-2]
 19215  00662C  0EFE               	movlw	-2
 19216  00662E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 19217                           
 19218                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 19219  006634  809A               	bsf	16282,0,c	;volatile
 19220                           
 19221                           ;mcc_generated_files/tmr5.c: 142:  } else {
 19222  006636  D00C               	goto	l1128
 19223  006638                     l7236:
 19224                           
 19225                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 19226                           ;stkvar	_timerVal @ sp[(0)+-2]
 19227  006638  0EFF               	movlw	255
 19228  00663A  24E1               	addwf	fsr1l,w,c
 19229  00663C  6ED9               	movwf	fsr2l,c
 19230  00663E  0EFF               	movlw	255
 19231  006640  20E2               	addwfc	fsr1h,w,c
 19232  006642  6EDA               	movwf	fsr2h,c
 19233  006644  50DF               	movf	indf2,w,c
 19234  006646  6E99               	movwf	16281,c	;volatile
 19235                           
 19236                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 19237                           ;stkvar	_timerVal @ sp[(0)+-2]
 19238  006648  0EFE               	movlw	-2
 19239  00664A  006F FF8F FF98     	movff	plusw1,16280	;volatile
 19240  006650                     l1128:
 19241                           
 19242                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 19243  006650  52E5               	movf	postdec1,f,c
 19244  006652  52E5               	movf	postdec1,f,c
 19245  006654  0012               	return		;funcret
 19246  006656                     __end_of_TMR5_WriteTimer:
 19247                           	opt callstack 0
 19248                           
 19249 ;; *************** function _TMR5_CallBack *****************
 19250 ;; Defined at:
 19251 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 19252 ;; Parameters:    Size  Location     Type
 19253 ;;		None
 19254 ;; Auto vars:     Size  Location     Type
 19255 ;;		None
 19256 ;; Return value:  Size  Location     Type
 19257 ;;                  1  [STACK] void 
 19258 ;; Registers used:
 19259 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 19260 ;; Tracked objects:
 19261 ;;		On entry : 3F/0
 19262 ;;		On exit  : 0/0
 19263 ;;		Unchanged: 0/0
 19264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19269 ;;Total ram usage:        0 bytes
 19270 ;; Hardware stack levels used:    1
 19271 ;; Hardware stack levels required when called:    1
 19272 ;; This function calls:
 19273 ;;		Absolute function
 19274 ;;		_TMR5_DefaultInterruptHandler
 19275 ;; This function is called by:
 19276 ;;		_TMR5_ISR
 19277 ;; This function uses a reentrant model
 19278 ;;
 19279                           
 19280                           	psect	text117
 19281  006C66                     __ptext117:
 19282                           	opt callstack 0
 19283  006C66                     _TMR5_CallBack:
 19284                           	opt callstack 17
 19285                           
 19286                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 19287                           
 19288                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19289                           ;incstack = 0
 19290  006C66  0100               	movlb	0	; () banked
 19291  006C68  51E8               	movf	_TMR5_InterruptHandler& (0+255),w,b
 19292  006C6A  11E9               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 19293  006C6C  11EA               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 19294  006C6E  B4D8               	btfsc	status,2,c
 19295  006C70  0012               	return	
 19296                           
 19297                           ; BSR set to: 0
 19298                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 19299  006C72  D801               	call	u421_48
 19300  006C74  0012               	return	
 19301  006C76                     u421_48:
 19302  006C76  0005               	push	
 19303  006C78  6EFA               	movwf	pclath,c
 19304  006C7A  51E8               	movf	_TMR5_InterruptHandler& (0+255),w,b
 19305  006C7C  6EFD               	movwf	tosl,c
 19306  006C7E  51E9               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 19307  006C80  6EFE               	movwf	tosh,c
 19308  006C82  51EA               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 19309  006C84  6EFF               	movwf	tosu,c
 19310  006C86  50FA               	movf	pclath,w,c
 19311  006C88  0012               	return		;indir
 19312  006C8A                     __end_of_TMR5_CallBack:
 19313                           	opt callstack 0
 19314                           
 19315 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 19316 ;; Defined at:
 19317 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 19318 ;; Parameters:    Size  Location     Type
 19319 ;;		None
 19320 ;; Auto vars:     Size  Location     Type
 19321 ;;		None
 19322 ;; Return value:  Size  Location     Type
 19323 ;;                  1  [STACK] void 
 19324 ;; Registers used:
 19325 ;;		wreg, status,2, status,0, btemp+11
 19326 ;; Tracked objects:
 19327 ;;		On entry : 3F/0
 19328 ;;		On exit  : 0/0
 19329 ;;		Unchanged: 0/0
 19330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19335 ;;Total ram usage:        0 bytes
 19336 ;; Hardware stack levels used:    1
 19337 ;; This function calls:
 19338 ;;		Nothing
 19339 ;; This function is called by:
 19340 ;;		_TMR5_Initialize
 19341 ;;		_TMR5_CallBack
 19342 ;; This function uses a reentrant model
 19343 ;;
 19344                           
 19345                           	psect	text118
 19346  006E12                     __ptext118:
 19347                           	opt callstack 0
 19348  006E12                     _TMR5_DefaultInterruptHandler:
 19349                           	opt callstack 17
 19350                           
 19351                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 19352                           
 19353                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19354                           ;incstack = 0
 19355  006E12  A0BE               	btfss	16318,0,c	;volatile
 19356  006E14  D002               	goto	u394_40
 19357  006E16  0E01               	movlw	1
 19358  006E18  D001               	goto	u394_46
 19359  006E1A                     u394_40:
 19360  006E1A  0E00               	movlw	0
 19361  006E1C                     u394_46:
 19362  006E1C  0AFF               	xorlw	255
 19363  006E1E  6E48               	movwf	btemp+11,c
 19364  006E20  50BE               	movf	16318,w,c	;volatile
 19365  006E22  1848               	xorwf	btemp+11,w,c
 19366  006E24  0BFE               	andlw	-2
 19367  006E26  1848               	xorwf	btemp+11,w,c
 19368  006E28  6EBE               	movwf	16318,c	;volatile
 19369                           
 19370                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 19371  006E2A  0012               	return		;funcret
 19372  006E2C                     __end_of_TMR5_DefaultInterruptHandler:
 19373                           	opt callstack 0
 19374                           
 19375                           ;
 19376                           ; Interrupt Vector Table @ 0x8
 19377                           ;
 19378                           
 19379                           	psect	ivt0x8
 19380  000008                     __pivt0x8:
 19381                           	opt callstack 0
 19382  000008                     ivt0x8_base:
 19383                           	opt callstack 0
 19384                           
 19385                           ; Vector 0 : SWINT
 19386  000008  1BC5               	dw	_Default_ISR shr (0+2)
 19387                           
 19388                           ; Vector 1 : HLVD
 19389  00000A  1BC5               	dw	_Default_ISR shr (0+2)
 19390                           
 19391                           ; Vector 2 : OSF
 19392  00000C  1BC5               	dw	_Default_ISR shr (0+2)
 19393                           
 19394                           ; Vector 3 : CSW
 19395  00000E  1BC5               	dw	_Default_ISR shr (0+2)
 19396                           
 19397                           ; Vector 4 : NVM
 19398  000010  1BC5               	dw	_Default_ISR shr (0+2)
 19399                           
 19400                           ; Vector 5 : SCAN
 19401  000012  1BC5               	dw	_Default_ISR shr (0+2)
 19402                           
 19403                           ; Vector 6 : CRC
 19404  000014  1BC5               	dw	_Default_ISR shr (0+2)
 19405                           
 19406                           ; Vector 7 : IOC
 19407  000016  1BC5               	dw	_Default_ISR shr (0+2)
 19408                           
 19409                           ; Vector 8 : INT0
 19410  000018  1BA3               	dw	_INT0_ISR shr (0+2)
 19411                           
 19412                           ; Vector 9 : ZCD
 19413  00001A  1BC5               	dw	_Default_ISR shr (0+2)
 19414                           
 19415                           ; Vector 10 : AD
 19416  00001C  1A13               	dw	_ADCC_ISR shr (0+2)
 19417                           
 19418                           ; Vector 11 : ADT
 19419  00001E  1BC5               	dw	_Default_ISR shr (0+2)
 19420                           
 19421                           ; Vector 12 : CMP1
 19422  000020  1BC5               	dw	_Default_ISR shr (0+2)
 19423                           
 19424                           ; Vector 13 : SMT1
 19425  000022  1BC5               	dw	_Default_ISR shr (0+2)
 19426                           
 19427                           ; Vector 14 : SMT1PRA
 19428  000024  1BC5               	dw	_Default_ISR shr (0+2)
 19429                           
 19430                           ; Vector 15 : SMT1PRW
 19431  000026  1BC5               	dw	_Default_ISR shr (0+2)
 19432                           
 19433                           ; Vector 16 : DMA1SCNT
 19434  000028  1B9B               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 19435                           
 19436                           ; Vector 17 : DMA1DCNT
 19437  00002A  1BB1               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 19438                           
 19439                           ; Vector 18 : DMA1OR
 19440  00002C  1BB7               	dw	_DMA1_DMAOR_ISR shr (0+2)
 19441                           
 19442                           ; Vector 19 : DMA1A
 19443  00002E  1BB4               	dw	_DMA1_DMAA_ISR shr (0+2)
 19444                           
 19445                           ; Vector 20 : SPI1RX
 19446  000030  1BC5               	dw	_Default_ISR shr (0+2)
 19447                           
 19448                           ; Vector 21 : SPI1TX
 19449  000032  1BC5               	dw	_Default_ISR shr (0+2)
 19450                           
 19451                           ; Vector 22 : SPI1
 19452  000034  1BC5               	dw	_Default_ISR shr (0+2)
 19453                           
 19454                           ; Vector 23 : I2C1RX
 19455  000036  1BC5               	dw	_Default_ISR shr (0+2)
 19456                           
 19457                           ; Vector 24 : I2C1TX
 19458  000038  1BC5               	dw	_Default_ISR shr (0+2)
 19459                           
 19460                           ; Vector 25 : I2C1
 19461  00003A  1BC5               	dw	_Default_ISR shr (0+2)
 19462                           
 19463                           ; Vector 26 : I2C1E
 19464  00003C  1BC5               	dw	_Default_ISR shr (0+2)
 19465                           
 19466                           ; Vector 27 : U1RX
 19467  00003E  1AF3               	dw	_UART1_rx_vect_isr shr (0+2)
 19468                           
 19469                           ; Vector 28 : U1TX
 19470  000040  1AE9               	dw	_UART1_tx_vect_isr shr (0+2)
 19471                           
 19472                           ; Vector 29 : U1E
 19473  000042  1BC5               	dw	_Default_ISR shr (0+2)
 19474                           
 19475                           ; Vector 30 : U1
 19476  000044  1BC5               	dw	_Default_ISR shr (0+2)
 19477                           
 19478                           ; Vector 31 : TMR0
 19479  000046  1BC5               	dw	_Default_ISR shr (0+2)
 19480                           
 19481                           ; Vector 32 : TMR1
 19482  000048  1BC5               	dw	_Default_ISR shr (0+2)
 19483                           
 19484                           ; Vector 33 : TMR1G
 19485  00004A  1BC5               	dw	_Default_ISR shr (0+2)
 19486                           
 19487                           ; Vector 34 : TMR2
 19488  00004C  1BC5               	dw	_Default_ISR shr (0+2)
 19489                           
 19490                           ; Vector 35 : CCP1
 19491  00004E  1BC5               	dw	_Default_ISR shr (0+2)
 19492                           
 19493                           ; Vector 36 : Undefined
 19494  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 19495                           
 19496                           ; Vector 37 : NCO1
 19497  000052  1BC5               	dw	_Default_ISR shr (0+2)
 19498                           
 19499                           ; Vector 38 : CWG1
 19500  000054  1BC5               	dw	_Default_ISR shr (0+2)
 19501                           
 19502                           ; Vector 39 : CLC1
 19503  000056  1BC5               	dw	_Default_ISR shr (0+2)
 19504                           
 19505                           ; Vector 40 : INT1
 19506  000058  1BA7               	dw	_INT1_ISR shr (0+2)
 19507                           
 19508                           ; Vector 41 : CMP2
 19509  00005A  1BC5               	dw	_Default_ISR shr (0+2)
 19510                           
 19511                           ; Vector 42 : DMA2SCNT
 19512  00005C  1BC5               	dw	_Default_ISR shr (0+2)
 19513                           
 19514                           ; Vector 43 : DMA2DCNT
 19515  00005E  1BC5               	dw	_Default_ISR shr (0+2)
 19516                           
 19517                           ; Vector 44 : DMA2OR
 19518  000060  1BC5               	dw	_Default_ISR shr (0+2)
 19519                           
 19520                           ; Vector 45 : DMA2A
 19521  000062  1BC5               	dw	_Default_ISR shr (0+2)
 19522                           
 19523                           ; Vector 46 : I2C2RX
 19524  000064  1BC5               	dw	_Default_ISR shr (0+2)
 19525                           
 19526                           ; Vector 47 : I2C2TX
 19527  000066  1BC5               	dw	_Default_ISR shr (0+2)
 19528                           
 19529                           ; Vector 48 : I2C2
 19530  000068  1BC5               	dw	_Default_ISR shr (0+2)
 19531                           
 19532                           ; Vector 49 : I2C2E
 19533  00006A  1BC5               	dw	_Default_ISR shr (0+2)
 19534                           
 19535                           ; Vector 50 : U2RX
 19536  00006C  1B07               	dw	_UART2_rx_vect_isr shr (0+2)
 19537                           
 19538                           ; Vector 51 : U2TX
 19539  00006E  1AFD               	dw	_UART2_tx_vect_isr shr (0+2)
 19540                           
 19541                           ; Vector 52 : U2E
 19542  000070  1BC5               	dw	_Default_ISR shr (0+2)
 19543                           
 19544                           ; Vector 53 : U2
 19545  000072  1BC5               	dw	_Default_ISR shr (0+2)
 19546                           
 19547                           ; Vector 54 : TMR3
 19548  000074  1BC5               	dw	_Default_ISR shr (0+2)
 19549                           
 19550                           ; Vector 55 : TMR3G
 19551  000076  1BC5               	dw	_Default_ISR shr (0+2)
 19552                           
 19553                           ; Vector 56 : TMR4
 19554  000078  1BC5               	dw	_Default_ISR shr (0+2)
 19555                           
 19556                           ; Vector 57 : CCP2
 19557  00007A  1BC5               	dw	_Default_ISR shr (0+2)
 19558                           
 19559                           ; Vector 58 : Undefined
 19560  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 19561                           
 19562                           ; Vector 59 : CWG2
 19563  00007E  1BC5               	dw	_Default_ISR shr (0+2)
 19564                           
 19565                           ; Vector 60 : CLC2
 19566  000080  1BC5               	dw	_Default_ISR shr (0+2)
 19567                           
 19568                           ; Vector 61 : INT2
 19569  000082  1BAB               	dw	_INT2_ISR shr (0+2)
 19570                           
 19571                           ; Vector 62 : Undefined
 19572  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 19573                           
 19574                           ; Vector 63 : Undefined
 19575  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 19576                           
 19577                           ; Vector 64 : Undefined
 19578  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 19579                           
 19580                           ; Vector 65 : Undefined
 19581  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 19582                           
 19583                           ; Vector 66 : Undefined
 19584  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 19585                           
 19586                           ; Vector 67 : Undefined
 19587  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 19588                           
 19589                           ; Vector 68 : Undefined
 19590  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 19591                           
 19592                           ; Vector 69 : Undefined
 19593  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 19594                           
 19595                           ; Vector 70 : TMR5
 19596  000094  1909               	dw	_TMR5_ISR shr (0+2)
 19597                           
 19598                           ; Vector 71 : TMR5G
 19599  000096  1BC5               	dw	_Default_ISR shr (0+2)
 19600                           
 19601                           ; Vector 72 : TMR6
 19602  000098  1B7E               	dw	_TMR6_ISR shr (0+2)
 19603                           
 19604                           ; Vector 73 : CCP3
 19605  00009A  1BC5               	dw	_Default_ISR shr (0+2)
 19606                           
 19607                           ; Vector 74 : CWG3
 19608  00009C  1BC5               	dw	_Default_ISR shr (0+2)
 19609                           
 19610                           ; Vector 75 : CLC3
 19611  00009E  1BC5               	dw	_Default_ISR shr (0+2)
 19612                           
 19613                           ; Vector 76 : Undefined
 19614  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 19615                           
 19616                           ; Vector 77 : Undefined
 19617  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 19618                           
 19619                           ; Vector 78 : Undefined
 19620  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 19621                           
 19622                           ; Vector 79 : Undefined
 19623  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 19624                           
 19625                           ; Vector 80 : CCP4
 19626  0000A8  1BC5               	dw	_Default_ISR shr (0+2)
 19627                           
 19628                           ; Vector 81 : CLC4
 19629  0000AA  1BC5               	dw	_Default_ISR shr (0+2)
 19630  0000AC                     ivt0x8_undefint:
 19631                           	opt callstack 0
 19632  0000AC  00FF               	reset	
 19633                           
 19634                           	psect	text119
 19635  000000                     __ptext119:
 19636                           	opt callstack 0
 19637                           
 19638                           	psect	rparam
 19639  0000                     
 19640                           	psect	temp
 19641  00003D                     btemp:
 19642                           	opt callstack 0
 19643  00003D                     	ds	32
 19644  0000                     wtemp0	set	btemp
 19645  0000                     wtemp1	set	btemp+2
 19646  0000                     wtemp2	set	btemp+4
 19647  0000                     wtemp3	set	btemp+6
 19648  0000                     wtemp4	set	btemp+8
 19649  0000                     wtemp5	set	btemp+10
 19650  0000                     wtemp8	set	btemp+1
 19651  0000                     ttemp0	set	btemp
 19652  0000                     ttemp1	set	btemp+3
 19653  0000                     ttemp2	set	btemp+6
 19654  0000                     ttemp3	set	btemp+9
 19655  0000                     ttemp5	set	btemp+1
 19656  0000                     ttemp6	set	btemp+4
 19657  0000                     ttemp7	set	btemp+8
 19658  0000                     ltemp0	set	btemp
 19659  0000                     ltemp1	set	btemp+4
 19660  0000                     ltemp2	set	btemp+8
 19661  0000                     lltemp0	set	btemp
 19662  0000                     lltemp1	set	btemp+8
 19663  0000                     lltemp2	set	btemp+16
 19664  0000                     lltemp3	set	btemp+24
 19665                           tosu	equ	0x3FFF
 19666                           tosh	equ	0x3FFE
 19667                           tosl	equ	0x3FFD
 19668                           stkptr	equ	0x3FFC
 19669                           pclatu	equ	0x3FFB
 19670                           pclath	equ	0x3FFA
 19671                           pcl	equ	0x3FF9
 19672                           tblptru	equ	0x3FF8
 19673                           tblptrh	equ	0x3FF7
 19674                           tblptrl	equ	0x3FF6
 19675                           tablat	equ	0x3FF5
 19676                           prodh	equ	0x3FF4
 19677                           prodl	equ	0x3FF3
 19678                           indf0	equ	0x3FEF
 19679                           postinc0	equ	0x3FEE
 19680                           postdec0	equ	0x3FED
 19681                           preinc0	equ	0x3FEC
 19682                           plusw0	equ	0x3FEB
 19683                           fsr0h	equ	0x3FEA
 19684                           fsr0l	equ	0x3FE9
 19685                           wreg	equ	0x3FE8
 19686                           indf1	equ	0x3FE7
 19687                           postinc1	equ	0x3FE6
 19688                           postdec1	equ	0x3FE5
 19689                           preinc1	equ	0x3FE4
 19690                           plusw1	equ	0x3FE3
 19691                           fsr1h	equ	0x3FE2
 19692                           fsr1l	equ	0x3FE1
 19693                           bsr	equ	0x3FE0
 19694                           indf2	equ	0x3FDF
 19695                           postinc2	equ	0x3FDE
 19696                           postdec2	equ	0x3FDD
 19697                           preinc2	equ	0x3FDC
 19698                           plusw2	equ	0x3FDB
 19699                           fsr2h	equ	0x3FDA
 19700                           fsr2l	equ	0x3FD9
 19701                           status	equ	0x3FD8


Data Sizes:
    Strings     213
    Constant    0
    Data        684
    BSS         551
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      62
    BANK0           160      3     158
    BANK1           256      0     238
    BANK2           256      0     206
    BANK3           256      0     251
    BANK4           256      0      67
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[48]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_26(CODE[3]), STR_22(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_26(CODE[3]), STR_22(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[6]), STR_13(CODE[19]), STR_12(CODE[26]), 
		 -> STR_11(CODE[18]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[6]), STR_13(CODE[19]), STR_12(CODE[26]), 
		 -> STR_11(CODE[18]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 100
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[100]), 

    a	PTR const unsigned char  size(2) Largest target is 100
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[100]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_16(CODE[26]), STR_15(CODE[26]), STR_14(CODE[6]), STR_13(CODE[19]), 
		 -> STR_12(CODE[26]), STR_11(CODE[18]), STR_10(CODE[21]), STR_9(CODE[18]), 
		 -> STR_8(CODE[6]), STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), 
		 -> STR_4(CODE[15]), STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 100
		 -> V(BANK0[100]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 100
		 -> V(BANK0[100]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4571_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 100
		 -> V(BANK0[100]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 100
		 -> V(BANK0[100]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[6]), STR_13(CODE[19]), STR_12(CODE[26]), 
		 -> STR_11(CODE[18]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[6]), STR_13(CODE[19]), STR_12(CODE[26]), 
		 -> STR_11(CODE[18]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_19(CODE[3]), STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[26]), 
		 -> STR_15(CODE[26]), STR_14(CODE[6]), STR_13(CODE[19]), STR_12(CODE[26]), 
		 -> STR_11(CODE[18]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[100]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[100]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[100]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16651.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16651.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[48]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK2[48]), H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK2[48]), H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16173 size(1) Largest target is 100
		 -> V(BANK0[100]), 

    S3845response_type$reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16638.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    S3845response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[48]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    F16638.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[48]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    r_link	PTR enum E16173 size(1) Largest target is 100
		 -> V(BANK0[100]), 

    m_link	PTR enum E16173 size(1) Largest target is 100
		 -> V(BANK0[100]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H27(BANK2[30]), H24(BANK1[27]), H17(BANK1[20]), 
		 -> H14(BANK1[17]), H13(BANK2[48]), H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 100
		 -> V(BANK0[100]), 

    strPtr	PTR unsigned char  size(1) Largest target is 100
		 -> V(BANK0[100]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1987spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1987spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK4[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   48846
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                   _UART1_put_buffer
                   _UART2_put_buffer
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                         _hb_message
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                              _srand
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    2275
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                             _WaitMs
                               _rand
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     154
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21     9     12    9152
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    2328
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    2502
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                               _rand
                       _run_checksum
                     _secs_gem_state
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1283
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     262
                               _rand
 ---------------------------------------------------------------------------------
 (4) _rand                                                 0     0      0      92
                             ___omul
 ---------------------------------------------------------------------------------
 (5) ___omul                                              24     8     16      92
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      88
                         _StartTimer
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (3) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _hb_message                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   20620
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1   10375
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   10183
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1   10152
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8927
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    8822
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           41    35      6    8556
                               _atoi
                               _ctoa
                               _dtoa
                              _fputc
                            _isdigit
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1329
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    3018
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1790
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1691
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2     130
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (4) _atoi                                                10     9      1     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0      90
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              0 BANK0      3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _UART1_put_buffer
   _UART2_put_buffer
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
       _wdtdelay
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _hb_message
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _rand
       ___omul
     _run_checksum
     _secs_gem_state
       _StartTimer
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
         _rand
           ___omul
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
       _StartTimer
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
         _rand
           ___omul
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _WaitMs
       _StartTimer
       _TimerDone
     _rand
       ___omul
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
         _rand
           ___omul
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     101      69        3.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      43      13       26.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FB      11       98.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      CE       9       80.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      EE       7       93.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      9E       5       98.8%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3D6      58        0.0%
DATA                 0      0     4D7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Apr  4 00:26:58 2019

                    _SPI1_Exchange8bit 6D52                                      _V 0060  
     __end_of_TMR5_SetInterruptHandler 6B04              __end_of_UART2_is_rx_ready 6EFE  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 6EEE                            __CFG_LVP$ON 000000  
                                  _H10 0107                                    _H12 0162  
                                  _H13 0280                                    _H14 01AF  
                                  _H24 0180                                    _H17 019B  
                                  _H27 02B0                                    _H53 03C3  
                                  l194 6E52                                    l572 673A  
                                  l717 68CA                                    l851 6D60  
                                  l579 66AA                                    l692 66FC  
                                  l597 689E                                    l699 666C  
                                  _GIE 01FE97                                    _abs 6508  
                                  _pad 53C2                __size_of_PMD_Initialize 0014  
                                  prod 003FF3                                    tosl 003FFD  
                                  wreg 003FE8                          _INT0_CallBack 6CAC  
                         _run_checksum 6924                     _UART1_Transmit_ISR 6878  
                        __CFG_BBEN$OFF 000000                          _INT1_CallBack 6CCE  
                         __CFG_ZCD$OFF 000000                                   _H254 0443  
                                 l1128 6650                                   l1306 26A4  
                                 l1242 2114                                   l1252 21D0  
                                 l1263 22E8                                   l1505 5C98  
                                 l1602 2DA0                                   l1282 25BA  
                                 l1274 24A2                                   l1266 2336  
                                 l1268 233A                                   l1509 5FA0  
                                 l1286 2640                                   l1287 266C  
                                 l1296 268C                                   l1369 6294  
                                 l1715 3EA6                                   l1661 36D6  
                                 l6000 4F02                                   l1737 4A26  
                                 l2660 6548                                   l6004 4F32  
                                 l1909 32F8                                   l1854 679E  
                                 l2727 55D8                                   l1936 40CC  
                                 l7000 43F4                                   l6130 62A6  
                                 l6114 5044                                   l2691 4E94  
                                 l2667 4C8E                                   l1965 2CEA  
                                 l6222 66CA                                   l6118 50EA  
                                 l2767 5024                                   l6304 696C  
                                 l6224 66CC                                   l7016 4412  
                                 l1889 541E                                   l7210 68C6  
                                 l7034 444A                                   l7018 442C  
                                 l7220 6D4E                                   l6236 691C  
                                 l6262 668C                                   l7046 4464  
                                 l6264 668E                                   l7072 44DC  
                                 l7048 44A2                                   l9010 5E00  
                                 l7236 6638                                   l5812 6326  
                                 l5732 45A8                                   l5716 6538  
                                 l9012 5E42                                   l6276 68F2  
                                 l9100 4852                                   l7084 44F6  
                                 l7086 452E                                   l5744 4642  
                                 l9032 55FC                                   l9120 4956  
                                 l9112 491C                                   l6714 63DA  
                                 l5738 45FC                                   l9042 56D0  
                                 l9130 499E                                   l9122 497E  
                                 l7188 689A                                   l5756 4714  
                                 l9036 566E                                   l9140 4A00  
                                 l9108 4902                                   l6718 640C  
                                 l7198 6D2E                                   l5950 4C8A  
                                 l6726 67A8                                   l6902 5978  
                                 l6910 59B0                                   l9126 4984  
                                 l9310 389E                                   l9302 3840  
                                 l5792 4BC2                                   l5784 4B16  
                                 l5776 4A8E                                   l6664 6712  
                                 l9320 390C                                   l9232 369E  
                                 l5970 4D84                                   l9138 49D8  
                                 l9146 4A06                                   l9322 3910  
                                 l9306 386E                                   l5964 4D2A  
                                 l8700 5D8C                                   l9076 5B92  
                                 l6860 58D8                                   l6908 598A  
                                 l5974 4DEA                                   l5966 4D42  
                                 l5958 4CFE                                   l6870 5902  
                                 l9334 3938                                   l6942 42F2  
                                 l9422 3E0A                                   l9406 3D9E  
                                 l5984 4E84                                   l5968 4D48  
                                 l8712 5ECC                                   l6688 66D4  
                                 l6864 58F0                                   l9360 39CE  
                                 l9256 373A                                   l6928 42B4  
                                 l9424 3E16                                   l9408 3DB0  
                                 l8722 5416                                   l6786 6930  
                                 l6874 5906                                   l9602 2F8A  
                                 l9522 2D52                                   l9506 2CF8  
                                 l9354 39B4                                   l9290 37FC  
                                 l9282 37CE                                   l9266 376E  
                                 l9370 39E2                                   l6954 432E  
                                 l9450 3EDE                                   l9418 3DF2  
                                 l8708 5E8E                                   l8732 54AE  
                                 l8724 5428                                   l8740 5FC6  
                                 l8812 3650                                   l6884 5912  
                                 l6868 58FA                                   l9604 2F8E  
                                 l9364 39DA                                   l9268 377A  
                                 l9372 3A24                                   l6980 43B6  
                                 l6948 4310                                   l9460 3F10  
                                 l9436 3E78                                   l9428 3E3C  
                                 l8718 53EE                                   l8742 5FF2  
                                 l6894 5968                                   l6886 5956  
                                 l6878 590A                                   l9550 2E18  
                                 l9702 31C6                                   l9358 39CA  
                                 l9294 380C                                   l9286 37EC  
                                 l9470 3F30                                   l9446 3EC6  
                                 l9454 3EE6                                   l8728 5464  
                                 l8808 3614                                   l8840 4102  
                                 l8824 404E                                   l9640 3066  
                                 l9632 3014                                   l9616 2FC2  
                                 l9544 2DE2                                   l9704 3208  
                                 l6968 4368                                   l9480 3F5E  
                                 l9384 3D26                                   l8930 2B80  
                                 l8914 2A08                                   l8906 2924  
                                 l9298 381C                                   l6978 438A  
                                 l9482 3F6C                                   l9810 22B8  
                                 l8844 413E                                   l8940 2C28  
                                 l9652 30E4                                   l9644 3096  
                                 l9636 3038                                   l9628 2FF6  
                                 l9556 2E3C                                   l9484 3F70  
                                 l9396 3D6A                                   l9492 3F8E  
                                 l9740 2106                                   l8774 3332  
                                 l8766 32E8                                   l8862 4260  
                                 l8854 41F8                                   l8950 2C80  
                                 l8918 2A5A                                   l9654 30E8  
                                 l9590 2F0C                                   l9582 2EBA  
                                 l9566 2E68                                   l6998 43DA  
                                 l9486 3F78                                   l9494 3FD0  
                                 l9910 257C                                   l9814 22C0  
                                 l9742 211A                                   l8688 5506  
                                 l8848 416E                                   l9488 3F80  
                                 l9832 231E                                   l9808 22B4  
                                 l8698 5D6A                                   l8778 3350  
                                 l8858 4224                                   l8946 2C7C  
                                 l8890 2826                                   l9690 319E  
                                 l9666 3110                                   l9594 2F3C  
                                 l9586 2EDE                                   l9578 2E9C  
                                 l9914 258C                                   l9818 22D8  
                                 l9850 23CA                                   l9738 20FE  
                                 l8788 3562                                   l8956 2C9C  
                                 l9692 31A6                                   l9924 25BE  
                                 l9828 2308                                   l8886 27EE  
                                 l8990 3BF6                                   l9694 31AA  
                                 l9686 318C                                   l9942 2690  
                                 l9926 25EA                                   l9790 2248  
                                 STR_1 2081                                   l8888 2814  
                                 l8984 3B8C                                   l9696 31B2  
                                 l9688 319A                                   l9944 26A8  
                                 l9848 2398                                   l9936 2644  
                                 STR_2 20AF                                   STR_3 20C7  
                                 l8978 3ACE                                   l9698 31B8  
                                 l9954 2716                                   l9786 2232  
                                 STR_4 2092                                   STR_5 2035  
                                 STR_6 20A1                                   STR_7 20C1  
                                 l8998 3CA4                                   STR_8 20BB  
                                 STR_9 205D                                   l9896 2508  
                                 l9898 2512                                   u3010 4C4C  
                                 _LATA 003FBA                                   u3030 6302  
                                 _LATB 003FBB                                   _LATC 003FBC  
                                 u3040 6322                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 u3340 4CFA                                   u4070 5964  
                                 u3360 4E2E                                   u3440 4FDA  
                                 u3601 515E                                   u3370 4E30  
                                 u2810 45A2                                   u2900 479E  
                                 u2830 45F8                                   u5400 32BC  
                                 u2841 4602                                   u6105 3972  
                                 u5250 54FA                                   u2850 463C  
                                 u2930 4A88                                   u2770 651C  
                                 _T6PR 003F93                                   u6115 3982  
                                 u6107 3976                                   u2780 6814  
                                 u2860 466E                                   u5420 32CE  
                                 _PMD0 0039C0                                   u3581 503C  
                                 u6117 3986                                   _PMD1 0039C1  
                                 u2790 6816                                   u5270 5576  
                                 u2950 4ADE                                   u5510 35EA  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u3840 60A8                                   u5280 5DBA  
                                 u2880 474C                                   u2960 4B10  
                                 u5440 331E                                   u3680 52A0  
                                 u6240 3F06                                   _PMD4 0039C4  
                                 _PMD5 0039C5                                   u2970 4B42  
                                 u5450 3576                                   u5370 324A  
                                 _PMD6 0039C6                                   _PMD7 0039C7  
                                 u5380 324C                                   u5620 4286  
                                 u6340 2DCA                                   u5461 35A6  
                                 u3685 528E                                   u2990 4BFA  
                                 u5470 35BC                                   u5710 2974  
                                 u5287 5DAC                                   u5471 35BA  
                                 u6095 3962                                   u6191 3E30  
                                 u5480 35D0                                   u5800 3D18  
                                 u6360 2E00                                   u3865 60DC  
                                 u6097 3966                                   u3866 60DE  
                                 u3858 60AA                                   u5490 35D4  
                                 u5730 2AB2                                   u5580 4164  
                                 u5660 286C                                   u5590 41AA  
                                 u5670 286E                                   u5680 2894  
                                 u5850 5B82                                   u5860 484C  
                                 u5597 419C                                   u6565 3146  
                                 u6575 3156                                   u6567 314A  
                                 u6585 3166                                   u6577 315A  
                                 u6587 316A                                   _PLLR 01CEE0  
                                 _WPUA 003A41                                   _WPUB 003A51  
                                 _WPUC 003A61                                   _WPUD 003A71  
                                 _WPUE 003A81                                   _WPUF 003A91  
                        _INT2_CallBack 6CF0                       __end_of_ADCC_ISR 6878  
                        __CFG_FCMEN$ON 000000                                   _dbuf 01CE  
                                 _atoi 4C70                                   _ctoa 5FA8  
                                 _main 20D8                                   _dtoa 321A  
                                 _rand 5188                                   _seed 00F3  
                                 _prec 001F                                   _nout 00F1  
                                 fsr0h 003FEA                                   fsr1h 003FE2  
                                 indf0 003FEF                                   fsr2h 003FDA  
                                 fsr0l 003FE9                                   indf1 003FE7  
                                 indf2 003FDF                                   fsr1l 003FE1  
                                 fsr2l 003FD9                                   _stoa 3FE2  
                                 btemp 003D      __size_of_INT2_SetInterruptHandler 0028  
                                 prodh 003FF4                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0029  
            __end_of_SPI1_Exchange8bit 6D70                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 6BCC                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005E  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 6E9A  
                     __end_of_INT1_ISR 6EAA                       __end_of_INT2_ISR 6EBA  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 5CA0  
        __end_of_OSCILLATOR_Initialize 6E58                                  PRLOCK 0039EF  
                      __end_of___aodiv 47C6                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 4C70                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 2035  
                                STR_11 206F                                  STR_20 20CD  
                                STR_12 2001                                  STR_13 204A  
                                STR_14 20BB                                  STR_22 20CD  
                                STR_15 2001                                  STR_24 20D0  
                                STR_16 201B                                  STR_17 20B8  
                        __CFG_WDTE$OFF 000000                                  STR_26 20D0  
                                STR_18 20D3                                  _ADRPT 003EEC  
                                _U1P1H 003DED                                  _U1P2H 003DEF  
                                _U1P1L 003DEC                                  _U1P3H 003DF1  
                                _U1P2L 003DEE                                  _U1P3L 003DF0  
                                _U2P1L 003DD4                                  _U2P2L 003DD6  
                                _U2P3L 003DD8                                  _T5CLK 003F9D  
                                _T5CON 003F9A                                  _T6CON 003F94  
                       __CFG_DEBUG$OFF 000000                                  _T6HLT 003F95  
                                _U1UIR 003DF8                                  _U1RXB 003DE8  
                                _U2UIR 003DE0                                  _U1TXB 003DEA  
                                _U2RXB 003DD0                                  _U2TXB 003DD2  
                                _T6TMR 003F92                                  _T6RST 003F97  
                  ??_UART1_rx_vect_isr 005E                                  _ISRPR 0039F1  
                                _OSCEN 0039DD                                  _TMR5H 003F99  
                                _TMR5L 003F98                                  _TRISA 003FC2  
                                _TRISB 003FC3                                  _TRISC 003FC4  
                                _TRISD 003FC5                                  _TRISE 003FC6  
                                _TRISF 003FC7                            _Default_ISR 6F14  
    __size_of_TMR6_SetInterruptHandler 0028                      _UART1_tx_vect_isr 6BA4  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                       __end_of_TMR5_ISR 6472  
                         _DMA1CON0bits 003BFC                       __end_of_TMR6_ISR 6E12  
                         _DMA1CON1bits 003BFD                     r_protocol@rxData_l 002E  
                                _flags 0021                                  _fputc 54D6  
           __size_of_send_lcd_cmd_long 0028                                  _fputs 5E7E  
                      __end_of_isdigit 6820                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005E                                  _srand 67BC  
                                _width 001D                                  _putch 6DDE  
                      __end_of_isspace 6336               _INT1_SetInterruptHandler 6B2C  
                                pclath 003FFA                                  tablat 003FF5  
              __size_of_DSM_Initialize 001C                                  ltemp0 003D  
                                ltemp1 0041                                  ltemp2 0045  
             __size_of_DMA1_Initialize 006A                                  plusw1 003FE3  
                                plusw2 003FDB                                  ttemp0 003D  
                                ttemp1 0040                                  ttemp2 0043  
                                ttemp3 0046                                  ttemp5 003E  
                                ttemp6 0041                                  ttemp7 0045  
                       _secs_gem_state 58D6                                  status 003FD8  
  __end_of_UART1_SetRxInterruptHandler 6A8C            _UART1_SetRxInterruptHandler 6A64  
                                wtemp0 003D                                  wtemp1 003F  
                                wtemp2 0041                                  wtemp3 0043  
                                wtemp4 0045                                  wtemp5 0047  
                                wtemp8 003E                        __end_of_sprintf 5A84  
                      __end_of_strncmp 502E                    ??_UART1_tx_vect_isr 005E  
            __size_of_DMA1_DMADCNT_ISR 000A              __end_of_UART1_rx_vect_isr 6BF2  
             __size_of_SPI1_Initialize 0016                        _TMR5_Initialize 654E  
                __end_of_ringBufS_init 69EC                        __initialization 52A6  
                    _UART2_rx_vect_isr 6C1C                           __end_of_atoi 4E9E  
                         __end_of_ctoa 6030                           __end_of_main 271A  
                         __end_of_dtoa 369A                           __end_of_rand 52A6  
                         __end_of_stoa 42A0             __size_of_UART2_is_rx_ready 0008  
                       __CFG_SAFEN$OFF 000000                     ?_UART2_rx_vect_isr 005E  
           __size_of_UART2_is_tx_ready 0008               _TMR5_SetInterruptHandler 6ADC  
                        __activetblptr 000003              __size_of_DMA1_DMASCNT_ISR 0010  
 __size_of_UART1_SetTxInterruptHandler 0028                    ??_UART2_rx_vect_isr 005E  
            __end_of_UART1_tx_vect_isr 6BCA                                 INTCON0 003FD2  
 __size_of_UART2_SetRxInterruptHandler 0028                         __CFG_MVECEN$ON 000000  
                      _TMR6_Initialize 6A8C                       _UART1_Initialize 6164  
                    _UART2_tx_vect_isr 6BF4                     _UART2_Transmit_ISR 68A4  
                               _ADACCU 003EEA                                 _ADACQH 003EF4  
                               _ADACQL 003EF3                                 _ADCON0 003EF8  
                               _ADCON1 003EF9                                 _ADCON2 003EFA  
                               _ADCON3 003EFB                                 _ADLTHH 003EDF  
                               _ADLTHL 003EDE                                 _ADPREH 003EF7  
                               _ADPREL 003EF6                                 _DMA1PR 0039F3  
                               _DMA2PR 0039F4                                 _ADSTAT 003EFC  
                               _ADUTHH 003EE1                                 _ADUTHL 003EE0  
                               _ANSELA 003A40                                 _ANSELB 003A50  
                               _ANSELC 003A60                                 _ANSELD 003A70  
                               _ANSELE 003A80                                 _ANSELF 003A90  
                   ?_UART2_tx_vect_isr 005E                                 _MD1SRC 003CFC  
               __end_of_secs_gem_state 59BC                                 _U1CON0 003DF2  
                               _U1CON1 003DF3                                 _U1CON2 003DF4  
                  __size_of_UART1_Read 003E                                 _U1BRGH 003DF6  
                               _U1FIFO 003DF7                                 _U2CON0 003DDA  
                               _U2CON1 003DDB                                 _U1BRGL 003DF5  
                               _U2CON2 003DDC                                 _U2BRGH 003DDE  
                               _U2FIFO 003DDF                                 _U2BRGL 003DDD  
                               _T5GATE 003F9C                    __size_of_UART2_Read 003E  
                               _T5GCON 003F9B                                 _MAINPR 0039F2  
                               _RA4PPS 003A04                                 _RA5PPS 003A05  
                               _RA6PPS 003A06                                 _RC3PPS 003A13  
                               _RB6PPS 003A0E                                 _RC5PPS 003A15  
                               _ODCONA 003A42                                 _ODCONB 003A52  
                               _ODCONC 003A62                                 _RC6PPS 003A16  
                               _ODCOND 003A72                                 _ODCONE 003A82  
                               _ODCONF 003A92                                 i2l1145 646A  
                       __CFG_WDTCCS$SC 000000                                 u150_48 6CDC  
                               u152_48 6CFE                                 u148_48 6CBA  
                               _SCANPR 0039F7                                 u421_48 6C76  
                               u418_48 6C52                                 _IVTADH 00389E  
                               _IVTADL 00389D                                 _IVTADU 00389F  
         __size_of_eaDogM_WriteCommand 000E                                 u394_40 6E1A  
                               u394_46 6E1C                                 _OSCFRQ 0039DF  
             __end_of_send_lcd_cmd_dma 6386                    ??_UART2_tx_vect_isr 005E  
            __end_of_UART2_rx_vect_isr 6C42             __size_of_SPI1_Exchange8bit 001E  
               __size_of_DMA1_DMAA_ISR 000A                         __CFG_XINST$OFF 000000  
                    _CLKREF_Initialize 6EBA                       _UART2_Initialize 622A  
                               _WaitMs 6786   __size_of_ADCC_SetADIInterruptHandler 0028  
                               ___omul 502E                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 5F16                                 _memset 3A36  
                               clear_0 536E                                 clear_1 537A  
                               clear_2 5386                                 clear_3 5392  
                               clear_4 539E                                 clear_5 53AA  
                               _printf 61C8                     _eaDogM_WriteString 5B44  
                            ?_ADCC_ISR 005E                                 _strlen 5D44  
                   __size_of_TimerDone 0028                           __pdataBIGRAM 0443  
                      _ADCC_Initialize 64BE                         _PMD_Initialize 6E58  
 __end_of_INT2_DefaultInterruptHandler 6F20  __size_of_INT2_DefaultInterruptHandler 0002  
         _INT2_DefaultInterruptHandler 6F1E                           __pdataCOMRAM 005D  
            __end_of_UART2_tx_vect_isr 6C1A                                 lltemp0 003D  
                               lltemp1 0045                                 lltemp2 004D  
                               lltemp3 0055                           __mediumconst 0000  
                               tblptrh 003FF7                                 tblptrl 003FF6  
                               tblptru 003FF8                       __end_of_wdtdelay 62E4  
                     __end_of_vfprintf 5E7E                             _StartTimer 65D6  
                      _CLC1_Initialize 6C8A          __size_of_INTERRUPT_Initialize 0066  
              __end_of_TMR5_Initialize 6594                      _SYSTEM_Initialize 6594  
                           __accesstop 0060                __end_of__initialization 53BC  
                            ?_INT0_ISR 005E                              ?_INT1_ISR 005E  
                            ?_INT2_ISR 005E              __end_of_CLKREF_Initialize 6EC4  
                        ___rparam_used 000001             __size_of_UART1_rx_vect_isr 0026  
                      _TMR5_WriteTimer 6616                 __end_of_ringBufS_flush 5FA8  
                       __pcstackCOMRAM 005E                             ___inthi_sp 0E2E  
                         __pidataBANK0 6100                           __pidataBANK1 5A84  
                         __pidataBANK2 6386                           __pidataBANK3 674E  
                            ?_TMR5_ISR 005E                              ?_TMR6_ISR 005E  
                       ivt0x8_undefint 00AC                          __end_of_fputc 55E2  
                        __end_of_fputs 5F16                          __end_of_srand 67F0  
                __end_of_TMR5_CallBack 6C8A                          __end_of_putch 6DF8  
              __end_of_TMR6_Initialize 6AB4                 __end_of_PMD_Initialize 6E6C  
              __size_of_block_checksum 0108                             ??_ADCC_ISR 005E  
                __end_of_TMR6_CallBack 6C66            __size_of_EXT_INT_Initialize 004C  
           __size_of_UART1_tx_vect_isr 0026                          _DMA1_DMAA_ISR 6ED0  
     __end_of_INT2_SetInterruptHandler 6B2C               _UART2_RxInterruptHandler 0011  
            __end_of_SYSTEM_Initialize 65D6                        __CFG_PR1WAY$OFF 000000  
                      __CFG_IVT1WAY$ON 000000                         _DSM_Initialize 6DA8  
                           __pbssBANK0 00C4                             __pbssBANK1 01C0  
                           __pbssBANK2 0200                             __pbssBANK3 0300  
                           __pbssBANK4 0400                  _INT0_InterruptHandler 001A  
                           ??_INT0_ISR 005E                             ??_INT1_ISR 005E  
                           ??_INT2_ISR 005E                      __end_of_TimerDone 6974  
                     _DMA1_DMADCNT_ISR 6EC4              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                           _hb_message 6DC4                  __end_of_wait_lcd_done 6D8C  
                      __CFG_PPS1WAY$ON 000000       __end_of_TMR6_SetInterruptHandler 6ADC  
              __end_of_ADCC_Initialize 6508                             ??_TMR5_ISR 00FB  
                           ??_TMR6_ISR 005E                     __size_of_secs_send 026A  
                              _CLC1CON 003C74                                _CLC1POL 003C75  
                              _DMA1DSA 003BF0                                _DMA1DSZ 003BEE  
                              _DMA1SSA 003BF9                                _DMA1SSZ 003BF7  
                              _ADSTPTH 003EE5                                _ADSTPTL 003EE4  
                              _MD1CARH 003CFE                                _MD1CARL 003CFD  
                    _UART1_Receive_ISR 6D12                                _CLKRCLK 003CE6  
                              _CLKRCON 003CE5                                _NCO1CLK 003F3F  
                       ?_DMA1_DMAA_ISR 005E                       _DMA1_DMASCNT_ISR 6E6C  
                              _NCO1CON 003F3E                                _U1ERRIE 003DFA  
                              _U1ERRIR 003DF9                __end_of_CLC1_Initialize 6CAC  
                              _U2ERRIE 003DE2                                _U2ERRIR 003DE1  
                              _INT0PPS 003AC0                    __CFG_PWRTS$PWRT_OFF 000000  
                              _INT1PPS 003AC1                                _INT2PPS 003AC2  
                         ?_Default_ISR 005E                   __size_of_UART1_Write 003E  
            __size_of_UART2_put_buffer 002A             __size_of_UART2_tx_vect_isr 0026  
                 __size_of_UART2_Write 003E                                _U1RXPPS 003AE5  
                              _U2RXPPS 003AE8                                _OSCCON1 0039D9  
                              _OSCCON3 0039DB                                _IVTLOCK 003FD4  
                   __size_of_vfpfcnvrt 05DA                                _SPI1CLK 003D1C  
                              _SPI1RXB 003D10                                _SPI1TXB 003D11  
                              _OSCTUNE 0039DE                 __end_of_DSM_Initialize 6DC4  
                              _SLRCONA 003A43                                _SLRCONB 003A53  
                              _SLRCONC 003A63                                _SLRCOND 003A73  
                              _SLRCONE 003A83                                _SLRCONF 003A93  
                   __size_of_start_lcd 0006                __end_of_TMR5_WriteTimer 6656  
                   __end_of_UART1_Read 674E                     __end_of_UART2_Read 6710  
    __size_of_INT0_SetInterruptHandler 0028             __size_of_CLKREF_Initialize 000A  
              __size_of_DMA1_DMAOR_ISR 000A                                __Hparam 0000  
                              __Lparam 0000               __end_of_UART1_Initialize 61C8  
                      __size_of_WaitMs 0036                                ___aodiv 4546  
                              ___aomod 4A30                        __size_of___omul 015A  
                           _m_protocol 2CF4              __end_of_UART1_Receive_ISR 6D32  
                         __psmallconst 2000                   __end_of_init_display 58D6  
                              __pcinit 52A6                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 6E7C                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 20D8                                __ptext1 3D22  
                              __ptext2 42A0                                __ptext3 67BC  
                              __ptext4 59BC                                __ptext5 369A  
                              __ptext6 2CF4                                __ptext7 47C6  
                              __ptext8 55E2                                __ptext9 5188  
                    _UART2_Receive_ISR 6D32                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us302999 4C5E                                us410999 4538  
                              us361999 5172                                us291999 47B0  
                _OSCILLATOR_Initialize 6E42                           __size_of_abs 0046  
                              _r_block 00C4                                us536999 3234  
                              us553999 3FF4                           __size_of_pad 0114  
                              _isdigit 67F0                                _mode_sw 0030  
                              _isspace 62E4                        __CFG_WRTSAF$OFF 000000  
                            _T5CONbits 003F9A               __end_of_UART2_Initialize 6288  
                   m_protocol@rxData_l 002F             __size_of_SYSTEM_Initialize 0042  
                              _sprintf 59BC                                _strncmp 4E9E  
                 end_of_initialization 53BC                      __end_of_secs_send 4A30  
             _INT2_SetInterruptHandler 6B04               __size_of_secs_II_message 02A6  
                           _r_protocol 369A    __end_of_UART1_SetTxInterruptHandler 6A64  
          _UART1_SetTxInterruptHandler 6A3C    __end_of_UART2_SetRxInterruptHandler 6A3C  
          _UART2_SetRxInterruptHandler 6A14                             _t_protocol 3D22  
                    __end_of_vfpfcnvrt 2CF4                              _SPI1TCNTL 003D12  
                              postdec1 003FE5                                postdec2 003FDD  
                              postinc0 003FEE                                postinc1 003FE6  
                              postinc2 003FDE                    __size_of_StartTimer 0040  
                    __end_of_start_lcd 6F12              __end_of_UART2_Receive_ISR 6D52  
                       wdtdelay@dcount 00E4                  __CFG_WDTCPS$WDTCPS_31 000000  
                      ??_DMA1_DMAA_ISR 005F                         _block_checksum 55E2  
                _INT1_InterruptHandler 0017                              _PORTBbits 003FCB  
             _TMR6_SetInterruptHandler 6AB4                  _TMR5_InterruptHandler 00E8  
 __size_of_UART2_SetTxInterruptHandler 0028                      __size_of_ADCC_ISR 002C  
  __end_of_ADCC_SetADIInterruptHandler 6BA4            _ADCC_SetADIInterruptHandler 6B7C  
               __size_of_ringBufS_init 0028                       __CFG_FEXTOSC$ECH 000000  
                      _DMA1_Initialize 6030                        _SPI1_Initialize 6E2C  
                     _UART1_put_buffer 68FA                      __size_of_INT0_ISR 000E  
                    __size_of_INT1_ISR 000E                      __size_of_INT2_ISR 000E  
                    r_protocol@b_block 0023                         __end_of_WaitMs 67BC  
         __end_of_INTERRUPT_Initialize 6100                 __end_of_block_checksum 56EA  
 __end_of_INT0_DefaultInterruptHandler 6F1C  __size_of_INT0_DefaultInterruptHandler 0002  
         _INT0_DefaultInterruptHandler 6F1A             __size_of_UART1_Receive_ISR 0020  
                       __end_of___omul 5188                          __pidataBIGRAM 56EA  
                        __pidataCOMRAM 6F22                      __size_of_TMR5_ISR 004E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 3D22                         __end_of_printf 622A  
             __end_of_DMA1_DMADCNT_ISR 6ECE                       _UART2_put_buffer 68D0  
                __end_of_INT0_CallBack 6CCE                         __end_of_strlen 5DE6  
                  start_initialization 52A6   __end_of_TMR5_DefaultInterruptHandler 6E2C  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 6E12  
      __size_of_PIN_MANAGER_Initialize 00A4                            __end_of_abs 654E  
                __end_of_INT1_CallBack 6CF0                            __end_of_pad 54D6  
                 __size_of_Default_ISR 0006                    __size_of_hb_message 001A  
                 __end_of_send_lcd_cmd 69C4                             ivt0x8_base 0008  
                __end_of_INT2_CallBack 6D12                   secs_II_message@block 0001  
                        _uart1RxBuffer 0240                          _uart1TxBuffer 0340  
                        _uart2RxBuffer 0200               __end_of_DMA1_DMASCNT_ISR 6E7C  
                        _uart2TxBuffer 0300                         _DMA1_DMAOR_ISR 6EDC  
                     __CFG_LPBOREN$OFF 000000                  __size_of_init_display 00EA  
          __size_of_eaDogM_WriteString 00B2                              _TimerDone 694C  
                        _ringBufS_init 69C4                            _MD1CON0bits 003CFA  
                          _MD1CON1bits 003CFB                            __pdataBANK0 0060  
                          __pdataBANK1 0100                            __pdataBANK2 0280  
                          __pdataBANK3 03C3             __size_of_UART2_Receive_ISR 0020  
           __end_of_EXT_INT_Initialize 64BE                        run_checksum@sum 0025  
      __end_of_eaDogM_WriteStringAtPos 684C                __end_of_DMA1_Initialize 609A  
                          __pbssCOMRAM 0001       __end_of_INT0_SetInterruptHandler 6B7C  
                        __pcstackBANK0 00FB                __end_of_SPI1_Initialize 6E42  
             _UART1_RxInterruptHandler 000B               _UART2_TxInterruptHandler 000E  
                  __size_of_m_protocol 0526              __size_of_ringBufS_put_dma 00AA  
                         _init_display 57EC                 __end_of_DMA1_DMAOR_ISR 6EE6  
               __size_of_TMR5_CallBack 0024                  _INT2_InterruptHandler 0014  
                _TMR6_InterruptHandler 00EB                 __size_of_TMR6_CallBack 0024  
               _PIN_MANAGER_Initialize 5CA0                   __end_of_wait_lcd_set 6F0C  
                            __ptext100 6BA4                              __ptext101 6878  
                            __ptext110 63D4                              __ptext102 6BCC  
                            __ptext111 6E6C                              __ptext103 6D12  
                            __ptext112 6EC4                              __ptext104 6BF4  
                            __ptext113 6ED0                              __ptext105 68A4  
                            __ptext114 6EDC                              __ptext106 6C1C  
                            __ptext115 6424                              __ptext107 6D32  
                            __ptext116 6616                              __ptext108 6DF8  
                            __ptext117 6C66                              __ptext109 6C42  
                            __ptext118 6E12                              __ptext119 0000  
                   __end_of_StartTimer 6616                      __size_of_wdtdelay 005C  
                    __size_of_vfprintf 0098                               _ADCC_ISR 684C  
                  __size_of_r_protocol 039C                 __CFG_BBSIZE$BBSIZE_512 000000  
                          __smallconst 2000                               _CLC1GLS0 003C7A  
                             _CLC1GLS1 003C7B                               _CLC1GLS2 003C7C  
                             _CLC1GLS3 003C7D                               _CLC1SEL0 003C76  
                             _CLC1SEL1 003C77                               _CLC1SEL2 003C78  
                             _CLC1SEL3 003C79                               _DMA1CON0 003BFC  
                             _DMA1CON1 003BFD                               _DMA1AIRQ 003BFE  
                             _DMA1SIRQ 003BFF                            _NCO1CONbits 003F3E  
                  __size_of_t_protocol 02C0                 __size_of_wait_lcd_done 001C  
                       __size_of_fputc 010C                         __size_of_fputs 0098  
                       __size_of_srand 0034                               _NCO1ACCH 003F39  
                       __size_of_putch 001A                               _NCO1ACCL 003F38  
                             _NCO1ACCU 003F3A                   _INTERRUPT_Initialize 609A  
                             _T6CLKCON 003F96                               _NCO1INCH 003F3C  
                             _NCO1INCL 003F3B                               _NCO1INCU 003F3D  
                      ?_DMA1_DMAOR_ISR 005E                               _INT0_ISR 6E8C  
                             _INT1_ISR 6E9C                               _INT2_ISR 6EAC  
                             _LATCbits 003FBC                               _LATDbits 003FBD  
                             _LATEbits 003FBE      __size_of_INT1_SetInterruptHandler 0028  
                            _secs_send 47C6                               _IPR1bits 003981  
                             _IPR2bits 003982                               _PIE1bits 003991  
                             _IPR3bits 003983                               _PIE2bits 003992  
                             _IPR5bits 003985                               _PIE3bits 003993  
                            _tickCount 01C0                               _IPR6bits 003986  
                             _PIE5bits 003995                               _IPR7bits 003987  
                             _IPR8bits 003988                               _PIE6bits 003996  
                             _PIE7bits 003997                               _IPR9bits 003989  
                             _PIE8bits 003998                    __CFG_BORV$VBOR_2P45 000000  
                             _PIE9bits 003999                              _ring_buf1 0380  
                            _ring_buf2 0400                               _PIR1bits 0039A1  
                             _PIR2bits 0039A2                               _SPI1BAUD 003D19  
                             _SPI1CON0 003D14                               _SPI1CON1 003D15  
                             _SPI1CON2 003D16                               _PIR5bits 0039A5  
                             i2u491_48 6864                               _PIR7bits 0039A7  
                             i2u493_48 6BB6                               _PIR8bits 0039A8  
                             i2u495_48 6BDE                               _PIR9bits 0039A9  
                             i2u497_48 6C06                               i2u499_48 6C2E  
             __size_of_TMR5_Initialize 0046             __end_of_UART1_Transmit_ISR 68A4  
                             _TMR5_ISR 6424                               _TMR6_ISR 6DF8  
                            _vfpfcnvrt 271A                           _SPI1INTFbits 003D1A  
                        _TMR5_CallBack 6C66                              _start_lcd 6F0C  
            __size_of_send_lcd_cmd_dma 0050                          _TMR6_CallBack 6C42  
             __end_of_UART1_put_buffer 6924                  __size_of_send_lcd_cmd 0028  
    __size_of_TMR5_SetInterruptHandler 0028                    __end_of_UART1_Write 66D2  
                  __end_of_UART2_Write 6694               __size_of_TMR6_Initialize 0028  
                   __end_of_hb_message 6DDE                            _INTCON0bits 003FD2  
                            copy_data0 52BA                              copy_data1 52E0  
                            copy_data2 5302                              copy_data3 5324  
                            copy_data4 5346               _INT0_SetInterruptHandler 6B54  
               _uart1TxBufferRemaining 003A    __end_of_UART2_SetTxInterruptHandler 6A14  
          _UART2_SetTxInterruptHandler 69EC                           _uart1RxCount 0037  
             __end_of_UART2_put_buffer 68FA                           _uart2RxCount 0031  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 694C  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 6D70                           _send_lcd_cmd 699C  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 6D8C                  __end_of_DMA1_DMAA_ISR 6EDA  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005E  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 6E8A  
                     __size_of_isdigit 0030                               __pivt0x8 0008  
                     __size_of_isspace 0052                     ??_DMA1_DMADCNT_ISR 005F  
                             __ptext10 502E                               __ptext11 68D0  
                             __ptext20 694C                               __ptext12 6EE6  
                             __ptext21 65D6                               __ptext13 6656  
                             __ptext30 69C4                               __ptext22 6EF6  
                             __ptext14 68FA                               __ptext31 6DC4  
                             __ptext23 66D2                               __ptext15 6EEE  
                             __ptext40 5F16                               __ptext32 6820  
                             __ptext24 6EFE                               __ptext16 6694  
                             __ptext41 3A36                               __ptext33 5B44  
                             __ptext25 6710                               __ptext17 58D6  
                             __ptext50 4546                               __ptext42 61C8  
                             __ptext34 6E7C                               __ptext26 57EC  
                             __ptext18 6924                               __ptext51 5FA8  
                             __ptext43 5DE6                               __ptext35 6336  
                             __ptext27 6974                               __ptext19 6786  
                             __ptext60 67F0                               __ptext52 53C2  
                             __ptext44 271A                               __ptext36 6F06  
                             __ptext28 699C                               __ptext61 6594  
                             __ptext53 5D44                               __ptext45 4E9E  
                             __ptext37 6D70                               __ptext29 6D52  
                             __ptext70 654E                               __ptext62 622A  
                             __ptext54 5E7E                               __ptext46 3FE2  
                             __ptext38 6288                               __ptext71 6ADC  
                             __ptext63 69EC                               __ptext55 54D6  
                             __ptext47 321A                               __ptext39 6F0C  
                             __ptext80 6B2C                               __ptext72 6E2C  
                             __ptext64 6A14                               __ptext56 6DDE  
                             __ptext48 6508                               __ptext81 6B54  
                             __ptext73 6E58                               __ptext65 6164  
                             __ptext57 5BF6                               __ptext49 4A30  
                             __ptext90 6F1A                               __ptext82 6DA8  
                             __ptext74 5CA0                               __ptext66 6A3C  
                             __ptext58 4C70                               __ptext91 6E9C  
                             __ptext83 6030                               __ptext75 6E42  
                             __ptext67 6A64                               __ptext59 62E4  
                             __ptext92 6CCE                               __ptext84 6EBA  
                             __ptext76 6D8C                               __ptext68 6A8C  
                             __ptext93 6F1C                               __ptext85 6C8A  
                             __ptext77 609A                               __ptext69 6AB4  
                             __ptext94 6EAC                               __ptext86 64BE  
                             __ptext78 6472                               __ptext95 6CF0  
                             __ptext87 6B7C                               __ptext79 6B04  
                             __ptext96 6F1E                               __ptext88 6E8C  
                             __ptext97 6F14                               __ptext89 6CAC  
                             __ptext98 684C                               __ptext99 6F20  
                      _secs_II_message 42A0               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 5BF6                     __end_of_m_protocol 321A  
                        __size_of_atoi 022E                          __size_of_ctoa 0088  
                        __size_of_main 0642                          __size_of_dtoa 0480  
                        __size_of_rand 011E                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005E                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 00EE  
                            stoa@F1144 0100                     ??_DMA1_DMASCNT_ISR 005F  
                             _spi_link 00D1                               _wdtdelay 6288  
           __end_of_UART2_Transmit_ISR 68D0                               _vfprintf 5DE6  
                  secs_gem_state@block 002B                      _UART1_is_rx_ready 6EFE  
                          _UART1_Write 6694   __end_of_INT1_DefaultInterruptHandler 6F1E  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 6F1C  
                          _UART2_Write 6656                      _UART1_is_tx_ready 6EEE  
                      r_protocol@retry 005D                      t_protocol@requeue 002C  
                        ??_Default_ISR 005E                     __end_of_r_protocol 3A36  
                          _uart1RxHead 0039                            _uart1TxHead 003C  
                          _uart2RxHead 0033                            _uart1RxTail 0038  
                          _uart2TxHead 0036                            _uart1TxTail 003B  
                          _uart2RxTail 0032                            _uart2TxTail 0035  
                         _wait_lcd_set 6F06                     _EXT_INT_Initialize 6472  
 __end_of_TMR6_DefaultInterruptHandler 6422  __size_of_TMR6_DefaultInterruptHandler 004E  
         _TMR6_DefaultInterruptHandler 63D4                     __end_of_t_protocol 3FE2  
 __end_of_ADCC_DefaultInterruptHandler 6F22  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 6F20                               intlevel2 0000  
                    _send_lcd_cmd_long 6974                __size_of_secs_gem_state 00E6  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 5BF6  
              __end_of_NCO1_Initialize 6DA8                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 6F06                             _UART1_Read 6710  
               __size_of_INT1_CallBack 0022                             _UART2_Read 66D2  
            __end_of_UART1_is_tx_ready 6EF6                 __size_of_INT2_CallBack 0022  
                    _UART2_is_rx_ready 6EF6                 _uart2TxBufferRemaining 0034  
                    _UART2_is_tx_ready 6EE6                       _send_lcd_cmd_dma 6336  
                TMR5_ISR@CountCallBack 0027                __end_of_secs_II_message 4546  
     __end_of_INT1_SetInterruptHandler 6B54              __size_of_UART1_Initialize 0064  
                      t_protocol@block 00DD                       ??_DMA1_DMAOR_ISR 005F  
             _UART1_TxInterruptHandler 0008                        t_protocol@retry 002D  
            __end_of_send_lcd_cmd_long 699C                    __end_of_Default_ISR 6F1A  
       __end_of_PIN_MANAGER_Initialize 5D44                  __size_of_run_checksum 0028  
              _eaDogM_WriteStringAtPos 6820              __size_of_UART2_Initialize 005E  
