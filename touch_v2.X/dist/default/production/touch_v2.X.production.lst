

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Apr  3 01:22:31 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBIGRAM,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	idataBANK3,global,class=CODE,delta=1,noexec
    11                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
    12                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    13                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    18                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    20                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    21                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    22                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    23                           	psect	dataBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1,inline
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1,inline
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=4,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=4,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=4,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=4,class=CODE,delta=1
   118                           	psect	text92,global,reloc=4,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=4,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=4,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=4,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=4,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=4,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=4,class=CODE,delta=1
   132                           	psect	text106,global,reloc=4,class=CODE,delta=1
   133                           	psect	text107,global,reloc=4,class=CODE,delta=1
   134                           	psect	text108,global,reloc=4,class=CODE,delta=1
   135                           	psect	text109,global,reloc=4,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   140                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   141                           	psect	text113,global,reloc=2,class=CODE,delta=1
   142                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   143                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   144  0000                     
   145                           ; Version 2.05
   146                           ; Generated 20/12/2018 GMT
   147                           ; 
   148                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   149                           ; All rights reserved.
   150                           ; 
   151                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   152                           ; 
   153                           ; Redistribution and use in source and binary forms, with or without modification, are
   154                           ; permitted provided that the following conditions are met:
   155                           ; 
   156                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   157                           ;        conditions and the following disclaimer.
   158                           ; 
   159                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   160                           ;        of conditions and the following disclaimer in the documentation and/or other
   161                           ;        materials provided with the distribution.
   162                           ; 
   163                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   164                           ;        software without specific prior written permission.
   165                           ; 
   166                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   167                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   168                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   169                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   170                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   171                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   172                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   173                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   174                           ; 
   175                           ; 
   176                           ; Code-generator required, PIC18F57K42 Definitions
   177                           ; 
   178                           ; SFR Addresses
   179  0000                     
   180 ;;_mode	offset	0
   181 ;;_rxData	offset	0
   182 ;;_t_link	offset=-1 (param)
   183 ;;_k	offset	0
   184 ;;_checksum	offset	2
   185 ;;_i	offset	4
   186 ;;_byte_block	offset=-2 (param)
   187 ;;_length	offset=-3 (param)
   188 ;;_fake	offset=-4 (param)
   189 ;;_s_uart	offset=-5 (param)
   190 ;;_i	offset	0
   191 ;;_sum	offset	2
   192 ;;_byte_block	offset=-2 (param)
   193 ;;_byte_count	offset=-4 (param)
   194 ;;_bufData	offset=-1 (param)
   195 ;;_txData	offset=-1 (param)
   196 ;;_bufData	offset=-1 (param)
   197 ;;_stream	offset=-6 (param)
   198 ;;_function	offset=-7 (param)
   199 ;;_s	offset=-2 (param)
   200 ;;_f	offset	0
   201 ;;_ap	offset	5
   202 ;;_s	offset=-2 (param)
   203 ;;_fmt	offset=-3 (param)
   204 ;;_rxData	offset	0
   205 ;;_r_link	offset=-1 (param)
   206 ;;_txData	offset=-1 (param)
   207 ;;_rxData	offset	0
   208 ;;_m_link	offset=-1 (param)
   209 ;;_stream	offset=-1 (param)
   210 ;;_function	offset=-2 (param)
   211 ;;_byte_block	offset=-1 (param)
   212 ;;_clear	offset=-2 (param)
   213 ;;_numMilliseconds	offset=-2 (param)
   214 ;;_timer	offset=-1 (param)
   215 ;;_timer	offset=-1 (param)
   216 ;;_count	offset=-3 (param)
   217 ;;_readValue	offset	0
   218 ;;_readValue	offset	0
   219 ;;_cmd	offset=-1 (param)
   220 ;;_cmd	offset=-1 (param)
   221 ;;_data	offset=-1 (param)
   222 ;;__this	offset=-2 (param)
   223 ;;_r	offset=-1 (param)
   224 ;;_c	offset=-2 (param)
   225 ;;_strPtr	offset=-3 (param)
   226 ;;_strPtr	offset=-1 (param)
   227 ;;_cmd	offset=-1 (param)
   228 ;;_strPtr	offset=-1 (param)
   229 ;;_delay	offset=-4 (param)
   230 ;;__this	offset=-2 (param)
   231 ;;_clearBuffer	offset=-3 (param)
   232 ;;_s	offset	0
   233 ;;_k	offset	2
   234 ;;_dest	offset=-2 (param)
   235 ;;_c	offset=-4 (param)
   236 ;;_n	offset=-6 (param)
   237 ;;_ap	offset	0
   238 ;;_fmt	offset=-2 (param)
   239 ;;_cfmt	offset	0
   240 ;;_fp	offset=-2 (param)
   241 ;;_fmt	offset=-3 (param)
   242 ;;_ap	offset=-5 (param)
   243 ;;_ll	offset	0
   244 ;;_cp	offset	8
   245 ;;_c	offset	10
   246 ;;_fp	offset=-2 (param)
   247 ;;_fmt	offset=-4 (param)
   248 ;;_ap	offset=-6 (param)
   249 ;;_r	offset	0
   250 ;;_l	offset	1
   251 ;;__l	offset=-1 (param)
   252 ;;__r	offset=-2 (param)
   253 ;;_n	offset=-4 (param)
   254 ;;_nuls	offset	0
   255 ;;_l	offset	7
   256 ;;_p	offset	9
   257 ;;_cp	offset	11
   258 ;;_w	offset	13
   259 ;;_i	offset	15
   260 ;;_fp	offset=-2 (param)
   261 ;;_s	offset=-4 (param)
   262 ;;_dtoa$3973	offset	0
   263 ;;_n	offset	2
   264 ;;_i	offset	10
   265 ;;_s	offset	12
   266 ;;_w	offset	14
   267 ;;_p	offset	16
   268 ;;_fp	offset=-2 (param)
   269 ;;_d	offset=-10 (param)
   270 ;;_a	offset=-2 (param)
   271 ;;_sign	offset	0
   272 ;;_counter	offset	1
   273 ;;_dividend	offset=-8 (param)
   274 ;;_divisor	offset=-16 (param)
   275 ;;_quotient	offset	0
   276 ;;_sign	offset	8
   277 ;;_counter	offset	9
   278 ;;_dividend	offset=-8 (param)
   279 ;;_divisor	offset=-16 (param)
   280 ;;_w	offset	0
   281 ;;_fp	offset=-2 (param)
   282 ;;_c	offset=-3 (param)
   283 ;;_w	offset	0
   284 ;;_i	offset	2
   285 ;;_fp	offset=-2 (param)
   286 ;;_buf	offset=-4 (param)
   287 ;;_p	offset=-6 (param)
   288 ;;_a	offset	0
   289 ;;_s	offset=-2 (param)
   290 ;;_i	offset	0
   291 ;;_c	offset	2
   292 ;;_s	offset=-2 (param)
   293 ;;_fp	offset=-4 (param)
   294 ;;_c	offset=-2 (param)
   295 ;;_fp	offset=-4 (param)
   296 ;;_c	offset=-1 (param)
   297 ;;__this	offset=-2 (param)
   298 ;;_c	offset=-3 (param)
   299 ;;_InterruptHandler	offset=-3 (param)
   300 ;;_InterruptHandler	offset=-3 (param)
   301 ;;_InterruptHandler	offset=-3 (param)
   302 ;;_InterruptHandler	offset=-3 (param)
   303 ;;_InterruptHandler	offset=-3 (param)
   304 ;;_InterruptHandler	offset=-3 (param)
   305 ;;_state	offset	0
   306 ;;_InterruptHandler	offset=-3 (param)
   307 ;;_InterruptHandler	offset=-3 (param)
   308 ;;_InterruptHandler	offset=-3 (param)
   309 ;;_InterruptHandler	offset=-3 (param)
   310 ;;_i	offset	0
   311 ;;_timerVal	offset=-2 (param)
   312                           
   313                           	psect	idataCOMRAM
   314  0065BE                     __pidataCOMRAM:
   315                           	opt callstack 0
   316                           
   317                           ;initializer for r_protocol@retry
   318  0065BE  03                 	db	3
   319                           
   320                           	psect	idataBIGRAM
   321  004DC8                     __pidataBIGRAM:
   322                           	opt callstack 0
   323                           
   324                           ;initializer for _H254
   325  004DC8  0000               	dw	0
   326  004DCA  00                 	db	0
   327  004DCB  00                 	db	0
   328  004DCC  00                 	db	0
   329  004DCD  00                 	db	0
   330  004DCE  00                 	db	0
   331  004DCF  00                 	db	0
   332  004DD0  00                 	db	0
   333  004DD1  00                 	db	0
   334  004DD2  00                 	db	0
   335  004DD3  00                 	db	0
   336  004DD4  00                 	db	0
   337  004DD5  00                 	db	0
   338  004DD6  00                 	db	0
   339  004DD7  00                 	db	0
   340  004DD8  00                 	db	0
   341  004DD9  00                 	db	0
   342  004DDA  00                 	db	0
   343  004DDB  00                 	db	0
   344  004DDC  00                 	db	0
   345  004DDD  00                 	db	0
   346  004DDE  00                 	db	0
   347  004DDF  00                 	db	0
   348  004DE0  00                 	db	0
   349  004DE1  00                 	db	0
   350  004DE2  00                 	db	0
   351  004DE3  00                 	db	0
   352  004DE4  00                 	db	0
   353  004DE5  00                 	db	0
   354  004DE6  00                 	db	0
   355  004DE7  00                 	db	0
   356  004DE8  00                 	db	0
   357  004DE9  00                 	db	0
   358  004DEA  00                 	db	0
   359  004DEB  00                 	db	0
   360  004DEC  00                 	db	0
   361  004DED  00                 	db	0
   362  004DEE  00                 	db	0
   363  004DEF  00                 	db	0
   364  004DF0  00                 	db	0
   365  004DF1  00                 	db	0
   366  004DF2  00                 	db	0
   367  004DF3  00                 	db	0
   368  004DF4  00                 	db	0
   369  004DF5  00                 	db	0
   370  004DF6  00                 	db	0
   371  004DF7  00                 	db	0
   372  004DF8  00                 	db	0
   373  004DF9  00                 	db	0
   374  004DFA  00                 	db	0
   375  004DFB  00                 	db	0
   376  004DFC  00                 	db	0
   377  004DFD  00                 	db	0
   378  004DFE  00                 	db	0
   379  004DFF  00                 	db	0
   380  004E00  00                 	db	0
   381  004E01  00                 	db	0
   382  004E02  00                 	db	0
   383  004E03  00                 	db	0
   384  004E04  00                 	db	0
   385  004E05  00                 	db	0
   386  004E06  00                 	db	0
   387  004E07  00                 	db	0
   388  004E08  00                 	db	0
   389  004E09  00                 	db	0
   390  004E0A  00                 	db	0
   391  004E0B  00                 	db	0
   392  004E0C  00                 	db	0
   393  004E0D  00                 	db	0
   394  004E0E  00                 	db	0
   395  004E0F  00                 	db	0
   396  004E10  00                 	db	0
   397  004E11  00                 	db	0
   398  004E12  00                 	db	0
   399  004E13  00                 	db	0
   400  004E14  00                 	db	0
   401  004E15  00                 	db	0
   402  004E16  00                 	db	0
   403  004E17  00                 	db	0
   404  004E18  00                 	db	0
   405  004E19  00                 	db	0
   406  004E1A  00                 	db	0
   407  004E1B  00                 	db	0
   408  004E1C  00                 	db	0
   409  004E1D  00                 	db	0
   410  004E1E  00                 	db	0
   411  004E1F  00                 	db	0
   412  004E20  00                 	db	0
   413  004E21  00                 	db	0
   414  004E22  00                 	db	0
   415  004E23  00                 	db	0
   416  004E24  00                 	db	0
   417  004E25  00                 	db	0
   418  004E26  00                 	db	0
   419  004E27  00                 	db	0
   420  004E28  00                 	db	0
   421  004E29  00                 	db	0
   422  004E2A  00                 	db	0
   423  004E2B  00                 	db	0
   424  004E2C  00                 	db	0
   425  004E2D  00                 	db	0
   426  004E2E  00                 	db	0
   427  004E2F  00                 	db	0
   428  004E30  00                 	db	0
   429  004E31  00                 	db	0
   430  004E32  00                 	db	0
   431  004E33  00                 	db	0
   432  004E34  00                 	db	0
   433  004E35  00                 	db	0
   434  004E36  00                 	db	0
   435  004E37  00                 	db	0
   436  004E38  00                 	db	0
   437  004E39  00                 	db	0
   438  004E3A  00                 	db	0
   439  004E3B  00                 	db	0
   440  004E3C  00                 	db	0
   441  004E3D  00                 	db	0
   442  004E3E  00                 	db	0
   443  004E3F  00                 	db	0
   444  004E40  00                 	db	0
   445  004E41  00                 	db	0
   446  004E42  00                 	db	0
   447  004E43  00                 	db	0
   448  004E44  00                 	db	0
   449  004E45  00                 	db	0
   450  004E46  00                 	db	0
   451  004E47  00                 	db	0
   452  004E48  00                 	db	0
   453  004E49  00                 	db	0
   454  004E4A  00                 	db	0
   455  004E4B  00                 	db	0
   456  004E4C  00                 	db	0
   457  004E4D  00                 	db	0
   458  004E4E  00                 	db	0
   459  004E4F  00                 	db	0
   460  004E50  00                 	db	0
   461  004E51  00                 	db	0
   462  004E52  00                 	db	0
   463  004E53  00                 	db	0
   464  004E54  00                 	db	0
   465  004E55  00                 	db	0
   466  004E56  00                 	db	0
   467  004E57  00                 	db	0
   468  004E58  00                 	db	0
   469  004E59  00                 	db	0
   470  004E5A  00                 	db	0
   471  004E5B  00                 	db	0
   472  004E5C  00                 	db	0
   473  004E5D  00                 	db	0
   474  004E5E  00                 	db	0
   475  004E5F  00                 	db	0
   476  004E60  00                 	db	0
   477  004E61  00                 	db	0
   478  004E62  00                 	db	0
   479  004E63  00                 	db	0
   480  004E64  00                 	db	0
   481  004E65  00                 	db	0
   482  004E66  00                 	db	0
   483  004E67  00                 	db	0
   484  004E68  00                 	db	0
   485  004E69  00                 	db	0
   486  004E6A  00                 	db	0
   487  004E6B  00                 	db	0
   488  004E6C  00                 	db	0
   489  004E6D  00                 	db	0
   490  004E6E  00                 	db	0
   491  004E6F  00                 	db	0
   492  004E70  00                 	db	0
   493  004E71  00                 	db	0
   494  004E72  00                 	db	0
   495  004E73  00                 	db	0
   496  004E74  00                 	db	0
   497  004E75  00                 	db	0
   498  004E76  00                 	db	0
   499  004E77  00                 	db	0
   500  004E78  00                 	db	0
   501  004E79  00                 	db	0
   502  004E7A  00                 	db	0
   503  004E7B  00                 	db	0
   504  004E7C  00                 	db	0
   505  004E7D  00                 	db	0
   506  004E7E  00                 	db	0
   507  004E7F  00                 	db	0
   508  004E80  00                 	db	0
   509  004E81  00                 	db	0
   510  004E82  00                 	db	0
   511  004E83  00                 	db	0
   512  004E84  00                 	db	0
   513  004E85  00                 	db	0
   514  004E86  00                 	db	0
   515  004E87  00                 	db	0
   516  004E88  00                 	db	0
   517  004E89  00                 	db	0
   518  004E8A  00                 	db	0
   519  004E8B  00                 	db	0
   520  004E8C  00                 	db	0
   521  004E8D  00                 	db	0
   522  004E8E  00                 	db	0
   523  004E8F  00                 	db	0
   524  004E90  00                 	db	0
   525  004E91  00                 	db	0
   526  004E92  00                 	db	0
   527  004E93  00                 	db	0
   528  004E94  00                 	db	0
   529  004E95  00                 	db	0
   530  004E96  00                 	db	0
   531  004E97  00                 	db	0
   532  004E98  00                 	db	0
   533  004E99  00                 	db	0
   534  004E9A  00                 	db	0
   535  004E9B  00                 	db	0
   536  004E9C  00                 	db	0
   537  004E9D  00                 	db	0
   538  004E9E  00                 	db	0
   539  004E9F  00                 	db	0
   540  004EA0  00                 	db	0
   541  004EA1  00                 	db	0
   542  004EA2  00                 	db	0
   543  004EA3  00                 	db	0
   544  004EA4  00                 	db	0
   545  004EA5  00                 	db	0
   546  004EA6  00                 	db	0
   547  004EA7  00                 	db	0
   548  004EA8  00                 	db	0
   549  004EA9  00                 	db	0
   550  004EAA  00                 	db	0
   551  004EAB  00                 	db	0
   552  004EAC  00                 	db	0
   553  004EAD  00                 	db	0
   554  004EAE  00                 	db	0
   555  004EAF  00                 	db	0
   556  004EB0  00                 	db	0
   557  004EB1  00                 	db	0
   558  004EB2  00                 	db	0
   559  004EB3  00                 	db	0
   560  004EB4  00                 	db	0
   561  004EB5  00                 	db	0
   562  004EB6  00                 	db	0
   563  004EB7  00                 	db	0
   564  004EB8  00                 	db	0
   565  004EB9  00                 	db	0
   566  004EBA  00                 	db	0
   567  004EBB  00                 	db	0
   568  004EBC  00                 	db	0
   569  004EBD  00                 	db	0
   570  004EBE  0001               	dw	1
   571  004EC0  0000               	dw	0
   572  004EC2  01                 	db	1
   573  004EC3  80                 	db	128
   574  004EC4  03                 	db	3
   575  004EC5  8A                 	db	138
   576  004EC6  00                 	db	0
   577  004EC7  00                 	db	0
   578  004EC8  FE                 	db	254
   579                           
   580                           	psect	idataBANK0
   581  0058CA                     __pidataBANK0:
   582                           	opt callstack 0
   583                           
   584                           ;initializer for _V
   585  0058CA  00                 	db	0
   586  0058CB  00                 	db	0
   587  0058CC  00                 	db	0
   588  0058CD  00                 	db	0
   589  0058CE  00                 	db	0
   590  0058CF  00                 	db	0
   591  0058D0  00                 	db	0
   592  0058D1  00                 	db	0
   593  0058D2  00                 	db	0
   594  0058D3  00                 	db	0
   595  0058D4  00                 	db	0
   596  0058D5  00                 	db	0
   597  0058D6  00                 	db	0
   598  0058D7  00                 	db	0
   599  0058D8  00                 	db	0
   600  0058D9  00                 	db	0
   601  0058DA  00                 	db	0
   602  0058DB  00                 	db	0
   603  0058DC  00                 	db	0
   604  0058DD  00                 	db	0
   605  0058DE  00                 	db	0
   606  0058DF  00                 	db	0
   607  0058E0  00                 	db	0
   608  0058E1  00                 	db	0
   609  0058E2  00                 	db	0
   610  0058E3  00                 	db	0
   611  0058E4  00                 	db	0
   612  0058E5  00                 	db	0
   613  0058E6  00                 	db	0
   614  0058E7  00                 	db	0
   615  0058E8  00                 	db	0
   616  0058E9  00                 	db	0
   617  0058EA  00                 	db	0
   618  0058EB  00                 	db	0
   619  0058EC  00                 	db	0
   620  0058ED  00                 	db	0
   621  0058EE  00                 	db	0
   622  0058EF  00                 	db	0
   623  0058F0  00                 	db	0
   624  0058F1  00                 	db	0
   625  0058F2  00                 	db	0
   626  0058F3  00                 	db	0
   627  0058F4  00                 	db	0
   628  0058F5  00                 	db	0
   629  0058F6  00                 	db	0
   630  0058F7  00                 	db	0
   631  0058F8  00                 	db	0
   632  0058F9  00                 	db	0
   633  0058FA  00                 	db	0
   634  0058FB  00                 	db	0
   635  0058FC  00                 	db	0
   636  0058FD  00                 	db	0
   637  0058FE  00                 	db	0
   638  0058FF  00                 	db	0
   639  005900  00                 	db	0
   640  005901  00                 	db	0
   641  005902  00                 	db	0
   642  005903  00                 	db	0
   643  005904  00                 	db	0
   644  005905  00                 	db	0
   645  005906  00                 	db	0
   646  005907  00                 	db	0
   647  005908  00                 	db	0
   648  005909  00                 	db	0
   649  00590A  00                 	db	0
   650  00590B  00                 	db	0
   651  00590C  00                 	db	0
   652  00590D  00                 	db	0
   653  00590E  00                 	db	0
   654  00590F  00                 	db	0
   655  005910  0000               	dw	0
   656  005912  0000               	dw	0
   657  005914  0000               	dw	0
   658  005916  0000               	dw	0
   659  005918  00                 	db	0
   660  005919  00                 	db	0
   661  00591A  00                 	db	0
   662  00591B  00                 	db	0
   663  00591C  00                 	db	0
   664  00591D  0000               	dw	0
   665  00591F  0000               	dw	0
   666  005921  0000               	dw	0
   667  005923  0000               	dw	0
   668  005925  00                 	db	0
   669  005926  00                 	db	0
   670  005927  00                 	db	0
   671  005928  00                 	db	0
   672  005929  00                 	db	0
   673  00592A  01                 	db	1
   674  00592B  2D                 	db	45
   675                           
   676                           	psect	idataBANK1
   677  00514E                     __pidataBANK1:
   678                           	opt callstack 0
   679                           
   680                           ;initializer for stoa@F1142
   681  00514E  28                 	db	40
   682  00514F  6E                 	db	110
   683  005150  75                 	db	117
   684  005151  6C                 	db	108
   685  005152  6C                 	db	108
   686  005153  29                 	db	41
   687  005154  00                 	db	0
   688                           
   689                           ;initializer for _H10
   690  005155  0000               	dw	0
   691  005157  0001               	dw	1
   692  005159  0000               	dw	0
   693  00515B  01                 	db	1
   694  00515C  80                 	db	128
   695  00515D  01                 	db	1
   696  00515E  81                 	db	129
   697  00515F  00                 	db	0
   698  005160  00                 	db	0
   699  005161  0A                 	db	10
   700  005162  0000               	dw	0
   701  005164  00                 	db	0
   702  005165  00                 	db	0
   703  005166  00                 	db	0
   704  005167  00                 	db	0
   705  005168  00                 	db	0
   706  005169  00                 	db	0
   707  00516A  00                 	db	0
   708  00516B  00                 	db	0
   709  00516C  00                 	db	0
   710  00516D  00                 	db	0
   711  00516E  0A                 	db	10
   712  00516F  0000               	dw	0
   713  005171  0001               	dw	1
   714  005173  0000               	dw	0
   715  005175  01                 	db	1
   716  005176  80                 	db	128
   717  005177  00                 	db	0
   718  005178  01                 	db	1
   719  005179  00                 	db	0
   720  00517A  00                 	db	0
   721  00517B  0A                 	db	10
   722  00517C  0000               	dw	0
   723  00517E  0001               	dw	1
   724  005180  0000               	dw	0
   725  005182  01                 	db	1
   726  005183  80                 	db	128
   727  005184  01                 	db	1
   728  005185  81                 	db	129
   729  005186  00                 	db	0
   730  005187  80                 	db	128
   731  005188  0A                 	db	10
   732  005189  0000               	dw	0
   733  00518B  0001               	dw	1
   734  00518D  0000               	dw	0
   735  00518F  01                 	db	1
   736  005190  80                 	db	128
   737  005191  11                 	db	17
   738  005192  82                 	db	130
   739  005193  00                 	db	0
   740  005194  00                 	db	0
   741  005195  0A                 	db	10
   742  005196  0000               	dw	0
   743  005198  0001               	dw	1
   744  00519A  0000               	dw	0
   745  00519C  01                 	db	1
   746  00519D  80                 	db	128
   747  00519E  0F                 	db	15
   748  00519F  81                 	db	129
   749  0051A0  00                 	db	0
   750  0051A1  00                 	db	0
   751  0051A2  0A                 	db	10
   752  0051A3  0000               	dw	0
   753  0051A5  0001               	dw	1
   754  0051A7  0000               	dw	0
   755  0051A9  01                 	db	1
   756  0051AA  80                 	db	128
   757  0051AB  11                 	db	17
   758  0051AC  81                 	db	129
   759  0051AD  00                 	db	0
   760  0051AE  00                 	db	0
   761  0051AF  0A                 	db	10
   762                           
   763                           ;initializer for _H12
   764  0051B0  0000               	dw	0
   765  0051B2  00                 	db	0
   766  0051B3  01                 	db	1
   767  0051B4  0001               	dw	1
   768  0051B6  0000               	dw	0
   769  0051B8  01                 	db	1
   770  0051B9  80                 	db	128
   771  0051BA  02                 	db	2
   772  0051BB  01                 	db	1
   773  0051BC  00                 	db	0
   774  0051BD  00                 	db	0
   775  0051BE  0C                 	db	12
   776  0051BF  0000               	dw	0
   777  0051C1  00                 	db	0
   778  0051C2  01                 	db	1
   779  0051C3  0001               	dw	1
   780  0051C5  0000               	dw	0
   781  0051C7  01                 	db	1
   782  0051C8  80                 	db	128
   783  0051C9  0D                 	db	13
   784  0051CA  81                 	db	129
   785  0051CB  00                 	db	0
   786  0051CC  00                 	db	0
   787  0051CD  0C                 	db	12
   788                           
   789                           ;initializer for _H24
   790  0051CE  0000               	dw	0
   791  0051D0  41                 	db	65
   792  0051D1  20                 	db	32
   793  0051D2  30                 	db	48
   794  0051D3  31                 	db	49
   795  0051D4  30                 	db	48
   796  0051D5  39                 	db	57
   797  0051D6  31                 	db	49
   798  0051D7  31                 	db	49
   799  0051D8  30                 	db	48
   800  0051D9  38                 	db	56
   801  0051DA  34                 	db	52
   802  0051DB  36                 	db	54
   803  0051DC  30                 	db	48
   804  0051DD  30                 	db	48
   805  0051DE  0001               	dw	1
   806  0051E0  0000               	dw	0
   807  0051E2  01                 	db	1
   808  0051E3  80                 	db	128
   809  0051E4  12                 	db	18
   810  0051E5  02                 	db	2
   811  0051E6  00                 	db	0
   812  0051E7  00                 	db	0
   813  0051E8  18                 	db	24
   814                           
   815                           ;initializer for _H17
   816  0051E9  0000               	dw	0
   817  0051EB  00                 	db	0
   818  0051EC  01                 	db	1
   819  0051ED  00                 	db	0
   820  0051EE  01                 	db	1
   821  0051EF  21                 	db	33
   822  0051F0  02                 	db	2
   823  0051F1  01                 	db	1
   824  0051F2  0001               	dw	1
   825  0051F4  0000               	dw	0
   826  0051F6  01                 	db	1
   827  0051F7  80                 	db	128
   828  0051F8  0E                 	db	14
   829  0051F9  01                 	db	1
   830  0051FA  00                 	db	0
   831  0051FB  00                 	db	0
   832  0051FC  11                 	db	17
   833                           
   834                           ;initializer for _H14
   835  0051FD  0000               	dw	0
   836  0051FF  00                 	db	0
   837  005200  41                 	db	65
   838  005201  11                 	db	17
   839  005202  01                 	db	1
   840  005203  0001               	dw	1
   841  005205  0000               	dw	0
   842  005207  01                 	db	1
   843  005208  80                 	db	128
   844  005209  04                 	db	4
   845  00520A  01                 	db	1
   846  00520B  00                 	db	0
   847  00520C  00                 	db	0
   848  00520D  0E                 	db	14
   849                           
   850                           	psect	idataBANK2
   851  0063A6                     __pidataBANK2:
   852                           	opt callstack 0
   853                           
   854                           ;initializer for _H13
   855  0063A6  0000               	dw	0
   856  0063A8  00                 	db	0
   857  0063A9  01                 	db	1
   858  0063AA  21                 	db	33
   859  0063AB  0001               	dw	1
   860  0063AD  0000               	dw	0
   861  0063AF  01                 	db	1
   862  0063B0  80                 	db	128
   863  0063B1  0C                 	db	12
   864  0063B2  06                 	db	6
   865  0063B3  00                 	db	0
   866  0063B4  00                 	db	0
   867  0063B5  0D                 	db	13
   868  0063B6  0000               	dw	0
   869  0063B8  00                 	db	0
   870  0063B9  01                 	db	1
   871  0063BA  21                 	db	33
   872  0063BB  0001               	dw	1
   873  0063BD  0000               	dw	0
   874  0063BF  01                 	db	1
   875  0063C0  80                 	db	128
   876  0063C1  02                 	db	2
   877  0063C2  0A                 	db	10
   878  0063C3  00                 	db	0
   879  0063C4  00                 	db	0
   880  0063C5  0D                 	db	13
   881                           
   882                           	psect	idataBANK3
   883  005E12                     __pidataBANK3:
   884                           	opt callstack 0
   885                           
   886                           ;initializer for _H53
   887  005E12  0000               	dw	0
   888  005E14  00                 	db	0
   889  005E15  00                 	db	0
   890  005E16  00                 	db	0
   891  005E17  00                 	db	0
   892  005E18  00                 	db	0
   893  005E19  00                 	db	0
   894  005E1A  00                 	db	0
   895  005E1B  00                 	db	0
   896  005E1C  00                 	db	0
   897  005E1D  00                 	db	0
   898  005E1E  00                 	db	0
   899  005E1F  00                 	db	0
   900  005E20  00                 	db	0
   901  005E21  00                 	db	0
   902  005E22  00                 	db	0
   903  005E23  00                 	db	0
   904  005E24  00                 	db	0
   905  005E25  00                 	db	0
   906  005E26  00                 	db	0
   907  005E27  00                 	db	0
   908  005E28  00                 	db	0
   909  005E29  00                 	db	0
   910  005E2A  00                 	db	0
   911  005E2B  00                 	db	0
   912  005E2C  00                 	db	0
   913  005E2D  00                 	db	0
   914  005E2E  00                 	db	0
   915  005E2F  00                 	db	0
   916  005E30  00                 	db	0
   917  005E31  00                 	db	0
   918  005E32  00                 	db	0
   919  005E33  44                 	db	68
   920  005E34  45                 	db	69
   921  005E35  52                 	db	82
   922  005E36  46                 	db	70
   923  005E37  2B                 	db	43
   924  005E38  01                 	db	1
   925  005E39  41                 	db	65
   926  005E3A  01                 	db	1
   927  005E3B  01                 	db	1
   928  005E3C  21                 	db	33
   929  005E3D  02                 	db	2
   930  005E3E  01                 	db	1
   931  005E3F  0001               	dw	1
   932  005E41  0000               	dw	0
   933  005E43  01                 	db	1
   934  005E44  80                 	db	128
   935  005E45  03                 	db	3
   936  005E46  8A                 	db	138
   937  005E47  00                 	db	0
   938  005E48  00                 	db	0
   939  005E49  35                 	db	53
   940  0000                     _IVTADL	set	14493
   941  0000                     _IVTADH	set	14494
   942  0000                     _IVTADU	set	14495
   943  0000                     _PIE8bits	set	14744
   944  0000                     _PIR8bits	set	14760
   945  0000                     _SCANPR	set	14839
   946  0000                     _DMA2PR	set	14836
   947  0000                     _DMA1PR	set	14835
   948  0000                     _MAINPR	set	14834
   949  0000                     _ISRPR	set	14833
   950  0000                     _PIE2bits	set	14738
   951  0000                     _PIR2bits	set	14754
   952  0000                     _PIE9bits	set	14745
   953  0000                     _PIR9bits	set	14761
   954  0000                     _PIE6bits	set	14742
   955  0000                     _PIE3bits	set	14739
   956  0000                     _PMD7	set	14791
   957  0000                     _PMD6	set	14790
   958  0000                     _PMD5	set	14789
   959  0000                     _PMD4	set	14788
   960  0000                     _PMD3	set	14787
   961  0000                     _PMD2	set	14786
   962  0000                     _PMD1	set	14785
   963  0000                     _PMD0	set	14784
   964  0000                     _OSCTUNE	set	14814
   965  0000                     _OSCFRQ	set	14815
   966  0000                     _OSCEN	set	14813
   967  0000                     _OSCCON3	set	14811
   968  0000                     _OSCCON1	set	14809
   969  0000                     _IPR8bits	set	14728
   970  0000                     _IPR9bits	set	14729
   971  0000                     _IPR7bits	set	14727
   972  0000                     _IPR5bits	set	14725
   973  0000                     _IPR1bits	set	14721
   974  0000                     _IPR3bits	set	14723
   975  0000                     _IPR6bits	set	14726
   976  0000                     _IPR2bits	set	14722
   977  0000                     _PIE7bits	set	14743
   978  0000                     _PIE5bits	set	14741
   979  0000                     _PIE1bits	set	14737
   980  0000                     _PIR7bits	set	14759
   981  0000                     _PIR5bits	set	14757
   982  0000                     _PIR1bits	set	14753
   983  0000                     _PLLR	set	118496
   984  0000                     _SPI1SDIPPS	set	15071
   985  0000                     _RC6PPS	set	14870
   986  0000                     _RC5PPS	set	14869
   987  0000                     _RA6PPS	set	14854
   988  0000                     _RA5PPS	set	14853
   989  0000                     _RA4PPS	set	14852
   990  0000                     _SPI1SCKPPS	set	15070
   991  0000                     _U1RXPPS	set	15077
   992  0000                     _INT1PPS	set	15041
   993  0000                     _INT2PPS	set	15042
   994  0000                     _INT0PPS	set	15040
   995  0000                     _RC3PPS	set	14867
   996  0000                     _RB6PPS	set	14862
   997  0000                     _U2RXPPS	set	15080
   998  0000                     _SLRCONF	set	14995
   999  0000                     _SLRCONE	set	14979
  1000  0000                     _SLRCOND	set	14963
  1001  0000                     _SLRCONC	set	14947
  1002  0000                     _SLRCONB	set	14931
  1003  0000                     _SLRCONA	set	14915
  1004  0000                     _ODCOND	set	14962
  1005  0000                     _ODCONC	set	14946
  1006  0000                     _ODCONB	set	14930
  1007  0000                     _ODCONA	set	14914
  1008  0000                     _ODCONF	set	14994
  1009  0000                     _ODCONE	set	14978
  1010  0000                     _WPUC	set	14945
  1011  0000                     _WPUA	set	14913
  1012  0000                     _WPUB	set	14929
  1013  0000                     _WPUE	set	14977
  1014  0000                     _WPUF	set	14993
  1015  0000                     _WPUD	set	14961
  1016  0000                     _ANSELA	set	14912
  1017  0000                     _ANSELF	set	14992
  1018  0000                     _ANSELE	set	14976
  1019  0000                     _ANSELB	set	14928
  1020  0000                     _ANSELC	set	14944
  1021  0000                     _ANSELD	set	14960
  1022  0000                     _DMA1SSA	set	15353
  1023  0000                     _DMA1DSZ	set	15342
  1024  0000                     _DMA1SSZ	set	15351
  1025  0000                     _DMA1DSA	set	15344
  1026  0000                     _DMA1CON0bits	set	15356
  1027  0000                     _DMA1CON1bits	set	15357
  1028  0000                     _DMA1CON0	set	15356
  1029  0000                     _DMA1AIRQ	set	15358
  1030  0000                     _DMA1SIRQ	set	15359
  1031  0000                     _DMA1CON1	set	15357
  1032  0000                     _CLC1CON	set	15476
  1033  0000                     _CLC1GLS3	set	15485
  1034  0000                     _CLC1GLS2	set	15484
  1035  0000                     _CLC1GLS1	set	15483
  1036  0000                     _CLC1GLS0	set	15482
  1037  0000                     _CLC1SEL3	set	15481
  1038  0000                     _CLC1SEL2	set	15480
  1039  0000                     _CLC1SEL1	set	15479
  1040  0000                     _CLC1SEL0	set	15478
  1041  0000                     _CLC1POL	set	15477
  1042  0000                     _CLKRCON	set	15589
  1043  0000                     _CLKRCLK	set	15590
  1044  0000                     _MD1CARL	set	15613
  1045  0000                     _MD1CARH	set	15614
  1046  0000                     _MD1SRC	set	15612
  1047  0000                     _MD1CON1bits	set	15611
  1048  0000                     _MD1CON0bits	set	15610
  1049  0000                     _SPI1INTFbits	set	15642
  1050  0000                     _SPI1RXB	set	15632
  1051  0000                     _SPI1TXB	set	15633
  1052  0000                     _SPI1TCNTL	set	15634
  1053  0000                     _SPI1CON0	set	15636
  1054  0000                     _SPI1CLK	set	15644
  1055  0000                     _SPI1BAUD	set	15641
  1056  0000                     _SPI1CON2	set	15638
  1057  0000                     _SPI1CON1	set	15637
  1058  0000                     _U2RXB	set	15824
  1059  0000                     _U2TXB	set	15826
  1060  0000                     _U2ERRIE	set	15842
  1061  0000                     _U2ERRIR	set	15841
  1062  0000                     _U2UIR	set	15840
  1063  0000                     _U2FIFO	set	15839
  1064  0000                     _U2BRGH	set	15838
  1065  0000                     _U2BRGL	set	15837
  1066  0000                     _U2CON2	set	15836
  1067  0000                     _U2CON1	set	15835
  1068  0000                     _U2CON0	set	15834
  1069  0000                     _U2P3L	set	15832
  1070  0000                     _U2P2L	set	15830
  1071  0000                     _U2P1L	set	15828
  1072  0000                     _U1RXB	set	15848
  1073  0000                     _U1TXB	set	15850
  1074  0000                     _U1ERRIE	set	15866
  1075  0000                     _U1ERRIR	set	15865
  1076  0000                     _U1UIR	set	15864
  1077  0000                     _U1FIFO	set	15863
  1078  0000                     _U1BRGH	set	15862
  1079  0000                     _U1BRGL	set	15861
  1080  0000                     _U1CON2	set	15860
  1081  0000                     _U1CON1	set	15859
  1082  0000                     _U1CON0	set	15858
  1083  0000                     _U1P3H	set	15857
  1084  0000                     _U1P3L	set	15856
  1085  0000                     _U1P2H	set	15855
  1086  0000                     _U1P2L	set	15854
  1087  0000                     _U1P1H	set	15853
  1088  0000                     _U1P1L	set	15852
  1089  0000                     _ADCON0	set	16120
  1090  0000                     _ADCLK	set	16127
  1091  0000                     _ADACT	set	16126
  1092  0000                     _ADREF	set	16125
  1093  0000                     _ADSTAT	set	16124
  1094  0000                     _ADCON3	set	16123
  1095  0000                     _ADCON2	set	16122
  1096  0000                     _ADCON1	set	16121
  1097  0000                     _ADPREH	set	16119
  1098  0000                     _ADPREL	set	16118
  1099  0000                     _ADCAP	set	16117
  1100  0000                     _ADACQH	set	16116
  1101  0000                     _ADACQL	set	16115
  1102  0000                     _ADPCH	set	16113
  1103  0000                     _ADRPT	set	16108
  1104  0000                     _ADACCU	set	16106
  1105  0000                     _ADSTPTH	set	16101
  1106  0000                     _ADSTPTL	set	16100
  1107  0000                     _ADUTHH	set	16097
  1108  0000                     _ADUTHL	set	16096
  1109  0000                     _ADLTHH	set	16095
  1110  0000                     _ADLTHL	set	16094
  1111  0000                     _NCO1CONbits	set	16190
  1112  0000                     _NCO1INCL	set	16187
  1113  0000                     _NCO1INCH	set	16188
  1114  0000                     _NCO1INCU	set	16189
  1115  0000                     _NCO1ACCL	set	16184
  1116  0000                     _NCO1ACCH	set	16185
  1117  0000                     _NCO1ACCU	set	16186
  1118  0000                     _NCO1CLK	set	16191
  1119  0000                     _NCO1CON	set	16190
  1120  0000                     _LATCbits	set	16316
  1121  0000                     _LATDbits	set	16317
  1122  0000                     _PORTBbits	set	16331
  1123  0000                     _T5CONbits	set	16282
  1124  0000                     _T5CON	set	16282
  1125  0000                     _TMR5L	set	16280
  1126  0000                     _TMR5H	set	16281
  1127  0000                     _T5CLK	set	16285
  1128  0000                     _T5GATE	set	16284
  1129  0000                     _T5GCON	set	16283
  1130  0000                     _LATEbits	set	16318
  1131  0000                     _T6CON	set	16276
  1132  0000                     _T6TMR	set	16274
  1133  0000                     _T6PR	set	16275
  1134  0000                     _T6RST	set	16279
  1135  0000                     _T6HLT	set	16277
  1136  0000                     _T6CLKCON	set	16278
  1137  0000                     _TRISD	set	16325
  1138  0000                     _TRISC	set	16324
  1139  0000                     _TRISB	set	16323
  1140  0000                     _TRISA	set	16322
  1141  0000                     _TRISF	set	16327
  1142  0000                     _TRISE	set	16326
  1143  0000                     _LATC	set	16316
  1144  0000                     _LATB	set	16315
  1145  0000                     _LATF	set	16319
  1146  0000                     _LATA	set	16314
  1147  0000                     _LATD	set	16317
  1148  0000                     _LATE	set	16318
  1149  0000                     _IVTLOCKbits	set	16340
  1150  0000                     _IVTLOCK	set	16340
  1151  0000                     _INTCON0bits	set	16338
  1152  0000                     _GIE	set	130711
  1153                           
  1154                           	psect	smallconst
  1155  002000                     __psmallconst:
  1156                           	opt callstack 0
  1157  002000  00                 	db	0
  1158  002001                     STR_11:
  1159  002001  4C                 	db	76	;'L'
  1160  002002  4F                 	db	79	;'O'
  1161  002003  47                 	db	71	;'G'
  1162  002004  3A                 	db	58	;':'
  1163  002005  20                 	db	32
  1164  002006  55                 	db	85	;'U'
  1165  002007  25                 	db	37
  1166  002008  64                 	db	100	;'d'
  1167  002009  20                 	db	32
  1168  00200A  47                 	db	71	;'G'
  1169  00200B  25                 	db	37
  1170  00200C  64                 	db	100	;'d'
  1171  00200D  20                 	db	32
  1172  00200E  25                 	db	37
  1173  00200F  64                 	db	100	;'d'
  1174  002010  20                 	db	32
  1175  002011  25                 	db	37
  1176  002012  64                 	db	100	;'d'
  1177  002013  20                 	db	32
  1178  002014  20                 	db	32
  1179  002015  20                 	db	32
  1180  002016  20                 	db	32
  1181  002017  20                 	db	32
  1182  002018  20                 	db	32
  1183  002019  23                 	db	35
  1184  00201A  00                 	db	0
  1185  00201B                     STR_15:
  1186  00201B  52                 	db	82	;'R'
  1187  00201C  25                 	db	37
  1188  00201D  64                 	db	100	;'d'
  1189  00201E  20                 	db	32
  1190  00201F  25                 	db	37
  1191  002020  64                 	db	100	;'d'
  1192  002021  2C                 	db	44
  1193  002022  20                 	db	32
  1194  002023  54                 	db	84	;'T'
  1195  002024  25                 	db	37
  1196  002025  64                 	db	100	;'d'
  1197  002026  20                 	db	32
  1198  002027  25                 	db	37
  1199  002028  64                 	db	100	;'d'
  1200  002029  20                 	db	32
  1201  00202A  43                 	db	67	;'C'
  1202  00202B  25                 	db	37
  1203  00202C  64                 	db	100	;'d'
  1204  00202D  20                 	db	32
  1205  00202E  20                 	db	32
  1206  00202F  20                 	db	32
  1207  002030  20                 	db	32
  1208  002031  20                 	db	32
  1209  002032  20                 	db	32
  1210  002033  23                 	db	35
  1211  002034  00                 	db	0
  1212  002035                     STR_5:
  1213  002035  48                 	db	72	;'H'
  1214  002036  4F                 	db	79	;'O'
  1215  002037  53                 	db	83	;'S'
  1216  002038  54                 	db	84	;'T'
  1217  002039  3A                 	db	58	;':'
  1218  00203A  20                 	db	32
  1219  00203B  25                 	db	37
  1220  00203C  6C                 	db	108	;'l'
  1221  00203D  64                 	db	100	;'d'
  1222  00203E  20                 	db	32
  1223  00203F  47                 	db	71	;'G'
  1224  002040  25                 	db	37
  1225  002041  64                 	db	100	;'d'
  1226  002042  20                 	db	32
  1227  002043  20                 	db	32
  1228  002044  20                 	db	32
  1229  002045  20                 	db	32
  1230  002046  20                 	db	32
  1231  002047  20                 	db	32
  1232  002048  23                 	db	35
  1233  002049  00                 	db	0
  1234  00204A                     STR_12:
  1235  00204A  20                 	db	32
  1236  00204B  53                 	db	83	;'S'
  1237  00204C  25                 	db	37
  1238  00204D  64                 	db	100	;'d'
  1239  00204E  46                 	db	70	;'F'
  1240  00204F  25                 	db	37
  1241  002050  64                 	db	100	;'d'
  1242  002051  20                 	db	32
  1243  002052  23                 	db	35
  1244  002053  25                 	db	37
  1245  002054  6C                 	db	108	;'l'
  1246  002055  64                 	db	100	;'d'
  1247  002056  20                 	db	32
  1248  002057  20                 	db	32
  1249  002058  20                 	db	32
  1250  002059  20                 	db	32
  1251  00205A  20                 	db	32
  1252  00205B  20                 	db	32
  1253  00205C  00                 	db	0
  1254  00205D                     STR_9:
  1255  00205D  45                 	db	69	;'E'
  1256  00205E  25                 	db	37
  1257  00205F  64                 	db	100	;'d'
  1258  002060  20                 	db	32
  1259  002061  41                 	db	65	;'A'
  1260  002062  25                 	db	37
  1261  002063  64                 	db	100	;'d'
  1262  002064  20                 	db	32
  1263  002065  54                 	db	84	;'T'
  1264  002066  25                 	db	37
  1265  002067  64                 	db	100	;'d'
  1266  002068  20                 	db	32
  1267  002069  43                 	db	67	;'C'
  1268  00206A  25                 	db	37
  1269  00206B  64                 	db	100	;'d'
  1270  00206C  20                 	db	32
  1271  00206D  23                 	db	35
  1272  00206E  00                 	db	0
  1273  00206F                     STR_1:
  1274  00206F  20                 	db	32
  1275  002070  52                 	db	82	;'R'
  1276  002071  56                 	db	86	;'V'
  1277  002072  49                 	db	73	;'I'
  1278  002073  20                 	db	32
  1279  002074  48                 	db	72	;'H'
  1280  002075  4F                 	db	79	;'O'
  1281  002076  53                 	db	83	;'S'
  1282  002077  54                 	db	84	;'T'
  1283  002078  20                 	db	32
  1284  002079  54                 	db	84	;'T'
  1285  00207A  45                 	db	69	;'E'
  1286  00207B  53                 	db	83	;'S'
  1287  00207C  54                 	db	84	;'T'
  1288  00207D  45                 	db	69	;'E'
  1289  00207E  52                 	db	82	;'R'
  1290  00207F  00                 	db	0
  1291  002080                     STR_4:
  1292  002080  20                 	db	32
  1293  002081  46                 	db	70	;'F'
  1294  002082  47                 	db	71	;'G'
  1295  002083  42                 	db	66	;'B'
  1296  002084  40                 	db	64	;'@'
  1297  002085  4D                 	db	77	;'M'
  1298  002086  43                 	db	67	;'C'
  1299  002087  48                 	db	72	;'H'
  1300  002088  50                 	db	80	;'P'
  1301  002089  20                 	db	32
  1302  00208A  46                 	db	70	;'F'
  1303  00208B  41                 	db	65	;'A'
  1304  00208C  42                 	db	66	;'B'
  1305  00208D  34                 	db	52	;'4'
  1306  00208E  00                 	db	0
  1307  00208F                     STR_6:
  1308  00208F  20                 	db	32
  1309  002090  53                 	db	83	;'S'
  1310  002091  25                 	db	37
  1311  002092  64                 	db	100	;'d'
  1312  002093  46                 	db	70	;'F'
  1313  002094  25                 	db	37
  1314  002095  64                 	db	100	;'d'
  1315  002096  20                 	db	32
  1316  002097  23                 	db	35
  1317  002098  20                 	db	32
  1318  002099  20                 	db	32
  1319  00209A  20                 	db	32
  1320  00209B  20                 	db	32
  1321  00209C  00                 	db	0
  1322  00209D                     STR_2:
  1323  00209D  20                 	db	32
  1324  00209E  56                 	db	86	;'V'
  1325  00209F  65                 	db	101	;'e'
  1326  0020A0  72                 	db	114	;'r'
  1327  0020A1  73                 	db	115	;'s'
  1328  0020A2  69                 	db	105	;'i'
  1329  0020A3  6F                 	db	111	;'o'
  1330  0020A4  6E                 	db	110	;'n'
  1331  0020A5  20                 	db	32
  1332  0020A6  25                 	db	37
  1333  0020A7  73                 	db	115	;'s'
  1334  0020A8  00                 	db	0
  1335  0020A9                     STR_8:
  1336  0020A9  20                 	db	32
  1337  0020AA  4F                 	db	79	;'O'
  1338  0020AB  4B                 	db	75	;'K'
  1339  0020AC  20                 	db	32
  1340  0020AD  23                 	db	35
  1341  0020AE  00                 	db	0
  1342  0020AF                     STR_7:
  1343  0020AF  20                 	db	32
  1344  0020B0  4F                 	db	79	;'O'
  1345  0020B1  4B                 	db	75	;'K'
  1346  0020B2  51                 	db	81	;'Q'
  1347  0020B3  23                 	db	35
  1348  0020B4  00                 	db	0
  1349  0020B5                     STR_3:
  1350  0020B5  30                 	db	48	;'0'
  1351  0020B6  2E                 	db	46
  1352  0020B7  38                 	db	56	;'8'
  1353  0020B8  37                 	db	55	;'7'
  1354  0020B9  42                 	db	66	;'B'
  1355  0020BA  00                 	db	0
  1356  0020BB                     STR_19:
  1357  0020BB  6C                 	db	108	;'l'
  1358  0020BC  64                 	db	100	;'d'
  1359  0020BD  00                 	db	0
  1360  0020BE                     STR_23:
  1361  0020BE  6C                 	db	108	;'l'
  1362  0020BF  69                 	db	105	;'i'
  1363  0020C0  00                 	db	0
  1364  0020C1                     STR_17:
  1365  0020C1  25                 	db	37
  1366  0020C2  63                 	db	99	;'c'
  1367  0020C3  00                 	db	0
  1368  0000                     
  1369                           ; #config settings
  1370  0020C4  00                 	db	0	; dummy byte at the end
  1371  0000                     
  1372                           	psect	cinit
  1373  004BAC                     __pcinit:
  1374                           	opt callstack 0
  1375  004BAC                     start_initialization:
  1376                           	opt callstack 0
  1377  004BAC                     __initialization:
  1378                           	opt callstack 0
  1379                           
  1380                           ; Initialize objects allocated to BIGRAM (257 bytes)
  1381                           ; load TBLPTR registers with __pidataBIGRAM
  1382  004BAC  0EC8               	movlw	low __pidataBIGRAM
  1383  004BAE  6EF6               	movwf	tblptrl,c
  1384  004BB0  0E4D               	movlw	high __pidataBIGRAM
  1385  004BB2  6EF7               	movwf	tblptrh,c
  1386  004BB4  0E00               	movlw	low (__pidataBIGRAM shr (0+16))
  1387  004BB6  6EF8               	movwf	tblptru,c
  1388  004BB8  EE00  F3FE         	lfsr	0,__pdataBIGRAM
  1389  004BBC  EE20 F101          	lfsr	2,257
  1390  004BC0                     copy_data0:
  1391  004BC0  0009               	tblrd		*+
  1392  004BC2  006F FFD7 FFEE     	movff	tablat,postinc0
  1393  004BC8  50DD               	movf	postdec2,w,c
  1394  004BCA  50D9               	movf	fsr2l,w,c
  1395  004BCC  E1F9               	bnz	copy_data0
  1396  004BCE  50DA               	movf	fsr2h,w,c
  1397  004BD0  E1F7               	bnz	copy_data0
  1398                           
  1399                           ; Initialize objects allocated to BANK3 (56 bytes)
  1400                           ; load TBLPTR registers with __pidataBANK3
  1401  004BD2  0E12               	movlw	low __pidataBANK3
  1402  004BD4  6EF6               	movwf	tblptrl,c
  1403  004BD6  0E5E               	movlw	high __pidataBANK3
  1404  004BD8  6EF7               	movwf	tblptrh,c
  1405  004BDA  0E00               	movlw	low (__pidataBANK3 shr (0+16))
  1406  004BDC  6EF8               	movwf	tblptru,c
  1407  004BDE  EE00  F3C6         	lfsr	0,__pdataBANK3
  1408  004BE2  EE20 F038          	lfsr	2,56
  1409  004BE6                     copy_data1:
  1410  004BE6  0009               	tblrd		*+
  1411  004BE8  006F FFD7 FFEE     	movff	tablat,postinc0
  1412  004BEE  50DD               	movf	postdec2,w,c
  1413  004BF0  50D9               	movf	fsr2l,w,c
  1414  004BF2  E1F9               	bnz	copy_data1
  1415                           
  1416                           ; Initialize objects allocated to BANK2 (32 bytes)
  1417                           ; load TBLPTR registers with __pidataBANK2
  1418  004BF4  0EA6               	movlw	low __pidataBANK2
  1419  004BF6  6EF6               	movwf	tblptrl,c
  1420  004BF8  0E63               	movlw	high __pidataBANK2
  1421  004BFA  6EF7               	movwf	tblptrh,c
  1422  004BFC  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1423  004BFE  6EF8               	movwf	tblptru,c
  1424  004C00  EE00  F2C0         	lfsr	0,__pdataBANK2
  1425  004C04  EE20 F020          	lfsr	2,32
  1426  004C08                     copy_data2:
  1427  004C08  0009               	tblrd		*+
  1428  004C0A  006F FFD7 FFEE     	movff	tablat,postinc0
  1429  004C10  50DD               	movf	postdec2,w,c
  1430  004C12  50D9               	movf	fsr2l,w,c
  1431  004C14  E1F9               	bnz	copy_data2
  1432                           
  1433                           ; Initialize objects allocated to BANK1 (192 bytes)
  1434                           ; load TBLPTR registers with __pidataBANK1
  1435  004C16  0E4E               	movlw	low __pidataBANK1
  1436  004C18  6EF6               	movwf	tblptrl,c
  1437  004C1A  0E51               	movlw	high __pidataBANK1
  1438  004C1C  6EF7               	movwf	tblptrh,c
  1439  004C1E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1440  004C20  6EF8               	movwf	tblptru,c
  1441  004C22  EE00  F100         	lfsr	0,__pdataBANK1
  1442  004C26  EE20 F0C0          	lfsr	2,192
  1443  004C2A                     copy_data3:
  1444  004C2A  0009               	tblrd		*+
  1445  004C2C  006F FFD7 FFEE     	movff	tablat,postinc0
  1446  004C32  50DD               	movf	postdec2,w,c
  1447  004C34  50D9               	movf	fsr2l,w,c
  1448  004C36  E1F9               	bnz	copy_data3
  1449                           
  1450                           ; Initialize objects allocated to BANK0 (98 bytes)
  1451                           ; load TBLPTR registers with __pidataBANK0
  1452  004C38  0ECA               	movlw	low __pidataBANK0
  1453  004C3A  6EF6               	movwf	tblptrl,c
  1454  004C3C  0E58               	movlw	high __pidataBANK0
  1455  004C3E  6EF7               	movwf	tblptrh,c
  1456  004C40  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1457  004C42  6EF8               	movwf	tblptru,c
  1458  004C44  EE00  F060         	lfsr	0,__pdataBANK0
  1459  004C48  EE20 F062          	lfsr	2,98
  1460  004C4C                     copy_data4:
  1461  004C4C  0009               	tblrd		*+
  1462  004C4E  006F FFD7 FFEE     	movff	tablat,postinc0
  1463  004C54  50DD               	movf	postdec2,w,c
  1464  004C56  50D9               	movf	fsr2l,w,c
  1465  004C58  E1F9               	bnz	copy_data4
  1466                           
  1467                           ; Initialize objects allocated to COMRAM (1 bytes)
  1468                           ; load TBLPTR registers with __pidataCOMRAM
  1469  004C5A  0EBE               	movlw	low __pidataCOMRAM
  1470  004C5C  6EF6               	movwf	tblptrl,c
  1471  004C5E  0E65               	movlw	high __pidataCOMRAM
  1472  004C60  6EF7               	movwf	tblptrh,c
  1473  004C62  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1474  004C64  6EF8               	movwf	tblptru,c
  1475  004C66  0009               	tblrd		*+	;fetch initializer
  1476  004C68  006F FFD4  F05D    	movff	tablat,__pdataCOMRAM
  1477                           
  1478                           ; Clear objects allocated to BANK3 (198 bytes)
  1479  004C6E  EE00  F300         	lfsr	0,__pbssBANK3
  1480  004C72  0EC6               	movlw	198
  1481  004C74                     clear_0:
  1482  004C74  6AEE               	clrf	postinc0,c
  1483  004C76  06E8               	decf	wreg,f,c
  1484  004C78  E1FD               	bnz	clear_0
  1485                           
  1486                           ; Clear objects allocated to BANK2 (192 bytes)
  1487  004C7A  EE00  F200         	lfsr	0,__pbssBANK2
  1488  004C7E  0EC0               	movlw	192
  1489  004C80                     clear_1:
  1490  004C80  6AEE               	clrf	postinc0,c
  1491  004C82  06E8               	decf	wreg,f,c
  1492  004C84  E1FD               	bnz	clear_1
  1493                           
  1494                           ; Clear objects allocated to BANK1 (54 bytes)
  1495  004C86  EE00  F1C0         	lfsr	0,__pbssBANK1
  1496  004C8A  0E36               	movlw	54
  1497  004C8C                     clear_2:
  1498  004C8C  6AEE               	clrf	postinc0,c
  1499  004C8E  06E8               	decf	wreg,f,c
  1500  004C90  E1FD               	bnz	clear_2
  1501                           
  1502                           ; Clear objects allocated to BANK0 (47 bytes)
  1503  004C92  EE00  F0C2         	lfsr	0,__pbssBANK0
  1504  004C96  0E2F               	movlw	47
  1505  004C98                     clear_3:
  1506  004C98  6AEE               	clrf	postinc0,c
  1507  004C9A  06E8               	decf	wreg,f,c
  1508  004C9C  E1FD               	bnz	clear_3
  1509                           
  1510                           ; Clear objects allocated to COMRAM (60 bytes)
  1511  004C9E  EE00  F001         	lfsr	0,__pbssCOMRAM
  1512  004CA2  0E3C               	movlw	60
  1513  004CA4                     clear_4:
  1514  004CA4  6AEE               	clrf	postinc0,c
  1515  004CA6  06E8               	decf	wreg,f,c
  1516  004CA8  E1FD               	bnz	clear_4
  1517                           
  1518                           ;
  1519                           ; Setup IVTBASE
  1520                           ;
  1521  004CAA  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1522  004CAC  6ED5               	movwf	213,c
  1523  004CAE  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1524  004CB0  6ED6               	movwf	214,c
  1525  004CB2  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1526  004CB4  6ED7               	movwf	215,c
  1527  004CB6                     end_of_initialization:
  1528                           	opt callstack 0
  1529  004CB6                     __end_of__initialization:
  1530                           	opt callstack 0
  1531  004CB6  0100               	movlb	0
  1532  004CB8  EF63  F010         	goto	_main	;jump to C main() function
  1533                           
  1534                           	psect	bssCOMRAM
  1535  000001                     __pbssCOMRAM:
  1536                           	opt callstack 0
  1537  000001                     secs_II_message@block:
  1538                           	opt callstack 0
  1539  000001                     	ds	7
  1540  000008                     _UART1_TxInterruptHandler:
  1541                           	opt callstack 0
  1542  000008                     	ds	3
  1543  00000B                     _UART1_RxInterruptHandler:
  1544                           	opt callstack 0
  1545  00000B                     	ds	3
  1546  00000E                     _UART2_TxInterruptHandler:
  1547                           	opt callstack 0
  1548  00000E                     	ds	3
  1549  000011                     _UART2_RxInterruptHandler:
  1550                           	opt callstack 0
  1551  000011                     	ds	3
  1552  000014                     _INT2_InterruptHandler:
  1553                           	opt callstack 0
  1554  000014                     	ds	3
  1555  000017                     _INT1_InterruptHandler:
  1556                           	opt callstack 0
  1557  000017                     	ds	3
  1558  00001A                     _INT0_InterruptHandler:
  1559                           	opt callstack 0
  1560  00001A                     	ds	3
  1561  00001D                     _width:
  1562                           	opt callstack 0
  1563  00001D                     	ds	2
  1564  00001F                     _prec:
  1565                           	opt callstack 0
  1566  00001F                     	ds	2
  1567  000021                     _flags:
  1568                           	opt callstack 0
  1569  000021                     	ds	2
  1570  000023                     r_protocol@b_block:
  1571                           	opt callstack 0
  1572  000023                     	ds	2
  1573  000025                     run_checksum@sum:
  1574                           	opt callstack 0
  1575  000025                     	ds	2
  1576  000027                     TMR5_ISR@CountCallBack:
  1577                           	opt callstack 0
  1578  000027                     	ds	2
  1579  000029                     _timer5ReloadVal:
  1580                           	opt callstack 0
  1581  000029                     	ds	2
  1582  00002B                     secs_gem_state@block:
  1583                           	opt callstack 0
  1584  00002B                     	ds	1
  1585  00002C                     t_protocol@requeue:
  1586                           	opt callstack 0
  1587  00002C                     	ds	1
  1588  00002D                     t_protocol@retry:
  1589                           	opt callstack 0
  1590  00002D                     	ds	1
  1591  00002E                     r_protocol@rxData_l:
  1592                           	opt callstack 0
  1593  00002E                     	ds	1
  1594  00002F                     m_protocol@rxData_l:
  1595                           	opt callstack 0
  1596  00002F                     	ds	1
  1597  000030                     _mode_sw:
  1598                           	opt callstack 0
  1599  000030                     	ds	1
  1600  000031                     _uart2RxCount:
  1601                           	opt callstack 0
  1602  000031                     	ds	1
  1603  000032                     _uart2RxTail:
  1604                           	opt callstack 0
  1605  000032                     	ds	1
  1606  000033                     _uart2RxHead:
  1607                           	opt callstack 0
  1608  000033                     	ds	1
  1609  000034                     _uart2TxBufferRemaining:
  1610                           	opt callstack 0
  1611  000034                     	ds	1
  1612  000035                     _uart2TxTail:
  1613                           	opt callstack 0
  1614  000035                     	ds	1
  1615  000036                     _uart2TxHead:
  1616                           	opt callstack 0
  1617  000036                     	ds	1
  1618  000037                     _uart1RxCount:
  1619                           	opt callstack 0
  1620  000037                     	ds	1
  1621  000038                     _uart1RxTail:
  1622                           	opt callstack 0
  1623  000038                     	ds	1
  1624  000039                     _uart1RxHead:
  1625                           	opt callstack 0
  1626  000039                     	ds	1
  1627  00003A                     _uart1TxBufferRemaining:
  1628                           	opt callstack 0
  1629  00003A                     	ds	1
  1630  00003B                     _uart1TxTail:
  1631                           	opt callstack 0
  1632  00003B                     	ds	1
  1633  00003C                     _uart1TxHead:
  1634                           	opt callstack 0
  1635  00003C                     	ds	1
  1636                           
  1637                           	psect	dataCOMRAM
  1638  00005D                     __pdataCOMRAM:
  1639                           	opt callstack 0
  1640  00005D                     r_protocol@retry:
  1641                           	opt callstack 0
  1642  00005D                     	ds	1
  1643                           
  1644                           	psect	bssBANK0
  1645  0000C2                     __pbssBANK0:
  1646                           	opt callstack 0
  1647  0000C2                     _r_block:
  1648                           	opt callstack 0
  1649  0000C2                     	ds	13
  1650  0000CF                     _spi_link:
  1651                           	opt callstack 0
  1652  0000CF                     	ds	12
  1653  0000DB                     t_protocol@block:
  1654                           	opt callstack 0
  1655  0000DB                     	ds	7
  1656  0000E2                     wdtdelay@dcount:
  1657                           	opt callstack 0
  1658  0000E2                     	ds	4
  1659  0000E6                     _TMR5_InterruptHandler:
  1660                           	opt callstack 0
  1661  0000E6                     	ds	3
  1662  0000E9                     _TMR6_InterruptHandler:
  1663                           	opt callstack 0
  1664  0000E9                     	ds	3
  1665  0000EC                     _ADCC_ADI_InterruptHandler:
  1666                           	opt callstack 0
  1667  0000EC                     	ds	3
  1668  0000EF                     _nout:
  1669                           	opt callstack 0
  1670  0000EF                     	ds	2
  1671                           
  1672                           	psect	dataBANK0
  1673  000060                     __pdataBANK0:
  1674                           	opt callstack 0
  1675  000060                     _V:
  1676                           	opt callstack 0
  1677  000060                     	ds	98
  1678                           
  1679                           	psect	bssBANK1
  1680  0001C0                     __pbssBANK1:
  1681                           	opt callstack 0
  1682  0001C0                     _tickCount:
  1683                           	opt callstack 0
  1684  0001C0                     	ds	14
  1685  0001CE                     _dbuf:
  1686                           	opt callstack 0
  1687  0001CE                     	ds	32
  1688  0001EE                     _seed:
  1689                           	opt callstack 0
  1690  0001EE                     	ds	8
  1691                           
  1692                           	psect	dataBANK1
  1693  000100                     __pdataBANK1:
  1694                           	opt callstack 0
  1695  000100                     stoa@F1142:
  1696                           	opt callstack 0
  1697  000100                     	ds	7
  1698  000107                     _H10:
  1699                           	opt callstack 0
  1700  000107                     	ds	91
  1701  000162                     _H12:
  1702                           	opt callstack 0
  1703  000162                     	ds	30
  1704  000180                     _H24:
  1705                           	opt callstack 0
  1706  000180                     	ds	27
  1707  00019B                     _H17:
  1708                           	opt callstack 0
  1709  00019B                     	ds	20
  1710  0001AF                     _H14:
  1711                           	opt callstack 0
  1712  0001AF                     	ds	17
  1713                           
  1714                           	psect	bssBANK2
  1715  000200                     __pbssBANK2:
  1716                           	opt callstack 0
  1717  000200                     _uart2RxBuffer:
  1718                           	opt callstack 0
  1719  000200                     	ds	64
  1720  000240                     _uart1RxBuffer:
  1721                           	opt callstack 0
  1722  000240                     	ds	64
  1723  000280                     _uart1TxBuffer:
  1724                           	opt callstack 0
  1725  000280                     	ds	64
  1726                           
  1727                           	psect	dataBANK2
  1728  0002C0                     __pdataBANK2:
  1729                           	opt callstack 0
  1730  0002C0                     _H13:
  1731                           	opt callstack 0
  1732  0002C0                     	ds	32
  1733                           
  1734                           	psect	bssBANK3
  1735  000300                     __pbssBANK3:
  1736                           	opt callstack 0
  1737  000300                     _uart2TxBuffer:
  1738                           	opt callstack 0
  1739  000300                     	ds	64
  1740  000340                     _ring_buf2:
  1741                           	opt callstack 0
  1742  000340                     	ds	67
  1743  000383                     _ring_buf1:
  1744                           	opt callstack 0
  1745  000383                     	ds	67
  1746                           
  1747                           	psect	dataBANK3
  1748  0003C6                     __pdataBANK3:
  1749                           	opt callstack 0
  1750  0003C6                     _H53:
  1751                           	opt callstack 0
  1752  0003C6                     	ds	56
  1753                           
  1754                           	psect	dataBIGRAM
  1755  0003FE                     __pdataBIGRAM:
  1756                           	opt callstack 0
  1757  0003FE                     _H254:
  1758                           	opt callstack 0
  1759  0003FE                     	ds	257
  1760                           
  1761                           	psect	cstackBANK0
  1762  0000F1                     __pcstackBANK0:
  1763                           	opt callstack 0
  1764  0000F1                     ??_TMR5_ISR:
  1765                           
  1766                           ; 1 bytes @ 0x0
  1767  0000F1                     	ds	3
  1768                           
  1769                           	psect	cstackCOMRAM
  1770  00005E                     __pcstackCOMRAM:
  1771                           	opt callstack 0
  1772  00005E                     ??_TMR6_ISR:
  1773  00005E                     
  1774                           ; 1 bytes @ 0x0
  1775  00005E                     	ds	1
  1776  00005F                     
  1777                           ; 1 bytes @ 0x1
  1778 ;;
  1779 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1780 ;;
  1781 ;; *************** function _main *****************
  1782 ;; Defined at:
  1783 ;;		line 353 in file "main.c"
  1784 ;; Parameters:    Size  Location     Type
  1785 ;;		None
  1786 ;; Auto vars:     Size  Location     Type
  1787 ;;  mode            1  [STACK] enum E16896
  1788 ;; Return value:  Size  Location     Type
  1789 ;;                  1  [STACK] void 
  1790 ;; Registers used:
  1791 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh
      +, tblptru, prodl, prodh
  1792 ;; Tracked objects:
  1793 ;;		On entry : 0/0
  1794 ;;		On exit  : 4/0
  1795 ;;		Unchanged: 0/0
  1796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1801 ;;Total ram usage:        0 bytes
  1802 ;; Hardware stack levels required when called:   14
  1803 ;; This function calls:
  1804 ;;		_SYSTEM_Initialize
  1805 ;;		_WaitMs
  1806 ;;		_eaDogM_WriteCommand
  1807 ;;		_eaDogM_WriteStringAtPos
  1808 ;;		_init_display
  1809 ;;		_m_protocol
  1810 ;;		_r_protocol
  1811 ;;		_sprintf
  1812 ;;		_srand
  1813 ;;		_t_protocol
  1814 ;;		_wait_lcd_done
  1815 ;; This function is called by:
  1816 ;;		Startup code after reset
  1817 ;; This function uses a reentrant model
  1818 ;;
  1819                           
  1820                           	psect	text0
  1821  0020C6                     __ptext0:
  1822                           	opt callstack 0
  1823  0020C6                     _main:
  1824                           	opt callstack 0
  1825                           
  1826                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1827  0020C6  52E6               	movf	postinc1,f,c
  1828                           
  1829                           ;main.c: 355:  UI_STATES mode;;main.c: 358:  SYSTEM_Initialize();
  1830                           
  1831                           ;incstack = 0
  1832  0020C8  EC2C  F02E         	call	_SYSTEM_Initialize	;wreg free
  1833                           
  1834                           ; BSR set to: 60
  1835                           ;main.c: 361:  (INTCON0bits.GIEH = 1);
  1836  0020CC  8ED2               	bsf	16338,7,c	;volatile
  1837                           
  1838                           ; BSR set to: 60
  1839                           ;main.c: 364:  (INTCON0bits.GIEL = 1);
  1840  0020CE  8CD2               	bsf	16338,6,c	;volatile
  1841                           
  1842                           ; BSR set to: 60
  1843                           ;main.c: 366:  V.ui_state = UI_STATE_INIT;
  1844  0020D0  0100               	movlb	0	; () banked
  1845  0020D2  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;main.c: 371:  WaitMs(300);
  1849  0020D4  0E2C               	movlw	44
  1850  0020D6  6EE6               	movwf	postinc1,c
  1851  0020D8  0E01               	movlw	1
  1852  0020DA  6EE6               	movwf	postinc1,c
  1853  0020DC  EC25  F02F         	call	_WaitMs	;wreg free
  1854                           
  1855                           ;main.c: 372:  if (PORTBbits.RB0) {
  1856  0020E0  A0CB               	btfss	16331,0,c	;volatile
  1857  0020E2  D004               	goto	l9149
  1858                           
  1859                           ;main.c: 373:   mode = UI_STATE_HOST;
  1860                           ;stkvar	_mode @ sp[(-1)+0]
  1861  0020E4  0EFF               	movlw	-1
  1862  0020E6  6AE3               	clrf	plusw1,c
  1863  0020E8  2AE3               	incf	plusw1,f,c
  1864                           
  1865                           ;main.c: 374:  } else {
  1866  0020EA  D004               	goto	l9151
  1867  0020EC                     l9149:
  1868                           
  1869                           ;main.c: 375:   mode = UI_STATE_LOG;
  1870                           ;stkvar	_mode @ sp[(-1)+0]
  1871  0020EC  0EFF               	movlw	-1
  1872  0020EE  6AE3               	clrf	plusw1,c
  1873  0020F0  80E3               	bsf	plusw1,0,c
  1874  0020F2  82E3               	bsf	plusw1,1,c	;indir
  1875  0020F4                     l9151:
  1876                           
  1877                           ;main.c: 378:  if (mode == UI_STATE_HOST) {
  1878                           ;stkvar	_mode @ sp[(-1)+0]
  1879  0020F4  0EFF               	movlw	-1
  1880  0020F6  04E3               	decf	plusw1,w,c
  1881  0020F8  A4D8               	btfss	status,2,c
  1882  0020FA  D003               	goto	l1230
  1883                           
  1884                           ;main.c: 379:   do { LATDbits.LATD0 = 1; } while(0);
  1885  0020FC  80BD               	bsf	16317,0,c	;volatile
  1886                           
  1887                           ;main.c: 380:   do { LATDbits.LATD1 = 1; } while(0);
  1888  0020FE  82BD               	bsf	16317,1,c	;volatile
  1889  002100  D237               	goto	l9315
  1890  002102                     l1230:
  1891  002102  90BD               	bcf	16317,0,c	;volatile
  1892                           
  1893                           ;main.c: 383:   do { LATDbits.LATD1 = 0; } while(0);
  1894  002104  92BD               	bcf	16317,1,c	;volatile
  1895  002106  D234               	goto	l9315
  1896  002108                     l9153:
  1897                           
  1898                           ; BSR set to: 0
  1899                           ;main.c: 389:    init_display();
  1900  002108  EC65  F027         	call	_init_display	;wreg free
  1901                           
  1902                           ; BSR set to: 61
  1903                           ;main.c: 390:    eaDogM_WriteCommand(0b00001100);
  1904  00210C  0E0C               	movlw	12
  1905  00210E  6EE6               	movwf	postinc1,c
  1906  002110  EC8C  F032         	call	_eaDogM_WriteCommand	;wreg free
  1907                           
  1908                           ; BSR set to: 0
  1909                           ;main.c: 392:    V.ui_state = mode;
  1910                           ;stkvar	_mode @ sp[(-1)+0]
  1911  002114  0EFF               	movlw	-1
  1912  002116  006F FF8C  F061    	movff	plusw1,_V+1	;volatile
  1913                           
  1914                           ; BSR set to: 0
  1915                           ;main.c: 393:    V.s_state = SEQ_STATE_INIT;
  1916  00211C  6B60               	clrf	_V& (0+255),b	;volatile
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;main.c: 394:    srand(1957);
  1920  00211E  0EA5               	movlw	165
  1921  002120  6EE6               	movwf	postinc1,c
  1922  002122  0E07               	movlw	7
  1923  002124  6EE6               	movwf	postinc1,c
  1924  002126  EC40  F02F         	call	_srand	;wreg free
  1925                           
  1926                           ; BSR set to: 1
  1927                           ;main.c: 395:    sprintf(V.buf, " RVI HOST TESTER");
  1928  00212A  0E6F               	movlw	STR_1& (0+255)
  1929  00212C  6EE6               	movwf	postinc1,c
  1930  00212E  0E60               	movlw	_V& (0+255)
  1931  002130  0F06               	addlw	6
  1932  002132  6EE6               	movwf	postinc1,c
  1933  002134  0E02               	movlw	2
  1934  002136  6EE6               	movwf	postinc1,c
  1935  002138  EC43  F028         	call	_sprintf	;wreg free
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;main.c: 396:    wait_lcd_done();
  1939  00213C  EC12  F032         	call	_wait_lcd_done	;wreg free
  1940                           
  1941                           ; BSR set to: 0
  1942                           ;main.c: 397:    eaDogM_WriteStringAtPos(0, 0, V.buf);
  1943  002140  0E60               	movlw	_V& (0+255)
  1944  002142  0F06               	addlw	6
  1945  002144  6EE6               	movwf	postinc1,c
  1946  002146  0E00               	movlw	0
  1947  002148  6EE6               	movwf	postinc1,c
  1948  00214A  0E00               	movlw	0
  1949  00214C  6EE6               	movwf	postinc1,c
  1950  00214E  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  1951                           
  1952                           ; BSR set to: 59
  1953                           ;main.c: 398:    sprintf(V.buf, " Version %s", "0.87B");
  1954  002152  0EB5               	movlw	STR_3& (0+255)
  1955  002154  6E48               	movwf	btemp+11,c
  1956  002156  0060  F123  FFE6   	movff	btemp+11,postinc1
  1957  00215C  0E20               	movlw	high __smallconst
  1958  00215E  6EE6               	movwf	postinc1,c
  1959  002160  0E9D               	movlw	STR_2& (0+255)
  1960  002162  6EE6               	movwf	postinc1,c
  1961  002164  0E60               	movlw	_V& (0+255)
  1962  002166  0F06               	addlw	6
  1963  002168  6EE6               	movwf	postinc1,c
  1964  00216A  0E04               	movlw	4
  1965  00216C  6EE6               	movwf	postinc1,c
  1966  00216E  EC43  F028         	call	_sprintf	;wreg free
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;main.c: 399:    wait_lcd_done();
  1970  002172  EC12  F032         	call	_wait_lcd_done	;wreg free
  1971                           
  1972                           ; BSR set to: 0
  1973                           ;main.c: 400:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  1974  002176  0E60               	movlw	_V& (0+255)
  1975  002178  0F06               	addlw	6
  1976  00217A  6EE6               	movwf	postinc1,c
  1977  00217C  0E00               	movlw	0
  1978  00217E  6EE6               	movwf	postinc1,c
  1979  002180  0E01               	movlw	1
  1980  002182  6EE6               	movwf	postinc1,c
  1981  002184  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  1982                           
  1983                           ; BSR set to: 59
  1984                           ;main.c: 401:    sprintf(V.buf, " FGB@MCHP FAB4");
  1985  002188  0E80               	movlw	STR_4& (0+255)
  1986  00218A  6EE6               	movwf	postinc1,c
  1987  00218C  0E60               	movlw	_V& (0+255)
  1988  00218E  0F06               	addlw	6
  1989  002190  6EE6               	movwf	postinc1,c
  1990  002192  0E02               	movlw	2
  1991  002194  6EE6               	movwf	postinc1,c
  1992  002196  EC43  F028         	call	_sprintf	;wreg free
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;main.c: 402:    wait_lcd_done();
  1996  00219A  EC12  F032         	call	_wait_lcd_done	;wreg free
  1997                           
  1998                           ; BSR set to: 0
  1999                           ;main.c: 403:    eaDogM_WriteStringAtPos(2, 0, V.buf);
  2000  00219E  0E60               	movlw	_V& (0+255)
  2001  0021A0  0F06               	addlw	6
  2002  0021A2  6EE6               	movwf	postinc1,c
  2003  0021A4  0E00               	movlw	0
  2004  0021A6  6EE6               	movwf	postinc1,c
  2005  0021A8  0E02               	movlw	2
  2006  0021AA  6EE6               	movwf	postinc1,c
  2007  0021AC  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2008                           
  2009                           ; BSR set to: 59
  2010                           ;main.c: 404:    WaitMs(3000);
  2011  0021B0  0EB8               	movlw	184
  2012  0021B2  6EE6               	movwf	postinc1,c
  2013  0021B4  0E0B               	movlw	11
  2014  0021B6  6EE6               	movwf	postinc1,c
  2015  0021B8  EC25  F02F         	call	_WaitMs	;wreg free
  2016                           
  2017                           ;main.c: 405:    break;
  2018  0021BC  D1ED               	goto	l1271
  2019  0021BE                     l1240:
  2020                           
  2021                           ; BSR set to: 0
  2022                           ;main.c: 409:     V.r_l_state = LINK_STATE_IDLE;
  2023  0021BE  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  2024                           
  2025                           ;main.c: 410:     V.t_l_state = LINK_STATE_IDLE;
  2026  0021C0  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2027                           
  2028                           ; BSR set to: 0
  2029                           ;main.c: 411:     V.s_state = SEQ_STATE_RX;
  2030  0021C2  0E01               	movlw	1
  2031  0021C4  6F60               	movwf	_V& (0+255),b	;volatile
  2032                           
  2033                           ; BSR set to: 0
  2034                           ;main.c: 412:     if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2035  0021C6  0E0A               	movlw	10
  2036  0021C8  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2037  0021CA  A4D8               	btfss	status,2,c
  2038  0021CC  D0E7               	goto	l9255
  2039                           
  2040                           ; BSR set to: 0
  2041  0021CE  0E0A               	movlw	10
  2042  0021D0  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2043  0021D2  A4D8               	btfss	status,2,c
  2044  0021D4  D0E3               	goto	l9255
  2045                           
  2046                           ; BSR set to: 0
  2047                           ;main.c: 413:      sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2048  0021D6  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2049  0021D8  6EE6               	movwf	postinc1,c
  2050  0021DA  0E00               	movlw	0
  2051  0021DC  6EE6               	movwf	postinc1,c
  2052  0021DE  0060  F29B  FFE6   	movff	_V+70,postinc1
  2053  0021E4  0060  F29F  FFE6   	movff	_V+71,postinc1
  2054  0021EA  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2055  0021F0  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2056  0021F6  0E35               	movlw	STR_5& (0+255)
  2057  0021F8  6EE6               	movwf	postinc1,c
  2058  0021FA  0E60               	movlw	_V& (0+255)
  2059  0021FC  0F06               	addlw	6
  2060  0021FE  6EE6               	movwf	postinc1,c
  2061  002200  0E08               	movlw	8
  2062  002202  6EE6               	movwf	postinc1,c
  2063  002204  EC43  F028         	call	_sprintf	;wreg free
  2064                           
  2065                           ; BSR set to: 0
  2066                           ;main.c: 414:      V.buf[16] = 0;
  2067  002208  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2068                           
  2069                           ; BSR set to: 0
  2070                           ;main.c: 415:      wait_lcd_done();
  2071  00220A  EC12  F032         	call	_wait_lcd_done	;wreg free
  2072                           
  2073                           ; BSR set to: 0
  2074                           ;main.c: 416:      eaDogM_WriteStringAtPos(2, 0, V.buf);
  2075  00220E  0E60               	movlw	_V& (0+255)
  2076  002210  0F06               	addlw	6
  2077  002212  6EE6               	movwf	postinc1,c
  2078  002214  0E00               	movlw	0
  2079  002216  6EE6               	movwf	postinc1,c
  2080  002218  0E02               	movlw	2
  2081  00221A  6EE6               	movwf	postinc1,c
  2082  00221C  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2083  002220  D0BD               	goto	l9255
  2084  002222                     l9197:
  2085                           
  2086                           ; BSR set to: 0
  2087                           ;main.c: 427:     if (r_protocol(&V.r_l_state) == LINK_STATE_DONE) {
  2088  002222  0E60               	movlw	_V& (0+255)
  2089  002224  0F04               	addlw	4
  2090  002226  6EE6               	movwf	postinc1,c
  2091  002228  EC06  F01A         	call	_r_protocol	;wreg free
  2092  00222C  0E04               	movlw	4
  2093  00222E  183D               	xorwf	btemp,w,c
  2094  002230  A4D8               	btfss	status,2,c
  2095  002232  D029               	goto	l9215
  2096                           
  2097                           ;main.c: 428:      sprintf(V.buf, " S%dF%d #    ", V.stream, V.function);
  2098  002234  0100               	movlb	0	; () banked
  2099  002236  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2100  002238  6EE6               	movwf	postinc1,c
  2101  00223A  0E00               	movlw	0
  2102  00223C  6EE6               	movwf	postinc1,c
  2103  00223E  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2104  002240  6EE6               	movwf	postinc1,c
  2105  002242  0E00               	movlw	0
  2106  002244  6EE6               	movwf	postinc1,c
  2107  002246  0E8F               	movlw	STR_6& (0+255)
  2108  002248  6EE6               	movwf	postinc1,c
  2109  00224A  0E60               	movlw	_V& (0+255)
  2110  00224C  0F06               	addlw	6
  2111  00224E  6EE6               	movwf	postinc1,c
  2112  002250  0E06               	movlw	6
  2113  002252  6EE6               	movwf	postinc1,c
  2114  002254  EC43  F028         	call	_sprintf	;wreg free
  2115                           
  2116                           ; BSR set to: 0
  2117                           ;main.c: 429:      V.buf[11] = 0;
  2118  002258  6B71               	clrf	(_V+17)& (0+255),b	;volatile
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;main.c: 430:      wait_lcd_done();
  2122  00225A  EC12  F032         	call	_wait_lcd_done	;wreg free
  2123                           
  2124                           ; BSR set to: 0
  2125                           ;main.c: 431:      eaDogM_WriteStringAtPos(0, 0, V.buf);
  2126  00225E  0E60               	movlw	_V& (0+255)
  2127  002260  0F06               	addlw	6
  2128  002262  6EE6               	movwf	postinc1,c
  2129  002264  0E00               	movlw	0
  2130  002266  6EE6               	movwf	postinc1,c
  2131  002268  0E00               	movlw	0
  2132  00226A  6EE6               	movwf	postinc1,c
  2133  00226C  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2134                           
  2135                           ; BSR set to: 59
  2136                           ;main.c: 435:      if (V.wbit) {
  2137  002270  0100               	movlb	0	; () banked
  2138  002272  A3BB               	btfss	(_V+91)& (0+255),1,b	;volatile
  2139  002274  D006               	goto	l9213
  2140                           
  2141                           ; BSR set to: 0
  2142                           ;main.c: 436:       V.s_state = SEQ_STATE_TX;
  2143  002276  0E02               	movlw	2
  2144  002278  6F60               	movwf	_V& (0+255),b	;volatile
  2145                           
  2146                           ;main.c: 437:       V.failed_send = 0;
  2147  00227A  0E87               	movlw	-121
  2148  00227C  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  2149                           
  2150                           ; BSR set to: 0
  2151                           ;main.c: 438:       V.t_l_state = LINK_STATE_IDLE;
  2152  00227E  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2153                           
  2154                           ;main.c: 439:      } else {
  2155  002280  D002               	goto	l9215
  2156  002282                     l9213:
  2157                           
  2158                           ; BSR set to: 0
  2159                           ;main.c: 440:       V.s_state = SEQ_STATE_TRIGGER;
  2160  002282  0E03               	movlw	3
  2161  002284  6F60               	movwf	_V& (0+255),b	;volatile
  2162  002286                     l9215:
  2163                           
  2164                           ;main.c: 443:     if (V.r_l_state == LINK_STATE_ERROR)
  2165  002286  0E06               	movlw	6
  2166  002288  0100               	movlb	0	; () banked
  2167  00228A  1964               	xorwf	(_V+4)& (0+255),w,b	;volatile
  2168  00228C  D00F               	goto	L31
  2169  00228E                     l9219:
  2170                           
  2171                           ; BSR set to: 0
  2172                           ;main.c: 450:     if (t_protocol(&V.t_l_state) == LINK_STATE_DONE) {
  2173  00228E  0E60               	movlw	_V& (0+255)
  2174  002290  0F05               	addlw	5
  2175  002292  6EE6               	movwf	postinc1,c
  2176  002294  ECCE  F01F         	call	_t_protocol	;wreg free
  2177  002298  0E04               	movlw	4
  2178  00229A  183D               	xorwf	btemp,w,c
  2179  00229C  A4D8               	btfss	status,2,c
  2180  00229E  D003               	goto	l9223
  2181                           
  2182                           ;main.c: 451:      V.s_state = SEQ_STATE_TRIGGER;
  2183  0022A0  0E03               	movlw	3
  2184  0022A2  0100               	movlb	0	; () banked
  2185  0022A4  6F60               	movwf	_V& (0+255),b	;volatile
  2186  0022A6                     l9223:
  2187                           
  2188                           ;main.c: 453:     if (V.t_l_state == LINK_STATE_ERROR)
  2189  0022A6  0E06               	movlw	6
  2190  0022A8  0100               	movlb	0	; () banked
  2191  0022AA  1965               	xorwf	(_V+5)& (0+255),w,b	;volatile
  2192  0022AC                     L31:
  2193  0022AC  A4D8               	btfss	status,2,c
  2194  0022AE  D076               	goto	l9255
  2195                           
  2196                           ; BSR set to: 0
  2197                           ;main.c: 454:      V.s_state = SEQ_STATE_ERROR;
  2198  0022B0  0E06               	movlw	6
  2199  0022B2  6F60               	movwf	_V& (0+255),b	;volatile
  2200  0022B4  D073               	goto	l9255
  2201  0022B6                     l1251:
  2202                           
  2203                           ; BSR set to: 0
  2204                           ;main.c: 457:     if (V.queue) {
  2205  0022B6  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  2206  0022B8  D00E               	goto	l9233
  2207                           
  2208                           ; BSR set to: 0
  2209                           ;main.c: 458:      V.r_l_state = LINK_STATE_IDLE;
  2210  0022BA  6B64               	clrf	(_V+4)& (0+255),b	;volatile
  2211                           
  2212                           ;main.c: 459:      V.t_l_state = LINK_STATE_IDLE;
  2213  0022BC  6B65               	clrf	(_V+5)& (0+255),b	;volatile
  2214                           
  2215                           ; BSR set to: 0
  2216                           ;main.c: 460:      V.s_state = SEQ_STATE_TX;
  2217  0022BE  0E02               	movlw	2
  2218  0022C0  6F60               	movwf	_V& (0+255),b	;volatile
  2219                           
  2220                           ; BSR set to: 0
  2221                           ;main.c: 461:      sprintf(V.buf, " OKQ#");
  2222  0022C2  0EAF               	movlw	STR_7& (0+255)
  2223  0022C4  6EE6               	movwf	postinc1,c
  2224  0022C6  0E60               	movlw	_V& (0+255)
  2225  0022C8  0F06               	addlw	6
  2226  0022CA  6EE6               	movwf	postinc1,c
  2227  0022CC  0E02               	movlw	2
  2228  0022CE  6EE6               	movwf	postinc1,c
  2229  0022D0  EC43  F028         	call	_sprintf	;wreg free
  2230                           
  2231                           ;main.c: 462:     } else {
  2232  0022D4  D00B               	goto	l9237
  2233  0022D6                     l9233:
  2234                           
  2235                           ; BSR set to: 0
  2236                           ;main.c: 463:      V.s_state = SEQ_STATE_DONE;
  2237  0022D6  0E05               	movlw	5
  2238  0022D8  6F60               	movwf	_V& (0+255),b	;volatile
  2239                           
  2240                           ; BSR set to: 0
  2241                           ;main.c: 464:      sprintf(V.buf, " OK #");
  2242  0022DA  0EA9               	movlw	STR_8& (0+255)
  2243  0022DC  6EE6               	movwf	postinc1,c
  2244  0022DE  0E60               	movlw	_V& (0+255)
  2245  0022E0  0F06               	addlw	6
  2246  0022E2  6EE6               	movwf	postinc1,c
  2247  0022E4  0E02               	movlw	2
  2248  0022E6  6EE6               	movwf	postinc1,c
  2249  0022E8  EC43  F028         	call	_sprintf	;wreg free
  2250  0022EC                     l9237:
  2251                           
  2252                           ; BSR set to: 0
  2253                           ;main.c: 466:     wait_lcd_done();
  2254  0022EC  EC12  F032         	call	_wait_lcd_done	;wreg free
  2255                           
  2256                           ; BSR set to: 0
  2257                           ;main.c: 467:     eaDogM_WriteStringAtPos(0, 11, V.buf);
  2258  0022F0  0E60               	movlw	_V& (0+255)
  2259  0022F2  0F06               	addlw	6
  2260  0022F4  6EE6               	movwf	postinc1,c
  2261  0022F6  0E0B               	movlw	11
  2262  0022F8  6EE6               	movwf	postinc1,c
  2263  0022FA  0E00               	movlw	0
  2264  0022FC  6EE6               	movwf	postinc1,c
  2265  0022FE  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2266                           
  2267                           ;main.c: 468:     break;
  2268  002302  D04C               	goto	l9255
  2269  002304                     l1254:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;main.c: 470:     V.s_state = SEQ_STATE_INIT;
  2273  002304  6B60               	clrf	_V& (0+255),b	;volatile
  2274                           
  2275                           ;main.c: 471:     break;
  2276  002306  D04A               	goto	l9255
  2277  002308                     l1256:
  2278                           
  2279                           ; BSR set to: 0
  2280                           ;main.c: 474:     V.s_state = SEQ_STATE_INIT;
  2281  002308  6B60               	clrf	_V& (0+255),b	;volatile
  2282                           
  2283                           ; BSR set to: 0
  2284                           ;main.c: 475:     sprintf(V.buf, "E%d A%d T%d C%d #", V.error, V.abort, V.timer_error, V
      +                          .checksum_error);
  2285  00230A  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2286  002310  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2287  002316  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2288  00231C  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2289  002322  51B1               	movf	(_V+81)& (0+255),w,b	;volatile
  2290  002324  6EE6               	movwf	postinc1,c
  2291  002326  0E00               	movlw	0
  2292  002328  6EE6               	movwf	postinc1,c
  2293  00232A  51B0               	movf	(_V+80)& (0+255),w,b	;volatile
  2294  00232C  6EE6               	movwf	postinc1,c
  2295  00232E  0E00               	movlw	0
  2296  002330  6EE6               	movwf	postinc1,c
  2297  002332  0E5D               	movlw	STR_9& (0+255)
  2298  002334  6EE6               	movwf	postinc1,c
  2299  002336  0E60               	movlw	_V& (0+255)
  2300  002338  0F06               	addlw	6
  2301  00233A  6EE6               	movwf	postinc1,c
  2302  00233C  0E0A               	movlw	10
  2303  00233E  6EE6               	movwf	postinc1,c
  2304  002340  EC43  F028         	call	_sprintf	;wreg free
  2305                           
  2306                           ; BSR set to: 0
  2307                           ;main.c: 476:     V.buf[16] = 0;
  2308  002344  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2309                           
  2310                           ; BSR set to: 0
  2311                           ;main.c: 477:     wait_lcd_done();
  2312  002346  EC12  F032         	call	_wait_lcd_done	;wreg free
  2313                           
  2314                           ; BSR set to: 0
  2315                           ;main.c: 478:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2316  00234A  0E60               	movlw	_V& (0+255)
  2317  00234C  0F06               	addlw	6
  2318  00234E  6EE6               	movwf	postinc1,c
  2319  002350  0E00               	movlw	0
  2320  002352  6EE6               	movwf	postinc1,c
  2321  002354  0E02               	movlw	2
  2322  002356  6EE6               	movwf	postinc1,c
  2323  002358  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2324                           
  2325                           ; BSR set to: 59
  2326                           ;main.c: 479:     WaitMs(2000);
  2327  00235C  0ED0               	movlw	208
  2328  00235E  6EE6               	movwf	postinc1,c
  2329  002360  0E07               	movlw	7
  2330  002362  6EE6               	movwf	postinc1,c
  2331  002364  EC25  F02F         	call	_WaitMs	;wreg free
  2332                           
  2333                           ;main.c: 480:     break;
  2334  002368  D019               	goto	l9255
  2335  00236A                     l9253:
  2336                           
  2337                           ; BSR set to: 0
  2338  00236A  5160               	movf	_V& (0+255),w,b	;volatile
  2339  00236C  6E47               	movwf	btemp+10,c
  2340  00236E  6A48               	clrf	btemp+11,c
  2341                           
  2342                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2343                           ; Switch size 1, requested type "simple"
  2344                           ; Number of cases is 1, Range of values is 0 to 0
  2345                           ; switch strategies available:
  2346                           ; Name         Instructions Cycles
  2347                           ; simple_byte            4     3 (average)
  2348                           ;	Chosen strategy is simple_byte
  2349  002370  5048               	movf	btemp+11,w,c
  2350  002372  0A00               	xorlw	0	; case 0
  2351  002374  A4D8               	btfss	status,2,c
  2352  002376  D7C8               	goto	l1256
  2353                           
  2354                           ; BSR set to: 0
  2355                           ; Switch size 1, requested type "simple"
  2356                           ; Number of cases is 6, Range of values is 0 to 6
  2357                           ; switch strategies available:
  2358                           ; Name         Instructions Cycles
  2359                           ; simple_byte           19    10 (average)
  2360                           ;	Chosen strategy is simple_byte
  2361  002378  5047               	movf	btemp+10,w,c
  2362  00237A  0A00               	xorlw	0	; case 0
  2363  00237C  B4D8               	btfsc	status,2,c
  2364  00237E  D71F               	goto	l1240
  2365  002380  0A01               	xorlw	1	; case 1
  2366  002382  B4D8               	btfsc	status,2,c
  2367  002384  D74E               	goto	l9197
  2368  002386  0A03               	xorlw	3	; case 2
  2369  002388  B4D8               	btfsc	status,2,c
  2370  00238A  D781               	goto	l9219
  2371  00238C  0A01               	xorlw	1	; case 3
  2372  00238E  B4D8               	btfsc	status,2,c
  2373  002390  D792               	goto	l1251
  2374  002392  0A06               	xorlw	6	; case 5
  2375  002394  B4D8               	btfsc	status,2,c
  2376  002396  D7B6               	goto	l1254
  2377  002398  0A03               	xorlw	3	; case 6
  2378  00239A  D7B6               	goto	l1256
  2379  00239C                     l9255:
  2380                           
  2381                           ;main.c: 482:    if ((V.error == LINK_ERROR_NONE) && (V.abort == LINK_ERROR_NONE)) {
  2382  00239C  0E0A               	movlw	10
  2383  00239E  0100               	movlb	0	; () banked
  2384  0023A0  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  2385  0023A2  A4D8               	btfss	status,2,c
  2386  0023A4  D0F9               	goto	l1271
  2387                           
  2388                           ; BSR set to: 0
  2389  0023A6  0E0A               	movlw	10
  2390  0023A8  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  2391  0023AA  A4D8               	btfss	status,2,c
  2392  0023AC  D0F5               	goto	l1271
  2393                           
  2394                           ; BSR set to: 0
  2395                           ;main.c: 483:     sprintf(V.buf, "HOST: %ld G%d      #", V.ticks, V.g_state);
  2396  0023AE  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2397  0023B0  6EE6               	movwf	postinc1,c
  2398  0023B2  0E00               	movlw	0
  2399  0023B4  6EE6               	movwf	postinc1,c
  2400  0023B6  0060  F29B  FFE6   	movff	_V+70,postinc1
  2401  0023BC  0060  F29F  FFE6   	movff	_V+71,postinc1
  2402  0023C2  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2403  0023C8  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2404  0023CE  0E35               	movlw	STR_5& (0+255)
  2405  0023D0  6EE6               	movwf	postinc1,c
  2406  0023D2  0E60               	movlw	_V& (0+255)
  2407  0023D4  0F06               	addlw	6
  2408  0023D6  6EE6               	movwf	postinc1,c
  2409  0023D8  0E08               	movlw	8
  2410  0023DA  6EE6               	movwf	postinc1,c
  2411  0023DC  EC43  F028         	call	_sprintf	;wreg free
  2412  0023E0                     l9261:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ;main.c: 484:     V.buf[16] = 0;
  2416  0023E0  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2417                           
  2418                           ; BSR set to: 0
  2419                           ;main.c: 485:     wait_lcd_done();
  2420  0023E2  EC12  F032         	call	_wait_lcd_done	;wreg free
  2421                           
  2422                           ; BSR set to: 0
  2423                           ;main.c: 486:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2424  0023E6  0E60               	movlw	_V& (0+255)
  2425  0023E8  0F06               	addlw	6
  2426  0023EA  6EE6               	movwf	postinc1,c
  2427  0023EC  0E00               	movlw	0
  2428  0023EE  6EE6               	movwf	postinc1,c
  2429  0023F0  0E02               	movlw	2
  2430  0023F2  6EE6               	movwf	postinc1,c
  2431  0023F4  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2432  0023F8  D0CF               	goto	l1271
  2433  0023FA                     l1260:
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;main.c: 492:     V.m_l_state = LINK_STATE_IDLE;
  2437  0023FA  6B63               	clrf	(_V+3)& (0+255),b	;volatile
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;main.c: 493:     V.s_state = SEQ_STATE_RX;
  2441  0023FC  0E01               	movlw	1
  2442  0023FE  6F60               	movwf	_V& (0+255),b	;volatile
  2443                           
  2444                           ; BSR set to: 0
  2445                           ;main.c: 494:     sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer
      +                          _error, V.checksum_error);
  2446  002400  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2447  002406  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2448  00240C  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2449  002412  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2450  002418  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2451  00241A  6EE6               	movwf	postinc1,c
  2452  00241C  0E00               	movlw	0
  2453  00241E  6EE6               	movwf	postinc1,c
  2454  002420  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2455  002422  6EE6               	movwf	postinc1,c
  2456  002424  0E00               	movlw	0
  2457  002426  6EE6               	movwf	postinc1,c
  2458  002428  0E01               	movlw	STR_11& (0+255)
  2459  00242A  6EE6               	movwf	postinc1,c
  2460  00242C  0E60               	movlw	_V& (0+255)
  2461  00242E  0F06               	addlw	6
  2462  002430  6EE6               	movwf	postinc1,c
  2463  002432  0E0A               	movlw	10
  2464  002434  6EE6               	movwf	postinc1,c
  2465  002436  EC43  F028         	call	_sprintf	;wreg free
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;main.c: 495:     V.buf[16] = 0;
  2469  00243A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2470                           
  2471                           ; BSR set to: 0
  2472                           ;main.c: 496:     wait_lcd_done();
  2473  00243C  EC12  F032         	call	_wait_lcd_done	;wreg free
  2474                           
  2475                           ; BSR set to: 0
  2476                           ;main.c: 497:     eaDogM_WriteStringAtPos(2, 0, V.buf);
  2477  002440  0E60               	movlw	_V& (0+255)
  2478  002442  0F06               	addlw	6
  2479  002444  6EE6               	movwf	postinc1,c
  2480  002446  0E00               	movlw	0
  2481  002448  6EE6               	movwf	postinc1,c
  2482  00244A  0E02               	movlw	2
  2483  00244C  6EE6               	movwf	postinc1,c
  2484  00244E  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2485                           
  2486                           ;main.c: 505:     break;
  2487  002452  D06D               	goto	l9305
  2488  002454                     l9277:
  2489                           
  2490                           ; BSR set to: 0
  2491                           ;main.c: 510:     if (m_protocol(&V.m_l_state) == LINK_STATE_DONE) {
  2492  002454  0E60               	movlw	_V& (0+255)
  2493  002456  0F03               	addlw	3
  2494  002458  6EE6               	movwf	postinc1,c
  2495  00245A  EC7A  F015         	call	_m_protocol	;wreg free
  2496  00245E  0E04               	movlw	4
  2497  002460  183D               	xorwf	btemp,w,c
  2498  002462  A4D8               	btfss	status,2,c
  2499  002464  D02D               	goto	l9289
  2500                           
  2501                           ;main.c: 511:      sprintf(V.buf, " S%dF%d #%ld      ", V.stream, V.function, V.ticks);
  2502  002466  0060  F29B  FFE6   	movff	_V+70,postinc1
  2503  00246C  0060  F29F  FFE6   	movff	_V+71,postinc1
  2504  002472  0060  F2A3  FFE6   	movff	_V+72,postinc1
  2505  002478  0060  F2A7  FFE6   	movff	_V+73,postinc1
  2506  00247E  0100               	movlb	0	; () banked
  2507  002480  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  2508  002482  6EE6               	movwf	postinc1,c
  2509  002484  0E00               	movlw	0
  2510  002486  6EE6               	movwf	postinc1,c
  2511  002488  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  2512  00248A  6EE6               	movwf	postinc1,c
  2513  00248C  0E00               	movlw	0
  2514  00248E  6EE6               	movwf	postinc1,c
  2515  002490  0E4A               	movlw	STR_12& (0+255)
  2516  002492  6EE6               	movwf	postinc1,c
  2517  002494  0E60               	movlw	_V& (0+255)
  2518  002496  0F06               	addlw	6
  2519  002498  6EE6               	movwf	postinc1,c
  2520  00249A  0E0A               	movlw	10
  2521  00249C  6EE6               	movwf	postinc1,c
  2522  00249E  EC43  F028         	call	_sprintf	;wreg free
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;main.c: 512:      V.buf[13] = 0;
  2526  0024A2  6B73               	clrf	(_V+19)& (0+255),b	;volatile
  2527                           
  2528                           ; BSR set to: 0
  2529                           ;main.c: 513:      wait_lcd_done();
  2530  0024A4  EC12  F032         	call	_wait_lcd_done	;wreg free
  2531                           
  2532                           ; BSR set to: 0
  2533                           ;main.c: 514:      eaDogM_WriteStringAtPos(V.uart - 1, 0, V.buf);
  2534  0024A8  0E60               	movlw	_V& (0+255)
  2535  0024AA  0F06               	addlw	6
  2536  0024AC  6EE6               	movwf	postinc1,c
  2537  0024AE  0E00               	movlw	0
  2538  0024B0  6EE6               	movwf	postinc1,c
  2539  0024B2  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2540  0024B4  6EE6               	movwf	postinc1,c
  2541  0024B6  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2542                           
  2543                           ; BSR set to: 59
  2544                           ;main.c: 515:      V.s_state = SEQ_STATE_TRIGGER;
  2545  0024BA  0E03               	movlw	3
  2546  0024BC  0100               	movlb	0	; () banked
  2547  0024BE  6F60               	movwf	_V& (0+255),b	;volatile
  2548  0024C0                     l9289:
  2549                           
  2550                           ;main.c: 517:     if (V.m_l_state == LINK_STATE_ERROR)
  2551  0024C0  0E06               	movlw	6
  2552  0024C2  0100               	movlb	0	; () banked
  2553  0024C4  1963               	xorwf	(_V+3)& (0+255),w,b	;volatile
  2554  0024C6  A4D8               	btfss	status,2,c
  2555  0024C8  D032               	goto	l9305
  2556                           
  2557                           ; BSR set to: 0
  2558                           ;main.c: 518:      V.s_state = SEQ_STATE_ERROR;
  2559  0024CA  0E06               	movlw	6
  2560  0024CC  6F60               	movwf	_V& (0+255),b	;volatile
  2561  0024CE  D02F               	goto	l9305
  2562  0024D0                     l9293:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;main.c: 521:     V.s_state = SEQ_STATE_DONE;
  2566  0024D0  0E05               	movlw	5
  2567  0024D2  6F60               	movwf	_V& (0+255),b	;volatile
  2568                           
  2569                           ; BSR set to: 0
  2570                           ;main.c: 522:     sprintf(V.buf, " OK #");
  2571  0024D4  0EA9               	movlw	STR_8& (0+255)
  2572  0024D6  6EE6               	movwf	postinc1,c
  2573  0024D8  0E60               	movlw	_V& (0+255)
  2574  0024DA  0F06               	addlw	6
  2575  0024DC  6EE6               	movwf	postinc1,c
  2576  0024DE  0E02               	movlw	2
  2577  0024E0  6EE6               	movwf	postinc1,c
  2578  0024E2  EC43  F028         	call	_sprintf	;wreg free
  2579                           
  2580                           ; BSR set to: 0
  2581                           ;main.c: 523:     wait_lcd_done();
  2582  0024E6  EC12  F032         	call	_wait_lcd_done	;wreg free
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;main.c: 524:     eaDogM_WriteStringAtPos(V.uart - 1, 13, V.buf);
  2586  0024EA  0E60               	movlw	_V& (0+255)
  2587  0024EC  0F06               	addlw	6
  2588  0024EE  6EE6               	movwf	postinc1,c
  2589  0024F0  0E0D               	movlw	13
  2590  0024F2  6EE6               	movwf	postinc1,c
  2591  0024F4  05C0               	decf	(_V+96)& (0+255),w,b	;volatile
  2592  0024F6  6EE6               	movwf	postinc1,c
  2593  0024F8  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2594                           
  2595                           ;main.c: 525:     break;
  2596  0024FC  D018               	goto	l9305
  2597  0024FE                     l1266:
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;main.c: 531:     V.s_state = SEQ_STATE_INIT;
  2601                           
  2602                           ;main.c: 530:    default:
  2603                           
  2604                           ;main.c: 528:     break;
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;main.c: 527:     V.s_state = SEQ_STATE_INIT;
  2608  0024FE  6B60               	clrf	_V& (0+255),b	;volatile
  2609                           
  2610                           ;main.c: 532:     break;
  2611  002500  D016               	goto	l9305
  2612  002502                     l9303:
  2613                           
  2614                           ; BSR set to: 0
  2615  002502  5160               	movf	_V& (0+255),w,b	;volatile
  2616  002504  6E47               	movwf	btemp+10,c
  2617  002506  6A48               	clrf	btemp+11,c
  2618                           
  2619                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2620                           ; Switch size 1, requested type "simple"
  2621                           ; Number of cases is 1, Range of values is 0 to 0
  2622                           ; switch strategies available:
  2623                           ; Name         Instructions Cycles
  2624                           ; simple_byte            4     3 (average)
  2625                           ;	Chosen strategy is simple_byte
  2626  002508  5048               	movf	btemp+11,w,c
  2627  00250A  0A00               	xorlw	0	; case 0
  2628  00250C  A4D8               	btfss	status,2,c
  2629  00250E  D7F7               	goto	l1266
  2630                           
  2631                           ; BSR set to: 0
  2632                           ; Switch size 1, requested type "simple"
  2633                           ; Number of cases is 5, Range of values is 0 to 6
  2634                           ; switch strategies available:
  2635                           ; Name         Instructions Cycles
  2636                           ; simple_byte           16     9 (average)
  2637                           ;	Chosen strategy is simple_byte
  2638  002510  5047               	movf	btemp+10,w,c
  2639  002512  0A00               	xorlw	0	; case 0
  2640  002514  B4D8               	btfsc	status,2,c
  2641  002516  D771               	goto	l1260
  2642  002518  0A01               	xorlw	1	; case 1
  2643  00251A  B4D8               	btfsc	status,2,c
  2644  00251C  D79B               	goto	l9277
  2645  00251E  0A02               	xorlw	2	; case 3
  2646  002520  B4D8               	btfsc	status,2,c
  2647  002522  D7D6               	goto	l9293
  2648  002524  0A06               	xorlw	6	; case 5
  2649  002526  B4D8               	btfsc	status,2,c
  2650  002528  D7EA               	goto	l1266
  2651  00252A  0A03               	xorlw	3	; case 6
  2652  00252C  D7E8               	goto	l1266
  2653  00252E                     l9305:
  2654                           
  2655                           ;main.c: 534:    sprintf(V.buf, "LOG: U%d G%d %d %d      #", V.uart, V.g_state, V.timer_
      +                          error, V.checksum_error);
  2656  00252E  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2657  002534  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2658  00253A  0060  F2E7  FFE6   	movff	_V+89,postinc1
  2659  002540  0060  F2EB  FFE6   	movff	_V+90,postinc1
  2660  002546  0100               	movlb	0	; () banked
  2661  002548  5162               	movf	(_V+2)& (0+255),w,b	;volatile
  2662  00254A  6EE6               	movwf	postinc1,c
  2663  00254C  0E00               	movlw	0
  2664  00254E  6EE6               	movwf	postinc1,c
  2665  002550  51C0               	movf	(_V+96)& (0+255),w,b	;volatile
  2666  002552  6EE6               	movwf	postinc1,c
  2667  002554  0E00               	movlw	0
  2668  002556  6EE6               	movwf	postinc1,c
  2669  002558  0E01               	movlw	STR_11& (0+255)
  2670  00255A  6EE6               	movwf	postinc1,c
  2671  00255C  0E60               	movlw	_V& (0+255)
  2672  00255E  0F06               	addlw	6
  2673  002560  6EE6               	movwf	postinc1,c
  2674  002562  0E0A               	movlw	10
  2675  002564  6EE6               	movwf	postinc1,c
  2676  002566  EC43  F028         	call	_sprintf	;wreg free
  2677  00256A  D73A               	goto	l9261
  2678  00256C                     l1270:
  2679                           
  2680                           ; BSR set to: 0
  2681                           ;main.c: 541:    V.ui_state = UI_STATE_INIT;
  2682  00256C  6B61               	clrf	(_V+1)& (0+255),b	;volatile
  2683                           
  2684                           ;main.c: 542:    break;
  2685  00256E  D014               	goto	l1271
  2686  002570                     l9315:
  2687  002570  0100               	movlb	0	; () banked
  2688  002572  5161               	movf	(_V+1)& (0+255),w,b	;volatile
  2689  002574  6E47               	movwf	btemp+10,c
  2690  002576  6A48               	clrf	btemp+11,c
  2691                           
  2692                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2693                           ; Switch size 1, requested type "simple"
  2694                           ; Number of cases is 1, Range of values is 0 to 0
  2695                           ; switch strategies available:
  2696                           ; Name         Instructions Cycles
  2697                           ; simple_byte            4     3 (average)
  2698                           ;	Chosen strategy is simple_byte
  2699  002578  5048               	movf	btemp+11,w,c
  2700  00257A  0A00               	xorlw	0	; case 0
  2701  00257C  A4D8               	btfss	status,2,c
  2702  00257E  D7F6               	goto	l1270
  2703                           
  2704                           ; BSR set to: 0
  2705                           ; Switch size 1, requested type "simple"
  2706                           ; Number of cases is 4, Range of values is 0 to 4
  2707                           ; switch strategies available:
  2708                           ; Name         Instructions Cycles
  2709                           ; simple_byte           13     7 (average)
  2710                           ;	Chosen strategy is simple_byte
  2711  002580  5047               	movf	btemp+10,w,c
  2712  002582  0A00               	xorlw	0	; case 0
  2713  002584  B4D8               	btfsc	status,2,c
  2714  002586  D5C0               	goto	l9153
  2715  002588  0A01               	xorlw	1	; case 1
  2716  00258A  B4D8               	btfsc	status,2,c
  2717  00258C  D6EE               	goto	l9253
  2718  00258E  0A02               	xorlw	2	; case 3
  2719  002590  B4D8               	btfsc	status,2,c
  2720  002592  D7B7               	goto	l9303
  2721  002594  0A07               	xorlw	7	; case 4
  2722  002596  D7EA               	goto	l1270
  2723  002598                     l1271:
  2724  002598  84BE               	bsf	16318,2,c	;volatile
  2725                           
  2726                           ;main.c: 545:   if (V.ticks) {
  2727  00259A  0100               	movlb	0	; () banked
  2728  00259C  51A6               	movf	(_V+70)& (0+255),w,b	;volatile
  2729  00259E  11A7               	iorwf	(_V+71)& (0+255),w,b	;volatile
  2730  0025A0  11A8               	iorwf	(_V+72)& (0+255),w,b	;volatile
  2731  0025A2  11A9               	iorwf	(_V+73)& (0+255),w,b	;volatile
  2732  0025A4  B4D8               	btfsc	status,2,c
  2733  0025A6  D016               	goto	l9323
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;main.c: 546:    if (V.failed_receive) {
  2737  0025A8  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2738  0025AA  0B0F               	andlw	15
  2739  0025AC  0900               	iorlw	0
  2740  0025AE  B4D8               	btfsc	status,2,c
  2741  0025B0  D003               	goto	l1280
  2742                           
  2743                           ; BSR set to: 0
  2744                           
  2745                           ;main.c: 547:     do { LATDbits.LATD4 = 0; } while(0);
  2746  0025B2  98BD               	bcf	16317,4,c	;volatile
  2747                           
  2748                           ; BSR set to: 0
  2749                           
  2750                           ;main.c: 548:     do { LATDbits.LATD5 = 1; } while(0);
  2751  0025B4  8ABD               	bsf	16317,5,c	;volatile
  2752  0025B6  D002               	goto	l9321
  2753  0025B8                     l1280:
  2754                           
  2755                           ; BSR set to: 0
  2756  0025B8  88BD               	bsf	16317,4,c	;volatile
  2757                           
  2758                           ; BSR set to: 0
  2759                           
  2760                           ;main.c: 551:     do { LATDbits.LATD5 = 0; } while(0);
  2761  0025BA  9ABD               	bcf	16317,5,c	;volatile
  2762  0025BC                     l9321:
  2763                           
  2764                           ; BSR set to: 0
  2765                           ;main.c: 553:    if (V.failed_send) {
  2766  0025BC  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2767  0025BE  32E8               	rrcf	wreg,f,c
  2768  0025C0  32E8               	rrcf	wreg,f,c
  2769  0025C2  0B0F               	andlw	15
  2770  0025C4  0900               	iorlw	0
  2771  0025C6  B4D8               	btfsc	status,2,c
  2772  0025C8  D003               	goto	l1290
  2773                           
  2774                           ; BSR set to: 0
  2775                           
  2776                           ;main.c: 554:     do { LATDbits.LATD6 = 0; } while(0);
  2777  0025CA  9CBD               	bcf	16317,6,c	;volatile
  2778                           
  2779                           ; BSR set to: 0
  2780                           
  2781                           ;main.c: 555:     do { LATDbits.LATD7 = 1; } while(0);
  2782  0025CC  8EBD               	bsf	16317,7,c	;volatile
  2783  0025CE  D002               	goto	l9323
  2784  0025D0                     l1290:
  2785                           
  2786                           ; BSR set to: 0
  2787  0025D0  8CBD               	bsf	16317,6,c	;volatile
  2788                           
  2789                           ; BSR set to: 0
  2790                           
  2791                           ;main.c: 558:     do { LATDbits.LATD7 = 0; } while(0);
  2792  0025D2  9EBD               	bcf	16317,7,c	;volatile
  2793  0025D4                     l9323:
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;main.c: 561:   sprintf(V.buf, "R%d %d, T%d %d C%d      #", V.r_l_state, V.failed_receiv
      +                          e, V.t_l_state, V.failed_send, V.checksum_error);
  2797  0025D4  0060  F2DF  FFE6   	movff	_V+87,postinc1
  2798  0025DA  0060  F2E3  FFE6   	movff	_V+88,postinc1
  2799  0025E0  31BB               	rrcf	(_V+91)& (0+255),w,b	;volatile
  2800  0025E2  32E8               	rrcf	wreg,f,c
  2801  0025E4  32E8               	rrcf	wreg,f,c
  2802  0025E6  0B0F               	andlw	15
  2803  0025E8  6EE6               	movwf	postinc1,c
  2804  0025EA  0E00               	movlw	0
  2805  0025EC  6EE6               	movwf	postinc1,c
  2806  0025EE  5165               	movf	(_V+5)& (0+255),w,b	;volatile
  2807  0025F0  6EE6               	movwf	postinc1,c
  2808  0025F2  0E00               	movlw	0
  2809  0025F4  6EE6               	movwf	postinc1,c
  2810  0025F6  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  2811  0025F8  0B0F               	andlw	15
  2812  0025FA  6EE6               	movwf	postinc1,c
  2813  0025FC  0E00               	movlw	0
  2814  0025FE  6EE6               	movwf	postinc1,c
  2815  002600  5164               	movf	(_V+4)& (0+255),w,b	;volatile
  2816  002602  6EE6               	movwf	postinc1,c
  2817  002604  0E00               	movlw	0
  2818  002606  6EE6               	movwf	postinc1,c
  2819  002608  0E1B               	movlw	STR_15& (0+255)
  2820  00260A  6EE6               	movwf	postinc1,c
  2821  00260C  0E60               	movlw	_V& (0+255)
  2822  00260E  0F06               	addlw	6
  2823  002610  6EE6               	movwf	postinc1,c
  2824  002612  0E0C               	movlw	12
  2825  002614  6EE6               	movwf	postinc1,c
  2826  002616  EC43  F028         	call	_sprintf	;wreg free
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;main.c: 562:   V.buf[16] = 0;
  2830  00261A  6B76               	clrf	(_V+22)& (0+255),b	;volatile
  2831                           
  2832                           ; BSR set to: 0
  2833                           ;main.c: 563:   wait_lcd_done();
  2834  00261C  EC12  F032         	call	_wait_lcd_done	;wreg free
  2835                           
  2836                           ; BSR set to: 0
  2837                           ;main.c: 564:   if (mode != UI_STATE_LOG)
  2838                           ;stkvar	_mode @ sp[(-1)+0]
  2839  002620  0EFF               	movlw	-1
  2840  002622  006F FF8C  F03D    	movff	plusw1,btemp
  2841  002628  0E03               	movlw	3
  2842  00262A  183D               	xorwf	btemp,w,c
  2843  00262C  B4D8               	btfsc	status,2,c
  2844  00262E  D009               	goto	l9333
  2845                           
  2846                           ; BSR set to: 0
  2847                           ;main.c: 565:    eaDogM_WriteStringAtPos(1, 0, V.buf);
  2848  002630  0E60               	movlw	_V& (0+255)
  2849  002632  0F06               	addlw	6
  2850  002634  6EE6               	movwf	postinc1,c
  2851  002636  0E00               	movlw	0
  2852  002638  6EE6               	movwf	postinc1,c
  2853  00263A  0E01               	movlw	1
  2854  00263C  6EE6               	movwf	postinc1,c
  2855  00263E  EC5A  F02F         	call	_eaDogM_WriteStringAtPos	;wreg free
  2856  002642                     l9333:
  2857  002642  94BE               	bcf	16318,2,c	;volatile
  2858  002644  D795               	goto	l9315
  2859  002646                     __end_of_main:
  2860                           	opt callstack 0
  2861                           
  2862 ;; *************** function _t_protocol *****************
  2863 ;; Defined at:
  2864 ;;		line 334 in file "gemsecs.c"
  2865 ;; Parameters:    Size  Location     Type
  2866 ;;  t_link          1  [STACK] PTR enum E16172
  2867 ;;		 -> V(98), 
  2868 ;; Auto vars:     Size  Location     Type
  2869 ;;  rxData          1  [STACK] unsigned char 
  2870 ;; Return value:  Size  Location     Type
  2871 ;;                  1  [STACK] enum E16912
  2872 ;; Registers used:
  2873 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11, prodl, prodh
  2874 ;; Tracked objects:
  2875 ;;		On entry : 0/0
  2876 ;;		On exit  : 0/0
  2877 ;;		Unchanged: 0/0
  2878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2882 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2883 ;;Total ram usage:        0 bytes
  2884 ;; Hardware stack levels used:    1
  2885 ;; Hardware stack levels required when called:    5
  2886 ;; This function calls:
  2887 ;;		_StartTimer
  2888 ;;		_TimerDone
  2889 ;;		_UART1_Read
  2890 ;;		_UART1_Write
  2891 ;;		_UART1_is_rx_ready
  2892 ;;		_UART1_put_buffer
  2893 ;;		_secs_II_message
  2894 ;;		_secs_send
  2895 ;; This function is called by:
  2896 ;;		_main
  2897 ;; This function uses a reentrant model
  2898 ;;
  2899                           
  2900                           	psect	text1
  2901  003F9C                     __ptext1:
  2902                           	opt callstack 0
  2903  003F9C                     _t_protocol:
  2904                           	opt callstack 0
  2905                           
  2906                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2907  003F9C  52E6               	movf	postinc1,f,c
  2908                           
  2909                           ;gemsecs.c: 334: LINK_STATES t_protocol(LINK_STATES * t_link);gemsecs.c: 335: {;gemsecs.
      +                          c: 336:  uint8_t rxData;;gemsecs.c: 337:  static uint8_t retry, requeue = 0;;gemsecs.c: 
      +                          338:  static response_type block;;gemsecs.c: 340:  switch (*t_link) {
  2910                           
  2911                           ;incstack = 0
  2912  003F9E  D113               	goto	l8917
  2913  003FA0                     l8819:
  2914                           
  2915                           ;gemsecs.c: 342:   V.error = LINK_ERROR_NONE;
  2916  003FA0  0E0A               	movlw	10
  2917  003FA2  0100               	movlb	0	; () banked
  2918  003FA4  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2919                           
  2920                           ;gemsecs.c: 343:   retry = 3;
  2921  003FA6  0E03               	movlw	3
  2922  003FA8  6E2D               	movwf	t_protocol@retry,c
  2923                           
  2924                           ; BSR set to: 0
  2925                           ;gemsecs.c: 344:   UART1_Write(0x05);
  2926  003FAA  0E05               	movlw	5
  2927  003FAC  6EE6               	movwf	postinc1,c
  2928  003FAE  ECAC  F02E         	call	_UART1_Write	;wreg free
  2929                           
  2930                           ; BSR set to: 57
  2931                           ;gemsecs.c: 345:   StartTimer(TMR_T2, 2000);
  2932  003FB2  0ED0               	movlw	208
  2933  003FB4  6EE6               	movwf	postinc1,c
  2934  003FB6  0E07               	movlw	7
  2935  003FB8  6EE6               	movwf	postinc1,c
  2936  003FBA  0E02               	movlw	2
  2937  003FBC  6EE6               	movwf	postinc1,c
  2938  003FBE  EC4D  F02E         	call	_StartTimer	;wreg free
  2939                           
  2940                           ;gemsecs.c: 346:   *t_link = LINK_STATE_ENQ;
  2941                           ;stkvar	_t_link @ sp[(-1)+-1]
  2942  003FC2  0EFE               	movlw	-2
  2943  003FC4  50E3               	movf	plusw1,w,c
  2944  003FC6  6ED9               	movwf	fsr2l,c
  2945  003FC8  6ADA               	clrf	fsr2h,c
  2946  003FCA  0E01               	movlw	1
  2947  003FCC  D0FA               	goto	L5
  2948  003FCE                     l8827:
  2949                           
  2950                           ;gemsecs.c: 353:   if (TimerDone(TMR_T2)) {
  2951  003FCE  0E02               	movlw	2
  2952  003FD0  6EE6               	movwf	postinc1,c
  2953  003FD2  ECF0  F02F         	call	_TimerDone	;wreg free
  2954  003FD6  503D               	movf	btemp,w,c
  2955  003FD8  B4D8               	btfsc	status,2,c
  2956  003FDA  D01C               	goto	l8839
  2957                           
  2958                           ;gemsecs.c: 354:    V.timer_error++;
  2959  003FDC  0100               	movlb	0	; () banked
  2960  003FDE  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  2961  003FE0  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  2962                           
  2963                           ; BSR set to: 0
  2964                           ;gemsecs.c: 355:    if (!retry--) {
  2965  003FE2  062D               	decf	t_protocol@retry,f,c
  2966  003FE4  282D               	incf	t_protocol@retry,w,c
  2967  003FE6  A4D8               	btfss	status,2,c
  2968  003FE8  D00C               	goto	l8837
  2969                           
  2970                           ; BSR set to: 0
  2971                           ;gemsecs.c: 356:     V.error = LINK_ERROR_T2;
  2972  003FEA  0E0C               	movlw	12
  2973  003FEC  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  2974                           
  2975                           ;gemsecs.c: 357:     V.failed_send = 1;
  2976  003FEE  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  2977  003FF0  0B87               	andlw	-121
  2978  003FF2  0908               	iorlw	8
  2979  003FF4  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  2980                           
  2981                           ; BSR set to: 0
  2982                           ;gemsecs.c: 358:     *t_link = LINK_STATE_NAK;
  2983                           ;stkvar	_t_link @ sp[(-1)+-1]
  2984  003FF6  0EFE               	movlw	-2
  2985  003FF8  50E3               	movf	plusw1,w,c
  2986  003FFA  6ED9               	movwf	fsr2l,c
  2987  003FFC  6ADA               	clrf	fsr2h,c
  2988  003FFE  0E05               	movlw	5
  2989  004000  D0E0               	goto	L5
  2990  004002                     l8837:
  2991                           
  2992                           ; BSR set to: 0
  2993                           ;gemsecs.c: 360:     StartTimer(TMR_T2, 2000);
  2994  004002  0ED0               	movlw	208
  2995  004004  6EE6               	movwf	postinc1,c
  2996  004006  0E07               	movlw	7
  2997  004008  6EE6               	movwf	postinc1,c
  2998  00400A  0E02               	movlw	2
  2999  00400C  6EE6               	movwf	postinc1,c
  3000  00400E  EC4D  F02E         	call	_StartTimer	;wreg free
  3001  004012  D0FA               	goto	l8919
  3002  004014                     l8839:
  3003                           
  3004                           ;gemsecs.c: 363:    if (UART1_is_rx_ready()) {
  3005  004014  ECCD  F032         	call	_UART1_is_rx_ready	;wreg free
  3006  004018  503D               	movf	btemp,w,c
  3007  00401A  B4D8               	btfsc	status,2,c
  3008  00401C  D0F5               	goto	l8919
  3009                           
  3010                           ;gemsecs.c: 364:     rxData = UART1_Read();
  3011  00401E  ECEA  F02E         	call	_UART1_Read	;wreg free
  3012                           
  3013                           ;stkvar	_rxData @ sp[(-1)+0]
  3014  004022  0EFF               	movlw	-1
  3015  004024  0060  F0F7  FFE3   	movff	btemp,plusw1
  3016                           
  3017                           ; BSR set to: 57
  3018                           ;gemsecs.c: 365:     if (rxData == 0x04) {
  3019                           ;stkvar	_rxData @ sp[(-1)+0]
  3020  00402A  0EFF               	movlw	-1
  3021  00402C  006F FF8C  F03D    	movff	plusw1,btemp
  3022  004032  0E04               	movlw	4
  3023  004034  183D               	xorwf	btemp,w,c
  3024  004036  A4D8               	btfss	status,2,c
  3025  004038  D00E               	goto	l8849
  3026                           
  3027                           ; BSR set to: 57
  3028                           ;gemsecs.c: 366:      StartTimer(TMR_T3, 5000);
  3029  00403A  0E88               	movlw	136
  3030  00403C  6EE6               	movwf	postinc1,c
  3031  00403E  0E13               	movlw	19
  3032  004040  6EE6               	movwf	postinc1,c
  3033  004042  0E03               	movlw	3
  3034  004044  6EE6               	movwf	postinc1,c
  3035  004046  EC4D  F02E         	call	_StartTimer	;wreg free
  3036                           
  3037                           ;gemsecs.c: 367:      *t_link = LINK_STATE_EOT;
  3038                           ;stkvar	_t_link @ sp[(-1)+-1]
  3039  00404A  0EFE               	movlw	-2
  3040  00404C  50E3               	movf	plusw1,w,c
  3041  00404E  6ED9               	movwf	fsr2l,c
  3042  004050  6ADA               	clrf	fsr2h,c
  3043  004052  0E02               	movlw	2
  3044  004054  6EDF               	movwf	indf2,c
  3045  004056                     l8849:
  3046                           
  3047                           ;gemsecs.c: 369:     if (rxData == 0x05) {
  3048                           ;stkvar	_rxData @ sp[(-1)+0]
  3049  004056  0EFF               	movlw	-1
  3050  004058  006F FF8C  F03D    	movff	plusw1,btemp
  3051  00405E  0E05               	movlw	5
  3052  004060  183D               	xorwf	btemp,w,c
  3053  004062  A4D8               	btfss	status,2,c
  3054  004064  D0D1               	goto	l8919
  3055                           
  3056                           ;gemsecs.c: 370:      UART1_put_buffer(0x04);
  3057  004066  0E04               	movlw	4
  3058  004068  6EE6               	movwf	postinc1,c
  3059  00406A  ECC7  F02F         	call	_UART1_put_buffer	;wreg free
  3060  00406E                     l8853:
  3061                           
  3062                           ;gemsecs.c: 371:      *t_link = LINK_STATE_DONE;
  3063                           ;stkvar	_t_link @ sp[(-1)+-1]
  3064  00406E  0EFE               	movlw	-2
  3065  004070  50E3               	movf	plusw1,w,c
  3066  004072  6ED9               	movwf	fsr2l,c
  3067  004074  6ADA               	clrf	fsr2h,c
  3068  004076  0E04               	movlw	4
  3069  004078  D0A4               	goto	L5
  3070  00407A                     l8855:
  3071                           
  3072                           ;gemsecs.c: 377:   if (!requeue)
  3073  00407A  502C               	movf	t_protocol@requeue,w,c
  3074  00407C  A4D8               	btfss	status,2,c
  3075  00407E  D010               	goto	l8859
  3076                           
  3077                           ;gemsecs.c: 378:    block = secs_II_message(V.stream, V.function);
  3078  004080  0100               	movlb	0	; () banked
  3079  004082  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  3080  004084  6EE6               	movwf	postinc1,c
  3081  004086  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  3082  004088  6EE6               	movwf	postinc1,c
  3083  00408A  EC42  F022         	call	_secs_II_message	;wreg free
  3084  00408E  EE20  F0DB         	lfsr	2,t_protocol@block
  3085  004092  0E06               	movlw	6
  3086  004094                     u5531:
  3087  004094  52E5               	movf	postdec1,f,c
  3088  004096  006F FF9F FFDB     	movff	indf1,plusw2
  3089  00409C  06E8               	decf	wreg,f,c
  3090  00409E  E2FA               	bc	u5531
  3091  0040A0                     l8859:
  3092                           
  3093                           ;gemsecs.c: 380:   if (V.abort == LINK_ERROR_ABORT) {
  3094  0040A0  0E11               	movlw	17
  3095  0040A2  0100               	movlb	0	; () banked
  3096  0040A4  19B1               	xorwf	(_V+81)& (0+255),w,b	;volatile
  3097  0040A6  A4D8               	btfss	status,2,c
  3098  0040A8  D019               	goto	l8867
  3099                           
  3100                           ; BSR set to: 0
  3101                           ;gemsecs.c: 381:    secs_send((uint8_t*) block.header, block.length, 0, 1);
  3102  0040AA  0E01               	movlw	1
  3103  0040AC  6EE6               	movwf	postinc1,c
  3104  0040AE  0E00               	movlw	0
  3105  0040B0  6EE6               	movwf	postinc1,c
  3106  0040B2  51DD               	movf	(t_protocol@block+2)& (0+255),w,b
  3107  0040B4  6EE6               	movwf	postinc1,c
  3108  0040B6  0060  F36F  FFE6   	movff	t_protocol@block,postinc1
  3109  0040BC  0060  F373  FFE6   	movff	t_protocol@block+1,postinc1
  3110  0040C2  EC0D  F021         	call	_secs_send	;wreg free
  3111                           
  3112                           ;gemsecs.c: 382:    V.failed_send = 2;
  3113  0040C6  0100               	movlb	0	; () banked
  3114  0040C8  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3115  0040CA  0B87               	andlw	-121
  3116  0040CC  0910               	iorlw	16
  3117  0040CE  6FBB               	movwf	(_V+91)& (0+255),b	;volatile
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;gemsecs.c: 383:    *t_link = LINK_STATE_ERROR;
  3121                           ;stkvar	_t_link @ sp[(-1)+-1]
  3122  0040D0  0EFE               	movlw	-2
  3123  0040D2  50E3               	movf	plusw1,w,c
  3124  0040D4  6ED9               	movwf	fsr2l,c
  3125  0040D6  6ADA               	clrf	fsr2h,c
  3126  0040D8  0E06               	movlw	6
  3127  0040DA  D073               	goto	L5
  3128  0040DC                     l8867:
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;gemsecs.c: 385:    if (!requeue) {
  3132  0040DC  502C               	movf	t_protocol@requeue,w,c
  3133  0040DE  A4D8               	btfss	status,2,c
  3134  0040E0  D014               	goto	l1690
  3135                           
  3136                           ; BSR set to: 0
  3137                           ;gemsecs.c: 386:     secs_send((uint8_t*) block.header, block.length, 0, 1);
  3138  0040E2  0E01               	movlw	1
  3139  0040E4  6EE6               	movwf	postinc1,c
  3140  0040E6  0E00               	movlw	0
  3141  0040E8  6EE6               	movwf	postinc1,c
  3142  0040EA  51DD               	movf	(t_protocol@block+2)& (0+255),w,b
  3143  0040EC  6EE6               	movwf	postinc1,c
  3144  0040EE  0060  F36F  FFE6   	movff	t_protocol@block,postinc1
  3145  0040F4  0060  F373  FFE6   	movff	t_protocol@block+1,postinc1
  3146  0040FA  EC0D  F021         	call	_secs_send	;wreg free
  3147                           
  3148                           ;gemsecs.c: 387:     if (V.queue)
  3149  0040FE  0100               	movlb	0	; () banked
  3150  004100  A9BC               	btfss	(_V+92)& (0+255),4,b	;volatile
  3151  004102  D013               	goto	l8877
  3152                           
  3153                           ; BSR set to: 0
  3154                           ;gemsecs.c: 388:      requeue = 1;
  3155  004104  0E01               	movlw	1
  3156  004106  6E2C               	movwf	t_protocol@requeue,c
  3157  004108  D010               	goto	l8877
  3158  00410A                     l1690:
  3159                           
  3160                           ; BSR set to: 0
  3161                           ;gemsecs.c: 390:     requeue = 0;
  3162  00410A  6A2C               	clrf	t_protocol@requeue,c
  3163                           
  3164                           ;gemsecs.c: 391:     V.queue = 0;
  3165  00410C  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;gemsecs.c: 392:     secs_send((uint8_t*) block.reply, block.reply_length, 0, 1);
  3169  00410E  0E01               	movlw	1
  3170  004110  6EE6               	movwf	postinc1,c
  3171  004112  0E00               	movlw	0
  3172  004114  6EE6               	movwf	postinc1,c
  3173  004116  51E0               	movf	(t_protocol@block+5)& (0+255),w,b
  3174  004118  6EE6               	movwf	postinc1,c
  3175  00411A  0060  F37B  FFE6   	movff	t_protocol@block+3,postinc1
  3176  004120  0060  F37F  FFE6   	movff	t_protocol@block+4,postinc1
  3177  004126  EC0D  F021         	call	_secs_send	;wreg free
  3178  00412A                     l8877:
  3179                           
  3180                           ;gemsecs.c: 394:    if (V.error == LINK_ERROR_NONE) {
  3181  00412A  0E0A               	movlw	10
  3182  00412C  0100               	movlb	0	; () banked
  3183  00412E  19B0               	xorwf	(_V+80)& (0+255),w,b	;volatile
  3184  004130  A4D8               	btfss	status,2,c
  3185  004132  D006               	goto	l8881
  3186                           
  3187                           ; BSR set to: 0
  3188                           ;gemsecs.c: 395:     *t_link = LINK_STATE_ACK;
  3189                           ;stkvar	_t_link @ sp[(-1)+-1]
  3190  004134  0EFE               	movlw	-2
  3191  004136  50E3               	movf	plusw1,w,c
  3192  004138  6ED9               	movwf	fsr2l,c
  3193  00413A  6ADA               	clrf	fsr2h,c
  3194  00413C  0E03               	movlw	3
  3195  00413E  D041               	goto	L5
  3196  004140                     l8881:
  3197                           
  3198                           ; BSR set to: 0
  3199                           ;gemsecs.c: 397:     V.failed_send = 3;
  3200  004140  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3201  004142  0B87               	andlw	-121
  3202  004144  0918               	iorlw	24
  3203  004146  D7C3               	goto	L6
  3204  004148                     l8885:
  3205                           
  3206                           ;gemsecs.c: 410:   if (TimerDone(TMR_T3)) {
  3207  004148  0E03               	movlw	3
  3208  00414A  6EE6               	movwf	postinc1,c
  3209  00414C  ECF0  F02F         	call	_TimerDone	;wreg free
  3210  004150  503D               	movf	btemp,w,c
  3211  004152  B4D8               	btfsc	status,2,c
  3212  004154  D009               	goto	l8895
  3213                           
  3214                           ;gemsecs.c: 411:    V.timer_error++;
  3215  004156  0100               	movlb	0	; () banked
  3216  004158  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  3217  00415A  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;gemsecs.c: 412:    V.error = LINK_ERROR_T3;
  3221  00415C  0E0D               	movlw	13
  3222  00415E  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3223                           
  3224                           ; BSR set to: 0
  3225                           ;gemsecs.c: 413:    V.failed_send = 4;
  3226  004160  51BB               	movf	(_V+91)& (0+255),w,b	;volatile
  3227  004162  0B87               	andlw	-121
  3228  004164  0920               	iorlw	32
  3229  004166  D746               	goto	L7
  3230  004168                     l8895:
  3231                           
  3232                           ;gemsecs.c: 416:    if (UART1_is_rx_ready()) {
  3233  004168  ECCD  F032         	call	_UART1_is_rx_ready	;wreg free
  3234  00416C  503D               	movf	btemp,w,c
  3235  00416E  B4D8               	btfsc	status,2,c
  3236  004170  D04B               	goto	l8919
  3237                           
  3238                           ;gemsecs.c: 417:     rxData = UART1_Read();
  3239  004172  ECEA  F02E         	call	_UART1_Read	;wreg free
  3240                           
  3241                           ;stkvar	_rxData @ sp[(-1)+0]
  3242  004176  0EFF               	movlw	-1
  3243  004178  0060  F0F7  FFE3   	movff	btemp,plusw1
  3244                           
  3245                           ; BSR set to: 57
  3246                           ;gemsecs.c: 418:     if (rxData == 0x06) {
  3247                           ;stkvar	_rxData @ sp[(-1)+0]
  3248  00417E  0EFF               	movlw	-1
  3249  004180  006F FF8C  F03D    	movff	plusw1,btemp
  3250  004186  0E06               	movlw	6
  3251  004188  183D               	xorwf	btemp,w,c
  3252  00418A  A4D8               	btfss	status,2,c
  3253  00418C  D03D               	goto	l8919
  3254                           
  3255                           ; BSR set to: 57
  3256                           ;gemsecs.c: 419:      V.failed_send = 0;
  3257  00418E  0E87               	movlw	-121
  3258  004190  0100               	movlb	0	; () banked
  3259  004192  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  3260  004194  D76C               	goto	l8853
  3261  004196                     l8905:
  3262                           
  3263                           ;gemsecs.c: 426:   *t_link = LINK_STATE_ERROR;
  3264                           ;stkvar	_t_link @ sp[(-1)+-1]
  3265  004196  0EFE               	movlw	-2
  3266  004198  50E3               	movf	plusw1,w,c
  3267  00419A  6ED9               	movwf	fsr2l,c
  3268  00419C  6ADA               	clrf	fsr2h,c
  3269  00419E  0E06               	movlw	6
  3270  0041A0  6EDF               	movwf	indf2,c
  3271                           
  3272                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3273  0041A2  D002               	goto	l8909
  3274  0041A4                     l8907:
  3275                           
  3276                           ;gemsecs.c: 428:    UART1_Read();
  3277  0041A4  ECEA  F02E         	call	_UART1_Read	;wreg free
  3278  0041A8                     l8909:
  3279                           
  3280                           ;gemsecs.c: 427:   while ((uart1RxCount)) {
  3281  0041A8  5037               	movf	_uart1RxCount,w,c	;volatile
  3282  0041AA  B4D8               	btfsc	status,2,c
  3283  0041AC  D02D               	goto	l8919
  3284  0041AE  D7FA               	goto	l8907
  3285  0041B0                     l8911:
  3286                           
  3287                           ;gemsecs.c: 434:   V.failed_send = 0;
  3288  0041B0  0E87               	movlw	-121
  3289  0041B2  0100               	movlb	0	; () banked
  3290  0041B4  17BB               	andwf	(_V+91)& (0+255),f,b	;volatile
  3291                           
  3292                           ;gemsecs.c: 435:   break;
  3293  0041B6  D028               	goto	l8919
  3294  0041B8                     l8913:
  3295                           
  3296                           ;gemsecs.c: 437:   *t_link = LINK_STATE_IDLE;
  3297                           ;stkvar	_t_link @ sp[(-1)+-1]
  3298  0041B8  0EFE               	movlw	-2
  3299  0041BA  50E3               	movf	plusw1,w,c
  3300  0041BC  6ED9               	movwf	fsr2l,c
  3301  0041BE  6ADA               	clrf	fsr2h,c
  3302  0041C0  0E00               	movlw	0
  3303  0041C2                     L5:
  3304  0041C2  6EDF               	movwf	indf2,c
  3305                           
  3306                           ;gemsecs.c: 439:   break;
  3307  0041C4  D021               	goto	l8919
  3308  0041C6                     l8917:
  3309                           
  3310                           ;stkvar	_t_link @ sp[(-1)+-1]
  3311  0041C6  0EFE               	movlw	-2
  3312  0041C8  50E3               	movf	plusw1,w,c
  3313  0041CA  6ED9               	movwf	fsr2l,c
  3314  0041CC  6ADA               	clrf	fsr2h,c
  3315  0041CE  50DF               	movf	indf2,w,c
  3316  0041D0  6E47               	movwf	btemp+10,c
  3317  0041D2  6A48               	clrf	btemp+11,c
  3318                           
  3319                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3320                           ; Switch size 1, requested type "simple"
  3321                           ; Number of cases is 1, Range of values is 0 to 0
  3322                           ; switch strategies available:
  3323                           ; Name         Instructions Cycles
  3324                           ; simple_byte            4     3 (average)
  3325                           ;	Chosen strategy is simple_byte
  3326  0041D4  5048               	movf	btemp+11,w,c
  3327  0041D6  0A00               	xorlw	0	; case 0
  3328  0041D8  A4D8               	btfss	status,2,c
  3329  0041DA  D7EE               	goto	l8913
  3330                           
  3331                           ; Switch size 1, requested type "simple"
  3332                           ; Number of cases is 7, Range of values is 0 to 6
  3333                           ; switch strategies available:
  3334                           ; Name         Instructions Cycles
  3335                           ; simple_byte           22    12 (average)
  3336                           ;	Chosen strategy is simple_byte
  3337  0041DC  5047               	movf	btemp+10,w,c
  3338  0041DE  0A00               	xorlw	0	; case 0
  3339  0041E0  B4D8               	btfsc	status,2,c
  3340  0041E2  D6DE               	goto	l8819
  3341  0041E4  0A01               	xorlw	1	; case 1
  3342  0041E6  B4D8               	btfsc	status,2,c
  3343  0041E8  D6F2               	goto	l8827
  3344  0041EA  0A03               	xorlw	3	; case 2
  3345  0041EC  B4D8               	btfsc	status,2,c
  3346  0041EE  D745               	goto	l8855
  3347  0041F0  0A01               	xorlw	1	; case 3
  3348  0041F2  B4D8               	btfsc	status,2,c
  3349  0041F4  D7A9               	goto	l8885
  3350  0041F6  0A07               	xorlw	7	; case 4
  3351  0041F8  B4D8               	btfsc	status,2,c
  3352  0041FA  D7DA               	goto	l8911
  3353  0041FC  0A01               	xorlw	1	; case 5
  3354  0041FE  B4D8               	btfsc	status,2,c
  3355  004200  D7CA               	goto	l8905
  3356  004202  0A03               	xorlw	3	; case 6
  3357  004204  A4D8               	btfss	status,2,c
  3358  004206  D7D8               	goto	l8913
  3359  004208                     l8919:
  3360                           
  3361                           ;gemsecs.c: 442:  return *t_link;
  3362                           ;stkvar	_t_link @ sp[(-1)+-1]
  3363  004208  0EFE               	movlw	-2
  3364  00420A  50E3               	movf	plusw1,w,c
  3365  00420C  6ED9               	movwf	fsr2l,c
  3366  00420E  6ADA               	clrf	fsr2h,c
  3367  004210  50DF               	movf	indf2,w,c
  3368  004212  6E3D               	movwf	btemp,c
  3369                           
  3370                           ; _t_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  3371  004214  52E5               	movf	postdec1,f,c
  3372  004216  52E5               	movf	postdec1,f,c
  3373  004218  0012               	return		;funcret
  3374  00421A                     __end_of_t_protocol:
  3375                           	opt callstack 0
  3376                           
  3377 ;; *************** function _secs_send *****************
  3378 ;; Defined at:
  3379 ;;		line 446 in file "gemsecs.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  byte_block      2  [STACK] PTR unsigned char 
  3382 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3383 ;;		 -> H13(32), H12(30), H10(91), 
  3384 ;;  length          1  [STACK] unsigned char 
  3385 ;;  fake            1  [STACK] _Bool 
  3386 ;;  s_uart          1  [STACK] unsigned char 
  3387 ;; Auto vars:     Size  Location     Type
  3388 ;;  k               2  [STACK] PTR unsigned char 
  3389 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3390 ;;		 -> H13(32), H12(30), H10(91), 
  3391 ;;  checksum        2  [STACK] unsigned short 
  3392 ;;  i               1  [STACK] unsigned char 
  3393 ;; Return value:  Size  Location     Type
  3394 ;;                  1  [STACK] _Bool 
  3395 ;; Registers used:
  3396 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+6, btemp+7, btemp+8, btemp
      ++9, btemp+10, btemp+11
  3397 ;; Tracked objects:
  3398 ;;		On entry : 3F/0
  3399 ;;		On exit  : 0/0
  3400 ;;		Unchanged: 0/0
  3401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3406 ;;Total ram usage:        0 bytes
  3407 ;; Hardware stack levels used:    1
  3408 ;; Hardware stack levels required when called:    4
  3409 ;; This function calls:
  3410 ;;		_UART1_Write
  3411 ;;		_UART1_is_tx_ready
  3412 ;;		_UART1_put_buffer
  3413 ;;		_UART2_Write
  3414 ;;		_UART2_is_tx_ready
  3415 ;;		_UART2_put_buffer
  3416 ;;		_block_checksum
  3417 ;; This function is called by:
  3418 ;;		_t_protocol
  3419 ;; This function uses a reentrant model
  3420 ;;
  3421                           
  3422                           	psect	text2
  3423  00421A                     __ptext2:
  3424                           	opt callstack 0
  3425  00421A                     _secs_send:
  3426                           	opt callstack 0
  3427                           
  3428                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3429  00421A  0E05               	movlw	5
  3430  00421C  26E1               	addwf	fsr1l,f,c
  3431  00421E  0E00               	movlw	0
  3432  004220  22E2               	addwfc	fsr1h,f,c
  3433                           
  3434                           ;gemsecs.c: 446: _Bool secs_send(uint8_t *byte_block, uint8_t length, _Bool fake, uint8_
      +                          t s_uart);gemsecs.c: 447: {;gemsecs.c: 448:  uint8_t i, *k;;gemsecs.c: 449:  uint16_t ch
      +                          ecksum;;gemsecs.c: 451:  k = (uint8_t *) byte_block;
  3435                           ;stkvar	_byte_block @ sp[(-5)+-2]
  3436                           
  3437                           ;incstack = 0
  3438  004222  0EF9               	movlw	-7
  3439  004224  006F FF8C  F047    	movff	plusw1,btemp+10
  3440  00422A  0EFA               	movlw	-6
  3441  00422C  006F FF8C  F048    	movff	plusw1,btemp+11
  3442                           
  3443                           ;stkvar	_k @ sp[(-5)+0]
  3444  004232  0EFC               	movlw	-4
  3445  004234  0060  F123  FFE3   	movff	btemp+11,plusw1
  3446  00423A  0EFB               	movlw	-5
  3447  00423C  0060  F11F  FFE3   	movff	btemp+10,plusw1
  3448                           
  3449                           ;gemsecs.c: 453:  ++V.ticks;
  3450  004242  0E01               	movlw	1
  3451  004244  0100               	movlb	0	; () banked
  3452  004246  27A6               	addwf	(_V+70)& (0+255),f,b	;volatile
  3453  004248  0E00               	movlw	0
  3454  00424A  23A7               	addwfc	(_V+71)& (0+255),f,b	;volatile
  3455  00424C  23A8               	addwfc	(_V+72)& (0+255),f,b	;volatile
  3456  00424E  23A9               	addwfc	(_V+73)& (0+255),f,b	;volatile
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;gemsecs.c: 454:  V.error = LINK_ERROR_NONE;
  3460  004250  0E0A               	movlw	10
  3461  004252  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;gemsecs.c: 455:  if ((length - 3) != k[length - 1]) {
  3465                           ;stkvar	_length @ sp[(-5)+-3]
  3466  004254  0EF8               	movlw	-8
  3467  004256  50E3               	movf	plusw1,w,c
  3468  004258  6E47               	movwf	btemp+10,c
  3469  00425A  6A48               	clrf	btemp+11,c
  3470                           
  3471                           ;stkvar	_k @ sp[(-5)+0]
  3472  00425C  0EFB               	movlw	-5
  3473  00425E  50E3               	movf	plusw1,w,c
  3474  004260  2647               	addwf	btemp+10,f,c
  3475  004262  0EFC               	movlw	-4
  3476  004264  50E3               	movf	plusw1,w,c
  3477  004266  2248               	addwfc	btemp+11,f,c
  3478  004268  0EFF               	movlw	255
  3479  00426A  2447               	addwf	btemp+10,w,c
  3480  00426C  6ED9               	movwf	fsr2l,c
  3481  00426E  0EFF               	movlw	255
  3482  004270  2048               	addwfc	btemp+11,w,c
  3483  004272  6EDA               	movwf	fsr2h,c
  3484  004274  50DF               	movf	indf2,w,c
  3485  004276  6E47               	movwf	btemp+10,c
  3486  004278  6A48               	clrf	btemp+11,c
  3487  00427A  0EFD               	movlw	253
  3488  00427C  6E45               	movwf	btemp+8,c
  3489  00427E  0EFF               	movlw	255
  3490  004280  6E46               	movwf	btemp+9,c
  3491                           
  3492                           ;stkvar	_length @ sp[(-5)+-3]
  3493  004282  0EF8               	movlw	-8
  3494  004284  50E3               	movf	plusw1,w,c
  3495  004286  6E43               	movwf	btemp+6,c
  3496  004288  6A44               	clrf	btemp+7,c
  3497  00428A  5045               	movf	btemp+8,w,c
  3498  00428C  2643               	addwf	btemp+6,f,c
  3499  00428E  5046               	movf	btemp+9,w,c
  3500  004290  2244               	addwfc	btemp+7,f,c
  3501  004292  5047               	movf	btemp+10,w,c
  3502  004294  1843               	xorwf	btemp+6,w,c
  3503  004296  E104               	bnz	u5180
  3504  004298  5048               	movf	btemp+11,w,c
  3505  00429A  1844               	xorwf	btemp+7,w,c
  3506  00429C  B4D8               	btfsc	status,2,c
  3507  00429E  D003               	goto	l8501
  3508  0042A0                     u5180:
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;gemsecs.c: 456:   V.error = LINK_ERROR_SEND;
  3512  0042A0  0E12               	movlw	18
  3513  0042A2  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  3514  0042A4  D0EA               	goto	l1711
  3515  0042A6                     l8501:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;gemsecs.c: 465:  checksum = block_checksum(&k[2], length - 3);
  3519  0042A6  0EFD               	movlw	253
  3520  0042A8  6E47               	movwf	btemp+10,c
  3521  0042AA  0EFF               	movlw	255
  3522  0042AC  6E48               	movwf	btemp+11,c
  3523                           
  3524                           ;stkvar	_length @ sp[(-5)+-3]
  3525  0042AE  0EF8               	movlw	-8
  3526  0042B0  50E3               	movf	plusw1,w,c
  3527  0042B2  6E45               	movwf	btemp+8,c
  3528  0042B4  6A46               	clrf	btemp+9,c
  3529  0042B6  5047               	movf	btemp+10,w,c
  3530  0042B8  2645               	addwf	btemp+8,f,c
  3531  0042BA  5048               	movf	btemp+11,w,c
  3532  0042BC  2246               	addwfc	btemp+9,f,c
  3533  0042BE  0060  F117  FFE6   	movff	btemp+8,postinc1
  3534  0042C4  0060  F11B  FFE6   	movff	btemp+9,postinc1
  3535                           
  3536                           ;stkvar	_k @ sp[(-7)+0]
  3537  0042CA  0EF9               	movlw	-7
  3538  0042CC  50E3               	movf	plusw1,w,c
  3539  0042CE  0F02               	addlw	2
  3540  0042D0  6E47               	movwf	btemp+10,c
  3541  0042D2  0EFA               	movlw	-6
  3542  0042D4  006F FF8C  F048    	movff	plusw1,btemp+11
  3543  0042DA  0E00               	movlw	0
  3544  0042DC  2248               	addwfc	btemp+11,f,c
  3545  0042DE  0060  F11F  FFE6   	movff	btemp+10,postinc1
  3546  0042E4  0060  F123  FFE6   	movff	btemp+11,postinc1
  3547  0042EA  ECDA  F027         	call	_block_checksum	;wreg free
  3548                           
  3549                           ;stkvar	_checksum @ sp[(-5)+2]
  3550  0042EE  0EFD               	movlw	-3
  3551  0042F0  0060  F0F7  FFE3   	movff	btemp,plusw1
  3552  0042F6  0EFE               	movlw	-2
  3553  0042F8  0060  F0FB  FFE3   	movff	btemp+1,plusw1
  3554                           
  3555                           ;gemsecs.c: 466:  k[0] = checksum & 0xff;
  3556                           ;stkvar	_checksum @ sp[(-5)+2]
  3557                           ;stkvar	_k @ sp[(-5)+0]
  3558  0042FE  0EFB               	movlw	-5
  3559  004300  006F FF8F FFD9     	movff	plusw1,fsr2l
  3560  004306  0EFC               	movlw	-4
  3561  004308  006F FF8F FFDA     	movff	plusw1,fsr2h
  3562  00430E  0EFD               	movlw	-3
  3563  004310  006F FF8F FFDF     	movff	plusw1,indf2
  3564                           
  3565                           ;gemsecs.c: 467:  k[1] = (checksum >> 8)&0xff;
  3566                           ;stkvar	_checksum @ sp[(-5)+2]
  3567  004316  0EFE               	movlw	254
  3568  004318  24E1               	addwf	fsr1l,w,c
  3569  00431A  6ED9               	movwf	fsr2l,c
  3570  00431C  0EFF               	movlw	255
  3571  00431E  20E2               	addwfc	fsr1h,w,c
  3572  004320  6EDA               	movwf	fsr2h,c
  3573                           
  3574                           ;stkvar	_k @ sp[(-5)+0]
  3575  004322  0EFB               	movlw	-5
  3576  004324  006F FF8C  F047    	movff	plusw1,btemp+10
  3577  00432A  0EFC               	movlw	-4
  3578  00432C  006F FF8C  F048    	movff	plusw1,btemp+11
  3579  004332  0E01               	movlw	1
  3580  004334  2447               	addwf	btemp+10,w,c
  3581  004336  6EE9               	movwf	fsr0l,c
  3582  004338  0E00               	movlw	0
  3583  00433A  2048               	addwfc	btemp+11,w,c
  3584  00433C  6EEA               	movwf	fsr0h,c
  3585  00433E  006F FF7F FFEF     	movff	indf2,indf0
  3586                           
  3587                           ;gemsecs.c: 468:  V.t_checksum = checksum;
  3588                           ;stkvar	_checksum @ sp[(-5)+2]
  3589  004344  0EFD               	movlw	-3
  3590  004346  006F FF8C  F0B5    	movff	plusw1,_V+85	;volatile
  3591  00434C  0EFE               	movlw	-2
  3592  00434E  006F FF8C  F0B6    	movff	plusw1,_V+86	;volatile
  3593                           
  3594                           ;gemsecs.c: 470:  switch (s_uart) {
  3595  004354  D082               	goto	l8547
  3596  004356                     l8509:
  3597  004356  ECC1  F032         	call	_UART2_is_tx_ready	;wreg free
  3598  00435A  0E3F               	movlw	63
  3599  00435C  643D               	cpfsgt	btemp,c
  3600  00435E  D7FB               	goto	l8509
  3601                           
  3602                           ;gemsecs.c: 473:   for (i = length; i > 0; i--) {
  3603                           ;stkvar	_length @ sp[(-5)+-3]
  3604                           ;stkvar	_i @ sp[(-5)+4]
  3605  004360  0EF8               	movlw	-8
  3606  004362  006F FF8C  F03D    	movff	plusw1,btemp
  3607  004368  0EFF               	movlw	-1
  3608  00436A  0060  F0F7  FFE3   	movff	btemp,plusw1
  3609  004370                     l8513:
  3610                           
  3611                           ;stkvar	_i @ sp[(-5)+4]
  3612  004370  0EFF               	movlw	-1
  3613  004372  50E3               	movf	plusw1,w,c
  3614  004374  B4D8               	btfsc	status,2,c
  3615  004376  D081               	goto	l1711
  3616                           
  3617                           ;gemsecs.c: 474:    if (fake) {
  3618                           ;stkvar	_fake @ sp[(-5)+-4]
  3619  004378  0EF7               	movlw	-9
  3620  00437A  50E3               	movf	plusw1,w,c
  3621  00437C  B4D8               	btfsc	status,2,c
  3622  00437E  D015               	goto	l8521
  3623                           
  3624                           ;gemsecs.c: 475:     UART2_put_buffer(k[i - 1]);
  3625                           ;stkvar	_i @ sp[(-5)+4]
  3626  004380  0EFF               	movlw	-1
  3627  004382  50E3               	movf	plusw1,w,c
  3628  004384  6E47               	movwf	btemp+10,c
  3629  004386  6A48               	clrf	btemp+11,c
  3630                           
  3631                           ;stkvar	_k @ sp[(-5)+0]
  3632  004388  0EFB               	movlw	-5
  3633  00438A  50E3               	movf	plusw1,w,c
  3634  00438C  2647               	addwf	btemp+10,f,c
  3635  00438E  0EFC               	movlw	-4
  3636  004390  50E3               	movf	plusw1,w,c
  3637  004392  2248               	addwfc	btemp+11,f,c
  3638  004394  0EFF               	movlw	255
  3639  004396  2447               	addwf	btemp+10,w,c
  3640  004398  6ED9               	movwf	fsr2l,c
  3641  00439A  0EFF               	movlw	255
  3642  00439C  2048               	addwfc	btemp+11,w,c
  3643  00439E  6EDA               	movwf	fsr2h,c
  3644  0043A0  50DF               	movf	indf2,w,c
  3645  0043A2  6EE6               	movwf	postinc1,c
  3646  0043A4  ECB2  F02F         	call	_UART2_put_buffer	;wreg free
  3647                           
  3648                           ;gemsecs.c: 476:    } else {
  3649  0043A8  D014               	goto	l8523
  3650  0043AA                     l8521:
  3651                           
  3652                           ;gemsecs.c: 478:     UART2_Write(k[i - 1]);
  3653                           ;stkvar	_i @ sp[(-5)+4]
  3654  0043AA  0EFF               	movlw	-1
  3655  0043AC  50E3               	movf	plusw1,w,c
  3656  0043AE  6E47               	movwf	btemp+10,c
  3657  0043B0  6A48               	clrf	btemp+11,c
  3658                           
  3659                           ;stkvar	_k @ sp[(-5)+0]
  3660  0043B2  0EFB               	movlw	-5
  3661  0043B4  50E3               	movf	plusw1,w,c
  3662  0043B6  2647               	addwf	btemp+10,f,c
  3663  0043B8  0EFC               	movlw	-4
  3664  0043BA  50E3               	movf	plusw1,w,c
  3665  0043BC  2248               	addwfc	btemp+11,f,c
  3666  0043BE  0EFF               	movlw	255
  3667  0043C0  2447               	addwf	btemp+10,w,c
  3668  0043C2  6ED9               	movwf	fsr2l,c
  3669  0043C4  0EFF               	movlw	255
  3670  0043C6  2048               	addwfc	btemp+11,w,c
  3671  0043C8  6EDA               	movwf	fsr2h,c
  3672  0043CA  50DF               	movf	indf2,w,c
  3673  0043CC  6EE6               	movwf	postinc1,c
  3674  0043CE  EC8D  F02E         	call	_UART2_Write	;wreg free
  3675  0043D2                     l8523:
  3676                           
  3677                           ; BSR set to: 57
  3678                           ;gemsecs.c: 480:   }
  3679                           ;stkvar	_i @ sp[(-5)+4]
  3680  0043D2  0EFF               	movlw	-1
  3681  0043D4  06E3               	decf	plusw1,f,c
  3682  0043D6  D7CC               	goto	l8513
  3683  0043D8                     l8527:
  3684  0043D8  ECC5  F032         	call	_UART1_is_tx_ready	;wreg free
  3685  0043DC  0E3F               	movlw	63
  3686  0043DE  643D               	cpfsgt	btemp,c
  3687  0043E0  D7FB               	goto	l8527
  3688                           
  3689                           ;gemsecs.c: 485:   for (i = length; i > 0; i--) {
  3690                           ;stkvar	_length @ sp[(-5)+-3]
  3691                           ;stkvar	_i @ sp[(-5)+4]
  3692  0043E2  0EF8               	movlw	-8
  3693  0043E4  006F FF8C  F03D    	movff	plusw1,btemp
  3694  0043EA  0EFF               	movlw	-1
  3695  0043EC  0060  F0F7  FFE3   	movff	btemp,plusw1
  3696  0043F2                     l8531:
  3697                           
  3698                           ;stkvar	_i @ sp[(-5)+4]
  3699  0043F2  0EFF               	movlw	-1
  3700  0043F4  50E3               	movf	plusw1,w,c
  3701  0043F6  B4D8               	btfsc	status,2,c
  3702  0043F8  D040               	goto	l1711
  3703                           
  3704                           ;gemsecs.c: 486:    if (fake) {
  3705                           ;stkvar	_fake @ sp[(-5)+-4]
  3706  0043FA  0EF7               	movlw	-9
  3707  0043FC  50E3               	movf	plusw1,w,c
  3708  0043FE  B4D8               	btfsc	status,2,c
  3709  004400  D015               	goto	l8539
  3710                           
  3711                           ;gemsecs.c: 487:     UART1_put_buffer(k[i - 1]);
  3712                           ;stkvar	_i @ sp[(-5)+4]
  3713  004402  0EFF               	movlw	-1
  3714  004404  50E3               	movf	plusw1,w,c
  3715  004406  6E47               	movwf	btemp+10,c
  3716  004408  6A48               	clrf	btemp+11,c
  3717                           
  3718                           ;stkvar	_k @ sp[(-5)+0]
  3719  00440A  0EFB               	movlw	-5
  3720  00440C  50E3               	movf	plusw1,w,c
  3721  00440E  2647               	addwf	btemp+10,f,c
  3722  004410  0EFC               	movlw	-4
  3723  004412  50E3               	movf	plusw1,w,c
  3724  004414  2248               	addwfc	btemp+11,f,c
  3725  004416  0EFF               	movlw	255
  3726  004418  2447               	addwf	btemp+10,w,c
  3727  00441A  6ED9               	movwf	fsr2l,c
  3728  00441C  0EFF               	movlw	255
  3729  00441E  2048               	addwfc	btemp+11,w,c
  3730  004420  6EDA               	movwf	fsr2h,c
  3731  004422  50DF               	movf	indf2,w,c
  3732  004424  6EE6               	movwf	postinc1,c
  3733  004426  ECC7  F02F         	call	_UART1_put_buffer	;wreg free
  3734                           
  3735                           ;gemsecs.c: 488:    } else {
  3736  00442A  D014               	goto	l8541
  3737  00442C                     l8539:
  3738                           
  3739                           ;gemsecs.c: 490:     UART1_Write(k[i - 1]);
  3740                           ;stkvar	_i @ sp[(-5)+4]
  3741  00442C  0EFF               	movlw	-1
  3742  00442E  50E3               	movf	plusw1,w,c
  3743  004430  6E47               	movwf	btemp+10,c
  3744  004432  6A48               	clrf	btemp+11,c
  3745                           
  3746                           ;stkvar	_k @ sp[(-5)+0]
  3747  004434  0EFB               	movlw	-5
  3748  004436  50E3               	movf	plusw1,w,c
  3749  004438  2647               	addwf	btemp+10,f,c
  3750  00443A  0EFC               	movlw	-4
  3751  00443C  50E3               	movf	plusw1,w,c
  3752  00443E  2248               	addwfc	btemp+11,f,c
  3753  004440  0EFF               	movlw	255
  3754  004442  2447               	addwf	btemp+10,w,c
  3755  004444  6ED9               	movwf	fsr2l,c
  3756  004446  0EFF               	movlw	255
  3757  004448  2048               	addwfc	btemp+11,w,c
  3758  00444A  6EDA               	movwf	fsr2h,c
  3759  00444C  50DF               	movf	indf2,w,c
  3760  00444E  6EE6               	movwf	postinc1,c
  3761  004450  ECAC  F02E         	call	_UART1_Write	;wreg free
  3762  004454                     l8541:
  3763                           
  3764                           ; BSR set to: 57
  3765                           ;gemsecs.c: 492:   }
  3766                           ;stkvar	_i @ sp[(-5)+4]
  3767  004454  0EFF               	movlw	-1
  3768  004456  06E3               	decf	plusw1,f,c
  3769  004458  D7CC               	goto	l8531
  3770  00445A                     l8547:
  3771                           
  3772                           ;stkvar	_s_uart @ sp[(-5)+-5]
  3773  00445A  0EF6               	movlw	-10
  3774  00445C  50E3               	movf	plusw1,w,c
  3775  00445E  6E47               	movwf	btemp+10,c
  3776  004460  6A48               	clrf	btemp+11,c
  3777                           
  3778                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3779                           ; Switch size 1, requested type "simple"
  3780                           ; Number of cases is 1, Range of values is 0 to 0
  3781                           ; switch strategies available:
  3782                           ; Name         Instructions Cycles
  3783                           ; simple_byte            4     3 (average)
  3784                           ;	Chosen strategy is simple_byte
  3785  004462  5048               	movf	btemp+11,w,c
  3786  004464  0A00               	xorlw	0	; case 0
  3787  004466  A4D8               	btfss	status,2,c
  3788  004468  D7B7               	goto	l8527
  3789                           
  3790                           ; Switch size 1, requested type "simple"
  3791                           ; Number of cases is 2, Range of values is 1 to 2
  3792                           ; switch strategies available:
  3793                           ; Name         Instructions Cycles
  3794                           ; simple_byte            7     4 (average)
  3795                           ;	Chosen strategy is simple_byte
  3796  00446A  5047               	movf	btemp+10,w,c
  3797  00446C  0A01               	xorlw	1	; case 1
  3798  00446E  B4D8               	btfsc	status,2,c
  3799  004470  D7B3               	goto	l8527
  3800  004472  0A03               	xorlw	3	; case 2
  3801  004474  B4D8               	btfsc	status,2,c
  3802  004476  D76F               	goto	l8509
  3803  004478  D7AF               	goto	l8527
  3804  00447A                     l1711:
  3805                           
  3806                           ; _secs_send: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, arg
      +                          size = 5, vargsize = 0
  3807  00447A  0EF6               	movlw	246
  3808  00447C  26E1               	addwf	fsr1l,f,c
  3809  00447E  0EFF               	movlw	255
  3810  004480  22E2               	addwfc	fsr1h,f,c
  3811  004482  0012               	return		;funcret
  3812  004484                     __end_of_secs_send:
  3813                           	opt callstack 0
  3814                           
  3815 ;; *************** function _block_checksum *****************
  3816 ;; Defined at:
  3817 ;;		line 19 in file "gemsecs.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;  byte_block      2  [STACK] PTR unsigned char 
  3820 ;;		 -> H53(56), H24(27), H17(20), H14(17), 
  3821 ;;		 -> H13(32), H12(30), H10(91), 
  3822 ;;  byte_count      2  [STACK] unsigned short 
  3823 ;; Auto vars:     Size  Location     Type
  3824 ;;  i               2  [STACK] unsigned short 
  3825 ;;  sum             2  [STACK] unsigned short 
  3826 ;; Return value:  Size  Location     Type
  3827 ;;                  2  [STACK] unsigned short 
  3828 ;; Registers used:
  3829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  3830 ;; Tracked objects:
  3831 ;;		On entry : 3F/0
  3832 ;;		On exit  : 0/0
  3833 ;;		Unchanged: 0/0
  3834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3839 ;;Total ram usage:        0 bytes
  3840 ;; Hardware stack levels used:    1
  3841 ;; Hardware stack levels required when called:    3
  3842 ;; This function calls:
  3843 ;;		Nothing
  3844 ;; This function is called by:
  3845 ;;		_secs_send
  3846 ;; This function uses a reentrant model
  3847 ;;
  3848                           
  3849                           	psect	text3
  3850  004FB4                     __ptext3:
  3851                           	opt callstack 0
  3852  004FB4                     _block_checksum:
  3853                           	opt callstack 0
  3854                           
  3855                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3856  004FB4  52E6               	movf	postinc1,f,c
  3857  004FB6  52E6               	movf	postinc1,f,c
  3858  004FB8  52E6               	movf	postinc1,f,c
  3859  004FBA  52E6               	movf	postinc1,f,c
  3860                           
  3861                           ;gemsecs.c: 19: uint16_t block_checksum(uint8_t *byte_block, uint16_t byte_count);gemsec
      +                          s.c: 20: {;gemsecs.c: 21:  uint16_t sum = 0, i;
  3862                           ;stkvar	_sum @ sp[(-4)+2]
  3863                           
  3864                           ;incstack = 0
  3865  004FBC  0EFE               	movlw	-2
  3866  004FBE  6AE3               	clrf	plusw1,c
  3867  004FC0  0EFF               	movlw	-1
  3868  004FC2  6AE3               	clrf	plusw1,c
  3869                           
  3870                           ;gemsecs.c: 23:  for (i = 0; i < byte_count; i++) {
  3871                           ;stkvar	_i @ sp[(-4)+0]
  3872  004FC4  0EFC               	movlw	-4
  3873  004FC6  6AE3               	clrf	plusw1,c
  3874  004FC8  0EFD               	movlw	-3
  3875  004FCA  6AE3               	clrf	plusw1,c
  3876  004FCC  D039               	goto	l8395
  3877  004FCE                     l8391:
  3878                           
  3879                           ;gemsecs.c: 24:   sum += byte_block[i];
  3880                           ;stkvar	_i @ sp[(-4)+0]
  3881  004FCE  0EFC               	movlw	-4
  3882  004FD0  006F FF8C  F047    	movff	plusw1,btemp+10
  3883  004FD6  0EFD               	movlw	-3
  3884  004FD8  006F FF8C  F048    	movff	plusw1,btemp+11
  3885                           
  3886                           ;stkvar	_byte_block @ sp[(-4)+-2]
  3887  004FDE  0EFA               	movlw	-6
  3888  004FE0  006F FF8C  F045    	movff	plusw1,btemp+8
  3889  004FE6  0EFB               	movlw	-5
  3890  004FE8  006F FF8C  F046    	movff	plusw1,btemp+9
  3891  004FEE  5047               	movf	btemp+10,w,c
  3892  004FF0  2445               	addwf	btemp+8,w,c
  3893  004FF2  6ED9               	movwf	fsr2l,c
  3894  004FF4  5048               	movf	btemp+11,w,c
  3895  004FF6  2046               	addwfc	btemp+9,w,c
  3896  004FF8  6EDA               	movwf	fsr2h,c
  3897  004FFA  50DF               	movf	indf2,w,c
  3898  004FFC  6E48               	movwf	btemp+11,c
  3899                           
  3900                           ;stkvar	_sum @ sp[(-4)+2]
  3901  004FFE  0EFE               	movlw	-2
  3902  005000  50E3               	movf	plusw1,w,c
  3903  005002  2448               	addwf	btemp+11,w,c
  3904  005004  6E3D               	movwf	btemp,c
  3905  005006  0EFE               	movlw	-2
  3906  005008  0060  F0F7  FFE3   	movff	btemp,plusw1
  3907  00500E  6A3D               	clrf	btemp,c
  3908  005010  0EFF               	movlw	-1
  3909  005012  50E3               	movf	plusw1,w,c
  3910  005014  223D               	addwfc	btemp,f,c
  3911  005016  0EFF               	movlw	-1
  3912  005018  0060  F0F7  FFE3   	movff	btemp,plusw1
  3913                           
  3914                           ;gemsecs.c: 25:  }
  3915                           ;stkvar	_i @ sp[(-4)+0]
  3916  00501E  0EFC               	movlw	-4
  3917  005020  50E3               	movf	plusw1,w,c
  3918  005022  0F01               	addlw	1
  3919  005024  6E3D               	movwf	btemp,c
  3920  005026  0EFC               	movlw	-4
  3921  005028  0060  F0F7  FFE3   	movff	btemp,plusw1
  3922  00502E  6A3D               	clrf	btemp,c
  3923  005030  0EFD               	movlw	-3
  3924  005032  50E3               	movf	plusw1,w,c
  3925  005034  203D               	addwfc	btemp,w,c
  3926  005036  6E3D               	movwf	btemp,c
  3927  005038  0EFD               	movlw	-3
  3928  00503A  0060  F0F7  FFE3   	movff	btemp,plusw1
  3929  005040                     l8395:
  3930                           
  3931                           ;stkvar	_byte_count @ sp[(-4)+-4]
  3932  005040  0EF8               	movlw	-8
  3933  005042  006F FF8C  F047    	movff	plusw1,btemp+10
  3934  005048  0EF9               	movlw	-7
  3935  00504A  006F FF8C  F048    	movff	plusw1,btemp+11
  3936                           
  3937                           ;stkvar	_i @ sp[(-4)+0]
  3938  005050  0EFC               	movlw	-4
  3939  005052  006F FF8C  F045    	movff	plusw1,btemp+8
  3940  005058  0EFD               	movlw	-3
  3941  00505A  006F FF8C  F046    	movff	plusw1,btemp+9
  3942  005060  5047               	movf	btemp+10,w,c
  3943  005062  5C45               	subwf	btemp+8,w,c
  3944  005064  5048               	movf	btemp+11,w,c
  3945  005066  5846               	subwfb	btemp+9,w,c
  3946  005068  A0D8               	btfss	status,0,c
  3947  00506A  D7B1               	goto	l8391
  3948                           
  3949                           ;gemsecs.c: 30:  return sum;
  3950                           ;stkvar	_sum @ sp[(-4)+2]
  3951  00506C  0EFE               	movlw	-2
  3952  00506E  006F FF8C  F03D    	movff	plusw1,btemp
  3953  005074  0EFF               	movlw	-1
  3954  005076  006F FF8C  F03E    	movff	plusw1,btemp+1
  3955                           
  3956                           ; _block_checksum: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4
      +                          , argsize = 4, vargsize = 0
  3957  00507C  0EF8               	movlw	248
  3958  00507E  26E1               	addwf	fsr1l,f,c
  3959  005080  0EFF               	movlw	255
  3960  005082  22E2               	addwfc	fsr1h,f,c
  3961  005084  0012               	return		;funcret
  3962  005086                     __end_of_block_checksum:
  3963                           	opt callstack 0
  3964                           
  3965 ;; *************** function _UART2_put_buffer *****************
  3966 ;; Defined at:
  3967 ;;		line 257 in file "mcc_generated_files/uart2.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  bufData         1  [STACK] unsigned char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1  [STACK] void 
  3974 ;; Registers used:
  3975 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 3F/39
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3985 ;;Total ram usage:        0 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    3
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_secs_send
  3992 ;; This function uses a reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text4
  3996  005F64                     __ptext4:
  3997                           	opt callstack 0
  3998  005F64                     _UART2_put_buffer:
  3999                           	opt callstack 25
  4000                           
  4001                           ;mcc_generated_files/uart2.c: 257: void UART2_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart2.c: 258: {;mcc_generated_files/uart2.c: 259:  PIE6bits.U2RXIE = 0;
  4002                           
  4003                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4004                           ;incstack = 0
  4005  005F64  0139               	movlb	57	; () banked
  4006  005F66  9596               	bcf	150,2,b	;volatile
  4007                           
  4008                           ; BSR set to: 57
  4009                           ;mcc_generated_files/uart2.c: 260:  uart2RxBuffer[uart2RxHead++] = bufData;
  4010                           ;stkvar	_bufData @ sp[(0)+-1]
  4011  005F68  0E00               	movlw	low _uart2RxBuffer
  4012  005F6A  2433               	addwf	_uart2RxHead,w,c	;volatile
  4013  005F6C  6ED9               	movwf	fsr2l,c
  4014  005F6E  6ADA               	clrf	fsr2h,c
  4015  005F70  0E02               	movlw	high _uart2RxBuffer
  4016  005F72  22DA               	addwfc	fsr2h,f,c
  4017  005F74  0EFF               	movlw	-1
  4018  005F76  006F FF8F FFDF     	movff	plusw1,indf2
  4019                           
  4020                           ; BSR set to: 57
  4021  005F7C  2A33               	incf	_uart2RxHead,f,c	;volatile
  4022                           
  4023                           ; BSR set to: 57
  4024                           ;mcc_generated_files/uart2.c: 261:  if (sizeof(uart2RxBuffer) <= uart2RxHead) {
  4025  005F7E  0E3F               	movlw	63
  4026  005F80  6433               	cpfsgt	_uart2RxHead,c
  4027  005F82  D001               	goto	l5827
  4028                           
  4029                           ; BSR set to: 57
  4030                           ;mcc_generated_files/uart2.c: 262:   uart2RxHead = 0;
  4031  005F84  6A33               	clrf	_uart2RxHead,c	;volatile
  4032  005F86                     l5827:
  4033                           
  4034                           ; BSR set to: 57
  4035                           ;mcc_generated_files/uart2.c: 265:  uart2RxCount++;
  4036  005F86  2A31               	incf	_uart2RxCount,f,c	;volatile
  4037                           
  4038                           ; BSR set to: 57
  4039                           ;mcc_generated_files/uart2.c: 266:  PIE6bits.U2RXIE = 1;
  4040  005F88  8596               	bsf	150,2,b	;volatile
  4041                           
  4042                           ; BSR set to: 57
  4043                           ; _UART2_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4044  005F8A  52E5               	movf	postdec1,f,c
  4045  005F8C  0012               	return		;funcret
  4046  005F8E                     __end_of_UART2_put_buffer:
  4047                           	opt callstack 0
  4048                           
  4049 ;; *************** function _UART2_is_tx_ready *****************
  4050 ;; Defined at:
  4051 ;;		line 142 in file "mcc_generated_files/uart2.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;		None
  4054 ;; Auto vars:     Size  Location     Type
  4055 ;;		None
  4056 ;; Return value:  Size  Location     Type
  4057 ;;                  1  [STACK] unsigned char 
  4058 ;; Registers used:
  4059 ;;		btemp
  4060 ;; Tracked objects:
  4061 ;;		On entry : 0/0
  4062 ;;		On exit  : 0/0
  4063 ;;		Unchanged: 0/0
  4064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4069 ;;Total ram usage:        0 bytes
  4070 ;; Hardware stack levels used:    1
  4071 ;; Hardware stack levels required when called:    3
  4072 ;; This function calls:
  4073 ;;		Nothing
  4074 ;; This function is called by:
  4075 ;;		_secs_send
  4076 ;; This function uses a reentrant model
  4077 ;;
  4078                           
  4079                           	psect	text5
  4080  006582                     __ptext5:
  4081                           	opt callstack 0
  4082  006582                     _UART2_is_tx_ready:
  4083                           	opt callstack 25
  4084                           
  4085                           ;mcc_generated_files/uart2.c: 144:     return uart2TxBufferRemaining;
  4086                           
  4087                           ; BSR set to: 57
  4088                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4089                           ;incstack = 0
  4090  006582  0060  F0D0  F03D   	movff	_uart2TxBufferRemaining,btemp	;volatile
  4091                           
  4092                           ; _UART2_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4093  006588  0012               	return		;funcret
  4094  00658A                     __end_of_UART2_is_tx_ready:
  4095                           	opt callstack 0
  4096                           
  4097 ;; *************** function _UART2_Write *****************
  4098 ;; Defined at:
  4099 ;;		line 172 in file "mcc_generated_files/uart2.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  txData          1  [STACK] unsigned char 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1  [STACK] void 
  4106 ;; Registers used:
  4107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 3F/39
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4113 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4116 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4117 ;;Total ram usage:        0 bytes
  4118 ;; Hardware stack levels used:    1
  4119 ;; Hardware stack levels required when called:    3
  4120 ;; This function calls:
  4121 ;;		Nothing
  4122 ;; This function is called by:
  4123 ;;		_secs_send
  4124 ;; This function uses a reentrant model
  4125 ;;
  4126                           
  4127                           	psect	text6
  4128  005D1A                     __ptext6:
  4129                           	opt callstack 0
  4130  005D1A                     _UART2_Write:
  4131                           	opt callstack 25
  4132                           
  4133                           ;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  4134                           
  4135                           ;mcc_generated_files/uart2.c: 172: void UART2_Write(uint8_t txData);mcc_generated_files/
      +                          uart2.c: 173: {;mcc_generated_files/uart2.c: 174:     while(0 == uart2TxBufferRemaining)
  4136                           
  4137                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4138                           ;incstack = 0
  4139  005D1A  5034               	movf	_uart2TxBufferRemaining,w,c	;volatile
  4140  005D1C  B4D8               	btfsc	status,2,c
  4141  005D1E  D7FD               	goto	_UART2_Write
  4142                           
  4143                           ;mcc_generated_files/uart2.c: 178:     if(0 == PIE6bits.U2TXIE)
  4144  005D20  0139               	movlb	57	; () banked
  4145  005D22  B796               	btfsc	150,3,b	;volatile
  4146  005D24  D005               	goto	l699
  4147                           
  4148                           ; BSR set to: 57
  4149                           ;mcc_generated_files/uart2.c: 179:     {;mcc_generated_files/uart2.c: 180:         U2TXB
      +                           = txData;
  4150                           ;stkvar	_txData @ sp[(0)+-1]
  4151  005D26  0EFF               	movlw	-1
  4152  005D28  006F FF8F FDD2     	movff	plusw1,15826	;volatile
  4153                           
  4154                           ;mcc_generated_files/uart2.c: 181:     }
  4155  005D2E  D011               	goto	l5815
  4156  005D30                     l699:
  4157                           
  4158                           ; BSR set to: 57
  4159                           ;mcc_generated_files/uart2.c: 183:     {;mcc_generated_files/uart2.c: 184:         PIE6b
      +                          its.U2TXIE = 0;
  4160  005D30  9796               	bcf	150,3,b	;volatile
  4161                           
  4162                           ; BSR set to: 57
  4163                           ;mcc_generated_files/uart2.c: 185:         uart2TxBuffer[uart2TxHead++] = txData;
  4164                           ;stkvar	_txData @ sp[(0)+-1]
  4165  005D32  0E00               	movlw	low _uart2TxBuffer
  4166  005D34  2436               	addwf	_uart2TxHead,w,c	;volatile
  4167  005D36  6ED9               	movwf	fsr2l,c
  4168  005D38  6ADA               	clrf	fsr2h,c
  4169  005D3A  0E03               	movlw	high _uart2TxBuffer
  4170  005D3C  22DA               	addwfc	fsr2h,f,c
  4171  005D3E  0EFF               	movlw	-1
  4172  005D40  006F FF8F FFDF     	movff	plusw1,indf2
  4173                           
  4174                           ; BSR set to: 57
  4175  005D46  2A36               	incf	_uart2TxHead,f,c	;volatile
  4176                           
  4177                           ; BSR set to: 57
  4178                           ;mcc_generated_files/uart2.c: 186:         if(sizeof(uart2TxBuffer) <= uart2TxHead)
  4179  005D48  0E3F               	movlw	63
  4180  005D4A  6436               	cpfsgt	_uart2TxHead,c
  4181  005D4C  D001               	goto	l5813
  4182                           
  4183                           ; BSR set to: 57
  4184                           ;mcc_generated_files/uart2.c: 187:         {;mcc_generated_files/uart2.c: 188:          
      +                             uart2TxHead = 0;
  4185  005D4E  6A36               	clrf	_uart2TxHead,c	;volatile
  4186  005D50                     l5813:
  4187                           
  4188                           ; BSR set to: 57
  4189                           ;mcc_generated_files/uart2.c: 190:         uart2TxBufferRemaining--;
  4190  005D50  0634               	decf	_uart2TxBufferRemaining,f,c	;volatile
  4191  005D52                     l5815:
  4192                           
  4193                           ; BSR set to: 57
  4194                           ;mcc_generated_files/uart2.c: 192:     PIE6bits.U2TXIE = 1;
  4195  005D52  8796               	bsf	150,3,b	;volatile
  4196                           
  4197                           ; BSR set to: 57
  4198                           ; _UART2_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  4199  005D54  52E5               	movf	postdec1,f,c
  4200  005D56  0012               	return		;funcret
  4201  005D58                     __end_of_UART2_Write:
  4202                           	opt callstack 0
  4203                           
  4204 ;; *************** function _UART1_put_buffer *****************
  4205 ;; Defined at:
  4206 ;;		line 250 in file "mcc_generated_files/uart1.c"
  4207 ;; Parameters:    Size  Location     Type
  4208 ;;  bufData         1  [STACK] unsigned char 
  4209 ;; Auto vars:     Size  Location     Type
  4210 ;;		None
  4211 ;; Return value:  Size  Location     Type
  4212 ;;                  1  [STACK] void 
  4213 ;; Registers used:
  4214 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4215 ;; Tracked objects:
  4216 ;;		On entry : 0/39
  4217 ;;		On exit  : 3F/39
  4218 ;;		Unchanged: 0/0
  4219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4221 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4222 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4223 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4224 ;;Total ram usage:        0 bytes
  4225 ;; Hardware stack levels used:    1
  4226 ;; Hardware stack levels required when called:    3
  4227 ;; This function calls:
  4228 ;;		Nothing
  4229 ;; This function is called by:
  4230 ;;		_t_protocol
  4231 ;;		_secs_send
  4232 ;; This function uses a reentrant model
  4233 ;;
  4234                           
  4235                           	psect	text7
  4236  005F8E                     __ptext7:
  4237                           	opt callstack 0
  4238  005F8E                     _UART1_put_buffer:
  4239                           	opt callstack 25
  4240                           
  4241                           ;mcc_generated_files/uart1.c: 250: void UART1_put_buffer(uint8_t bufData);mcc_generated_
      +                          files/uart1.c: 251: {;mcc_generated_files/uart1.c: 252:  PIE3bits.U1RXIE = 0;
  4242                           
  4243                           ; BSR set to: 57
  4244                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4245                           ;incstack = 0
  4246  005F8E  0139               	movlb	57	; () banked
  4247  005F90  9793               	bcf	147,3,b	;volatile
  4248                           
  4249                           ; BSR set to: 57
  4250                           ;mcc_generated_files/uart1.c: 253:  uart1RxBuffer[uart1RxHead++] = bufData;
  4251                           ;stkvar	_bufData @ sp[(0)+-1]
  4252  005F92  0E40               	movlw	low _uart1RxBuffer
  4253  005F94  2439               	addwf	_uart1RxHead,w,c	;volatile
  4254  005F96  6ED9               	movwf	fsr2l,c
  4255  005F98  6ADA               	clrf	fsr2h,c
  4256  005F9A  0E02               	movlw	high _uart1RxBuffer
  4257  005F9C  22DA               	addwfc	fsr2h,f,c
  4258  005F9E  0EFF               	movlw	-1
  4259  005FA0  006F FF8F FFDF     	movff	plusw1,indf2
  4260                           
  4261                           ; BSR set to: 57
  4262  005FA6  2A39               	incf	_uart1RxHead,f,c	;volatile
  4263                           
  4264                           ; BSR set to: 57
  4265                           ;mcc_generated_files/uart1.c: 254:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
  4266  005FA8  0E3F               	movlw	63
  4267  005FAA  6439               	cpfsgt	_uart1RxHead,c
  4268  005FAC  D001               	goto	l5787
  4269                           
  4270                           ; BSR set to: 57
  4271                           ;mcc_generated_files/uart1.c: 255:   uart1RxHead = 0;
  4272  005FAE  6A39               	clrf	_uart1RxHead,c	;volatile
  4273  005FB0                     l5787:
  4274                           
  4275                           ; BSR set to: 57
  4276                           ;mcc_generated_files/uart1.c: 258:  uart1RxCount++;
  4277  005FB0  2A37               	incf	_uart1RxCount,f,c	;volatile
  4278                           
  4279                           ; BSR set to: 57
  4280                           ;mcc_generated_files/uart1.c: 259:  PIE3bits.U1RXIE = 1;
  4281  005FB2  8793               	bsf	147,3,b	;volatile
  4282                           
  4283                           ; BSR set to: 57
  4284                           ; _UART1_put_buffer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  4285  005FB4  52E5               	movf	postdec1,f,c
  4286  005FB6  0012               	return		;funcret
  4287  005FB8                     __end_of_UART1_put_buffer:
  4288                           	opt callstack 0
  4289                           
  4290 ;; *************** function _UART1_is_tx_ready *****************
  4291 ;; Defined at:
  4292 ;;		line 151 in file "mcc_generated_files/uart1.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1  [STACK] unsigned char 
  4299 ;; Registers used:
  4300 ;;		btemp
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    3
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_secs_send
  4317 ;; This function uses a reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text8
  4321  00658A                     __ptext8:
  4322                           	opt callstack 0
  4323  00658A                     _UART1_is_tx_ready:
  4324                           	opt callstack 25
  4325                           
  4326                           ;mcc_generated_files/uart1.c: 153:  return uart1TxBufferRemaining;
  4327                           
  4328                           ; BSR set to: 57
  4329                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4330                           ;incstack = 0
  4331  00658A  0060  F0E8  F03D   	movff	_uart1TxBufferRemaining,btemp	;volatile
  4332                           
  4333                           ; _UART1_is_tx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  4334  006590  0012               	return		;funcret
  4335  006592                     __end_of_UART1_is_tx_ready:
  4336                           	opt callstack 0
  4337                           
  4338 ;; *************** function _secs_II_message *****************
  4339 ;; Defined at:
  4340 ;;		line 502 in file "gemsecs.c"
  4341 ;; Parameters:    Size  Location     Type
  4342 ;;  stream          1  [STACK] unsigned char 
  4343 ;;  function        1  [STACK] unsigned char 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;		None
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  7  [STACK] struct response_type
  4348 ;; Registers used:
  4349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11
  4350 ;; Tracked objects:
  4351 ;;		On entry : 3F/0
  4352 ;;		On exit  : 3E/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4359 ;;Total ram usage:        0 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; Hardware stack levels required when called:    3
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_t_protocol
  4366 ;; This function uses a reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text9
  4370  004484                     __ptext9:
  4371                           	opt callstack 0
  4372  004484                     _secs_II_message:
  4373                           	opt callstack 0
  4374                           
  4375                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 var
      +                          gsize = 0, retsize = 7 argfudge = 5
  4376  004484  0E05               	movlw	5
  4377  004486  26E1               	addwf	fsr1l,f,c
  4378  004488  0E00               	movlw	0
  4379  00448A  22E2               	addwfc	fsr1h,f,c
  4380                           
  4381                           ;gemsecs.c: 502: response_type secs_II_message(uint8_t stream, uint8_t function);gemsecs
      +                          .c: 503: {;gemsecs.c: 504:  static response_type block;;gemsecs.c: 506:  V.abort = LINK_
      +                          ERROR_NONE;
  4382                           
  4383                           ;incstack = 0
  4384  00448C  0E0A               	movlw	10
  4385  00448E  0100               	movlb	0	; () banked
  4386  004490  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  4387                           
  4388                           ; BSR set to: 0
  4389                           ;gemsecs.c: 507:  V.queue = 0;
  4390  004492  99BC               	bcf	(_V+92)& (0+255),4,b	;volatile
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;gemsecs.c: 508:  block.respond = 0;
  4394  004494  9007               	bcf	secs_II_message@block+6,0,c
  4395                           
  4396                           ;gemsecs.c: 510:  switch (stream) {
  4397  004496  D0F3               	goto	l6541
  4398  004498                     l6409:
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;gemsecs.c: 514:    block.header = (uint8_t*) & H12[0];
  4402  004498  0E62               	movlw	low _H12
  4403  00449A  6E01               	movwf	secs_II_message@block,c
  4404  00449C  0E01               	movlw	high _H12
  4405  00449E  6E02               	movwf	secs_II_message@block+1,c
  4406                           
  4407                           ; BSR set to: 0
  4408                           ;gemsecs.c: 515:    block.length = sizeof(header12);
  4409  0044A0  0E0F               	movlw	15
  4410  0044A2  6E03               	movwf	secs_II_message@block+2,c
  4411                           
  4412                           ; BSR set to: 0
  4413                           ;gemsecs.c: 516:    H12[0].block.block.systemb = V.systemb;
  4414  0044A4  C0AA  F166         	movff	_V+74,_H12+4	;volatile
  4415  0044A8  C0AB  F167         	movff	_V+75,_H12+5	;volatile
  4416  0044AC  C0AC  F168         	movff	_V+76,_H12+6	;volatile
  4417  0044B0  C0AD  F169         	movff	_V+77,_H12+7	;volatile
  4418                           
  4419                           ; BSR set to: 0
  4420                           ;gemsecs.c: 517:    H10[0].block.block.systemb = V.systemb;
  4421  0044B4  C0AA  F109         	movff	_V+74,_H10+2	;volatile
  4422  0044B8  C0AB  F10A         	movff	_V+75,_H10+3	;volatile
  4423  0044BC  C0AC  F10B         	movff	_V+76,_H10+4	;volatile
  4424  0044C0  C0AD  F10C         	movff	_V+77,_H10+5	;volatile
  4425                           
  4426                           ; BSR set to: 0
  4427                           ;gemsecs.c: 518:    block.respond = 1;
  4428  0044C4  8007               	bsf	secs_II_message@block+6,0,c
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;gemsecs.c: 519:    block.reply = (uint8_t*) & H10[0];
  4432  0044C6  0E07               	movlw	low _H10
  4433  0044C8  6E04               	movwf	secs_II_message@block+3,c
  4434  0044CA  0E01               	movlw	high _H10
  4435  0044CC  6E05               	movwf	secs_II_message@block+4,c
  4436                           
  4437                           ;gemsecs.c: 520:    block.reply_length = sizeof(header10);
  4438  0044CE  0E0D               	movlw	13
  4439  0044D0                     L8:
  4440  0044D0  6E06               	movwf	secs_II_message@block+5,c
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;gemsecs.c: 521:    V.queue = 1;
  4444  0044D2  89BC               	bsf	(_V+92)& (0+255),4,b	;volatile
  4445                           
  4446                           ;gemsecs.c: 522:    break;
  4447  0044D4  D0ED               	goto	l6543
  4448  0044D6                     l6423:
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;gemsecs.c: 524:    block.header = (uint8_t*) & H14[0];
  4452  0044D6  0EAF               	movlw	low _H14
  4453  0044D8  6E01               	movwf	secs_II_message@block,c
  4454  0044DA  0E01               	movlw	high _H14
  4455  0044DC  6E02               	movwf	secs_II_message@block+1,c
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;gemsecs.c: 525:    block.length = sizeof(header14);
  4459  0044DE  0E11               	movlw	17
  4460  0044E0  6E03               	movwf	secs_II_message@block+2,c
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;gemsecs.c: 526:    H14[0].block.block.systemb = V.systemb;
  4464  0044E2  C0AA  F1B5         	movff	_V+74,_H14+6	;volatile
  4465  0044E6  C0AB  F1B6         	movff	_V+75,_H14+7	;volatile
  4466  0044EA  C0AC  F1B7         	movff	_V+76,_H14+8	;volatile
  4467  0044EE  C0AD  F1B8         	movff	_V+77,_H14+9	;volatile
  4468                           
  4469                           ;gemsecs.c: 527:    break;
  4470  0044F2  D0DE               	goto	l6543
  4471  0044F4                     l6429:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;gemsecs.c: 529:    block.header = (uint8_t*) & H17[0];
  4475  0044F4  0E9B               	movlw	low _H17
  4476  0044F6  6E01               	movwf	secs_II_message@block,c
  4477  0044F8  0E01               	movlw	high _H17
  4478  0044FA  6E02               	movwf	secs_II_message@block+1,c
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;gemsecs.c: 530:    block.length = sizeof(header17);
  4482  0044FC  0E14               	movlw	20
  4483  0044FE  6E03               	movwf	secs_II_message@block+2,c
  4484                           
  4485                           ; BSR set to: 0
  4486                           ;gemsecs.c: 531:    H17[0].block.block.systemb = V.systemb;
  4487  004500  C0AA  F1A4         	movff	_V+74,_H17+9	;volatile
  4488  004504  C0AB  F1A5         	movff	_V+75,_H17+10	;volatile
  4489  004508  C0AC  F1A6         	movff	_V+76,_H17+11	;volatile
  4490  00450C  C0AD  F1A7         	movff	_V+77,_H17+12	;volatile
  4491                           
  4492                           ; BSR set to: 0
  4493                           ;gemsecs.c: 532:    H12[1].block.block.systemb = V.systemb;
  4494  004510  C0AA  F175         	movff	_V+74,_H12+19	;volatile
  4495  004514  C0AB  F176         	movff	_V+75,_H12+20	;volatile
  4496  004518  C0AC  F177         	movff	_V+76,_H12+21	;volatile
  4497  00451C  C0AD  F178         	movff	_V+77,_H12+22	;volatile
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;gemsecs.c: 533:    block.respond = 1;
  4501  004520  8007               	bsf	secs_II_message@block+6,0,c
  4502                           
  4503                           ; BSR set to: 0
  4504                           ;gemsecs.c: 534:    block.reply = (uint8_t*) & H12[1];
  4505  004522  0E71               	movlw	low (_H12+15)
  4506  004524  6E04               	movwf	secs_II_message@block+3,c
  4507  004526  0E01               	movlw	high (_H12+15)
  4508  004528  6E05               	movwf	secs_II_message@block+4,c
  4509                           
  4510                           ;gemsecs.c: 535:    block.reply_length = sizeof(header12);
  4511  00452A  0E0F               	movlw	15
  4512  00452C  D7D1               	goto	L8
  4513  00452E                     l6443:
  4514                           
  4515                           ; BSR set to: 0
  4516                           ;gemsecs.c: 539:    block.header = (uint8_t*) & H10[2];
  4517  00452E  0E21               	movlw	low (_H10+26)
  4518  004530  6E01               	movwf	secs_II_message@block,c
  4519  004532  0E01               	movlw	high (_H10+26)
  4520  004534  6E02               	movwf	secs_II_message@block+1,c
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;gemsecs.c: 540:    block.length = sizeof(header10);
  4524  004536  0E0D               	movlw	13
  4525  004538  6E03               	movwf	secs_II_message@block+2,c
  4526                           
  4527                           ; BSR set to: 0
  4528                           ;gemsecs.c: 541:    H10[2].block.block.systemb = V.systemb;
  4529  00453A  C0AA  F123         	movff	_V+74,_H10+28	;volatile
  4530  00453E  C0AB  F124         	movff	_V+75,_H10+29	;volatile
  4531  004542  C0AC  F125         	movff	_V+76,_H10+30	;volatile
  4532  004546  C0AD  F126         	movff	_V+77,_H10+31	;volatile
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;gemsecs.c: 542:    V.abort = LINK_ERROR_ABORT;
  4536  00454A  0E11               	movlw	17
  4537  00454C  6FB1               	movwf	(_V+81)& (0+255),b	;volatile
  4538                           
  4539                           ;gemsecs.c: 543:    break;
  4540  00454E  D0B0               	goto	l6543
  4541  004550                     l6453:
  4542                           
  4543                           ; BSR set to: 0
  4544                           ;stkvar	_function @ sp[(0)+-7]
  4545  004550  0EF9               	movlw	-7
  4546  004552  50E3               	movf	plusw1,w,c
  4547  004554  6E47               	movwf	btemp+10,c
  4548  004556  6A48               	clrf	btemp+11,c
  4549                           
  4550                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4551                           ; Switch size 1, requested type "simple"
  4552                           ; Number of cases is 1, Range of values is 0 to 0
  4553                           ; switch strategies available:
  4554                           ; Name         Instructions Cycles
  4555                           ; simple_byte            4     3 (average)
  4556                           ;	Chosen strategy is simple_byte
  4557  004558  5048               	movf	btemp+11,w,c
  4558  00455A  0A00               	xorlw	0	; case 0
  4559  00455C  A4D8               	btfss	status,2,c
  4560  00455E  D7E7               	goto	l6443
  4561                           
  4562                           ; BSR set to: 0
  4563                           ; Switch size 1, requested type "simple"
  4564                           ; Number of cases is 3, Range of values is 1 to 13
  4565                           ; switch strategies available:
  4566                           ; Name         Instructions Cycles
  4567                           ; simple_byte           10     6 (average)
  4568                           ;	Chosen strategy is simple_byte
  4569  004560  5047               	movf	btemp+10,w,c
  4570  004562  0A01               	xorlw	1	; case 1
  4571  004564  B4D8               	btfsc	status,2,c
  4572  004566  D798               	goto	l6409
  4573  004568  0A02               	xorlw	2	; case 3
  4574  00456A  B4D8               	btfsc	status,2,c
  4575  00456C  D7B4               	goto	l6423
  4576  00456E  0A0E               	xorlw	14	; case 13
  4577  004570  B4D8               	btfsc	status,2,c
  4578  004572  D7C0               	goto	l6429
  4579  004574  D7DC               	goto	l6443
  4580  004576                     l6455:
  4581                           
  4582                           ; BSR set to: 0
  4583                           ;gemsecs.c: 549:    block.header = (uint8_t*) & H24[0];
  4584  004576  0E80               	movlw	low _H24
  4585  004578  6E01               	movwf	secs_II_message@block,c
  4586  00457A  0E01               	movlw	high _H24
  4587  00457C  6E02               	movwf	secs_II_message@block+1,c
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;gemsecs.c: 550:    block.length = sizeof(header24);
  4591  00457E  0E1B               	movlw	27
  4592  004580  6E03               	movwf	secs_II_message@block+2,c
  4593                           
  4594                           ; BSR set to: 0
  4595                           ;gemsecs.c: 551:    H24[0].block.block.systemb = V.systemb;
  4596  004582  C0AA  F190         	movff	_V+74,_H24+16	;volatile
  4597  004586  C0AB  F191         	movff	_V+75,_H24+17	;volatile
  4598  00458A  C0AC  F192         	movff	_V+76,_H24+18	;volatile
  4599  00458E  C0AD  F193         	movff	_V+77,_H24+19	;volatile
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;gemsecs.c: 552:    H24[0].data[12] = 12;
  4603  004592  0E0C               	movlw	12
  4604  004594  0101               	movlb	1	; () banked
  4605  004596  6F8E               	movwf	(_H24+14)& (0+255),b
  4606                           
  4607                           ;gemsecs.c: 553:    break;
  4608  004598  D08B               	goto	l6543
  4609  00459A                     l6473:
  4610                           
  4611                           ; BSR set to: 0
  4612                           ;stkvar	_function @ sp[(0)+-7]
  4613  00459A  0EF9               	movlw	-7
  4614  00459C  50E3               	movf	plusw1,w,c
  4615  00459E  6E47               	movwf	btemp+10,c
  4616  0045A0  6A48               	clrf	btemp+11,c
  4617                           
  4618                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4619                           ; Switch size 1, requested type "simple"
  4620                           ; Number of cases is 1, Range of values is 0 to 0
  4621                           ; switch strategies available:
  4622                           ; Name         Instructions Cycles
  4623                           ; simple_byte            4     3 (average)
  4624                           ;	Chosen strategy is simple_byte
  4625  0045A2  5048               	movf	btemp+11,w,c
  4626  0045A4  0A00               	xorlw	0	; case 0
  4627  0045A6  A4D8               	btfss	status,2,c
  4628  0045A8  D7C2               	goto	l6443
  4629                           
  4630                           ; BSR set to: 0
  4631                           ; Switch size 1, requested type "simple"
  4632                           ; Number of cases is 1, Range of values is 17 to 17
  4633                           ; switch strategies available:
  4634                           ; Name         Instructions Cycles
  4635                           ; simple_byte            4     3 (average)
  4636                           ;	Chosen strategy is simple_byte
  4637  0045AA  5047               	movf	btemp+10,w,c
  4638  0045AC  0A11               	xorlw	17	; case 17
  4639  0045AE  B4D8               	btfsc	status,2,c
  4640  0045B0  D7E2               	goto	l6455
  4641  0045B2  D7BD               	goto	l6443
  4642  0045B4                     l6475:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;gemsecs.c: 565:    block.header = (uint8_t*) & H13[0];
  4646  0045B4  0EC0               	movlw	low _H13
  4647  0045B6  6E01               	movwf	secs_II_message@block,c
  4648  0045B8  0E02               	movlw	high _H13
  4649  0045BA  6E02               	movwf	secs_II_message@block+1,c
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;gemsecs.c: 566:    block.length = sizeof(header13);
  4653  0045BC  0E10               	movlw	16
  4654  0045BE  6E03               	movwf	secs_II_message@block+2,c
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;gemsecs.c: 567:    H13[0].block.block.systemb = V.systemb;
  4658  0045C0  C0AA  F2C5         	movff	_V+74,_H13+5	;volatile
  4659  0045C4  C0AB  F2C6         	movff	_V+75,_H13+6	;volatile
  4660  0045C8  C0AC  F2C7         	movff	_V+76,_H13+7	;volatile
  4661  0045CC  C0AD  F2C8         	movff	_V+77,_H13+8	;volatile
  4662                           
  4663                           ;gemsecs.c: 568:    break;
  4664  0045D0  D06F               	goto	l6543
  4665  0045D2                     l6491:
  4666                           
  4667                           ; BSR set to: 0
  4668                           ;stkvar	_function @ sp[(0)+-7]
  4669  0045D2  0EF9               	movlw	-7
  4670  0045D4  50E3               	movf	plusw1,w,c
  4671  0045D6  6E47               	movwf	btemp+10,c
  4672  0045D8  6A48               	clrf	btemp+11,c
  4673                           
  4674                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4675                           ; Switch size 1, requested type "simple"
  4676                           ; Number of cases is 1, Range of values is 0 to 0
  4677                           ; switch strategies available:
  4678                           ; Name         Instructions Cycles
  4679                           ; simple_byte            4     3 (average)
  4680                           ;	Chosen strategy is simple_byte
  4681  0045DA  5048               	movf	btemp+11,w,c
  4682  0045DC  0A00               	xorlw	0	; case 0
  4683  0045DE  A4D8               	btfss	status,2,c
  4684  0045E0  D7A6               	goto	l6443
  4685                           
  4686                           ; BSR set to: 0
  4687                           ; Switch size 1, requested type "simple"
  4688                           ; Number of cases is 1, Range of values is 11 to 11
  4689                           ; switch strategies available:
  4690                           ; Name         Instructions Cycles
  4691                           ; simple_byte            4     3 (average)
  4692                           ;	Chosen strategy is simple_byte
  4693  0045E2  5047               	movf	btemp+10,w,c
  4694  0045E4  0A0B               	xorlw	11	; case 11
  4695  0045E6  B4D8               	btfsc	status,2,c
  4696  0045E8  D7E5               	goto	l6475
  4697  0045EA  D7A1               	goto	l6443
  4698  0045EC                     l6503:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;stkvar	_function @ sp[(0)+-7]
  4702  0045EC  0EF9               	movlw	-7
  4703  0045EE  50E3               	movf	plusw1,w,c
  4704  0045F0  6E47               	movwf	btemp+10,c
  4705  0045F2  6A48               	clrf	btemp+11,c
  4706                           
  4707                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4708                           ; Switch size 1, requested type "simple"
  4709                           ; Number of cases is 1, Range of values is 0 to 0
  4710                           ; switch strategies available:
  4711                           ; Name         Instructions Cycles
  4712                           ; simple_byte            4     3 (average)
  4713                           ;	Chosen strategy is simple_byte
  4714  0045F4  5048               	movf	btemp+11,w,c
  4715  0045F6  0A00               	xorlw	0	; case 0
  4716  0045F8  A4D8               	btfss	status,2,c
  4717  0045FA  D799               	goto	l6443
  4718                           
  4719                           ; BSR set to: 0
  4720                           ; Switch size 1, requested type "simple"
  4721                           ; Number of cases is 7, Range of values is 1 to 13
  4722                           ; switch strategies available:
  4723                           ; Name         Instructions Cycles
  4724                           ; simple_byte           22    12 (average)
  4725                           ;	Chosen strategy is simple_byte
  4726  0045FC  5047               	movf	btemp+10,w,c
  4727  0045FE  0A01               	xorlw	1	; case 1
  4728  004600  B4D8               	btfsc	status,2,c
  4729  004602  D056               	goto	l6543
  4730  004604  0A02               	xorlw	2	; case 3
  4731  004606  B4D8               	btfsc	status,2,c
  4732  004608  D053               	goto	l6543
  4733  00460A  0A06               	xorlw	6	; case 5
  4734  00460C  B4D8               	btfsc	status,2,c
  4735  00460E  D050               	goto	l6543
  4736  004610  0A02               	xorlw	2	; case 7
  4737  004612  B4D8               	btfsc	status,2,c
  4738  004614  D04D               	goto	l6543
  4739  004616  0A0E               	xorlw	14	; case 9
  4740  004618  B4D8               	btfsc	status,2,c
  4741  00461A  D04A               	goto	l6543
  4742  00461C  0A02               	xorlw	2	; case 11
  4743  00461E  B4D8               	btfsc	status,2,c
  4744  004620  D047               	goto	l6543
  4745  004622  0A06               	xorlw	6	; case 13
  4746  004624  B4D8               	btfsc	status,2,c
  4747  004626  D044               	goto	l6543
  4748  004628  D782               	goto	l6443
  4749  00462A                     l6505:
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;gemsecs.c: 604:    block.header = (uint8_t*) & H13[1];
  4753  00462A  0ED0               	movlw	low (_H13+16)
  4754  00462C  6E01               	movwf	secs_II_message@block,c
  4755  00462E  0E02               	movlw	high (_H13+16)
  4756  004630  6E02               	movwf	secs_II_message@block+1,c
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;gemsecs.c: 605:    block.length = sizeof(header13);
  4760  004632  0E10               	movlw	16
  4761  004634  6E03               	movwf	secs_II_message@block+2,c
  4762                           
  4763                           ; BSR set to: 0
  4764                           ;gemsecs.c: 606:    H13[1].block.block.systemb = V.systemb;
  4765  004636  C0AA  F2D5         	movff	_V+74,_H13+21	;volatile
  4766  00463A  C0AB  F2D6         	movff	_V+75,_H13+22	;volatile
  4767  00463E  C0AC  F2D7         	movff	_V+76,_H13+23	;volatile
  4768  004642  C0AD  F2D8         	movff	_V+77,_H13+24	;volatile
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;gemsecs.c: 607:    H53[0].block.block.systemb = V.systemb;
  4772  004646  C0AA  F3F3         	movff	_V+74,_H53+45	;volatile
  4773  00464A  C0AB  F3F4         	movff	_V+75,_H53+46	;volatile
  4774  00464E  C0AC  F3F5         	movff	_V+76,_H53+47	;volatile
  4775  004652  C0AD  F3F6         	movff	_V+77,_H53+48	;volatile
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;gemsecs.c: 608:    block.respond = 1;
  4779  004656  8007               	bsf	secs_II_message@block+6,0,c
  4780                           
  4781                           ; BSR set to: 0
  4782                           ;gemsecs.c: 609:    block.reply = (uint8_t*) & H53[0];
  4783  004658  0EC6               	movlw	low _H53
  4784  00465A  6E04               	movwf	secs_II_message@block+3,c
  4785  00465C  0E03               	movlw	high _H53
  4786  00465E  6E05               	movwf	secs_II_message@block+4,c
  4787                           
  4788                           ;gemsecs.c: 610:    block.reply_length = sizeof(header53);
  4789  004660  0E38               	movlw	56
  4790  004662  D736               	goto	L8
  4791  004664                     l6529:
  4792                           
  4793                           ; BSR set to: 0
  4794                           ;stkvar	_function @ sp[(0)+-7]
  4795  004664  0EF9               	movlw	-7
  4796  004666  50E3               	movf	plusw1,w,c
  4797  004668  6E47               	movwf	btemp+10,c
  4798  00466A  6A48               	clrf	btemp+11,c
  4799                           
  4800                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4801                           ; Switch size 1, requested type "simple"
  4802                           ; Number of cases is 1, Range of values is 0 to 0
  4803                           ; switch strategies available:
  4804                           ; Name         Instructions Cycles
  4805                           ; simple_byte            4     3 (average)
  4806                           ;	Chosen strategy is simple_byte
  4807  00466C  5048               	movf	btemp+11,w,c
  4808  00466E  0A00               	xorlw	0	; case 0
  4809  004670  A4D8               	btfss	status,2,c
  4810  004672  D75D               	goto	l6443
  4811                           
  4812                           ; BSR set to: 0
  4813                           ; Switch size 1, requested type "simple"
  4814                           ; Number of cases is 1, Range of values is 1 to 1
  4815                           ; switch strategies available:
  4816                           ; Name         Instructions Cycles
  4817                           ; simple_byte            4     3 (average)
  4818                           ;	Chosen strategy is simple_byte
  4819  004674  5047               	movf	btemp+10,w,c
  4820  004676  0A01               	xorlw	1	; case 1
  4821  004678  B4D8               	btfsc	status,2,c
  4822  00467A  D7D7               	goto	l6505
  4823  00467C  D758               	goto	l6443
  4824  00467E                     l6541:
  4825                           
  4826                           ; BSR set to: 0
  4827                           ;stkvar	_stream @ sp[(0)+-6]
  4828  00467E  0EFA               	movlw	-6
  4829  004680  50E3               	movf	plusw1,w,c
  4830  004682  6E47               	movwf	btemp+10,c
  4831  004684  6A48               	clrf	btemp+11,c
  4832                           
  4833                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4834                           ; Switch size 1, requested type "simple"
  4835                           ; Number of cases is 1, Range of values is 0 to 0
  4836                           ; switch strategies available:
  4837                           ; Name         Instructions Cycles
  4838                           ; simple_byte            4     3 (average)
  4839                           ;	Chosen strategy is simple_byte
  4840  004686  5048               	movf	btemp+11,w,c
  4841  004688  0A00               	xorlw	0	; case 0
  4842  00468A  A4D8               	btfss	status,2,c
  4843  00468C  D750               	goto	l6443
  4844                           
  4845                           ; BSR set to: 0
  4846                           ; Switch size 1, requested type "simple"
  4847                           ; Number of cases is 5, Range of values is 1 to 10
  4848                           ; switch strategies available:
  4849                           ; Name         Instructions Cycles
  4850                           ; simple_byte           16     9 (average)
  4851                           ;	Chosen strategy is simple_byte
  4852  00468E  5047               	movf	btemp+10,w,c
  4853  004690  0A01               	xorlw	1	; case 1
  4854  004692  B4D8               	btfsc	status,2,c
  4855  004694  D75D               	goto	l6453
  4856  004696  0A03               	xorlw	3	; case 2
  4857  004698  B4D8               	btfsc	status,2,c
  4858  00469A  D77F               	goto	l6473
  4859  00469C  0A04               	xorlw	4	; case 6
  4860  00469E  B4D8               	btfsc	status,2,c
  4861  0046A0  D798               	goto	l6491
  4862  0046A2  0A0F               	xorlw	15	; case 9
  4863  0046A4  B4D8               	btfsc	status,2,c
  4864  0046A6  D7A2               	goto	l6503
  4865  0046A8  0A03               	xorlw	3	; case 10
  4866  0046AA  B4D8               	btfsc	status,2,c
  4867  0046AC  D7DB               	goto	l6529
  4868  0046AE  D73F               	goto	l6443
  4869  0046B0                     l6543:
  4870                           
  4871                           ;gemsecs.c: 629:  return(block);
  4872  0046B0  EE20  F001         	lfsr	2,secs_II_message@block
  4873                           
  4874                           ;stkvar	?_secs_II_message @ sp[(0)+-7]
  4875  0046B4  0E07               	movlw	7
  4876  0046B6  6E3D               	movwf	btemp,c
  4877  0046B8  0EF9               	movlw	-7
  4878  0046BA                     us348999:
  4879  0046BA  006F FF7B FFE3     	movff	postinc2,plusw1
  4880  0046C0  28E8               	incf	wreg,w,c
  4881  0046C2  2E3D               	decfsz	btemp,f,c
  4882  0046C4  D7FA               	bra	us348999
  4883                           
  4884                           ; _secs_II_message: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          7, argsize = 7, vargsize = 0
  4885  0046C6  0012               	return		;funcret
  4886  0046C8                     __end_of_secs_II_message:
  4887                           	opt callstack 0
  4888                           
  4889 ;; *************** function _srand *****************
  4890 ;; Defined at:
  4891 ;;		line 10 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/rand.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;  s               2  [STACK] unsigned int 
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1  [STACK] void 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  4900 ;; Tracked objects:
  4901 ;;		On entry : 3F/0
  4902 ;;		On exit  : 3F/1
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4909 ;;Total ram usage:        0 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:    3
  4912 ;; This function calls:
  4913 ;;		Nothing
  4914 ;; This function is called by:
  4915 ;;		_main
  4916 ;; This function uses a reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text10
  4920  005E80                     __ptext10:
  4921                           	opt callstack 0
  4922  005E80                     _srand:
  4923                           	opt callstack 27
  4924                           
  4925                           ;stkvar	_s @ sp[(0)+-2]
  4926                           
  4927                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4928                           ;incstack = 0
  4929  005E80  0EFE               	movlw	-2
  4930  005E82  50E3               	movf	plusw1,w,c
  4931  005E84  0FFF               	addlw	255
  4932  005E86  6E47               	movwf	btemp+10,c
  4933  005E88  0EFF               	movlw	-1
  4934  005E8A  006F FF8C  F048    	movff	plusw1,btemp+11
  4935  005E90  0EFF               	movlw	255
  4936  005E92  2248               	addwfc	btemp+11,f,c
  4937  005E94  0060  F11C  F1EE   	movff	btemp+10,_seed
  4938  005E9A  0060  F120  F1EF   	movff	btemp+11,_seed+1
  4939  005EA0  0101               	movlb	1	; () banked
  4940  005EA2  6BF0               	clrf	(_seed+2)& (0+255),b
  4941  005EA4  6BF1               	clrf	(_seed+3)& (0+255),b
  4942  005EA6  6BF2               	clrf	(_seed+4)& (0+255),b
  4943  005EA8  6BF3               	clrf	(_seed+5)& (0+255),b
  4944  005EAA  6BF4               	clrf	(_seed+6)& (0+255),b
  4945  005EAC  6BF5               	clrf	(_seed+7)& (0+255),b
  4946                           
  4947                           ; BSR set to: 1
  4948                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  4949  005EAE  52E5               	movf	postdec1,f,c
  4950  005EB0  52E5               	movf	postdec1,f,c
  4951  005EB2  0012               	return		;funcret
  4952  005EB4                     __end_of_srand:
  4953                           	opt callstack 0
  4954                           
  4955 ;; *************** function _sprintf *****************
  4956 ;; Defined at:
  4957 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_sprintf.c"
  4958 ;; Parameters:    Size  Location     Type
  4959 ;;  s               1  [STACK] PTR unsigned char 
  4960 ;;		 -> V(98), 
  4961 ;;  fmt             1  [STACK] PTR const unsigned char 
  4962 ;;		 -> STR_15(26), STR_14(26), STR_13(6), STR_12(19), 
  4963 ;;		 -> STR_11(26), STR_10(21), STR_9(18), STR_8(6), 
  4964 ;;		 -> STR_7(6), STR_6(14), STR_5(21), STR_4(15), 
  4965 ;;		 -> STR_2(12), STR_1(17), 
  4966 ;; Auto vars:     Size  Location     Type
  4967 ;;  f               5  [STACK] struct _IO_FILE
  4968 ;;  ap              2  [STACK] PTR void [1]
  4969 ;;		 -> ?_printf(2), ?_sprintf(2), 
  4970 ;;  ret             2    0        int 
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  2  [STACK] int 
  4973 ;; Registers used:
  4974 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  4975 ;; Tracked objects:
  4976 ;;		On entry : 4/1
  4977 ;;		On exit  : 3F/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4983 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4984 ;;Total ram usage:        0 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:   11
  4987 ;; This function calls:
  4988 ;;		_vfprintf
  4989 ;; This function is called by:
  4990 ;;		_main
  4991 ;; This function uses a reentrant model
  4992 ;;
  4993                           
  4994                           	psect	text11
  4995  005086                     __ptext11:
  4996                           	opt callstack 0
  4997  005086                     _sprintf:
  4998                           	opt callstack 0
  4999                           
  5000                           ; BSR set to: 1
  5001                           ; autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, argsize = 2 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5002  005086  0E07               	movlw	7
  5003  005088  26E1               	addwf	fsr1l,f,c
  5004  00508A  0E00               	movlw	0
  5005  00508C  22E2               	addwfc	fsr1h,f,c
  5006                           
  5007                           ;stkvar	?_sprintf @ sp[(-7)+-3]
  5008                           
  5009                           ;incstack = 0
  5010  00508E  0EF6               	movlw	246
  5011  005090  24E1               	addwf	fsr1l,w,c
  5012  005092  6E47               	movwf	btemp+10,c
  5013  005094  0EFF               	movlw	255
  5014  005096  20E2               	addwfc	fsr1h,w,c
  5015  005098  6E48               	movwf	btemp+11,c
  5016                           
  5017                           ;stkvar	_ap @ sp[(-7)+5]
  5018  00509A  0EFF               	movlw	-1
  5019  00509C  0060  F123  FFE3   	movff	btemp+11,plusw1
  5020  0050A2  0EFE               	movlw	-2
  5021  0050A4  0060  F11F  FFE3   	movff	btemp+10,plusw1
  5022                           
  5023                           ;stkvar	_s @ sp[(-7)+-2]
  5024  0050AA  0EF7               	movlw	-9
  5025  0050AC  006F FF8C  F048    	movff	plusw1,btemp+11
  5026                           
  5027                           ;stkvar	_f @ sp[(-7)+0]
  5028  0050B2  0EF9               	movlw	-7
  5029  0050B4  0060  F123  FFE3   	movff	btemp+11,plusw1
  5030                           
  5031                           ;stkvar	_f @ sp[(-7)+0]
  5032  0050BA  0EFA               	movlw	250
  5033  0050BC  24E1               	addwf	fsr1l,w,c
  5034  0050BE  6ED9               	movwf	fsr2l,c
  5035  0050C0  0EFF               	movlw	255
  5036  0050C2  20E2               	addwfc	fsr1h,w,c
  5037  0050C4  6EDA               	movwf	fsr2h,c
  5038  0050C6  0E00               	movlw	0
  5039  0050C8  6EDE               	movwf	postinc2,c
  5040  0050CA  0E00               	movlw	0
  5041  0050CC  6EDD               	movwf	postdec2,c
  5042                           
  5043                           ;stkvar	_f @ sp[(-7)+0]
  5044  0050CE  0EFC               	movlw	252
  5045  0050D0  24E1               	addwf	fsr1l,w,c
  5046  0050D2  6ED9               	movwf	fsr2l,c
  5047  0050D4  0EFF               	movlw	255
  5048  0050D6  20E2               	addwfc	fsr1h,w,c
  5049  0050D8  6EDA               	movwf	fsr2h,c
  5050  0050DA  0E00               	movlw	0
  5051  0050DC  6EDE               	movwf	postinc2,c
  5052  0050DE  0E00               	movlw	0
  5053  0050E0  6EDD               	movwf	postdec2,c
  5054                           
  5055                           ;stkvar	_ap @ sp[(-7)+5]
  5056  0050E2  0EFE               	movlw	254
  5057  0050E4  24E1               	addwf	fsr1l,w,c
  5058  0050E6  6E3D               	movwf	btemp,c
  5059  0050E8  0EFF               	movlw	255
  5060  0050EA  20E2               	addwfc	fsr1h,w,c
  5061  0050EC  6E3E               	movwf	btemp+1,c
  5062  0050EE  0060  F0F7  FFE6   	movff	btemp,postinc1
  5063  0050F4  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  5064                           
  5065                           ;stkvar	_fmt @ sp[(-9)+-3]
  5066  0050FA  0EF4               	movlw	-12
  5067  0050FC  50E3               	movf	plusw1,w,c
  5068  0050FE  6EE6               	movwf	postinc1,c
  5069                           
  5070                           ;stkvar	_f @ sp[(-10)+0]
  5071  005100  0EF6               	movlw	246
  5072  005102  24E1               	addwf	fsr1l,w,c
  5073  005104  6E3D               	movwf	btemp,c
  5074  005106  0EFF               	movlw	255
  5075  005108  20E2               	addwfc	fsr1h,w,c
  5076  00510A  6E3E               	movwf	btemp+1,c
  5077  00510C  0060  F0F7  FFE6   	movff	btemp,postinc1
  5078  005112  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  5079  005118  ECA6  F02A         	call	_vfprintf	;wreg free
  5080                           
  5081                           ; BSR set to: 0
  5082                           ;stkvar	_f @ sp[(-7)+0]
  5083  00511C  0EFA               	movlw	250
  5084  00511E  24E1               	addwf	fsr1l,w,c
  5085  005120  6ED9               	movwf	fsr2l,c
  5086  005122  0EFF               	movlw	255
  5087  005124  20E2               	addwfc	fsr1h,w,c
  5088  005126  6EDA               	movwf	fsr2h,c
  5089  005128  50DF               	movf	indf2,w,c
  5090  00512A  6E48               	movwf	btemp+11,c
  5091                           
  5092                           ;stkvar	_s @ sp[(-7)+-2]
  5093  00512C  0EF7               	movlw	-9
  5094  00512E  50E3               	movf	plusw1,w,c
  5095  005130  2448               	addwf	btemp+11,w,c
  5096  005132  6ED9               	movwf	fsr2l,c
  5097  005134  6ADA               	clrf	fsr2h,c
  5098  005136  0E00               	movlw	0
  5099  005138  6EDF               	movwf	indf2,c
  5100                           
  5101                           ; BSR set to: 0
  5102                           ; _sprintf: autosize = 7, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 12, args
      +                          ize = 2, vargsize = 0
  5103  00513A  0EF9               	movlw	249
  5104  00513C  26E1               	addwf	fsr1l,f,c
  5105  00513E  0EFF               	movlw	255
  5106  005140  22E2               	addwfc	fsr1h,f,c
  5107  005142  52E5               	movf	postdec1,f,c
  5108  005144  50E7               	movf	indf1,w,c
  5109  005146  5EE1               	subwf	fsr1l,f,c
  5110  005148  0E00               	movlw	0
  5111  00514A  5AE2               	subwfb	fsr1h,f,c
  5112  00514C  0012               	return		;funcret
  5113  00514E                     __end_of_sprintf:
  5114                           	opt callstack 0
  5115                           
  5116 ;; *************** function _r_protocol *****************
  5117 ;; Defined at:
  5118 ;;		line 213 in file "gemsecs.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;  r_link          1  [STACK] PTR enum E16172
  5121 ;;		 -> V(98), 
  5122 ;; Auto vars:     Size  Location     Type
  5123 ;;  rxData          1  [STACK] unsigned char 
  5124 ;; Return value:  Size  Location     Type
  5125 ;;                  1  [STACK] enum E16912
  5126 ;; Registers used:
  5127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5128 ;; Tracked objects:
  5129 ;;		On entry : 0/0
  5130 ;;		On exit  : 0/0
  5131 ;;		Unchanged: 0/0
  5132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5137 ;;Total ram usage:        0 bytes
  5138 ;; Hardware stack levels used:    1
  5139 ;; Hardware stack levels required when called:    5
  5140 ;; This function calls:
  5141 ;;		_StartTimer
  5142 ;;		_TimerDone
  5143 ;;		_UART1_Read
  5144 ;;		_UART1_Write
  5145 ;;		_UART1_is_rx_ready
  5146 ;;		_WaitMs
  5147 ;;		_run_checksum
  5148 ;;		_secs_gem_state
  5149 ;; This function is called by:
  5150 ;;		_main
  5151 ;; This function uses a reentrant model
  5152 ;;
  5153                           
  5154                           	psect	text12
  5155  00340C                     __ptext12:
  5156                           	opt callstack 0
  5157  00340C                     _r_protocol:
  5158                           	opt callstack 0
  5159                           
  5160                           ; BSR set to: 0
  5161                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5162  00340C  52E6               	movf	postinc1,f,c
  5163                           
  5164                           ;gemsecs.c: 213: LINK_STATES r_protocol(LINK_STATES * r_link);gemsecs.c: 214: {;gemsecs.
      +                          c: 215:  uint8_t rxData;;gemsecs.c: 216:  static uint8_t rxData_l = 0, retry = 3, *b_blo
      +                          ck;;gemsecs.c: 218:  switch (*r_link) {
  5165                           
  5166                           ;incstack = 0
  5167  00340E  D187               	goto	l8805
  5168  003410                     l8673:
  5169                           
  5170                           ;gemsecs.c: 220:   if (UART1_is_rx_ready()) {
  5171  003410  ECCD  F032         	call	_UART1_is_rx_ready	;wreg free
  5172  003414  503D               	movf	btemp,w,c
  5173  003416  B4D8               	btfsc	status,2,c
  5174  003418  D1A3               	goto	l8807
  5175                           
  5176                           ;gemsecs.c: 221:    rxData = UART1_Read();
  5177  00341A  ECEA  F02E         	call	_UART1_Read	;wreg free
  5178                           
  5179                           ;stkvar	_rxData @ sp[(-1)+0]
  5180  00341E  0EFF               	movlw	-1
  5181  003420  0060  F0F7  FFE3   	movff	btemp,plusw1
  5182                           
  5183                           ; BSR set to: 57
  5184                           ;gemsecs.c: 222:    if (rxData == 0x05) {
  5185                           ;stkvar	_rxData @ sp[(-1)+0]
  5186  003426  0EFF               	movlw	-1
  5187  003428  006F FF8C  F03D    	movff	plusw1,btemp
  5188  00342E  0E05               	movlw	5
  5189  003430  183D               	xorwf	btemp,w,c
  5190  003432  A4D8               	btfss	status,2,c
  5191  003434  D195               	goto	l8807
  5192                           
  5193                           ; BSR set to: 57
  5194                           ;gemsecs.c: 223:     V.error = LINK_ERROR_NONE;
  5195  003436  0E0A               	movlw	10
  5196  003438  0100               	movlb	0	; () banked
  5197  00343A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5198                           
  5199                           ; BSR set to: 0
  5200                           ;gemsecs.c: 224:     *r_link = LINK_STATE_ENQ;
  5201                           ;stkvar	_r_link @ sp[(-1)+-1]
  5202  00343C  0EFE               	movlw	-2
  5203  00343E  50E3               	movf	plusw1,w,c
  5204  003440  6ED9               	movwf	fsr2l,c
  5205  003442  6ADA               	clrf	fsr2h,c
  5206  003444  0E01               	movlw	1
  5207  003446  D152               	goto	L13
  5208  003448                     l1636:
  5209                           
  5210                           ;gemsecs.c: 229:   rxData_l = 0;
  5211  003448  6A2E               	clrf	r_protocol@rxData_l,c
  5212                           
  5213                           ;gemsecs.c: 230:   b_block = (uint8_t*) & H254[0];
  5214  00344A  0EFE               	movlw	low _H254
  5215  00344C  6E23               	movwf	r_protocol@b_block,c
  5216  00344E  0E03               	movlw	high _H254
  5217  003450  6E24               	movwf	r_protocol@b_block+1,c
  5218                           
  5219                           ;gemsecs.c: 231:   UART1_Write(0x04);
  5220  003452  0E04               	movlw	4
  5221  003454  6EE6               	movwf	postinc1,c
  5222  003456  ECAC  F02E         	call	_UART1_Write	;wreg free
  5223                           
  5224                           ; BSR set to: 57
  5225                           ;gemsecs.c: 232:   StartTimer(TMR_T2, 2000);
  5226  00345A  0ED0               	movlw	208
  5227  00345C  6EE6               	movwf	postinc1,c
  5228  00345E  0E07               	movlw	7
  5229  003460  6EE6               	movwf	postinc1,c
  5230  003462  0E02               	movlw	2
  5231  003464  6EE6               	movwf	postinc1,c
  5232  003466  EC4D  F02E         	call	_StartTimer	;wreg free
  5233                           
  5234                           ;gemsecs.c: 233:   *r_link = LINK_STATE_EOT;
  5235                           ;stkvar	_r_link @ sp[(-1)+-1]
  5236  00346A  0EFE               	movlw	-2
  5237  00346C  50E3               	movf	plusw1,w,c
  5238  00346E  6ED9               	movwf	fsr2l,c
  5239  003470  6ADA               	clrf	fsr2h,c
  5240  003472  0E02               	movlw	2
  5241  003474  D13B               	goto	L13
  5242  003476                     l8691:
  5243                           
  5244                           ;gemsecs.c: 243:   if (TimerDone(TMR_T2)) {
  5245  003476  0E02               	movlw	2
  5246  003478  6EE6               	movwf	postinc1,c
  5247  00347A  ECF0  F02F         	call	_TimerDone	;wreg free
  5248  00347E  503D               	movf	btemp,w,c
  5249  003480  B4D8               	btfsc	status,2,c
  5250  003482  D019               	goto	l8703
  5251                           
  5252                           ;gemsecs.c: 244:    V.timer_error++;
  5253  003484  0100               	movlb	0	; () banked
  5254  003486  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  5255  003488  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  5256                           
  5257                           ; BSR set to: 0
  5258                           ;gemsecs.c: 245:    if (!retry--) {
  5259  00348A  065D               	decf	r_protocol@retry,f,c
  5260  00348C  285D               	incf	r_protocol@retry,w,c
  5261  00348E  A4D8               	btfss	status,2,c
  5262  003490  D00C               	goto	l8701
  5263                           
  5264                           ; BSR set to: 0
  5265                           ;gemsecs.c: 246:     V.error = LINK_ERROR_T2;
  5266  003492  0E0C               	movlw	12
  5267  003494  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5268                           
  5269                           ;gemsecs.c: 247:     V.failed_receive = 1;
  5270  003496  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5271  003498  0BF0               	andlw	-16
  5272  00349A  0901               	iorlw	1
  5273  00349C  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  5274                           
  5275                           ; BSR set to: 0
  5276                           ;gemsecs.c: 248:     *r_link = LINK_STATE_NAK;
  5277                           ;stkvar	_r_link @ sp[(-1)+-1]
  5278  00349E  0EFE               	movlw	-2
  5279  0034A0  50E3               	movf	plusw1,w,c
  5280  0034A2  6ED9               	movwf	fsr2l,c
  5281  0034A4  6ADA               	clrf	fsr2h,c
  5282  0034A6  0E05               	movlw	5
  5283  0034A8  D121               	goto	L13
  5284  0034AA                     l8701:
  5285                           
  5286                           ;gemsecs.c: 250:     *r_link = LINK_STATE_IDLE;
  5287                           ;stkvar	_r_link @ sp[(-1)+-1]
  5288  0034AA  0EFE               	movlw	-2
  5289  0034AC  50E3               	movf	plusw1,w,c
  5290  0034AE  6ED9               	movwf	fsr2l,c
  5291  0034B0  6ADA               	clrf	fsr2h,c
  5292  0034B2  0E00               	movlw	0
  5293  0034B4  D11B               	goto	L13
  5294  0034B6                     l8703:
  5295                           
  5296                           ;gemsecs.c: 253:    if (UART1_is_rx_ready()) {
  5297  0034B6  ECCD  F032         	call	_UART1_is_rx_ready	;wreg free
  5298  0034BA  503D               	movf	btemp,w,c
  5299  0034BC  B4D8               	btfsc	status,2,c
  5300  0034BE  D150               	goto	l8807
  5301                           
  5302                           ;gemsecs.c: 254:     rxData = UART1_Read();
  5303  0034C0  ECEA  F02E         	call	_UART1_Read	;wreg free
  5304                           
  5305                           ;stkvar	_rxData @ sp[(-1)+0]
  5306  0034C4  0EFF               	movlw	-1
  5307  0034C6  0060  F0F7  FFE3   	movff	btemp,plusw1
  5308                           
  5309                           ; BSR set to: 57
  5310                           ;gemsecs.c: 255:     if (rxData_l == 0) {
  5311  0034CC  502E               	movf	r_protocol@rxData_l,w,c
  5312  0034CE  A4D8               	btfss	status,2,c
  5313  0034D0  D01C               	goto	l8717
  5314                           
  5315                           ; BSR set to: 57
  5316                           ;gemsecs.c: 256:      r_block.length = rxData;
  5317                           ;stkvar	_rxData @ sp[(-1)+0]
  5318  0034D2  0EFF               	movlw	-1
  5319  0034D4  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  5320                           
  5321                           ; BSR set to: 57
  5322                           ;gemsecs.c: 257:      run_checksum(0, 1);
  5323  0034DA  0E01               	movlw	1
  5324  0034DC  6EE6               	movwf	postinc1,c
  5325  0034DE  0E00               	movlw	0
  5326  0034E0  6EE6               	movwf	postinc1,c
  5327  0034E2  ECDC  F02F         	call	_run_checksum	;wreg free
  5328                           
  5329                           ;gemsecs.c: 258:      rxData_l++;
  5330  0034E6  2A2E               	incf	r_protocol@rxData_l,f,c
  5331                           
  5332                           ;gemsecs.c: 259:      b_block[sizeof(header254) - rxData_l] = rxData;
  5333                           ;stkvar	_rxData @ sp[(-1)+0]
  5334  0034E8  502E               	movf	r_protocol@rxData_l,w,c
  5335  0034EA  5C23               	subwf	r_protocol@b_block,w,c
  5336  0034EC  6E47               	movwf	btemp+10,c
  5337  0034EE  0E00               	movlw	0
  5338  0034F0  5824               	subwfb	r_protocol@b_block+1,w,c
  5339  0034F2  6E48               	movwf	btemp+11,c
  5340  0034F4  0E01               	movlw	1
  5341  0034F6  2447               	addwf	btemp+10,w,c
  5342  0034F8  6ED9               	movwf	fsr2l,c
  5343  0034FA  0E01               	movlw	1
  5344  0034FC  2048               	addwfc	btemp+11,w,c
  5345  0034FE  6EDA               	movwf	fsr2h,c
  5346  003500  0EFF               	movlw	-1
  5347  003502  006F FF8F FFDF     	movff	plusw1,indf2
  5348                           
  5349                           ;gemsecs.c: 260:     } else {
  5350  003508  D12B               	goto	l8807
  5351  00350A                     l8717:
  5352                           
  5353                           ; BSR set to: 57
  5354                           ;gemsecs.c: 264:      if (rxData_l <= sizeof(block10))
  5355  00350A  0E0B               	movlw	11
  5356  00350C  602E               	cpfslt	r_protocol@rxData_l,c
  5357  00350E  D00C               	goto	l8721
  5358                           
  5359                           ; BSR set to: 57
  5360                           ;gemsecs.c: 265:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  5361                           ;stkvar	_rxData @ sp[(-1)+0]
  5362  003510  502E               	movf	r_protocol@rxData_l,w,c
  5363  003512  0820               	sublw	low (_H10+25)
  5364  003514  6ED9               	movwf	fsr2l,c
  5365  003516  0E00               	movlw	0
  5366  003518  A0D8               	btfss	status,0,c
  5367  00351A  2AE8               	incf	wreg,f,c
  5368  00351C  0801               	sublw	high (_H10+25)
  5369  00351E  6EDA               	movwf	fsr2h,c
  5370  003520  0EFF               	movlw	-1
  5371  003522  006F FF8F FFDF     	movff	plusw1,indf2
  5372  003528                     l8721:
  5373                           
  5374                           ; BSR set to: 57
  5375                           ;gemsecs.c: 267:      if (rxData_l == sizeof(block10) + 1)
  5376  003528  0E0B               	movlw	11
  5377  00352A  182E               	xorwf	r_protocol@rxData_l,w,c
  5378  00352C  A4D8               	btfss	status,2,c
  5379  00352E  D004               	goto	l8725
  5380                           
  5381                           ; BSR set to: 57
  5382                           ;gemsecs.c: 268:       V.ack[2] = rxData;
  5383                           ;stkvar	_rxData @ sp[(-1)+0]
  5384  003530  0EFF               	movlw	-1
  5385  003532  006F FF8C  F0BF    	movff	plusw1,_V+95	;volatile
  5386  003538                     l8725:
  5387                           
  5388                           ; BSR set to: 57
  5389                           ;gemsecs.c: 269:      if (rxData_l == sizeof(block10) + 2)
  5390  003538  0E0C               	movlw	12
  5391  00353A  182E               	xorwf	r_protocol@rxData_l,w,c
  5392  00353C  A4D8               	btfss	status,2,c
  5393  00353E  D004               	goto	l8729
  5394                           
  5395                           ; BSR set to: 57
  5396                           ;gemsecs.c: 270:       V.ack[1] = rxData;
  5397                           ;stkvar	_rxData @ sp[(-1)+0]
  5398  003540  0EFF               	movlw	-1
  5399  003542  006F FF8C  F0BE    	movff	plusw1,_V+94	;volatile
  5400  003548                     l8729:
  5401                           
  5402                           ; BSR set to: 57
  5403                           ;gemsecs.c: 271:      if (rxData_l == sizeof(block10) + 3)
  5404  003548  0E0D               	movlw	13
  5405  00354A  182E               	xorwf	r_protocol@rxData_l,w,c
  5406  00354C  A4D8               	btfss	status,2,c
  5407  00354E  D004               	goto	l8733
  5408                           
  5409                           ; BSR set to: 57
  5410                           ;gemsecs.c: 272:       V.ack[0] = rxData;
  5411                           ;stkvar	_rxData @ sp[(-1)+0]
  5412  003550  0EFF               	movlw	-1
  5413  003552  006F FF8C  F0BD    	movff	plusw1,_V+93	;volatile
  5414  003558                     l8733:
  5415                           
  5416                           ; BSR set to: 57
  5417                           ;gemsecs.c: 274:      if (rxData_l <= r_block.length)
  5418  003558  502E               	movf	r_protocol@rxData_l,w,c
  5419  00355A  0100               	movlb	0	; () banked
  5420  00355C  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  5421  00355E  A0D8               	btfss	status,0,c
  5422  003560  D00D               	goto	l8737
  5423                           
  5424                           ; BSR set to: 0
  5425                           ;gemsecs.c: 275:       V.r_checksum = run_checksum(rxData, 0);
  5426  003562  0E00               	movlw	0
  5427  003564  6EE6               	movwf	postinc1,c
  5428                           
  5429                           ;stkvar	_rxData @ sp[(-2)+0]
  5430  003566  0EFE               	movlw	-2
  5431  003568  50E3               	movf	plusw1,w,c
  5432  00356A  6EE6               	movwf	postinc1,c
  5433  00356C  ECDC  F02F         	call	_run_checksum	;wreg free
  5434  003570  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  5435  003576  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  5436  00357C                     l8737:
  5437                           
  5438                           ;gemsecs.c: 277:      if (rxData_l == r_block.length + 1)
  5439  00357C  502E               	movf	r_protocol@rxData_l,w,c
  5440  00357E  6E47               	movwf	btemp+10,c
  5441  003580  6A48               	clrf	btemp+11,c
  5442  003582  0100               	movlb	0	; () banked
  5443  003584  51CE               	movf	(_r_block+12)& (0+255),w,b
  5444  003586  6E45               	movwf	btemp+8,c
  5445  003588  6A46               	clrf	btemp+9,c
  5446  00358A  0E01               	movlw	1
  5447  00358C  2645               	addwf	btemp+8,f,c
  5448  00358E  0E00               	movlw	0
  5449  003590  2246               	addwfc	btemp+9,f,c
  5450  003592  5047               	movf	btemp+10,w,c
  5451  003594  1845               	xorwf	btemp+8,w,c
  5452  003596  E109               	bnz	l8741
  5453  003598  5048               	movf	btemp+11,w,c
  5454  00359A  1846               	xorwf	btemp+9,w,c
  5455  00359C  A4D8               	btfss	status,2,c
  5456  00359E  D005               	goto	l8741
  5457                           
  5458                           ; BSR set to: 0
  5459                           ;gemsecs.c: 278:       H10[1].checksum = (uint16_t) rxData << 8;
  5460                           ;stkvar	_rxData @ sp[(-1)+0]
  5461  0035A0  0EFF               	movlw	-1
  5462  0035A2  50E3               	movf	plusw1,w,c
  5463  0035A4  0101               	movlb	1	; () banked
  5464  0035A6  6F15               	movwf	(_H10+14)& (0+255),b
  5465  0035A8  6B14               	clrf	(_H10+13)& (0+255),b
  5466  0035AA                     l8741:
  5467                           
  5468                           ;gemsecs.c: 279:      if (rxData_l == r_block.length + 2)
  5469  0035AA  502E               	movf	r_protocol@rxData_l,w,c
  5470  0035AC  6E47               	movwf	btemp+10,c
  5471  0035AE  6A48               	clrf	btemp+11,c
  5472  0035B0  0100               	movlb	0	; () banked
  5473  0035B2  51CE               	movf	(_r_block+12)& (0+255),w,b
  5474  0035B4  6E45               	movwf	btemp+8,c
  5475  0035B6  6A46               	clrf	btemp+9,c
  5476  0035B8  0E02               	movlw	2
  5477  0035BA  2645               	addwf	btemp+8,f,c
  5478  0035BC  0E00               	movlw	0
  5479  0035BE  2246               	addwfc	btemp+9,f,c
  5480  0035C0  5047               	movf	btemp+10,w,c
  5481  0035C2  1845               	xorwf	btemp+8,w,c
  5482  0035C4  E10A               	bnz	l8745
  5483  0035C6  5048               	movf	btemp+11,w,c
  5484  0035C8  1846               	xorwf	btemp+9,w,c
  5485  0035CA  A4D8               	btfss	status,2,c
  5486  0035CC  D006               	goto	l8745
  5487                           
  5488                           ; BSR set to: 0
  5489                           ;gemsecs.c: 280:       H10[1].checksum += rxData;
  5490                           ;stkvar	_rxData @ sp[(-1)+0]
  5491  0035CE  0EFF               	movlw	-1
  5492  0035D0  50E3               	movf	plusw1,w,c
  5493  0035D2  0101               	movlb	1	; () banked
  5494  0035D4  2714               	addwf	(_H10+13)& (0+255),f,b
  5495  0035D6  0E00               	movlw	0
  5496  0035D8  2315               	addwfc	(_H10+14)& (0+255),f,b
  5497  0035DA                     l8745:
  5498                           
  5499                           ;gemsecs.c: 282:      rxData_l++;
  5500  0035DA  2A2E               	incf	r_protocol@rxData_l,f,c
  5501                           
  5502                           ;gemsecs.c: 283:      b_block[sizeof(header254) - rxData_l] = rxData;
  5503                           ;stkvar	_rxData @ sp[(-1)+0]
  5504  0035DC  502E               	movf	r_protocol@rxData_l,w,c
  5505  0035DE  5C23               	subwf	r_protocol@b_block,w,c
  5506  0035E0  6E47               	movwf	btemp+10,c
  5507  0035E2  0E00               	movlw	0
  5508  0035E4  5824               	subwfb	r_protocol@b_block+1,w,c
  5509  0035E6  6E48               	movwf	btemp+11,c
  5510  0035E8  0E01               	movlw	1
  5511  0035EA  2447               	addwf	btemp+10,w,c
  5512  0035EC  6ED9               	movwf	fsr2l,c
  5513  0035EE  0E01               	movlw	1
  5514  0035F0  2048               	addwfc	btemp+11,w,c
  5515  0035F2  6EDA               	movwf	fsr2h,c
  5516  0035F4  0EFF               	movlw	-1
  5517  0035F6  006F FF8F FFDF     	movff	plusw1,indf2
  5518                           
  5519                           ;gemsecs.c: 284:      if (rxData_l > (r_block.length + 2)) {
  5520  0035FC  502E               	movf	r_protocol@rxData_l,w,c
  5521  0035FE  6E47               	movwf	btemp+10,c
  5522  003600  6A48               	clrf	btemp+11,c
  5523  003602  0100               	movlb	0	; () banked
  5524  003604  51CE               	movf	(_r_block+12)& (0+255),w,b
  5525  003606  6E45               	movwf	btemp+8,c
  5526  003608  6A46               	clrf	btemp+9,c
  5527  00360A  0E02               	movlw	2
  5528  00360C  2645               	addwf	btemp+8,f,c
  5529  00360E  0E00               	movlw	0
  5530  003610  2246               	addwfc	btemp+9,f,c
  5531  003612  5047               	movf	btemp+10,w,c
  5532  003614  5C45               	subwf	btemp+8,w,c
  5533  003616  5046               	movf	btemp+9,w,c
  5534  003618  0A80               	xorlw	128
  5535  00361A  6E3D               	movwf	btemp,c
  5536  00361C  5048               	movf	btemp+11,w,c
  5537  00361E  0A80               	xorlw	128
  5538  003620  583D               	subwfb	btemp,w,c
  5539  003622  B0D8               	btfsc	status,0,c
  5540  003624  D09D               	goto	l8807
  5541                           
  5542                           ; BSR set to: 0
  5543                           ;gemsecs.c: 285:       if (V.r_checksum == H10[1].checksum) {
  5544  003626  0101               	movlb	1	; () banked
  5545  003628  5114               	movf	(_H10+13)& (0+255),w,b
  5546  00362A  0100               	movlb	0	; () banked
  5547  00362C  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  5548  00362E  E10E               	bnz	l8757
  5549  003630  0101               	movlb	1	; () banked
  5550  003632  5115               	movf	(_H10+14)& (0+255),w,b
  5551  003634  0100               	movlb	0	; () banked
  5552  003636  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  5553  003638  A4D8               	btfss	status,2,c
  5554  00363A  D008               	goto	l8757
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;gemsecs.c: 286:        *r_link = LINK_STATE_ACK;
  5558                           ;stkvar	_r_link @ sp[(-1)+-1]
  5559  00363C  0EFE               	movlw	-2
  5560  00363E  50E3               	movf	plusw1,w,c
  5561  003640  6ED9               	movwf	fsr2l,c
  5562  003642  6ADA               	clrf	fsr2h,c
  5563  003644  0E03               	movlw	3
  5564  003646  D052               	goto	L13
  5565  003648                     l8755:
  5566  003648  ECEA  F02E         	call	_UART1_Read	;wreg free
  5567  00364C                     l8757:
  5568                           
  5569                           ;gemsecs.c: 288:        while (UART1_is_rx_ready())
  5570  00364C  ECCD  F032         	call	_UART1_is_rx_ready	;wreg free
  5571  003650  503D               	movf	btemp,w,c
  5572  003652  A4D8               	btfss	status,2,c
  5573  003654  D7F9               	goto	l8755
  5574                           
  5575                           ;gemsecs.c: 290:        WaitMs(500);
  5576  003656  0EF4               	movlw	244
  5577  003658  6EE6               	movwf	postinc1,c
  5578  00365A  0E01               	movlw	1
  5579  00365C  6EE6               	movwf	postinc1,c
  5580  00365E  EC25  F02F         	call	_WaitMs	;wreg free
  5581                           
  5582                           ;gemsecs.c: 291:        V.error = LINK_ERROR_CHECKSUM;
  5583  003662  0E0F               	movlw	15
  5584  003664  0100               	movlb	0	; () banked
  5585  003666  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  5586                           
  5587                           ; BSR set to: 0
  5588                           ;gemsecs.c: 292:        V.checksum_error++;
  5589  003668  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  5590  00366A  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  5591                           
  5592                           ; BSR set to: 0
  5593                           ;gemsecs.c: 293:        V.failed_receive = 2;
  5594  00366C  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  5595  00366E  0BF0               	andlw	-16
  5596  003670  0902               	iorlw	2
  5597  003672  D714               	goto	L14
  5598  003674                     l8769:
  5599                           
  5600                           ;gemsecs.c: 302:   V.stream = H10[1].block.block.stream;
  5601  003674  0101               	movlb	1	; () banked
  5602  003676  511D               	movf	(_H10+22)& (0+255),w,b
  5603  003678  0B7F               	andlw	127
  5604  00367A  0100               	movlb	0	; () banked
  5605  00367C  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  5606                           
  5607                           ; BSR set to: 0
  5608                           ;gemsecs.c: 303:   V.function = H10[1].block.block.function;
  5609  00367E  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  5610                           
  5611                           ; BSR set to: 0
  5612                           ;gemsecs.c: 304:   V.systemb = H10[1].block.block.systemb;
  5613  003682  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  5614  003686  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  5615  00368A  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  5616  00368E  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;gemsecs.c: 305:   V.rbit = H10[1].block.block.rbit;
  5620  003692  0101               	movlb	1	; () banked
  5621  003694  AF1F               	btfss	(_H10+24)& (0+255),7,b
  5622  003696  D003               	bra	u5435
  5623  003698  0100               	movlb	0	; () banked
  5624  00369A  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  5625  00369C  D002               	bra	u5437
  5626  00369E                     u5435:
  5627  00369E  0100               	movlb	0	; () banked
  5628  0036A0  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  5629  0036A2                     u5437:
  5630                           
  5631                           ; BSR set to: 0
  5632                           ;gemsecs.c: 306:   V.wbit = H10[1].block.block.wbit;
  5633  0036A2  0101               	movlb	1	; () banked
  5634  0036A4  AF1D               	btfss	(_H10+22)& (0+255),7,b
  5635  0036A6  D003               	bra	u5445
  5636  0036A8  0100               	movlb	0	; () banked
  5637  0036AA  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  5638  0036AC  D002               	bra	u5447
  5639  0036AE                     u5445:
  5640  0036AE  0100               	movlb	0	; () banked
  5641  0036B0  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  5642  0036B2                     u5447:
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;gemsecs.c: 307:   V.ebit = H10[1].block.block.ebit;
  5646  0036B2  0101               	movlb	1	; () banked
  5647  0036B4  AF1B               	btfss	(_H10+20)& (0+255),7,b
  5648  0036B6  D003               	bra	u5455
  5649  0036B8  0100               	movlb	0	; () banked
  5650  0036BA  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  5651  0036BC  D002               	bra	u5457
  5652  0036BE                     u5455:
  5653  0036BE  0100               	movlb	0	; () banked
  5654  0036C0  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  5655  0036C2                     u5457:
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;gemsecs.c: 308:   V.g_state = secs_gem_state(V.stream, V.function);
  5659  0036C2  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  5660  0036C4  6EE6               	movwf	postinc1,c
  5661  0036C6  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  5662  0036C8  6EE6               	movwf	postinc1,c
  5663  0036CA  EC07  F029         	call	_secs_gem_state	;wreg free
  5664  0036CE  503D               	movf	btemp,w,c
  5665  0036D0  0100               	movlb	0	; () banked
  5666  0036D2  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  5667                           
  5668                           ; BSR set to: 0
  5669                           ;gemsecs.c: 309:   UART1_Write(0x06);
  5670  0036D4  0E06               	movlw	6
  5671  0036D6  6EE6               	movwf	postinc1,c
  5672  0036D8  ECAC  F02E         	call	_UART1_Write	;wreg free
  5673                           
  5674                           ; BSR set to: 57
  5675                           ;gemsecs.c: 310:   V.failed_receive = 0;
  5676  0036DC  0EF0               	movlw	-16
  5677  0036DE  0100               	movlb	0	; () banked
  5678  0036E0  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;gemsecs.c: 311:   *r_link = LINK_STATE_DONE;
  5682                           ;stkvar	_r_link @ sp[(-1)+-1]
  5683  0036E2  0EFE               	movlw	-2
  5684  0036E4  50E3               	movf	plusw1,w,c
  5685  0036E6  6ED9               	movwf	fsr2l,c
  5686  0036E8  6ADA               	clrf	fsr2h,c
  5687  0036EA  0E04               	movlw	4
  5688  0036EC                     L13:
  5689  0036EC  6EDF               	movwf	indf2,c
  5690                           
  5691                           ;gemsecs.c: 312:   break;
  5692  0036EE  D038               	goto	l8807
  5693  0036F0                     l8789:
  5694                           
  5695                           ;gemsecs.c: 314:   UART1_Write(0x15);
  5696  0036F0  0E15               	movlw	21
  5697  0036F2  6EE6               	movwf	postinc1,c
  5698  0036F4  ECAC  F02E         	call	_UART1_Write	;wreg free
  5699                           
  5700                           ; BSR set to: 57
  5701                           ;gemsecs.c: 315:   *r_link = LINK_STATE_ERROR;
  5702                           ;stkvar	_r_link @ sp[(-1)+-1]
  5703  0036F8  0EFE               	movlw	-2
  5704  0036FA  50E3               	movf	plusw1,w,c
  5705  0036FC  6ED9               	movwf	fsr2l,c
  5706  0036FE  6ADA               	clrf	fsr2h,c
  5707  003700  0E06               	movlw	6
  5708  003702  6EDF               	movwf	indf2,c
  5709                           
  5710                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  5711  003704  D002               	goto	l8795
  5712  003706                     l8793:
  5713                           
  5714                           ; BSR set to: 57
  5715                           ;gemsecs.c: 317:    UART1_Read();
  5716  003706  ECEA  F02E         	call	_UART1_Read	;wreg free
  5717  00370A                     l8795:
  5718                           
  5719                           ; BSR set to: 57
  5720                           ;gemsecs.c: 316:   while ((uart1RxCount)) {
  5721  00370A  5037               	movf	_uart1RxCount,w,c	;volatile
  5722  00370C  A4D8               	btfss	status,2,c
  5723  00370E  D7FB               	goto	l8793
  5724                           
  5725                           ; BSR set to: 57
  5726                           ;gemsecs.c: 319:   retry = 3;
  5727  003710  0E03               	movlw	3
  5728  003712  6E5D               	movwf	r_protocol@retry,c
  5729                           
  5730                           ;gemsecs.c: 320:   break;
  5731  003714  D025               	goto	l8807
  5732  003716                     l8799:
  5733                           
  5734                           ;gemsecs.c: 324:   V.failed_receive = 0;
  5735  003716  0EF0               	movlw	-16
  5736  003718  0100               	movlb	0	; () banked
  5737  00371A  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  5738  00371C  D6C6               	goto	l8701
  5739  00371E                     l8805:
  5740                           
  5741                           ;stkvar	_r_link @ sp[(-1)+-1]
  5742  00371E  0EFE               	movlw	-2
  5743  003720  50E3               	movf	plusw1,w,c
  5744  003722  6ED9               	movwf	fsr2l,c
  5745  003724  6ADA               	clrf	fsr2h,c
  5746  003726  50DF               	movf	indf2,w,c
  5747  003728  6E47               	movwf	btemp+10,c
  5748  00372A  6A48               	clrf	btemp+11,c
  5749                           
  5750                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5751                           ; Switch size 1, requested type "simple"
  5752                           ; Number of cases is 1, Range of values is 0 to 0
  5753                           ; switch strategies available:
  5754                           ; Name         Instructions Cycles
  5755                           ; simple_byte            4     3 (average)
  5756                           ;	Chosen strategy is simple_byte
  5757  00372C  5048               	movf	btemp+11,w,c
  5758  00372E  0A00               	xorlw	0	; case 0
  5759  003730  A4D8               	btfss	status,2,c
  5760  003732  D6BB               	goto	l8701
  5761                           
  5762                           ; Switch size 1, requested type "simple"
  5763                           ; Number of cases is 7, Range of values is 0 to 6
  5764                           ; switch strategies available:
  5765                           ; Name         Instructions Cycles
  5766                           ; simple_byte           22    12 (average)
  5767                           ;	Chosen strategy is simple_byte
  5768  003734  5047               	movf	btemp+10,w,c
  5769  003736  0A00               	xorlw	0	; case 0
  5770  003738  B4D8               	btfsc	status,2,c
  5771  00373A  D66A               	goto	l8673
  5772  00373C  0A01               	xorlw	1	; case 1
  5773  00373E  B4D8               	btfsc	status,2,c
  5774  003740  D683               	goto	l1636
  5775  003742  0A03               	xorlw	3	; case 2
  5776  003744  B4D8               	btfsc	status,2,c
  5777  003746  D697               	goto	l8691
  5778  003748  0A01               	xorlw	1	; case 3
  5779  00374A  B4D8               	btfsc	status,2,c
  5780  00374C  D793               	goto	l8769
  5781  00374E  0A07               	xorlw	7	; case 4
  5782  003750  B4D8               	btfsc	status,2,c
  5783  003752  D7E1               	goto	l8799
  5784  003754  0A01               	xorlw	1	; case 5
  5785  003756  B4D8               	btfsc	status,2,c
  5786  003758  D7CB               	goto	l8789
  5787  00375A  0A03               	xorlw	3	; case 6
  5788  00375C  A4D8               	btfss	status,2,c
  5789  00375E  D6A5               	goto	l8701
  5790  003760                     l8807:
  5791                           
  5792                           ;gemsecs.c: 331:  return *r_link;
  5793                           ;stkvar	_r_link @ sp[(-1)+-1]
  5794  003760  0EFE               	movlw	-2
  5795  003762  50E3               	movf	plusw1,w,c
  5796  003764  6ED9               	movwf	fsr2l,c
  5797  003766  6ADA               	clrf	fsr2h,c
  5798  003768  50DF               	movf	indf2,w,c
  5799  00376A  6E3D               	movwf	btemp,c
  5800                           
  5801                           ; _r_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5802  00376C  52E5               	movf	postdec1,f,c
  5803  00376E  52E5               	movf	postdec1,f,c
  5804  003770  0012               	return		;funcret
  5805  003772                     __end_of_r_protocol:
  5806                           	opt callstack 0
  5807                           
  5808 ;; *************** function _UART1_Write *****************
  5809 ;; Defined at:
  5810 ;;		line 179 in file "mcc_generated_files/uart1.c"
  5811 ;; Parameters:    Size  Location     Type
  5812 ;;  txData          1  [STACK] unsigned char 
  5813 ;; Auto vars:     Size  Location     Type
  5814 ;;		None
  5815 ;; Return value:  Size  Location     Type
  5816 ;;                  1  [STACK] void 
  5817 ;; Registers used:
  5818 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5819 ;; Tracked objects:
  5820 ;;		On entry : 0/0
  5821 ;;		On exit  : 3F/39
  5822 ;;		Unchanged: 0/0
  5823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5826 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5827 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5828 ;;Total ram usage:        0 bytes
  5829 ;; Hardware stack levels used:    1
  5830 ;; Hardware stack levels required when called:    3
  5831 ;; This function calls:
  5832 ;;		Nothing
  5833 ;; This function is called by:
  5834 ;;		_r_protocol
  5835 ;;		_t_protocol
  5836 ;;		_secs_send
  5837 ;; This function uses a reentrant model
  5838 ;;
  5839                           
  5840                           	psect	text13
  5841  005D58                     __ptext13:
  5842                           	opt callstack 0
  5843  005D58                     _UART1_Write:
  5844                           	opt callstack 25
  5845                           
  5846                           ;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5847                           
  5848                           ;mcc_generated_files/uart1.c: 179: void UART1_Write(uint8_t txData);mcc_generated_files/
      +                          uart1.c: 180: {;mcc_generated_files/uart1.c: 181:  while (0 == uart1TxBufferRemaining) {
  5849                           
  5850                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5851                           ;incstack = 0
  5852  005D58  503A               	movf	_uart1TxBufferRemaining,w,c	;volatile
  5853  005D5A  B4D8               	btfsc	status,2,c
  5854  005D5C  D7FD               	goto	_UART1_Write
  5855                           
  5856                           ;mcc_generated_files/uart1.c: 184:  if (0 == PIE3bits.U1TXIE) {
  5857  005D5E  0139               	movlb	57	; () banked
  5858  005D60  B993               	btfsc	147,4,b	;volatile
  5859  005D62  D005               	goto	l579
  5860                           
  5861                           ; BSR set to: 57
  5862                           ;mcc_generated_files/uart1.c: 185:   U1TXB = txData;
  5863                           ;stkvar	_txData @ sp[(0)+-1]
  5864  005D64  0EFF               	movlw	-1
  5865  005D66  006F FF8F FDEA     	movff	plusw1,15850	;volatile
  5866                           
  5867                           ;mcc_generated_files/uart1.c: 186:  } else {
  5868  005D6C  D011               	goto	l5775
  5869  005D6E                     l579:
  5870                           
  5871                           ; BSR set to: 57
  5872                           ;mcc_generated_files/uart1.c: 187:   PIE3bits.U1TXIE = 0;
  5873  005D6E  9993               	bcf	147,4,b	;volatile
  5874                           
  5875                           ; BSR set to: 57
  5876                           ;mcc_generated_files/uart1.c: 188:   uart1TxBuffer[uart1TxHead++] = txData;
  5877                           ;stkvar	_txData @ sp[(0)+-1]
  5878  005D70  0E80               	movlw	low _uart1TxBuffer
  5879  005D72  243C               	addwf	_uart1TxHead,w,c	;volatile
  5880  005D74  6ED9               	movwf	fsr2l,c
  5881  005D76  6ADA               	clrf	fsr2h,c
  5882  005D78  0E02               	movlw	high _uart1TxBuffer
  5883  005D7A  22DA               	addwfc	fsr2h,f,c
  5884  005D7C  0EFF               	movlw	-1
  5885  005D7E  006F FF8F FFDF     	movff	plusw1,indf2
  5886                           
  5887                           ; BSR set to: 57
  5888  005D84  2A3C               	incf	_uart1TxHead,f,c	;volatile
  5889                           
  5890                           ; BSR set to: 57
  5891                           ;mcc_generated_files/uart1.c: 189:   if (sizeof(uart1TxBuffer) <= uart1TxHead) {
  5892  005D86  0E3F               	movlw	63
  5893  005D88  643C               	cpfsgt	_uart1TxHead,c
  5894  005D8A  D001               	goto	l5773
  5895                           
  5896                           ; BSR set to: 57
  5897                           ;mcc_generated_files/uart1.c: 190:    uart1TxHead = 0;
  5898  005D8C  6A3C               	clrf	_uart1TxHead,c	;volatile
  5899  005D8E                     l5773:
  5900                           
  5901                           ; BSR set to: 57
  5902                           ;mcc_generated_files/uart1.c: 192:   uart1TxBufferRemaining--;
  5903  005D8E  063A               	decf	_uart1TxBufferRemaining,f,c	;volatile
  5904  005D90                     l5775:
  5905                           
  5906                           ; BSR set to: 57
  5907                           ;mcc_generated_files/uart1.c: 194:  PIE3bits.U1TXIE = 1;
  5908  005D90  8993               	bsf	147,4,b	;volatile
  5909                           
  5910                           ; BSR set to: 57
  5911                           ; _UART1_Write: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, a
      +                          rgsize = 1, vargsize = 0
  5912  005D92  52E5               	movf	postdec1,f,c
  5913  005D94  0012               	return		;funcret
  5914  005D96                     __end_of_UART1_Write:
  5915                           	opt callstack 0
  5916                           
  5917 ;; *************** function _m_protocol *****************
  5918 ;; Defined at:
  5919 ;;		line 47 in file "gemsecs.c"
  5920 ;; Parameters:    Size  Location     Type
  5921 ;;  m_link          1  [STACK] PTR enum E16172
  5922 ;;		 -> V(98), 
  5923 ;; Auto vars:     Size  Location     Type
  5924 ;;  rxData          1  [STACK] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  1  [STACK] enum E16912
  5927 ;; Registers used:
  5928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, p
      +rodh
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5938 ;;Total ram usage:        0 bytes
  5939 ;; Hardware stack levels used:    1
  5940 ;; Hardware stack levels required when called:    5
  5941 ;; This function calls:
  5942 ;;		_StartTimer
  5943 ;;		_TimerDone
  5944 ;;		_UART1_Read
  5945 ;;		_UART1_is_rx_ready
  5946 ;;		_UART2_Read
  5947 ;;		_UART2_is_rx_ready
  5948 ;;		_WaitMs
  5949 ;;		_run_checksum
  5950 ;;		_secs_gem_state
  5951 ;; This function is called by:
  5952 ;;		_main
  5953 ;; This function uses a reentrant model
  5954 ;;
  5955                           
  5956                           	psect	text14
  5957  002AF4                     __ptext14:
  5958                           	opt callstack 0
  5959  002AF4                     _m_protocol:
  5960                           	opt callstack 0
  5961                           
  5962                           ; BSR set to: 57
  5963                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5964  002AF4  52E6               	movf	postinc1,f,c
  5965                           
  5966                           ;gemsecs.c: 47: LINK_STATES m_protocol(LINK_STATES *m_link);gemsecs.c: 48: {;gemsecs.c: 
      +                          49:  uint8_t rxData;;gemsecs.c: 50:  static uint8_t rxData_l = 0;;gemsecs.c: 52:  switch
      +                           (*m_link) {
  5967                           
  5968                           ;incstack = 0
  5969  002AF6  D220               	goto	l9109
  5970  002AF8                     l8931:
  5971                           
  5972                           ;gemsecs.c: 57:   if (UART1_is_rx_ready()) {
  5973  002AF8  ECCD  F032         	call	_UART1_is_rx_ready	;wreg free
  5974  002AFC  503D               	movf	btemp,w,c
  5975  002AFE  B4D8               	btfsc	status,2,c
  5976  002B00  D022               	goto	l8945
  5977                           
  5978                           ;gemsecs.c: 58:    rxData = UART1_Read();
  5979  002B02  ECEA  F02E         	call	_UART1_Read	;wreg free
  5980                           
  5981                           ;stkvar	_rxData @ sp[(-1)+0]
  5982  002B06  0EFF               	movlw	-1
  5983  002B08  0060  F0F7  FFE3   	movff	btemp,plusw1
  5984                           
  5985                           ; BSR set to: 57
  5986                           ;gemsecs.c: 59:    if (rxData == 0x05) {
  5987                           ;stkvar	_rxData @ sp[(-1)+0]
  5988  002B0E  0EFF               	movlw	-1
  5989  002B10  006F FF8C  F03D    	movff	plusw1,btemp
  5990  002B16  0E05               	movlw	5
  5991  002B18  183D               	xorwf	btemp,w,c
  5992  002B1A  A4D8               	btfss	status,2,c
  5993  002B1C  D014               	goto	l8945
  5994                           
  5995                           ; BSR set to: 57
  5996                           ;gemsecs.c: 60:     V.uart = 1;
  5997  002B1E  0E01               	movlw	1
  5998  002B20  0100               	movlb	0	; () banked
  5999  002B22  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  6000                           
  6001                           ; BSR set to: 0
  6002                           ;gemsecs.c: 61:     StartTimer(TMR_T2, 2000);
  6003  002B24  0ED0               	movlw	208
  6004  002B26  6EE6               	movwf	postinc1,c
  6005  002B28  0E07               	movlw	7
  6006  002B2A  6EE6               	movwf	postinc1,c
  6007  002B2C  0E02               	movlw	2
  6008  002B2E  6EE6               	movwf	postinc1,c
  6009  002B30  EC4D  F02E         	call	_StartTimer	;wreg free
  6010                           
  6011                           ;gemsecs.c: 62:     V.error = LINK_ERROR_NONE;
  6012  002B34  0E0A               	movlw	10
  6013  002B36  0100               	movlb	0	; () banked
  6014  002B38  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6015                           
  6016                           ; BSR set to: 0
  6017                           ;gemsecs.c: 63:     *m_link = LINK_STATE_ENQ;
  6018                           ;stkvar	_m_link @ sp[(-1)+-1]
  6019  002B3A  0EFE               	movlw	-2
  6020  002B3C  50E3               	movf	plusw1,w,c
  6021  002B3E  6ED9               	movwf	fsr2l,c
  6022  002B40  6ADA               	clrf	fsr2h,c
  6023  002B42  0E01               	movlw	1
  6024  002B44  6EDF               	movwf	indf2,c
  6025  002B46                     l8945:
  6026                           
  6027                           ;gemsecs.c: 66:   if (UART2_is_rx_ready()) {
  6028  002B46  ECC9  F032         	call	_UART2_is_rx_ready	;wreg free
  6029  002B4A  503D               	movf	btemp,w,c
  6030  002B4C  B4D8               	btfsc	status,2,c
  6031  002B4E  D215               	goto	l9111
  6032                           
  6033                           ;gemsecs.c: 67:    rxData = UART2_Read();
  6034  002B50  ECCB  F02E         	call	_UART2_Read	;wreg free
  6035                           
  6036                           ;stkvar	_rxData @ sp[(-1)+0]
  6037  002B54  0EFF               	movlw	-1
  6038  002B56  0060  F0F7  FFE3   	movff	btemp,plusw1
  6039                           
  6040                           ; BSR set to: 57
  6041                           ;gemsecs.c: 68:    if (rxData == 0x05) {
  6042                           ;stkvar	_rxData @ sp[(-1)+0]
  6043  002B5C  0EFF               	movlw	-1
  6044  002B5E  006F FF8C  F03D    	movff	plusw1,btemp
  6045  002B64  0E05               	movlw	5
  6046  002B66  183D               	xorwf	btemp,w,c
  6047  002B68  A4D8               	btfss	status,2,c
  6048  002B6A  D207               	goto	l9111
  6049                           
  6050                           ; BSR set to: 57
  6051                           ;gemsecs.c: 69:     V.uart = 2;
  6052  002B6C  0E02               	movlw	2
  6053  002B6E  0100               	movlb	0	; () banked
  6054  002B70  6FC0               	movwf	(_V+96)& (0+255),b	;volatile
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;gemsecs.c: 70:     StartTimer(TMR_T2, 2000);
  6058  002B72  0ED0               	movlw	208
  6059  002B74  6EE6               	movwf	postinc1,c
  6060  002B76  0E07               	movlw	7
  6061  002B78  6EE6               	movwf	postinc1,c
  6062  002B7A  0E02               	movlw	2
  6063  002B7C  6EE6               	movwf	postinc1,c
  6064  002B7E  EC4D  F02E         	call	_StartTimer	;wreg free
  6065                           
  6066                           ;gemsecs.c: 71:     V.error = LINK_ERROR_NONE;
  6067  002B82  0E0A               	movlw	10
  6068  002B84  0100               	movlb	0	; () banked
  6069  002B86  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6070                           
  6071                           ; BSR set to: 0
  6072                           ;gemsecs.c: 72:     *m_link = LINK_STATE_ENQ;
  6073                           ;stkvar	_m_link @ sp[(-1)+-1]
  6074  002B88  0EFE               	movlw	-2
  6075  002B8A  50E3               	movf	plusw1,w,c
  6076  002B8C  6ED9               	movwf	fsr2l,c
  6077  002B8E  6ADA               	clrf	fsr2h,c
  6078  002B90  0E01               	movlw	1
  6079  002B92  D1D0               	goto	L20
  6080  002B94                     l1581:
  6081                           
  6082                           ;gemsecs.c: 77:   rxData_l = 0;
  6083  002B94  6A2F               	clrf	m_protocol@rxData_l,c
  6084                           
  6085                           ;gemsecs.c: 91:   V.error = LINK_ERROR_NONE;
  6086  002B96  0E0A               	movlw	10
  6087  002B98  0100               	movlb	0	; () banked
  6088  002B9A  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;gemsecs.c: 92:   *m_link = LINK_STATE_EOT;
  6092                           ;stkvar	_m_link @ sp[(-1)+-1]
  6093  002B9C  0EFE               	movlw	-2
  6094  002B9E  50E3               	movf	plusw1,w,c
  6095  002BA0  6ED9               	movwf	fsr2l,c
  6096  002BA2  6ADA               	clrf	fsr2h,c
  6097  002BA4  0E02               	movlw	2
  6098  002BA6  6EDF               	movwf	indf2,c
  6099                           
  6100                           ; BSR set to: 0
  6101                           ;gemsecs.c: 93:   StartTimer(TMR_T2, 2000);
  6102  002BA8  0ED0               	movlw	208
  6103  002BAA  6EE6               	movwf	postinc1,c
  6104  002BAC  0E07               	movlw	7
  6105  002BAE  6EE6               	movwf	postinc1,c
  6106  002BB0  0E02               	movlw	2
  6107  002BB2  6EE6               	movwf	postinc1,c
  6108  002BB4  EC4D  F02E         	call	_StartTimer	;wreg free
  6109                           
  6110                           ;gemsecs.c: 94:   break;
  6111  002BB8  D1E0               	goto	l9111
  6112  002BBA                     l8965:
  6113                           
  6114                           ;gemsecs.c: 96:   if (TimerDone(TMR_T2)) {
  6115  002BBA  0E02               	movlw	2
  6116  002BBC  6EE6               	movwf	postinc1,c
  6117  002BBE  ECF0  F02F         	call	_TimerDone	;wreg free
  6118  002BC2  503D               	movf	btemp,w,c
  6119  002BC4  B4D8               	btfsc	status,2,c
  6120  002BC6  D00F               	goto	l8975
  6121                           
  6122                           ;gemsecs.c: 97:    V.error = LINK_ERROR_T2;
  6123  002BC8  0E0C               	movlw	12
  6124  002BCA  0100               	movlb	0	; () banked
  6125  002BCC  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6126                           
  6127                           ; BSR set to: 0
  6128                           ;gemsecs.c: 98:    V.timer_error++;
  6129  002BCE  4BB9               	infsnz	(_V+89)& (0+255),f,b	;volatile
  6130  002BD0  2BBA               	incf	(_V+90)& (0+255),f,b	;volatile
  6131                           
  6132                           ; BSR set to: 0
  6133                           ;gemsecs.c: 99:    V.failed_receive = 2;
  6134  002BD2  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  6135  002BD4  0BF0               	andlw	-16
  6136  002BD6  0902               	iorlw	2
  6137  002BD8  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  6138                           
  6139                           ; BSR set to: 0
  6140                           ;gemsecs.c: 100:    *m_link = LINK_STATE_NAK;
  6141                           ;stkvar	_m_link @ sp[(-1)+-1]
  6142  002BDA  0EFE               	movlw	-2
  6143  002BDC  50E3               	movf	plusw1,w,c
  6144  002BDE  6ED9               	movwf	fsr2l,c
  6145  002BE0  6ADA               	clrf	fsr2h,c
  6146  002BE2  0E05               	movlw	5
  6147  002BE4  D1A7               	goto	L20
  6148  002BE6                     l8975:
  6149                           
  6150                           ;gemsecs.c: 102:    if (UART1_is_rx_ready()) {
  6151  002BE6  ECCD  F032         	call	_UART1_is_rx_ready	;wreg free
  6152  002BEA  503D               	movf	btemp,w,c
  6153  002BEC  B4D8               	btfsc	status,2,c
  6154  002BEE  D0A8               	goto	l9025
  6155                           
  6156                           ;gemsecs.c: 103:     rxData = UART1_Read();
  6157  002BF0  ECEA  F02E         	call	_UART1_Read	;wreg free
  6158                           
  6159                           ;stkvar	_rxData @ sp[(-1)+0]
  6160  002BF4  0EFF               	movlw	-1
  6161  002BF6  0060  F0F7  FFE3   	movff	btemp,plusw1
  6162                           
  6163                           ; BSR set to: 57
  6164                           ;gemsecs.c: 104:     if (rxData_l == 0) {
  6165  002BFC  502F               	movf	m_protocol@rxData_l,w,c
  6166  002BFE  A4D8               	btfss	status,2,c
  6167  002C00  D00C               	goto	l8987
  6168                           
  6169                           ; BSR set to: 57
  6170                           ;gemsecs.c: 105:      r_block.length = rxData;
  6171                           ;stkvar	_rxData @ sp[(-1)+0]
  6172  002C02  0EFF               	movlw	-1
  6173  002C04  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  6174                           
  6175                           ; BSR set to: 57
  6176                           ;gemsecs.c: 106:      run_checksum(0, 1);
  6177  002C0A  0E01               	movlw	1
  6178  002C0C  6EE6               	movwf	postinc1,c
  6179  002C0E  0E00               	movlw	0
  6180  002C10  6EE6               	movwf	postinc1,c
  6181  002C12  ECDC  F02F         	call	_run_checksum	;wreg free
  6182                           
  6183                           ;gemsecs.c: 107:      rxData_l++;
  6184  002C16  2A2F               	incf	m_protocol@rxData_l,f,c
  6185                           
  6186                           ;gemsecs.c: 108:     } else {
  6187  002C18  D093               	goto	l9025
  6188  002C1A                     l8987:
  6189                           
  6190                           ; BSR set to: 57
  6191                           ;gemsecs.c: 112:      if (rxData_l <= sizeof(block10))
  6192  002C1A  0E0B               	movlw	11
  6193  002C1C  602F               	cpfslt	m_protocol@rxData_l,c
  6194  002C1E  D00C               	goto	l8991
  6195                           
  6196                           ; BSR set to: 57
  6197                           ;gemsecs.c: 113:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  6198                           ;stkvar	_rxData @ sp[(-1)+0]
  6199  002C20  502F               	movf	m_protocol@rxData_l,w,c
  6200  002C22  0820               	sublw	low (_H10+25)
  6201  002C24  6ED9               	movwf	fsr2l,c
  6202  002C26  0E00               	movlw	0
  6203  002C28  A0D8               	btfss	status,0,c
  6204  002C2A  2AE8               	incf	wreg,f,c
  6205  002C2C  0801               	sublw	high (_H10+25)
  6206  002C2E  6EDA               	movwf	fsr2h,c
  6207  002C30  0EFF               	movlw	-1
  6208  002C32  006F FF8F FFDF     	movff	plusw1,indf2
  6209  002C38                     l8991:
  6210                           
  6211                           ; BSR set to: 57
  6212                           ;gemsecs.c: 114:      if (rxData_l <= r_block.length)
  6213  002C38  502F               	movf	m_protocol@rxData_l,w,c
  6214  002C3A  0100               	movlb	0	; () banked
  6215  002C3C  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  6216  002C3E  A0D8               	btfss	status,0,c
  6217  002C40  D00D               	goto	l8995
  6218                           
  6219                           ; BSR set to: 0
  6220                           ;gemsecs.c: 115:       V.r_checksum = run_checksum(rxData, 0);
  6221  002C42  0E00               	movlw	0
  6222  002C44  6EE6               	movwf	postinc1,c
  6223                           
  6224                           ;stkvar	_rxData @ sp[(-2)+0]
  6225  002C46  0EFE               	movlw	-2
  6226  002C48  50E3               	movf	plusw1,w,c
  6227  002C4A  6EE6               	movwf	postinc1,c
  6228  002C4C  ECDC  F02F         	call	_run_checksum	;wreg free
  6229  002C50  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  6230  002C56  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  6231  002C5C                     l8995:
  6232                           
  6233                           ;gemsecs.c: 117:      if (rxData_l == r_block.length + 1)
  6234  002C5C  502F               	movf	m_protocol@rxData_l,w,c
  6235  002C5E  6E47               	movwf	btemp+10,c
  6236  002C60  6A48               	clrf	btemp+11,c
  6237  002C62  0100               	movlb	0	; () banked
  6238  002C64  51CE               	movf	(_r_block+12)& (0+255),w,b
  6239  002C66  6E45               	movwf	btemp+8,c
  6240  002C68  6A46               	clrf	btemp+9,c
  6241  002C6A  0E01               	movlw	1
  6242  002C6C  2645               	addwf	btemp+8,f,c
  6243  002C6E  0E00               	movlw	0
  6244  002C70  2246               	addwfc	btemp+9,f,c
  6245  002C72  5047               	movf	btemp+10,w,c
  6246  002C74  1845               	xorwf	btemp+8,w,c
  6247  002C76  E109               	bnz	l8999
  6248  002C78  5048               	movf	btemp+11,w,c
  6249  002C7A  1846               	xorwf	btemp+9,w,c
  6250  002C7C  A4D8               	btfss	status,2,c
  6251  002C7E  D005               	goto	l8999
  6252                           
  6253                           ; BSR set to: 0
  6254                           ;gemsecs.c: 118:       H10[1].checksum = (uint16_t) rxData << 8;
  6255                           ;stkvar	_rxData @ sp[(-1)+0]
  6256  002C80  0EFF               	movlw	-1
  6257  002C82  50E3               	movf	plusw1,w,c
  6258  002C84  0101               	movlb	1	; () banked
  6259  002C86  6F15               	movwf	(_H10+14)& (0+255),b
  6260  002C88  6B14               	clrf	(_H10+13)& (0+255),b
  6261  002C8A                     l8999:
  6262                           
  6263                           ;gemsecs.c: 119:      if (rxData_l == r_block.length + 2)
  6264  002C8A  502F               	movf	m_protocol@rxData_l,w,c
  6265  002C8C  6E47               	movwf	btemp+10,c
  6266  002C8E  6A48               	clrf	btemp+11,c
  6267  002C90  0100               	movlb	0	; () banked
  6268  002C92  51CE               	movf	(_r_block+12)& (0+255),w,b
  6269  002C94  6E45               	movwf	btemp+8,c
  6270  002C96  6A46               	clrf	btemp+9,c
  6271  002C98  0E02               	movlw	2
  6272  002C9A  2645               	addwf	btemp+8,f,c
  6273  002C9C  0E00               	movlw	0
  6274  002C9E  2246               	addwfc	btemp+9,f,c
  6275  002CA0  5047               	movf	btemp+10,w,c
  6276  002CA2  1845               	xorwf	btemp+8,w,c
  6277  002CA4  E10A               	bnz	l9003
  6278  002CA6  5048               	movf	btemp+11,w,c
  6279  002CA8  1846               	xorwf	btemp+9,w,c
  6280  002CAA  A4D8               	btfss	status,2,c
  6281  002CAC  D006               	goto	l9003
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;gemsecs.c: 120:       H10[1].checksum += rxData;
  6285                           ;stkvar	_rxData @ sp[(-1)+0]
  6286  002CAE  0EFF               	movlw	-1
  6287  002CB0  50E3               	movf	plusw1,w,c
  6288  002CB2  0101               	movlb	1	; () banked
  6289  002CB4  2714               	addwf	(_H10+13)& (0+255),f,b
  6290  002CB6  0E00               	movlw	0
  6291  002CB8  2315               	addwfc	(_H10+14)& (0+255),f,b
  6292  002CBA                     l9003:
  6293                           
  6294                           ;gemsecs.c: 122:      rxData_l++;
  6295  002CBA  2A2F               	incf	m_protocol@rxData_l,f,c
  6296                           
  6297                           ;gemsecs.c: 123:      if (rxData_l > (r_block.length + 2)) {
  6298  002CBC  502F               	movf	m_protocol@rxData_l,w,c
  6299  002CBE  6E47               	movwf	btemp+10,c
  6300  002CC0  6A48               	clrf	btemp+11,c
  6301  002CC2  0100               	movlb	0	; () banked
  6302  002CC4  51CE               	movf	(_r_block+12)& (0+255),w,b
  6303  002CC6  6E45               	movwf	btemp+8,c
  6304  002CC8  6A46               	clrf	btemp+9,c
  6305  002CCA  0E02               	movlw	2
  6306  002CCC  2645               	addwf	btemp+8,f,c
  6307  002CCE  0E00               	movlw	0
  6308  002CD0  2246               	addwfc	btemp+9,f,c
  6309  002CD2  5047               	movf	btemp+10,w,c
  6310  002CD4  5C45               	subwf	btemp+8,w,c
  6311  002CD6  5046               	movf	btemp+9,w,c
  6312  002CD8  0A80               	xorlw	128
  6313  002CDA  6E3D               	movwf	btemp,c
  6314  002CDC  5048               	movf	btemp+11,w,c
  6315  002CDE  0A80               	xorlw	128
  6316  002CE0  583D               	subwfb	btemp,w,c
  6317  002CE2  B0D8               	btfsc	status,0,c
  6318  002CE4  D02D               	goto	l9025
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;gemsecs.c: 124:       if (V.r_checksum == H10[1].checksum) {
  6322  002CE6  0101               	movlb	1	; () banked
  6323  002CE8  5114               	movf	(_H10+13)& (0+255),w,b
  6324  002CEA  0100               	movlb	0	; () banked
  6325  002CEC  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  6326  002CEE  E10E               	bnz	l9013
  6327  002CF0  0101               	movlb	1	; () banked
  6328  002CF2  5115               	movf	(_H10+14)& (0+255),w,b
  6329  002CF4  0100               	movlb	0	; () banked
  6330  002CF6  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  6331  002CF8  A4D8               	btfss	status,2,c
  6332  002CFA  D008               	goto	l9013
  6333                           
  6334                           ; BSR set to: 0
  6335                           ;gemsecs.c: 125:        *m_link = LINK_STATE_ACK;
  6336                           ;stkvar	_m_link @ sp[(-1)+-1]
  6337  002CFC  0EFE               	movlw	-2
  6338  002CFE  50E3               	movf	plusw1,w,c
  6339  002D00  6ED9               	movwf	fsr2l,c
  6340  002D02  6ADA               	clrf	fsr2h,c
  6341  002D04  0E03               	movlw	3
  6342  002D06  D01B               	goto	L17
  6343  002D08                     l9011:
  6344  002D08  ECEA  F02E         	call	_UART1_Read	;wreg free
  6345  002D0C                     l9013:
  6346                           
  6347                           ;gemsecs.c: 127:        while (UART1_is_rx_ready())
  6348  002D0C  ECCD  F032         	call	_UART1_is_rx_ready	;wreg free
  6349  002D10  503D               	movf	btemp,w,c
  6350  002D12  A4D8               	btfss	status,2,c
  6351  002D14  D7F9               	goto	l9011
  6352                           
  6353                           ;gemsecs.c: 129:        WaitMs(500);
  6354  002D16  0EF4               	movlw	244
  6355  002D18  6EE6               	movwf	postinc1,c
  6356  002D1A  0E01               	movlw	1
  6357  002D1C  6EE6               	movwf	postinc1,c
  6358  002D1E  EC25  F02F         	call	_WaitMs	;wreg free
  6359                           
  6360                           ;gemsecs.c: 130:        V.error = LINK_ERROR_CHECKSUM;
  6361  002D22  0E0F               	movlw	15
  6362  002D24  0100               	movlb	0	; () banked
  6363  002D26  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6364                           
  6365                           ; BSR set to: 0
  6366                           ;gemsecs.c: 131:        V.checksum_error++;
  6367  002D28  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  6368  002D2A  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  6369                           
  6370                           ; BSR set to: 0
  6371                           ;gemsecs.c: 132:        V.failed_receive = 3;
  6372  002D2C  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  6373  002D2E  0BF0               	andlw	-16
  6374  002D30  0903               	iorlw	3
  6375  002D32  6FBC               	movwf	(_V+92)& (0+255),b	;volatile
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;gemsecs.c: 133:        *m_link = LINK_STATE_NAK;
  6379                           ;stkvar	_m_link @ sp[(-1)+-1]
  6380  002D34  0EFE               	movlw	-2
  6381  002D36  50E3               	movf	plusw1,w,c
  6382  002D38  6ED9               	movwf	fsr2l,c
  6383  002D3A  6ADA               	clrf	fsr2h,c
  6384  002D3C  0E05               	movlw	5
  6385  002D3E                     L17:
  6386  002D3E  6EDF               	movwf	indf2,c
  6387  002D40                     l9025:
  6388                           
  6389                           ;gemsecs.c: 139:    if (UART2_is_rx_ready()) {
  6390  002D40  ECC9  F032         	call	_UART2_is_rx_ready	;wreg free
  6391  002D44  503D               	movf	btemp,w,c
  6392  002D46  B4D8               	btfsc	status,2,c
  6393  002D48  D118               	goto	l9111
  6394                           
  6395                           ;gemsecs.c: 140:     rxData = UART2_Read();
  6396  002D4A  ECCB  F02E         	call	_UART2_Read	;wreg free
  6397                           
  6398                           ;stkvar	_rxData @ sp[(-1)+0]
  6399  002D4E  0EFF               	movlw	-1
  6400  002D50  0060  F0F7  FFE3   	movff	btemp,plusw1
  6401                           
  6402                           ; BSR set to: 57
  6403                           ;gemsecs.c: 141:     if (rxData_l == 0) {
  6404  002D56  502F               	movf	m_protocol@rxData_l,w,c
  6405  002D58  A4D8               	btfss	status,2,c
  6406  002D5A  D00C               	goto	l9037
  6407                           
  6408                           ; BSR set to: 57
  6409                           ;gemsecs.c: 142:      r_block.length = rxData;
  6410                           ;stkvar	_rxData @ sp[(-1)+0]
  6411  002D5C  0EFF               	movlw	-1
  6412  002D5E  006F FF8C  F0CE    	movff	plusw1,_r_block+12
  6413                           
  6414                           ; BSR set to: 57
  6415                           ;gemsecs.c: 143:      run_checksum(0, 1);
  6416  002D64  0E01               	movlw	1
  6417  002D66  6EE6               	movwf	postinc1,c
  6418  002D68  0E00               	movlw	0
  6419  002D6A  6EE6               	movwf	postinc1,c
  6420  002D6C  ECDC  F02F         	call	_run_checksum	;wreg free
  6421                           
  6422                           ;gemsecs.c: 144:      rxData_l++;
  6423  002D70  2A2F               	incf	m_protocol@rxData_l,f,c
  6424                           
  6425                           ;gemsecs.c: 145:     } else {
  6426  002D72  D103               	goto	l9111
  6427  002D74                     l9037:
  6428                           
  6429                           ; BSR set to: 57
  6430                           ;gemsecs.c: 149:      if (rxData_l <= sizeof(block10))
  6431  002D74  0E0B               	movlw	11
  6432  002D76  602F               	cpfslt	m_protocol@rxData_l,c
  6433  002D78  D00C               	goto	l9041
  6434                           
  6435                           ; BSR set to: 57
  6436                           ;gemsecs.c: 150:       H10[1].block.b[sizeof(block10) - rxData_l] = rxData;
  6437                           ;stkvar	_rxData @ sp[(-1)+0]
  6438  002D7A  502F               	movf	m_protocol@rxData_l,w,c
  6439  002D7C  0820               	sublw	low (_H10+25)
  6440  002D7E  6ED9               	movwf	fsr2l,c
  6441  002D80  0E00               	movlw	0
  6442  002D82  A0D8               	btfss	status,0,c
  6443  002D84  2AE8               	incf	wreg,f,c
  6444  002D86  0801               	sublw	high (_H10+25)
  6445  002D88  6EDA               	movwf	fsr2h,c
  6446  002D8A  0EFF               	movlw	-1
  6447  002D8C  006F FF8F FFDF     	movff	plusw1,indf2
  6448  002D92                     l9041:
  6449                           
  6450                           ; BSR set to: 57
  6451                           ;gemsecs.c: 151:      if (rxData_l <= r_block.length)
  6452  002D92  502F               	movf	m_protocol@rxData_l,w,c
  6453  002D94  0100               	movlb	0	; () banked
  6454  002D96  5DCE               	subwf	(_r_block+12)& (0+255),w,b
  6455  002D98  A0D8               	btfss	status,0,c
  6456  002D9A  D00D               	goto	l9045
  6457                           
  6458                           ; BSR set to: 0
  6459                           ;gemsecs.c: 152:       V.r_checksum = run_checksum(rxData, 0);
  6460  002D9C  0E00               	movlw	0
  6461  002D9E  6EE6               	movwf	postinc1,c
  6462                           
  6463                           ;stkvar	_rxData @ sp[(-2)+0]
  6464  002DA0  0EFE               	movlw	-2
  6465  002DA2  50E3               	movf	plusw1,w,c
  6466  002DA4  6EE6               	movwf	postinc1,c
  6467  002DA6  ECDC  F02F         	call	_run_checksum	;wreg free
  6468  002DAA  0060  F0F4  F0B3   	movff	btemp,_V+83	;volatile
  6469  002DB0  0060  F0F8  F0B4   	movff	btemp+1,_V+84	;volatile
  6470  002DB6                     l9045:
  6471                           
  6472                           ;gemsecs.c: 154:      if (rxData_l == r_block.length + 1)
  6473  002DB6  502F               	movf	m_protocol@rxData_l,w,c
  6474  002DB8  6E47               	movwf	btemp+10,c
  6475  002DBA  6A48               	clrf	btemp+11,c
  6476  002DBC  0100               	movlb	0	; () banked
  6477  002DBE  51CE               	movf	(_r_block+12)& (0+255),w,b
  6478  002DC0  6E45               	movwf	btemp+8,c
  6479  002DC2  6A46               	clrf	btemp+9,c
  6480  002DC4  0E01               	movlw	1
  6481  002DC6  2645               	addwf	btemp+8,f,c
  6482  002DC8  0E00               	movlw	0
  6483  002DCA  2246               	addwfc	btemp+9,f,c
  6484  002DCC  5047               	movf	btemp+10,w,c
  6485  002DCE  1845               	xorwf	btemp+8,w,c
  6486  002DD0  E109               	bnz	l9049
  6487  002DD2  5048               	movf	btemp+11,w,c
  6488  002DD4  1846               	xorwf	btemp+9,w,c
  6489  002DD6  A4D8               	btfss	status,2,c
  6490  002DD8  D005               	goto	l9049
  6491                           
  6492                           ; BSR set to: 0
  6493                           ;gemsecs.c: 155:       H10[1].checksum = (uint16_t) rxData << 8;
  6494                           ;stkvar	_rxData @ sp[(-1)+0]
  6495  002DDA  0EFF               	movlw	-1
  6496  002DDC  50E3               	movf	plusw1,w,c
  6497  002DDE  0101               	movlb	1	; () banked
  6498  002DE0  6F15               	movwf	(_H10+14)& (0+255),b
  6499  002DE2  6B14               	clrf	(_H10+13)& (0+255),b
  6500  002DE4                     l9049:
  6501                           
  6502                           ;gemsecs.c: 156:      if (rxData_l == r_block.length + 2)
  6503  002DE4  502F               	movf	m_protocol@rxData_l,w,c
  6504  002DE6  6E47               	movwf	btemp+10,c
  6505  002DE8  6A48               	clrf	btemp+11,c
  6506  002DEA  0100               	movlb	0	; () banked
  6507  002DEC  51CE               	movf	(_r_block+12)& (0+255),w,b
  6508  002DEE  6E45               	movwf	btemp+8,c
  6509  002DF0  6A46               	clrf	btemp+9,c
  6510  002DF2  0E02               	movlw	2
  6511  002DF4  2645               	addwf	btemp+8,f,c
  6512  002DF6  0E00               	movlw	0
  6513  002DF8  2246               	addwfc	btemp+9,f,c
  6514  002DFA  5047               	movf	btemp+10,w,c
  6515  002DFC  1845               	xorwf	btemp+8,w,c
  6516  002DFE  E10A               	bnz	l9053
  6517  002E00  5048               	movf	btemp+11,w,c
  6518  002E02  1846               	xorwf	btemp+9,w,c
  6519  002E04  A4D8               	btfss	status,2,c
  6520  002E06  D006               	goto	l9053
  6521                           
  6522                           ; BSR set to: 0
  6523                           ;gemsecs.c: 157:       H10[1].checksum += rxData;
  6524                           ;stkvar	_rxData @ sp[(-1)+0]
  6525  002E08  0EFF               	movlw	-1
  6526  002E0A  50E3               	movf	plusw1,w,c
  6527  002E0C  0101               	movlb	1	; () banked
  6528  002E0E  2714               	addwf	(_H10+13)& (0+255),f,b
  6529  002E10  0E00               	movlw	0
  6530  002E12  2315               	addwfc	(_H10+14)& (0+255),f,b
  6531  002E14                     l9053:
  6532                           
  6533                           ;gemsecs.c: 159:      rxData_l++;
  6534  002E14  2A2F               	incf	m_protocol@rxData_l,f,c
  6535                           
  6536                           ;gemsecs.c: 160:      if (rxData_l > (r_block.length + 2)) {
  6537  002E16  502F               	movf	m_protocol@rxData_l,w,c
  6538  002E18  6E47               	movwf	btemp+10,c
  6539  002E1A  6A48               	clrf	btemp+11,c
  6540  002E1C  0100               	movlb	0	; () banked
  6541  002E1E  51CE               	movf	(_r_block+12)& (0+255),w,b
  6542  002E20  6E45               	movwf	btemp+8,c
  6543  002E22  6A46               	clrf	btemp+9,c
  6544  002E24  0E02               	movlw	2
  6545  002E26  2645               	addwf	btemp+8,f,c
  6546  002E28  0E00               	movlw	0
  6547  002E2A  2246               	addwfc	btemp+9,f,c
  6548  002E2C  5047               	movf	btemp+10,w,c
  6549  002E2E  5C45               	subwf	btemp+8,w,c
  6550  002E30  5046               	movf	btemp+9,w,c
  6551  002E32  0A80               	xorlw	128
  6552  002E34  6E3D               	movwf	btemp,c
  6553  002E36  5048               	movf	btemp+11,w,c
  6554  002E38  0A80               	xorlw	128
  6555  002E3A  583D               	subwfb	btemp,w,c
  6556  002E3C  B0D8               	btfsc	status,0,c
  6557  002E3E  D09D               	goto	l9111
  6558                           
  6559                           ; BSR set to: 0
  6560                           ;gemsecs.c: 161:       if (V.r_checksum == H10[1].checksum) {
  6561  002E40  0101               	movlb	1	; () banked
  6562  002E42  5114               	movf	(_H10+13)& (0+255),w,b
  6563  002E44  0100               	movlb	0	; () banked
  6564  002E46  19B3               	xorwf	(_V+83)& (0+255),w,b	;volatile
  6565  002E48  E10E               	bnz	l9063
  6566  002E4A  0101               	movlb	1	; () banked
  6567  002E4C  5115               	movf	(_H10+14)& (0+255),w,b
  6568  002E4E  0100               	movlb	0	; () banked
  6569  002E50  19B4               	xorwf	(_V+84)& (0+255),w,b	;volatile
  6570  002E52  A4D8               	btfss	status,2,c
  6571  002E54  D008               	goto	l9063
  6572                           
  6573                           ; BSR set to: 0
  6574                           ;gemsecs.c: 162:        *m_link = LINK_STATE_ACK;
  6575                           ;stkvar	_m_link @ sp[(-1)+-1]
  6576  002E56  0EFE               	movlw	-2
  6577  002E58  50E3               	movf	plusw1,w,c
  6578  002E5A  6ED9               	movwf	fsr2l,c
  6579  002E5C  6ADA               	clrf	fsr2h,c
  6580  002E5E  0E03               	movlw	3
  6581  002E60  D069               	goto	L20
  6582  002E62                     l9061:
  6583  002E62  ECCB  F02E         	call	_UART2_Read	;wreg free
  6584  002E66                     l9063:
  6585                           
  6586                           ;gemsecs.c: 164:        while (UART2_is_rx_ready())
  6587  002E66  ECC9  F032         	call	_UART2_is_rx_ready	;wreg free
  6588  002E6A  503D               	movf	btemp,w,c
  6589  002E6C  A4D8               	btfss	status,2,c
  6590  002E6E  D7F9               	goto	l9061
  6591                           
  6592                           ;gemsecs.c: 166:        WaitMs(500);
  6593  002E70  0EF4               	movlw	244
  6594  002E72  6EE6               	movwf	postinc1,c
  6595  002E74  0E01               	movlw	1
  6596  002E76  6EE6               	movwf	postinc1,c
  6597  002E78  EC25  F02F         	call	_WaitMs	;wreg free
  6598                           
  6599                           ;gemsecs.c: 167:        V.error = LINK_ERROR_CHECKSUM;
  6600  002E7C  0E0F               	movlw	15
  6601  002E7E  0100               	movlb	0	; () banked
  6602  002E80  6FB0               	movwf	(_V+80)& (0+255),b	;volatile
  6603                           
  6604                           ; BSR set to: 0
  6605                           ;gemsecs.c: 168:        V.checksum_error++;
  6606  002E82  4BB7               	infsnz	(_V+87)& (0+255),f,b	;volatile
  6607  002E84  2BB8               	incf	(_V+88)& (0+255),f,b	;volatile
  6608                           
  6609                           ; BSR set to: 0
  6610                           ;gemsecs.c: 169:        V.failed_receive = 4;
  6611  002E86  51BC               	movf	(_V+92)& (0+255),w,b	;volatile
  6612  002E88  0BF0               	andlw	-16
  6613  002E8A  0904               	iorlw	4
  6614  002E8C  D6A5               	goto	L19
  6615  002E8E                     l9075:
  6616                           
  6617                           ;gemsecs.c: 181:   V.stream = H10[1].block.block.stream;
  6618  002E8E  0101               	movlb	1	; () banked
  6619  002E90  511D               	movf	(_H10+22)& (0+255),w,b
  6620  002E92  0B7F               	andlw	127
  6621  002E94  0100               	movlb	0	; () banked
  6622  002E96  6FAE               	movwf	(_V+78)& (0+255),b	;volatile
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;gemsecs.c: 182:   V.function = H10[1].block.block.function;
  6626  002E98  C11C  F0AF         	movff	_H10+21,_V+79	;volatile
  6627                           
  6628                           ; BSR set to: 0
  6629                           ;gemsecs.c: 183:   V.systemb = H10[1].block.block.systemb;
  6630  002E9C  C116  F0AA         	movff	_H10+15,_V+74	;volatile
  6631  002EA0  C117  F0AB         	movff	_H10+16,_V+75	;volatile
  6632  002EA4  C118  F0AC         	movff	_H10+17,_V+76	;volatile
  6633  002EA8  C119  F0AD         	movff	_H10+18,_V+77	;volatile
  6634                           
  6635                           ; BSR set to: 0
  6636                           ;gemsecs.c: 184:   V.rbit = H10[1].block.block.rbit;
  6637  002EAC  0101               	movlb	1	; () banked
  6638  002EAE  AF1F               	btfss	(_H10+24)& (0+255),7,b
  6639  002EB0  D003               	bra	u5855
  6640  002EB2  0100               	movlb	0	; () banked
  6641  002EB4  81BB               	bsf	(_V+91)& (0+255),0,b	;volatile
  6642  002EB6  D002               	bra	u5857
  6643  002EB8                     u5855:
  6644  002EB8  0100               	movlb	0	; () banked
  6645  002EBA  91BB               	bcf	(_V+91)& (0+255),0,b	;volatile
  6646  002EBC                     u5857:
  6647                           
  6648                           ; BSR set to: 0
  6649                           ;gemsecs.c: 185:   V.wbit = H10[1].block.block.wbit;
  6650  002EBC  0101               	movlb	1	; () banked
  6651  002EBE  AF1D               	btfss	(_H10+22)& (0+255),7,b
  6652  002EC0  D003               	bra	u5865
  6653  002EC2  0100               	movlb	0	; () banked
  6654  002EC4  83BB               	bsf	(_V+91)& (0+255),1,b	;volatile
  6655  002EC6  D002               	bra	u5867
  6656  002EC8                     u5865:
  6657  002EC8  0100               	movlb	0	; () banked
  6658  002ECA  93BB               	bcf	(_V+91)& (0+255),1,b	;volatile
  6659  002ECC                     u5867:
  6660                           
  6661                           ; BSR set to: 0
  6662                           ;gemsecs.c: 186:   V.ebit = H10[1].block.block.ebit;
  6663  002ECC  0101               	movlb	1	; () banked
  6664  002ECE  AF1B               	btfss	(_H10+20)& (0+255),7,b
  6665  002ED0  D003               	bra	u5875
  6666  002ED2  0100               	movlb	0	; () banked
  6667  002ED4  85BB               	bsf	(_V+91)& (0+255),2,b	;volatile
  6668  002ED6  D002               	bra	u5877
  6669  002ED8                     u5875:
  6670  002ED8  0100               	movlb	0	; () banked
  6671  002EDA  95BB               	bcf	(_V+91)& (0+255),2,b	;volatile
  6672  002EDC                     u5877:
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;gemsecs.c: 187:   V.failed_receive = 0;
  6676  002EDC  0EF0               	movlw	-16
  6677  002EDE  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  6678                           
  6679                           ; BSR set to: 0
  6680                           ;gemsecs.c: 188:   V.g_state = secs_gem_state(V.stream, V.function);
  6681  002EE0  51AF               	movf	(_V+79)& (0+255),w,b	;volatile
  6682  002EE2  6EE6               	movwf	postinc1,c
  6683  002EE4  51AE               	movf	(_V+78)& (0+255),w,b	;volatile
  6684  002EE6  6EE6               	movwf	postinc1,c
  6685  002EE8  EC07  F029         	call	_secs_gem_state	;wreg free
  6686  002EEC  503D               	movf	btemp,w,c
  6687  002EEE  0100               	movlb	0	; () banked
  6688  002EF0  6F62               	movwf	(_V+2)& (0+255),b	;volatile
  6689                           
  6690                           ; BSR set to: 0
  6691                           ;gemsecs.c: 189:   *m_link = LINK_STATE_DONE;
  6692                           ;stkvar	_m_link @ sp[(-1)+-1]
  6693  002EF2  0EFE               	movlw	-2
  6694  002EF4  50E3               	movf	plusw1,w,c
  6695  002EF6  6ED9               	movwf	fsr2l,c
  6696  002EF8  6ADA               	clrf	fsr2h,c
  6697  002EFA  0E04               	movlw	4
  6698  002EFC  D01B               	goto	L20
  6699  002EFE                     l9093:
  6700                           
  6701                           ;gemsecs.c: 192:   *m_link = LINK_STATE_ERROR;
  6702                           ;stkvar	_m_link @ sp[(-1)+-1]
  6703  002EFE  0EFE               	movlw	-2
  6704  002F00  50E3               	movf	plusw1,w,c
  6705  002F02  6ED9               	movwf	fsr2l,c
  6706  002F04  6ADA               	clrf	fsr2h,c
  6707  002F06  0E06               	movlw	6
  6708  002F08  6EDF               	movwf	indf2,c
  6709                           
  6710                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  6711  002F0A  D002               	goto	l9097
  6712  002F0C                     l9095:
  6713                           
  6714                           ;gemsecs.c: 194:    UART1_Read();
  6715  002F0C  ECEA  F02E         	call	_UART1_Read	;wreg free
  6716  002F10                     l9097:
  6717                           
  6718                           ;gemsecs.c: 193:   while ((uart1RxCount)) {
  6719  002F10  5037               	movf	_uart1RxCount,w,c	;volatile
  6720  002F12  B4D8               	btfsc	status,2,c
  6721  002F14  D003               	goto	l9101
  6722  002F16  D7FA               	goto	l9095
  6723  002F18                     l9099:
  6724                           
  6725                           ;gemsecs.c: 197:    UART2_Read();
  6726  002F18  ECCB  F02E         	call	_UART2_Read	;wreg free
  6727  002F1C                     l9101:
  6728                           
  6729                           ;gemsecs.c: 196:   while ((uart2RxCount)) {
  6730  002F1C  5031               	movf	_uart2RxCount,w,c	;volatile
  6731  002F1E  B4D8               	btfsc	status,2,c
  6732  002F20  D02C               	goto	l9111
  6733  002F22  D7FA               	goto	l9099
  6734  002F24                     l9103:
  6735                           
  6736                           ;gemsecs.c: 203:   V.failed_receive = 0;
  6737  002F24  0EF0               	movlw	-16
  6738  002F26  0100               	movlb	0	; () banked
  6739  002F28  17BC               	andwf	(_V+92)& (0+255),f,b	;volatile
  6740  002F2A                     l9105:
  6741                           
  6742                           ;gemsecs.c: 205:   *m_link = LINK_STATE_IDLE;
  6743                           ;stkvar	_m_link @ sp[(-1)+-1]
  6744  002F2A  0EFE               	movlw	-2
  6745  002F2C  50E3               	movf	plusw1,w,c
  6746  002F2E  6ED9               	movwf	fsr2l,c
  6747  002F30  6ADA               	clrf	fsr2h,c
  6748  002F32  0E00               	movlw	0
  6749  002F34                     L20:
  6750  002F34  6EDF               	movwf	indf2,c
  6751                           
  6752                           ;gemsecs.c: 207:   break;
  6753  002F36  D021               	goto	l9111
  6754  002F38                     l9109:
  6755                           
  6756                           ;stkvar	_m_link @ sp[(-1)+-1]
  6757  002F38  0EFE               	movlw	-2
  6758  002F3A  50E3               	movf	plusw1,w,c
  6759  002F3C  6ED9               	movwf	fsr2l,c
  6760  002F3E  6ADA               	clrf	fsr2h,c
  6761  002F40  50DF               	movf	indf2,w,c
  6762  002F42  6E47               	movwf	btemp+10,c
  6763  002F44  6A48               	clrf	btemp+11,c
  6764                           
  6765                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6766                           ; Switch size 1, requested type "simple"
  6767                           ; Number of cases is 1, Range of values is 0 to 0
  6768                           ; switch strategies available:
  6769                           ; Name         Instructions Cycles
  6770                           ; simple_byte            4     3 (average)
  6771                           ;	Chosen strategy is simple_byte
  6772  002F46  5048               	movf	btemp+11,w,c
  6773  002F48  0A00               	xorlw	0	; case 0
  6774  002F4A  A4D8               	btfss	status,2,c
  6775  002F4C  D7EE               	goto	l9105
  6776                           
  6777                           ; Switch size 1, requested type "simple"
  6778                           ; Number of cases is 7, Range of values is 0 to 6
  6779                           ; switch strategies available:
  6780                           ; Name         Instructions Cycles
  6781                           ; simple_byte           22    12 (average)
  6782                           ;	Chosen strategy is simple_byte
  6783  002F4E  5047               	movf	btemp+10,w,c
  6784  002F50  0A00               	xorlw	0	; case 0
  6785  002F52  B4D8               	btfsc	status,2,c
  6786  002F54  D5D1               	goto	l8931
  6787  002F56  0A01               	xorlw	1	; case 1
  6788  002F58  B4D8               	btfsc	status,2,c
  6789  002F5A  D61C               	goto	l1581
  6790  002F5C  0A03               	xorlw	3	; case 2
  6791  002F5E  B4D8               	btfsc	status,2,c
  6792  002F60  D62C               	goto	l8965
  6793  002F62  0A01               	xorlw	1	; case 3
  6794  002F64  B4D8               	btfsc	status,2,c
  6795  002F66  D793               	goto	l9075
  6796  002F68  0A07               	xorlw	7	; case 4
  6797  002F6A  B4D8               	btfsc	status,2,c
  6798  002F6C  D7DB               	goto	l9103
  6799  002F6E  0A01               	xorlw	1	; case 5
  6800  002F70  B4D8               	btfsc	status,2,c
  6801  002F72  D7C5               	goto	l9093
  6802  002F74  0A03               	xorlw	3	; case 6
  6803  002F76  A4D8               	btfss	status,2,c
  6804  002F78  D7D8               	goto	l9105
  6805  002F7A                     l9111:
  6806                           
  6807                           ;gemsecs.c: 210:  return *m_link;
  6808                           ;stkvar	_m_link @ sp[(-1)+-1]
  6809  002F7A  0EFE               	movlw	-2
  6810  002F7C  50E3               	movf	plusw1,w,c
  6811  002F7E  6ED9               	movwf	fsr2l,c
  6812  002F80  6ADA               	clrf	fsr2h,c
  6813  002F82  50DF               	movf	indf2,w,c
  6814  002F84  6E3D               	movwf	btemp,c
  6815                           
  6816                           ; _m_protocol: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  6817  002F86  52E5               	movf	postdec1,f,c
  6818  002F88  52E5               	movf	postdec1,f,c
  6819  002F8A  0012               	return		;funcret
  6820  002F8C                     __end_of_m_protocol:
  6821                           	opt callstack 0
  6822                           
  6823 ;; *************** function _secs_gem_state *****************
  6824 ;; Defined at:
  6825 ;;		line 635 in file "gemsecs.c"
  6826 ;; Parameters:    Size  Location     Type
  6827 ;;  stream          1  [STACK] unsigned char 
  6828 ;;  function        1  [STACK] unsigned char 
  6829 ;; Auto vars:     Size  Location     Type
  6830 ;;		None
  6831 ;; Return value:  Size  Location     Type
  6832 ;;                  1  [STACK] enum E16163
  6833 ;; Registers used:
  6834 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
  6835 ;; Tracked objects:
  6836 ;;		On entry : 3F/0
  6837 ;;		On exit  : 0/0
  6838 ;;		Unchanged: 0/0
  6839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6844 ;;Total ram usage:        0 bytes
  6845 ;; Hardware stack levels used:    1
  6846 ;; Hardware stack levels required when called:    3
  6847 ;; This function calls:
  6848 ;;		Nothing
  6849 ;; This function is called by:
  6850 ;;		_m_protocol
  6851 ;;		_r_protocol
  6852 ;; This function uses a reentrant model
  6853 ;;
  6854                           
  6855                           	psect	text15
  6856  00520E                     __ptext15:
  6857                           	opt callstack 0
  6858  00520E                     _secs_gem_state:
  6859                           	opt callstack 26
  6860                           
  6861                           ;gemsecs.c: 635: GEM_STATES secs_gem_state(uint8_t stream, uint8_t function);gemsecs.c: 
      +                          636: {;gemsecs.c: 637:  static GEM_STATES block = GEM_STATE_DISABLE;;gemsecs.c: 639:  sw
      +                          itch (stream) {
  6862                           
  6863                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6864                           ;incstack = 0
  6865  00520E  D041               	goto	l6389
  6866  005210                     l6345:
  6867                           
  6868                           ;gemsecs.c: 646:    block = GEM_STATE_REMOTE;
  6869  005210  0E04               	movlw	4
  6870  005212                     L22:
  6871  005212  6E2B               	movwf	secs_gem_state@block,c
  6872                           
  6873                           ;gemsecs.c: 647:    V.ticker = 0;
  6874  005214  0100               	movlb	0	; () banked
  6875  005216  6BC1               	clrf	(_V+97)& (0+255),b	;volatile
  6876                           
  6877                           ;gemsecs.c: 648:    break;
  6878  005218  D04F               	goto	l6391
  6879  00521A                     l6349:
  6880                           
  6881                           ;gemsecs.c: 653:    block = GEM_STATE_COMM;
  6882  00521A  0E01               	movlw	1
  6883  00521C  6E2B               	movwf	secs_gem_state@block,c
  6884                           
  6885                           ;gemsecs.c: 654:    V.ticker = 15;
  6886  00521E  0E0F               	movlw	15
  6887  005220  D035               	goto	L24
  6888  005222                     l6351:
  6889                           
  6890                           ;gemsecs.c: 660:    block = GEM_STATE_OFFLINE;
  6891  005222  0E02               	movlw	2
  6892  005224  D7F6               	goto	L22
  6893  005226                     l6355:
  6894                           
  6895                           ;gemsecs.c: 667:    block = GEM_STATE_ONLINE;
  6896  005226  0E03               	movlw	3
  6897  005228  D7F4               	goto	L22
  6898  00522A                     l6359:
  6899                           
  6900                           ;gemsecs.c: 671:    if (block == GEM_STATE_DISABLE) {
  6901  00522A  502B               	movf	secs_gem_state@block,w,c
  6902  00522C  B4D8               	btfsc	status,2,c
  6903  00522E  D7F5               	goto	l6349
  6904  005230  D043               	goto	l6391
  6905  005232                     l6365:
  6906                           
  6907                           ;stkvar	_function @ sp[(0)+-2]
  6908  005232  0EFE               	movlw	-2
  6909  005234  50E3               	movf	plusw1,w,c
  6910  005236  6E47               	movwf	btemp+10,c
  6911  005238  6A48               	clrf	btemp+11,c
  6912                           
  6913                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6914                           ; Switch size 1, requested type "simple"
  6915                           ; Number of cases is 1, Range of values is 0 to 0
  6916                           ; switch strategies available:
  6917                           ; Name         Instructions Cycles
  6918                           ; simple_byte            4     3 (average)
  6919                           ;	Chosen strategy is simple_byte
  6920  00523A  5048               	movf	btemp+11,w,c
  6921  00523C  0A00               	xorlw	0	; case 0
  6922  00523E  A4D8               	btfss	status,2,c
  6923  005240  D7F4               	goto	l6359
  6924                           
  6925                           ; Switch size 1, requested type "simple"
  6926                           ; Number of cases is 4, Range of values is 2 to 18
  6927                           ; switch strategies available:
  6928                           ; Name         Instructions Cycles
  6929                           ; simple_byte           13     7 (average)
  6930                           ;	Chosen strategy is simple_byte
  6931  005242  5047               	movf	btemp+10,w,c
  6932  005244  0A02               	xorlw	2	; case 2
  6933  005246  B4D8               	btfsc	status,2,c
  6934  005248  D7E3               	goto	l6345
  6935  00524A  0A0C               	xorlw	12	; case 14
  6936  00524C  B4D8               	btfsc	status,2,c
  6937  00524E  D7E5               	goto	l6349
  6938  005250  0A1E               	xorlw	30	; case 16
  6939  005252  B4D8               	btfsc	status,2,c
  6940  005254  D7E6               	goto	l6351
  6941  005256  0A02               	xorlw	2	; case 18
  6942  005258  B4D8               	btfsc	status,2,c
  6943  00525A  D7E5               	goto	l6355
  6944  00525C  D7E6               	goto	l6359
  6945  00525E                     l6367:
  6946                           
  6947                           ;gemsecs.c: 681:    block = GEM_STATE_ALARM;
  6948  00525E  0E05               	movlw	5
  6949  005260  6E2B               	movwf	secs_gem_state@block,c
  6950                           
  6951                           ;gemsecs.c: 682:    if (V.ticker != 45)
  6952  005262  0E2D               	movlw	45
  6953  005264  0100               	movlb	0	; () banked
  6954  005266  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  6955  005268  B4D8               	btfsc	status,2,c
  6956  00526A  D026               	goto	l6391
  6957  00526C                     u3450:
  6958                           
  6959                           ; BSR set to: 0
  6960                           ;gemsecs.c: 683:     V.ticker = 15;
  6961  00526C  0E0F               	movlw	15
  6962  00526E  D00F               	goto	L23
  6963  005270                     l6375:
  6964                           
  6965                           ;gemsecs.c: 690:    block = GEM_STATE_ERROR;
  6966  005270  0E06               	movlw	6
  6967  005272  6E2B               	movwf	secs_gem_state@block,c
  6968                           
  6969                           ;gemsecs.c: 691:    if (V.ticker != 45)
  6970  005274  0E2D               	movlw	45
  6971  005276  0100               	movlb	0	; () banked
  6972  005278  19C1               	xorwf	(_V+97)& (0+255),w,b	;volatile
  6973  00527A  A4D8               	btfss	status,2,c
  6974  00527C  D7F7               	goto	u3450
  6975  00527E  D01C               	goto	l6391
  6976  005280                     l6383:
  6977                           
  6978                           ;gemsecs.c: 697:   if (block == GEM_STATE_DISABLE) {
  6979  005280  502B               	movf	secs_gem_state@block,w,c
  6980  005282  A4D8               	btfss	status,2,c
  6981  005284  D019               	goto	l6391
  6982                           
  6983                           ;gemsecs.c: 698:    block = GEM_STATE_COMM;
  6984  005286  0E01               	movlw	1
  6985  005288  6E2B               	movwf	secs_gem_state@block,c
  6986                           
  6987                           ;gemsecs.c: 699:    V.ticker = 45;
  6988  00528A  0E2D               	movlw	45
  6989  00528C                     L24:
  6990  00528C  0100               	movlb	0	; () banked
  6991  00528E                     L23:
  6992  00528E  6FC1               	movwf	(_V+97)& (0+255),b	;volatile
  6993  005290  D013               	goto	l6391
  6994  005292                     l6389:
  6995                           
  6996                           ;stkvar	_stream @ sp[(0)+-1]
  6997  005292  0EFF               	movlw	-1
  6998  005294  50E3               	movf	plusw1,w,c
  6999  005296  6E47               	movwf	btemp+10,c
  7000  005298  6A48               	clrf	btemp+11,c
  7001                           
  7002                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7003                           ; Switch size 1, requested type "simple"
  7004                           ; Number of cases is 1, Range of values is 0 to 0
  7005                           ; switch strategies available:
  7006                           ; Name         Instructions Cycles
  7007                           ; simple_byte            4     3 (average)
  7008                           ;	Chosen strategy is simple_byte
  7009  00529A  5048               	movf	btemp+11,w,c
  7010  00529C  0A00               	xorlw	0	; case 0
  7011  00529E  A4D8               	btfss	status,2,c
  7012  0052A0  D7EF               	goto	l6383
  7013                           
  7014                           ; Switch size 1, requested type "simple"
  7015                           ; Number of cases is 3, Range of values is 1 to 9
  7016                           ; switch strategies available:
  7017                           ; Name         Instructions Cycles
  7018                           ; simple_byte           10     6 (average)
  7019                           ;	Chosen strategy is simple_byte
  7020  0052A2  5047               	movf	btemp+10,w,c
  7021  0052A4  0A01               	xorlw	1	; case 1
  7022  0052A6  B4D8               	btfsc	status,2,c
  7023  0052A8  D7C4               	goto	l6365
  7024  0052AA  0A04               	xorlw	4	; case 5
  7025  0052AC  B4D8               	btfsc	status,2,c
  7026  0052AE  D7D7               	goto	l6367
  7027  0052B0  0A0C               	xorlw	12	; case 9
  7028  0052B2  B4D8               	btfsc	status,2,c
  7029  0052B4  D7DD               	goto	l6375
  7030  0052B6  D7E4               	goto	l6383
  7031  0052B8                     l6391:
  7032                           
  7033                           ;gemsecs.c: 704:  return(block);
  7034  0052B8  0060  F0AC  F03D   	movff	secs_gem_state@block,btemp
  7035                           
  7036                           ; _secs_gem_state: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2
      +                          , argsize = 2, vargsize = 0
  7037  0052BE  52E5               	movf	postdec1,f,c
  7038  0052C0  52E5               	movf	postdec1,f,c
  7039  0052C2  0012               	return		;funcret
  7040  0052C4                     __end_of_secs_gem_state:
  7041                           	opt callstack 0
  7042                           
  7043 ;; *************** function _run_checksum *****************
  7044 ;; Defined at:
  7045 ;;		line 36 in file "gemsecs.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  byte_block      1  [STACK] unsigned char 
  7048 ;;  clear           1  [STACK] _Bool 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;		None
  7051 ;; Return value:  Size  Location     Type
  7052 ;;                  2  [STACK] unsigned short 
  7053 ;; Registers used:
  7054 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
  7055 ;; Tracked objects:
  7056 ;;		On entry : 6/39
  7057 ;;		On exit  : 0/0
  7058 ;;		Unchanged: 0/0
  7059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7064 ;;Total ram usage:        0 bytes
  7065 ;; Hardware stack levels used:    1
  7066 ;; Hardware stack levels required when called:    3
  7067 ;; This function calls:
  7068 ;;		Nothing
  7069 ;; This function is called by:
  7070 ;;		_m_protocol
  7071 ;;		_r_protocol
  7072 ;; This function uses a reentrant model
  7073 ;;
  7074                           
  7075                           	psect	text16
  7076  005FB8                     __ptext16:
  7077                           	opt callstack 0
  7078  005FB8                     _run_checksum:
  7079                           	opt callstack 26
  7080                           
  7081                           ;gemsecs.c: 36: uint16_t run_checksum(uint8_t byte_block, _Bool clear);gemsecs.c: 37: {;
      +                          gemsecs.c: 38:  static uint16_t sum = 0;;gemsecs.c: 40:  if (clear)
  7082                           ;stkvar	_clear @ sp[(0)+-2]
  7083                           
  7084                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7085                           ;incstack = 0
  7086  005FB8  0EFE               	movlw	-2
  7087  005FBA  50E3               	movf	plusw1,w,c
  7088  005FBC  B4D8               	btfsc	status,2,c
  7089  005FBE  D002               	goto	l6337
  7090                           
  7091                           ;gemsecs.c: 41:   sum = 0;
  7092  005FC0  6A25               	clrf	run_checksum@sum,c
  7093  005FC2  6A26               	clrf	run_checksum@sum+1,c
  7094  005FC4                     l6337:
  7095                           
  7096                           ;gemsecs.c: 43:  sum += byte_block;
  7097                           ;stkvar	_byte_block @ sp[(0)+-1]
  7098  005FC4  0EFF               	movlw	-1
  7099  005FC6  50E3               	movf	plusw1,w,c
  7100  005FC8  2625               	addwf	run_checksum@sum,f,c
  7101  005FCA  0E00               	movlw	0
  7102  005FCC  2226               	addwfc	run_checksum@sum+1,f,c
  7103                           
  7104                           ;gemsecs.c: 44:  return sum;
  7105  005FCE  0060  F094  F03D   	movff	run_checksum@sum,btemp
  7106  005FD4  0060  F098  F03E   	movff	run_checksum@sum+1,btemp+1
  7107                           
  7108                           ; _run_checksum: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, 
      +                          argsize = 2, vargsize = 0
  7109  005FDA  52E5               	movf	postdec1,f,c
  7110  005FDC  52E5               	movf	postdec1,f,c
  7111  005FDE  0012               	return		;funcret
  7112  005FE0                     __end_of_run_checksum:
  7113                           	opt callstack 0
  7114                           
  7115 ;; *************** function _WaitMs *****************
  7116 ;; Defined at:
  7117 ;;		line 32 in file "timers.c"
  7118 ;; Parameters:    Size  Location     Type
  7119 ;;  numMilliseco    2  [STACK] unsigned short 
  7120 ;; Auto vars:     Size  Location     Type
  7121 ;;		None
  7122 ;; Return value:  Size  Location     Type
  7123 ;;                  1  [STACK] void 
  7124 ;; Registers used:
  7125 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7126 ;; Tracked objects:
  7127 ;;		On entry : 0/0
  7128 ;;		On exit  : 0/0
  7129 ;;		Unchanged: 0/0
  7130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7131 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7132 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7133 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7134 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7135 ;;Total ram usage:        0 bytes
  7136 ;; Hardware stack levels used:    1
  7137 ;; Hardware stack levels required when called:    4
  7138 ;; This function calls:
  7139 ;;		_StartTimer
  7140 ;;		_TimerDone
  7141 ;; This function is called by:
  7142 ;;		_main
  7143 ;;		_m_protocol
  7144 ;;		_r_protocol
  7145 ;; This function uses a reentrant model
  7146 ;;
  7147                           
  7148                           	psect	text17
  7149  005E4A                     __ptext17:
  7150                           	opt callstack 0
  7151  005E4A                     _WaitMs:
  7152                           	opt callstack 25
  7153                           
  7154                           ;timers.c: 32: void WaitMs(uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:  Star
      +                          tTimer(TMR_INTERNAL, numMilliseconds);
  7155                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  7156                           
  7157                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7158                           ;incstack = 0
  7159  005E4A  0EFE               	movlw	-2
  7160  005E4C  006F FF8F FFE6     	movff	plusw1,postinc1
  7161  005E52  006F FF8F FFE6     	movff	plusw1,postinc1
  7162  005E58  0E00               	movlw	0
  7163  005E5A  6EE6               	movwf	postinc1,c
  7164  005E5C  EC4D  F02E         	call	_StartTimer	;wreg free
  7165                           
  7166                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7167  005E60  D005               	goto	l8447
  7168  005E62                     l1814:
  7169                           
  7170                           ;timers.c: 36:   __nop();
  7171  005E62  F000               	nop	
  7172                           
  7173                           ;timers.c: 37:   __nop();
  7174  005E64  F000               	nop	
  7175                           
  7176                           ;timers.c: 38:   __nop();
  7177  005E66  F000               	nop	
  7178                           
  7179                           ;timers.c: 39:   __nop();
  7180  005E68  F000               	nop	
  7181  005E6A  0004               	clrwdt		;# 
  7182  005E6C                     l8447:
  7183                           
  7184                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  7185  005E6C  0E00               	movlw	0
  7186  005E6E  6EE6               	movwf	postinc1,c
  7187  005E70  ECF0  F02F         	call	_TimerDone	;wreg free
  7188  005E74  503D               	movf	btemp,w,c
  7189  005E76  B4D8               	btfsc	status,2,c
  7190  005E78  D7F4               	goto	l1814
  7191                           
  7192                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  7193  005E7A  52E5               	movf	postdec1,f,c
  7194  005E7C  52E5               	movf	postdec1,f,c
  7195  005E7E  0012               	return		;funcret
  7196  005E80                     __end_of_WaitMs:
  7197                           	opt callstack 0
  7198                           
  7199 ;; *************** function _TimerDone *****************
  7200 ;; Defined at:
  7201 ;;		line 20 in file "timers.c"
  7202 ;; Parameters:    Size  Location     Type
  7203 ;;  timer           1  [STACK] unsigned char 
  7204 ;; Auto vars:     Size  Location     Type
  7205 ;;		None
  7206 ;; Return value:  Size  Location     Type
  7207 ;;                  1  [STACK] _Bool 
  7208 ;; Registers used:
  7209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7216 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7218 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7219 ;;Total ram usage:        0 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; Hardware stack levels required when called:    3
  7222 ;; This function calls:
  7223 ;;		Nothing
  7224 ;; This function is called by:
  7225 ;;		_m_protocol
  7226 ;;		_r_protocol
  7227 ;;		_t_protocol
  7228 ;;		_WaitMs
  7229 ;; This function uses a reentrant model
  7230 ;;
  7231                           
  7232                           	psect	text18
  7233  005FE0                     __ptext18:
  7234                           	opt callstack 0
  7235  005FE0                     _TimerDone:
  7236                           	opt callstack 26
  7237                           
  7238                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7239                           ;incstack = 0
  7240  005FE0  0004               	clrwdt		;# 
  7241                           
  7242                           ;timers.c: 23:  if (tickCount[timer] == 0) {
  7243                           ;stkvar	_timer @ sp[(0)+-1]
  7244  005FE2  0EFF               	movlw	-1
  7245  005FE4  50E3               	movf	plusw1,w,c
  7246  005FE6  0D02               	mullw	2
  7247  005FE8  0EC0               	movlw	low _tickCount
  7248  005FEA  24F3               	addwf	prodl,w,c
  7249  005FEC  6ED9               	movwf	fsr2l,c
  7250  005FEE  0E01               	movlw	high _tickCount
  7251  005FF0  20F4               	addwfc	prodh,w,c
  7252  005FF2  6EDA               	movwf	fsr2h,c
  7253  005FF4  50DE               	movf	postinc2,w,c
  7254  005FF6  10DE               	iorwf	postinc2,w,c
  7255  005FF8  A4D8               	btfss	status,2,c
  7256  005FFA  D002               	goto	l8411
  7257                           
  7258                           ;timers.c: 24:   return 1;
  7259  005FFC  0E01               	movlw	1
  7260  005FFE  D001               	goto	L25
  7261  006000                     l8411:
  7262                           
  7263                           ;timers.c: 26:  return 0;
  7264  006000  0E00               	movlw	0
  7265  006002                     L25:
  7266  006002  6E3D               	movwf	btemp,c
  7267                           
  7268                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
  7269  006004  52E5               	movf	postdec1,f,c
  7270  006006  0012               	return		;funcret
  7271  006008                     __end_of_TimerDone:
  7272                           	opt callstack 0
  7273                           
  7274 ;; *************** function _StartTimer *****************
  7275 ;; Defined at:
  7276 ;;		line 12 in file "timers.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  timer           1  [STACK] unsigned char 
  7279 ;;  count           2  [STACK] unsigned short 
  7280 ;; Auto vars:     Size  Location     Type
  7281 ;;		None
  7282 ;; Return value:  Size  Location     Type
  7283 ;;                  1  [STACK] void 
  7284 ;; Registers used:
  7285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  7286 ;; Tracked objects:
  7287 ;;		On entry : 0/39
  7288 ;;		On exit  : 0/0
  7289 ;;		Unchanged: 0/0
  7290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7295 ;;Total ram usage:        0 bytes
  7296 ;; Hardware stack levels used:    1
  7297 ;; Hardware stack levels required when called:    3
  7298 ;; This function calls:
  7299 ;;		Nothing
  7300 ;; This function is called by:
  7301 ;;		_m_protocol
  7302 ;;		_r_protocol
  7303 ;;		_t_protocol
  7304 ;;		_WaitMs
  7305 ;; This function uses a reentrant model
  7306 ;;
  7307                           
  7308                           	psect	text19
  7309  005C9A                     __ptext19:
  7310                           	opt callstack 0
  7311  005C9A                     _StartTimer:
  7312                           	opt callstack 26
  7313                           
  7314                           ;timers.c: 12: __attribute__((inline)) void StartTimer(uint8_t timer, uint16_t count);ti
      +                          mers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
  7315                           ;stkvar	_count @ sp[(0)+-3]
  7316                           
  7317                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7318                           ;incstack = 0
  7319  005C9A  0EFD               	movlw	-3
  7320  005C9C  006F FF8C  F047    	movff	plusw1,btemp+10
  7321  005CA2  0EFE               	movlw	-2
  7322  005CA4  006F FF8C  F048    	movff	plusw1,btemp+11
  7323  005CAA  90D8               	bcf	status,0,c
  7324  005CAC  3447               	rlcf	btemp+10,w,c
  7325  005CAE  6E45               	movwf	btemp+8,c
  7326  005CB0  3448               	rlcf	btemp+11,w,c
  7327  005CB2  6E46               	movwf	btemp+9,c
  7328                           
  7329                           ;stkvar	_timer @ sp[(0)+-1]
  7330  005CB4  0EFF               	movlw	-1
  7331  005CB6  50E3               	movf	plusw1,w,c
  7332  005CB8  0D02               	mullw	2
  7333  005CBA  0EC0               	movlw	low _tickCount
  7334  005CBC  24F3               	addwf	prodl,w,c
  7335  005CBE  6ED9               	movwf	fsr2l,c
  7336  005CC0  0E01               	movlw	high _tickCount
  7337  005CC2  20F4               	addwfc	prodh,w,c
  7338  005CC4  6EDA               	movwf	fsr2h,c
  7339  005CC6  0060  F117  FFDE   	movff	btemp+8,postinc2
  7340  005CCC  0060  F11B  FFDD   	movff	btemp+9,postdec2
  7341                           
  7342                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
  7343  005CD2  52E5               	movf	postdec1,f,c
  7344  005CD4  52E5               	movf	postdec1,f,c
  7345  005CD6  52E5               	movf	postdec1,f,c
  7346  005CD8  0012               	return		;funcret
  7347  005CDA                     __end_of_StartTimer:
  7348                           	opt callstack 0
  7349                           
  7350 ;; *************** function _UART2_is_rx_ready *****************
  7351 ;; Defined at:
  7352 ;;		line 137 in file "mcc_generated_files/uart2.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;		None
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  1  [STACK] unsigned char 
  7359 ;; Registers used:
  7360 ;;		btemp
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7370 ;;Total ram usage:        0 bytes
  7371 ;; Hardware stack levels used:    1
  7372 ;; Hardware stack levels required when called:    3
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_m_protocol
  7377 ;; This function uses a reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text20
  7381  006592                     __ptext20:
  7382                           	opt callstack 0
  7383  006592                     _UART2_is_rx_ready:
  7384                           	opt callstack 26
  7385                           
  7386                           ;mcc_generated_files/uart2.c: 139:     return uart2RxCount;
  7387                           
  7388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7389                           ;incstack = 0
  7390  006592  0060  F0C4  F03D   	movff	_uart2RxCount,btemp	;volatile
  7391                           
  7392                           ; _UART2_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7393  006598  0012               	return		;funcret
  7394  00659A                     __end_of_UART2_is_rx_ready:
  7395                           	opt callstack 0
  7396                           
  7397 ;; *************** function _UART2_Read *****************
  7398 ;; Defined at:
  7399 ;;		line 152 in file "mcc_generated_files/uart2.c"
  7400 ;; Parameters:    Size  Location     Type
  7401 ;;		None
  7402 ;; Auto vars:     Size  Location     Type
  7403 ;;  readValue       1  [STACK] unsigned char 
  7404 ;; Return value:  Size  Location     Type
  7405 ;;                  1  [STACK] unsigned char 
  7406 ;; Registers used:
  7407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7408 ;; Tracked objects:
  7409 ;;		On entry : 0/0
  7410 ;;		On exit  : 3F/39
  7411 ;;		Unchanged: 0/0
  7412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7417 ;;Total ram usage:        0 bytes
  7418 ;; Hardware stack levels used:    1
  7419 ;; Hardware stack levels required when called:    3
  7420 ;; This function calls:
  7421 ;;		Nothing
  7422 ;; This function is called by:
  7423 ;;		_m_protocol
  7424 ;; This function uses a reentrant model
  7425 ;;
  7426                           
  7427                           	psect	text21
  7428  005D96                     __ptext21:
  7429                           	opt callstack 0
  7430  005D96                     _UART2_Read:
  7431                           	opt callstack 0
  7432                           
  7433                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7434  005D96  52E6               	movf	postinc1,f,c
  7435  005D98                     
  7436                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7437                           
  7438                           ;mcc_generated_files/uart2.c: 156:     while(0 == uart2RxCount)
  7439  005D98  5031               	movf	_uart2RxCount,w,c	;volatile
  7440  005D9A  B4D8               	btfsc	status,2,c
  7441  005D9C  D7FD               	goto	l6241
  7442                           
  7443                           ;mcc_generated_files/uart2.c: 160:     readValue = uart2RxBuffer[uart2RxTail++];
  7444  005D9E  0E00               	movlw	low _uart2RxBuffer
  7445  005DA0  2432               	addwf	_uart2RxTail,w,c	;volatile
  7446  005DA2  6ED9               	movwf	fsr2l,c
  7447  005DA4  6ADA               	clrf	fsr2h,c
  7448  005DA6  0E02               	movlw	high _uart2RxBuffer
  7449  005DA8  22DA               	addwfc	fsr2h,f,c
  7450  005DAA  50DF               	movf	indf2,w,c
  7451  005DAC  6E48               	movwf	btemp+11,c
  7452                           
  7453                           ;stkvar	_readValue @ sp[(-1)+0]
  7454  005DAE  0EFF               	movlw	-1
  7455  005DB0  0060  F123  FFE3   	movff	btemp+11,plusw1
  7456  005DB6  2A32               	incf	_uart2RxTail,f,c	;volatile
  7457                           
  7458                           ;mcc_generated_files/uart2.c: 161:     if(sizeof(uart2RxBuffer) <= uart2RxTail)
  7459  005DB8  0E3F               	movlw	63
  7460  005DBA  6432               	cpfsgt	_uart2RxTail,c
  7461  005DBC  D001               	goto	l692
  7462                           
  7463                           ;mcc_generated_files/uart2.c: 162:     {;mcc_generated_files/uart2.c: 163:         uart2
      +                          RxTail = 0;
  7464  005DBE  6A32               	clrf	_uart2RxTail,c	;volatile
  7465  005DC0                     l692:
  7466                           
  7467                           ;mcc_generated_files/uart2.c: 165:     PIE6bits.U2RXIE = 0;
  7468  005DC0  0139               	movlb	57	; () banked
  7469  005DC2  9596               	bcf	150,2,b	;volatile
  7470                           
  7471                           ; BSR set to: 57
  7472                           ;mcc_generated_files/uart2.c: 166:     uart2RxCount--;
  7473  005DC4  0631               	decf	_uart2RxCount,f,c	;volatile
  7474                           
  7475                           ; BSR set to: 57
  7476                           ;mcc_generated_files/uart2.c: 167:     PIE6bits.U2RXIE = 1;
  7477  005DC6  8596               	bsf	150,2,b	;volatile
  7478                           
  7479                           ; BSR set to: 57
  7480                           ;mcc_generated_files/uart2.c: 169:     return readValue;
  7481                           ;stkvar	_readValue @ sp[(-1)+0]
  7482  005DC8  0EFF               	movlw	-1
  7483  005DCA  006F FF8C  F03D    	movff	plusw1,btemp
  7484                           
  7485                           ; BSR set to: 57
  7486                           ; _UART2_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7487  005DD0  52E5               	movf	postdec1,f,c
  7488  005DD2  0012               	return		;funcret
  7489  005DD4                     __end_of_UART2_Read:
  7490                           	opt callstack 0
  7491                           
  7492 ;; *************** function _UART1_is_rx_ready *****************
  7493 ;; Defined at:
  7494 ;;		line 146 in file "mcc_generated_files/uart1.c"
  7495 ;; Parameters:    Size  Location     Type
  7496 ;;		None
  7497 ;; Auto vars:     Size  Location     Type
  7498 ;;		None
  7499 ;; Return value:  Size  Location     Type
  7500 ;;                  1  [STACK] unsigned char 
  7501 ;; Registers used:
  7502 ;;		btemp
  7503 ;; Tracked objects:
  7504 ;;		On entry : 0/0
  7505 ;;		On exit  : 0/0
  7506 ;;		Unchanged: 0/0
  7507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7509 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7510 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7511 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7512 ;;Total ram usage:        0 bytes
  7513 ;; Hardware stack levels used:    1
  7514 ;; Hardware stack levels required when called:    3
  7515 ;; This function calls:
  7516 ;;		Nothing
  7517 ;; This function is called by:
  7518 ;;		_m_protocol
  7519 ;;		_r_protocol
  7520 ;;		_t_protocol
  7521 ;; This function uses a reentrant model
  7522 ;;
  7523                           
  7524                           	psect	text22
  7525  00659A                     __ptext22:
  7526                           	opt callstack 0
  7527  00659A                     _UART1_is_rx_ready:
  7528                           	opt callstack 26
  7529                           
  7530                           ;mcc_generated_files/uart1.c: 148:  return uart1RxCount;
  7531                           
  7532                           ; BSR set to: 57
  7533                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7534                           ;incstack = 0
  7535  00659A  0060  F0DC  F03D   	movff	_uart1RxCount,btemp	;volatile
  7536                           
  7537                           ; _UART1_is_rx_ready: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
  7538  0065A0  0012               	return		;funcret
  7539  0065A2                     __end_of_UART1_is_rx_ready:
  7540                           	opt callstack 0
  7541                           
  7542 ;; *************** function _UART1_Read *****************
  7543 ;; Defined at:
  7544 ;;		line 161 in file "mcc_generated_files/uart1.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;		None
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  readValue       1  [STACK] unsigned char 
  7549 ;; Return value:  Size  Location     Type
  7550 ;;                  1  [STACK] unsigned char 
  7551 ;; Registers used:
  7552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+11
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 3F/39
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7562 ;;Total ram usage:        0 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; Hardware stack levels required when called:    3
  7565 ;; This function calls:
  7566 ;;		Nothing
  7567 ;; This function is called by:
  7568 ;;		_m_protocol
  7569 ;;		_r_protocol
  7570 ;;		_t_protocol
  7571 ;; This function uses a reentrant model
  7572 ;;
  7573                           
  7574                           	psect	text23
  7575  005DD4                     __ptext23:
  7576                           	opt callstack 0
  7577  005DD4                     _UART1_Read:
  7578                           	opt callstack 0
  7579                           
  7580                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7581  005DD4  52E6               	movf	postinc1,f,c
  7582  005DD6                     
  7583                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7584                           
  7585                           ;mcc_generated_files/uart1.c: 165:  while (0 == uart1RxCount) {
  7586  005DD6  5037               	movf	_uart1RxCount,w,c	;volatile
  7587  005DD8  B4D8               	btfsc	status,2,c
  7588  005DDA  D7FD               	goto	l6217
  7589                           
  7590                           ;mcc_generated_files/uart1.c: 168:  readValue = uart1RxBuffer[uart1RxTail++];
  7591  005DDC  0E40               	movlw	low _uart1RxBuffer
  7592  005DDE  2438               	addwf	_uart1RxTail,w,c	;volatile
  7593  005DE0  6ED9               	movwf	fsr2l,c
  7594  005DE2  6ADA               	clrf	fsr2h,c
  7595  005DE4  0E02               	movlw	high _uart1RxBuffer
  7596  005DE6  22DA               	addwfc	fsr2h,f,c
  7597  005DE8  50DF               	movf	indf2,w,c
  7598  005DEA  6E48               	movwf	btemp+11,c
  7599                           
  7600                           ;stkvar	_readValue @ sp[(-1)+0]
  7601  005DEC  0EFF               	movlw	-1
  7602  005DEE  0060  F123  FFE3   	movff	btemp+11,plusw1
  7603  005DF4  2A38               	incf	_uart1RxTail,f,c	;volatile
  7604                           
  7605                           ;mcc_generated_files/uart1.c: 169:  if (sizeof(uart1RxBuffer) <= uart1RxTail) {
  7606  005DF6  0E3F               	movlw	63
  7607  005DF8  6438               	cpfsgt	_uart1RxTail,c
  7608  005DFA  D001               	goto	l572
  7609                           
  7610                           ;mcc_generated_files/uart1.c: 170:   uart1RxTail = 0;
  7611  005DFC  6A38               	clrf	_uart1RxTail,c	;volatile
  7612  005DFE                     l572:
  7613                           
  7614                           ;mcc_generated_files/uart1.c: 172:  PIE3bits.U1RXIE = 0;
  7615  005DFE  0139               	movlb	57	; () banked
  7616  005E00  9793               	bcf	147,3,b	;volatile
  7617                           
  7618                           ; BSR set to: 57
  7619                           ;mcc_generated_files/uart1.c: 173:  uart1RxCount--;
  7620  005E02  0637               	decf	_uart1RxCount,f,c	;volatile
  7621                           
  7622                           ; BSR set to: 57
  7623                           ;mcc_generated_files/uart1.c: 174:  PIE3bits.U1RXIE = 1;
  7624  005E04  8793               	bsf	147,3,b	;volatile
  7625                           
  7626                           ; BSR set to: 57
  7627                           ;mcc_generated_files/uart1.c: 176:  return readValue;
  7628                           ;stkvar	_readValue @ sp[(-1)+0]
  7629  005E06  0EFF               	movlw	-1
  7630  005E08  006F FF8C  F03D    	movff	plusw1,btemp
  7631                           
  7632                           ; BSR set to: 57
  7633                           ; _UART1_Read: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  7634  005E0E  52E5               	movf	postdec1,f,c
  7635  005E10  0012               	return		;funcret
  7636  005E12                     __end_of_UART1_Read:
  7637                           	opt callstack 0
  7638                           
  7639 ;; *************** function _init_display *****************
  7640 ;; Defined at:
  7641 ;;		line 35 in file "eadog.c"
  7642 ;; Parameters:    Size  Location     Type
  7643 ;;		None
  7644 ;; Auto vars:     Size  Location     Type
  7645 ;;		None
  7646 ;; Return value:  Size  Location     Type
  7647 ;;                  1  [STACK] void 
  7648 ;; Registers used:
  7649 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  7650 ;; Tracked objects:
  7651 ;;		On entry : 0/0
  7652 ;;		On exit  : 3F/3D
  7653 ;;		Unchanged: 0/0
  7654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7659 ;;Total ram usage:        0 bytes
  7660 ;; Hardware stack levels used:    1
  7661 ;; Hardware stack levels required when called:    5
  7662 ;; This function calls:
  7663 ;;		_ringBufS_init
  7664 ;;		_send_lcd_cmd
  7665 ;;		_send_lcd_cmd_long
  7666 ;;		_wdtdelay
  7667 ;; This function is called by:
  7668 ;;		_main
  7669 ;; This function uses a reentrant model
  7670 ;;
  7671                           
  7672                           	psect	text24
  7673  004ECA                     __ptext24:
  7674                           	opt callstack 0
  7675  004ECA                     _init_display:
  7676                           	opt callstack 25
  7677                           
  7678                           ;eadog.c: 37:  spi_link.tx1a = &ring_buf1;
  7679                           
  7680                           ; BSR set to: 57
  7681                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7682                           ;incstack = 0
  7683  004ECA  0E83               	movlw	low _ring_buf1
  7684  004ECC  0100               	movlb	0	; () banked
  7685  004ECE  6FD5               	movwf	(_spi_link+6)& (0+255),b	;volatile
  7686  004ED0  0E03               	movlw	high _ring_buf1
  7687  004ED2  6FD6               	movwf	(_spi_link+7)& (0+255),b	;volatile
  7688                           
  7689                           ;eadog.c: 38:  spi_link.tx1b = &ring_buf2;
  7690  004ED4  0E40               	movlw	low _ring_buf2
  7691  004ED6  6FD3               	movwf	(_spi_link+4)& (0+255),b	;volatile
  7692  004ED8  0E03               	movlw	high _ring_buf2
  7693  004EDA  6FD4               	movwf	(_spi_link+5)& (0+255),b	;volatile
  7694                           
  7695                           ; BSR set to: 0
  7696                           ;eadog.c: 39:  ringBufS_init(spi_link.tx1a);
  7697  004EDC  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  7698  004EE2  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  7699  004EE8  EC2C  F030         	call	_ringBufS_init	;wreg free
  7700                           
  7701                           ;eadog.c: 40:  ringBufS_init(spi_link.tx1b);
  7702  004EEC  0060  F34F  FFE6   	movff	_spi_link+4,postinc1
  7703  004EF2  0060  F353  FFE6   	movff	_spi_link+5,postinc1
  7704  004EF8  EC2C  F030         	call	_ringBufS_init	;wreg free
  7705                           
  7706                           ;eadog.c: 42:  LATEbits.LATE0 = 1;
  7707  004EFC  80BE               	bsf	16318,0,c	;volatile
  7708  004EFE  84BC               	bsf	16316,2,c	;volatile
  7709                           
  7710                           ;eadog.c: 44:  wdtdelay(350000);
  7711  004F00  0E30               	movlw	48
  7712  004F02  6EE6               	movwf	postinc1,c
  7713  004F04  0E57               	movlw	87
  7714  004F06  6EE6               	movwf	postinc1,c
  7715  004F08  0E05               	movlw	5
  7716  004F0A  6EE6               	movwf	postinc1,c
  7717  004F0C  0E00               	movlw	0
  7718  004F0E  6EE6               	movwf	postinc1,c
  7719  004F10  ECF6  F02C         	call	_wdtdelay	;wreg free
  7720                           
  7721                           ; BSR set to: 0
  7722                           ;eadog.c: 45:  send_lcd_cmd(0x39);
  7723  004F14  0E39               	movlw	57
  7724  004F16  6EE6               	movwf	postinc1,c
  7725  004F18  EC18  F030         	call	_send_lcd_cmd	;wreg free
  7726                           
  7727                           ; BSR set to: 0
  7728                           ;eadog.c: 46:  send_lcd_cmd(0x1d);
  7729  004F1C  0E1D               	movlw	29
  7730  004F1E  6EE6               	movwf	postinc1,c
  7731  004F20  EC18  F030         	call	_send_lcd_cmd	;wreg free
  7732                           
  7733                           ; BSR set to: 0
  7734                           ;eadog.c: 47:  send_lcd_cmd(0x50);
  7735  004F24  0E50               	movlw	80
  7736  004F26  6EE6               	movwf	postinc1,c
  7737  004F28  EC18  F030         	call	_send_lcd_cmd	;wreg free
  7738                           
  7739                           ; BSR set to: 0
  7740                           ;eadog.c: 48:  send_lcd_cmd(0x6c);
  7741  004F2C  0E6C               	movlw	108
  7742  004F2E  6EE6               	movwf	postinc1,c
  7743  004F30  EC18  F030         	call	_send_lcd_cmd	;wreg free
  7744                           
  7745                           ; BSR set to: 0
  7746                           ;eadog.c: 49:  send_lcd_cmd(0x76);
  7747  004F34  0E76               	movlw	118
  7748  004F36  6EE6               	movwf	postinc1,c
  7749  004F38  EC18  F030         	call	_send_lcd_cmd	;wreg free
  7750                           
  7751                           ; BSR set to: 0
  7752                           ;eadog.c: 50:  send_lcd_cmd_long(0x38);
  7753  004F3C  0E38               	movlw	56
  7754  004F3E  6EE6               	movwf	postinc1,c
  7755  004F40  EC04  F030         	call	_send_lcd_cmd_long	;wreg free
  7756                           
  7757                           ; BSR set to: 0
  7758                           ;eadog.c: 51:  send_lcd_cmd(0x0f);
  7759  004F44  0E0F               	movlw	15
  7760  004F46  6EE6               	movwf	postinc1,c
  7761  004F48  EC18  F030         	call	_send_lcd_cmd	;wreg free
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;eadog.c: 52:  send_lcd_cmd_long(0x01);
  7765  004F4C  0E01               	movlw	1
  7766  004F4E  6EE6               	movwf	postinc1,c
  7767  004F50  EC04  F030         	call	_send_lcd_cmd_long	;wreg free
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;eadog.c: 53:  send_lcd_cmd(0x02);
  7771  004F54  0E02               	movlw	2
  7772  004F56  6EE6               	movwf	postinc1,c
  7773  004F58  EC18  F030         	call	_send_lcd_cmd	;wreg free
  7774                           
  7775                           ; BSR set to: 0
  7776                           ;eadog.c: 54:  send_lcd_cmd(0x06);
  7777  004F5C  0E06               	movlw	6
  7778  004F5E  6EE6               	movwf	postinc1,c
  7779  004F60  EC18  F030         	call	_send_lcd_cmd	;wreg free
  7780                           
  7781                           ; BSR set to: 0
  7782                           ;eadog.c: 55:  wdtdelay(30);
  7783  004F64  0E1E               	movlw	30
  7784  004F66  6EE6               	movwf	postinc1,c
  7785  004F68  0E00               	movlw	0
  7786  004F6A  6EE6               	movwf	postinc1,c
  7787  004F6C  0E00               	movlw	0
  7788  004F6E  6EE6               	movwf	postinc1,c
  7789  004F70  0E00               	movlw	0
  7790  004F72  6EE6               	movwf	postinc1,c
  7791  004F74  ECF6  F02C         	call	_wdtdelay	;wreg free
  7792                           
  7793                           ; BSR set to: 0
  7794                           ;eadog.c: 56:  SPI1CON2 = 0x02;
  7795  004F78  0E02               	movlw	2
  7796  004F7A  013D               	movlb	61	; () banked
  7797  004F7C  6F16               	movwf	22,b	;volatile
  7798                           
  7799                           ; BSR set to: 61
  7800                           ;eadog.c: 57:  SPI1CON1 = 0x40;
  7801  004F7E  0E40               	movlw	64
  7802  004F80  6F15               	movwf	21,b	;volatile
  7803                           
  7804                           ; BSR set to: 61
  7805                           ;eadog.c: 58:  SPI1CON0 = 0x83;
  7806  004F82  0E83               	movlw	131
  7807  004F84  6F14               	movwf	20,b	;volatile
  7808                           
  7809                           ; BSR set to: 61
  7810                           ;eadog.c: 59:  SPI1INTFbits.SPI1TXUIF = 0;
  7811  004F86  931A               	bcf	26,1,b	;volatile
  7812                           
  7813                           ; BSR set to: 61
  7814                           ;eadog.c: 60:  DMA1CON1bits.DMODE = 0;
  7815  004F88  0E3F               	movlw	-193
  7816  004F8A  013B               	movlb	59	; () banked
  7817  004F8C  17FD               	andwf	253,f,b	;volatile
  7818                           
  7819                           ; BSR set to: 59
  7820                           ;eadog.c: 61:  DMA1CON1bits.DSTP = 0;
  7821  004F8E  9BFD               	bcf	253,5,b	;volatile
  7822                           
  7823                           ; BSR set to: 59
  7824                           ;eadog.c: 62:  DMA1CON1bits.SMODE = 1;
  7825  004F90  51FD               	movf	253,w,b	;volatile
  7826  004F92  0BF9               	andlw	-7
  7827  004F94  0902               	iorlw	2
  7828  004F96  6FFD               	movwf	253,b	;volatile
  7829                           
  7830                           ; BSR set to: 59
  7831                           ;eadog.c: 63:  DMA1CON1bits.SMR = 0;
  7832  004F98  0EE7               	movlw	-25
  7833  004F9A  17FD               	andwf	253,f,b	;volatile
  7834                           
  7835                           ; BSR set to: 59
  7836                           ;eadog.c: 64:  DMA1CON1bits.SSTP = 1;
  7837  004F9C  81FD               	bsf	253,0,b	;volatile
  7838                           
  7839                           ; BSR set to: 59
  7840                           ;eadog.c: 65:  DMA1SSA = (uint32_t) & ring_buf1;
  7841  004F9E  0E83               	movlw	low _ring_buf1
  7842  004FA0  6FF9               	movwf	249,b	;volatile
  7843  004FA2  0E03               	movlw	high _ring_buf1
  7844  004FA4  6FFA               	movwf	250,b	;volatile
  7845  004FA6  0E00               	movlw	low (_ring_buf1 shr (0+16))
  7846  004FA8  6FFB               	movwf	251,b	;volatile
  7847                           
  7848                           ; BSR set to: 59
  7849                           ;eadog.c: 66:  DMA1CON0bits.DGO = 0;
  7850  004FAA  9BFC               	bcf	252,5,b	;volatile
  7851                           
  7852                           ; BSR set to: 59
  7853                           ;eadog.c: 67:  SPI1INTFbits.SPI1TXUIF = 1;
  7854  004FAC  013D               	movlb	61	; () banked
  7855  004FAE  831A               	bsf	26,1,b	;volatile
  7856                           
  7857                           ; BSR set to: 61
  7858                           ;eadog.c: 68:  LATEbits.LATE0 = 0;
  7859  004FB0  90BE               	bcf	16318,0,c	;volatile
  7860                           
  7861                           ; BSR set to: 61
  7862                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  7863  004FB2  0012               	return		;funcret
  7864  004FB4                     __end_of_init_display:
  7865                           	opt callstack 0
  7866                           
  7867 ;; *************** function _send_lcd_cmd_long *****************
  7868 ;; Defined at:
  7869 ;;		line 97 in file "eadog.c"
  7870 ;; Parameters:    Size  Location     Type
  7871 ;;  cmd             1  [STACK] unsigned char 
  7872 ;; Auto vars:     Size  Location     Type
  7873 ;;		None
  7874 ;; Return value:  Size  Location     Type
  7875 ;;                  1  [STACK] void 
  7876 ;; Registers used:
  7877 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7878 ;; Tracked objects:
  7879 ;;		On entry : 3F/0
  7880 ;;		On exit  : 3F/0
  7881 ;;		Unchanged: 0/0
  7882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7887 ;;Total ram usage:        0 bytes
  7888 ;; Hardware stack levels used:    1
  7889 ;; Hardware stack levels required when called:    4
  7890 ;; This function calls:
  7891 ;;		_SPI1_Exchange8bit
  7892 ;;		_wdtdelay
  7893 ;; This function is called by:
  7894 ;;		_init_display
  7895 ;; This function uses a reentrant model
  7896 ;;
  7897                           
  7898                           	psect	text25
  7899  006008                     __ptext25:
  7900                           	opt callstack 0
  7901  006008                     _send_lcd_cmd_long:
  7902                           	opt callstack 25
  7903                           
  7904                           ; BSR set to: 61
  7905                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7906                           ;incstack = 0
  7907                           ;eadog.c: 97: static void send_lcd_cmd_long(uint8_t cmd);eadog.c: 98: {;eadog.c: 99:  do
      +                           { LATCbits.LATC1 = 0; } while(0);
  7908  006008  92BC               	bcf	16316,1,c	;volatile
  7909                           
  7910                           ;eadog.c: 100:  do { LATCbits.LATC2 = 0; } while(0);
  7911  00600A  94BC               	bcf	16316,2,c	;volatile
  7912                           
  7913                           ;eadog.c: 101:  SPI1_Exchange8bit(cmd);
  7914                           ;stkvar	_cmd @ sp[(0)+-1]
  7915  00600C  0EFF               	movlw	-1
  7916  00600E  50E3               	movf	plusw1,w,c
  7917  006010  6EE6               	movwf	postinc1,c
  7918  006012  EC03  F032         	call	_SPI1_Exchange8bit	;wreg free
  7919                           
  7920                           ; BSR set to: 57
  7921                           ;eadog.c: 102:  wdtdelay(800);
  7922  006016  0E20               	movlw	32
  7923  006018  6EE6               	movwf	postinc1,c
  7924  00601A  0E03               	movlw	3
  7925  00601C  6EE6               	movwf	postinc1,c
  7926  00601E  0E00               	movlw	0
  7927  006020  6EE6               	movwf	postinc1,c
  7928  006022  0E00               	movlw	0
  7929  006024  6EE6               	movwf	postinc1,c
  7930  006026  ECF6  F02C         	call	_wdtdelay	;wreg free
  7931                           
  7932                           ; BSR set to: 0
  7933  00602A  82BC               	bsf	16316,1,c	;volatile
  7934                           
  7935                           ; BSR set to: 0
  7936                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  7937  00602C  52E5               	movf	postdec1,f,c
  7938  00602E  0012               	return		;funcret
  7939  006030                     __end_of_send_lcd_cmd_long:
  7940                           	opt callstack 0
  7941                           
  7942 ;; *************** function _send_lcd_cmd *****************
  7943 ;; Defined at:
  7944 ;;		line 85 in file "eadog.c"
  7945 ;; Parameters:    Size  Location     Type
  7946 ;;  cmd             1  [STACK] unsigned char 
  7947 ;; Auto vars:     Size  Location     Type
  7948 ;;		None
  7949 ;; Return value:  Size  Location     Type
  7950 ;;                  1  [STACK] void 
  7951 ;; Registers used:
  7952 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  7953 ;; Tracked objects:
  7954 ;;		On entry : 3F/0
  7955 ;;		On exit  : 3F/0
  7956 ;;		Unchanged: 0/0
  7957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  7958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  7962 ;;Total ram usage:        0 bytes
  7963 ;; Hardware stack levels used:    1
  7964 ;; Hardware stack levels required when called:    4
  7965 ;; This function calls:
  7966 ;;		_SPI1_Exchange8bit
  7967 ;;		_wdtdelay
  7968 ;; This function is called by:
  7969 ;;		_init_display
  7970 ;; This function uses a reentrant model
  7971 ;;
  7972                           
  7973                           	psect	text26
  7974  006030                     __ptext26:
  7975                           	opt callstack 0
  7976  006030                     _send_lcd_cmd:
  7977                           	opt callstack 25
  7978                           
  7979                           ; BSR set to: 0
  7980                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  7981                           ;incstack = 0
  7982                           ;eadog.c: 85: static void send_lcd_cmd(uint8_t cmd);eadog.c: 86: {;eadog.c: 87:  do { LA
      +                          TCbits.LATC1 = 0; } while(0);
  7983  006030  92BC               	bcf	16316,1,c	;volatile
  7984                           
  7985                           ;eadog.c: 88:  do { LATCbits.LATC2 = 0; } while(0);
  7986  006032  94BC               	bcf	16316,2,c	;volatile
  7987                           
  7988                           ;eadog.c: 89:  SPI1_Exchange8bit(cmd);
  7989                           ;stkvar	_cmd @ sp[(0)+-1]
  7990  006034  0EFF               	movlw	-1
  7991  006036  50E3               	movf	plusw1,w,c
  7992  006038  6EE6               	movwf	postinc1,c
  7993  00603A  EC03  F032         	call	_SPI1_Exchange8bit	;wreg free
  7994                           
  7995                           ; BSR set to: 57
  7996                           ;eadog.c: 90:  wdtdelay(30);
  7997  00603E  0E1E               	movlw	30
  7998  006040  6EE6               	movwf	postinc1,c
  7999  006042  0E00               	movlw	0
  8000  006044  6EE6               	movwf	postinc1,c
  8001  006046  0E00               	movlw	0
  8002  006048  6EE6               	movwf	postinc1,c
  8003  00604A  0E00               	movlw	0
  8004  00604C  6EE6               	movwf	postinc1,c
  8005  00604E  ECF6  F02C         	call	_wdtdelay	;wreg free
  8006                           
  8007                           ; BSR set to: 0
  8008  006052  82BC               	bsf	16316,1,c	;volatile
  8009                           
  8010                           ; BSR set to: 0
  8011                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  8012  006054  52E5               	movf	postdec1,f,c
  8013  006056  0012               	return		;funcret
  8014  006058                     __end_of_send_lcd_cmd:
  8015                           	opt callstack 0
  8016                           
  8017 ;; *************** function _SPI1_Exchange8bit *****************
  8018 ;; Defined at:
  8019 ;;		line 79 in file "mcc_generated_files/spi1.c"
  8020 ;; Parameters:    Size  Location     Type
  8021 ;;  data            1  [STACK] unsigned char 
  8022 ;; Auto vars:     Size  Location     Type
  8023 ;;		None
  8024 ;; Return value:  Size  Location     Type
  8025 ;;                  1  [STACK] unsigned char 
  8026 ;; Registers used:
  8027 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  8028 ;; Tracked objects:
  8029 ;;		On entry : 0/0
  8030 ;;		On exit  : 3F/39
  8031 ;;		Unchanged: 0/0
  8032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8037 ;;Total ram usage:        0 bytes
  8038 ;; Hardware stack levels used:    1
  8039 ;; Hardware stack levels required when called:    3
  8040 ;; This function calls:
  8041 ;;		Nothing
  8042 ;; This function is called by:
  8043 ;;		_send_lcd_cmd
  8044 ;;		_send_lcd_cmd_long
  8045 ;; This function uses a reentrant model
  8046 ;;
  8047                           
  8048                           	psect	text27
  8049  006406                     __ptext27:
  8050                           	opt callstack 0
  8051  006406                     _SPI1_Exchange8bit:
  8052                           	opt callstack 25
  8053                           
  8054                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  8055                           
  8056                           ; BSR set to: 0
  8057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8058                           ;incstack = 0
  8059  006406  0E01               	movlw	1
  8060  006408  013D               	movlb	61	; () banked
  8061  00640A  6F12               	movwf	18,b	;volatile
  8062                           
  8063                           ; BSR set to: 61
  8064                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  8065                           ;stkvar	_data @ sp[(0)+-1]
  8066  00640C  0EFF               	movlw	-1
  8067  00640E  006F FF8F FD11     	movff	plusw1,15633	;volatile
  8068  006414                     l851:
  8069                           
  8070                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  8071  006414  0139               	movlb	57	; () banked
  8072  006416  A9A2               	btfss	162,4,b	;volatile
  8073  006418  D7FD               	goto	l851
  8074                           
  8075                           ; BSR set to: 57
  8076                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  8077  00641A  006F F440  F03D    	movff	15632,btemp	;volatile
  8078                           
  8079                           ; BSR set to: 57
  8080                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  8081  006420  52E5               	movf	postdec1,f,c
  8082  006422  0012               	return		;funcret
  8083  006424                     __end_of_SPI1_Exchange8bit:
  8084                           	opt callstack 0
  8085                           
  8086 ;; *************** function _ringBufS_init *****************
  8087 ;; Defined at:
  8088 ;;		line 22 in file "ringbufs.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  _this           2  [STACK] PTR volatile struct ring
  8091 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8092 ;; Auto vars:     Size  Location     Type
  8093 ;;		None
  8094 ;; Return value:  Size  Location     Type
  8095 ;;                  1  [STACK] void 
  8096 ;; Registers used:
  8097 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8098 ;; Tracked objects:
  8099 ;;		On entry : 0/0
  8100 ;;		On exit  : 0/0
  8101 ;;		Unchanged: 0/0
  8102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8103 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8105 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8106 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8107 ;;Total ram usage:        0 bytes
  8108 ;; Hardware stack levels used:    1
  8109 ;; Hardware stack levels required when called:    4
  8110 ;; This function calls:
  8111 ;;		_memset
  8112 ;; This function is called by:
  8113 ;;		_init_display
  8114 ;; This function uses a reentrant model
  8115 ;;
  8116                           
  8117                           	psect	text28
  8118  006058                     __ptext28:
  8119                           	opt callstack 0
  8120  006058                     _ringBufS_init:
  8121                           	opt callstack 25
  8122                           
  8123                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  8124                           
  8125                           ; BSR set to: 57
  8126                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8127                           ;incstack = 0
  8128  006058  0E43               	movlw	67
  8129  00605A  6EE6               	movwf	postinc1,c
  8130  00605C  0E00               	movlw	0
  8131  00605E  6EE6               	movwf	postinc1,c
  8132  006060  0E00               	movlw	0
  8133  006062  6EE6               	movwf	postinc1,c
  8134  006064  0E00               	movlw	0
  8135  006066  6EE6               	movwf	postinc1,c
  8136                           
  8137                           ;stkvar	__this @ sp[(-4)+-2]
  8138  006068  0EFA               	movlw	-6
  8139  00606A  006F FF8F FFE6     	movff	plusw1,postinc1
  8140  006070  006F FF8F FFE6     	movff	plusw1,postinc1
  8141  006076  ECB9  F01B         	call	_memset	;wreg free
  8142                           
  8143                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  8144  00607A  52E5               	movf	postdec1,f,c
  8145  00607C  52E5               	movf	postdec1,f,c
  8146  00607E  0012               	return		;funcret
  8147  006080                     __end_of_ringBufS_init:
  8148                           	opt callstack 0
  8149                           
  8150 ;; *************** function _eaDogM_WriteStringAtPos *****************
  8151 ;; Defined at:
  8152 ;;		line 223 in file "eadog.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  r               1  [STACK] unsigned char 
  8155 ;;  c               1  [STACK] unsigned char 
  8156 ;;  strPtr          1  [STACK] PTR unsigned char 
  8157 ;;		 -> V(98), 
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;		None
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1  [STACK] void 
  8162 ;; Registers used:
  8163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, 
      +prodh
  8164 ;; Tracked objects:
  8165 ;;		On entry : 3F/0
  8166 ;;		On exit  : 3F/3B
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8173 ;;Total ram usage:        0 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:   13
  8176 ;; This function calls:
  8177 ;;		_eaDogM_WriteString
  8178 ;;		_send_lcd_cmd_dma
  8179 ;; This function is called by:
  8180 ;;		_main
  8181 ;; This function uses a reentrant model
  8182 ;;
  8183                           
  8184                           	psect	text29
  8185  005EB4                     __ptext29:
  8186                           	opt callstack 0
  8187  005EB4                     _eaDogM_WriteStringAtPos:
  8188                           	opt callstack 17
  8189                           
  8190                           ;eadog.c: 223: void eaDogM_WriteStringAtPos(uint8_t r, uint8_t c, char *strPtr);eadog.c:
      +                           224: {;eadog.c: 225:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  8191                           ;stkvar	_c @ sp[(0)+-2]
  8192                           
  8193                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8194                           ;incstack = 0
  8195  005EB4  0EFE               	movlw	-2
  8196  005EB6  006F FF8C  F048    	movff	plusw1,btemp+11
  8197                           
  8198                           ;stkvar	_r @ sp[(0)+-1]
  8199  005EBC  0EFF               	movlw	-1
  8200  005EBE  50E3               	movf	plusw1,w,c
  8201  005EC0  0D10               	mullw	16
  8202  005EC2  50F3               	movf	prodl,w,c
  8203  005EC4  2448               	addwf	btemp+11,w,c
  8204  005EC6  0F80               	addlw	128
  8205  005EC8  6EE6               	movwf	postinc1,c
  8206  005ECA  EC24  F02D         	call	_send_lcd_cmd_dma	;wreg free
  8207                           
  8208                           ; BSR set to: 0
  8209                           ;eadog.c: 226:  eaDogM_WriteString(strPtr);
  8210                           ;stkvar	_strPtr @ sp[(0)+-3]
  8211  005ECE  0EFD               	movlw	-3
  8212  005ED0  50E3               	movf	plusw1,w,c
  8213  005ED2  6EE6               	movwf	postinc1,c
  8214  005ED4  EC08  F02A         	call	_eaDogM_WriteString	;wreg free
  8215                           
  8216                           ; BSR set to: 59
  8217                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 3, argsize = 3, vargsize = 0
  8218  005ED8  52E5               	movf	postdec1,f,c
  8219  005EDA  52E5               	movf	postdec1,f,c
  8220  005EDC  52E5               	movf	postdec1,f,c
  8221  005EDE  0012               	return		;funcret
  8222  005EE0                     __end_of_eaDogM_WriteStringAtPos:
  8223                           	opt callstack 0
  8224                           
  8225 ;; *************** function _eaDogM_WriteString *****************
  8226 ;; Defined at:
  8227 ;;		line 167 in file "eadog.c"
  8228 ;; Parameters:    Size  Location     Type
  8229 ;;  strPtr          1  [STACK] PTR unsigned char 
  8230 ;;		 -> V(98), 
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;                  1  [STACK] void 
  8235 ;; Registers used:
  8236 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8237 ;; Tracked objects:
  8238 ;;		On entry : 3F/0
  8239 ;;		On exit  : 3F/3B
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8246 ;;Total ram usage:        0 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; Hardware stack levels required when called:   12
  8249 ;; This function calls:
  8250 ;;		_printf
  8251 ;;		_ringBufS_flush
  8252 ;;		_start_lcd
  8253 ;;		_strlen
  8254 ;;		_wait_lcd_set
  8255 ;; This function is called by:
  8256 ;;		_eaDogM_WriteStringAtPos
  8257 ;; This function uses a reentrant model
  8258 ;;
  8259                           
  8260                           	psect	text30
  8261  005410                     __ptext30:
  8262                           	opt callstack 0
  8263  005410                     _eaDogM_WriteString:
  8264                           	opt callstack 17
  8265                           
  8266                           ; BSR set to: 59
  8267                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8268                           ;incstack = 0
  8269                           ;eadog.c: 167: void eaDogM_WriteString(char *strPtr);eadog.c: 168: {;eadog.c: 169:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  8270  005410  82BE               	bsf	16318,1,c	;volatile
  8271                           
  8272                           ;eadog.c: 170:  wait_lcd_set();
  8273  005412  ECD1  F032         	call	_wait_lcd_set	;wreg free
  8274                           
  8275                           ; BSR set to: 0
  8276                           ;eadog.c: 172:  ringBufS_flush(spi_link.tx1a, 0);
  8277  005416  0E00               	movlw	0
  8278  005418  6EE6               	movwf	postinc1,c
  8279  00541A  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  8280  005420  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  8281  005426  EC3E  F02B         	call	_ringBufS_flush	;wreg free
  8282  00542A  94BC               	bcf	16316,2,c	;volatile
  8283                           
  8284                           ;eadog.c: 174:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  8285                           ;stkvar	_strPtr @ sp[(0)+-1]
  8286  00542C  0EFF               	movlw	-1
  8287  00542E  006F FF8C  F048    	movff	plusw1,btemp+11
  8288  005434  0060  F123  FFE6   	movff	btemp+11,postinc1
  8289  00543A  0E00               	movlw	0
  8290  00543C  6EE6               	movwf	postinc1,c
  8291  00543E  ECB7  F029         	call	_strlen	;wreg free
  8292  005442  503E               	movf	btemp+1,w,c
  8293  005444  E104               	bnz	u5170
  8294  005446  0E41               	movlw	65
  8295  005448  5C3D               	subwf	btemp,w,c
  8296  00544A  A0D8               	btfss	status,0,c
  8297  00544C  D008               	goto	l8479
  8298  00544E                     u5170:
  8299                           
  8300                           ;stkvar	_strPtr @ sp[(0)+-1]
  8301  00544E  0EFF               	movlw	-1
  8302  005450  50E3               	movf	plusw1,w,c
  8303  005452  6ED9               	movwf	fsr2l,c
  8304  005454  6ADA               	clrf	fsr2h,c
  8305  005456  0E40               	movlw	64
  8306  005458  26D9               	addwf	fsr2l,f,c
  8307  00545A  0E00               	movlw	0
  8308  00545C  6EDF               	movwf	indf2,c
  8309  00545E                     l8479:
  8310                           
  8311                           ;eadog.c: 175:  DMA1CON0bits.EN = 0;
  8312  00545E  013B               	movlb	59	; () banked
  8313  005460  9FFC               	bcf	252,7,b	;volatile
  8314                           
  8315                           ; BSR set to: 59
  8316                           ;eadog.c: 176:  DMA1SSZ = strlen(strPtr);
  8317                           ;stkvar	_strPtr @ sp[(0)+-1]
  8318  005462  0EFF               	movlw	-1
  8319  005464  006F FF8C  F048    	movff	plusw1,btemp+11
  8320  00546A  0060  F123  FFE6   	movff	btemp+11,postinc1
  8321  005470  0E00               	movlw	0
  8322  005472  6EE6               	movwf	postinc1,c
  8323  005474  ECB7  F029         	call	_strlen	;wreg free
  8324  005478  0060  F0F7  FBF7   	movff	btemp,15351	;volatile
  8325  00547E  0060  F0FB  FBF8   	movff	btemp+1,15352	;volatile
  8326                           
  8327                           ;eadog.c: 177:  DMA1CON0bits.EN = 1;
  8328  005484  013B               	movlb	59	; () banked
  8329  005486  8FFC               	bsf	252,7,b	;volatile
  8330                           
  8331                           ; BSR set to: 59
  8332                           ;eadog.c: 178:  printf("%s", strPtr);
  8333                           ;stkvar	_strPtr @ sp[(0)+-1]
  8334  005488  0EFF               	movlw	-1
  8335  00548A  006F FF8C  F048    	movff	plusw1,btemp+11
  8336  005490  0060  F123  FFE6   	movff	btemp+11,postinc1
  8337  005496  0E00               	movlw	0
  8338  005498  6EE6               	movwf	postinc1,c
  8339  00549A  0EA6               	movlw	(STR_2+9)& (0+255)
  8340  00549C  6EE6               	movwf	postinc1,c
  8341  00549E  0E03               	movlw	3
  8342  0054A0  6EE6               	movwf	postinc1,c
  8343  0054A2  EC96  F02C         	call	_printf	;wreg free
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;eadog.c: 179:  start_lcd();
  8347  0054A6  ECD4  F032         	call	_start_lcd	;wreg free
  8348                           
  8349                           ; BSR set to: 59
  8350                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8351  0054AA  52E5               	movf	postdec1,f,c
  8352  0054AC  0012               	return		;funcret
  8353  0054AE                     __end_of_eaDogM_WriteString:
  8354                           	opt callstack 0
  8355                           
  8356 ;; *************** function _eaDogM_WriteCommand *****************
  8357 ;; Defined at:
  8358 ;;		line 143 in file "eadog.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;  cmd             1  [STACK] unsigned char 
  8361 ;; Auto vars:     Size  Location     Type
  8362 ;;		None
  8363 ;; Return value:  Size  Location     Type
  8364 ;;                  1  [STACK] void 
  8365 ;; Registers used:
  8366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8367 ;; Tracked objects:
  8368 ;;		On entry : 3F/3D
  8369 ;;		On exit  : 3F/0
  8370 ;;		Unchanged: 0/0
  8371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8376 ;;Total ram usage:        0 bytes
  8377 ;; Hardware stack levels used:    1
  8378 ;; Hardware stack levels required when called:   13
  8379 ;; This function calls:
  8380 ;;		_send_lcd_cmd_dma
  8381 ;; This function is called by:
  8382 ;;		_main
  8383 ;; This function uses a reentrant model
  8384 ;;
  8385                           
  8386                           	psect	text31
  8387  006518                     __ptext31:
  8388                           	opt callstack 0
  8389  006518                     _eaDogM_WriteCommand:
  8390                           	opt callstack 17
  8391                           
  8392                           ;eadog.c: 143: void eaDogM_WriteCommand(uint8_t cmd);eadog.c: 144: {;eadog.c: 145:  send
      +                          _lcd_cmd_dma(cmd);
  8393                           ;stkvar	_cmd @ sp[(0)+-1]
  8394                           
  8395                           ; BSR set to: 59
  8396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8397                           ;incstack = 0
  8398  006518  0EFF               	movlw	-1
  8399  00651A  50E3               	movf	plusw1,w,c
  8400  00651C  6EE6               	movwf	postinc1,c
  8401  00651E  EC24  F02D         	call	_send_lcd_cmd_dma	;wreg free
  8402                           
  8403                           ; BSR set to: 0
  8404                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  8405  006522  52E5               	movf	postdec1,f,c
  8406  006524  0012               	return		;funcret
  8407  006526                     __end_of_eaDogM_WriteCommand:
  8408                           	opt callstack 0
  8409                           
  8410 ;; *************** function _send_lcd_cmd_dma *****************
  8411 ;; Defined at:
  8412 ;;		line 188 in file "eadog.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  strPtr          1  [STACK] unsigned char 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;		None
  8417 ;; Return value:  Size  Location     Type
  8418 ;;                  1  [STACK] void 
  8419 ;; Registers used:
  8420 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  8421 ;; Tracked objects:
  8422 ;;		On entry : 0/0
  8423 ;;		On exit  : 3F/0
  8424 ;;		Unchanged: 0/0
  8425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8426 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8427 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8428 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8429 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8430 ;;Total ram usage:        0 bytes
  8431 ;; Hardware stack levels used:    1
  8432 ;; Hardware stack levels required when called:   12
  8433 ;; This function calls:
  8434 ;;		_printf
  8435 ;;		_ringBufS_flush
  8436 ;;		_start_lcd
  8437 ;;		_wait_lcd_done
  8438 ;;		_wait_lcd_set
  8439 ;; This function is called by:
  8440 ;;		_eaDogM_WriteCommand
  8441 ;;		_eaDogM_WriteStringAtPos
  8442 ;; This function uses a reentrant model
  8443 ;;
  8444                           
  8445                           	psect	text32
  8446  005A48                     __ptext32:
  8447                           	opt callstack 0
  8448  005A48                     _send_lcd_cmd_dma:
  8449                           	opt callstack 17
  8450                           
  8451                           ; BSR set to: 0
  8452                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8453                           ;incstack = 0
  8454                           ;eadog.c: 188: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 189: {;eadog.c: 190:  do {
      +                           LATEbits.LATE1 = 1; } while(0);
  8455  005A48  82BE               	bsf	16318,1,c	;volatile
  8456                           
  8457                           ;eadog.c: 191:  wait_lcd_set();
  8458  005A4A  ECD1  F032         	call	_wait_lcd_set	;wreg free
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;eadog.c: 193:  ringBufS_flush(spi_link.tx1a, 0);
  8462  005A4E  0E00               	movlw	0
  8463  005A50  6EE6               	movwf	postinc1,c
  8464  005A52  0060  F357  FFE6   	movff	_spi_link+6,postinc1
  8465  005A58  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
  8466  005A5E  EC3E  F02B         	call	_ringBufS_flush	;wreg free
  8467  005A62  92BC               	bcf	16316,1,c	;volatile
  8468  005A64  94BC               	bcf	16316,2,c	;volatile
  8469                           
  8470                           ;eadog.c: 196:  DMA1CON0bits.EN = 0;
  8471  005A66  013B               	movlb	59	; () banked
  8472  005A68  9FFC               	bcf	252,7,b	;volatile
  8473                           
  8474                           ; BSR set to: 59
  8475                           ;eadog.c: 197:  DMA1SSZ = 1;
  8476  005A6A  0E00               	movlw	0
  8477  005A6C  6FF8               	movwf	248,b	;volatile
  8478  005A6E  0E01               	movlw	1
  8479  005A70  6FF7               	movwf	247,b	;volatile
  8480                           
  8481                           ; BSR set to: 59
  8482                           ;eadog.c: 198:  DMA1CON0bits.EN = 1;
  8483  005A72  8FFC               	bsf	252,7,b	;volatile
  8484                           
  8485                           ; BSR set to: 59
  8486                           ;eadog.c: 199:  printf("%c", strPtr);
  8487                           ;stkvar	_strPtr @ sp[(0)+-1]
  8488  005A74  0EFF               	movlw	-1
  8489  005A76  50E3               	movf	plusw1,w,c
  8490  005A78  6EE6               	movwf	postinc1,c
  8491  005A7A  0E00               	movlw	0
  8492  005A7C  6EE6               	movwf	postinc1,c
  8493  005A7E  0EC1               	movlw	STR_17& (0+255)
  8494  005A80  6EE6               	movwf	postinc1,c
  8495  005A82  0E03               	movlw	3
  8496  005A84  6EE6               	movwf	postinc1,c
  8497  005A86  EC96  F02C         	call	_printf	;wreg free
  8498                           
  8499                           ; BSR set to: 0
  8500                           ;eadog.c: 200:  start_lcd();
  8501  005A8A  ECD4  F032         	call	_start_lcd	;wreg free
  8502                           
  8503                           ; BSR set to: 59
  8504                           ;eadog.c: 201:  wait_lcd_done();
  8505  005A8E  EC12  F032         	call	_wait_lcd_done	;wreg free
  8506                           
  8507                           ; BSR set to: 0
  8508  005A92  82BC               	bsf	16316,1,c	;volatile
  8509                           
  8510                           ; BSR set to: 0
  8511                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  8512  005A94  52E5               	movf	postdec1,f,c
  8513  005A96  0012               	return		;funcret
  8514  005A98                     __end_of_send_lcd_cmd_dma:
  8515                           	opt callstack 0
  8516                           
  8517 ;; *************** function _wait_lcd_set *****************
  8518 ;; Defined at:
  8519 ;;		line 114 in file "eadog.c"
  8520 ;; Parameters:    Size  Location     Type
  8521 ;;		None
  8522 ;; Auto vars:     Size  Location     Type
  8523 ;;		None
  8524 ;; Return value:  Size  Location     Type
  8525 ;;                  1  [STACK] void 
  8526 ;; Registers used:
  8527 ;;		None
  8528 ;; Tracked objects:
  8529 ;;		On entry : 0/0
  8530 ;;		On exit  : 3F/0
  8531 ;;		Unchanged: 0/0
  8532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8537 ;;Total ram usage:        0 bytes
  8538 ;; Hardware stack levels used:    1
  8539 ;; Hardware stack levels required when called:    3
  8540 ;; This function calls:
  8541 ;;		Nothing
  8542 ;; This function is called by:
  8543 ;;		_eaDogM_WriteString
  8544 ;;		_send_lcd_cmd_dma
  8545 ;; This function uses a reentrant model
  8546 ;;
  8547                           
  8548                           	psect	text33
  8549  0065A2                     __ptext33:
  8550                           	opt callstack 0
  8551  0065A2                     _wait_lcd_set:
  8552                           	opt callstack 25
  8553                           
  8554                           ;eadog.c: 116:  spi_link.LCD_DATA = 1;
  8555                           
  8556                           ; BSR set to: 0
  8557                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8558                           ;incstack = 0
  8559  0065A2  0100               	movlb	0	; () banked
  8560  0065A4  87CF               	bsf	_spi_link& (0+255),3,b	;volatile
  8561                           
  8562                           ; BSR set to: 0
  8563                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  8564  0065A6  0012               	return		;funcret
  8565  0065A8                     __end_of_wait_lcd_set:
  8566                           	opt callstack 0
  8567                           
  8568 ;; *************** function _wait_lcd_done *****************
  8569 ;; Defined at:
  8570 ;;		line 124 in file "eadog.c"
  8571 ;; Parameters:    Size  Location     Type
  8572 ;;		None
  8573 ;; Auto vars:     Size  Location     Type
  8574 ;;		None
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  1  [STACK] void 
  8577 ;; Registers used:
  8578 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8579 ;; Tracked objects:
  8580 ;;		On entry : 4/0
  8581 ;;		On exit  : 3F/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8588 ;;Total ram usage:        0 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; Hardware stack levels required when called:    4
  8591 ;; This function calls:
  8592 ;;		_wdtdelay
  8593 ;; This function is called by:
  8594 ;;		_main
  8595 ;;		_send_lcd_cmd_dma
  8596 ;; This function uses a reentrant model
  8597 ;;
  8598                           
  8599                           	psect	text34
  8600  006424                     __ptext34:
  8601                           	opt callstack 0
  8602  006424                     _wait_lcd_done:
  8603                           	opt callstack 26
  8604                           
  8605                           ;eadog.c: 126:  while (spi_link.LCD_DATA);
  8606                           
  8607                           ; BSR set to: 0
  8608                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8609                           ;incstack = 0
  8610  006424  0100               	movlb	0	; () banked
  8611  006426  B7CF               	btfsc	_spi_link& (0+255),3,b	;volatile
  8612  006428  D7FD               	goto	_wait_lcd_done
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;eadog.c: 127:  wdtdelay(50);
  8616  00642A  0E32               	movlw	50
  8617  00642C  6EE6               	movwf	postinc1,c
  8618  00642E  0E00               	movlw	0
  8619  006430  6EE6               	movwf	postinc1,c
  8620  006432  0E00               	movlw	0
  8621  006434  6EE6               	movwf	postinc1,c
  8622  006436  0E00               	movlw	0
  8623  006438  6EE6               	movwf	postinc1,c
  8624  00643A  ECF6  F02C         	call	_wdtdelay	;wreg free
  8625                           
  8626                           ; BSR set to: 0
  8627                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  8628  00643E  0012               	return		;funcret
  8629  006440                     __end_of_wait_lcd_done:
  8630                           	opt callstack 0
  8631                           
  8632 ;; *************** function _wdtdelay *****************
  8633 ;; Defined at:
  8634 ;;		line 21 in file "eadog.c"
  8635 ;; Parameters:    Size  Location     Type
  8636 ;;  delay           4  [STACK] unsigned long 
  8637 ;; Auto vars:     Size  Location     Type
  8638 ;;		None
  8639 ;; Return value:  Size  Location     Type
  8640 ;;                  1  [STACK] void 
  8641 ;; Registers used:
  8642 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  8643 ;; Tracked objects:
  8644 ;;		On entry : 0/0
  8645 ;;		On exit  : 3F/0
  8646 ;;		Unchanged: 0/0
  8647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8651 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8652 ;;Total ram usage:        0 bytes
  8653 ;; Hardware stack levels used:    1
  8654 ;; Hardware stack levels required when called:    3
  8655 ;; This function calls:
  8656 ;;		Nothing
  8657 ;; This function is called by:
  8658 ;;		_init_display
  8659 ;;		_send_lcd_cmd
  8660 ;;		_send_lcd_cmd_long
  8661 ;;		_wait_lcd_done
  8662 ;; This function uses a reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text35
  8666  0059EC                     __ptext35:
  8667                           	opt callstack 0
  8668  0059EC                     _wdtdelay:
  8669                           	opt callstack 26
  8670                           
  8671                           ;eadog.c: 21: void wdtdelay(uint32_t delay);eadog.c: 22: {;eadog.c: 23:  static uint32_t
      +                           dcount;;eadog.c: 25:  for (dcount = 0; dcount <= delay; dcount++) {
  8672                           
  8673                           ; BSR set to: 0
  8674                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8675                           ;incstack = 0
  8676  0059EC  0100               	movlb	0	; () banked
  8677  0059EE  6BE2               	clrf	wdtdelay@dcount& (0+255),b
  8678  0059F0  6BE3               	clrf	(wdtdelay@dcount+1)& (0+255),b
  8679  0059F2  6BE4               	clrf	(wdtdelay@dcount+2)& (0+255),b
  8680  0059F4  6BE5               	clrf	(wdtdelay@dcount+3)& (0+255),b
  8681  0059F6  D009               	goto	l5687
  8682  0059F8                     l1353:
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;eadog.c: 26:   __nop();
  8686  0059F8  F000               	nop	
  8687  0059FA  0004               	clrwdt		;# 
  8688                           
  8689                           ;eadog.c: 28:  };
  8690  0059FC  0E01               	movlw	1
  8691  0059FE  0100               	movlb	0	; () banked
  8692  005A00  27E2               	addwf	wdtdelay@dcount& (0+255),f,b
  8693  005A02  0E00               	movlw	0
  8694  005A04  23E3               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  8695  005A06  23E4               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  8696  005A08  23E5               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  8697  005A0A                     l5687:
  8698                           
  8699                           ; BSR set to: 0
  8700                           ;stkvar	_delay @ sp[(0)+-4]
  8701  005A0A  0EFC               	movlw	-4
  8702  005A0C  006F FF8C  F03D    	movff	plusw1,btemp
  8703  005A12  51E2               	movf	wdtdelay@dcount& (0+255),w,b
  8704  005A14  5C3D               	subwf	btemp,w,c
  8705  005A16  0EFD               	movlw	-3
  8706  005A18  006F FF8C  F03D    	movff	plusw1,btemp
  8707  005A1E  51E3               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  8708  005A20  583D               	subwfb	btemp,w,c
  8709  005A22  0EFE               	movlw	-2
  8710  005A24  006F FF8C  F03D    	movff	plusw1,btemp
  8711  005A2A  51E4               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  8712  005A2C  583D               	subwfb	btemp,w,c
  8713  005A2E  0EFF               	movlw	-1
  8714  005A30  006F FF8C  F03D    	movff	plusw1,btemp
  8715  005A36  51E5               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  8716  005A38  583D               	subwfb	btemp,w,c
  8717  005A3A  B0D8               	btfsc	status,0,c
  8718  005A3C  D7DD               	goto	l1353
  8719                           
  8720                           ; BSR set to: 0
  8721                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  8722  005A3E  52E5               	movf	postdec1,f,c
  8723  005A40  52E5               	movf	postdec1,f,c
  8724  005A42  52E5               	movf	postdec1,f,c
  8725  005A44  52E5               	movf	postdec1,f,c
  8726  005A46  0012               	return		;funcret
  8727  005A48                     __end_of_wdtdelay:
  8728                           	opt callstack 0
  8729                           
  8730 ;; *************** function _start_lcd *****************
  8731 ;; Defined at:
  8732 ;;		line 109 in file "eadog.c"
  8733 ;; Parameters:    Size  Location     Type
  8734 ;;		None
  8735 ;; Auto vars:     Size  Location     Type
  8736 ;;		None
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  1  [STACK] void 
  8739 ;; Registers used:
  8740 ;;		None
  8741 ;; Tracked objects:
  8742 ;;		On entry : 3F/0
  8743 ;;		On exit  : 3F/3B
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8750 ;;Total ram usage:        0 bytes
  8751 ;; Hardware stack levels used:    1
  8752 ;; Hardware stack levels required when called:    3
  8753 ;; This function calls:
  8754 ;;		Nothing
  8755 ;; This function is called by:
  8756 ;;		_eaDogM_WriteString
  8757 ;;		_send_lcd_cmd_dma
  8758 ;; This function uses a reentrant model
  8759 ;;
  8760                           
  8761                           	psect	text36
  8762  0065A8                     __ptext36:
  8763                           	opt callstack 0
  8764  0065A8                     _start_lcd:
  8765                           	opt callstack 25
  8766                           
  8767                           ;eadog.c: 111:  DMA1CON0bits.DMA1SIRQEN = 1;
  8768                           
  8769                           ; BSR set to: 0
  8770                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8771                           ;incstack = 0
  8772  0065A8  013B               	movlb	59	; () banked
  8773  0065AA  8DFC               	bsf	252,6,b	;volatile
  8774                           
  8775                           ; BSR set to: 59
  8776                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  8777  0065AC  0012               	return		;funcret
  8778  0065AE                     __end_of_start_lcd:
  8779                           	opt callstack 0
  8780                           
  8781 ;; *************** function _ringBufS_flush *****************
  8782 ;; Defined at:
  8783 ;;		line 76 in file "ringbufs.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  _this           2  [STACK] PTR struct ringBufS_t
  8786 ;;		 -> ring_buf1(67), 
  8787 ;;  clearBuffer     1  [STACK] const char 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;                  1  [STACK] void 
  8792 ;; Registers used:
  8793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8794 ;; Tracked objects:
  8795 ;;		On entry : 3F/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8803 ;;Total ram usage:        0 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; Hardware stack levels required when called:    4
  8806 ;; This function calls:
  8807 ;;		_memset
  8808 ;; This function is called by:
  8809 ;;		_eaDogM_WriteString
  8810 ;;		_send_lcd_cmd_dma
  8811 ;; This function uses a reentrant model
  8812 ;;
  8813                           
  8814                           	psect	text37
  8815  00567C                     __ptext37:
  8816                           	opt callstack 0
  8817  00567C                     _ringBufS_flush:
  8818                           	opt callstack 24
  8819                           
  8820                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  8821                           ;stkvar	__this @ sp[(0)+-2]
  8822                           
  8823                           ; BSR set to: 59
  8824                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8825                           ;incstack = 0
  8826  00567C  0EFE               	movlw	-2
  8827  00567E  006F FF8C  F047    	movff	plusw1,btemp+10
  8828  005684  0EFF               	movlw	-1
  8829  005686  006F FF8C  F048    	movff	plusw1,btemp+11
  8830  00568C  0E42               	movlw	66
  8831  00568E  2447               	addwf	btemp+10,w,c
  8832  005690  6ED9               	movwf	fsr2l,c
  8833  005692  0E00               	movlw	0
  8834  005694  2048               	addwfc	btemp+11,w,c
  8835  005696  6EDA               	movwf	fsr2h,c
  8836  005698  0E00               	movlw	0
  8837  00569A  6EDF               	movwf	indf2,c
  8838                           
  8839                           ;ringbufs.c: 79:  _this->head = 0;
  8840                           ;stkvar	__this @ sp[(0)+-2]
  8841  00569C  0EFE               	movlw	-2
  8842  00569E  006F FF8C  F047    	movff	plusw1,btemp+10
  8843  0056A4  0EFF               	movlw	-1
  8844  0056A6  006F FF8C  F048    	movff	plusw1,btemp+11
  8845  0056AC  0E40               	movlw	64
  8846  0056AE  2447               	addwf	btemp+10,w,c
  8847  0056B0  6ED9               	movwf	fsr2l,c
  8848  0056B2  0E00               	movlw	0
  8849  0056B4  2048               	addwfc	btemp+11,w,c
  8850  0056B6  6EDA               	movwf	fsr2h,c
  8851  0056B8  0E00               	movlw	0
  8852  0056BA  6EDF               	movwf	indf2,c
  8853                           
  8854                           ;ringbufs.c: 80:  _this->tail = 0;
  8855                           ;stkvar	__this @ sp[(0)+-2]
  8856  0056BC  0EFE               	movlw	-2
  8857  0056BE  006F FF8C  F047    	movff	plusw1,btemp+10
  8858  0056C4  0EFF               	movlw	-1
  8859  0056C6  006F FF8C  F048    	movff	plusw1,btemp+11
  8860  0056CC  0E41               	movlw	65
  8861  0056CE  2447               	addwf	btemp+10,w,c
  8862  0056D0  6ED9               	movwf	fsr2l,c
  8863  0056D2  0E00               	movlw	0
  8864  0056D4  2048               	addwfc	btemp+11,w,c
  8865  0056D6  6EDA               	movwf	fsr2h,c
  8866  0056D8  0E00               	movlw	0
  8867  0056DA  6EDF               	movwf	indf2,c
  8868                           
  8869                           ;ringbufs.c: 81:  if (clearBuffer) {
  8870                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  8871  0056DC  0EFD               	movlw	-3
  8872  0056DE  50E3               	movf	plusw1,w,c
  8873  0056E0  B4D8               	btfsc	status,2,c
  8874  0056E2  D011               	goto	l1493
  8875                           
  8876                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  8877  0056E4  0E40               	movlw	64
  8878  0056E6  6EE6               	movwf	postinc1,c
  8879  0056E8  0E00               	movlw	0
  8880  0056EA  6EE6               	movwf	postinc1,c
  8881  0056EC  0E00               	movlw	0
  8882  0056EE  6EE6               	movwf	postinc1,c
  8883  0056F0  0E00               	movlw	0
  8884  0056F2  6EE6               	movwf	postinc1,c
  8885                           
  8886                           ;stkvar	__this @ sp[(-4)+-2]
  8887  0056F4  0EFA               	movlw	-6
  8888  0056F6  006F FF8F FFE6     	movff	plusw1,postinc1
  8889  0056FC  006F FF8F FFE6     	movff	plusw1,postinc1
  8890  005702  ECB9  F01B         	call	_memset	;wreg free
  8891  005706                     l1493:
  8892                           
  8893                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  8894  005706  52E5               	movf	postdec1,f,c
  8895  005708  52E5               	movf	postdec1,f,c
  8896  00570A  52E5               	movf	postdec1,f,c
  8897  00570C  0012               	return		;funcret
  8898  00570E                     __end_of_ringBufS_flush:
  8899                           	opt callstack 0
  8900                           
  8901 ;; *************** function _memset *****************
  8902 ;; Defined at:
  8903 ;;		line 4 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/memset.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  dest            2  [STACK] PTR void 
  8906 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8907 ;;  c               2  [STACK] int 
  8908 ;;  n               2  [STACK] unsigned int 
  8909 ;; Auto vars:     Size  Location     Type
  8910 ;;  s               2  [STACK] PTR unsigned char 
  8911 ;;		 -> ring_buf2(67), ring_buf1(67), 
  8912 ;;  k               2  [STACK] unsigned int 
  8913 ;; Return value:  Size  Location     Type
  8914 ;;                  2  [STACK] PTR void 
  8915 ;; Registers used:
  8916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  8917 ;; Tracked objects:
  8918 ;;		On entry : 0/0
  8919 ;;		On exit  : 0/0
  8920 ;;		Unchanged: 0/0
  8921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8926 ;;Total ram usage:        0 bytes
  8927 ;; Hardware stack levels used:    1
  8928 ;; Hardware stack levels required when called:    3
  8929 ;; This function calls:
  8930 ;;		Nothing
  8931 ;; This function is called by:
  8932 ;;		_ringBufS_init
  8933 ;;		_ringBufS_flush
  8934 ;; This function uses a reentrant model
  8935 ;;
  8936                           
  8937                           	psect	text38
  8938  003772                     __ptext38:
  8939                           	opt callstack 0
  8940  003772                     _memset:
  8941                           	opt callstack 0
  8942                           
  8943                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  8944  003772  52E6               	movf	postinc1,f,c
  8945  003774  52E6               	movf	postinc1,f,c
  8946  003776  52E6               	movf	postinc1,f,c
  8947  003778  52E6               	movf	postinc1,f,c
  8948                           
  8949                           ;stkvar	_dest @ sp[(-4)+-2]
  8950                           
  8951                           ;incstack = 0
  8952  00377A  0EFA               	movlw	-6
  8953  00377C  006F FF8C  F047    	movff	plusw1,btemp+10
  8954  003782  0EFB               	movlw	-5
  8955  003784  006F FF8C  F048    	movff	plusw1,btemp+11
  8956                           
  8957                           ;stkvar	_s @ sp[(-4)+0]
  8958  00378A  0EFD               	movlw	-3
  8959  00378C  0060  F123  FFE3   	movff	btemp+11,plusw1
  8960  003792  0EFC               	movlw	-4
  8961  003794  0060  F11F  FFE3   	movff	btemp+10,plusw1
  8962                           
  8963                           ;stkvar	_n @ sp[(-4)+-6]
  8964  00379A  0EF6               	movlw	-10
  8965  00379C  006F FF8C  F03D    	movff	plusw1,btemp
  8966  0037A2  0EF7               	movlw	-9
  8967  0037A4  50E3               	movf	plusw1,w,c
  8968  0037A6  103D               	iorwf	btemp,w,c
  8969  0037A8  B4D8               	btfsc	status,2,c
  8970  0037AA  D154               	goto	u5090
  8971                           
  8972                           ;stkvar	_c @ sp[(-4)+-4]
  8973                           ;stkvar	_s @ sp[(-4)+0]
  8974  0037AC  0EFC               	movlw	-4
  8975  0037AE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8976  0037B4  0EFD               	movlw	-3
  8977  0037B6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8978  0037BC  0EF8               	movlw	-8
  8979  0037BE  006F FF8F FFDF     	movff	plusw1,indf2
  8980                           
  8981                           ;stkvar	_c @ sp[(-4)+-4]
  8982                           ;stkvar	_n @ sp[(-4)+-6]
  8983                           ;stkvar	_s @ sp[(-4)+0]
  8984  0037C4  0EFC               	movlw	-4
  8985  0037C6  006F FF8C  F047    	movff	plusw1,btemp+10
  8986  0037CC  0EFD               	movlw	-3
  8987  0037CE  006F FF8C  F048    	movff	plusw1,btemp+11
  8988  0037D4  0EF6               	movlw	-10
  8989  0037D6  50E3               	movf	plusw1,w,c
  8990  0037D8  2647               	addwf	btemp+10,f,c
  8991  0037DA  0EF7               	movlw	-9
  8992  0037DC  50E3               	movf	plusw1,w,c
  8993  0037DE  2248               	addwfc	btemp+11,f,c
  8994  0037E0  0EFF               	movlw	255
  8995  0037E2  2447               	addwf	btemp+10,w,c
  8996  0037E4  6ED9               	movwf	fsr2l,c
  8997  0037E6  0EFF               	movlw	255
  8998  0037E8  2048               	addwfc	btemp+11,w,c
  8999  0037EA  6EDA               	movwf	fsr2h,c
  9000  0037EC  0EF8               	movlw	-8
  9001  0037EE  006F FF8F FFDF     	movff	plusw1,indf2
  9002                           
  9003                           ;stkvar	_n @ sp[(-4)+-6]
  9004  0037F4  0EF7               	movlw	-9
  9005  0037F6  50E3               	movf	plusw1,w,c
  9006  0037F8  E108               	bnz	l8337
  9007  0037FA  0EF6               	movlw	-10
  9008  0037FC  006F FF8C  F03D    	movff	plusw1,btemp
  9009  003802  0E03               	movlw	3
  9010  003804  5E3D               	subwf	btemp,f,c
  9011  003806  A0D8               	btfss	status,0,c
  9012  003808  D125               	goto	u5090
  9013  00380A                     l8337:
  9014                           
  9015                           ;stkvar	_c @ sp[(-4)+-4]
  9016                           ;stkvar	_s @ sp[(-4)+0]
  9017  00380A  0EFC               	movlw	-4
  9018  00380C  006F FF8C  F047    	movff	plusw1,btemp+10
  9019  003812  0EFD               	movlw	-3
  9020  003814  006F FF8C  F048    	movff	plusw1,btemp+11
  9021  00381A  0E01               	movlw	1
  9022  00381C  2447               	addwf	btemp+10,w,c
  9023  00381E  6ED9               	movwf	fsr2l,c
  9024  003820  0E00               	movlw	0
  9025  003822  2048               	addwfc	btemp+11,w,c
  9026  003824  6EDA               	movwf	fsr2h,c
  9027  003826  0EF8               	movlw	-8
  9028  003828  006F FF8F FFDF     	movff	plusw1,indf2
  9029                           
  9030                           ;stkvar	_c @ sp[(-4)+-4]
  9031                           ;stkvar	_s @ sp[(-4)+0]
  9032  00382E  0EFC               	movlw	-4
  9033  003830  006F FF8C  F047    	movff	plusw1,btemp+10
  9034  003836  0EFD               	movlw	-3
  9035  003838  006F FF8C  F048    	movff	plusw1,btemp+11
  9036  00383E  0E02               	movlw	2
  9037  003840  2447               	addwf	btemp+10,w,c
  9038  003842  6ED9               	movwf	fsr2l,c
  9039  003844  0E00               	movlw	0
  9040  003846  2048               	addwfc	btemp+11,w,c
  9041  003848  6EDA               	movwf	fsr2h,c
  9042  00384A  0EF8               	movlw	-8
  9043  00384C  006F FF8F FFDF     	movff	plusw1,indf2
  9044                           
  9045                           ;stkvar	_c @ sp[(-4)+-4]
  9046                           ;stkvar	_n @ sp[(-4)+-6]
  9047                           ;stkvar	_s @ sp[(-4)+0]
  9048  003852  0EFC               	movlw	-4
  9049  003854  006F FF8C  F047    	movff	plusw1,btemp+10
  9050  00385A  0EFD               	movlw	-3
  9051  00385C  006F FF8C  F048    	movff	plusw1,btemp+11
  9052  003862  0EF6               	movlw	-10
  9053  003864  50E3               	movf	plusw1,w,c
  9054  003866  2647               	addwf	btemp+10,f,c
  9055  003868  0EF7               	movlw	-9
  9056  00386A  50E3               	movf	plusw1,w,c
  9057  00386C  2248               	addwfc	btemp+11,f,c
  9058  00386E  0EFE               	movlw	254
  9059  003870  2447               	addwf	btemp+10,w,c
  9060  003872  6ED9               	movwf	fsr2l,c
  9061  003874  0EFF               	movlw	255
  9062  003876  2048               	addwfc	btemp+11,w,c
  9063  003878  6EDA               	movwf	fsr2h,c
  9064  00387A  0EF8               	movlw	-8
  9065  00387C  006F FF8F FFDF     	movff	plusw1,indf2
  9066                           
  9067                           ;stkvar	_c @ sp[(-4)+-4]
  9068                           ;stkvar	_n @ sp[(-4)+-6]
  9069                           ;stkvar	_s @ sp[(-4)+0]
  9070  003882  0EFC               	movlw	-4
  9071  003884  006F FF8C  F047    	movff	plusw1,btemp+10
  9072  00388A  0EFD               	movlw	-3
  9073  00388C  006F FF8C  F048    	movff	plusw1,btemp+11
  9074  003892  0EF6               	movlw	-10
  9075  003894  50E3               	movf	plusw1,w,c
  9076  003896  2647               	addwf	btemp+10,f,c
  9077  003898  0EF7               	movlw	-9
  9078  00389A  50E3               	movf	plusw1,w,c
  9079  00389C  2248               	addwfc	btemp+11,f,c
  9080  00389E  0EFD               	movlw	253
  9081  0038A0  2447               	addwf	btemp+10,w,c
  9082  0038A2  6ED9               	movwf	fsr2l,c
  9083  0038A4  0EFF               	movlw	255
  9084  0038A6  2048               	addwfc	btemp+11,w,c
  9085  0038A8  6EDA               	movwf	fsr2h,c
  9086  0038AA  0EF8               	movlw	-8
  9087  0038AC  006F FF8F FFDF     	movff	plusw1,indf2
  9088                           
  9089                           ;stkvar	_n @ sp[(-4)+-6]
  9090  0038B2  0EF7               	movlw	-9
  9091  0038B4  50E3               	movf	plusw1,w,c
  9092  0038B6  E108               	bnz	l8343
  9093  0038B8  0EF6               	movlw	-10
  9094  0038BA  006F FF8C  F03D    	movff	plusw1,btemp
  9095  0038C0  0E07               	movlw	7
  9096  0038C2  5E3D               	subwf	btemp,f,c
  9097  0038C4  A0D8               	btfss	status,0,c
  9098  0038C6  D0C6               	goto	u5090
  9099  0038C8                     l8343:
  9100                           
  9101                           ;stkvar	_c @ sp[(-4)+-4]
  9102                           ;stkvar	_s @ sp[(-4)+0]
  9103  0038C8  0EFC               	movlw	-4
  9104  0038CA  006F FF8C  F047    	movff	plusw1,btemp+10
  9105  0038D0  0EFD               	movlw	-3
  9106  0038D2  006F FF8C  F048    	movff	plusw1,btemp+11
  9107  0038D8  0E03               	movlw	3
  9108  0038DA  2447               	addwf	btemp+10,w,c
  9109  0038DC  6ED9               	movwf	fsr2l,c
  9110  0038DE  0E00               	movlw	0
  9111  0038E0  2048               	addwfc	btemp+11,w,c
  9112  0038E2  6EDA               	movwf	fsr2h,c
  9113  0038E4  0EF8               	movlw	-8
  9114  0038E6  006F FF8F FFDF     	movff	plusw1,indf2
  9115                           
  9116                           ;stkvar	_c @ sp[(-4)+-4]
  9117                           ;stkvar	_n @ sp[(-4)+-6]
  9118                           ;stkvar	_s @ sp[(-4)+0]
  9119  0038EC  0EFC               	movlw	-4
  9120  0038EE  006F FF8C  F047    	movff	plusw1,btemp+10
  9121  0038F4  0EFD               	movlw	-3
  9122  0038F6  006F FF8C  F048    	movff	plusw1,btemp+11
  9123  0038FC  0EF6               	movlw	-10
  9124  0038FE  50E3               	movf	plusw1,w,c
  9125  003900  2647               	addwf	btemp+10,f,c
  9126  003902  0EF7               	movlw	-9
  9127  003904  50E3               	movf	plusw1,w,c
  9128  003906  2248               	addwfc	btemp+11,f,c
  9129  003908  0EFC               	movlw	252
  9130  00390A  2447               	addwf	btemp+10,w,c
  9131  00390C  6ED9               	movwf	fsr2l,c
  9132  00390E  0EFF               	movlw	255
  9133  003910  2048               	addwfc	btemp+11,w,c
  9134  003912  6EDA               	movwf	fsr2h,c
  9135  003914  0EF8               	movlw	-8
  9136  003916  006F FF8F FFDF     	movff	plusw1,indf2
  9137                           
  9138                           ;stkvar	_n @ sp[(-4)+-6]
  9139  00391C  0EF7               	movlw	-9
  9140  00391E  50E3               	movf	plusw1,w,c
  9141  003920  E108               	bnz	l8349
  9142  003922  0EF6               	movlw	-10
  9143  003924  006F FF8C  F03D    	movff	plusw1,btemp
  9144  00392A  0E09               	movlw	9
  9145  00392C  5E3D               	subwf	btemp,f,c
  9146  00392E  A0D8               	btfss	status,0,c
  9147  003930  D091               	goto	u5090
  9148  003932                     l8349:
  9149                           
  9150                           ;stkvar	_s @ sp[(-4)+0]
  9151  003932  0EFC               	movlw	-4
  9152  003934  006F FF8C  F047    	movff	plusw1,btemp+10
  9153  00393A  1E47               	comf	btemp+10,f,c
  9154  00393C  0EFD               	movlw	-3
  9155  00393E  006F FF8C  F048    	movff	plusw1,btemp+11
  9156  003944  1E48               	comf	btemp+11,f,c
  9157  003946  2A47               	incf	btemp+10,f,c
  9158  003948  B4D8               	btfsc	status,2,c
  9159  00394A  2A48               	incf	btemp+11,f,c
  9160  00394C  0E03               	movlw	3
  9161  00394E  1647               	andwf	btemp+10,f,c
  9162  003950  0E00               	movlw	0
  9163  003952  1648               	andwf	btemp+11,f,c
  9164                           
  9165                           ;stkvar	_k @ sp[(-4)+2]
  9166  003954  0EFE               	movlw	-2
  9167  003956  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9168  00395C  0EFF               	movlw	-1
  9169  00395E  0060  F123  FFE3   	movff	btemp+11,plusw1
  9170                           
  9171                           ;stkvar	_k @ sp[(-4)+2]
  9172                           ;stkvar	_s @ sp[(-4)+0]
  9173  003964  0EFC               	movlw	-4
  9174  003966  50E3               	movf	plusw1,w,c
  9175  003968  6E3D               	movwf	btemp,c
  9176  00396A  0EFE               	movlw	-2
  9177  00396C  50E3               	movf	plusw1,w,c
  9178  00396E  263D               	addwf	btemp,f,c
  9179  003970  0EFC               	movlw	-4
  9180  003972  0060  F0F7  FFE3   	movff	btemp,plusw1
  9181  003978  0EFD               	movlw	-3
  9182  00397A  50E3               	movf	plusw1,w,c
  9183  00397C  6E3D               	movwf	btemp,c
  9184  00397E  0EFF               	movlw	-1
  9185  003980  50E3               	movf	plusw1,w,c
  9186  003982  223D               	addwfc	btemp,f,c
  9187  003984  0EFD               	movlw	-3
  9188  003986  0060  F0F7  FFE3   	movff	btemp,plusw1
  9189                           
  9190                           ;stkvar	_k @ sp[(-4)+2]
  9191                           ;stkvar	_n @ sp[(-4)+-6]
  9192  00398C  0EF6               	movlw	-10
  9193  00398E  50E3               	movf	plusw1,w,c
  9194  003990  6E3D               	movwf	btemp,c
  9195  003992  0EFE               	movlw	-2
  9196  003994  50E3               	movf	plusw1,w,c
  9197  003996  5E3D               	subwf	btemp,f,c
  9198  003998  0EF6               	movlw	-10
  9199  00399A  0060  F0F7  FFE3   	movff	btemp,plusw1
  9200  0039A0  0EF7               	movlw	-9
  9201  0039A2  50E3               	movf	plusw1,w,c
  9202  0039A4  6E3D               	movwf	btemp,c
  9203  0039A6  0EFF               	movlw	-1
  9204  0039A8  50E3               	movf	plusw1,w,c
  9205  0039AA  5A3D               	subwfb	btemp,f,c
  9206  0039AC  0EF7               	movlw	-9
  9207  0039AE  0060  F0F7  FFE3   	movff	btemp,plusw1
  9208  0039B4  0EFC               	movlw	252
  9209  0039B6  6E47               	movwf	btemp+10,c
  9210  0039B8  0EFF               	movlw	255
  9211  0039BA  6E48               	movwf	btemp+11,c
  9212                           
  9213                           ;stkvar	_n @ sp[(-4)+-6]
  9214  0039BC  0EF6               	movlw	-10
  9215  0039BE  006F FF8C  F03D    	movff	plusw1,btemp
  9216  0039C4  5047               	movf	btemp+10,w,c
  9217  0039C6  163D               	andwf	btemp,f,c
  9218  0039C8  0EF6               	movlw	-10
  9219  0039CA  0060  F0F7  FFE3   	movff	btemp,plusw1
  9220  0039D0  0EF7               	movlw	-9
  9221  0039D2  006F FF8C  F03D    	movff	plusw1,btemp
  9222  0039D8  5048               	movf	btemp+11,w,c
  9223  0039DA  163D               	andwf	btemp,f,c
  9224  0039DC  0EF7               	movlw	-9
  9225  0039DE  D02E               	goto	L26
  9226  0039E0                     l8357:
  9227                           
  9228                           ;stkvar	_c @ sp[(-4)+-4]
  9229                           ;stkvar	_s @ sp[(-4)+0]
  9230  0039E0  0EFC               	movlw	-4
  9231  0039E2  006F FF8F FFD9     	movff	plusw1,fsr2l
  9232  0039E8  0EFD               	movlw	-3
  9233  0039EA  006F FF8F FFDA     	movff	plusw1,fsr2h
  9234  0039F0  0EF8               	movlw	-8
  9235  0039F2  006F FF8F FFDF     	movff	plusw1,indf2
  9236                           
  9237                           ;stkvar	_n @ sp[(-4)+-6]
  9238  0039F8  0EF6               	movlw	-10
  9239  0039FA  006F FF8C  F03D    	movff	plusw1,btemp
  9240  003A00  0E01               	movlw	1
  9241  003A02  5E3D               	subwf	btemp,f,c
  9242  003A04  0EF6               	movlw	-10
  9243  003A06  0060  F0F7  FFE3   	movff	btemp,plusw1
  9244  003A0C  0EF7               	movlw	-9
  9245  003A0E  006F FF8C  F03D    	movff	plusw1,btemp
  9246  003A14  0E00               	movlw	0
  9247  003A16  5A3D               	subwfb	btemp,f,c
  9248  003A18  0EF7               	movlw	-9
  9249  003A1A  0060  F0F7  FFE3   	movff	btemp,plusw1
  9250                           
  9251                           ;stkvar	_s @ sp[(-4)+0]
  9252  003A20  0EFC               	movlw	-4
  9253  003A22  50E3               	movf	plusw1,w,c
  9254  003A24  0F01               	addlw	1
  9255  003A26  6E3D               	movwf	btemp,c
  9256  003A28  0EFC               	movlw	-4
  9257  003A2A  0060  F0F7  FFE3   	movff	btemp,plusw1
  9258  003A30  6A3D               	clrf	btemp,c
  9259  003A32  0EFD               	movlw	-3
  9260  003A34  50E3               	movf	plusw1,w,c
  9261  003A36  203D               	addwfc	btemp,w,c
  9262  003A38  6E3D               	movwf	btemp,c
  9263  003A3A  0EFD               	movlw	-3
  9264  003A3C                     L26:
  9265  003A3C  0060  F0F7  FFE3   	movff	btemp,plusw1
  9266                           
  9267                           ;stkvar	_n @ sp[(-4)+-6]
  9268  003A42  0EF6               	movlw	-10
  9269  003A44  006F FF8C  F03D    	movff	plusw1,btemp
  9270  003A4A  0EF7               	movlw	-9
  9271  003A4C  50E3               	movf	plusw1,w,c
  9272  003A4E  103D               	iorwf	btemp,w,c
  9273  003A50  A4D8               	btfss	status,2,c
  9274  003A52  D7C6               	goto	l8357
  9275  003A54                     u5090:
  9276                           
  9277                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  9278  003A54  0EF6               	movlw	246
  9279  003A56  26E1               	addwf	fsr1l,f,c
  9280  003A58  0EFF               	movlw	255
  9281  003A5A  22E2               	addwfc	fsr1h,f,c
  9282  003A5C  0012               	return		;funcret
  9283  003A5E                     __end_of_memset:
  9284                           	opt callstack 0
  9285                           
  9286 ;; *************** function _printf *****************
  9287 ;; Defined at:
  9288 ;;		line 5 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/printf.c"
  9289 ;; Parameters:    Size  Location     Type
  9290 ;;  fmt             1  [STACK] PTR const unsigned char 
  9291 ;;		 -> STR_18(3), STR_17(3), STR_16(3), 
  9292 ;; Auto vars:     Size  Location     Type
  9293 ;;  ap              2  [STACK] PTR void [1]
  9294 ;;		 -> ?_printf(2), ?_sprintf(2), 
  9295 ;;  ret             2    0        int 
  9296 ;; Return value:  Size  Location     Type
  9297 ;;                  2  [STACK] int 
  9298 ;; Registers used:
  9299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9300 ;; Tracked objects:
  9301 ;;		On entry : 3F/3B
  9302 ;;		On exit  : 3F/0
  9303 ;;		Unchanged: 0/0
  9304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9309 ;;Total ram usage:        0 bytes
  9310 ;; Hardware stack levels used:    1
  9311 ;; Hardware stack levels required when called:   11
  9312 ;; This function calls:
  9313 ;;		_vfprintf
  9314 ;; This function is called by:
  9315 ;;		_eaDogM_WriteString
  9316 ;;		_send_lcd_cmd_dma
  9317 ;; This function uses a reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text39
  9321  00592C                     __ptext39:
  9322                           	opt callstack 0
  9323  00592C                     _printf:
  9324                           	opt callstack 0
  9325                           
  9326                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9327  00592C  52E6               	movf	postinc1,f,c
  9328  00592E  52E6               	movf	postinc1,f,c
  9329                           
  9330                           ;stkvar	?_printf @ sp[(-2)+-3]
  9331                           
  9332                           ;incstack = 0
  9333  005930  0EFB               	movlw	251
  9334  005932  24E1               	addwf	fsr1l,w,c
  9335  005934  6E47               	movwf	btemp+10,c
  9336  005936  0EFF               	movlw	255
  9337  005938  20E2               	addwfc	fsr1h,w,c
  9338  00593A  6E48               	movwf	btemp+11,c
  9339  00593C  0E01               	movlw	1
  9340  00593E  2647               	addwf	btemp+10,f,c
  9341  005940  0E00               	movlw	0
  9342  005942  2248               	addwfc	btemp+11,f,c
  9343                           
  9344                           ;stkvar	_ap @ sp[(-2)+0]
  9345  005944  0EFF               	movlw	-1
  9346  005946  0060  F123  FFE3   	movff	btemp+11,plusw1
  9347  00594C  0EFE               	movlw	-2
  9348  00594E  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9349                           
  9350                           ;stkvar	_ap @ sp[(-2)+0]
  9351  005954  0EFE               	movlw	254
  9352  005956  24E1               	addwf	fsr1l,w,c
  9353  005958  6E3D               	movwf	btemp,c
  9354  00595A  0EFF               	movlw	255
  9355  00595C  20E2               	addwfc	fsr1h,w,c
  9356  00595E  6E3E               	movwf	btemp+1,c
  9357  005960  0060  F0F7  FFE6   	movff	btemp,postinc1
  9358  005966  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  9359                           
  9360                           ;stkvar	_fmt @ sp[(-4)+-2]
  9361  00596C  0EFA               	movlw	-6
  9362  00596E  50E3               	movf	plusw1,w,c
  9363  005970  6EE6               	movwf	postinc1,c
  9364  005972  0E00               	movlw	0
  9365  005974  6EE6               	movwf	postinc1,c
  9366  005976  0E00               	movlw	0
  9367  005978  6EE6               	movwf	postinc1,c
  9368  00597A  ECA6  F02A         	call	_vfprintf	;wreg free
  9369                           
  9370                           ; BSR set to: 0
  9371                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsiz
      +                          e = 1, vargsize = 0
  9372  00597E  52E5               	movf	postdec1,f,c
  9373  005980  52E5               	movf	postdec1,f,c
  9374  005982  52E5               	movf	postdec1,f,c
  9375  005984  50E7               	movf	indf1,w,c
  9376  005986  5EE1               	subwf	fsr1l,f,c
  9377  005988  0E00               	movlw	0
  9378  00598A  5AE2               	subwfb	fsr1h,f,c
  9379  00598C  0012               	return		;funcret
  9380  00598E                     __end_of_printf:
  9381                           	opt callstack 0
  9382                           
  9383 ;; *************** function _vfprintf *****************
  9384 ;; Defined at:
  9385 ;;		line 1368 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9388 ;;		 -> f(5), NULL(0), 
  9389 ;;  fmt             1  [STACK] PTR const unsigned char 
  9390 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9391 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9392 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9393 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9394 ;;		 -> STR_1(17), 
  9395 ;;  ap              2  [STACK] PTR PTR void 
  9396 ;;		 -> ap(2), ap(2), 
  9397 ;; Auto vars:     Size  Location     Type
  9398 ;;  cfmt            1  [STACK] PTR unsigned char 
  9399 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
  9400 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
  9401 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
  9402 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
  9403 ;;		 -> STR_1(17), 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  2  [STACK] int 
  9406 ;; Registers used:
  9407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/1
  9410 ;;		On exit  : 3F/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9417 ;;Total ram usage:        0 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:   10
  9420 ;; This function calls:
  9421 ;;		_vfpfcnvrt
  9422 ;; This function is called by:
  9423 ;;		_sprintf
  9424 ;;		_printf
  9425 ;; This function uses a reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text40
  9429  00554C                     __ptext40:
  9430                           	opt callstack 0
  9431  00554C                     _vfprintf:
  9432                           	opt callstack 0
  9433                           
  9434                           ; BSR set to: 0
  9435                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9436  00554C  52E6               	movf	postinc1,f,c
  9437                           
  9438                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  9439                           ;stkvar	_fmt @ sp[(-1)+-3]
  9440                           
  9441                           ;incstack = 0
  9442  00554E  0EFC               	movlw	-4
  9443  005550  006F FF8C  F048    	movff	plusw1,btemp+11
  9444                           
  9445                           ;stkvar	_cfmt @ sp[(-1)+0]
  9446  005556  0EFF               	movlw	-1
  9447  005558  0060  F123  FFE3   	movff	btemp+11,plusw1
  9448                           
  9449                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  9450  00555E  0100               	movlb	0	; () banked
  9451  005560  6BEF               	clrf	_nout& (0+255),b
  9452  005562  6BF0               	clrf	(_nout+1)& (0+255),b
  9453                           
  9454                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9455  005564  D021               	goto	l8371
  9456  005566                     l8369:
  9457                           
  9458                           ; BSR set to: 0
  9459                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  9460                           ;stkvar	_ap @ sp[(-1)+-5]
  9461  005566  0EFA               	movlw	-6
  9462  005568  006F FF8F FFE6     	movff	plusw1,postinc1
  9463  00556E  006F FF8F FFE6     	movff	plusw1,postinc1
  9464                           
  9465                           ;stkvar	_cfmt @ sp[(-3)+0]
  9466  005574  0EFD               	movlw	253
  9467  005576  24E1               	addwf	fsr1l,w,c
  9468  005578  6E3D               	movwf	btemp,c
  9469  00557A  0EFF               	movlw	255
  9470  00557C  20E2               	addwfc	fsr1h,w,c
  9471  00557E  6E3E               	movwf	btemp+1,c
  9472  005580  0060  F0F7  FFE6   	movff	btemp,postinc1
  9473  005586  0060  F0FB  FFE6   	movff	btemp+1,postinc1
  9474                           
  9475                           ;stkvar	_fp @ sp[(-5)+-2]
  9476  00558C  0EF9               	movlw	-7
  9477  00558E  006F FF8F FFE6     	movff	plusw1,postinc1
  9478  005594  006F FF8F FFE6     	movff	plusw1,postinc1
  9479  00559A  EC23  F013         	call	_vfpfcnvrt	;wreg free
  9480  00559E  503D               	movf	btemp,w,c
  9481  0055A0  0100               	movlb	0	; () banked
  9482  0055A2  27EF               	addwf	_nout& (0+255),f,b
  9483  0055A4  503E               	movf	btemp+1,w,c
  9484  0055A6  23F0               	addwfc	(_nout+1)& (0+255),f,b
  9485  0055A8                     l8371:
  9486                           
  9487                           ; BSR set to: 0
  9488                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  9489                           ;stkvar	_cfmt @ sp[(-1)+0]
  9490  0055A8  50E1               	movf	fsr1l,w,c
  9491  0055AA  0FFF               	addlw	-1
  9492  0055AC  6ED9               	movwf	fsr2l,c
  9493  0055AE  50E2               	movf	fsr1h,w,c
  9494  0055B0  6EDA               	movwf	fsr2h,c
  9495  0055B2  0EFF               	movlw	255
  9496  0055B4  22DA               	addwfc	fsr2h,f,c
  9497  0055B6  006F FF7F FFF6     	movff	indf2,tblptrl
  9498  0055BC                     	if	1	;There is more than 1 active tblptr byte
  9499  0055BC  0E20               	movlw	high __smallconst
  9500  0055BE  6EF7               	movwf	tblptrh,c
  9501  0055C0                     	endif
  9502  0055C0                     	if	0	;tblptru may be non-zero
  9503  0055C0                     	endif
  9504  0055C0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9505  0055C0  0E00               	movlw	low (__smallconst shr (0+16))
  9506  0055C2  6EF8               	movwf	tblptru,c
  9507  0055C4                     	endif
  9508  0055C4  0008               	tblrd		*
  9509  0055C6  50F5               	movf	tablat,w,c
  9510  0055C8  0900               	iorlw	0
  9511  0055CA  A4D8               	btfss	status,2,c
  9512  0055CC  D7CC               	goto	l8369
  9513                           
  9514                           ; BSR set to: 0
  9515                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  9516  0055CE  0060  F3BC  F03D   	movff	_nout,btemp
  9517  0055D4  0060  F3C0  F03E   	movff	_nout+1,btemp+1
  9518                           
  9519                           ; BSR set to: 0
  9520                           ; _vfprintf: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  9521  0055DA  0EFA               	movlw	250
  9522  0055DC  26E1               	addwf	fsr1l,f,c
  9523  0055DE  0EFF               	movlw	255
  9524  0055E0  22E2               	addwfc	fsr1h,f,c
  9525  0055E2  0012               	return		;funcret
  9526  0055E4                     __end_of_vfprintf:
  9527                           	opt callstack 0
  9528                           
  9529 ;; *************** function _vfpfcnvrt *****************
  9530 ;; Defined at:
  9531 ;;		line 670 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
  9532 ;; Parameters:    Size  Location     Type
  9533 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9534 ;;		 -> f(5), NULL(0), 
  9535 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  9536 ;;		 -> cfmt(1), 
  9537 ;;  ap              2  [STACK] PTR PTR void 
  9538 ;;		 -> ap(2), ap(2), 
  9539 ;; Auto vars:     Size  Location     Type
  9540 ;;  ll              8  [STACK] long long 
  9541 ;;  llu             8    0        unsigned long long 
  9542 ;;  f               4    0        unsigned long long 
  9543 ;;  vp              3    0        PTR void 
  9544 ;;  ct              3    0        unsigned char [3]
  9545 ;;  cp              2  [STACK] PTR unsigned char 
  9546 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
  9547 ;;  i               2    0        int 
  9548 ;;  done            2    0        int 
  9549 ;;  c               1  [STACK] unsigned char 
  9550 ;; Return value:  Size  Location     Type
  9551 ;;                  2  [STACK] int 
  9552 ;; Registers used:
  9553 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9554 ;; Tracked objects:
  9555 ;;		On entry : 0/0
  9556 ;;		On exit  : 0/0
  9557 ;;		Unchanged: 0/0
  9558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9563 ;;Total ram usage:        0 bytes
  9564 ;; Hardware stack levels used:    1
  9565 ;; Hardware stack levels required when called:    9
  9566 ;; This function calls:
  9567 ;;		_ctoa
  9568 ;;		_dtoa
  9569 ;;		_fputc
  9570 ;;		_stoa
  9571 ;;		_strncmp
  9572 ;; This function is called by:
  9573 ;;		_vfprintf
  9574 ;; This function uses a reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text41
  9578  002646                     __ptext41:
  9579                           	opt callstack 0
  9580  002646                     _vfpfcnvrt:
  9581                           	opt callstack 0
  9582                           
  9583                           ; BSR set to: 0
  9584                           ; autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  9585  002646  0E0B               	movlw	11
  9586  002648  26E1               	addwf	fsr1l,f,c
  9587  00264A  0E00               	movlw	0
  9588  00264C  22E2               	addwfc	fsr1h,f,c
  9589                           
  9590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  9591                           ;stkvar	_fmt @ sp[(-11)+-4]
  9592                           
  9593                           ;incstack = 0
  9594  00264E  0EF1               	movlw	-15
  9595  002650  006F FF8F FFD9     	movff	plusw1,fsr2l
  9596  002656  0EF2               	movlw	-14
  9597  002658  006F FF8F FFDA     	movff	plusw1,fsr2h
  9598  00265E  006F FF7F FFF6     	movff	indf2,tblptrl
  9599  002664                     	if	1	;There is more than 1 active tblptr byte
  9600  002664  0E20               	movlw	high __smallconst
  9601  002666  6EF7               	movwf	tblptrh,c
  9602  002668                     	endif
  9603  002668                     	if	0	;tblptru may be non-zero
  9604  002668                     	endif
  9605  002668                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9606  002668  0E00               	movlw	low (__smallconst shr (0+16))
  9607  00266A  6EF8               	movwf	tblptru,c
  9608  00266C                     	endif
  9609  00266C  0008               	tblrd		*
  9610  00266E  50F5               	movf	tablat,w,c
  9611  002670  0A25               	xorlw	37
  9612  002672  A4D8               	btfss	status,2,c
  9613  002674  D213               	goto	l8315
  9614                           
  9615                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  9616                           ;stkvar	_fmt @ sp[(-11)+-4]
  9617  002676  0EF1               	movlw	-15
  9618  002678  006F FF8F FFD9     	movff	plusw1,fsr2l
  9619  00267E  0EF2               	movlw	-14
  9620  002680  006F FF8F FFDA     	movff	plusw1,fsr2h
  9621  002686  2ADF               	incf	indf2,f,c
  9622                           
  9623                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  9624  002688  6A1D               	clrf	_width,c
  9625  00268A  6A1E               	clrf	_width+1,c
  9626  00268C  6A21               	clrf	_flags,c
  9627  00268E  6A22               	clrf	_flags+1,c
  9628                           
  9629                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  9630  002690  681F               	setf	_prec,c
  9631  002692  6820               	setf	_prec+1,c
  9632                           
  9633                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  9634                           ;stkvar	_fmt @ sp[(-11)+-4]
  9635  002694  0EF1               	movlw	-15
  9636  002696  006F FF8F FFD9     	movff	plusw1,fsr2l
  9637  00269C  0EF2               	movlw	-14
  9638  00269E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9639  0026A4  006F FF7F FFF6     	movff	indf2,tblptrl
  9640  0026AA                     	if	1	;There is more than 1 active tblptr byte
  9641  0026AA  0E20               	movlw	high __smallconst
  9642  0026AC  6EF7               	movwf	tblptrh,c
  9643  0026AE                     	endif
  9644  0026AE                     	if	0	;tblptru may be non-zero
  9645  0026AE                     	endif
  9646  0026AE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9647  0026AE  0E00               	movlw	low (__smallconst shr (0+16))
  9648  0026B0  6EF8               	movwf	tblptru,c
  9649  0026B2                     	endif
  9650  0026B2  0008               	tblrd		*
  9651  0026B4  50F5               	movf	tablat,w,c
  9652  0026B6  0A63               	xorlw	99
  9653  0026B8  A4D8               	btfss	status,2,c
  9654  0026BA  D034               	goto	l8265
  9655                           
  9656                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  9657                           ;stkvar	_fmt @ sp[(-11)+-4]
  9658  0026BC  0EF1               	movlw	-15
  9659  0026BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  9660  0026C4  0EF2               	movlw	-14
  9661  0026C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  9662  0026CC  2ADF               	incf	indf2,f,c
  9663                           
  9664                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  9665                           ;stkvar	_ap @ sp[(-11)+-6]
  9666  0026CE  0EEF               	movlw	-17
  9667  0026D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  9668  0026D6  0EF0               	movlw	-16
  9669  0026D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  9670  0026DE  0E02               	movlw	2
  9671  0026E0  5EDE               	subwf	postinc2,f,c
  9672  0026E2  0E00               	movlw	0
  9673  0026E4  5ADD               	subwfb	postdec2,f,c
  9674  0026E6  006F FF78  F047    	movff	postinc2,btemp+10
  9675  0026EC  006F FF74  F048    	movff	postdec2,btemp+11
  9676  0026F2  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  9677  0026F8  0060  F123  FFDA   	movff	btemp+11,fsr2h
  9678  0026FE  50DF               	movf	indf2,w,c
  9679  002700  6E48               	movwf	btemp+11,c
  9680                           
  9681                           ;stkvar	_c @ sp[(-11)+10]
  9682  002702  0EFF               	movlw	-1
  9683  002704  0060  F123  FFE3   	movff	btemp+11,plusw1
  9684                           
  9685                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  9686                           ;stkvar	_c @ sp[(-11)+10]
  9687  00270A  0EFF               	movlw	-1
  9688  00270C  50E3               	movf	plusw1,w,c
  9689  00270E  6EE6               	movwf	postinc1,c
  9690                           
  9691                           ;stkvar	_fp @ sp[(-12)+-2]
  9692  002710  0EF2               	movlw	-14
  9693  002712  006F FF8F FFE6     	movff	plusw1,postinc1
  9694  002718  006F FF8F FFE6     	movff	plusw1,postinc1
  9695  00271E  EC87  F02B         	call	_ctoa	;wreg free
  9696  002722  D1E3               	goto	l1911
  9697  002724                     l8265:
  9698                           
  9699                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  9700                           ;stkvar	_fmt @ sp[(-11)+-4]
  9701  002724  0EF1               	movlw	-15
  9702  002726  006F FF8F FFD9     	movff	plusw1,fsr2l
  9703  00272C  0EF2               	movlw	-14
  9704  00272E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9705  002734  006F FF7F FFF6     	movff	indf2,tblptrl
  9706  00273A                     	if	1	;There is more than 1 active tblptr byte
  9707  00273A  0E20               	movlw	high __smallconst
  9708  00273C  6EF7               	movwf	tblptrh,c
  9709  00273E                     	endif
  9710  00273E                     	if	0	;tblptru may be non-zero
  9711  00273E                     	endif
  9712  00273E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9713  00273E  0E00               	movlw	low (__smallconst shr (0+16))
  9714  002740  6EF8               	movwf	tblptru,c
  9715  002742                     	endif
  9716  002742  0008               	tblrd		*
  9717  002744  50F5               	movf	tablat,w,c
  9718  002746  0A64               	xorlw	100
  9719  002748  B4D8               	btfsc	status,2,c
  9720  00274A  D014               	goto	u5000
  9721                           
  9722                           ;stkvar	_fmt @ sp[(-11)+-4]
  9723  00274C  0EF1               	movlw	-15
  9724  00274E  006F FF8F FFD9     	movff	plusw1,fsr2l
  9725  002754  0EF2               	movlw	-14
  9726  002756  006F FF8F FFDA     	movff	plusw1,fsr2h
  9727  00275C  006F FF7F FFF6     	movff	indf2,tblptrl
  9728  002762                     	if	1	;There is more than 1 active tblptr byte
  9729  002762  0E20               	movlw	high __smallconst
  9730  002764  6EF7               	movwf	tblptrh,c
  9731  002766                     	endif
  9732  002766                     	if	0	;tblptru may be non-zero
  9733  002766                     	endif
  9734  002766                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9735  002766  0E00               	movlw	low (__smallconst shr (0+16))
  9736  002768  6EF8               	movwf	tblptru,c
  9737  00276A                     	endif
  9738  00276A  0008               	tblrd		*
  9739  00276C  50F5               	movf	tablat,w,c
  9740  00276E  0A69               	xorlw	105
  9741  002770  A4D8               	btfss	status,2,c
  9742  002772  D073               	goto	l8277
  9743  002774                     u5000:
  9744                           
  9745                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  9746                           ;stkvar	_fmt @ sp[(-11)+-4]
  9747  002774  0EF1               	movlw	-15
  9748  002776  006F FF8F FFD9     	movff	plusw1,fsr2l
  9749  00277C  0EF2               	movlw	-14
  9750  00277E  006F FF8F FFDA     	movff	plusw1,fsr2h
  9751  002784  2ADF               	incf	indf2,f,c
  9752                           
  9753                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  9754                           ;stkvar	_ap @ sp[(-11)+-6]
  9755  002786  0EEF               	movlw	-17
  9756  002788  006F FF8F FFD9     	movff	plusw1,fsr2l
  9757  00278E  0EF0               	movlw	-16
  9758  002790  006F FF8F FFDA     	movff	plusw1,fsr2h
  9759  002796  0E02               	movlw	2
  9760  002798  5EDE               	subwf	postinc2,f,c
  9761  00279A  0E00               	movlw	0
  9762  00279C  5ADD               	subwfb	postdec2,f,c
  9763  00279E  006F FF78  F047    	movff	postinc2,btemp+10
  9764  0027A4  006F FF74  F048    	movff	postdec2,btemp+11
  9765  0027AA  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  9766  0027B0  0060  F123  FFDA   	movff	btemp+11,fsr2h
  9767  0027B6  006F FF78  F047    	movff	postinc2,btemp+10
  9768  0027BC  006F FF74  F048    	movff	postdec2,btemp+11
  9769                           
  9770                           ;stkvar	_ll @ sp[(-11)+0]
  9771  0027C2  0EF5               	movlw	-11
  9772  0027C4  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9773  0027CA  0EF6               	movlw	-10
  9774  0027CC  0060  F123  FFE3   	movff	btemp+11,plusw1
  9775  0027D2  6A3D               	clrf	btemp,c
  9776  0027D4  BEE3               	btfsc	plusw1,7,c
  9777  0027D6  683D               	setf	btemp,c
  9778  0027D8  0EF7               	movlw	-9
  9779  0027DA  0060  F0F7  FFE3   	movff	btemp,plusw1
  9780  0027E0  0EF8               	movlw	-8
  9781  0027E2  0060  F0F7  FFE3   	movff	btemp,plusw1
  9782  0027E8  0EF9               	movlw	-7
  9783  0027EA  0060  F0F7  FFE3   	movff	btemp,plusw1
  9784  0027F0  0EFA               	movlw	-6
  9785  0027F2  0060  F0F7  FFE3   	movff	btemp,plusw1
  9786  0027F8  0EFB               	movlw	-5
  9787  0027FA  0060  F0F7  FFE3   	movff	btemp,plusw1
  9788  002800  0EFC               	movlw	-4
  9789  002802  0060  F0F7  FFE3   	movff	btemp,plusw1
  9790  002808                     l8273:
  9791                           
  9792                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  9793                           ;stkvar	_ll @ sp[(-11)+0]
  9794  002808  50E1               	movf	fsr1l,w,c
  9795  00280A  0FF5               	addlw	-11
  9796  00280C  6ED9               	movwf	fsr2l,c
  9797  00280E  50E2               	movf	fsr1h,w,c
  9798  002810  6EDA               	movwf	fsr2h,c
  9799  002812  0EFF               	movlw	255
  9800  002814  22DA               	addwfc	fsr2h,f,c
  9801  002816  006F FF7B FFE6     	movff	postinc2,postinc1
  9802  00281C  006F FF7B FFE6     	movff	postinc2,postinc1
  9803  002822  006F FF7B FFE6     	movff	postinc2,postinc1
  9804  002828  006F FF7B FFE6     	movff	postinc2,postinc1
  9805  00282E  006F FF7B FFE6     	movff	postinc2,postinc1
  9806  002834  006F FF7B FFE6     	movff	postinc2,postinc1
  9807  00283A  006F FF7B FFE6     	movff	postinc2,postinc1
  9808  002840  006F FF7B FFE6     	movff	postinc2,postinc1
  9809                           
  9810                           ;stkvar	_fp @ sp[(-19)+-2]
  9811  002846  0EEB               	movlw	-21
  9812  002848  006F FF8F FFE6     	movff	plusw1,postinc1
  9813  00284E  006F FF8F FFE6     	movff	plusw1,postinc1
  9814  002854  ECC6  F017         	call	_dtoa	;wreg free
  9815  002858  D148               	goto	l1911
  9816  00285A                     l8277:
  9817                           
  9818                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  9819  00285A  0E02               	movlw	2
  9820  00285C  6EE6               	movwf	postinc1,c
  9821  00285E  0E00               	movlw	0
  9822  002860  6EE6               	movwf	postinc1,c
  9823  002862  0EBB               	movlw	STR_19& (0+255)
  9824  002864  6EE6               	movwf	postinc1,c
  9825                           
  9826                           ;stkvar	_fmt @ sp[(-14)+-4]
  9827  002866  0EEE               	movlw	-18
  9828  002868  006F FF8F FFD9     	movff	plusw1,fsr2l
  9829  00286E  0EEF               	movlw	-17
  9830  002870  006F FF8F FFDA     	movff	plusw1,fsr2h
  9831  002876  50DF               	movf	indf2,w,c
  9832  002878  6EE6               	movwf	postinc1,c
  9833  00287A  EC84  F024         	call	_strncmp	;wreg free
  9834  00287E  503D               	movf	btemp,w,c
  9835  002880  103E               	iorwf	btemp+1,w,c
  9836  002882  B4D8               	btfsc	status,2,c
  9837  002884  D016               	goto	u5020
  9838  002886  0E02               	movlw	2
  9839  002888  6EE6               	movwf	postinc1,c
  9840  00288A  0E00               	movlw	0
  9841  00288C  6EE6               	movwf	postinc1,c
  9842  00288E  0EBE               	movlw	STR_23& (0+255)
  9843  002890  6EE6               	movwf	postinc1,c
  9844                           
  9845                           ;stkvar	_fmt @ sp[(-14)+-4]
  9846  002892  0EEE               	movlw	-18
  9847  002894  006F FF8F FFD9     	movff	plusw1,fsr2l
  9848  00289A  0EEF               	movlw	-17
  9849  00289C  006F FF8F FFDA     	movff	plusw1,fsr2h
  9850  0028A2  50DF               	movf	indf2,w,c
  9851  0028A4  6EE6               	movwf	postinc1,c
  9852  0028A6  EC84  F024         	call	_strncmp	;wreg free
  9853  0028AA  503D               	movf	btemp,w,c
  9854  0028AC  103E               	iorwf	btemp+1,w,c
  9855  0028AE  A4D8               	btfss	status,2,c
  9856  0028B0  D067               	goto	l8289
  9857  0028B2                     u5020:
  9858                           
  9859                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.0
      +                          5/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  9860                           ;stkvar	_fmt @ sp[(-11)+-4]
  9861  0028B2  0EF1               	movlw	-15
  9862  0028B4  006F FF8F FFD9     	movff	plusw1,fsr2l
  9863  0028BA  0EF2               	movlw	-14
  9864  0028BC  006F FF8F FFDA     	movff	plusw1,fsr2h
  9865  0028C2  0E02               	movlw	2
  9866  0028C4  26DF               	addwf	indf2,f,c
  9867                           
  9868                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  9869                           ;stkvar	_ap @ sp[(-11)+-6]
  9870  0028C6  0EEF               	movlw	-17
  9871  0028C8  006F FF8F FFD9     	movff	plusw1,fsr2l
  9872  0028CE  0EF0               	movlw	-16
  9873  0028D0  006F FF8F FFDA     	movff	plusw1,fsr2h
  9874  0028D6  0E04               	movlw	4
  9875  0028D8  5EDE               	subwf	postinc2,f,c
  9876  0028DA  0E00               	movlw	0
  9877  0028DC  5ADD               	subwfb	postdec2,f,c
  9878  0028DE  006F FF78  F047    	movff	postinc2,btemp+10
  9879  0028E4  006F FF74  F048    	movff	postdec2,btemp+11
  9880  0028EA  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  9881  0028F0  0060  F123  FFDA   	movff	btemp+11,fsr2h
  9882  0028F6  006F FF78  F045    	movff	postinc2,btemp+8
  9883  0028FC  006F FF78  F046    	movff	postinc2,btemp+9
  9884  002902  006F FF78  F047    	movff	postinc2,btemp+10
  9885  002908  006F FF78  F048    	movff	postinc2,btemp+11
  9886  00290E  0060  F114  F04D   	movff	btemp+8,btemp+16
  9887  002914  0060  F118  F04E   	movff	btemp+9,btemp+17
  9888  00291A  0060  F11C  F04F   	movff	btemp+10,btemp+18
  9889  002920  0060  F120  F050   	movff	btemp+11,btemp+19
  9890  002926  6A51               	clrf	btemp+20,c
  9891  002928  BE50               	btfsc	btemp+19,7,c
  9892  00292A  6851               	setf	btemp+20,c
  9893  00292C  0060  F144  F052   	movff	btemp+20,btemp+21
  9894  002932  0060  F144  F053   	movff	btemp+20,btemp+22
  9895  002938  0060  F144  F054   	movff	btemp+20,btemp+23
  9896                           
  9897                           ;stkvar	_ll @ sp[(-11)+0]
  9898  00293E  0EF5               	movlw	-11
  9899  002940  0060  F137  FFE3   	movff	btemp+16,plusw1
  9900  002946  0EF6               	movlw	-10
  9901  002948  0060  F13B  FFE3   	movff	btemp+17,plusw1
  9902  00294E  0EF7               	movlw	-9
  9903  002950  0060  F13F  FFE3   	movff	btemp+18,plusw1
  9904  002956  0EF8               	movlw	-8
  9905  002958  0060  F143  FFE3   	movff	btemp+19,plusw1
  9906  00295E  0EF9               	movlw	-7
  9907  002960  0060  F147  FFE3   	movff	btemp+20,plusw1
  9908  002966  0EFA               	movlw	-6
  9909  002968  0060  F14B  FFE3   	movff	btemp+21,plusw1
  9910  00296E  0EFB               	movlw	-5
  9911  002970  0060  F14F  FFE3   	movff	btemp+22,plusw1
  9912  002976  0EFC               	movlw	-4
  9913  002978  0060  F153  FFE3   	movff	btemp+23,plusw1
  9914  00297E  D744               	goto	l8273
  9915  002980                     l8289:
  9916                           
  9917                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  9918                           ;stkvar	_fmt @ sp[(-11)+-4]
  9919  002980  0EF1               	movlw	-15
  9920  002982  006F FF8F FFD9     	movff	plusw1,fsr2l
  9921  002988  0EF2               	movlw	-14
  9922  00298A  006F FF8F FFDA     	movff	plusw1,fsr2h
  9923  002990  006F FF7F FFF6     	movff	indf2,tblptrl
  9924  002996                     	if	1	;There is more than 1 active tblptr byte
  9925  002996  0E20               	movlw	high __smallconst
  9926  002998  6EF7               	movwf	tblptrh,c
  9927  00299A                     	endif
  9928  00299A                     	if	0	;tblptru may be non-zero
  9929  00299A                     	endif
  9930  00299A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9931  00299A  0E00               	movlw	low (__smallconst shr (0+16))
  9932  00299C  6EF8               	movwf	tblptru,c
  9933  00299E                     	endif
  9934  00299E  0008               	tblrd		*
  9935  0029A0  50F5               	movf	tablat,w,c
  9936  0029A2  0A73               	xorlw	115
  9937  0029A4  A4D8               	btfss	status,2,c
  9938  0029A6  D040               	goto	l8299
  9939                           
  9940                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  9941                           ;stkvar	_fmt @ sp[(-11)+-4]
  9942  0029A8  0EF1               	movlw	-15
  9943  0029AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  9944  0029B0  0EF2               	movlw	-14
  9945  0029B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  9946  0029B8  2ADF               	incf	indf2,f,c
  9947                           
  9948                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  9949                           ;stkvar	_ap @ sp[(-11)+-6]
  9950  0029BA  0EEF               	movlw	-17
  9951  0029BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  9952  0029C2  0EF0               	movlw	-16
  9953  0029C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  9954  0029CA  0E02               	movlw	2
  9955  0029CC  5EDE               	subwf	postinc2,f,c
  9956  0029CE  0E00               	movlw	0
  9957  0029D0  5ADD               	subwfb	postdec2,f,c
  9958  0029D2  006F FF78  F047    	movff	postinc2,btemp+10
  9959  0029D8  006F FF74  F048    	movff	postdec2,btemp+11
  9960  0029DE  0060  F11F  FFD9   	movff	btemp+10,fsr2l
  9961  0029E4  0060  F123  FFDA   	movff	btemp+11,fsr2h
  9962  0029EA  006F FF78  F047    	movff	postinc2,btemp+10
  9963  0029F0  006F FF74  F048    	movff	postdec2,btemp+11
  9964                           
  9965                           ;stkvar	_cp @ sp[(-11)+8]
  9966  0029F6  0EFE               	movlw	-2
  9967  0029F8  0060  F123  FFE3   	movff	btemp+11,plusw1
  9968  0029FE  0EFD               	movlw	-3
  9969  002A00  0060  F11F  FFE3   	movff	btemp+10,plusw1
  9970                           
  9971                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  9972                           ;stkvar	_cp @ sp[(-11)+8]
  9973  002A06  0EFD               	movlw	-3
  9974  002A08  006F FF8F FFE6     	movff	plusw1,postinc1
  9975  002A0E  006F FF8F FFE6     	movff	plusw1,postinc1
  9976                           
  9977                           ;stkvar	_fp @ sp[(-13)+-2]
  9978  002A14  0EF1               	movlw	-15
  9979  002A16  006F FF8F FFE6     	movff	plusw1,postinc1
  9980  002A1C  006F FF8F FFE6     	movff	plusw1,postinc1
  9981  002A22  EC2F  F01D         	call	_stoa	;wreg free
  9982  002A26  D061               	goto	l1911
  9983  002A28                     l8299:
  9984                           
  9985                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  9986                           ;stkvar	_fmt @ sp[(-11)+-4]
  9987  002A28  0EF1               	movlw	-15
  9988  002A2A  006F FF8F FFD9     	movff	plusw1,fsr2l
  9989  002A30  0EF2               	movlw	-14
  9990  002A32  006F FF8F FFDA     	movff	plusw1,fsr2h
  9991  002A38  006F FF7F FFF6     	movff	indf2,tblptrl
  9992  002A3E                     	if	1	;There is more than 1 active tblptr byte
  9993  002A3E  0E20               	movlw	high __smallconst
  9994  002A40  6EF7               	movwf	tblptrh,c
  9995  002A42                     	endif
  9996  002A42                     	if	0	;tblptru may be non-zero
  9997  002A42                     	endif
  9998  002A42                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9999  002A42  0E00               	movlw	low (__smallconst shr (0+16))
 10000  002A44  6EF8               	movwf	tblptru,c
 10001  002A46                     	endif
 10002  002A46  0008               	tblrd		*
 10003  002A48  50F5               	movf	tablat,w,c
 10004  002A4A  0A25               	xorlw	37
 10005  002A4C  A4D8               	btfss	status,2,c
 10006  002A4E  D018               	goto	l8309
 10007                           
 10008                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
 10009                           ;stkvar	_fmt @ sp[(-11)+-4]
 10010  002A50  0EF1               	movlw	-15
 10011  002A52  006F FF8F FFD9     	movff	plusw1,fsr2l
 10012  002A58  0EF2               	movlw	-14
 10013  002A5A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10014  002A60  2ADF               	incf	indf2,f,c
 10015                           
 10016                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
 10017                           ;stkvar	_fp @ sp[(-11)+-2]
 10018  002A62  0EF3               	movlw	-13
 10019  002A64  006F FF8F FFE6     	movff	plusw1,postinc1
 10020  002A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 10021  002A70  0E25               	movlw	37
 10022  002A72  6EE6               	movwf	postinc1,c
 10023  002A74  0E00               	movlw	0
 10024  002A76  6EE6               	movwf	postinc1,c
 10025  002A78  EC5E  F026         	call	_fputc	;wreg free
 10026  002A7C                     l8305:
 10027                           
 10028                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1353:             return 1;
 10029  002A7C  0E01               	movlw	1
 10030  002A7E  D00A               	goto	L27
 10031  002A80                     l8309:
 10032                           
 10033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
 10034                           ;stkvar	_fmt @ sp[(-11)+-4]
 10035  002A80  0EF1               	movlw	-15
 10036  002A82  006F FF8F FFD9     	movff	plusw1,fsr2l
 10037  002A88  0EF2               	movlw	-14
 10038  002A8A  006F FF8F FFDA     	movff	plusw1,fsr2h
 10039  002A90  2ADF               	incf	indf2,f,c
 10040                           
 10041                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1358:         return 0;
 10042  002A92  0E00               	movlw	0
 10043  002A94                     L27:
 10044  002A94  6E3D               	movwf	btemp,c
 10045  002A96  0E00               	movlw	0
 10046  002A98  6E3E               	movwf	btemp+1,c
 10047  002A9A  D027               	goto	l1911
 10048  002A9C                     l8315:
 10049                           
 10050                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
 10051                           ;stkvar	_fp @ sp[(-11)+-2]
 10052  002A9C  0EF3               	movlw	-13
 10053  002A9E  006F FF8F FFE6     	movff	plusw1,postinc1
 10054  002AA4  006F FF8F FFE6     	movff	plusw1,postinc1
 10055                           
 10056                           ;stkvar	_fmt @ sp[(-13)+-4]
 10057  002AAA  0EEF               	movlw	-17
 10058  002AAC  006F FF8F FFD9     	movff	plusw1,fsr2l
 10059  002AB2  0EF0               	movlw	-16
 10060  002AB4  006F FF8F FFDA     	movff	plusw1,fsr2h
 10061  002ABA  006F FF7F FFF6     	movff	indf2,tblptrl
 10062  002AC0                     	if	1	;There is more than 1 active tblptr byte
 10063  002AC0  0E20               	movlw	high __smallconst
 10064  002AC2  6EF7               	movwf	tblptrh,c
 10065  002AC4                     	endif
 10066  002AC4                     	if	0	;tblptru may be non-zero
 10067  002AC4                     	endif
 10068  002AC4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10069  002AC4  0E00               	movlw	low (__smallconst shr (0+16))
 10070  002AC6  6EF8               	movwf	tblptru,c
 10071  002AC8                     	endif
 10072  002AC8  0008               	tblrd		*
 10073  002ACA  50F5               	movf	tablat,w,c
 10074  002ACC  6EE6               	movwf	postinc1,c
 10075  002ACE  0E00               	movlw	0
 10076  002AD0  6EE6               	movwf	postinc1,c
 10077  002AD2  EC5E  F026         	call	_fputc	;wreg free
 10078                           
 10079                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
 10080                           ;stkvar	_fmt @ sp[(-11)+-4]
 10081  002AD6  0EF1               	movlw	-15
 10082  002AD8  006F FF8F FFD9     	movff	plusw1,fsr2l
 10083  002ADE  0EF2               	movlw	-14
 10084  002AE0  006F FF8F FFDA     	movff	plusw1,fsr2h
 10085  002AE6  2ADF               	incf	indf2,f,c
 10086  002AE8  D7C9               	goto	l8305
 10087  002AEA                     l1911:
 10088                           
 10089                           ; _vfpfcnvrt: autosize = 11, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
 10090  002AEA  0EEF               	movlw	239
 10091  002AEC  26E1               	addwf	fsr1l,f,c
 10092  002AEE  0EFF               	movlw	255
 10093  002AF0  22E2               	addwfc	fsr1h,f,c
 10094  002AF2  0012               	return		;funcret
 10095  002AF4                     __end_of_vfpfcnvrt:
 10096                           	opt callstack 0
 10097                           
 10098 ;; *************** function _strncmp *****************
 10099 ;; Defined at:
 10100 ;;		line 3 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strncmp.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  _l              1  [STACK] PTR const unsigned char 
 10103 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 10104 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 10105 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 10106 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 10107 ;;		 -> STR_1(17), 
 10108 ;;  _r              1  [STACK] PTR const unsigned char 
 10109 ;;		 -> STR_25(3), STR_21(3), 
 10110 ;;  n               2  [STACK] unsigned int 
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;  r               1  [STACK] PTR const unsigned char 
 10113 ;;		 -> STR_25(3), STR_21(3), 
 10114 ;;  l               1  [STACK] PTR const unsigned char 
 10115 ;;		 -> STR_18(3), STR_17(3), STR_16(3), STR_15(26), 
 10116 ;;		 -> STR_14(26), STR_13(6), STR_12(19), STR_11(26), 
 10117 ;;		 -> STR_10(21), STR_9(18), STR_8(6), STR_7(6), 
 10118 ;;		 -> STR_6(14), STR_5(21), STR_4(15), STR_2(12), 
 10119 ;;		 -> STR_1(17), 
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  2  [STACK] int 
 10122 ;; Registers used:
 10123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11, tblptrl, tblptrh, tblptru, prodl
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10133 ;;Total ram usage:        0 bytes
 10134 ;; Hardware stack levels used:    1
 10135 ;; Hardware stack levels required when called:    3
 10136 ;; This function calls:
 10137 ;;		Nothing
 10138 ;; This function is called by:
 10139 ;;		_vfpfcnvrt
 10140 ;; This function uses a reentrant model
 10141 ;;
 10142                           
 10143                           	psect	text42
 10144  004908                     __ptext42:
 10145                           	opt callstack 0
 10146  004908                     _strncmp:
 10147                           	opt callstack 0
 10148                           
 10149                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10150  004908  52E6               	movf	postinc1,f,c
 10151  00490A  52E6               	movf	postinc1,f,c
 10152                           
 10153                           ;stkvar	__l @ sp[(-2)+-1]
 10154                           
 10155                           ;incstack = 0
 10156  00490C  0EFD               	movlw	-3
 10157  00490E  006F FF8C  F048    	movff	plusw1,btemp+11
 10158                           
 10159                           ;stkvar	_l @ sp[(-2)+1]
 10160  004914  0EFF               	movlw	-1
 10161  004916  0060  F123  FFE3   	movff	btemp+11,plusw1
 10162                           
 10163                           ;stkvar	__r @ sp[(-2)+-2]
 10164  00491C  0EFC               	movlw	-4
 10165  00491E  006F FF8C  F048    	movff	plusw1,btemp+11
 10166                           
 10167                           ;stkvar	_r @ sp[(-2)+0]
 10168  004924  0EFE               	movlw	-2
 10169  004926  0060  F123  FFE3   	movff	btemp+11,plusw1
 10170                           
 10171                           ;stkvar	_n @ sp[(-2)+-4]
 10172  00492C  0EFA               	movlw	-6
 10173  00492E  006F FF8C  F03D    	movff	plusw1,btemp
 10174  004934  0E01               	movlw	1
 10175  004936  5E3D               	subwf	btemp,f,c
 10176  004938  0EFA               	movlw	-6
 10177  00493A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10178  004940  0EFB               	movlw	-5
 10179  004942  006F FF8C  F03D    	movff	plusw1,btemp
 10180  004948  0E00               	movlw	0
 10181  00494A  5A3D               	subwfb	btemp,f,c
 10182  00494C  0EFB               	movlw	-5
 10183  00494E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10184  004954  0EFA               	movlw	-6
 10185  004956  28E3               	incf	plusw1,w,c
 10186  004958  E121               	bnz	l5595
 10187  00495A  0EFB               	movlw	-5
 10188  00495C  28E3               	incf	plusw1,w,c
 10189  00495E  A4D8               	btfss	status,2,c
 10190  004960  D01D               	goto	l5595
 10191  004962  0E00               	movlw	0
 10192  004964  6E3D               	movwf	btemp,c
 10193  004966  0E00               	movlw	0
 10194  004968  6E3E               	movwf	btemp+1,c
 10195  00496A  D091               	goto	l2668
 10196  00496C                     l5591:
 10197                           
 10198                           ;stkvar	_l @ sp[(-2)+1]
 10199  00496C  0EFF               	movlw	-1
 10200  00496E  2AE3               	incf	plusw1,f,c
 10201                           
 10202                           ;stkvar	_r @ sp[(-2)+0]
 10203  004970  0EFE               	movlw	-2
 10204  004972  2AE3               	incf	plusw1,f,c
 10205                           
 10206                           ;stkvar	_n @ sp[(-2)+-4]
 10207  004974  0EFA               	movlw	-6
 10208  004976  006F FF8C  F03D    	movff	plusw1,btemp
 10209  00497C  0E01               	movlw	1
 10210  00497E  5E3D               	subwf	btemp,f,c
 10211  004980  0EFA               	movlw	-6
 10212  004982  0060  F0F7  FFE3   	movff	btemp,plusw1
 10213  004988  0EFB               	movlw	-5
 10214  00498A  006F FF8C  F03D    	movff	plusw1,btemp
 10215  004990  0E00               	movlw	0
 10216  004992  5A3D               	subwfb	btemp,f,c
 10217  004994  0EFB               	movlw	-5
 10218  004996  0060  F0F7  FFE3   	movff	btemp,plusw1
 10219  00499C                     l5595:
 10220                           
 10221                           ;stkvar	_l @ sp[(-2)+1]
 10222  00499C  50E1               	movf	fsr1l,w,c
 10223  00499E  0FFF               	addlw	-1
 10224  0049A0  6ED9               	movwf	fsr2l,c
 10225  0049A2  50E2               	movf	fsr1h,w,c
 10226  0049A4  6EDA               	movwf	fsr2h,c
 10227  0049A6  0EFF               	movlw	255
 10228  0049A8  22DA               	addwfc	fsr2h,f,c
 10229  0049AA  006F FF7F FFF6     	movff	indf2,tblptrl
 10230  0049B0                     	if	1	;There is more than 1 active tblptr byte
 10231  0049B0  0E20               	movlw	high __smallconst
 10232  0049B2  6EF7               	movwf	tblptrh,c
 10233  0049B4                     	endif
 10234  0049B4                     	if	0	;tblptru may be non-zero
 10235  0049B4                     	endif
 10236  0049B4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10237  0049B4  0E00               	movlw	low (__smallconst shr (0+16))
 10238  0049B6  6EF8               	movwf	tblptru,c
 10239  0049B8                     	endif
 10240  0049B8  0008               	tblrd		*
 10241  0049BA  50F5               	movf	tablat,w,c
 10242  0049BC  0900               	iorlw	0
 10243  0049BE  B4D8               	btfsc	status,2,c
 10244  0049C0  D041               	goto	u3010
 10245                           
 10246                           ;stkvar	_r @ sp[(-2)+0]
 10247  0049C2  50E1               	movf	fsr1l,w,c
 10248  0049C4  0FFE               	addlw	-2
 10249  0049C6  6ED9               	movwf	fsr2l,c
 10250  0049C8  50E2               	movf	fsr1h,w,c
 10251  0049CA  6EDA               	movwf	fsr2h,c
 10252  0049CC  0EFF               	movlw	255
 10253  0049CE  22DA               	addwfc	fsr2h,f,c
 10254  0049D0  006F FF7F FFF6     	movff	indf2,tblptrl
 10255  0049D6                     	if	1	;There is more than 1 active tblptr byte
 10256  0049D6  0E20               	movlw	high __smallconst
 10257  0049D8  6EF7               	movwf	tblptrh,c
 10258  0049DA                     	endif
 10259  0049DA                     	if	0	;tblptru may be non-zero
 10260  0049DA                     	endif
 10261  0049DA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10262  0049DA  0E00               	movlw	low (__smallconst shr (0+16))
 10263  0049DC  6EF8               	movwf	tblptru,c
 10264  0049DE                     	endif
 10265  0049DE  0008               	tblrd		*
 10266  0049E0  50F5               	movf	tablat,w,c
 10267  0049E2  0900               	iorlw	0
 10268  0049E4  B4D8               	btfsc	status,2,c
 10269  0049E6  D02E               	goto	u3010
 10270                           
 10271                           ;stkvar	_n @ sp[(-2)+-4]
 10272  0049E8  0EFA               	movlw	-6
 10273  0049EA  006F FF8C  F03D    	movff	plusw1,btemp
 10274  0049F0  0EFB               	movlw	-5
 10275  0049F2  50E3               	movf	plusw1,w,c
 10276  0049F4  103D               	iorwf	btemp,w,c
 10277  0049F6  B4D8               	btfsc	status,2,c
 10278  0049F8  D025               	goto	u3010
 10279                           
 10280                           ;stkvar	_l @ sp[(-2)+1]
 10281  0049FA  50E1               	movf	fsr1l,w,c
 10282  0049FC  0FFF               	addlw	-1
 10283  0049FE  6ED9               	movwf	fsr2l,c
 10284  004A00  50E2               	movf	fsr1h,w,c
 10285  004A02  6EDA               	movwf	fsr2h,c
 10286  004A04  0EFF               	movlw	255
 10287  004A06  22DA               	addwfc	fsr2h,f,c
 10288  004A08  006F FF7F FFF6     	movff	indf2,tblptrl
 10289  004A0E                     	if	1	;There is more than 1 active tblptr byte
 10290  004A0E  0E20               	movlw	high __smallconst
 10291  004A10  6EF7               	movwf	tblptrh,c
 10292  004A12                     	endif
 10293  004A12                     	if	0	;tblptru may be non-zero
 10294  004A12                     	endif
 10295  004A12                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10296  004A12  0E00               	movlw	low (__smallconst shr (0+16))
 10297  004A14  6EF8               	movwf	tblptru,c
 10298  004A16                     	endif
 10299  004A16  0008               	tblrd		*
 10300  004A18  006F FFD4  F048    	movff	tablat,btemp+11
 10301                           
 10302                           ;stkvar	_r @ sp[(-2)+0]
 10303  004A1E  50E1               	movf	fsr1l,w,c
 10304  004A20  0FFE               	addlw	-2
 10305  004A22  6ED9               	movwf	fsr2l,c
 10306  004A24  50E2               	movf	fsr1h,w,c
 10307  004A26  6EDA               	movwf	fsr2h,c
 10308  004A28  0EFF               	movlw	255
 10309  004A2A  22DA               	addwfc	fsr2h,f,c
 10310  004A2C  006F FF7F FFF6     	movff	indf2,tblptrl
 10311  004A32                     	if	1	;There is more than 1 active tblptr byte
 10312  004A32  0E20               	movlw	high __smallconst
 10313  004A34  6EF7               	movwf	tblptrh,c
 10314  004A36                     	endif
 10315  004A36                     	if	0	;tblptru may be non-zero
 10316  004A36                     	endif
 10317  004A36                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10318  004A36  0E00               	movlw	low (__smallconst shr (0+16))
 10319  004A38  6EF8               	movwf	tblptru,c
 10320  004A3A                     	endif
 10321  004A3A  0008               	tblrd		*
 10322  004A3C  50F5               	movf	tablat,w,c
 10323  004A3E  1848               	xorwf	btemp+11,w,c
 10324  004A40  B4D8               	btfsc	status,2,c
 10325  004A42  D794               	goto	l5591
 10326  004A44                     u3010:
 10327                           
 10328                           ;stkvar	_l @ sp[(-2)+1]
 10329  004A44  50E1               	movf	fsr1l,w,c
 10330  004A46  0FFF               	addlw	-1
 10331  004A48  6ED9               	movwf	fsr2l,c
 10332  004A4A  50E2               	movf	fsr1h,w,c
 10333  004A4C  6EDA               	movwf	fsr2h,c
 10334  004A4E  0EFF               	movlw	255
 10335  004A50  22DA               	addwfc	fsr2h,f,c
 10336  004A52  006F FF7F FFF6     	movff	indf2,tblptrl
 10337  004A58                     	if	1	;There is more than 1 active tblptr byte
 10338  004A58  0E20               	movlw	high __smallconst
 10339  004A5A  6EF7               	movwf	tblptrh,c
 10340  004A5C                     	endif
 10341  004A5C                     	if	0	;tblptru may be non-zero
 10342  004A5C                     	endif
 10343  004A5C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10344  004A5C  0E00               	movlw	low (__smallconst shr (0+16))
 10345  004A5E  6EF8               	movwf	tblptru,c
 10346  004A60                     	endif
 10347  004A60  0008               	tblrd		*
 10348  004A62  50F5               	movf	tablat,w,c
 10349  004A64  6E3D               	movwf	btemp,c
 10350  004A66  6A3E               	clrf	btemp+1,c
 10351                           
 10352                           ;stkvar	_r @ sp[(-2)+0]
 10353  004A68  50E1               	movf	fsr1l,w,c
 10354  004A6A  0FFE               	addlw	-2
 10355  004A6C  6ED9               	movwf	fsr2l,c
 10356  004A6E  50E2               	movf	fsr1h,w,c
 10357  004A70  6EDA               	movwf	fsr2h,c
 10358  004A72  0EFF               	movlw	255
 10359  004A74  22DA               	addwfc	fsr2h,f,c
 10360  004A76  006F FF7F FFF6     	movff	indf2,tblptrl
 10361  004A7C                     	if	1	;There is more than 1 active tblptr byte
 10362  004A7C  0E20               	movlw	high __smallconst
 10363  004A7E  6EF7               	movwf	tblptrh,c
 10364  004A80                     	endif
 10365  004A80                     	if	0	;tblptru may be non-zero
 10366  004A80                     	endif
 10367  004A80                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10368  004A80  0E00               	movlw	low (__smallconst shr (0+16))
 10369  004A82  6EF8               	movwf	tblptru,c
 10370  004A84                     	endif
 10371  004A84  0008               	tblrd		*
 10372  004A86  50F5               	movf	tablat,w,c
 10373  004A88  5E3D               	subwf	btemp,f,c
 10374  004A8A  0E00               	movlw	0
 10375  004A8C  5A3E               	subwfb	btemp+1,f,c
 10376  004A8E                     l2668:
 10377                           
 10378                           ; _strncmp: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 10379  004A8E  0EFA               	movlw	250
 10380  004A90  26E1               	addwf	fsr1l,f,c
 10381  004A92  0EFF               	movlw	255
 10382  004A94  22E2               	addwfc	fsr1h,f,c
 10383  004A96  0012               	return		;funcret
 10384  004A98                     __end_of_strncmp:
 10385                           	opt callstack 0
 10386                           
 10387 ;; *************** function _stoa *****************
 10388 ;; Defined at:
 10389 ;;		line 546 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10390 ;; Parameters:    Size  Location     Type
 10391 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10392 ;;		 -> f(5), NULL(0), 
 10393 ;;  s               2  [STACK] PTR unsigned char 
 10394 ;;		 -> ?_printf(2), ?_sprintf(2), STR_3(6), V(98), 
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;  nuls            7  [STACK] unsigned char [7]
 10397 ;;  l               2  [STACK] int 
 10398 ;;  p               2  [STACK] int 
 10399 ;;  cp              2  [STACK] PTR unsigned char 
 10400 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_3(6), 
 10401 ;;		 -> V(98), 
 10402 ;;  w               2  [STACK] int 
 10403 ;;  i               2  [STACK] int 
 10404 ;; Return value:  Size  Location     Type
 10405 ;;                  2  [STACK] int 
 10406 ;; Registers used:
 10407 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10408 ;; Tracked objects:
 10409 ;;		On entry : 0/0
 10410 ;;		On exit  : 0/0
 10411 ;;		Unchanged: 0/0
 10412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10413 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10415 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10416 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10417 ;;Total ram usage:        0 bytes
 10418 ;; Hardware stack levels used:    1
 10419 ;; Hardware stack levels required when called:    6
 10420 ;; This function calls:
 10421 ;;		_fputc
 10422 ;;		_strlen
 10423 ;; This function is called by:
 10424 ;;		_vfpfcnvrt
 10425 ;; This function uses a reentrant model
 10426 ;;
 10427                           
 10428                           	psect	text43
 10429  003A5E                     __ptext43:
 10430                           	opt callstack 0
 10431  003A5E                     _stoa:
 10432                           	opt callstack 0
 10433                           
 10434                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10435  003A5E  0E11               	movlw	17
 10436  003A60  26E1               	addwf	fsr1l,f,c
 10437  003A62  0E00               	movlw	0
 10438  003A64  22E2               	addwfc	fsr1h,f,c
 10439                           
 10440                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10441                           
 10442                           ;incstack = 0
 10443  003A66  EE20  F100         	lfsr	2,stoa@F1142
 10444                           
 10445                           ;stkvar	_nuls @ sp[(-17)+0]
 10446  003A6A  0E07               	movlw	7
 10447  003A6C  6E3D               	movwf	btemp,c
 10448  003A6E  0EEF               	movlw	-17
 10449  003A70                     us487999:
 10450  003A70  006F FF7B FFE3     	movff	postinc2,plusw1
 10451  003A76  28E8               	incf	wreg,w,c
 10452  003A78  2E3D               	decfsz	btemp,f,c
 10453  003A7A  D7FA               	bra	us487999
 10454                           
 10455                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10456                           ;stkvar	_s @ sp[(-17)+-4]
 10457  003A7C  0EEB               	movlw	-21
 10458  003A7E  006F FF8C  F047    	movff	plusw1,btemp+10
 10459  003A84  0EEC               	movlw	-20
 10460  003A86  006F FF8C  F048    	movff	plusw1,btemp+11
 10461                           
 10462                           ;stkvar	_cp @ sp[(-17)+11]
 10463  003A8C  0EFB               	movlw	-5
 10464  003A8E  0060  F123  FFE3   	movff	btemp+11,plusw1
 10465  003A94  0EFA               	movlw	-6
 10466  003A96  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10467                           
 10468                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10469                           ;stkvar	_cp @ sp[(-17)+11]
 10470  003A9C  0EFA               	movlw	-6
 10471  003A9E  006F FF8C  F03D    	movff	plusw1,btemp
 10472  003AA4  0EFB               	movlw	-5
 10473  003AA6  50E3               	movf	plusw1,w,c
 10474  003AA8  103D               	iorwf	btemp,w,c
 10475  003AAA  A4D8               	btfss	status,2,c
 10476  003AAC  D00E               	goto	l8203
 10477                           
 10478                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10479                           ;stkvar	_nuls @ sp[(-17)+0]
 10480  003AAE  0EEF               	movlw	239
 10481  003AB0  24E1               	addwf	fsr1l,w,c
 10482  003AB2  6E47               	movwf	btemp+10,c
 10483  003AB4  0EFF               	movlw	255
 10484  003AB6  20E2               	addwfc	fsr1h,w,c
 10485  003AB8  6E48               	movwf	btemp+11,c
 10486                           
 10487                           ;stkvar	_cp @ sp[(-17)+11]
 10488  003ABA  0EFB               	movlw	-5
 10489  003ABC  0060  F123  FFE3   	movff	btemp+11,plusw1
 10490  003AC2  0EFA               	movlw	-6
 10491  003AC4  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10492  003ACA                     l8203:
 10493                           
 10494                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10495                           ;stkvar	_cp @ sp[(-17)+11]
 10496  003ACA  0EFA               	movlw	-6
 10497  003ACC  006F FF8F FFE6     	movff	plusw1,postinc1
 10498  003AD2  006F FF8F FFE6     	movff	plusw1,postinc1
 10499  003AD8  ECB7  F029         	call	_strlen	;wreg free
 10500                           
 10501                           ;stkvar	_l @ sp[(-17)+7]
 10502  003ADC  0EF6               	movlw	-10
 10503  003ADE  0060  F0F7  FFE3   	movff	btemp,plusw1
 10504  003AE4  0EF7               	movlw	-9
 10505  003AE6  0060  F0FB  FFE3   	movff	btemp+1,plusw1
 10506                           
 10507                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10508                           ;stkvar	_p @ sp[(-17)+9]
 10509  003AEC  0EF8               	movlw	-8
 10510  003AEE  0060  F07F  FFE3   	movff	_prec,plusw1
 10511  003AF4  0EF9               	movlw	-7
 10512  003AF6  0060  F083  FFE3   	movff	_prec+1,plusw1
 10513                           
 10514                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10515                           ;stkvar	_p @ sp[(-17)+9]
 10516  003AFC  0EF9               	movlw	-7
 10517  003AFE  BEE3               	btfsc	plusw1,7,c
 10518  003B00  D023               	goto	l1892
 10519                           
 10520                           ;stkvar	_l @ sp[(-17)+7]
 10521                           ;stkvar	_p @ sp[(-17)+9]
 10522  003B02  50E1               	movf	fsr1l,w,c
 10523  003B04  0FF8               	addlw	-8
 10524  003B06  6ED9               	movwf	fsr2l,c
 10525  003B08  50E2               	movf	fsr1h,w,c
 10526  003B0A  6EDA               	movwf	fsr2h,c
 10527  003B0C  0EFF               	movlw	255
 10528  003B0E  22DA               	addwfc	fsr2h,f,c
 10529  003B10  0EF6               	movlw	-10
 10530  003B12  50E3               	movf	plusw1,w,c
 10531  003B14  5CDE               	subwf	postinc2,w,c
 10532  003B16  50DE               	movf	postinc2,w,c
 10533  003B18  0A80               	xorlw	128
 10534  003B1A  6E3D               	movwf	btemp,c
 10535  003B1C  0EF7               	movlw	-9
 10536  003B1E  50E3               	movf	plusw1,w,c
 10537  003B20  0A80               	xorlw	128
 10538  003B22  583D               	subwfb	btemp,w,c
 10539  003B24  B0D8               	btfsc	status,0,c
 10540  003B26  D010               	goto	l1892
 10541                           
 10542                           ;stkvar	_p @ sp[(-17)+9]
 10543                           ;stkvar	_l @ sp[(-17)+7]
 10544  003B28  0EF8               	movlw	-8
 10545  003B2A  006F FF8C  F03D    	movff	plusw1,btemp
 10546  003B30  0EF6               	movlw	-10
 10547  003B32  0060  F0F7  FFE3   	movff	btemp,plusw1
 10548  003B38  0EF9               	movlw	-7
 10549  003B3A  006F FF8C  F03D    	movff	plusw1,btemp
 10550  003B40  0EF7               	movlw	-9
 10551  003B42  0060  F0F7  FFE3   	movff	btemp,plusw1
 10552  003B48                     l1892:
 10553                           
 10554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10555                           ;stkvar	_l @ sp[(-17)+7]
 10556                           ;stkvar	_p @ sp[(-17)+9]
 10557  003B48  0EF6               	movlw	-10
 10558  003B4A  006F FF8C  F03D    	movff	plusw1,btemp
 10559  003B50  0EF8               	movlw	-8
 10560  003B52  0060  F0F7  FFE3   	movff	btemp,plusw1
 10561  003B58  0EF7               	movlw	-9
 10562  003B5A  006F FF8C  F03D    	movff	plusw1,btemp
 10563  003B60  0EF9               	movlw	-7
 10564  003B62  0060  F0F7  FFE3   	movff	btemp,plusw1
 10565                           
 10566                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10567                           ;stkvar	_w @ sp[(-17)+13]
 10568  003B68  0EFC               	movlw	-4
 10569  003B6A  0060  F077  FFE3   	movff	_width,plusw1
 10570  003B70  0EFD               	movlw	-3
 10571  003B72  0060  F07B  FFE3   	movff	_width+1,plusw1
 10572                           
 10573                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10574  003B78  A021               	btfss	_flags,0,c
 10575  003B7A  D01F               	goto	l8223
 10576  003B7C  D031               	goto	u4920
 10577  003B7E                     l8219:
 10578                           
 10579                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10580                           ;stkvar	_fp @ sp[(-17)+-2]
 10581  003B7E  0EED               	movlw	-19
 10582  003B80  006F FF8F FFE6     	movff	plusw1,postinc1
 10583  003B86  006F FF8F FFE6     	movff	plusw1,postinc1
 10584  003B8C  0E20               	movlw	32
 10585  003B8E  6EE6               	movwf	postinc1,c
 10586  003B90  0E00               	movlw	0
 10587  003B92  6EE6               	movwf	postinc1,c
 10588  003B94  EC5E  F026         	call	_fputc	;wreg free
 10589                           
 10590                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10591                           ;stkvar	_l @ sp[(-17)+7]
 10592  003B98  0EF6               	movlw	-10
 10593  003B9A  50E3               	movf	plusw1,w,c
 10594  003B9C  0F01               	addlw	1
 10595  003B9E  6E3D               	movwf	btemp,c
 10596  003BA0  0EF6               	movlw	-10
 10597  003BA2  0060  F0F7  FFE3   	movff	btemp,plusw1
 10598  003BA8  6A3D               	clrf	btemp,c
 10599  003BAA  0EF7               	movlw	-9
 10600  003BAC  50E3               	movf	plusw1,w,c
 10601  003BAE  203D               	addwfc	btemp,w,c
 10602  003BB0  6E3D               	movwf	btemp,c
 10603  003BB2  0EF7               	movlw	-9
 10604  003BB4  0060  F0F7  FFE3   	movff	btemp,plusw1
 10605  003BBA                     l8223:
 10606                           
 10607                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10608                           ;stkvar	_w @ sp[(-17)+13]
 10609                           ;stkvar	_l @ sp[(-17)+7]
 10610  003BBA  50E1               	movf	fsr1l,w,c
 10611  003BBC  0FF6               	addlw	-10
 10612  003BBE  6ED9               	movwf	fsr2l,c
 10613  003BC0  50E2               	movf	fsr1h,w,c
 10614  003BC2  6EDA               	movwf	fsr2h,c
 10615  003BC4  0EFF               	movlw	255
 10616  003BC6  22DA               	addwfc	fsr2h,f,c
 10617  003BC8  0EFC               	movlw	-4
 10618  003BCA  50E3               	movf	plusw1,w,c
 10619  003BCC  5CDE               	subwf	postinc2,w,c
 10620  003BCE  50DE               	movf	postinc2,w,c
 10621  003BD0  0A80               	xorlw	128
 10622  003BD2  6E3D               	movwf	btemp,c
 10623  003BD4  0EFD               	movlw	-3
 10624  003BD6  50E3               	movf	plusw1,w,c
 10625  003BD8  0A80               	xorlw	128
 10626  003BDA  583D               	subwfb	btemp,w,c
 10627  003BDC  A0D8               	btfss	status,0,c
 10628  003BDE  D7CF               	goto	l8219
 10629  003BE0                     u4920:
 10630                           
 10631                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10632                           ;stkvar	_i @ sp[(-17)+15]
 10633  003BE0  0EFE               	movlw	-2
 10634  003BE2  6AE3               	clrf	plusw1,c
 10635  003BE4  0EFF               	movlw	-1
 10636  003BE6  6AE3               	clrf	plusw1,c
 10637                           
 10638                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10639  003BE8  D045               	goto	l8233
 10640  003BEA                     l8227:
 10641                           
 10642                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10643                           ;stkvar	_fp @ sp[(-17)+-2]
 10644  003BEA  0EED               	movlw	-19
 10645  003BEC  006F FF8F FFE6     	movff	plusw1,postinc1
 10646  003BF2  006F FF8F FFE6     	movff	plusw1,postinc1
 10647                           
 10648                           ;stkvar	_cp @ sp[(-19)+11]
 10649  003BF8  0EF8               	movlw	-8
 10650  003BFA  006F FF8F FFF6     	movff	plusw1,tblptrl
 10651  003C00  0EF9               	movlw	-7
 10652  003C02  006F FF8F FFF7     	movff	plusw1,tblptrh
 10653  003C08  0E00               	movlw	low (__smallconst shr (0+16))
 10654  003C0A  6EF8               	movwf	tblptru,c
 10655  003C0C  0E1F               	movlw	(high __ramtop+-1)
 10656  003C0E  64F7               	cpfsgt	tblptrh,c
 10657  003C10  D003               	bra	u4937
 10658  003C12  0008               	tblrd		*
 10659  003C14  50F5               	movf	tablat,w,c
 10660  003C16  D007               	bra	u4930
 10661  003C18                     u4937:
 10662  003C18  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10663  003C1E  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10664  003C24  50EF               	movf	indf0,w,c
 10665  003C26                     u4930:
 10666  003C26  6EE6               	movwf	postinc1,c
 10667  003C28  0E00               	movlw	0
 10668  003C2A  6EE6               	movwf	postinc1,c
 10669  003C2C  EC5E  F026         	call	_fputc	;wreg free
 10670                           
 10671                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10672                           ;stkvar	_cp @ sp[(-17)+11]
 10673  003C30  0EFA               	movlw	-6
 10674  003C32  50E3               	movf	plusw1,w,c
 10675  003C34  0F01               	addlw	1
 10676  003C36  6E3D               	movwf	btemp,c
 10677  003C38  0EFA               	movlw	-6
 10678  003C3A  0060  F0F7  FFE3   	movff	btemp,plusw1
 10679  003C40  6A3D               	clrf	btemp,c
 10680  003C42  0EFB               	movlw	-5
 10681  003C44  50E3               	movf	plusw1,w,c
 10682  003C46  203D               	addwfc	btemp,w,c
 10683  003C48  6E3D               	movwf	btemp,c
 10684  003C4A  0EFB               	movlw	-5
 10685  003C4C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10686                           
 10687                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10688                           ;stkvar	_i @ sp[(-17)+15]
 10689  003C52  0EFE               	movlw	-2
 10690  003C54  50E3               	movf	plusw1,w,c
 10691  003C56  0F01               	addlw	1
 10692  003C58  6E3D               	movwf	btemp,c
 10693  003C5A  0EFE               	movlw	-2
 10694  003C5C  0060  F0F7  FFE3   	movff	btemp,plusw1
 10695  003C62  6A3D               	clrf	btemp,c
 10696  003C64  0EFF               	movlw	-1
 10697  003C66  50E3               	movf	plusw1,w,c
 10698  003C68  203D               	addwfc	btemp,w,c
 10699  003C6A  6E3D               	movwf	btemp,c
 10700  003C6C  0EFF               	movlw	-1
 10701  003C6E  0060  F0F7  FFE3   	movff	btemp,plusw1
 10702  003C74                     l8233:
 10703                           
 10704                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10705                           ;stkvar	_p @ sp[(-17)+9]
 10706                           ;stkvar	_i @ sp[(-17)+15]
 10707  003C74  50E1               	movf	fsr1l,w,c
 10708  003C76  0FFE               	addlw	-2
 10709  003C78  6ED9               	movwf	fsr2l,c
 10710  003C7A  50E2               	movf	fsr1h,w,c
 10711  003C7C  6EDA               	movwf	fsr2h,c
 10712  003C7E  0EFF               	movlw	255
 10713  003C80  22DA               	addwfc	fsr2h,f,c
 10714  003C82  0EF8               	movlw	-8
 10715  003C84  50E3               	movf	plusw1,w,c
 10716  003C86  5CDE               	subwf	postinc2,w,c
 10717  003C88  50DE               	movf	postinc2,w,c
 10718  003C8A  0A80               	xorlw	128
 10719  003C8C  6E3D               	movwf	btemp,c
 10720  003C8E  0EF9               	movlw	-7
 10721  003C90  50E3               	movf	plusw1,w,c
 10722  003C92  0A80               	xorlw	128
 10723  003C94  583D               	subwfb	btemp,w,c
 10724  003C96  A0D8               	btfss	status,0,c
 10725  003C98  D7A8               	goto	l8227
 10726                           
 10727                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 10728  003C9A  B021               	btfsc	_flags,0,c
 10729  003C9C  D01F               	goto	l8241
 10730  003C9E  D031               	goto	u4960
 10731  003CA0                     l8237:
 10732                           
 10733                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 10734                           ;stkvar	_fp @ sp[(-17)+-2]
 10735  003CA0  0EED               	movlw	-19
 10736  003CA2  006F FF8F FFE6     	movff	plusw1,postinc1
 10737  003CA8  006F FF8F FFE6     	movff	plusw1,postinc1
 10738  003CAE  0E20               	movlw	32
 10739  003CB0  6EE6               	movwf	postinc1,c
 10740  003CB2  0E00               	movlw	0
 10741  003CB4  6EE6               	movwf	postinc1,c
 10742  003CB6  EC5E  F026         	call	_fputc	;wreg free
 10743                           
 10744                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 584:             ++l;
 10745                           ;stkvar	_l @ sp[(-17)+7]
 10746  003CBA  0EF6               	movlw	-10
 10747  003CBC  50E3               	movf	plusw1,w,c
 10748  003CBE  0F01               	addlw	1
 10749  003CC0  6E3D               	movwf	btemp,c
 10750  003CC2  0EF6               	movlw	-10
 10751  003CC4  0060  F0F7  FFE3   	movff	btemp,plusw1
 10752  003CCA  6A3D               	clrf	btemp,c
 10753  003CCC  0EF7               	movlw	-9
 10754  003CCE  50E3               	movf	plusw1,w,c
 10755  003CD0  203D               	addwfc	btemp,w,c
 10756  003CD2  6E3D               	movwf	btemp,c
 10757  003CD4  0EF7               	movlw	-9
 10758  003CD6  0060  F0F7  FFE3   	movff	btemp,plusw1
 10759  003CDC                     l8241:
 10760                           
 10761                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 10762                           ;stkvar	_w @ sp[(-17)+13]
 10763                           ;stkvar	_l @ sp[(-17)+7]
 10764  003CDC  50E1               	movf	fsr1l,w,c
 10765  003CDE  0FF6               	addlw	-10
 10766  003CE0  6ED9               	movwf	fsr2l,c
 10767  003CE2  50E2               	movf	fsr1h,w,c
 10768  003CE4  6EDA               	movwf	fsr2h,c
 10769  003CE6  0EFF               	movlw	255
 10770  003CE8  22DA               	addwfc	fsr2h,f,c
 10771  003CEA  0EFC               	movlw	-4
 10772  003CEC  50E3               	movf	plusw1,w,c
 10773  003CEE  5CDE               	subwf	postinc2,w,c
 10774  003CF0  50DE               	movf	postinc2,w,c
 10775  003CF2  0A80               	xorlw	128
 10776  003CF4  6E3D               	movwf	btemp,c
 10777  003CF6  0EFD               	movlw	-3
 10778  003CF8  50E3               	movf	plusw1,w,c
 10779  003CFA  0A80               	xorlw	128
 10780  003CFC  583D               	subwfb	btemp,w,c
 10781  003CFE  A0D8               	btfss	status,0,c
 10782  003D00  D7CF               	goto	l8237
 10783  003D02                     u4960:
 10784                           
 10785                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 588:     return l;
 10786                           ;stkvar	_l @ sp[(-17)+7]
 10787  003D02  0EF6               	movlw	-10
 10788  003D04  006F FF8C  F03D    	movff	plusw1,btemp
 10789  003D0A  0EF7               	movlw	-9
 10790  003D0C  006F FF8C  F03E    	movff	plusw1,btemp+1
 10791                           
 10792                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 10793  003D12  0EEB               	movlw	235
 10794  003D14  26E1               	addwf	fsr1l,f,c
 10795  003D16  0EFF               	movlw	255
 10796  003D18  22E2               	addwfc	fsr1h,f,c
 10797  003D1A  0012               	return		;funcret
 10798  003D1C                     __end_of_stoa:
 10799                           	opt callstack 0
 10800                           
 10801 ;; *************** function _dtoa *****************
 10802 ;; Defined at:
 10803 ;;		line 274 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 10804 ;; Parameters:    Size  Location     Type
 10805 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10806 ;;		 -> f(5), NULL(0), 
 10807 ;;  d               8  [STACK] long long 
 10808 ;; Auto vars:     Size  Location     Type
 10809 ;;  n               8  [STACK] long long 
 10810 ;;  i               2  [STACK] int 
 10811 ;;  s               2  [STACK] int 
 10812 ;;  w               2  [STACK] int 
 10813 ;;  p               2  [STACK] int 
 10814 ;; Return value:  Size  Location     Type
 10815 ;;                  2  [STACK] int 
 10816 ;; Registers used:
 10817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 10818 ;; Tracked objects:
 10819 ;;		On entry : 0/0
 10820 ;;		On exit  : 0/0
 10821 ;;		Unchanged: 0/0
 10822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10827 ;;Total ram usage:        0 bytes
 10828 ;; Hardware stack levels used:    1
 10829 ;; Hardware stack levels required when called:    8
 10830 ;; This function calls:
 10831 ;;		___aodiv
 10832 ;;		___aomod
 10833 ;;		_abs
 10834 ;;		_pad
 10835 ;; This function is called by:
 10836 ;;		_vfpfcnvrt
 10837 ;; This function uses a reentrant model
 10838 ;;
 10839                           
 10840                           	psect	text44
 10841  002F8C                     __ptext44:
 10842                           	opt callstack 0
 10843  002F8C                     _dtoa:
 10844                           	opt callstack 0
 10845                           
 10846                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 10847  002F8C  0E12               	movlw	18
 10848  002F8E  26E1               	addwf	fsr1l,f,c
 10849  002F90  0E00               	movlw	0
 10850  002F92  22E2               	addwfc	fsr1h,f,c
 10851                           
 10852                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .05/pic/sources/c99/common/doprnt.c: 280:     n = d;
 10853                           ;stkvar	_d @ sp[(-18)+-10]
 10854                           
 10855                           ;incstack = 0
 10856  002F94  0EE4               	movlw	228
 10857  002F96  24E1               	addwf	fsr1l,w,c
 10858  002F98  6ED9               	movwf	fsr2l,c
 10859  002F9A  0EFF               	movlw	255
 10860  002F9C  20E2               	addwfc	fsr1h,w,c
 10861  002F9E  6EDA               	movwf	fsr2h,c
 10862                           
 10863                           ;stkvar	_n @ sp[(-18)+2]
 10864  002FA0  0E08               	movlw	8
 10865  002FA2  6E3D               	movwf	btemp,c
 10866  002FA4  0EF0               	movlw	-16
 10867  002FA6                     us470999:
 10868  002FA6  006F FF7B FFE3     	movff	postinc2,plusw1
 10869  002FAC  28E8               	incf	wreg,w,c
 10870  002FAE  2E3D               	decfsz	btemp,f,c
 10871  002FB0  D7FA               	bra	us470999
 10872                           
 10873                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 10874                           ;stkvar	_n @ sp[(-18)+2]
 10875  002FB2  0EF7               	movlw	-9
 10876  002FB4  AEE3               	btfss	plusw1,7,c
 10877  002FB6  D002               	goto	u4710
 10878  002FB8  0E01               	movlw	1
 10879  002FBA  D001               	goto	u4720
 10880  002FBC                     u4710:
 10881  002FBC  0E00               	movlw	0
 10882  002FBE                     u4720:
 10883  002FBE  6E47               	movwf	btemp+10,c
 10884  002FC0  6A48               	clrf	btemp+11,c
 10885                           
 10886                           ;stkvar	_s @ sp[(-18)+12]
 10887  002FC2  0EFA               	movlw	-6
 10888  002FC4  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10889  002FCA  0EFB               	movlw	-5
 10890  002FCC  0060  F123  FFE3   	movff	btemp+11,plusw1
 10891                           
 10892                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 10893                           ;stkvar	_s @ sp[(-18)+12]
 10894  002FD2  0EFA               	movlw	-6
 10895  002FD4  006F FF8C  F03D    	movff	plusw1,btemp
 10896  002FDA  0EFB               	movlw	-5
 10897  002FDC  50E3               	movf	plusw1,w,c
 10898  002FDE  103D               	iorwf	btemp,w,c
 10899  002FE0  B4D8               	btfsc	status,2,c
 10900  002FE2  D025               	goto	u4740
 10901                           
 10902                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 10903                           ;stkvar	_n @ sp[(-18)+2]
 10904                           ;stkvar	_n @ sp[(-18)+2]
 10905  002FE4  0EF0               	movlw	-16
 10906  002FE6  6CE3               	negf	plusw1,c
 10907  002FE8  0EF1               	movlw	-15
 10908  002FEA  1EE3               	comf	plusw1,f,c
 10909  002FEC  0EF2               	movlw	-14
 10910  002FEE  1EE3               	comf	plusw1,f,c
 10911  002FF0  0EF3               	movlw	-13
 10912  002FF2  1EE3               	comf	plusw1,f,c
 10913  002FF4  0EF4               	movlw	-12
 10914  002FF6  1EE3               	comf	plusw1,f,c
 10915  002FF8  0EF5               	movlw	-11
 10916  002FFA  1EE3               	comf	plusw1,f,c
 10917  002FFC  0EF6               	movlw	-10
 10918  002FFE  1EE3               	comf	plusw1,f,c
 10919  003000  0EF7               	movlw	-9
 10920  003002  1EE3               	comf	plusw1,f,c
 10921  003004  E314               	bnc	u4740
 10922  003006  0EF1               	movlw	-15
 10923  003008  2AE3               	incf	plusw1,f,c
 10924  00300A  E311               	bnc	u4740
 10925  00300C  0EF2               	movlw	-14
 10926  00300E  2AE3               	incf	plusw1,f,c
 10927  003010  E30E               	bnc	u4740
 10928  003012  0EF3               	movlw	-13
 10929  003014  2AE3               	incf	plusw1,f,c
 10930  003016  E30B               	bnc	u4740
 10931  003018  0EF4               	movlw	-12
 10932  00301A  2AE3               	incf	plusw1,f,c
 10933  00301C  E308               	bnc	u4740
 10934  00301E  0EF5               	movlw	-11
 10935  003020  2AE3               	incf	plusw1,f,c
 10936  003022  E305               	bnc	u4740
 10937  003024  0EF6               	movlw	-10
 10938  003026  2AE3               	incf	plusw1,f,c
 10939  003028  E302               	bnc	u4740
 10940  00302A  0EF7               	movlw	-9
 10941  00302C  2AE3               	incf	plusw1,f,c
 10942  00302E                     u4740:
 10943                           
 10944                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 10945  00302E  AE20               	btfss	_prec+1,7,c
 10946                           
 10947                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 10948  003030  9221               	bcf	_flags,1,c
 10949                           
 10950                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 10951  003032  BE20               	btfsc	_prec+1,7,c
 10952  003034  D005               	goto	u4760
 10953  003036  5020               	movf	_prec+1,w,c
 10954  003038  E110               	bnz	l8145
 10955  00303A  041F               	decf	_prec,w,c
 10956  00303C  B0D8               	btfsc	status,0,c
 10957  00303E  D00D               	goto	l8145
 10958  003040                     u4760:
 10959  003040  0E01               	movlw	1
 10960  003042  6E47               	movwf	btemp+10,c
 10961  003044  0E00               	movlw	0
 10962  003046  6E48               	movwf	btemp+11,c
 10963                           
 10964                           ;stkvar	_p @ sp[(-18)+16]
 10965  003048  0EFE               	movlw	-2
 10966  00304A  0060  F11F  FFE3   	movff	btemp+10,plusw1
 10967  003050  0EFF               	movlw	-1
 10968  003052  0060  F123  FFE3   	movff	btemp+11,plusw1
 10969  003058  D008               	goto	l1865
 10970  00305A                     l8145:
 10971                           
 10972                           ;stkvar	_p @ sp[(-18)+16]
 10973  00305A  0EFE               	movlw	-2
 10974  00305C  0060  F07F  FFE3   	movff	_prec,plusw1
 10975  003062  0EFF               	movlw	-1
 10976  003064  0060  F083  FFE3   	movff	_prec+1,plusw1
 10977  00306A                     l1865:
 10978                           
 10979                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 291:     w = width;
 10980                           ;stkvar	_w @ sp[(-18)+14]
 10981  00306A  0EFC               	movlw	-4
 10982  00306C  0060  F077  FFE3   	movff	_width,plusw1
 10983  003072  0EFD               	movlw	-3
 10984  003074  0060  F07B  FFE3   	movff	_width+1,plusw1
 10985                           
 10986                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 10987                           ;stkvar	_s @ sp[(-18)+12]
 10988  00307A  0EFA               	movlw	-6
 10989  00307C  006F FF8C  F03D    	movff	plusw1,btemp
 10990  003082  0EFB               	movlw	-5
 10991  003084  50E3               	movf	plusw1,w,c
 10992  003086  103D               	iorwf	btemp,w,c
 10993  003088  A4D8               	btfss	status,2,c
 10994  00308A  D002               	goto	u4780
 10995  00308C  A421               	btfss	_flags,2,c
 10996  00308E  D00A               	goto	l8153
 10997  003090                     u4780:
 10998                           
 10999                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 293:         --w;
 11000                           ;stkvar	_w @ sp[(-18)+14]
 11001  003090  50E1               	movf	fsr1l,w,c
 11002  003092  0FFC               	addlw	-4
 11003  003094  6ED9               	movwf	fsr2l,c
 11004  003096  50E2               	movf	fsr1h,w,c
 11005  003098  6EDA               	movwf	fsr2h,c
 11006  00309A  0EFF               	movlw	255
 11007  00309C  22DA               	addwfc	fsr2h,f,c
 11008  00309E  06DE               	decf	postinc2,f,c
 11009  0030A0  0E00               	movlw	0
 11010  0030A2  5ADD               	subwfb	postdec2,f,c
 11011  0030A4                     l8153:
 11012                           
 11013                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 11014  0030A4  0E1F               	movlw	31
 11015  0030A6  6E47               	movwf	btemp+10,c
 11016  0030A8  0E00               	movlw	0
 11017  0030AA  6E48               	movwf	btemp+11,c
 11018                           
 11019                           ;stkvar	_i @ sp[(-18)+10]
 11020  0030AC  0EF8               	movlw	-8
 11021  0030AE  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11022  0030B4  0EF9               	movlw	-7
 11023  0030B6  0060  F123  FFE3   	movff	btemp+11,plusw1
 11024                           
 11025                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 11026  0030BC  0101               	movlb	1	; () banked
 11027  0030BE  6BED               	clrf	(_dbuf+31)& (0+255),b
 11028                           
 11029                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11030  0030C0  D109               	goto	l8167
 11031  0030C2                     l8157:
 11032                           
 11033                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 300:         --i;
 11034                           ;stkvar	_i @ sp[(-18)+10]
 11035  0030C2  50E1               	movf	fsr1l,w,c
 11036  0030C4  0FF8               	addlw	-8
 11037  0030C6  6ED9               	movwf	fsr2l,c
 11038  0030C8  50E2               	movf	fsr1h,w,c
 11039  0030CA  6EDA               	movwf	fsr2h,c
 11040  0030CC  0EFF               	movlw	255
 11041  0030CE  22DA               	addwfc	fsr2h,f,c
 11042  0030D0  06DE               	decf	postinc2,f,c
 11043  0030D2  0E00               	movlw	0
 11044  0030D4  5ADD               	subwfb	postdec2,f,c
 11045                           
 11046                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 11047  0030D6  0E0A               	movlw	10
 11048  0030D8  6EE6               	movwf	postinc1,c
 11049  0030DA  0E00               	movlw	0
 11050  0030DC  6EE6               	movwf	postinc1,c
 11051  0030DE  0E00               	movlw	0
 11052  0030E0  6EE6               	movwf	postinc1,c
 11053  0030E2  0E00               	movlw	0
 11054  0030E4  6EE6               	movwf	postinc1,c
 11055  0030E6  0E00               	movlw	0
 11056  0030E8  6EE6               	movwf	postinc1,c
 11057  0030EA  0E00               	movlw	0
 11058  0030EC  6EE6               	movwf	postinc1,c
 11059  0030EE  0E00               	movlw	0
 11060  0030F0  6EE6               	movwf	postinc1,c
 11061  0030F2  0E00               	movlw	0
 11062  0030F4  6EE6               	movwf	postinc1,c
 11063                           
 11064                           ;stkvar	_n @ sp[(-26)+2]
 11065  0030F6  50E1               	movf	fsr1l,w,c
 11066  0030F8  0FE8               	addlw	-24
 11067  0030FA  6ED9               	movwf	fsr2l,c
 11068  0030FC  50E2               	movf	fsr1h,w,c
 11069  0030FE  6EDA               	movwf	fsr2h,c
 11070  003100  0EFF               	movlw	255
 11071  003102  22DA               	addwfc	fsr2h,f,c
 11072  003104  006F FF7B FFE6     	movff	postinc2,postinc1
 11073  00310A  006F FF7B FFE6     	movff	postinc2,postinc1
 11074  003110  006F FF7B FFE6     	movff	postinc2,postinc1
 11075  003116  006F FF7B FFE6     	movff	postinc2,postinc1
 11076  00311C  006F FF7B FFE6     	movff	postinc2,postinc1
 11077  003122  006F FF7B FFE6     	movff	postinc2,postinc1
 11078  003128  006F FF7B FFE6     	movff	postinc2,postinc1
 11079  00312E  006F FF7B FFE6     	movff	postinc2,postinc1
 11080  003134  EC64  F023         	call	___aomod	;wreg free
 11081  003138  52E5               	movf	postdec1,f,c
 11082  00313A  006F FF9C  F054    	movff	indf1,btemp+23
 11083  003140  52E5               	movf	postdec1,f,c
 11084  003142  006F FF9C  F053    	movff	indf1,btemp+22
 11085  003148  52E5               	movf	postdec1,f,c
 11086  00314A  006F FF9C  F052    	movff	indf1,btemp+21
 11087  003150  52E5               	movf	postdec1,f,c
 11088  003152  006F FF9C  F051    	movff	indf1,btemp+20
 11089  003158  52E5               	movf	postdec1,f,c
 11090  00315A  006F FF9C  F050    	movff	indf1,btemp+19
 11091  003160  52E5               	movf	postdec1,f,c
 11092  003162  006F FF9C  F04F    	movff	indf1,btemp+18
 11093  003168  52E5               	movf	postdec1,f,c
 11094  00316A  006F FF9C  F04E    	movff	indf1,btemp+17
 11095  003170  52E5               	movf	postdec1,f,c
 11096  003172  006F FF9C  F04D    	movff	indf1,btemp+16
 11097  003178  0EF8               	movlw	248
 11098  00317A  26E1               	addwf	fsr1l,f,c
 11099  00317C  0EFF               	movlw	255
 11100  00317E  22E2               	addwfc	fsr1h,f,c
 11101  003180  0060  F134  F047   	movff	btemp+16,btemp+10
 11102  003186  0060  F138  F048   	movff	btemp+17,btemp+11
 11103  00318C  0060  F11F  FFE6   	movff	btemp+10,postinc1
 11104  003192  0060  F123  FFE6   	movff	btemp+11,postinc1
 11105  003198  ECE6  F02D         	call	_abs	;wreg free
 11106  00319C  0E30               	movlw	48
 11107  00319E  263D               	addwf	btemp,f,c
 11108                           
 11109                           ;stkvar	_i @ sp[(-18)+10]
 11110  0031A0  0EF8               	movlw	-8
 11111  0031A2  006F FF8C  F047    	movff	plusw1,btemp+10
 11112  0031A8  0EF9               	movlw	-7
 11113  0031AA  006F FF8C  F048    	movff	plusw1,btemp+11
 11114  0031B0  0ECE               	movlw	low _dbuf
 11115  0031B2  2447               	addwf	btemp+10,w,c
 11116  0031B4  6ED9               	movwf	fsr2l,c
 11117  0031B6  0E01               	movlw	high _dbuf
 11118  0031B8  2048               	addwfc	btemp+11,w,c
 11119  0031BA  6EDA               	movwf	fsr2h,c
 11120  0031BC  0060  F0F7  FFDF   	movff	btemp,indf2
 11121                           
 11122                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 302:         --p;
 11123                           ;stkvar	_p @ sp[(-18)+16]
 11124  0031C2  50E1               	movf	fsr1l,w,c
 11125  0031C4  0FFE               	addlw	-2
 11126  0031C6  6ED9               	movwf	fsr2l,c
 11127  0031C8  50E2               	movf	fsr1h,w,c
 11128  0031CA  6EDA               	movwf	fsr2h,c
 11129  0031CC  0EFF               	movlw	255
 11130  0031CE  22DA               	addwfc	fsr2h,f,c
 11131  0031D0  06DE               	decf	postinc2,f,c
 11132  0031D2  0E00               	movlw	0
 11133  0031D4  5ADD               	subwfb	postdec2,f,c
 11134                           
 11135                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 303:         --w;
 11136                           ;stkvar	_w @ sp[(-18)+14]
 11137  0031D6  50E1               	movf	fsr1l,w,c
 11138  0031D8  0FFC               	addlw	-4
 11139  0031DA  6ED9               	movwf	fsr2l,c
 11140  0031DC  50E2               	movf	fsr1h,w,c
 11141  0031DE  6EDA               	movwf	fsr2h,c
 11142  0031E0  0EFF               	movlw	255
 11143  0031E2  22DA               	addwfc	fsr2h,f,c
 11144  0031E4  06DE               	decf	postinc2,f,c
 11145  0031E6  0E00               	movlw	0
 11146  0031E8  5ADD               	subwfb	postdec2,f,c
 11147                           
 11148                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 11149  0031EA  0E0A               	movlw	10
 11150  0031EC  6EE6               	movwf	postinc1,c
 11151  0031EE  0E00               	movlw	0
 11152  0031F0  6EE6               	movwf	postinc1,c
 11153  0031F2  0E00               	movlw	0
 11154  0031F4  6EE6               	movwf	postinc1,c
 11155  0031F6  0E00               	movlw	0
 11156  0031F8  6EE6               	movwf	postinc1,c
 11157  0031FA  0E00               	movlw	0
 11158  0031FC  6EE6               	movwf	postinc1,c
 11159  0031FE  0E00               	movlw	0
 11160  003200  6EE6               	movwf	postinc1,c
 11161  003202  0E00               	movlw	0
 11162  003204  6EE6               	movwf	postinc1,c
 11163  003206  0E00               	movlw	0
 11164  003208  6EE6               	movwf	postinc1,c
 11165                           
 11166                           ;stkvar	_n @ sp[(-26)+2]
 11167  00320A  50E1               	movf	fsr1l,w,c
 11168  00320C  0FE8               	addlw	-24
 11169  00320E  6ED9               	movwf	fsr2l,c
 11170  003210  50E2               	movf	fsr1h,w,c
 11171  003212  6EDA               	movwf	fsr2h,c
 11172  003214  0EFF               	movlw	255
 11173  003216  22DA               	addwfc	fsr2h,f,c
 11174  003218  006F FF7B FFE6     	movff	postinc2,postinc1
 11175  00321E  006F FF7B FFE6     	movff	postinc2,postinc1
 11176  003224  006F FF7B FFE6     	movff	postinc2,postinc1
 11177  00322A  006F FF7B FFE6     	movff	postinc2,postinc1
 11178  003230  006F FF7B FFE6     	movff	postinc2,postinc1
 11179  003236  006F FF7B FFE6     	movff	postinc2,postinc1
 11180  00323C  006F FF7B FFE6     	movff	postinc2,postinc1
 11181  003242  006F FF7B FFE6     	movff	postinc2,postinc1
 11182  003248  EC8E  F01E         	call	___aodiv	;wreg free
 11183  00324C  52E5               	movf	postdec1,f,c
 11184  00324E  006F FF9C  F054    	movff	indf1,btemp+23
 11185  003254  52E5               	movf	postdec1,f,c
 11186  003256  006F FF9C  F053    	movff	indf1,btemp+22
 11187  00325C  52E5               	movf	postdec1,f,c
 11188  00325E  006F FF9C  F052    	movff	indf1,btemp+21
 11189  003264  52E5               	movf	postdec1,f,c
 11190  003266  006F FF9C  F051    	movff	indf1,btemp+20
 11191  00326C  52E5               	movf	postdec1,f,c
 11192  00326E  006F FF9C  F050    	movff	indf1,btemp+19
 11193  003274  52E5               	movf	postdec1,f,c
 11194  003276  006F FF9C  F04F    	movff	indf1,btemp+18
 11195  00327C  52E5               	movf	postdec1,f,c
 11196  00327E  006F FF9C  F04E    	movff	indf1,btemp+17
 11197  003284  52E5               	movf	postdec1,f,c
 11198  003286  006F FF9C  F04D    	movff	indf1,btemp+16
 11199  00328C  0EF8               	movlw	248
 11200  00328E  26E1               	addwf	fsr1l,f,c
 11201  003290  0EFF               	movlw	255
 11202  003292  22E2               	addwfc	fsr1h,f,c
 11203                           
 11204                           ;stkvar	_n @ sp[(-18)+2]
 11205  003294  0EF0               	movlw	-16
 11206  003296  0060  F137  FFE3   	movff	btemp+16,plusw1
 11207  00329C  0EF1               	movlw	-15
 11208  00329E  0060  F13B  FFE3   	movff	btemp+17,plusw1
 11209  0032A4  0EF2               	movlw	-14
 11210  0032A6  0060  F13F  FFE3   	movff	btemp+18,plusw1
 11211  0032AC  0EF3               	movlw	-13
 11212  0032AE  0060  F143  FFE3   	movff	btemp+19,plusw1
 11213  0032B4  0EF4               	movlw	-12
 11214  0032B6  0060  F147  FFE3   	movff	btemp+20,plusw1
 11215  0032BC  0EF5               	movlw	-11
 11216  0032BE  0060  F14B  FFE3   	movff	btemp+21,plusw1
 11217  0032C4  0EF6               	movlw	-10
 11218  0032C6  0060  F14F  FFE3   	movff	btemp+22,plusw1
 11219  0032CC  0EF7               	movlw	-9
 11220  0032CE  0060  F153  FFE3   	movff	btemp+23,plusw1
 11221  0032D4                     l8167:
 11222                           
 11223                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11224                           ;stkvar	_i @ sp[(-18)+10]
 11225  0032D4  0EF9               	movlw	-7
 11226  0032D6  BEE3               	btfsc	plusw1,7,c
 11227  0032D8  D036               	goto	u4830
 11228  0032DA  0EF9               	movlw	-7
 11229  0032DC  50E3               	movf	plusw1,w,c
 11230  0032DE  E104               	bnz	u4790
 11231  0032E0  0EF8               	movlw	-8
 11232  0032E2  04E3               	decf	plusw1,w,c
 11233  0032E4  A0D8               	btfss	status,0,c
 11234  0032E6  D02F               	goto	u4830
 11235  0032E8                     u4790:
 11236                           
 11237                           ;stkvar	_n @ sp[(-18)+2]
 11238  0032E8  0EF0               	movlw	-16
 11239  0032EA  50E3               	movf	plusw1,w,c
 11240  0032EC  E115               	bnz	u4801
 11241  0032EE  0EF1               	movlw	-15
 11242  0032F0  50E3               	movf	plusw1,w,c
 11243  0032F2  E112               	bnz	u4801
 11244  0032F4  0EF2               	movlw	-14
 11245  0032F6  50E3               	movf	plusw1,w,c
 11246  0032F8  E10F               	bnz	u4801
 11247  0032FA  0EF3               	movlw	-13
 11248  0032FC  50E3               	movf	plusw1,w,c
 11249  0032FE  E10C               	bnz	u4801
 11250  003300  0EF4               	movlw	-12
 11251  003302  50E3               	movf	plusw1,w,c
 11252  003304  E109               	bnz	u4801
 11253  003306  0EF5               	movlw	-11
 11254  003308  50E3               	movf	plusw1,w,c
 11255  00330A  E106               	bnz	u4801
 11256  00330C  0EF6               	movlw	-10
 11257  00330E  50E3               	movf	plusw1,w,c
 11258  003310  E103               	bnz	u4801
 11259  003312  0EF7               	movlw	-9
 11260  003314  50E3               	movf	plusw1,w,c
 11261  003316  A4D8               	btfss	status,2,c
 11262  003318                     u4801:
 11263  003318  D6D4               	goto	l8157
 11264                           
 11265                           ;stkvar	_p @ sp[(-18)+16]
 11266  00331A  0EFF               	movlw	-1
 11267  00331C  BEE3               	btfsc	plusw1,7,c
 11268  00331E  D007               	goto	u4810
 11269  003320  0EFF               	movlw	-1
 11270  003322  50E3               	movf	plusw1,w,c
 11271  003324  E103               	bnz	u4811
 11272  003326  0EFE               	movlw	-2
 11273  003328  04E3               	decf	plusw1,w,c
 11274  00332A  B0D8               	btfsc	status,0,c
 11275  00332C                     u4811:
 11276  00332C  D6CA               	goto	l8157
 11277  00332E                     u4810:
 11278                           
 11279                           ;stkvar	_w @ sp[(-18)+14]
 11280  00332E  0EFD               	movlw	-3
 11281  003330  BEE3               	btfsc	plusw1,7,c
 11282  003332  D009               	goto	u4830
 11283  003334  0EFD               	movlw	-3
 11284  003336  50E3               	movf	plusw1,w,c
 11285  003338  E104               	bnz	u4820
 11286  00333A  0EFC               	movlw	-4
 11287  00333C  04E3               	decf	plusw1,w,c
 11288  00333E  A0D8               	btfss	status,0,c
 11289  003340  D002               	goto	u4830
 11290  003342                     u4820:
 11291  003342  B221               	btfsc	_flags,1,c
 11292  003344  D6BE               	goto	l8157
 11293  003346                     u4830:
 11294                           
 11295                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 11296                           ;stkvar	_s @ sp[(-18)+12]
 11297  003346  0EFA               	movlw	-6
 11298  003348  006F FF8C  F03D    	movff	plusw1,btemp
 11299  00334E  0EFB               	movlw	-5
 11300  003350  50E3               	movf	plusw1,w,c
 11301  003352  103D               	iorwf	btemp,w,c
 11302  003354  A4D8               	btfss	status,2,c
 11303  003356  D002               	goto	u4850
 11304  003358  A421               	btfss	_flags,2,c
 11305  00335A  D033               	goto	l8191
 11306  00335C                     u4850:
 11307                           
 11308                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 309:         --i;
 11309                           ;stkvar	_i @ sp[(-18)+10]
 11310  00335C  50E1               	movf	fsr1l,w,c
 11311  00335E  0FF8               	addlw	-8
 11312  003360  6ED9               	movwf	fsr2l,c
 11313  003362  50E2               	movf	fsr1h,w,c
 11314  003364  6EDA               	movwf	fsr2h,c
 11315  003366  0EFF               	movlw	255
 11316  003368  22DA               	addwfc	fsr2h,f,c
 11317  00336A  06DE               	decf	postinc2,f,c
 11318  00336C  0E00               	movlw	0
 11319  00336E  5ADD               	subwfb	postdec2,f,c
 11320                           
 11321                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 11322                           ;stkvar	_s @ sp[(-18)+12]
 11323  003370  0EFA               	movlw	-6
 11324  003372  006F FF8C  F03D    	movff	plusw1,btemp
 11325  003378  0EFB               	movlw	-5
 11326  00337A  50E3               	movf	plusw1,w,c
 11327  00337C  103D               	iorwf	btemp,w,c
 11328  00337E  A4D8               	btfss	status,2,c
 11329  003380  D002               	goto	l8187
 11330  003382  0E2B               	movlw	43
 11331  003384  D001               	goto	L28
 11332  003386                     l8187:
 11333  003386  0E2D               	movlw	45
 11334  003388                     L28:
 11335  003388  6E47               	movwf	btemp+10,c
 11336  00338A  0E00               	movlw	0
 11337  00338C  6E48               	movwf	btemp+11,c
 11338                           
 11339                           ;stkvar	_dtoa$3973 @ sp[(-18)+0]
 11340  00338E  0EEE               	movlw	-18
 11341  003390  0060  F11F  FFE3   	movff	btemp+10,plusw1
 11342  003396  0EEF               	movlw	-17
 11343  003398  0060  F123  FFE3   	movff	btemp+11,plusw1
 11344                           
 11345                           ;stkvar	_dtoa$3973 @ sp[(-18)+0]
 11346                           ;stkvar	_i @ sp[(-18)+10]
 11347  00339E  0EF8               	movlw	-8
 11348  0033A0  006F FF8C  F047    	movff	plusw1,btemp+10
 11349  0033A6  0EF9               	movlw	-7
 11350  0033A8  006F FF8C  F048    	movff	plusw1,btemp+11
 11351  0033AE  0ECE               	movlw	low _dbuf
 11352  0033B0  2447               	addwf	btemp+10,w,c
 11353  0033B2  6ED9               	movwf	fsr2l,c
 11354  0033B4  0E01               	movlw	high _dbuf
 11355  0033B6  2048               	addwfc	btemp+11,w,c
 11356  0033B8  6EDA               	movwf	fsr2h,c
 11357  0033BA  0EEE               	movlw	-18
 11358  0033BC  006F FF8F FFDF     	movff	plusw1,indf2
 11359  0033C2                     l8191:
 11360                           
 11361                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 11362                           ;stkvar	_w @ sp[(-18)+14]
 11363  0033C2  0EFC               	movlw	-4
 11364  0033C4  006F FF8F FFE6     	movff	plusw1,postinc1
 11365  0033CA  006F FF8F FFE6     	movff	plusw1,postinc1
 11366                           
 11367                           ;stkvar	_i @ sp[(-20)+10]
 11368  0033D0  0ECE               	movlw	low _dbuf
 11369  0033D2  6E47               	movwf	btemp+10,c
 11370  0033D4  0E01               	movlw	high _dbuf
 11371  0033D6  6E48               	movwf	btemp+11,c
 11372  0033D8  0EF6               	movlw	-10
 11373  0033DA  50E3               	movf	plusw1,w,c
 11374  0033DC  2647               	addwf	btemp+10,f,c
 11375  0033DE  0EF7               	movlw	-9
 11376  0033E0  50E3               	movf	plusw1,w,c
 11377  0033E2  2248               	addwfc	btemp+11,f,c
 11378  0033E4  0060  F11F  FFE6   	movff	btemp+10,postinc1
 11379  0033EA  0060  F123  FFE6   	movff	btemp+11,postinc1
 11380                           
 11381                           ;stkvar	_fp @ sp[(-22)+-2]
 11382  0033F0  0EE8               	movlw	-24
 11383  0033F2  006F FF8F FFE6     	movff	plusw1,postinc1
 11384  0033F8  006F FF8F FFE6     	movff	plusw1,postinc1
 11385  0033FE  EC4C  F025         	call	_pad	;wreg free
 11386                           
 11387                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 11388  003402  0EE4               	movlw	228
 11389  003404  26E1               	addwf	fsr1l,f,c
 11390  003406  0EFF               	movlw	255
 11391  003408  22E2               	addwfc	fsr1h,f,c
 11392  00340A  0012               	return		;funcret
 11393  00340C                     __end_of_dtoa:
 11394                           	opt callstack 0
 11395                           
 11396 ;; *************** function _abs *****************
 11397 ;; Defined at:
 11398 ;;		line 1 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/abs.c"
 11399 ;; Parameters:    Size  Location     Type
 11400 ;;  a               2  [STACK] int 
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;		None
 11403 ;; Return value:  Size  Location     Type
 11404 ;;                  2  [STACK] int 
 11405 ;; Registers used:
 11406 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 11407 ;; Tracked objects:
 11408 ;;		On entry : 0/1
 11409 ;;		On exit  : 0/0
 11410 ;;		Unchanged: 0/0
 11411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11412 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11414 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11415 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11416 ;;Total ram usage:        0 bytes
 11417 ;; Hardware stack levels used:    1
 11418 ;; Hardware stack levels required when called:    3
 11419 ;; This function calls:
 11420 ;;		Nothing
 11421 ;; This function is called by:
 11422 ;;		_dtoa
 11423 ;; This function uses a reentrant model
 11424 ;;
 11425                           
 11426                           	psect	text45
 11427  005BCC                     __ptext45:
 11428                           	opt callstack 0
 11429  005BCC                     _abs:
 11430                           	opt callstack 23
 11431                           
 11432                           ;stkvar	_a @ sp[(0)+-2]
 11433                           
 11434                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 11435                           ;incstack = 0
 11436  005BCC  0EFF               	movlw	-1
 11437  005BCE  BEE3               	btfsc	plusw1,7,c
 11438  005BD0  D007               	goto	u2450
 11439  005BD2  0EFF               	movlw	-1
 11440  005BD4  50E3               	movf	plusw1,w,c
 11441  005BD6  E112               	bnz	l5367
 11442  005BD8  0EFE               	movlw	-2
 11443  005BDA  04E3               	decf	plusw1,w,c
 11444  005BDC  B0D8               	btfsc	status,0,c
 11445  005BDE  D00E               	goto	l5367
 11446  005BE0                     u2450:
 11447                           
 11448                           ;stkvar	_a @ sp[(0)+-2]
 11449  005BE0  0EFE               	movlw	-2
 11450  005BE2  006F FF8C  F03D    	movff	plusw1,btemp
 11451  005BE8  1E3D               	comf	btemp,f,c
 11452  005BEA  0EFF               	movlw	-1
 11453  005BEC  006F FF8C  F03E    	movff	plusw1,btemp+1
 11454  005BF2  1E3E               	comf	btemp+1,f,c
 11455  005BF4  2A3D               	incf	btemp,f,c
 11456  005BF6  B4D8               	btfsc	status,2,c
 11457  005BF8  2A3E               	incf	btemp+1,f,c
 11458  005BFA  D008               	goto	l2606
 11459  005BFC                     l5367:
 11460                           
 11461                           ;stkvar	_a @ sp[(0)+-2]
 11462  005BFC  0EFE               	movlw	-2
 11463  005BFE  006F FF8C  F03D    	movff	plusw1,btemp
 11464  005C04  0EFF               	movlw	-1
 11465  005C06  006F FF8C  F03E    	movff	plusw1,btemp+1
 11466  005C0C                     l2606:
 11467                           
 11468                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 11469  005C0C  52E5               	movf	postdec1,f,c
 11470  005C0E  52E5               	movf	postdec1,f,c
 11471  005C10  0012               	return		;funcret
 11472  005C12                     __end_of_abs:
 11473                           	opt callstack 0
 11474                           
 11475 ;; *************** function ___aomod *****************
 11476 ;; Defined at:
 11477 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aomod.c"
 11478 ;; Parameters:    Size  Location     Type
 11479 ;;  dividend        8  [STACK] long long 
 11480 ;;  divisor         8  [STACK] long long 
 11481 ;; Auto vars:     Size  Location     Type
 11482 ;;  sign            1  [STACK] unsigned char 
 11483 ;;  counter         1  [STACK] unsigned char 
 11484 ;; Return value:  Size  Location     Type
 11485 ;;                  8  [STACK] long long 
 11486 ;; Registers used:
 11487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11488 ;; Tracked objects:
 11489 ;;		On entry : 0/1
 11490 ;;		On exit  : 0/0
 11491 ;;		Unchanged: 0/0
 11492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11494 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11496 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11497 ;;Total ram usage:        0 bytes
 11498 ;; Hardware stack levels used:    1
 11499 ;; Hardware stack levels required when called:    3
 11500 ;; This function calls:
 11501 ;;		Nothing
 11502 ;; This function is called by:
 11503 ;;		_dtoa
 11504 ;; This function uses a reentrant model
 11505 ;;
 11506                           
 11507                           	psect	text46
 11508  0046C8                     __ptext46:
 11509                           	opt callstack 0
 11510  0046C8                     ___aomod:
 11511                           	opt callstack 0
 11512                           
 11513                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 11514  0046C8  52E6               	movf	postinc1,f,c
 11515  0046CA  52E6               	movf	postinc1,f,c
 11516                           
 11517                           ;stkvar	_sign @ sp[(-2)+0]
 11518                           
 11519                           ;incstack = 0
 11520  0046CC  0EFE               	movlw	-2
 11521  0046CE  6AE3               	clrf	plusw1,c
 11522                           
 11523                           ;stkvar	_dividend @ sp[(-2)+-8]
 11524  0046D0  0EFD               	movlw	-3
 11525  0046D2  AEE3               	btfss	plusw1,7,c
 11526  0046D4  D028               	goto	l5423
 11527                           
 11528                           ;stkvar	_dividend @ sp[(-2)+-8]
 11529                           ;stkvar	_dividend @ sp[(-2)+-8]
 11530  0046D6  0EF6               	movlw	-10
 11531  0046D8  6CE3               	negf	plusw1,c
 11532  0046DA  0EF7               	movlw	-9
 11533  0046DC  1EE3               	comf	plusw1,f,c
 11534  0046DE  0EF8               	movlw	-8
 11535  0046E0  1EE3               	comf	plusw1,f,c
 11536  0046E2  0EF9               	movlw	-7
 11537  0046E4  1EE3               	comf	plusw1,f,c
 11538  0046E6  0EFA               	movlw	-6
 11539  0046E8  1EE3               	comf	plusw1,f,c
 11540  0046EA  0EFB               	movlw	-5
 11541  0046EC  1EE3               	comf	plusw1,f,c
 11542  0046EE  0EFC               	movlw	-4
 11543  0046F0  1EE3               	comf	plusw1,f,c
 11544  0046F2  0EFD               	movlw	-3
 11545  0046F4  1EE3               	comf	plusw1,f,c
 11546  0046F6  E314               	bnc	u2590
 11547  0046F8  0EF7               	movlw	-9
 11548  0046FA  2AE3               	incf	plusw1,f,c
 11549  0046FC  E311               	bnc	u2590
 11550  0046FE  0EF8               	movlw	-8
 11551  004700  2AE3               	incf	plusw1,f,c
 11552  004702  E30E               	bnc	u2590
 11553  004704  0EF9               	movlw	-7
 11554  004706  2AE3               	incf	plusw1,f,c
 11555  004708  E30B               	bnc	u2590
 11556  00470A  0EFA               	movlw	-6
 11557  00470C  2AE3               	incf	plusw1,f,c
 11558  00470E  E308               	bnc	u2590
 11559  004710  0EFB               	movlw	-5
 11560  004712  2AE3               	incf	plusw1,f,c
 11561  004714  E305               	bnc	u2590
 11562  004716  0EFC               	movlw	-4
 11563  004718  2AE3               	incf	plusw1,f,c
 11564  00471A  E302               	bnc	u2590
 11565  00471C  0EFD               	movlw	-3
 11566  00471E  2AE3               	incf	plusw1,f,c
 11567  004720                     u2590:
 11568                           
 11569                           ;stkvar	_sign @ sp[(-2)+0]
 11570  004720  0EFE               	movlw	-2
 11571  004722  6AE3               	clrf	plusw1,c
 11572  004724  2AE3               	incf	plusw1,f,c
 11573  004726                     l5423:
 11574                           
 11575                           ;stkvar	_divisor @ sp[(-2)+-16]
 11576  004726  0EF5               	movlw	-11
 11577  004728  AEE3               	btfss	plusw1,7,c
 11578  00472A  D025               	goto	u2610
 11579                           
 11580                           ;stkvar	_divisor @ sp[(-2)+-16]
 11581                           ;stkvar	_divisor @ sp[(-2)+-16]
 11582  00472C  0EEE               	movlw	-18
 11583  00472E  6CE3               	negf	plusw1,c
 11584  004730  0EEF               	movlw	-17
 11585  004732  1EE3               	comf	plusw1,f,c
 11586  004734  0EF0               	movlw	-16
 11587  004736  1EE3               	comf	plusw1,f,c
 11588  004738  0EF1               	movlw	-15
 11589  00473A  1EE3               	comf	plusw1,f,c
 11590  00473C  0EF2               	movlw	-14
 11591  00473E  1EE3               	comf	plusw1,f,c
 11592  004740  0EF3               	movlw	-13
 11593  004742  1EE3               	comf	plusw1,f,c
 11594  004744  0EF4               	movlw	-12
 11595  004746  1EE3               	comf	plusw1,f,c
 11596  004748  0EF5               	movlw	-11
 11597  00474A  1EE3               	comf	plusw1,f,c
 11598  00474C  E314               	bnc	u2610
 11599  00474E  0EEF               	movlw	-17
 11600  004750  2AE3               	incf	plusw1,f,c
 11601  004752  E311               	bnc	u2610
 11602  004754  0EF0               	movlw	-16
 11603  004756  2AE3               	incf	plusw1,f,c
 11604  004758  E30E               	bnc	u2610
 11605  00475A  0EF1               	movlw	-15
 11606  00475C  2AE3               	incf	plusw1,f,c
 11607  00475E  E30B               	bnc	u2610
 11608  004760  0EF2               	movlw	-14
 11609  004762  2AE3               	incf	plusw1,f,c
 11610  004764  E308               	bnc	u2610
 11611  004766  0EF3               	movlw	-13
 11612  004768  2AE3               	incf	plusw1,f,c
 11613  00476A  E305               	bnc	u2610
 11614  00476C  0EF4               	movlw	-12
 11615  00476E  2AE3               	incf	plusw1,f,c
 11616  004770  E302               	bnc	u2610
 11617  004772  0EF5               	movlw	-11
 11618  004774  2AE3               	incf	plusw1,f,c
 11619  004776                     u2610:
 11620                           
 11621                           ;stkvar	_divisor @ sp[(-2)+-16]
 11622  004776  0EEE               	movlw	-18
 11623  004778  50E3               	movf	plusw1,w,c
 11624  00477A  E116               	bnz	u2620
 11625  00477C  0EEF               	movlw	-17
 11626  00477E  50E3               	movf	plusw1,w,c
 11627  004780  E113               	bnz	u2620
 11628  004782  0EF0               	movlw	-16
 11629  004784  50E3               	movf	plusw1,w,c
 11630  004786  E110               	bnz	u2620
 11631  004788  0EF1               	movlw	-15
 11632  00478A  50E3               	movf	plusw1,w,c
 11633  00478C  E10D               	bnz	u2620
 11634  00478E  0EF2               	movlw	-14
 11635  004790  50E3               	movf	plusw1,w,c
 11636  004792  E10A               	bnz	u2620
 11637  004794  0EF3               	movlw	-13
 11638  004796  50E3               	movf	plusw1,w,c
 11639  004798  E107               	bnz	u2620
 11640  00479A  0EF4               	movlw	-12
 11641  00479C  50E3               	movf	plusw1,w,c
 11642  00479E  E104               	bnz	u2620
 11643  0047A0  0EF5               	movlw	-11
 11644  0047A2  50E3               	movf	plusw1,w,c
 11645  0047A4  B4D8               	btfsc	status,2,c
 11646  0047A6  D075               	goto	u2650
 11647  0047A8                     u2620:
 11648                           
 11649                           ;stkvar	_counter @ sp[(-2)+1]
 11650  0047A8  0EFF               	movlw	-1
 11651  0047AA  6AE3               	clrf	plusw1,c
 11652  0047AC  D012               	goto	L29
 11653  0047AE                     l5431:
 11654                           
 11655                           ;stkvar	_divisor @ sp[(-2)+-16]
 11656  0047AE  90D8               	bcf	status,0,c
 11657  0047B0  0EEE               	movlw	-18
 11658  0047B2  36E3               	rlcf	plusw1,f,c
 11659  0047B4  0EEF               	movlw	-17
 11660  0047B6  36E3               	rlcf	plusw1,f,c
 11661  0047B8  0EF0               	movlw	-16
 11662  0047BA  36E3               	rlcf	plusw1,f,c
 11663  0047BC  0EF1               	movlw	-15
 11664  0047BE  36E3               	rlcf	plusw1,f,c
 11665  0047C0  0EF2               	movlw	-14
 11666  0047C2  36E3               	rlcf	plusw1,f,c
 11667  0047C4  0EF3               	movlw	-13
 11668  0047C6  36E3               	rlcf	plusw1,f,c
 11669  0047C8  0EF4               	movlw	-12
 11670  0047CA  36E3               	rlcf	plusw1,f,c
 11671  0047CC  0EF5               	movlw	-11
 11672  0047CE  36E3               	rlcf	plusw1,f,c
 11673                           
 11674                           ;stkvar	_counter @ sp[(-2)+1]
 11675  0047D0  0EFF               	movlw	-1
 11676  0047D2                     L29:
 11677  0047D2  2AE3               	incf	plusw1,f,c
 11678                           
 11679                           ;stkvar	_divisor @ sp[(-2)+-16]
 11680  0047D4  0EF5               	movlw	-11
 11681  0047D6  AEE3               	btfss	plusw1,7,c
 11682  0047D8  D7EA               	goto	l5431
 11683  0047DA                     u2630:
 11684                           
 11685                           ;stkvar	_divisor @ sp[(-2)+-16]
 11686                           ;stkvar	_dividend @ sp[(-2)+-8]
 11687  0047DA  50E1               	movf	fsr1l,w,c
 11688  0047DC  0FF6               	addlw	-10
 11689  0047DE  6ED9               	movwf	fsr2l,c
 11690  0047E0  50E2               	movf	fsr1h,w,c
 11691  0047E2  6EDA               	movwf	fsr2h,c
 11692  0047E4  0EFF               	movlw	255
 11693  0047E6  22DA               	addwfc	fsr2h,f,c
 11694  0047E8  0EEE               	movlw	-18
 11695  0047EA  50E3               	movf	plusw1,w,c
 11696  0047EC  5CDE               	subwf	postinc2,w,c
 11697  0047EE  0EEF               	movlw	-17
 11698  0047F0  50E3               	movf	plusw1,w,c
 11699  0047F2  58DE               	subwfb	postinc2,w,c
 11700  0047F4  0EF0               	movlw	-16
 11701  0047F6  50E3               	movf	plusw1,w,c
 11702  0047F8  58DE               	subwfb	postinc2,w,c
 11703  0047FA  0EF1               	movlw	-15
 11704  0047FC  50E3               	movf	plusw1,w,c
 11705  0047FE  58DE               	subwfb	postinc2,w,c
 11706  004800  0EF2               	movlw	-14
 11707  004802  50E3               	movf	plusw1,w,c
 11708  004804  58DE               	subwfb	postinc2,w,c
 11709  004806  0EF3               	movlw	-13
 11710  004808  50E3               	movf	plusw1,w,c
 11711  00480A  58DE               	subwfb	postinc2,w,c
 11712  00480C  0EF4               	movlw	-12
 11713  00480E  50E3               	movf	plusw1,w,c
 11714  004810  58DE               	subwfb	postinc2,w,c
 11715  004812  0EF5               	movlw	-11
 11716  004814  50E3               	movf	plusw1,w,c
 11717  004816  58DE               	subwfb	postinc2,w,c
 11718  004818  A0D8               	btfss	status,0,c
 11719  00481A  D01F               	goto	l5439
 11720                           
 11721                           ;stkvar	_divisor @ sp[(-2)+-16]
 11722                           ;stkvar	_dividend @ sp[(-2)+-8]
 11723  00481C  50E1               	movf	fsr1l,w,c
 11724  00481E  0FF6               	addlw	-10
 11725  004820  6ED9               	movwf	fsr2l,c
 11726  004822  50E2               	movf	fsr1h,w,c
 11727  004824  6EDA               	movwf	fsr2h,c
 11728  004826  0EFF               	movlw	255
 11729  004828  22DA               	addwfc	fsr2h,f,c
 11730  00482A  0EEE               	movlw	-18
 11731  00482C  50E3               	movf	plusw1,w,c
 11732  00482E  5EDE               	subwf	postinc2,f,c
 11733  004830  0EEF               	movlw	-17
 11734  004832  50E3               	movf	plusw1,w,c
 11735  004834  5ADE               	subwfb	postinc2,f,c
 11736  004836  0EF0               	movlw	-16
 11737  004838  50E3               	movf	plusw1,w,c
 11738  00483A  5ADE               	subwfb	postinc2,f,c
 11739  00483C  0EF1               	movlw	-15
 11740  00483E  50E3               	movf	plusw1,w,c
 11741  004840  5ADE               	subwfb	postinc2,f,c
 11742  004842  0EF2               	movlw	-14
 11743  004844  50E3               	movf	plusw1,w,c
 11744  004846  5ADE               	subwfb	postinc2,f,c
 11745  004848  0EF3               	movlw	-13
 11746  00484A  50E3               	movf	plusw1,w,c
 11747  00484C  5ADE               	subwfb	postinc2,f,c
 11748  00484E  0EF4               	movlw	-12
 11749  004850  50E3               	movf	plusw1,w,c
 11750  004852  5ADE               	subwfb	postinc2,f,c
 11751  004854  0EF5               	movlw	-11
 11752  004856  50E3               	movf	plusw1,w,c
 11753  004858  5ADE               	subwfb	postinc2,f,c
 11754  00485A                     l5439:
 11755                           
 11756                           ;stkvar	_divisor @ sp[(-2)+-16]
 11757  00485A  90D8               	bcf	status,0,c
 11758  00485C  0EF5               	movlw	-11
 11759  00485E  32E3               	rrcf	plusw1,f,c
 11760  004860  0EF4               	movlw	-12
 11761  004862  32E3               	rrcf	plusw1,f,c
 11762  004864  0EF3               	movlw	-13
 11763  004866  32E3               	rrcf	plusw1,f,c
 11764  004868  0EF2               	movlw	-14
 11765  00486A  32E3               	rrcf	plusw1,f,c
 11766  00486C  0EF1               	movlw	-15
 11767  00486E  32E3               	rrcf	plusw1,f,c
 11768  004870  0EF0               	movlw	-16
 11769  004872  32E3               	rrcf	plusw1,f,c
 11770  004874  0EEF               	movlw	-17
 11771  004876  32E3               	rrcf	plusw1,f,c
 11772  004878  0EEE               	movlw	-18
 11773  00487A  32E3               	rrcf	plusw1,f,c
 11774                           
 11775                           ;stkvar	_counter @ sp[(-2)+1]
 11776  00487C  0EFF               	movlw	-1
 11777  00487E  50E3               	movf	plusw1,w,c
 11778  004880  6E3D               	movwf	btemp,c
 11779  004882  0E01               	movlw	1
 11780  004884  5E3D               	subwf	btemp,f,c
 11781  004886  0EFF               	movlw	-1
 11782  004888  0060  F0F7  FFE3   	movff	btemp,plusw1
 11783  00488E  A4D8               	btfss	status,2,c
 11784  004890  D7A4               	goto	u2630
 11785  004892                     u2650:
 11786                           
 11787                           ;stkvar	_sign @ sp[(-2)+0]
 11788  004892  0EFE               	movlw	-2
 11789  004894  50E3               	movf	plusw1,w,c
 11790  004896  B4D8               	btfsc	status,2,c
 11791  004898  D025               	goto	u2670
 11792                           
 11793                           ;stkvar	_dividend @ sp[(-2)+-8]
 11794                           ;stkvar	_dividend @ sp[(-2)+-8]
 11795  00489A  0EF6               	movlw	-10
 11796  00489C  6CE3               	negf	plusw1,c
 11797  00489E  0EF7               	movlw	-9
 11798  0048A0  1EE3               	comf	plusw1,f,c
 11799  0048A2  0EF8               	movlw	-8
 11800  0048A4  1EE3               	comf	plusw1,f,c
 11801  0048A6  0EF9               	movlw	-7
 11802  0048A8  1EE3               	comf	plusw1,f,c
 11803  0048AA  0EFA               	movlw	-6
 11804  0048AC  1EE3               	comf	plusw1,f,c
 11805  0048AE  0EFB               	movlw	-5
 11806  0048B0  1EE3               	comf	plusw1,f,c
 11807  0048B2  0EFC               	movlw	-4
 11808  0048B4  1EE3               	comf	plusw1,f,c
 11809  0048B6  0EFD               	movlw	-3
 11810  0048B8  1EE3               	comf	plusw1,f,c
 11811  0048BA  E314               	bnc	u2670
 11812  0048BC  0EF7               	movlw	-9
 11813  0048BE  2AE3               	incf	plusw1,f,c
 11814  0048C0  E311               	bnc	u2670
 11815  0048C2  0EF8               	movlw	-8
 11816  0048C4  2AE3               	incf	plusw1,f,c
 11817  0048C6  E30E               	bnc	u2670
 11818  0048C8  0EF9               	movlw	-7
 11819  0048CA  2AE3               	incf	plusw1,f,c
 11820  0048CC  E30B               	bnc	u2670
 11821  0048CE  0EFA               	movlw	-6
 11822  0048D0  2AE3               	incf	plusw1,f,c
 11823  0048D2  E308               	bnc	u2670
 11824  0048D4  0EFB               	movlw	-5
 11825  0048D6  2AE3               	incf	plusw1,f,c
 11826  0048D8  E305               	bnc	u2670
 11827  0048DA  0EFC               	movlw	-4
 11828  0048DC  2AE3               	incf	plusw1,f,c
 11829  0048DE  E302               	bnc	u2670
 11830  0048E0  0EFD               	movlw	-3
 11831  0048E2  2AE3               	incf	plusw1,f,c
 11832  0048E4                     u2670:
 11833                           
 11834                           ;stkvar	_dividend @ sp[(-2)+-8]
 11835  0048E4  0EF6               	movlw	246
 11836  0048E6  24E1               	addwf	fsr1l,w,c
 11837  0048E8  6ED9               	movwf	fsr2l,c
 11838  0048EA  0EFF               	movlw	255
 11839  0048EC  20E2               	addwfc	fsr1h,w,c
 11840  0048EE  6EDA               	movwf	fsr2h,c
 11841                           
 11842                           ;stkvar	?___aomod @ sp[(-2)+-8]
 11843  0048F0  0E08               	movlw	8
 11844  0048F2  6E3D               	movwf	btemp,c
 11845  0048F4  0EF6               	movlw	-10
 11846  0048F6                     us268999:
 11847  0048F6  006F FF7B FFE3     	movff	postinc2,plusw1
 11848  0048FC  28E8               	incf	wreg,w,c
 11849  0048FE  2E3D               	decfsz	btemp,f,c
 11850  004900  D7FA               	bra	us268999
 11851                           
 11852                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 11853  004902  52E5               	movf	postdec1,f,c
 11854  004904  52E5               	movf	postdec1,f,c
 11855  004906  0012               	return		;funcret
 11856  004908                     __end_of___aomod:
 11857                           	opt callstack 0
 11858                           
 11859 ;; *************** function ___aodiv *****************
 11860 ;; Defined at:
 11861 ;;		line 9 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/aodiv.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  dividend        8  [STACK] long long 
 11864 ;;  divisor         8  [STACK] long long 
 11865 ;; Auto vars:     Size  Location     Type
 11866 ;;  quotient        8  [STACK] long long 
 11867 ;;  sign            1  [STACK] unsigned char 
 11868 ;;  counter         1  [STACK] unsigned char 
 11869 ;; Return value:  Size  Location     Type
 11870 ;;                  8  [STACK] long long 
 11871 ;; Registers used:
 11872 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 11873 ;; Tracked objects:
 11874 ;;		On entry : 0/1
 11875 ;;		On exit  : 0/0
 11876 ;;		Unchanged: 0/0
 11877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11882 ;;Total ram usage:        0 bytes
 11883 ;; Hardware stack levels used:    1
 11884 ;; Hardware stack levels required when called:    3
 11885 ;; This function calls:
 11886 ;;		Nothing
 11887 ;; This function is called by:
 11888 ;;		_dtoa
 11889 ;; This function uses a reentrant model
 11890 ;;
 11891                           
 11892                           	psect	text47
 11893  003D1C                     __ptext47:
 11894                           	opt callstack 0
 11895  003D1C                     ___aodiv:
 11896                           	opt callstack 0
 11897                           
 11898                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 11899  003D1C  0E0A               	movlw	10
 11900  003D1E  26E1               	addwf	fsr1l,f,c
 11901  003D20  0E00               	movlw	0
 11902  003D22  22E2               	addwfc	fsr1h,f,c
 11903                           
 11904                           ;stkvar	_sign @ sp[(-10)+8]
 11905                           
 11906                           ;incstack = 0
 11907  003D24  0EFE               	movlw	-2
 11908  003D26  6AE3               	clrf	plusw1,c
 11909                           
 11910                           ;stkvar	_divisor @ sp[(-10)+-16]
 11911  003D28  0EED               	movlw	-19
 11912  003D2A  AEE3               	btfss	plusw1,7,c
 11913  003D2C  D028               	goto	l5379
 11914                           
 11915                           ;stkvar	_divisor @ sp[(-10)+-16]
 11916                           ;stkvar	_divisor @ sp[(-10)+-16]
 11917  003D2E  0EE6               	movlw	-26
 11918  003D30  6CE3               	negf	plusw1,c
 11919  003D32  0EE7               	movlw	-25
 11920  003D34  1EE3               	comf	plusw1,f,c
 11921  003D36  0EE8               	movlw	-24
 11922  003D38  1EE3               	comf	plusw1,f,c
 11923  003D3A  0EE9               	movlw	-23
 11924  003D3C  1EE3               	comf	plusw1,f,c
 11925  003D3E  0EEA               	movlw	-22
 11926  003D40  1EE3               	comf	plusw1,f,c
 11927  003D42  0EEB               	movlw	-21
 11928  003D44  1EE3               	comf	plusw1,f,c
 11929  003D46  0EEC               	movlw	-20
 11930  003D48  1EE3               	comf	plusw1,f,c
 11931  003D4A  0EED               	movlw	-19
 11932  003D4C  1EE3               	comf	plusw1,f,c
 11933  003D4E  E314               	bnc	u2470
 11934  003D50  0EE7               	movlw	-25
 11935  003D52  2AE3               	incf	plusw1,f,c
 11936  003D54  E311               	bnc	u2470
 11937  003D56  0EE8               	movlw	-24
 11938  003D58  2AE3               	incf	plusw1,f,c
 11939  003D5A  E30E               	bnc	u2470
 11940  003D5C  0EE9               	movlw	-23
 11941  003D5E  2AE3               	incf	plusw1,f,c
 11942  003D60  E30B               	bnc	u2470
 11943  003D62  0EEA               	movlw	-22
 11944  003D64  2AE3               	incf	plusw1,f,c
 11945  003D66  E308               	bnc	u2470
 11946  003D68  0EEB               	movlw	-21
 11947  003D6A  2AE3               	incf	plusw1,f,c
 11948  003D6C  E305               	bnc	u2470
 11949  003D6E  0EEC               	movlw	-20
 11950  003D70  2AE3               	incf	plusw1,f,c
 11951  003D72  E302               	bnc	u2470
 11952  003D74  0EED               	movlw	-19
 11953  003D76  2AE3               	incf	plusw1,f,c
 11954  003D78                     u2470:
 11955                           
 11956                           ;stkvar	_sign @ sp[(-10)+8]
 11957  003D78  0EFE               	movlw	-2
 11958  003D7A  6AE3               	clrf	plusw1,c
 11959  003D7C  2AE3               	incf	plusw1,f,c
 11960  003D7E                     l5379:
 11961                           
 11962                           ;stkvar	_dividend @ sp[(-10)+-8]
 11963  003D7E  0EF5               	movlw	-11
 11964  003D80  AEE3               	btfss	plusw1,7,c
 11965  003D82  D027               	goto	l5385
 11966                           
 11967                           ;stkvar	_dividend @ sp[(-10)+-8]
 11968                           ;stkvar	_dividend @ sp[(-10)+-8]
 11969  003D84  0EEE               	movlw	-18
 11970  003D86  6CE3               	negf	plusw1,c
 11971  003D88  0EEF               	movlw	-17
 11972  003D8A  1EE3               	comf	plusw1,f,c
 11973  003D8C  0EF0               	movlw	-16
 11974  003D8E  1EE3               	comf	plusw1,f,c
 11975  003D90  0EF1               	movlw	-15
 11976  003D92  1EE3               	comf	plusw1,f,c
 11977  003D94  0EF2               	movlw	-14
 11978  003D96  1EE3               	comf	plusw1,f,c
 11979  003D98  0EF3               	movlw	-13
 11980  003D9A  1EE3               	comf	plusw1,f,c
 11981  003D9C  0EF4               	movlw	-12
 11982  003D9E  1EE3               	comf	plusw1,f,c
 11983  003DA0  0EF5               	movlw	-11
 11984  003DA2  1EE3               	comf	plusw1,f,c
 11985  003DA4  E314               	bnc	u2490
 11986  003DA6  0EEF               	movlw	-17
 11987  003DA8  2AE3               	incf	plusw1,f,c
 11988  003DAA  E311               	bnc	u2490
 11989  003DAC  0EF0               	movlw	-16
 11990  003DAE  2AE3               	incf	plusw1,f,c
 11991  003DB0  E30E               	bnc	u2490
 11992  003DB2  0EF1               	movlw	-15
 11993  003DB4  2AE3               	incf	plusw1,f,c
 11994  003DB6  E30B               	bnc	u2490
 11995  003DB8  0EF2               	movlw	-14
 11996  003DBA  2AE3               	incf	plusw1,f,c
 11997  003DBC  E308               	bnc	u2490
 11998  003DBE  0EF3               	movlw	-13
 11999  003DC0  2AE3               	incf	plusw1,f,c
 12000  003DC2  E305               	bnc	u2490
 12001  003DC4  0EF4               	movlw	-12
 12002  003DC6  2AE3               	incf	plusw1,f,c
 12003  003DC8  E302               	bnc	u2490
 12004  003DCA  0EF5               	movlw	-11
 12005  003DCC  2AE3               	incf	plusw1,f,c
 12006  003DCE                     u2490:
 12007                           
 12008                           ;stkvar	_sign @ sp[(-10)+8]
 12009  003DCE  0EFE               	movlw	-2
 12010  003DD0  70E3               	btg	plusw1,0,c
 12011  003DD2                     l5385:
 12012                           
 12013                           ;stkvar	_quotient @ sp[(-10)+0]
 12014  003DD2  0E07               	movlw	7
 12015  003DD4  6E3D               	movwf	btemp,c
 12016  003DD6  0EF6               	movlw	-10
 12017  003DD8                     u2501:
 12018  003DD8  6AE3               	clrf	plusw1,c
 12019  003DDA  2AE8               	incf	wreg,f,c
 12020  003DDC  063D               	decf	btemp,f,c
 12021  003DDE  E2FC               	bc	u2501
 12022                           
 12023                           ;stkvar	_divisor @ sp[(-10)+-16]
 12024  003DE0  0EE6               	movlw	-26
 12025  003DE2  50E3               	movf	plusw1,w,c
 12026  003DE4  E116               	bnz	u2510
 12027  003DE6  0EE7               	movlw	-25
 12028  003DE8  50E3               	movf	plusw1,w,c
 12029  003DEA  E113               	bnz	u2510
 12030  003DEC  0EE8               	movlw	-24
 12031  003DEE  50E3               	movf	plusw1,w,c
 12032  003DF0  E110               	bnz	u2510
 12033  003DF2  0EE9               	movlw	-23
 12034  003DF4  50E3               	movf	plusw1,w,c
 12035  003DF6  E10D               	bnz	u2510
 12036  003DF8  0EEA               	movlw	-22
 12037  003DFA  50E3               	movf	plusw1,w,c
 12038  003DFC  E10A               	bnz	u2510
 12039  003DFE  0EEB               	movlw	-21
 12040  003E00  50E3               	movf	plusw1,w,c
 12041  003E02  E107               	bnz	u2510
 12042  003E04  0EEC               	movlw	-20
 12043  003E06  50E3               	movf	plusw1,w,c
 12044  003E08  E104               	bnz	u2510
 12045  003E0A  0EED               	movlw	-19
 12046  003E0C  50E3               	movf	plusw1,w,c
 12047  003E0E  B4D8               	btfsc	status,2,c
 12048  003E10  D088               	goto	u2540
 12049  003E12                     u2510:
 12050                           
 12051                           ;stkvar	_counter @ sp[(-10)+9]
 12052  003E12  0EFF               	movlw	-1
 12053  003E14  6AE3               	clrf	plusw1,c
 12054  003E16  D012               	goto	L30
 12055  003E18                     l5391:
 12056                           
 12057                           ;stkvar	_divisor @ sp[(-10)+-16]
 12058  003E18  90D8               	bcf	status,0,c
 12059  003E1A  0EE6               	movlw	-26
 12060  003E1C  36E3               	rlcf	plusw1,f,c
 12061  003E1E  0EE7               	movlw	-25
 12062  003E20  36E3               	rlcf	plusw1,f,c
 12063  003E22  0EE8               	movlw	-24
 12064  003E24  36E3               	rlcf	plusw1,f,c
 12065  003E26  0EE9               	movlw	-23
 12066  003E28  36E3               	rlcf	plusw1,f,c
 12067  003E2A  0EEA               	movlw	-22
 12068  003E2C  36E3               	rlcf	plusw1,f,c
 12069  003E2E  0EEB               	movlw	-21
 12070  003E30  36E3               	rlcf	plusw1,f,c
 12071  003E32  0EEC               	movlw	-20
 12072  003E34  36E3               	rlcf	plusw1,f,c
 12073  003E36  0EED               	movlw	-19
 12074  003E38  36E3               	rlcf	plusw1,f,c
 12075                           
 12076                           ;stkvar	_counter @ sp[(-10)+9]
 12077  003E3A  0EFF               	movlw	-1
 12078  003E3C                     L30:
 12079  003E3C  2AE3               	incf	plusw1,f,c
 12080                           
 12081                           ;stkvar	_divisor @ sp[(-10)+-16]
 12082  003E3E  0EED               	movlw	-19
 12083  003E40  AEE3               	btfss	plusw1,7,c
 12084  003E42  D7EA               	goto	l5391
 12085  003E44                     u2520:
 12086                           
 12087                           ;stkvar	_quotient @ sp[(-10)+0]
 12088  003E44  90D8               	bcf	status,0,c
 12089  003E46  0EF6               	movlw	-10
 12090  003E48  36E3               	rlcf	plusw1,f,c
 12091  003E4A  0EF7               	movlw	-9
 12092  003E4C  36E3               	rlcf	plusw1,f,c
 12093  003E4E  0EF8               	movlw	-8
 12094  003E50  36E3               	rlcf	plusw1,f,c
 12095  003E52  0EF9               	movlw	-7
 12096  003E54  36E3               	rlcf	plusw1,f,c
 12097  003E56  0EFA               	movlw	-6
 12098  003E58  36E3               	rlcf	plusw1,f,c
 12099  003E5A  0EFB               	movlw	-5
 12100  003E5C  36E3               	rlcf	plusw1,f,c
 12101  003E5E  0EFC               	movlw	-4
 12102  003E60  36E3               	rlcf	plusw1,f,c
 12103  003E62  0EFD               	movlw	-3
 12104  003E64  36E3               	rlcf	plusw1,f,c
 12105                           
 12106                           ;stkvar	_divisor @ sp[(-10)+-16]
 12107                           ;stkvar	_dividend @ sp[(-10)+-8]
 12108  003E66  50E1               	movf	fsr1l,w,c
 12109  003E68  0FEE               	addlw	-18
 12110  003E6A  6ED9               	movwf	fsr2l,c
 12111  003E6C  50E2               	movf	fsr1h,w,c
 12112  003E6E  6EDA               	movwf	fsr2h,c
 12113  003E70  0EFF               	movlw	255
 12114  003E72  22DA               	addwfc	fsr2h,f,c
 12115  003E74  0EE6               	movlw	-26
 12116  003E76  50E3               	movf	plusw1,w,c
 12117  003E78  5CDE               	subwf	postinc2,w,c
 12118  003E7A  0EE7               	movlw	-25
 12119  003E7C  50E3               	movf	plusw1,w,c
 12120  003E7E  58DE               	subwfb	postinc2,w,c
 12121  003E80  0EE8               	movlw	-24
 12122  003E82  50E3               	movf	plusw1,w,c
 12123  003E84  58DE               	subwfb	postinc2,w,c
 12124  003E86  0EE9               	movlw	-23
 12125  003E88  50E3               	movf	plusw1,w,c
 12126  003E8A  58DE               	subwfb	postinc2,w,c
 12127  003E8C  0EEA               	movlw	-22
 12128  003E8E  50E3               	movf	plusw1,w,c
 12129  003E90  58DE               	subwfb	postinc2,w,c
 12130  003E92  0EEB               	movlw	-21
 12131  003E94  50E3               	movf	plusw1,w,c
 12132  003E96  58DE               	subwfb	postinc2,w,c
 12133  003E98  0EEC               	movlw	-20
 12134  003E9A  50E3               	movf	plusw1,w,c
 12135  003E9C  58DE               	subwfb	postinc2,w,c
 12136  003E9E  0EED               	movlw	-19
 12137  003EA0  50E3               	movf	plusw1,w,c
 12138  003EA2  58DE               	subwfb	postinc2,w,c
 12139  003EA4  A0D8               	btfss	status,0,c
 12140  003EA6  D021               	goto	l5403
 12141                           
 12142                           ;stkvar	_divisor @ sp[(-10)+-16]
 12143                           ;stkvar	_dividend @ sp[(-10)+-8]
 12144  003EA8  50E1               	movf	fsr1l,w,c
 12145  003EAA  0FEE               	addlw	-18
 12146  003EAC  6ED9               	movwf	fsr2l,c
 12147  003EAE  50E2               	movf	fsr1h,w,c
 12148  003EB0  6EDA               	movwf	fsr2h,c
 12149  003EB2  0EFF               	movlw	255
 12150  003EB4  22DA               	addwfc	fsr2h,f,c
 12151  003EB6  0EE6               	movlw	-26
 12152  003EB8  50E3               	movf	plusw1,w,c
 12153  003EBA  5EDE               	subwf	postinc2,f,c
 12154  003EBC  0EE7               	movlw	-25
 12155  003EBE  50E3               	movf	plusw1,w,c
 12156  003EC0  5ADE               	subwfb	postinc2,f,c
 12157  003EC2  0EE8               	movlw	-24
 12158  003EC4  50E3               	movf	plusw1,w,c
 12159  003EC6  5ADE               	subwfb	postinc2,f,c
 12160  003EC8  0EE9               	movlw	-23
 12161  003ECA  50E3               	movf	plusw1,w,c
 12162  003ECC  5ADE               	subwfb	postinc2,f,c
 12163  003ECE  0EEA               	movlw	-22
 12164  003ED0  50E3               	movf	plusw1,w,c
 12165  003ED2  5ADE               	subwfb	postinc2,f,c
 12166  003ED4  0EEB               	movlw	-21
 12167  003ED6  50E3               	movf	plusw1,w,c
 12168  003ED8  5ADE               	subwfb	postinc2,f,c
 12169  003EDA  0EEC               	movlw	-20
 12170  003EDC  50E3               	movf	plusw1,w,c
 12171  003EDE  5ADE               	subwfb	postinc2,f,c
 12172  003EE0  0EED               	movlw	-19
 12173  003EE2  50E3               	movf	plusw1,w,c
 12174  003EE4  5ADE               	subwfb	postinc2,f,c
 12175                           
 12176                           ;stkvar	_quotient @ sp[(-10)+0]
 12177  003EE6  0EF6               	movlw	-10
 12178  003EE8  80E3               	bsf	plusw1,0,c
 12179  003EEA                     l5403:
 12180                           
 12181                           ;stkvar	_divisor @ sp[(-10)+-16]
 12182  003EEA  90D8               	bcf	status,0,c
 12183  003EEC  0EED               	movlw	-19
 12184  003EEE  32E3               	rrcf	plusw1,f,c
 12185  003EF0  0EEC               	movlw	-20
 12186  003EF2  32E3               	rrcf	plusw1,f,c
 12187  003EF4  0EEB               	movlw	-21
 12188  003EF6  32E3               	rrcf	plusw1,f,c
 12189  003EF8  0EEA               	movlw	-22
 12190  003EFA  32E3               	rrcf	plusw1,f,c
 12191  003EFC  0EE9               	movlw	-23
 12192  003EFE  32E3               	rrcf	plusw1,f,c
 12193  003F00  0EE8               	movlw	-24
 12194  003F02  32E3               	rrcf	plusw1,f,c
 12195  003F04  0EE7               	movlw	-25
 12196  003F06  32E3               	rrcf	plusw1,f,c
 12197  003F08  0EE6               	movlw	-26
 12198  003F0A  32E3               	rrcf	plusw1,f,c
 12199                           
 12200                           ;stkvar	_counter @ sp[(-10)+9]
 12201  003F0C  0EFF               	movlw	-1
 12202  003F0E  50E3               	movf	plusw1,w,c
 12203  003F10  6E3D               	movwf	btemp,c
 12204  003F12  0E01               	movlw	1
 12205  003F14  5E3D               	subwf	btemp,f,c
 12206  003F16  0EFF               	movlw	-1
 12207  003F18  0060  F0F7  FFE3   	movff	btemp,plusw1
 12208  003F1E  A4D8               	btfss	status,2,c
 12209  003F20  D791               	goto	u2520
 12210  003F22                     u2540:
 12211                           
 12212                           ;stkvar	_sign @ sp[(-10)+8]
 12213  003F22  0EFE               	movlw	-2
 12214  003F24  50E3               	movf	plusw1,w,c
 12215  003F26  B4D8               	btfsc	status,2,c
 12216  003F28  D025               	goto	u2560
 12217                           
 12218                           ;stkvar	_quotient @ sp[(-10)+0]
 12219                           ;stkvar	_quotient @ sp[(-10)+0]
 12220  003F2A  0EF6               	movlw	-10
 12221  003F2C  6CE3               	negf	plusw1,c
 12222  003F2E  0EF7               	movlw	-9
 12223  003F30  1EE3               	comf	plusw1,f,c
 12224  003F32  0EF8               	movlw	-8
 12225  003F34  1EE3               	comf	plusw1,f,c
 12226  003F36  0EF9               	movlw	-7
 12227  003F38  1EE3               	comf	plusw1,f,c
 12228  003F3A  0EFA               	movlw	-6
 12229  003F3C  1EE3               	comf	plusw1,f,c
 12230  003F3E  0EFB               	movlw	-5
 12231  003F40  1EE3               	comf	plusw1,f,c
 12232  003F42  0EFC               	movlw	-4
 12233  003F44  1EE3               	comf	plusw1,f,c
 12234  003F46  0EFD               	movlw	-3
 12235  003F48  1EE3               	comf	plusw1,f,c
 12236  003F4A  E314               	bnc	u2560
 12237  003F4C  0EF7               	movlw	-9
 12238  003F4E  2AE3               	incf	plusw1,f,c
 12239  003F50  E311               	bnc	u2560
 12240  003F52  0EF8               	movlw	-8
 12241  003F54  2AE3               	incf	plusw1,f,c
 12242  003F56  E30E               	bnc	u2560
 12243  003F58  0EF9               	movlw	-7
 12244  003F5A  2AE3               	incf	plusw1,f,c
 12245  003F5C  E30B               	bnc	u2560
 12246  003F5E  0EFA               	movlw	-6
 12247  003F60  2AE3               	incf	plusw1,f,c
 12248  003F62  E308               	bnc	u2560
 12249  003F64  0EFB               	movlw	-5
 12250  003F66  2AE3               	incf	plusw1,f,c
 12251  003F68  E305               	bnc	u2560
 12252  003F6A  0EFC               	movlw	-4
 12253  003F6C  2AE3               	incf	plusw1,f,c
 12254  003F6E  E302               	bnc	u2560
 12255  003F70  0EFD               	movlw	-3
 12256  003F72  2AE3               	incf	plusw1,f,c
 12257  003F74                     u2560:
 12258                           
 12259                           ;stkvar	_quotient @ sp[(-10)+0]
 12260  003F74  0EF6               	movlw	246
 12261  003F76  24E1               	addwf	fsr1l,w,c
 12262  003F78  6ED9               	movwf	fsr2l,c
 12263  003F7A  0EFF               	movlw	255
 12264  003F7C  20E2               	addwfc	fsr1h,w,c
 12265  003F7E  6EDA               	movwf	fsr2h,c
 12266                           
 12267                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 12268  003F80  0E08               	movlw	8
 12269  003F82  6E3D               	movwf	btemp,c
 12270  003F84  0EEE               	movlw	-18
 12271  003F86                     us257999:
 12272  003F86  006F FF7B FFE3     	movff	postinc2,plusw1
 12273  003F8C  28E8               	incf	wreg,w,c
 12274  003F8E  2E3D               	decfsz	btemp,f,c
 12275  003F90  D7FA               	bra	us257999
 12276                           
 12277                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 12278  003F92  0EF6               	movlw	246
 12279  003F94  26E1               	addwf	fsr1l,f,c
 12280  003F96  0EFF               	movlw	255
 12281  003F98  22E2               	addwfc	fsr1h,f,c
 12282  003F9A  0012               	return		;funcret
 12283  003F9C                     __end_of___aodiv:
 12284                           	opt callstack 0
 12285                           
 12286 ;; *************** function _ctoa *****************
 12287 ;; Defined at:
 12288 ;;		line 259 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12289 ;; Parameters:    Size  Location     Type
 12290 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12291 ;;		 -> f(5), NULL(0), 
 12292 ;;  c               1  [STACK] unsigned char 
 12293 ;; Auto vars:     Size  Location     Type
 12294 ;;  w               2  [STACK] int 
 12295 ;;  l               2    0        int 
 12296 ;; Return value:  Size  Location     Type
 12297 ;;                  2  [STACK] int 
 12298 ;; Registers used:
 12299 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12300 ;; Tracked objects:
 12301 ;;		On entry : 0/0
 12302 ;;		On exit  : 0/0
 12303 ;;		Unchanged: 0/0
 12304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12305 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12308 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12309 ;;Total ram usage:        0 bytes
 12310 ;; Hardware stack levels used:    1
 12311 ;; Hardware stack levels required when called:    8
 12312 ;; This function calls:
 12313 ;;		_pad
 12314 ;; This function is called by:
 12315 ;;		_vfpfcnvrt
 12316 ;; This function uses a reentrant model
 12317 ;;
 12318                           
 12319                           	psect	text48
 12320  00570E                     __ptext48:
 12321                           	opt callstack 0
 12322  00570E                     _ctoa:
 12323                           	opt callstack 0
 12324                           
 12325                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12326  00570E  52E6               	movf	postinc1,f,c
 12327  005710  52E6               	movf	postinc1,f,c
 12328                           
 12329                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.05/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.05
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 12330                           
 12331                           ;incstack = 0
 12332  005712  501D               	movf	_width,w,c
 12333  005714  101E               	iorwf	_width+1,w,c
 12334  005716  A4D8               	btfss	status,2,c
 12335  005718  D009               	goto	l8119
 12336                           
 12337                           ;stkvar	_w @ sp[(-2)+0]
 12338  00571A  0EFE               	movlw	-2
 12339  00571C  0060  F077  FFE3   	movff	_width,plusw1
 12340  005722  0EFF               	movlw	-1
 12341  005724  0060  F07B  FFE3   	movff	_width+1,plusw1
 12342  00572A  D016               	goto	l8121
 12343  00572C                     l8119:
 12344  00572C  0EFF               	movlw	255
 12345  00572E  6E47               	movwf	btemp+10,c
 12346  005730  0EFF               	movlw	255
 12347  005732  6E48               	movwf	btemp+11,c
 12348  005734  0060  F074  F045   	movff	_width,btemp+8
 12349  00573A  0060  F078  F046   	movff	_width+1,btemp+9
 12350  005740  5047               	movf	btemp+10,w,c
 12351  005742  2645               	addwf	btemp+8,f,c
 12352  005744  5048               	movf	btemp+11,w,c
 12353  005746  2246               	addwfc	btemp+9,f,c
 12354                           
 12355                           ;stkvar	_w @ sp[(-2)+0]
 12356  005748  0EFE               	movlw	-2
 12357  00574A  0060  F117  FFE3   	movff	btemp+8,plusw1
 12358  005750  0EFF               	movlw	-1
 12359  005752  0060  F11B  FFE3   	movff	btemp+9,plusw1
 12360  005758                     l8121:
 12361                           
 12362                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 12363                           ;stkvar	_c @ sp[(-2)+-3]
 12364  005758  0EFB               	movlw	-5
 12365  00575A  006F FF8C  F1CE    	movff	plusw1,_dbuf
 12366                           
 12367                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 12368  005760  0101               	movlb	1	; () banked
 12369  005762  6BCF               	clrf	(_dbuf+1)& (0+255),b
 12370                           
 12371                           ; BSR set to: 1
 12372                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 12373                           ;stkvar	_w @ sp[(-2)+0]
 12374  005764  0EFE               	movlw	-2
 12375  005766  006F FF8F FFE6     	movff	plusw1,postinc1
 12376  00576C  006F FF8F FFE6     	movff	plusw1,postinc1
 12377  005772  0ECE               	movlw	low _dbuf
 12378  005774  6EE6               	movwf	postinc1,c
 12379  005776  0E01               	movlw	high _dbuf
 12380  005778  6EE6               	movwf	postinc1,c
 12381                           
 12382                           ;stkvar	_fp @ sp[(-6)+-2]
 12383  00577A  0EF8               	movlw	-8
 12384  00577C  006F FF8F FFE6     	movff	plusw1,postinc1
 12385  005782  006F FF8F FFE6     	movff	plusw1,postinc1
 12386  005788  EC4C  F025         	call	_pad	;wreg free
 12387                           
 12388                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 12389  00578C  0EFB               	movlw	251
 12390  00578E  26E1               	addwf	fsr1l,f,c
 12391  005790  0EFF               	movlw	255
 12392  005792  22E2               	addwfc	fsr1h,f,c
 12393  005794  0012               	return		;funcret
 12394  005796                     __end_of_ctoa:
 12395                           	opt callstack 0
 12396                           
 12397 ;; *************** function _pad *****************
 12398 ;; Defined at:
 12399 ;;		line 72 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c"
 12400 ;; Parameters:    Size  Location     Type
 12401 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12402 ;;		 -> f(5), NULL(0), 
 12403 ;;  buf             2  [STACK] PTR unsigned char 
 12404 ;;		 -> dbuf(32), 
 12405 ;;  p               2  [STACK] int 
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;  w               2  [STACK] int 
 12408 ;;  i               2  [STACK] int 
 12409 ;; Return value:  Size  Location     Type
 12410 ;;                  2  [STACK] int 
 12411 ;; Registers used:
 12412 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 12413 ;; Tracked objects:
 12414 ;;		On entry : 0/1
 12415 ;;		On exit  : 0/0
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12419 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12420 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12421 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12422 ;;Total ram usage:        0 bytes
 12423 ;; Hardware stack levels used:    1
 12424 ;; Hardware stack levels required when called:    7
 12425 ;; This function calls:
 12426 ;;		_fputc
 12427 ;;		_fputs
 12428 ;;		_strlen
 12429 ;; This function is called by:
 12430 ;;		_ctoa
 12431 ;;		_dtoa
 12432 ;; This function uses a reentrant model
 12433 ;;
 12434                           
 12435                           	psect	text49
 12436  004A98                     __ptext49:
 12437                           	opt callstack 0
 12438  004A98                     _pad:
 12439                           	opt callstack 0
 12440                           
 12441                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12442  004A98  52E6               	movf	postinc1,f,c
 12443  004A9A  52E6               	movf	postinc1,f,c
 12444  004A9C  52E6               	movf	postinc1,f,c
 12445  004A9E  52E6               	movf	postinc1,f,c
 12446                           
 12447                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.05/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 12448                           
 12449                           ;incstack = 0
 12450  004AA0  A021               	btfss	_flags,0,c
 12451  004AA2  D010               	goto	l8097
 12452                           
 12453                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 12454                           ;stkvar	_fp @ sp[(-4)+-2]
 12455  004AA4  0EFA               	movlw	-6
 12456  004AA6  006F FF8F FFE6     	movff	plusw1,postinc1
 12457  004AAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12458                           
 12459                           ;stkvar	_buf @ sp[(-6)+-4]
 12460  004AB2  0EF6               	movlw	-10
 12461  004AB4  006F FF8F FFE6     	movff	plusw1,postinc1
 12462  004ABA  006F FF8F FFE6     	movff	plusw1,postinc1
 12463  004AC0  ECF2  F02A         	call	_fputs	;wreg free
 12464  004AC4                     l8097:
 12465                           
 12466                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 12467                           ;stkvar	_p @ sp[(-4)+-6]
 12468  004AC4  0EF7               	movlw	-9
 12469  004AC6  BEE3               	btfsc	plusw1,7,c
 12470  004AC8  D011               	goto	l8101
 12471                           
 12472                           ;stkvar	_p @ sp[(-4)+-6]
 12473                           ;stkvar	_w @ sp[(-4)+0]
 12474  004ACA  0EF6               	movlw	-10
 12475  004ACC  006F FF8C  F03D    	movff	plusw1,btemp
 12476  004AD2  0EFC               	movlw	-4
 12477  004AD4  0060  F0F7  FFE3   	movff	btemp,plusw1
 12478  004ADA  0EF7               	movlw	-9
 12479  004ADC  006F FF8C  F03D    	movff	plusw1,btemp
 12480  004AE2  0EFD               	movlw	-3
 12481  004AE4  0060  F0F7  FFE3   	movff	btemp,plusw1
 12482  004AEA  D004               	goto	l1845
 12483  004AEC                     l8101:
 12484                           
 12485                           ;stkvar	_w @ sp[(-4)+0]
 12486  004AEC  0EFC               	movlw	-4
 12487  004AEE  6AE3               	clrf	plusw1,c
 12488  004AF0  0EFD               	movlw	-3
 12489  004AF2  6AE3               	clrf	plusw1,c
 12490  004AF4                     l1845:
 12491                           
 12492                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 12493                           ;stkvar	_i @ sp[(-4)+2]
 12494  004AF4  0EFE               	movlw	-2
 12495  004AF6  6AE3               	clrf	plusw1,c
 12496  004AF8  0EFF               	movlw	-1
 12497  004AFA  6AE3               	clrf	plusw1,c
 12498                           
 12499                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12500  004AFC  D01E               	goto	l8107
 12501  004AFE                     l8103:
 12502                           
 12503                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 12504                           ;stkvar	_fp @ sp[(-4)+-2]
 12505  004AFE  0EFA               	movlw	-6
 12506  004B00  006F FF8F FFE6     	movff	plusw1,postinc1
 12507  004B06  006F FF8F FFE6     	movff	plusw1,postinc1
 12508  004B0C  0E20               	movlw	32
 12509  004B0E  6EE6               	movwf	postinc1,c
 12510  004B10  0E00               	movlw	0
 12511  004B12  6EE6               	movwf	postinc1,c
 12512  004B14  EC5E  F026         	call	_fputc	;wreg free
 12513                           
 12514                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 86:         ++i;
 12515                           ;stkvar	_i @ sp[(-4)+2]
 12516  004B18  0EFE               	movlw	-2
 12517  004B1A  50E3               	movf	plusw1,w,c
 12518  004B1C  0F01               	addlw	1
 12519  004B1E  6E3D               	movwf	btemp,c
 12520  004B20  0EFE               	movlw	-2
 12521  004B22  0060  F0F7  FFE3   	movff	btemp,plusw1
 12522  004B28  6A3D               	clrf	btemp,c
 12523  004B2A  0EFF               	movlw	-1
 12524  004B2C  50E3               	movf	plusw1,w,c
 12525  004B2E  203D               	addwfc	btemp,w,c
 12526  004B30  6E3D               	movwf	btemp,c
 12527  004B32  0EFF               	movlw	-1
 12528  004B34  0060  F0F7  FFE3   	movff	btemp,plusw1
 12529  004B3A                     l8107:
 12530                           
 12531                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 12532                           ;stkvar	_w @ sp[(-4)+0]
 12533                           ;stkvar	_i @ sp[(-4)+2]
 12534  004B3A  50E1               	movf	fsr1l,w,c
 12535  004B3C  0FFE               	addlw	-2
 12536  004B3E  6ED9               	movwf	fsr2l,c
 12537  004B40  50E2               	movf	fsr1h,w,c
 12538  004B42  6EDA               	movwf	fsr2h,c
 12539  004B44  0EFF               	movlw	255
 12540  004B46  22DA               	addwfc	fsr2h,f,c
 12541  004B48  0EFC               	movlw	-4
 12542  004B4A  50E3               	movf	plusw1,w,c
 12543  004B4C  5CDE               	subwf	postinc2,w,c
 12544  004B4E  50DE               	movf	postinc2,w,c
 12545  004B50  0A80               	xorlw	128
 12546  004B52  6E3D               	movwf	btemp,c
 12547  004B54  0EFD               	movlw	-3
 12548  004B56  50E3               	movf	plusw1,w,c
 12549  004B58  0A80               	xorlw	128
 12550  004B5A  583D               	subwfb	btemp,w,c
 12551  004B5C  A0D8               	btfss	status,0,c
 12552  004B5E  D7CF               	goto	l8103
 12553                           
 12554                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 12555  004B60  B021               	btfsc	_flags,0,c
 12556  004B62  D010               	goto	l8111
 12557                           
 12558                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 12559                           ;stkvar	_fp @ sp[(-4)+-2]
 12560  004B64  0EFA               	movlw	-6
 12561  004B66  006F FF8F FFE6     	movff	plusw1,postinc1
 12562  004B6C  006F FF8F FFE6     	movff	plusw1,postinc1
 12563                           
 12564                           ;stkvar	_buf @ sp[(-6)+-4]
 12565  004B72  0EF6               	movlw	-10
 12566  004B74  006F FF8F FFE6     	movff	plusw1,postinc1
 12567  004B7A  006F FF8F FFE6     	movff	plusw1,postinc1
 12568  004B80  ECF2  F02A         	call	_fputs	;wreg free
 12569  004B84                     l8111:
 12570                           
 12571                           ;/opt/microchip/xc8/v2.05/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 12572                           ;stkvar	_w @ sp[(-4)+0]
 12573                           ;stkvar	_buf @ sp[(-4)+-4]
 12574  004B84  0EF8               	movlw	-8
 12575  004B86  006F FF8F FFE6     	movff	plusw1,postinc1
 12576  004B8C  006F FF8F FFE6     	movff	plusw1,postinc1
 12577  004B92  ECB7  F029         	call	_strlen	;wreg free
 12578  004B96  0EFC               	movlw	-4
 12579  004B98  50E3               	movf	plusw1,w,c
 12580  004B9A  263D               	addwf	btemp,f,c
 12581  004B9C  0EFD               	movlw	-3
 12582  004B9E  50E3               	movf	plusw1,w,c
 12583  004BA0  223E               	addwfc	btemp+1,f,c
 12584                           
 12585                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 12586  004BA2  0EF6               	movlw	246
 12587  004BA4  26E1               	addwf	fsr1l,f,c
 12588  004BA6  0EFF               	movlw	255
 12589  004BA8  22E2               	addwfc	fsr1h,f,c
 12590  004BAA  0012               	return		;funcret
 12591  004BAC                     __end_of_pad:
 12592                           	opt callstack 0
 12593                           
 12594 ;; *************** function _strlen *****************
 12595 ;; Defined at:
 12596 ;;		line 12 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/strlen.c"
 12597 ;; Parameters:    Size  Location     Type
 12598 ;;  s               2  [STACK] PTR const unsigned char 
 12599 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12600 ;;		 -> STR_3(6), V(98), 
 12601 ;; Auto vars:     Size  Location     Type
 12602 ;;  a               2  [STACK] PTR const unsigned char 
 12603 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(32), 
 12604 ;;		 -> STR_3(6), V(98), 
 12605 ;; Return value:  Size  Location     Type
 12606 ;;                  2  [STACK] unsigned int 
 12607 ;; Registers used:
 12608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 12609 ;; Tracked objects:
 12610 ;;		On entry : 0/0
 12611 ;;		On exit  : 0/0
 12612 ;;		Unchanged: 0/0
 12613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12615 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12617 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12618 ;;Total ram usage:        0 bytes
 12619 ;; Hardware stack levels used:    1
 12620 ;; Hardware stack levels required when called:    3
 12621 ;; This function calls:
 12622 ;;		Nothing
 12623 ;; This function is called by:
 12624 ;;		_eaDogM_WriteString
 12625 ;;		_pad
 12626 ;;		_stoa
 12627 ;; This function uses a reentrant model
 12628 ;;
 12629                           
 12630                           	psect	text50
 12631  00536E                     __ptext50:
 12632                           	opt callstack 0
 12633  00536E                     _strlen:
 12634                           	opt callstack 0
 12635                           
 12636                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12637  00536E  52E6               	movf	postinc1,f,c
 12638  005370  52E6               	movf	postinc1,f,c
 12639                           
 12640                           ;stkvar	_s @ sp[(-2)+-2]
 12641                           
 12642                           ;incstack = 0
 12643  005372  0EFC               	movlw	-4
 12644  005374  006F FF8C  F047    	movff	plusw1,btemp+10
 12645  00537A  0EFD               	movlw	-3
 12646  00537C  006F FF8C  F048    	movff	plusw1,btemp+11
 12647                           
 12648                           ;stkvar	_a @ sp[(-2)+0]
 12649  005382  0EFF               	movlw	-1
 12650  005384  0060  F123  FFE3   	movff	btemp+11,plusw1
 12651  00538A  0EFE               	movlw	-2
 12652  00538C  0060  F11F  FFE3   	movff	btemp+10,plusw1
 12653  005392  D011               	goto	l5327
 12654  005394                     l5325:
 12655                           
 12656                           ;stkvar	_s @ sp[(-2)+-2]
 12657  005394  0EFC               	movlw	-4
 12658  005396  50E3               	movf	plusw1,w,c
 12659  005398  0F01               	addlw	1
 12660  00539A  6E3D               	movwf	btemp,c
 12661  00539C  0EFC               	movlw	-4
 12662  00539E  0060  F0F7  FFE3   	movff	btemp,plusw1
 12663  0053A4  6A3D               	clrf	btemp,c
 12664  0053A6  0EFD               	movlw	-3
 12665  0053A8  50E3               	movf	plusw1,w,c
 12666  0053AA  203D               	addwfc	btemp,w,c
 12667  0053AC  6E3D               	movwf	btemp,c
 12668  0053AE  0EFD               	movlw	-3
 12669  0053B0  0060  F0F7  FFE3   	movff	btemp,plusw1
 12670  0053B6                     l5327:
 12671                           
 12672                           ;stkvar	_s @ sp[(-2)+-2]
 12673  0053B6  0EFC               	movlw	-4
 12674  0053B8  006F FF8F FFF6     	movff	plusw1,tblptrl
 12675  0053BE  0EFD               	movlw	-3
 12676  0053C0  006F FF8F FFF7     	movff	plusw1,tblptrh
 12677  0053C6  0E00               	movlw	low (__smallconst shr (0+16))
 12678  0053C8  6EF8               	movwf	tblptru,c
 12679  0053CA  0E1F               	movlw	(high __ramtop+-1)
 12680  0053CC  64F7               	cpfsgt	tblptrh,c
 12681  0053CE  D003               	bra	u2387
 12682  0053D0  0008               	tblrd		*
 12683  0053D2  50F5               	movf	tablat,w,c
 12684  0053D4  D007               	bra	u2380
 12685  0053D6                     u2387:
 12686  0053D6  006F FFDB FFE9     	movff	tblptrl,fsr0l
 12687  0053DC  006F FFDF FFEA     	movff	tblptrh,fsr0h
 12688  0053E2  50EF               	movf	indf0,w,c
 12689  0053E4                     u2380:
 12690  0053E4  0900               	iorlw	0
 12691  0053E6  A4D8               	btfss	status,2,c
 12692  0053E8  D7D5               	goto	l5325
 12693                           
 12694                           ;stkvar	_a @ sp[(-2)+0]
 12695                           ;stkvar	_s @ sp[(-2)+-2]
 12696  0053EA  0EFC               	movlw	-4
 12697  0053EC  006F FF8C  F03D    	movff	plusw1,btemp
 12698  0053F2  0EFD               	movlw	-3
 12699  0053F4  006F FF8C  F03E    	movff	plusw1,btemp+1
 12700  0053FA  0EFE               	movlw	-2
 12701  0053FC  50E3               	movf	plusw1,w,c
 12702  0053FE  5E3D               	subwf	btemp,f,c
 12703  005400  0EFF               	movlw	-1
 12704  005402  50E3               	movf	plusw1,w,c
 12705  005404  5A3E               	subwfb	btemp+1,f,c
 12706                           
 12707                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 12708  005406  52E5               	movf	postdec1,f,c
 12709  005408  52E5               	movf	postdec1,f,c
 12710  00540A  52E5               	movf	postdec1,f,c
 12711  00540C  52E5               	movf	postdec1,f,c
 12712  00540E  0012               	return		;funcret
 12713  005410                     __end_of_strlen:
 12714                           	opt callstack 0
 12715                           
 12716 ;; *************** function _fputs *****************
 12717 ;; Defined at:
 12718 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputs.c"
 12719 ;; Parameters:    Size  Location     Type
 12720 ;;  s               2  [STACK] PTR const unsigned char 
 12721 ;;		 -> dbuf(32), 
 12722 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12723 ;;		 -> f(5), NULL(0), 
 12724 ;; Auto vars:     Size  Location     Type
 12725 ;;  i               2  [STACK] int 
 12726 ;;  c               1  [STACK] unsigned char 
 12727 ;; Return value:  Size  Location     Type
 12728 ;;                  2  [STACK] int 
 12729 ;; Registers used:
 12730 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12731 ;; Tracked objects:
 12732 ;;		On entry : 0/1
 12733 ;;		On exit  : 0/0
 12734 ;;		Unchanged: 0/0
 12735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12740 ;;Total ram usage:        0 bytes
 12741 ;; Hardware stack levels used:    1
 12742 ;; Hardware stack levels required when called:    6
 12743 ;; This function calls:
 12744 ;;		_fputc
 12745 ;; This function is called by:
 12746 ;;		_pad
 12747 ;; This function uses a reentrant model
 12748 ;;
 12749                           
 12750                           	psect	text51
 12751  0055E4                     __ptext51:
 12752                           	opt callstack 0
 12753  0055E4                     _fputs:
 12754                           	opt callstack 0
 12755                           
 12756                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12757  0055E4  52E6               	movf	postinc1,f,c
 12758  0055E6  52E6               	movf	postinc1,f,c
 12759  0055E8  52E6               	movf	postinc1,f,c
 12760                           
 12761                           ;stkvar	_i @ sp[(-3)+0]
 12762                           
 12763                           ;incstack = 0
 12764  0055EA  0EFD               	movlw	-3
 12765  0055EC  6AE3               	clrf	plusw1,c
 12766  0055EE  0EFE               	movlw	-2
 12767  0055F0  6AE3               	clrf	plusw1,c
 12768  0055F2  D01F               	goto	l8091
 12769  0055F4                     l8087:
 12770                           
 12771                           ;stkvar	_fp @ sp[(-3)+-4]
 12772  0055F4  0EF9               	movlw	-7
 12773  0055F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12774  0055FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12775                           
 12776                           ;stkvar	_c @ sp[(-5)+2]
 12777  005602  0EFD               	movlw	-3
 12778  005604  50E3               	movf	plusw1,w,c
 12779  005606  6EE6               	movwf	postinc1,c
 12780  005608  0E00               	movlw	0
 12781  00560A  6EE6               	movwf	postinc1,c
 12782  00560C  EC5E  F026         	call	_fputc	;wreg free
 12783                           
 12784                           ;stkvar	_i @ sp[(-3)+0]
 12785  005610  0EFD               	movlw	-3
 12786  005612  50E3               	movf	plusw1,w,c
 12787  005614  0F01               	addlw	1
 12788  005616  6E3D               	movwf	btemp,c
 12789  005618  0EFD               	movlw	-3
 12790  00561A  0060  F0F7  FFE3   	movff	btemp,plusw1
 12791  005620  6A3D               	clrf	btemp,c
 12792  005622  0EFE               	movlw	-2
 12793  005624  50E3               	movf	plusw1,w,c
 12794  005626  203D               	addwfc	btemp,w,c
 12795  005628  6E3D               	movwf	btemp,c
 12796  00562A  0EFE               	movlw	-2
 12797  00562C  0060  F0F7  FFE3   	movff	btemp,plusw1
 12798  005632                     l8091:
 12799                           
 12800                           ;stkvar	_i @ sp[(-3)+0]
 12801  005632  0EFD               	movlw	-3
 12802  005634  006F FF8C  F047    	movff	plusw1,btemp+10
 12803  00563A  0EFE               	movlw	-2
 12804  00563C  006F FF8C  F048    	movff	plusw1,btemp+11
 12805                           
 12806                           ;stkvar	_s @ sp[(-3)+-2]
 12807  005642  0EFB               	movlw	-5
 12808  005644  006F FF8C  F045    	movff	plusw1,btemp+8
 12809  00564A  0EFC               	movlw	-4
 12810  00564C  006F FF8C  F046    	movff	plusw1,btemp+9
 12811  005652  5047               	movf	btemp+10,w,c
 12812  005654  2445               	addwf	btemp+8,w,c
 12813  005656  6ED9               	movwf	fsr2l,c
 12814  005658  5048               	movf	btemp+11,w,c
 12815  00565A  2046               	addwfc	btemp+9,w,c
 12816  00565C  6EDA               	movwf	fsr2h,c
 12817  00565E  50DF               	movf	indf2,w,c
 12818  005660  6E48               	movwf	btemp+11,c
 12819                           
 12820                           ;stkvar	_c @ sp[(-3)+2]
 12821  005662  0EFF               	movlw	-1
 12822  005664  0060  F123  FFE3   	movff	btemp+11,plusw1
 12823  00566A  0EFF               	movlw	-1
 12824  00566C  50E3               	movf	plusw1,w,c
 12825  00566E  A4D8               	btfss	status,2,c
 12826  005670  D7C1               	goto	l8087
 12827                           
 12828                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 12829  005672  0EF9               	movlw	249
 12830  005674  26E1               	addwf	fsr1l,f,c
 12831  005676  0EFF               	movlw	255
 12832  005678  22E2               	addwfc	fsr1h,f,c
 12833  00567A  0012               	return		;funcret
 12834  00567C                     __end_of_fputs:
 12835                           	opt callstack 0
 12836                           
 12837 ;; *************** function _fputc *****************
 12838 ;; Defined at:
 12839 ;;		line 8 in file "/opt/microchip/xc8/v2.05/pic/sources/c99/common/nf_fputc.c"
 12840 ;; Parameters:    Size  Location     Type
 12841 ;;  c               2  [STACK] int 
 12842 ;;  fp              2  [STACK] PTR struct _IO_FILE
 12843 ;;		 -> f(5), NULL(0), 
 12844 ;; Auto vars:     Size  Location     Type
 12845 ;;		None
 12846 ;; Return value:  Size  Location     Type
 12847 ;;                  2  [STACK] int 
 12848 ;; Registers used:
 12849 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 12850 ;; Tracked objects:
 12851 ;;		On entry : 0/0
 12852 ;;		On exit  : 0/0
 12853 ;;		Unchanged: 0/0
 12854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 12855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 12859 ;;Total ram usage:        0 bytes
 12860 ;; Hardware stack levels used:    1
 12861 ;; Hardware stack levels required when called:    5
 12862 ;; This function calls:
 12863 ;;		_putch
 12864 ;; This function is called by:
 12865 ;;		_pad
 12866 ;;		_stoa
 12867 ;;		_vfpfcnvrt
 12868 ;;		_fputs
 12869 ;; This function uses a reentrant model
 12870 ;;
 12871                           
 12872                           	psect	text52
 12873  004CBC                     __ptext52:
 12874                           	opt callstack 0
 12875  004CBC                     _fputc:
 12876                           	opt callstack 21
 12877                           
 12878                           ;stkvar	_fp @ sp[(0)+-4]
 12879                           
 12880                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 12881                           ;incstack = 0
 12882  004CBC  0EFC               	movlw	-4
 12883  004CBE  006F FF8C  F03D    	movff	plusw1,btemp
 12884  004CC4  0EFD               	movlw	-3
 12885  004CC6  50E3               	movf	plusw1,w,c
 12886  004CC8  103D               	iorwf	btemp,w,c
 12887  004CCA  B4D8               	btfsc	status,2,c
 12888  004CCC  D009               	goto	u4610
 12889                           
 12890                           ;stkvar	_fp @ sp[(0)+-4]
 12891  004CCE  0EFC               	movlw	-4
 12892  004CD0  006F FF8C  F03D    	movff	plusw1,btemp
 12893  004CD6  0EFD               	movlw	-3
 12894  004CD8  50E3               	movf	plusw1,w,c
 12895  004CDA  103D               	iorwf	btemp,w,c
 12896  004CDC  A4D8               	btfss	status,2,c
 12897  004CDE  D006               	goto	l8077
 12898  004CE0                     u4610:
 12899                           
 12900                           ;stkvar	_c @ sp[(0)+-2]
 12901  004CE0  0EFE               	movlw	-2
 12902  004CE2  50E3               	movf	plusw1,w,c
 12903  004CE4  6EE6               	movwf	postinc1,c
 12904  004CE6  EC3C  F032         	call	_putch	;wreg free
 12905  004CEA  D069               	goto	l2628
 12906  004CEC                     l8077:
 12907                           
 12908                           ;stkvar	_fp @ sp[(0)+-4]
 12909  004CEC  0EFC               	movlw	-4
 12910  004CEE  006F FF8C  F047    	movff	plusw1,btemp+10
 12911  004CF4  0EFD               	movlw	-3
 12912  004CF6  006F FF8C  F048    	movff	plusw1,btemp+11
 12913  004CFC  0E03               	movlw	3
 12914  004CFE  2447               	addwf	btemp+10,w,c
 12915  004D00  6ED9               	movwf	fsr2l,c
 12916  004D02  0E00               	movlw	0
 12917  004D04  2048               	addwfc	btemp+11,w,c
 12918  004D06  6EDA               	movwf	fsr2h,c
 12919  004D08  50DE               	movf	postinc2,w,c
 12920  004D0A  10DE               	iorwf	postinc2,w,c
 12921  004D0C  B4D8               	btfsc	status,2,c
 12922  004D0E  D026               	goto	u4630
 12923                           
 12924                           ;stkvar	_fp @ sp[(0)+-4]
 12925  004D10  0EFC               	movlw	-4
 12926  004D12  006F FF8C  F047    	movff	plusw1,btemp+10
 12927  004D18  0EFD               	movlw	-3
 12928  004D1A  006F FF8C  F048    	movff	plusw1,btemp+11
 12929  004D20  0E03               	movlw	3
 12930  004D22  2447               	addwf	btemp+10,w,c
 12931  004D24  6ED9               	movwf	fsr2l,c
 12932  004D26  0E00               	movlw	0
 12933  004D28  2048               	addwfc	btemp+11,w,c
 12934  004D2A  6EDA               	movwf	fsr2h,c
 12935                           
 12936                           ;stkvar	_fp @ sp[(0)+-4]
 12937  004D2C  0EFC               	movlw	-4
 12938  004D2E  006F FF8C  F047    	movff	plusw1,btemp+10
 12939  004D34  0EFD               	movlw	-3
 12940  004D36  006F FF8C  F048    	movff	plusw1,btemp+11
 12941  004D3C  0E01               	movlw	1
 12942  004D3E  2447               	addwf	btemp+10,w,c
 12943  004D40  6EE9               	movwf	fsr0l,c
 12944  004D42  0E00               	movlw	0
 12945  004D44  2048               	addwfc	btemp+11,w,c
 12946  004D46  6EEA               	movwf	fsr0h,c
 12947  004D48  50DE               	movf	postinc2,w,c
 12948  004D4A  5CEE               	subwf	postinc0,w,c
 12949  004D4C  50EE               	movf	postinc0,w,c
 12950  004D4E  0A80               	xorlw	128
 12951  004D50  6E3D               	movwf	btemp,c
 12952  004D52  50DE               	movf	postinc2,w,c
 12953  004D54  0A80               	xorlw	128
 12954  004D56  583D               	subwfb	btemp,w,c
 12955  004D58  B0D8               	btfsc	status,0,c
 12956  004D5A  D031               	goto	l2628
 12957  004D5C                     u4630:
 12958                           
 12959                           ;stkvar	_c @ sp[(0)+-2]
 12960                           ;stkvar	_fp @ sp[(0)+-4]
 12961  004D5C  0EFC               	movlw	-4
 12962  004D5E  006F FF8C  F047    	movff	plusw1,btemp+10
 12963  004D64  0EFD               	movlw	-3
 12964  004D66  006F FF8C  F048    	movff	plusw1,btemp+11
 12965  004D6C  0E01               	movlw	1
 12966  004D6E  2447               	addwf	btemp+10,w,c
 12967  004D70  6ED9               	movwf	fsr2l,c
 12968  004D72  0E00               	movlw	0
 12969  004D74  2048               	addwfc	btemp+11,w,c
 12970  004D76  6EDA               	movwf	fsr2h,c
 12971  004D78  50DF               	movf	indf2,w,c
 12972  004D7A  6E48               	movwf	btemp+11,c
 12973                           
 12974                           ;stkvar	_fp @ sp[(0)+-4]
 12975  004D7C  0EFC               	movlw	-4
 12976  004D7E  006F FF8F FFD9     	movff	plusw1,fsr2l
 12977  004D84  0EFD               	movlw	-3
 12978  004D86  006F FF8F FFDA     	movff	plusw1,fsr2h
 12979  004D8C  50DF               	movf	indf2,w,c
 12980  004D8E  2448               	addwf	btemp+11,w,c
 12981  004D90  6ED9               	movwf	fsr2l,c
 12982  004D92  6ADA               	clrf	fsr2h,c
 12983  004D94  0EFE               	movlw	-2
 12984  004D96  006F FF8F FFDF     	movff	plusw1,indf2
 12985                           
 12986                           ;stkvar	_fp @ sp[(0)+-4]
 12987  004D9C  0EFC               	movlw	-4
 12988  004D9E  006F FF8C  F047    	movff	plusw1,btemp+10
 12989  004DA4  0EFD               	movlw	-3
 12990  004DA6  006F FF8C  F048    	movff	plusw1,btemp+11
 12991  004DAC  0E01               	movlw	1
 12992  004DAE  2447               	addwf	btemp+10,w,c
 12993  004DB0  6ED9               	movwf	fsr2l,c
 12994  004DB2  0E00               	movlw	0
 12995  004DB4  2048               	addwfc	btemp+11,w,c
 12996  004DB6  6EDA               	movwf	fsr2h,c
 12997  004DB8  2ADE               	incf	postinc2,f,c
 12998  004DBA  0E00               	movlw	0
 12999  004DBC  22DD               	addwfc	postdec2,f,c
 13000  004DBE                     l2628:
 13001                           
 13002                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 13003  004DBE  52E5               	movf	postdec1,f,c
 13004  004DC0  52E5               	movf	postdec1,f,c
 13005  004DC2  52E5               	movf	postdec1,f,c
 13006  004DC4  52E5               	movf	postdec1,f,c
 13007  004DC6  0012               	return		;funcret
 13008  004DC8                     __end_of_fputc:
 13009                           	opt callstack 0
 13010                           
 13011 ;; *************** function _putch *****************
 13012 ;; Defined at:
 13013 ;;		line 138 in file "eadog.c"
 13014 ;; Parameters:    Size  Location     Type
 13015 ;;  c               1  [STACK] unsigned char 
 13016 ;; Auto vars:     Size  Location     Type
 13017 ;;		None
 13018 ;; Return value:  Size  Location     Type
 13019 ;;                  1  [STACK] void 
 13020 ;; Registers used:
 13021 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13022 ;; Tracked objects:
 13023 ;;		On entry : 0/0
 13024 ;;		On exit  : 0/0
 13025 ;;		Unchanged: 0/0
 13026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13031 ;;Total ram usage:        0 bytes
 13032 ;; Hardware stack levels used:    1
 13033 ;; Hardware stack levels required when called:    4
 13034 ;; This function calls:
 13035 ;;		_ringBufS_put_dma
 13036 ;; This function is called by:
 13037 ;;		_fputc
 13038 ;; This function uses a reentrant model
 13039 ;;
 13040                           
 13041                           	psect	text53
 13042  006478                     __ptext53:
 13043                           	opt callstack 0
 13044  006478                     _putch:
 13045                           	opt callstack 21
 13046                           
 13047                           ;eadog.c: 138: void putch(char c);eadog.c: 139: {;eadog.c: 140:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 13048                           ;stkvar	_c @ sp[(0)+-1]
 13049                           
 13050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13051                           ;incstack = 0
 13052  006478  0EFF               	movlw	-1
 13053  00647A  50E3               	movf	plusw1,w,c
 13054  00647C  6EE6               	movwf	postinc1,c
 13055  00647E  0060  F357  FFE6   	movff	_spi_link+6,postinc1
 13056  006484  0060  F35B  FFE6   	movff	_spi_link+7,postinc1
 13057  00648A  EC62  F029         	call	_ringBufS_put_dma	;wreg free
 13058                           
 13059                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 13060  00648E  52E5               	movf	postdec1,f,c
 13061  006490  0012               	return		;funcret
 13062  006492                     __end_of_putch:
 13063                           	opt callstack 0
 13064                           
 13065 ;; *************** function _ringBufS_put_dma *****************
 13066 ;; Defined at:
 13067 ;;		line 67 in file "ringbufs.c"
 13068 ;; Parameters:    Size  Location     Type
 13069 ;;  _this           2  [STACK] PTR struct ringBufS_t
 13070 ;;		 -> ring_buf1(67), 
 13071 ;;  c               1  [STACK] const unsigned char 
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;		None
 13074 ;; Return value:  Size  Location     Type
 13075 ;;                  1  [STACK] void 
 13076 ;; Registers used:
 13077 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 13078 ;; Tracked objects:
 13079 ;;		On entry : 0/0
 13080 ;;		On exit  : 0/0
 13081 ;;		Unchanged: 0/0
 13082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13087 ;;Total ram usage:        0 bytes
 13088 ;; Hardware stack levels used:    1
 13089 ;; Hardware stack levels required when called:    3
 13090 ;; This function calls:
 13091 ;;		Nothing
 13092 ;; This function is called by:
 13093 ;;		_putch
 13094 ;; This function uses a reentrant model
 13095 ;;
 13096                           
 13097                           	psect	text54
 13098  0052C4                     __ptext54:
 13099                           	opt callstack 0
 13100  0052C4                     _ringBufS_put_dma:
 13101                           	opt callstack 21
 13102                           
 13103                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 13104                           ;stkvar	__this @ sp[(0)+-2]
 13105                           
 13106                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13107                           ;incstack = 0
 13108  0052C4  0EFE               	movlw	-2
 13109  0052C6  006F FF8C  F047    	movff	plusw1,btemp+10
 13110  0052CC  0EFF               	movlw	-1
 13111  0052CE  006F FF8C  F048    	movff	plusw1,btemp+11
 13112  0052D4  0E42               	movlw	66
 13113  0052D6  2447               	addwf	btemp+10,w,c
 13114  0052D8  6ED9               	movwf	fsr2l,c
 13115  0052DA  0E00               	movlw	0
 13116  0052DC  2048               	addwfc	btemp+11,w,c
 13117  0052DE  6EDA               	movwf	fsr2h,c
 13118  0052E0  0E40               	movlw	64
 13119  0052E2  60DF               	cpfslt	indf2,c
 13120  0052E4  D040               	goto	l1489
 13121                           
 13122                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 13123                           ;stkvar	_c @ sp[(0)+-3]
 13124                           ;stkvar	__this @ sp[(0)+-2]
 13125  0052E6  0EFE               	movlw	-2
 13126  0052E8  006F FF8C  F047    	movff	plusw1,btemp+10
 13127  0052EE  0EFF               	movlw	-1
 13128  0052F0  006F FF8C  F048    	movff	plusw1,btemp+11
 13129  0052F6  0E40               	movlw	64
 13130  0052F8  2447               	addwf	btemp+10,w,c
 13131  0052FA  6ED9               	movwf	fsr2l,c
 13132  0052FC  0E00               	movlw	0
 13133  0052FE  2048               	addwfc	btemp+11,w,c
 13134  005300  6EDA               	movwf	fsr2h,c
 13135  005302  50DF               	movf	indf2,w,c
 13136  005304  6E48               	movwf	btemp+11,c
 13137                           
 13138                           ;stkvar	__this @ sp[(0)+-2]
 13139  005306  0EFE               	movlw	-2
 13140  005308  006F FF8C  F045    	movff	plusw1,btemp+8
 13141  00530E  0EFF               	movlw	-1
 13142  005310  006F FF8C  F046    	movff	plusw1,btemp+9
 13143  005316  5048               	movf	btemp+11,w,c
 13144  005318  2445               	addwf	btemp+8,w,c
 13145  00531A  6ED9               	movwf	fsr2l,c
 13146  00531C  0E00               	movlw	0
 13147  00531E  2046               	addwfc	btemp+9,w,c
 13148  005320  6EDA               	movwf	fsr2h,c
 13149  005322  0EFD               	movlw	-3
 13150  005324  006F FF8F FFDF     	movff	plusw1,indf2
 13151                           
 13152                           ;ringbufs.c: 71:   ++_this->head;
 13153                           ;stkvar	__this @ sp[(0)+-2]
 13154  00532A  0EFE               	movlw	-2
 13155  00532C  006F FF8C  F047    	movff	plusw1,btemp+10
 13156  005332  0EFF               	movlw	-1
 13157  005334  006F FF8C  F048    	movff	plusw1,btemp+11
 13158  00533A  0E40               	movlw	64
 13159  00533C  2447               	addwf	btemp+10,w,c
 13160  00533E  6ED9               	movwf	fsr2l,c
 13161  005340  0E00               	movlw	0
 13162  005342  2048               	addwfc	btemp+11,w,c
 13163  005344  6EDA               	movwf	fsr2h,c
 13164  005346  2ADF               	incf	indf2,f,c
 13165                           
 13166                           ;ringbufs.c: 72:   ++_this->count;
 13167                           ;stkvar	__this @ sp[(0)+-2]
 13168  005348  0EFE               	movlw	-2
 13169  00534A  006F FF8C  F047    	movff	plusw1,btemp+10
 13170  005350  0EFF               	movlw	-1
 13171  005352  006F FF8C  F048    	movff	plusw1,btemp+11
 13172  005358  0E42               	movlw	66
 13173  00535A  2447               	addwf	btemp+10,w,c
 13174  00535C  6ED9               	movwf	fsr2l,c
 13175  00535E  0E00               	movlw	0
 13176  005360  2048               	addwfc	btemp+11,w,c
 13177  005362  6EDA               	movwf	fsr2h,c
 13178  005364  2ADF               	incf	indf2,f,c
 13179  005366                     l1489:
 13180                           
 13181                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 13182  005366  52E5               	movf	postdec1,f,c
 13183  005368  52E5               	movf	postdec1,f,c
 13184  00536A  52E5               	movf	postdec1,f,c
 13185  00536C  0012               	return		;funcret
 13186  00536E                     __end_of_ringBufS_put_dma:
 13187                           	opt callstack 0
 13188                           
 13189 ;; *************** function _SYSTEM_Initialize *****************
 13190 ;; Defined at:
 13191 ;;		line 50 in file "mcc_generated_files/mcc.c"
 13192 ;; Parameters:    Size  Location     Type
 13193 ;;		None
 13194 ;; Auto vars:     Size  Location     Type
 13195 ;;		None
 13196 ;; Return value:  Size  Location     Type
 13197 ;;                  1  [STACK] void 
 13198 ;; Registers used:
 13199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 13200 ;; Tracked objects:
 13201 ;;		On entry : 0/0
 13202 ;;		On exit  : 3F/3C
 13203 ;;		Unchanged: 0/0
 13204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13206 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13208 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13209 ;;Total ram usage:        0 bytes
 13210 ;; Hardware stack levels used:    1
 13211 ;; Hardware stack levels required when called:    5
 13212 ;; This function calls:
 13213 ;;		_ADCC_Initialize
 13214 ;;		_CLC1_Initialize
 13215 ;;		_CLKREF_Initialize
 13216 ;;		_DMA1_Initialize
 13217 ;;		_DSM_Initialize
 13218 ;;		_EXT_INT_Initialize
 13219 ;;		_INTERRUPT_Initialize
 13220 ;;		_NCO1_Initialize
 13221 ;;		_OSCILLATOR_Initialize
 13222 ;;		_PIN_MANAGER_Initialize
 13223 ;;		_PMD_Initialize
 13224 ;;		_SPI1_Initialize
 13225 ;;		_TMR5_Initialize
 13226 ;;		_TMR6_Initialize
 13227 ;;		_UART1_Initialize
 13228 ;;		_UART2_Initialize
 13229 ;; This function is called by:
 13230 ;;		_main
 13231 ;; This function uses a reentrant model
 13232 ;;
 13233                           
 13234                           	psect	text55
 13235  005C58                     __ptext55:
 13236                           	opt callstack 0
 13237  005C58                     _SYSTEM_Initialize:
 13238                           	opt callstack 25
 13239                           
 13240                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 13241                           
 13242                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13243                           ;incstack = 0
 13244  005C58  EC00  F02C         	call	_INTERRUPT_Initialize	;wreg free
 13245                           
 13246                           ; BSR set to: 57
 13247                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 13248  005C5C  EC7A  F032         	call	_PMD_Initialize	;wreg free
 13249                           
 13250                           ; BSR set to: 57
 13251                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 13252  005C60  EC57  F02A         	call	_PIN_MANAGER_Initialize	;wreg free
 13253                           
 13254                           ; BSR set to: 58
 13255                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 13256  005C64  EC6F  F032         	call	_OSCILLATOR_Initialize	;wreg free
 13257                           
 13258                           ; BSR set to: 57
 13259                           ;mcc_generated_files/mcc.c: 56:     ADCC_Initialize();
 13260  005C68  ECC1  F02D         	call	_ADCC_Initialize	;wreg free
 13261                           
 13262                           ;mcc_generated_files/mcc.c: 57:     NCO1_Initialize();
 13263  005C6C  EC20  F032         	call	_NCO1_Initialize	;wreg free
 13264                           
 13265                           ; BSR set to: 63
 13266                           ;mcc_generated_files/mcc.c: 58:     EXT_INT_Initialize();
 13267  005C70  EC9B  F02D         	call	_EXT_INT_Initialize	;wreg free
 13268                           
 13269                           ; BSR set to: 57
 13270                           ;mcc_generated_files/mcc.c: 59:     TMR6_Initialize();
 13271  005C74  EC90  F030         	call	_TMR6_Initialize	;wreg free
 13272                           
 13273                           ;mcc_generated_files/mcc.c: 60:     CLC1_Initialize();
 13274  005C78  EC8F  F031         	call	_CLC1_Initialize	;wreg free
 13275                           
 13276                           ; BSR set to: 60
 13277                           ;mcc_generated_files/mcc.c: 61:     TMR5_Initialize();
 13278  005C7C  EC09  F02E         	call	_TMR5_Initialize	;wreg free
 13279                           
 13280                           ;mcc_generated_files/mcc.c: 62:     DSM_Initialize();
 13281  005C80  EC2E  F032         	call	_DSM_Initialize	;wreg free
 13282                           
 13283                           ; BSR set to: 60
 13284                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 13285  005C84  EC33  F02C         	call	_UART1_Initialize	;wreg free
 13286                           
 13287                           ; BSR set to: 57
 13288                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 13289  005C88  ECC7  F02C         	call	_UART2_Initialize	;wreg free
 13290                           
 13291                           ; BSR set to: 57
 13292                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 13293  005C8C  EC64  F032         	call	_SPI1_Initialize	;wreg free
 13294                           
 13295                           ; BSR set to: 61
 13296                           ;mcc_generated_files/mcc.c: 66:     DMA1_Initialize();
 13297  005C90  ECCB  F02B         	call	_DMA1_Initialize	;wreg free
 13298                           
 13299                           ; BSR set to: 59
 13300                           ;mcc_generated_files/mcc.c: 67:     CLKREF_Initialize();
 13301  005C94  ECAB  F032         	call	_CLKREF_Initialize	;wreg free
 13302                           
 13303                           ; BSR set to: 60
 13304                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 13305  005C98  0012               	return		;funcret
 13306  005C9A                     __end_of_SYSTEM_Initialize:
 13307                           	opt callstack 0
 13308                           
 13309 ;; *************** function _UART2_Initialize *****************
 13310 ;; Defined at:
 13311 ;;		line 78 in file "mcc_generated_files/uart2.c"
 13312 ;; Parameters:    Size  Location     Type
 13313 ;;		None
 13314 ;; Auto vars:     Size  Location     Type
 13315 ;;		None
 13316 ;; Return value:  Size  Location     Type
 13317 ;;                  1  [STACK] void 
 13318 ;; Registers used:
 13319 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13320 ;; Tracked objects:
 13321 ;;		On entry : 3F/39
 13322 ;;		On exit  : 3F/39
 13323 ;;		Unchanged: 0/0
 13324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13325 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13326 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13327 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13328 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13329 ;;Total ram usage:        0 bytes
 13330 ;; Hardware stack levels used:    1
 13331 ;; Hardware stack levels required when called:    4
 13332 ;; This function calls:
 13333 ;;		_UART2_SetRxInterruptHandler
 13334 ;;		_UART2_SetTxInterruptHandler
 13335 ;; This function is called by:
 13336 ;;		_SYSTEM_Initialize
 13337 ;; This function uses a reentrant model
 13338 ;;
 13339                           
 13340                           	psect	text56
 13341  00598E                     __ptext56:
 13342                           	opt callstack 0
 13343  00598E                     _UART2_Initialize:
 13344                           	opt callstack 25
 13345                           
 13346                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 13347                           
 13348                           ; BSR set to: 60
 13349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13350                           ;incstack = 0
 13351  00598E  0139               	movlb	57	; () banked
 13352  005990  9596               	bcf	150,2,b	;volatile
 13353                           
 13354                           ; BSR set to: 57
 13355                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 13356  005992  0EE6               	movlw	low _UART2_Receive_ISR
 13357  005994  6EE6               	movwf	postinc1,c
 13358  005996  0E63               	movlw	high _UART2_Receive_ISR
 13359  005998  6EE6               	movwf	postinc1,c
 13360  00599A  0E00               	movlw	low (_UART2_Receive_ISR shr (0+16))
 13361  00599C  6EE6               	movwf	postinc1,c
 13362  00599E  EC54  F030         	call	_UART2_SetRxInterruptHandler	;wreg free
 13363                           
 13364                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 13365  0059A2  0139               	movlb	57	; () banked
 13366  0059A4  9796               	bcf	150,3,b	;volatile
 13367                           
 13368                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 13369  0059A6  0E38               	movlw	low _UART2_Transmit_ISR
 13370  0059A8  6EE6               	movwf	postinc1,c
 13371  0059AA  0E5F               	movlw	high _UART2_Transmit_ISR
 13372  0059AC  6EE6               	movwf	postinc1,c
 13373  0059AE  0E00               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 13374  0059B0  6EE6               	movwf	postinc1,c
 13375  0059B2  EC40  F030         	call	_UART2_SetTxInterruptHandler	;wreg free
 13376                           
 13377                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 13378  0059B6  013D               	movlb	61	; () banked
 13379  0059B8  6BD4               	clrf	212,b	;volatile
 13380                           
 13381                           ; BSR set to: 61
 13382                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 13383  0059BA  6BD6               	clrf	214,b	;volatile
 13384                           
 13385                           ; BSR set to: 61
 13386                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 13387  0059BC  6BD8               	clrf	216,b	;volatile
 13388                           
 13389                           ; BSR set to: 61
 13390                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 13391  0059BE  0EB0               	movlw	176
 13392  0059C0  6FDA               	movwf	218,b	;volatile
 13393                           
 13394                           ; BSR set to: 61
 13395                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 13396  0059C2  0E80               	movlw	128
 13397  0059C4  6FDB               	movwf	219,b	;volatile
 13398                           
 13399                           ; BSR set to: 61
 13400                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 13401  0059C6  6BDC               	clrf	220,b	;volatile
 13402                           
 13403                           ; BSR set to: 61
 13404                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 13405  0059C8  0E82               	movlw	130
 13406  0059CA  6FDD               	movwf	221,b	;volatile
 13407                           
 13408                           ; BSR set to: 61
 13409                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 13410  0059CC  0E06               	movlw	6
 13411  0059CE  6FDE               	movwf	222,b	;volatile
 13412                           
 13413                           ; BSR set to: 61
 13414                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 13415  0059D0  6BDF               	clrf	223,b	;volatile
 13416                           
 13417                           ; BSR set to: 61
 13418                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 13419  0059D2  6BE0               	clrf	224,b	;volatile
 13420                           
 13421                           ; BSR set to: 61
 13422                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 13423  0059D4  6BE1               	clrf	225,b	;volatile
 13424                           
 13425                           ; BSR set to: 61
 13426                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 13427  0059D6  6BE2               	clrf	226,b	;volatile
 13428                           
 13429                           ; BSR set to: 61
 13430                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 13431  0059D8  6A36               	clrf	_uart2TxHead,c	;volatile
 13432                           
 13433                           ; BSR set to: 61
 13434                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 13435  0059DA  6A35               	clrf	_uart2TxTail,c	;volatile
 13436                           
 13437                           ; BSR set to: 61
 13438                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 13439  0059DC  0E40               	movlw	64
 13440  0059DE  6E34               	movwf	_uart2TxBufferRemaining,c	;volatile
 13441                           
 13442                           ; BSR set to: 61
 13443                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 13444  0059E0  6A33               	clrf	_uart2RxHead,c	;volatile
 13445                           
 13446                           ; BSR set to: 61
 13447                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 13448  0059E2  6A32               	clrf	_uart2RxTail,c	;volatile
 13449                           
 13450                           ; BSR set to: 61
 13451                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 13452  0059E4  6A31               	clrf	_uart2RxCount,c	;volatile
 13453                           
 13454                           ; BSR set to: 61
 13455                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 13456  0059E6  0139               	movlb	57	; () banked
 13457  0059E8  8596               	bsf	150,2,b	;volatile
 13458                           
 13459                           ; BSR set to: 57
 13460                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13461  0059EA  0012               	return		;funcret
 13462  0059EC                     __end_of_UART2_Initialize:
 13463                           	opt callstack 0
 13464                           
 13465 ;; *************** function _UART2_SetTxInterruptHandler *****************
 13466 ;; Defined at:
 13467 ;;		line 252 in file "mcc_generated_files/uart2.c"
 13468 ;; Parameters:    Size  Location     Type
 13469 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13470 ;;		 -> UART2_Transmit_ISR(1), 
 13471 ;; Auto vars:     Size  Location     Type
 13472 ;;		None
 13473 ;; Return value:  Size  Location     Type
 13474 ;;                  1  [STACK] void 
 13475 ;; Registers used:
 13476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13477 ;; Tracked objects:
 13478 ;;		On entry : 3F/39
 13479 ;;		On exit  : 0/0
 13480 ;;		Unchanged: 0/0
 13481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13485 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13486 ;;Total ram usage:        0 bytes
 13487 ;; Hardware stack levels used:    1
 13488 ;; Hardware stack levels required when called:    3
 13489 ;; This function calls:
 13490 ;;		Nothing
 13491 ;; This function is called by:
 13492 ;;		_UART2_Initialize
 13493 ;; This function uses a reentrant model
 13494 ;;
 13495                           
 13496                           	psect	text57
 13497  006080                     __ptext57:
 13498                           	opt callstack 0
 13499  006080                     _UART2_SetTxInterruptHandler:
 13500                           	opt callstack 25
 13501                           
 13502                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 13503                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13504                           
 13505                           ; BSR set to: 57
 13506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13507                           ;incstack = 0
 13508  006080  50E1               	movf	fsr1l,w,c
 13509  006082  0FFD               	addlw	-3
 13510  006084  6ED9               	movwf	fsr2l,c
 13511  006086  50E2               	movf	fsr1h,w,c
 13512  006088  6EDA               	movwf	fsr2h,c
 13513  00608A  0EFF               	movlw	255
 13514  00608C  22DA               	addwfc	fsr2h,f,c
 13515  00608E  006F FF78  F00E    	movff	postinc2,_UART2_TxInterruptHandler
 13516  006094  006F FF78  F00F    	movff	postinc2,_UART2_TxInterruptHandler+1
 13517  00609A  006F FF74  F010    	movff	postdec2,_UART2_TxInterruptHandler+2
 13518                           
 13519                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13520  0060A0  52E5               	movf	postdec1,f,c
 13521  0060A2  52E5               	movf	postdec1,f,c
 13522  0060A4  52E5               	movf	postdec1,f,c
 13523  0060A6  0012               	return		;funcret
 13524  0060A8                     __end_of_UART2_SetTxInterruptHandler:
 13525                           	opt callstack 0
 13526                           
 13527 ;; *************** function _UART2_SetRxInterruptHandler *****************
 13528 ;; Defined at:
 13529 ;;		line 248 in file "mcc_generated_files/uart2.c"
 13530 ;; Parameters:    Size  Location     Type
 13531 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13532 ;;		 -> UART2_Receive_ISR(1), 
 13533 ;; Auto vars:     Size  Location     Type
 13534 ;;		None
 13535 ;; Return value:  Size  Location     Type
 13536 ;;                  1  [STACK] void 
 13537 ;; Registers used:
 13538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13539 ;; Tracked objects:
 13540 ;;		On entry : 3F/39
 13541 ;;		On exit  : 0/0
 13542 ;;		Unchanged: 0/0
 13543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13548 ;;Total ram usage:        0 bytes
 13549 ;; Hardware stack levels used:    1
 13550 ;; Hardware stack levels required when called:    3
 13551 ;; This function calls:
 13552 ;;		Nothing
 13553 ;; This function is called by:
 13554 ;;		_UART2_Initialize
 13555 ;; This function uses a reentrant model
 13556 ;;
 13557                           
 13558                           	psect	text58
 13559  0060A8                     __ptext58:
 13560                           	opt callstack 0
 13561  0060A8                     _UART2_SetRxInterruptHandler:
 13562                           	opt callstack 25
 13563                           
 13564                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 13565                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13566                           
 13567                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13568                           ;incstack = 0
 13569  0060A8  50E1               	movf	fsr1l,w,c
 13570  0060AA  0FFD               	addlw	-3
 13571  0060AC  6ED9               	movwf	fsr2l,c
 13572  0060AE  50E2               	movf	fsr1h,w,c
 13573  0060B0  6EDA               	movwf	fsr2h,c
 13574  0060B2  0EFF               	movlw	255
 13575  0060B4  22DA               	addwfc	fsr2h,f,c
 13576  0060B6  006F FF78  F011    	movff	postinc2,_UART2_RxInterruptHandler
 13577  0060BC  006F FF78  F012    	movff	postinc2,_UART2_RxInterruptHandler+1
 13578  0060C2  006F FF74  F013    	movff	postdec2,_UART2_RxInterruptHandler+2
 13579                           
 13580                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13581  0060C8  52E5               	movf	postdec1,f,c
 13582  0060CA  52E5               	movf	postdec1,f,c
 13583  0060CC  52E5               	movf	postdec1,f,c
 13584  0060CE  0012               	return		;funcret
 13585  0060D0                     __end_of_UART2_SetRxInterruptHandler:
 13586                           	opt callstack 0
 13587                           
 13588 ;; *************** function _UART1_Initialize *****************
 13589 ;; Defined at:
 13590 ;;		line 78 in file "mcc_generated_files/uart1.c"
 13591 ;; Parameters:    Size  Location     Type
 13592 ;;		None
 13593 ;; Auto vars:     Size  Location     Type
 13594 ;;		None
 13595 ;; Return value:  Size  Location     Type
 13596 ;;                  1  [STACK] void 
 13597 ;; Registers used:
 13598 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13599 ;; Tracked objects:
 13600 ;;		On entry : 3F/3C
 13601 ;;		On exit  : 3F/39
 13602 ;;		Unchanged: 0/0
 13603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13608 ;;Total ram usage:        0 bytes
 13609 ;; Hardware stack levels used:    1
 13610 ;; Hardware stack levels required when called:    4
 13611 ;; This function calls:
 13612 ;;		_UART1_SetRxInterruptHandler
 13613 ;;		_UART1_SetTxInterruptHandler
 13614 ;; This function is called by:
 13615 ;;		_SYSTEM_Initialize
 13616 ;; This function uses a reentrant model
 13617 ;;
 13618                           
 13619                           	psect	text59
 13620  005866                     __ptext59:
 13621                           	opt callstack 0
 13622  005866                     _UART1_Initialize:
 13623                           	opt callstack 25
 13624                           
 13625                           ;mcc_generated_files/uart1.c: 81:  PIE3bits.U1RXIE = 0;
 13626                           
 13627                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13628                           ;incstack = 0
 13629  005866  0139               	movlb	57	; () banked
 13630  005868  9793               	bcf	147,3,b	;volatile
 13631                           
 13632                           ; BSR set to: 57
 13633                           ;mcc_generated_files/uart1.c: 82:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 13634  00586A  0EC6               	movlw	low _UART1_Receive_ISR
 13635  00586C  6EE6               	movwf	postinc1,c
 13636  00586E  0E63               	movlw	high _UART1_Receive_ISR
 13637  005870  6EE6               	movwf	postinc1,c
 13638  005872  0E00               	movlw	low (_UART1_Receive_ISR shr (0+16))
 13639  005874  6EE6               	movwf	postinc1,c
 13640  005876  EC7C  F030         	call	_UART1_SetRxInterruptHandler	;wreg free
 13641                           
 13642                           ;mcc_generated_files/uart1.c: 83:  PIE3bits.U1TXIE = 0;
 13643  00587A  0139               	movlb	57	; () banked
 13644  00587C  9993               	bcf	147,4,b	;volatile
 13645                           
 13646                           ;mcc_generated_files/uart1.c: 84:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 13647  00587E  0E0C               	movlw	low _UART1_Transmit_ISR
 13648  005880  6EE6               	movwf	postinc1,c
 13649  005882  0E5F               	movlw	high _UART1_Transmit_ISR
 13650  005884  6EE6               	movwf	postinc1,c
 13651  005886  0E00               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 13652  005888  6EE6               	movwf	postinc1,c
 13653  00588A  EC68  F030         	call	_UART1_SetTxInterruptHandler	;wreg free
 13654                           
 13655                           ;mcc_generated_files/uart1.c: 89:  U1P1L = 0x00;
 13656  00588E  013D               	movlb	61	; () banked
 13657  005890  6BEC               	clrf	236,b	;volatile
 13658                           
 13659                           ; BSR set to: 61
 13660                           ;mcc_generated_files/uart1.c: 92:  U1P1H = 0x00;
 13661  005892  6BED               	clrf	237,b	;volatile
 13662                           
 13663                           ; BSR set to: 61
 13664                           ;mcc_generated_files/uart1.c: 95:  U1P2L = 0x00;
 13665  005894  6BEE               	clrf	238,b	;volatile
 13666                           
 13667                           ; BSR set to: 61
 13668                           ;mcc_generated_files/uart1.c: 98:  U1P2H = 0x00;
 13669  005896  6BEF               	clrf	239,b	;volatile
 13670                           
 13671                           ; BSR set to: 61
 13672                           ;mcc_generated_files/uart1.c: 101:  U1P3L = 0x00;
 13673  005898  6BF0               	clrf	240,b	;volatile
 13674                           
 13675                           ; BSR set to: 61
 13676                           ;mcc_generated_files/uart1.c: 104:  U1P3H = 0x00;
 13677  00589A  6BF1               	clrf	241,b	;volatile
 13678                           
 13679                           ; BSR set to: 61
 13680                           ;mcc_generated_files/uart1.c: 107:  U1CON0 = 0xB0;
 13681  00589C  0EB0               	movlw	176
 13682  00589E  6FF2               	movwf	242,b	;volatile
 13683                           
 13684                           ; BSR set to: 61
 13685                           ;mcc_generated_files/uart1.c: 110:  U1CON1 = 0x80;
 13686  0058A0  0E80               	movlw	128
 13687  0058A2  6FF3               	movwf	243,b	;volatile
 13688                           
 13689                           ; BSR set to: 61
 13690                           ;mcc_generated_files/uart1.c: 113:  U1CON2 = 0x00;
 13691  0058A4  6BF4               	clrf	244,b	;volatile
 13692                           
 13693                           ; BSR set to: 61
 13694                           ;mcc_generated_files/uart1.c: 116:  U1BRGL = 0x82;
 13695  0058A6  0E82               	movlw	130
 13696  0058A8  6FF5               	movwf	245,b	;volatile
 13697                           
 13698                           ; BSR set to: 61
 13699                           ;mcc_generated_files/uart1.c: 119:  U1BRGH = 0x06;
 13700  0058AA  0E06               	movlw	6
 13701  0058AC  6FF6               	movwf	246,b	;volatile
 13702                           
 13703                           ; BSR set to: 61
 13704                           ;mcc_generated_files/uart1.c: 122:  U1FIFO = 0x00;
 13705  0058AE  6BF7               	clrf	247,b	;volatile
 13706                           
 13707                           ; BSR set to: 61
 13708                           ;mcc_generated_files/uart1.c: 125:  U1UIR = 0x00;
 13709  0058B0  6BF8               	clrf	248,b	;volatile
 13710                           
 13711                           ; BSR set to: 61
 13712                           ;mcc_generated_files/uart1.c: 128:  U1ERRIR = 0x00;
 13713  0058B2  6BF9               	clrf	249,b	;volatile
 13714                           
 13715                           ; BSR set to: 61
 13716                           ;mcc_generated_files/uart1.c: 131:  U1ERRIE = 0x00;
 13717  0058B4  6BFA               	clrf	250,b	;volatile
 13718                           
 13719                           ; BSR set to: 61
 13720                           ;mcc_generated_files/uart1.c: 135:  uart1TxHead = 0;
 13721  0058B6  6A3C               	clrf	_uart1TxHead,c	;volatile
 13722                           
 13723                           ; BSR set to: 61
 13724                           ;mcc_generated_files/uart1.c: 136:  uart1TxTail = 0;
 13725  0058B8  6A3B               	clrf	_uart1TxTail,c	;volatile
 13726                           
 13727                           ; BSR set to: 61
 13728                           ;mcc_generated_files/uart1.c: 137:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 13729  0058BA  0E40               	movlw	64
 13730  0058BC  6E3A               	movwf	_uart1TxBufferRemaining,c	;volatile
 13731                           
 13732                           ; BSR set to: 61
 13733                           ;mcc_generated_files/uart1.c: 138:  uart1RxHead = 0;
 13734  0058BE  6A39               	clrf	_uart1RxHead,c	;volatile
 13735                           
 13736                           ; BSR set to: 61
 13737                           ;mcc_generated_files/uart1.c: 139:  uart1RxTail = 0;
 13738  0058C0  6A38               	clrf	_uart1RxTail,c	;volatile
 13739                           
 13740                           ; BSR set to: 61
 13741                           ;mcc_generated_files/uart1.c: 140:  uart1RxCount = 0;
 13742  0058C2  6A37               	clrf	_uart1RxCount,c	;volatile
 13743                           
 13744                           ; BSR set to: 61
 13745                           ;mcc_generated_files/uart1.c: 143:  PIE3bits.U1RXIE = 1;
 13746  0058C4  0139               	movlb	57	; () banked
 13747  0058C6  8793               	bsf	147,3,b	;volatile
 13748                           
 13749                           ; BSR set to: 57
 13750                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 13751  0058C8  0012               	return		;funcret
 13752  0058CA                     __end_of_UART1_Initialize:
 13753                           	opt callstack 0
 13754                           
 13755 ;; *************** function _UART1_SetTxInterruptHandler *****************
 13756 ;; Defined at:
 13757 ;;		line 244 in file "mcc_generated_files/uart1.c"
 13758 ;; Parameters:    Size  Location     Type
 13759 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13760 ;;		 -> UART1_Transmit_ISR(1), 
 13761 ;; Auto vars:     Size  Location     Type
 13762 ;;		None
 13763 ;; Return value:  Size  Location     Type
 13764 ;;                  1  [STACK] void 
 13765 ;; Registers used:
 13766 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13767 ;; Tracked objects:
 13768 ;;		On entry : 3F/39
 13769 ;;		On exit  : 0/0
 13770 ;;		Unchanged: 0/0
 13771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13776 ;;Total ram usage:        0 bytes
 13777 ;; Hardware stack levels used:    1
 13778 ;; Hardware stack levels required when called:    3
 13779 ;; This function calls:
 13780 ;;		Nothing
 13781 ;; This function is called by:
 13782 ;;		_UART1_Initialize
 13783 ;; This function uses a reentrant model
 13784 ;;
 13785                           
 13786                           	psect	text60
 13787  0060D0                     __ptext60:
 13788                           	opt callstack 0
 13789  0060D0                     _UART1_SetTxInterruptHandler:
 13790                           	opt callstack 25
 13791                           
 13792                           ;mcc_generated_files/uart1.c: 244: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 245: {;mcc_generated_files/uart1.c: 246:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 13793                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13794                           
 13795                           ; BSR set to: 57
 13796                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13797                           ;incstack = 0
 13798  0060D0  50E1               	movf	fsr1l,w,c
 13799  0060D2  0FFD               	addlw	-3
 13800  0060D4  6ED9               	movwf	fsr2l,c
 13801  0060D6  50E2               	movf	fsr1h,w,c
 13802  0060D8  6EDA               	movwf	fsr2h,c
 13803  0060DA  0EFF               	movlw	255
 13804  0060DC  22DA               	addwfc	fsr2h,f,c
 13805  0060DE  006F FF78  F008    	movff	postinc2,_UART1_TxInterruptHandler
 13806  0060E4  006F FF78  F009    	movff	postinc2,_UART1_TxInterruptHandler+1
 13807  0060EA  006F FF74  F00A    	movff	postdec2,_UART1_TxInterruptHandler+2
 13808                           
 13809                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13810  0060F0  52E5               	movf	postdec1,f,c
 13811  0060F2  52E5               	movf	postdec1,f,c
 13812  0060F4  52E5               	movf	postdec1,f,c
 13813  0060F6  0012               	return		;funcret
 13814  0060F8                     __end_of_UART1_SetTxInterruptHandler:
 13815                           	opt callstack 0
 13816                           
 13817 ;; *************** function _UART1_SetRxInterruptHandler *****************
 13818 ;; Defined at:
 13819 ;;		line 239 in file "mcc_generated_files/uart1.c"
 13820 ;; Parameters:    Size  Location     Type
 13821 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13822 ;;		 -> UART1_Receive_ISR(1), 
 13823 ;; Auto vars:     Size  Location     Type
 13824 ;;		None
 13825 ;; Return value:  Size  Location     Type
 13826 ;;                  1  [STACK] void 
 13827 ;; Registers used:
 13828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13829 ;; Tracked objects:
 13830 ;;		On entry : 3F/39
 13831 ;;		On exit  : 0/0
 13832 ;;		Unchanged: 0/0
 13833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13838 ;;Total ram usage:        0 bytes
 13839 ;; Hardware stack levels used:    1
 13840 ;; Hardware stack levels required when called:    3
 13841 ;; This function calls:
 13842 ;;		Nothing
 13843 ;; This function is called by:
 13844 ;;		_UART1_Initialize
 13845 ;; This function uses a reentrant model
 13846 ;;
 13847                           
 13848                           	psect	text61
 13849  0060F8                     __ptext61:
 13850                           	opt callstack 0
 13851  0060F8                     _UART1_SetRxInterruptHandler:
 13852                           	opt callstack 25
 13853                           
 13854                           ;mcc_generated_files/uart1.c: 239: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 240: {;mcc_generated_files/uart1.c: 241:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 13855                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13856                           
 13857                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13858                           ;incstack = 0
 13859  0060F8  50E1               	movf	fsr1l,w,c
 13860  0060FA  0FFD               	addlw	-3
 13861  0060FC  6ED9               	movwf	fsr2l,c
 13862  0060FE  50E2               	movf	fsr1h,w,c
 13863  006100  6EDA               	movwf	fsr2h,c
 13864  006102  0EFF               	movlw	255
 13865  006104  22DA               	addwfc	fsr2h,f,c
 13866  006106  006F FF78  F00B    	movff	postinc2,_UART1_RxInterruptHandler
 13867  00610C  006F FF78  F00C    	movff	postinc2,_UART1_RxInterruptHandler+1
 13868  006112  006F FF74  F00D    	movff	postdec2,_UART1_RxInterruptHandler+2
 13869                           
 13870                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 13871  006118  52E5               	movf	postdec1,f,c
 13872  00611A  52E5               	movf	postdec1,f,c
 13873  00611C  52E5               	movf	postdec1,f,c
 13874  00611E  0012               	return		;funcret
 13875  006120                     __end_of_UART1_SetRxInterruptHandler:
 13876                           	opt callstack 0
 13877                           
 13878 ;; *************** function _TMR6_Initialize *****************
 13879 ;; Defined at:
 13880 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 13881 ;; Parameters:    Size  Location     Type
 13882 ;;		None
 13883 ;; Auto vars:     Size  Location     Type
 13884 ;;		None
 13885 ;; Return value:  Size  Location     Type
 13886 ;;                  1  [STACK] void 
 13887 ;; Registers used:
 13888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 13889 ;; Tracked objects:
 13890 ;;		On entry : 3F/39
 13891 ;;		On exit  : 0/0
 13892 ;;		Unchanged: 0/0
 13893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13898 ;;Total ram usage:        0 bytes
 13899 ;; Hardware stack levels used:    1
 13900 ;; Hardware stack levels required when called:    4
 13901 ;; This function calls:
 13902 ;;		_TMR6_SetInterruptHandler
 13903 ;; This function is called by:
 13904 ;;		_SYSTEM_Initialize
 13905 ;; This function uses a reentrant model
 13906 ;;
 13907                           
 13908                           	psect	text62
 13909  006120                     __ptext62:
 13910                           	opt callstack 0
 13911  006120                     _TMR6_Initialize:
 13912                           	opt callstack 25
 13913                           
 13914                           ;mcc_generated_files/tmr6.c: 75:  T6CLKCON = 0x01;
 13915                           
 13916                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13917                           ;incstack = 0
 13918  006120  0E01               	movlw	1
 13919  006122  6E96               	movwf	16278,c	;volatile
 13920                           
 13921                           ;mcc_generated_files/tmr6.c: 78:  T6HLT = 0x00;
 13922  006124  6A95               	clrf	16277,c	;volatile
 13923                           
 13924                           ;mcc_generated_files/tmr6.c: 81:  T6RST = 0x00;
 13925  006126  6A97               	clrf	16279,c	;volatile
 13926                           
 13927                           ;mcc_generated_files/tmr6.c: 84:  T6PR = 0x03;
 13928  006128  0E03               	movlw	3
 13929  00612A  6E93               	movwf	16275,c	;volatile
 13930                           
 13931                           ;mcc_generated_files/tmr6.c: 87:  T6TMR = 0x00;
 13932  00612C  6A92               	clrf	16274,c	;volatile
 13933                           
 13934                           ;mcc_generated_files/tmr6.c: 90:  PIR9bits.TMR6IF = 0;
 13935  00612E  0139               	movlb	57	; () banked
 13936  006130  91A9               	bcf	169,0,b	;volatile
 13937                           
 13938                           ; BSR set to: 57
 13939                           ;mcc_generated_files/tmr6.c: 93:  PIE9bits.TMR6IE = 1;
 13940  006132  8199               	bsf	153,0,b	;volatile
 13941                           
 13942                           ; BSR set to: 57
 13943                           ;mcc_generated_files/tmr6.c: 96:  TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandler)
      +                          ;
 13944  006134  0E98               	movlw	low _TMR6_DefaultInterruptHandler
 13945  006136  6EE6               	movwf	postinc1,c
 13946  006138  0E5A               	movlw	high _TMR6_DefaultInterruptHandler
 13947  00613A  6EE6               	movwf	postinc1,c
 13948  00613C  0E00               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 13949  00613E  6EE6               	movwf	postinc1,c
 13950  006140  ECA4  F030         	call	_TMR6_SetInterruptHandler	;wreg free
 13951                           
 13952                           ;mcc_generated_files/tmr6.c: 99:  T6CON = 0xFF;
 13953  006144  6894               	setf	16276,c	;volatile
 13954                           
 13955                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 13956  006146  0012               	return		;funcret
 13957  006148                     __end_of_TMR6_Initialize:
 13958                           	opt callstack 0
 13959                           
 13960 ;; *************** function _TMR6_SetInterruptHandler *****************
 13961 ;; Defined at:
 13962 ;;		line 191 in file "mcc_generated_files/tmr6.c"
 13963 ;; Parameters:    Size  Location     Type
 13964 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 13965 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 13966 ;; Auto vars:     Size  Location     Type
 13967 ;;		None
 13968 ;; Return value:  Size  Location     Type
 13969 ;;                  1  [STACK] void 
 13970 ;; Registers used:
 13971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 13972 ;; Tracked objects:
 13973 ;;		On entry : 3F/39
 13974 ;;		On exit  : 0/0
 13975 ;;		Unchanged: 0/0
 13976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13981 ;;Total ram usage:        0 bytes
 13982 ;; Hardware stack levels used:    1
 13983 ;; Hardware stack levels required when called:    3
 13984 ;; This function calls:
 13985 ;;		Nothing
 13986 ;; This function is called by:
 13987 ;;		_TMR6_Initialize
 13988 ;; This function uses a reentrant model
 13989 ;;
 13990                           
 13991                           	psect	text63
 13992  006148                     __ptext63:
 13993                           	opt callstack 0
 13994  006148                     _TMR6_SetInterruptHandler:
 13995                           	opt callstack 25
 13996                           
 13997                           ;mcc_generated_files/tmr6.c: 191: void TMR6_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr6.c: 192: {;mcc_generated_files/tmr6.c: 193:  TMR6_Inter
      +                          ruptHandler = InterruptHandler;
 13998                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 13999                           
 14000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14001                           ;incstack = 0
 14002  006148  50E1               	movf	fsr1l,w,c
 14003  00614A  0FFD               	addlw	-3
 14004  00614C  6ED9               	movwf	fsr2l,c
 14005  00614E  50E2               	movf	fsr1h,w,c
 14006  006150  6EDA               	movwf	fsr2h,c
 14007  006152  0EFF               	movlw	255
 14008  006154  22DA               	addwfc	fsr2h,f,c
 14009  006156  006F FF78  F0E9    	movff	postinc2,_TMR6_InterruptHandler
 14010  00615C  006F FF78  F0EA    	movff	postinc2,_TMR6_InterruptHandler+1
 14011  006162  006F FF74  F0EB    	movff	postdec2,_TMR6_InterruptHandler+2
 14012                           
 14013                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14014  006168  52E5               	movf	postdec1,f,c
 14015  00616A  52E5               	movf	postdec1,f,c
 14016  00616C  52E5               	movf	postdec1,f,c
 14017  00616E  0012               	return		;funcret
 14018  006170                     __end_of_TMR6_SetInterruptHandler:
 14019                           	opt callstack 0
 14020                           
 14021 ;; *************** function _TMR5_Initialize *****************
 14022 ;; Defined at:
 14023 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 14024 ;; Parameters:    Size  Location     Type
 14025 ;;		None
 14026 ;; Auto vars:     Size  Location     Type
 14027 ;;		None
 14028 ;; Return value:  Size  Location     Type
 14029 ;;                  1  [STACK] void 
 14030 ;; Registers used:
 14031 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 14032 ;; Tracked objects:
 14033 ;;		On entry : 3F/3C
 14034 ;;		On exit  : 0/0
 14035 ;;		Unchanged: 0/0
 14036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14037 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14038 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14039 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14040 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14041 ;;Total ram usage:        0 bytes
 14042 ;; Hardware stack levels used:    1
 14043 ;; Hardware stack levels required when called:    4
 14044 ;; This function calls:
 14045 ;;		_TMR5_SetInterruptHandler
 14046 ;; This function is called by:
 14047 ;;		_SYSTEM_Initialize
 14048 ;; This function uses a reentrant model
 14049 ;;
 14050                           
 14051                           	psect	text64
 14052  005C12                     __ptext64:
 14053                           	opt callstack 0
 14054  005C12                     _TMR5_Initialize:
 14055                           	opt callstack 25
 14056                           
 14057                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 14058                           
 14059                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14060                           ;incstack = 0
 14061  005C12  6A9B               	clrf	16283,c	;volatile
 14062                           
 14063                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 14064  005C14  6A9C               	clrf	16284,c	;volatile
 14065                           
 14066                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 14067  005C16  0E01               	movlw	1
 14068  005C18  6E9D               	movwf	16285,c	;volatile
 14069                           
 14070                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 14071  005C1A  0E63               	movlw	99
 14072  005C1C  6E99               	movwf	16281,c	;volatile
 14073                           
 14074                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 14075  005C1E  0EC0               	movlw	192
 14076  005C20  6E98               	movwf	16280,c	;volatile
 14077                           
 14078                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 14079  005C22  5098               	movf	16280,w,c	;volatile
 14080  005C24  006F FE64  F03D    	movff	16281,btemp	;volatile
 14081  005C2A  6A3E               	clrf	btemp+1,c
 14082  005C2C  0060  F0F4  F03E   	movff	btemp,btemp+1
 14083  005C32  6A3D               	clrf	btemp,c
 14084  005C34  103D               	iorwf	btemp,w,c
 14085  005C36  6E29               	movwf	_timer5ReloadVal,c	;volatile
 14086  005C38  503E               	movf	btemp+1,w,c
 14087  005C3A  6E2A               	movwf	_timer5ReloadVal+1,c	;volatile
 14088                           
 14089                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 14090  005C3C  0139               	movlb	57	; () banked
 14091  005C3E  9DA8               	bcf	168,6,b	;volatile
 14092                           
 14093                           ; BSR set to: 57
 14094                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 14095  005C40  8D98               	bsf	152,6,b	;volatile
 14096                           
 14097                           ; BSR set to: 57
 14098                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 14099  005C42  0EAE               	movlw	low _TMR5_DefaultInterruptHandler
 14100  005C44  6EE6               	movwf	postinc1,c
 14101  005C46  0E64               	movlw	high _TMR5_DefaultInterruptHandler
 14102  005C48  6EE6               	movwf	postinc1,c
 14103  005C4A  0E00               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 14104  005C4C  6EE6               	movwf	postinc1,c
 14105  005C4E  ECB8  F030         	call	_TMR5_SetInterruptHandler	;wreg free
 14106                           
 14107                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 14108  005C52  0E31               	movlw	49
 14109  005C54  6E9A               	movwf	16282,c	;volatile
 14110                           
 14111                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14112  005C56  0012               	return		;funcret
 14113  005C58                     __end_of_TMR5_Initialize:
 14114                           	opt callstack 0
 14115                           
 14116 ;; *************** function _TMR5_SetInterruptHandler *****************
 14117 ;; Defined at:
 14118 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 14119 ;; Parameters:    Size  Location     Type
 14120 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14121 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 14122 ;; Auto vars:     Size  Location     Type
 14123 ;;		None
 14124 ;; Return value:  Size  Location     Type
 14125 ;;                  1  [STACK] void 
 14126 ;; Registers used:
 14127 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14128 ;; Tracked objects:
 14129 ;;		On entry : 3F/39
 14130 ;;		On exit  : 0/0
 14131 ;;		Unchanged: 0/0
 14132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14137 ;;Total ram usage:        0 bytes
 14138 ;; Hardware stack levels used:    1
 14139 ;; Hardware stack levels required when called:    3
 14140 ;; This function calls:
 14141 ;;		Nothing
 14142 ;; This function is called by:
 14143 ;;		_TMR5_Initialize
 14144 ;; This function uses a reentrant model
 14145 ;;
 14146                           
 14147                           	psect	text65
 14148  006170                     __ptext65:
 14149                           	opt callstack 0
 14150  006170                     _TMR5_SetInterruptHandler:
 14151                           	opt callstack 25
 14152                           
 14153                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 14154                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 14155                           
 14156                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14157                           ;incstack = 0
 14158  006170  50E1               	movf	fsr1l,w,c
 14159  006172  0FFD               	addlw	-3
 14160  006174  6ED9               	movwf	fsr2l,c
 14161  006176  50E2               	movf	fsr1h,w,c
 14162  006178  6EDA               	movwf	fsr2h,c
 14163  00617A  0EFF               	movlw	255
 14164  00617C  22DA               	addwfc	fsr2h,f,c
 14165  00617E  006F FF78  F0E6    	movff	postinc2,_TMR5_InterruptHandler
 14166  006184  006F FF78  F0E7    	movff	postinc2,_TMR5_InterruptHandler+1
 14167  00618A  006F FF74  F0E8    	movff	postdec2,_TMR5_InterruptHandler+2
 14168                           
 14169                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 14170  006190  52E5               	movf	postdec1,f,c
 14171  006192  52E5               	movf	postdec1,f,c
 14172  006194  52E5               	movf	postdec1,f,c
 14173  006196  0012               	return		;funcret
 14174  006198                     __end_of_TMR5_SetInterruptHandler:
 14175                           	opt callstack 0
 14176                           
 14177 ;; *************** function _SPI1_Initialize *****************
 14178 ;; Defined at:
 14179 ;;		line 64 in file "mcc_generated_files/spi1.c"
 14180 ;; Parameters:    Size  Location     Type
 14181 ;;		None
 14182 ;; Auto vars:     Size  Location     Type
 14183 ;;		None
 14184 ;; Return value:  Size  Location     Type
 14185 ;;                  1  [STACK] void 
 14186 ;; Registers used:
 14187 ;;		wreg, status,2
 14188 ;; Tracked objects:
 14189 ;;		On entry : 3F/39
 14190 ;;		On exit  : 3F/3D
 14191 ;;		Unchanged: 0/0
 14192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14197 ;;Total ram usage:        0 bytes
 14198 ;; Hardware stack levels used:    1
 14199 ;; Hardware stack levels required when called:    3
 14200 ;; This function calls:
 14201 ;;		Nothing
 14202 ;; This function is called by:
 14203 ;;		_SYSTEM_Initialize
 14204 ;; This function uses a reentrant model
 14205 ;;
 14206                           
 14207                           	psect	text66
 14208  0064C8                     __ptext66:
 14209                           	opt callstack 0
 14210  0064C8                     _SPI1_Initialize:
 14211                           	opt callstack 26
 14212                           
 14213                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 14214                           
 14215                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14216                           ;incstack = 0
 14217  0064C8  0E40               	movlw	64
 14218  0064CA  013D               	movlb	61	; () banked
 14219  0064CC  6F15               	movwf	21,b	;volatile
 14220                           
 14221                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 14222  0064CE  0E03               	movlw	3
 14223  0064D0  6F16               	movwf	22,b	;volatile
 14224                           
 14225                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 14226  0064D2  0E4F               	movlw	79
 14227  0064D4  6F19               	movwf	25,b	;volatile
 14228                           
 14229                           ; BSR set to: 61
 14230                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 14231  0064D6  6B1C               	clrf	28,b	;volatile
 14232                           
 14233                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 14234  0064D8  0E83               	movlw	131
 14235  0064DA  6F14               	movwf	20,b	;volatile
 14236                           
 14237                           ; BSR set to: 61
 14238                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14239  0064DC  0012               	return		;funcret
 14240  0064DE                     __end_of_SPI1_Initialize:
 14241                           	opt callstack 0
 14242                           
 14243 ;; *************** function _PMD_Initialize *****************
 14244 ;; Defined at:
 14245 ;;		line 88 in file "mcc_generated_files/mcc.c"
 14246 ;; Parameters:    Size  Location     Type
 14247 ;;		None
 14248 ;; Auto vars:     Size  Location     Type
 14249 ;;		None
 14250 ;; Return value:  Size  Location     Type
 14251 ;;                  1  [STACK] void 
 14252 ;; Registers used:
 14253 ;;		None
 14254 ;; Tracked objects:
 14255 ;;		On entry : 3F/39
 14256 ;;		On exit  : 3F/39
 14257 ;;		Unchanged: 0/0
 14258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14263 ;;Total ram usage:        0 bytes
 14264 ;; Hardware stack levels used:    1
 14265 ;; Hardware stack levels required when called:    3
 14266 ;; This function calls:
 14267 ;;		Nothing
 14268 ;; This function is called by:
 14269 ;;		_SYSTEM_Initialize
 14270 ;; This function uses a reentrant model
 14271 ;;
 14272                           
 14273                           	psect	text67
 14274  0064F4                     __ptext67:
 14275                           	opt callstack 0
 14276  0064F4                     _PMD_Initialize:
 14277                           	opt callstack 26
 14278                           
 14279                           ;mcc_generated_files/mcc.c: 91:     PMD0 = 0x00;
 14280                           
 14281                           ; BSR set to: 61
 14282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14283                           ;incstack = 0
 14284  0064F4  0139               	movlb	57	; () banked
 14285  0064F6  6BC0               	clrf	192,b	;volatile
 14286                           
 14287                           ;mcc_generated_files/mcc.c: 93:     PMD1 = 0x00;
 14288  0064F8  6BC1               	clrf	193,b	;volatile
 14289                           
 14290                           ;mcc_generated_files/mcc.c: 95:     PMD2 = 0x00;
 14291  0064FA  6BC2               	clrf	194,b	;volatile
 14292                           
 14293                           ;mcc_generated_files/mcc.c: 97:     PMD3 = 0x00;
 14294  0064FC  6BC3               	clrf	195,b	;volatile
 14295                           
 14296                           ;mcc_generated_files/mcc.c: 99:     PMD4 = 0x00;
 14297  0064FE  6BC4               	clrf	196,b	;volatile
 14298                           
 14299                           ;mcc_generated_files/mcc.c: 101:     PMD5 = 0x00;
 14300  006500  6BC5               	clrf	197,b	;volatile
 14301                           
 14302                           ;mcc_generated_files/mcc.c: 103:     PMD6 = 0x00;
 14303  006502  6BC6               	clrf	198,b	;volatile
 14304                           
 14305                           ;mcc_generated_files/mcc.c: 105:     PMD7 = 0x00;
 14306  006504  6BC7               	clrf	199,b	;volatile
 14307                           
 14308                           ; BSR set to: 57
 14309                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 14310  006506  0012               	return		;funcret
 14311  006508                     __end_of_PMD_Initialize:
 14312                           	opt callstack 0
 14313                           
 14314 ;; *************** function _PIN_MANAGER_Initialize *****************
 14315 ;; Defined at:
 14316 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 14317 ;; Parameters:    Size  Location     Type
 14318 ;;		None
 14319 ;; Auto vars:     Size  Location     Type
 14320 ;;		None
 14321 ;; Return value:  Size  Location     Type
 14322 ;;                  1  [STACK] void 
 14323 ;; Registers used:
 14324 ;;		wreg, status,2
 14325 ;; Tracked objects:
 14326 ;;		On entry : 3F/39
 14327 ;;		On exit  : 3F/3A
 14328 ;;		Unchanged: 0/0
 14329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14334 ;;Total ram usage:        0 bytes
 14335 ;; Hardware stack levels used:    1
 14336 ;; Hardware stack levels required when called:    3
 14337 ;; This function calls:
 14338 ;;		Nothing
 14339 ;; This function is called by:
 14340 ;;		_SYSTEM_Initialize
 14341 ;; This function uses a reentrant model
 14342 ;;
 14343                           
 14344                           	psect	text68
 14345  0054AE                     __ptext68:
 14346                           	opt callstack 0
 14347  0054AE                     _PIN_MANAGER_Initialize:
 14348                           	opt callstack 26
 14349                           
 14350                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 14351                           
 14352                           ; BSR set to: 57
 14353                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14354                           ;incstack = 0
 14355  0054AE  0E07               	movlw	7
 14356  0054B0  6EBE               	movwf	16318,c	;volatile
 14357                           
 14358                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 14359  0054B2  6ABD               	clrf	16317,c	;volatile
 14360                           
 14361                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 14362  0054B4  6ABA               	clrf	16314,c	;volatile
 14363                           
 14364                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 14365  0054B6  6ABF               	clrf	16319,c	;volatile
 14366                           
 14367                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 14368  0054B8  6ABB               	clrf	16315,c	;volatile
 14369                           
 14370                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x06;
 14371  0054BA  0E06               	movlw	6
 14372  0054BC  6EBC               	movwf	16316,c	;volatile
 14373                           
 14374                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 14375  0054BE  6AC6               	clrf	16326,c	;volatile
 14376                           
 14377                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0xFF;
 14378  0054C0  68C7               	setf	16327,c	;volatile
 14379                           
 14380                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0x8F;
 14381  0054C2  0E8F               	movlw	143
 14382  0054C4  6EC2               	movwf	16322,c	;volatile
 14383                           
 14384                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 14385  0054C6  0EBF               	movlw	191
 14386  0054C8  6EC3               	movwf	16323,c	;volatile
 14387                           
 14388                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x91;
 14389  0054CA  0E91               	movlw	145
 14390  0054CC  6EC4               	movwf	16324,c	;volatile
 14391                           
 14392                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 14393  0054CE  0E0C               	movlw	12
 14394  0054D0  6EC5               	movwf	16325,c	;volatile
 14395                           
 14396                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 14397  0054D2  013A               	movlb	58	; () banked
 14398  0054D4  6B70               	clrf	112,b	;volatile
 14399                           
 14400                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x01;
 14401  0054D6  0E01               	movlw	1
 14402  0054D8  6F60               	movwf	96,b	;volatile
 14403                           
 14404                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x38;
 14405  0054DA  0E38               	movlw	56
 14406  0054DC  6F50               	movwf	80,b	;volatile
 14407                           
 14408                           ; BSR set to: 58
 14409                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 14410  0054DE  6B80               	clrf	128,b	;volatile
 14411                           
 14412                           ; BSR set to: 58
 14413                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0xFF;
 14414  0054E0  6990               	setf	144,b	;volatile
 14415                           
 14416                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0x8F;
 14417  0054E2  0E8F               	movlw	143
 14418  0054E4  6F40               	movwf	64,b	;volatile
 14419                           
 14420                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0xFC;
 14421  0054E6  0EFC               	movlw	252
 14422  0054E8  6F71               	movwf	113,b	;volatile
 14423                           
 14424                           ; BSR set to: 58
 14425                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x00;
 14426  0054EA  6B91               	clrf	145,b	;volatile
 14427                           
 14428                           ; BSR set to: 58
 14429                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 14430  0054EC  6B81               	clrf	129,b	;volatile
 14431                           
 14432                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 14433  0054EE  0E87               	movlw	135
 14434  0054F0  6F51               	movwf	81,b	;volatile
 14435                           
 14436                           ; BSR set to: 58
 14437                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 14438  0054F2  6B41               	clrf	65,b	;volatile
 14439                           
 14440                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x90;
 14441  0054F4  0E90               	movlw	144
 14442  0054F6  6F61               	movwf	97,b	;volatile
 14443                           
 14444                           ; BSR set to: 58
 14445                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 14446  0054F8  6B82               	clrf	130,b	;volatile
 14447                           
 14448                           ; BSR set to: 58
 14449                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 14450  0054FA  6B92               	clrf	146,b	;volatile
 14451                           
 14452                           ; BSR set to: 58
 14453                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 14454  0054FC  6B42               	clrf	66,b	;volatile
 14455                           
 14456                           ; BSR set to: 58
 14457                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 14458  0054FE  6B52               	clrf	82,b	;volatile
 14459                           
 14460                           ; BSR set to: 58
 14461                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 14462  005500  6B62               	clrf	98,b	;volatile
 14463                           
 14464                           ; BSR set to: 58
 14465                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 14466  005502  6B72               	clrf	114,b	;volatile
 14467                           
 14468                           ; BSR set to: 58
 14469                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 14470  005504  6943               	setf	67,b	;volatile
 14471                           
 14472                           ; BSR set to: 58
 14473                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 14474  005506  6953               	setf	83,b	;volatile
 14475                           
 14476                           ; BSR set to: 58
 14477                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 14478  005508  6963               	setf	99,b	;volatile
 14479                           
 14480                           ; BSR set to: 58
 14481                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 14482  00550A  6973               	setf	115,b	;volatile
 14483                           
 14484                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 14485  00550C  0E07               	movlw	7
 14486  00550E  6F83               	movwf	131,b	;volatile
 14487                           
 14488                           ; BSR set to: 58
 14489                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 14490  005510  6993               	setf	147,b	;volatile
 14491                           
 14492                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 14493  005512  0E0F               	movlw	15
 14494  005514  6FE8               	movwf	232,b	;volatile
 14495                           
 14496                           ;mcc_generated_files/pin_manager.c: 127:     RB6PPS = 0x16;
 14497  005516  0E16               	movlw	22
 14498  005518  6F0E               	movwf	14,b	;volatile
 14499                           
 14500                           ;mcc_generated_files/pin_manager.c: 128:     RC3PPS = 0x1E;
 14501  00551A  0E1E               	movlw	30
 14502  00551C  6F13               	movwf	19,b	;volatile
 14503                           
 14504                           ;mcc_generated_files/pin_manager.c: 129:     INT0PPS = 0x08;
 14505  00551E  0E08               	movlw	8
 14506  005520  6FC0               	movwf	192,b	;volatile
 14507                           
 14508                           ;mcc_generated_files/pin_manager.c: 130:     INT2PPS = 0x0A;
 14509  005522  0E0A               	movlw	10
 14510  005524  6FC2               	movwf	194,b	;volatile
 14511                           
 14512                           ;mcc_generated_files/pin_manager.c: 131:     INT1PPS = 0x09;
 14513  005526  0E09               	movlw	9
 14514  005528  6FC1               	movwf	193,b	;volatile
 14515                           
 14516                           ;mcc_generated_files/pin_manager.c: 132:     U1RXPPS = 0x17;
 14517  00552A  0E17               	movlw	23
 14518  00552C  6FE5               	movwf	229,b	;volatile
 14519                           
 14520                           ;mcc_generated_files/pin_manager.c: 133:     SPI1SCKPPS = 0x13;
 14521  00552E  0E13               	movlw	19
 14522  005530  6FDE               	movwf	222,b	;volatile
 14523                           
 14524                           ;mcc_generated_files/pin_manager.c: 134:     RA4PPS = 0x01;
 14525  005532  0E01               	movlw	1
 14526  005534  6F04               	movwf	4,b	;volatile
 14527                           
 14528                           ;mcc_generated_files/pin_manager.c: 135:     RA5PPS = 0x26;
 14529  005536  0E26               	movlw	38
 14530  005538  6F05               	movwf	5,b	;volatile
 14531                           
 14532                           ;mcc_generated_files/pin_manager.c: 136:     RA6PPS = 0x28;
 14533  00553A  0E28               	movlw	40
 14534  00553C  6F06               	movwf	6,b	;volatile
 14535                           
 14536                           ;mcc_generated_files/pin_manager.c: 137:     RC5PPS = 0x1F;
 14537  00553E  0E1F               	movlw	31
 14538  005540  6F15               	movwf	21,b	;volatile
 14539                           
 14540                           ;mcc_generated_files/pin_manager.c: 138:     RC6PPS = 0x13;
 14541  005542  0E13               	movlw	19
 14542  005544  6F16               	movwf	22,b	;volatile
 14543                           
 14544                           ;mcc_generated_files/pin_manager.c: 139:     SPI1SDIPPS = 0x14;
 14545  005546  0E14               	movlw	20
 14546  005548  6FDF               	movwf	223,b	;volatile
 14547                           
 14548                           ; BSR set to: 58
 14549                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 14550  00554A  0012               	return		;funcret
 14551  00554C                     __end_of_PIN_MANAGER_Initialize:
 14552                           	opt callstack 0
 14553                           
 14554 ;; *************** function _OSCILLATOR_Initialize *****************
 14555 ;; Defined at:
 14556 ;;		line 70 in file "mcc_generated_files/mcc.c"
 14557 ;; Parameters:    Size  Location     Type
 14558 ;;		None
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;		None
 14561 ;; Return value:  Size  Location     Type
 14562 ;;                  1  [STACK] void 
 14563 ;; Registers used:
 14564 ;;		wreg, status,2
 14565 ;; Tracked objects:
 14566 ;;		On entry : 3F/3A
 14567 ;;		On exit  : 3F/39
 14568 ;;		Unchanged: 0/0
 14569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14574 ;;Total ram usage:        0 bytes
 14575 ;; Hardware stack levels used:    1
 14576 ;; Hardware stack levels required when called:    3
 14577 ;; This function calls:
 14578 ;;		Nothing
 14579 ;; This function is called by:
 14580 ;;		_SYSTEM_Initialize
 14581 ;; This function uses a reentrant model
 14582 ;;
 14583                           
 14584                           	psect	text69
 14585  0064DE                     __ptext69:
 14586                           	opt callstack 0
 14587  0064DE                     _OSCILLATOR_Initialize:
 14588                           	opt callstack 26
 14589                           
 14590                           ;mcc_generated_files/mcc.c: 73:     OSCCON1 = 0x20;
 14591                           
 14592                           ; BSR set to: 58
 14593                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14594                           ;incstack = 0
 14595  0064DE  0E20               	movlw	32
 14596  0064E0  0139               	movlb	57	; () banked
 14597  0064E2  6FD9               	movwf	217,b	;volatile
 14598                           
 14599                           ; BSR set to: 57
 14600                           ;mcc_generated_files/mcc.c: 75:     OSCCON3 = 0x00;
 14601  0064E4  6BDB               	clrf	219,b	;volatile
 14602                           
 14603                           ; BSR set to: 57
 14604                           ;mcc_generated_files/mcc.c: 77:     OSCEN = 0x00;
 14605  0064E6  6BDD               	clrf	221,b	;volatile
 14606                           
 14607                           ;mcc_generated_files/mcc.c: 79:     OSCFRQ = 0x02;
 14608  0064E8  0E02               	movlw	2
 14609  0064EA  6FDF               	movwf	223,b	;volatile
 14610                           
 14611                           ; BSR set to: 57
 14612                           ;mcc_generated_files/mcc.c: 81:     OSCTUNE = 0x00;
 14613  0064EC  6BDE               	clrf	222,b	;volatile
 14614  0064EE                     l194:
 14615                           
 14616                           ; BSR set to: 57
 14617                           ;mcc_generated_files/mcc.c: 83:     while(PLLR == 0)
 14618  0064EE  B1DC               	btfsc	220,0,b	;volatile
 14619  0064F0  0012               	return	
 14620  0064F2  D7FD               	goto	l194
 14621  0064F4                     __end_of_OSCILLATOR_Initialize:
 14622                           	opt callstack 0
 14623                           
 14624 ;; *************** function _NCO1_Initialize *****************
 14625 ;; Defined at:
 14626 ;;		line 58 in file "mcc_generated_files/nco1.c"
 14627 ;; Parameters:    Size  Location     Type
 14628 ;;		None
 14629 ;; Auto vars:     Size  Location     Type
 14630 ;;		None
 14631 ;; Return value:  Size  Location     Type
 14632 ;;                  1  [STACK] void 
 14633 ;; Registers used:
 14634 ;;		wreg, status,2
 14635 ;; Tracked objects:
 14636 ;;		On entry : 0/39
 14637 ;;		On exit  : 3F/3F
 14638 ;;		Unchanged: 0/0
 14639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14644 ;;Total ram usage:        0 bytes
 14645 ;; Hardware stack levels used:    1
 14646 ;; Hardware stack levels required when called:    3
 14647 ;; This function calls:
 14648 ;;		Nothing
 14649 ;; This function is called by:
 14650 ;;		_SYSTEM_Initialize
 14651 ;; This function uses a reentrant model
 14652 ;;
 14653                           
 14654                           	psect	text70
 14655  006440                     __ptext70:
 14656                           	opt callstack 0
 14657  006440                     _NCO1_Initialize:
 14658                           	opt callstack 26
 14659                           
 14660                           ;mcc_generated_files/nco1.c: 62:     NCO1CON = 0x00;
 14661                           
 14662                           ; BSR set to: 57
 14663                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14664                           ;incstack = 0
 14665  006440  013F               	movlb	63	; () banked
 14666  006442  6B3E               	clrf	62,b	;volatile
 14667                           
 14668                           ;mcc_generated_files/nco1.c: 64:     NCO1CLK = 0x00;
 14669  006444  6B3F               	clrf	63,b	;volatile
 14670                           
 14671                           ;mcc_generated_files/nco1.c: 66:     NCO1ACCU = 0x00;
 14672  006446  6B3A               	clrf	58,b	;volatile
 14673                           
 14674                           ;mcc_generated_files/nco1.c: 68:     NCO1ACCH = 0x00;
 14675  006448  6B39               	clrf	57,b	;volatile
 14676                           
 14677                           ;mcc_generated_files/nco1.c: 70:     NCO1ACCL = 0x00;
 14678  00644A  6B38               	clrf	56,b	;volatile
 14679                           
 14680                           ; BSR set to: 63
 14681                           ;mcc_generated_files/nco1.c: 72:     NCO1INCU = 0x06;
 14682  00644C  0E06               	movlw	6
 14683  00644E  6F3D               	movwf	61,b	;volatile
 14684                           
 14685                           ;mcc_generated_files/nco1.c: 74:     NCO1INCH = 0xC7;
 14686  006450  0EC7               	movlw	199
 14687  006452  6F3C               	movwf	60,b	;volatile
 14688                           
 14689                           ;mcc_generated_files/nco1.c: 76:     NCO1INCL = 0xAE;
 14690  006454  0EAE               	movlw	174
 14691  006456  6F3B               	movwf	59,b	;volatile
 14692                           
 14693                           ; BSR set to: 63
 14694                           ;mcc_generated_files/nco1.c: 79:     NCO1CONbits.EN = 1;
 14695  006458  8F3E               	bsf	62,7,b	;volatile
 14696                           
 14697                           ; BSR set to: 63
 14698                           ; _NCO1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 14699  00645A  0012               	return		;funcret
 14700  00645C                     __end_of_NCO1_Initialize:
 14701                           	opt callstack 0
 14702                           
 14703 ;; *************** function _INTERRUPT_Initialize *****************
 14704 ;; Defined at:
 14705 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 14706 ;; Parameters:    Size  Location     Type
 14707 ;;		None
 14708 ;; Auto vars:     Size  Location     Type
 14709 ;;  state           1  [STACK] _Bool 
 14710 ;; Return value:  Size  Location     Type
 14711 ;;                  1  [STACK] void 
 14712 ;; Registers used:
 14713 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 14714 ;; Tracked objects:
 14715 ;;		On entry : 0/0
 14716 ;;		On exit  : 3F/39
 14717 ;;		Unchanged: 0/0
 14718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14723 ;;Total ram usage:        0 bytes
 14724 ;; Hardware stack levels used:    1
 14725 ;; Hardware stack levels required when called:    3
 14726 ;; This function calls:
 14727 ;;		Nothing
 14728 ;; This function is called by:
 14729 ;;		_SYSTEM_Initialize
 14730 ;; This function uses a reentrant model
 14731 ;;
 14732                           
 14733                           	psect	text71
 14734  005800                     __ptext71:
 14735                           	opt callstack 0
 14736  005800                     _INTERRUPT_Initialize:
 14737                           	opt callstack 0
 14738                           
 14739                           ; BSR set to: 63
 14740                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14741  005800  52E6               	movf	postinc1,f,c
 14742                           
 14743                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 14744                           
 14745                           ;incstack = 0
 14746  005802  8AD2               	bsf	16338,5,c	;volatile
 14747                           
 14748                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 14749  005804  AED2               	btfss	16338,7,c	;volatile
 14750  005806  D003               	goto	u3300
 14751  005808  6A48               	clrf	btemp+11,c
 14752  00580A  2A48               	incf	btemp+11,f,c
 14753  00580C  D001               	goto	u3318
 14754  00580E                     u3300:
 14755  00580E  6A48               	clrf	btemp+11,c
 14756  005810                     u3318:
 14757                           
 14758                           ;stkvar	_state @ sp[(-1)+0]
 14759  005810  0EFF               	movlw	-1
 14760  005812  0060  F123  FFE3   	movff	btemp+11,plusw1
 14761                           
 14762                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 14763  005818  9ED2               	bcf	16338,7,c	;volatile
 14764                           
 14765                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 14766  00581A  0E55               	movlw	85
 14767  00581C  6ED4               	movwf	16340,c	;volatile
 14768                           
 14769                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 14770  00581E  0EAA               	movlw	170
 14771  005820  6ED4               	movwf	16340,c	;volatile
 14772                           
 14773                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 14774  005822  90D4               	bcf	16340,0,c	;volatile
 14775                           
 14776                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 14777  005824  0138               	movlb	56	; () banked
 14778  005826  6B9F               	clrf	159,b	;volatile
 14779                           
 14780                           ; BSR set to: 56
 14781                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 14782  005828  6B9E               	clrf	158,b	;volatile
 14783                           
 14784                           ; BSR set to: 56
 14785                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 14786  00582A  0E08               	movlw	8
 14787  00582C  6F9D               	movwf	157,b	;volatile
 14788                           
 14789                           ; BSR set to: 56
 14790                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 14791  00582E  0E55               	movlw	85
 14792  005830  6ED4               	movwf	16340,c	;volatile
 14793                           
 14794                           ; BSR set to: 56
 14795                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 14796  005832  0EAA               	movlw	170
 14797  005834  6ED4               	movwf	16340,c	;volatile
 14798                           
 14799                           ; BSR set to: 56
 14800                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 14801  005836  80D4               	bsf	16340,0,c	;volatile
 14802                           
 14803                           ; BSR set to: 56
 14804                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 14805                           ;stkvar	_state @ sp[(-1)+0]
 14806  005838  0EFF               	movlw	-1
 14807  00583A  B0E3               	btfsc	plusw1,0,c
 14808  00583C  D002               	bra	u3325
 14809  00583E  9ED2               	bcf	16338,7,c	;volatile
 14810  005840  D001               	bra	u3326
 14811  005842                     u3325:
 14812  005842  8ED2               	bsf	16338,7,c	;volatile
 14813  005844                     u3326:
 14814                           
 14815                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 14816  005844  0139               	movlb	57	; () banked
 14817  005846  8782               	bsf	130,3,b	;volatile
 14818                           
 14819                           ; BSR set to: 57
 14820                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 14821  005848  8382               	bsf	130,1,b	;volatile
 14822                           
 14823                           ; BSR set to: 57
 14824                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 14825  00584A  8182               	bsf	130,0,b	;volatile
 14826                           
 14827                           ; BSR set to: 57
 14828                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 14829  00584C  8582               	bsf	130,2,b	;volatile
 14830                           
 14831                           ; BSR set to: 57
 14832                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 14833  00584E  8786               	bsf	134,3,b	;volatile
 14834                           
 14835                           ; BSR set to: 57
 14836                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 14837  005850  8586               	bsf	134,2,b	;volatile
 14838                           
 14839                           ; BSR set to: 57
 14840                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 14841  005852  8983               	bsf	131,4,b	;volatile
 14842                           
 14843                           ; BSR set to: 57
 14844                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 14845  005854  8783               	bsf	131,3,b	;volatile
 14846                           
 14847                           ; BSR set to: 57
 14848                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 14849  005856  8181               	bsf	129,0,b	;volatile
 14850                           
 14851                           ; BSR set to: 57
 14852                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 14853  005858  8185               	bsf	133,0,b	;volatile
 14854                           
 14855                           ; BSR set to: 57
 14856                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR7bits.INT2IP = 1;
 14857  00585A  8B87               	bsf	135,5,b	;volatile
 14858                           
 14859                           ; BSR set to: 57
 14860                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR9bits.TMR6IP = 1;
 14861  00585C  8189               	bsf	137,0,b	;volatile
 14862                           
 14863                           ; BSR set to: 57
 14864                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR8bits.TMR5IP = 1;
 14865  00585E  8D88               	bsf	136,6,b	;volatile
 14866                           
 14867                           ; BSR set to: 57
 14868                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADIP = 1;
 14869  005860  8581               	bsf	129,2,b	;volatile
 14870                           
 14871                           ; BSR set to: 57
 14872                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 14873  005862  52E5               	movf	postdec1,f,c
 14874  005864  0012               	return		;funcret
 14875  005866                     __end_of_INTERRUPT_Initialize:
 14876                           	opt callstack 0
 14877                           
 14878 ;; *************** function _EXT_INT_Initialize *****************
 14879 ;; Defined at:
 14880 ;;		line 119 in file "mcc_generated_files/ext_int.c"
 14881 ;; Parameters:    Size  Location     Type
 14882 ;;		None
 14883 ;; Auto vars:     Size  Location     Type
 14884 ;;		None
 14885 ;; Return value:  Size  Location     Type
 14886 ;;                  1  [STACK] void 
 14887 ;; Registers used:
 14888 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 14889 ;; Tracked objects:
 14890 ;;		On entry : 3F/3F
 14891 ;;		On exit  : 3F/39
 14892 ;;		Unchanged: 0/0
 14893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14894 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14895 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14897 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14898 ;;Total ram usage:        0 bytes
 14899 ;; Hardware stack levels used:    1
 14900 ;; Hardware stack levels required when called:    4
 14901 ;; This function calls:
 14902 ;;		_INT0_SetInterruptHandler
 14903 ;;		_INT1_SetInterruptHandler
 14904 ;;		_INT2_SetInterruptHandler
 14905 ;; This function is called by:
 14906 ;;		_SYSTEM_Initialize
 14907 ;; This function uses a reentrant model
 14908 ;;
 14909                           
 14910                           	psect	text72
 14911  005B36                     __ptext72:
 14912                           	opt callstack 0
 14913  005B36                     _EXT_INT_Initialize:
 14914                           	opt callstack 25
 14915                           
 14916                           ;mcc_generated_files/ext_int.c: 124:  (PIR1bits.INT0IF = 0);
 14917                           
 14918                           ; BSR set to: 57
 14919                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14920                           ;incstack = 0
 14921  005B36  0139               	movlb	57	; () banked
 14922  005B38  91A1               	bcf	161,0,b	;volatile
 14923                           
 14924                           ;mcc_generated_files/ext_int.c: 125:  (INTCON0bits.INT0EDG = 0);
 14925  005B3A  90D2               	bcf	16338,0,c	;volatile
 14926                           
 14927                           ; BSR set to: 57
 14928                           ;mcc_generated_files/ext_int.c: 127:  INT0_SetInterruptHandler(INT0_DefaultInterruptHand
      +                          ler);
 14929  005B3C  0EB6               	movlw	low _INT0_DefaultInterruptHandler
 14930  005B3E  6EE6               	movwf	postinc1,c
 14931  005B40  0E65               	movlw	high _INT0_DefaultInterruptHandler
 14932  005B42  6EE6               	movwf	postinc1,c
 14933  005B44  0E00               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 14934  005B46  6EE6               	movwf	postinc1,c
 14935  005B48  ECF4  F030         	call	_INT0_SetInterruptHandler	;wreg free
 14936                           
 14937                           ;mcc_generated_files/ext_int.c: 128:  (PIE1bits.INT0IE = 1);
 14938  005B4C  0139               	movlb	57	; () banked
 14939  005B4E  8191               	bsf	145,0,b	;volatile
 14940                           
 14941                           ; BSR set to: 57
 14942                           ;mcc_generated_files/ext_int.c: 133:  (PIR5bits.INT1IF = 0);
 14943  005B50  91A5               	bcf	165,0,b	;volatile
 14944                           
 14945                           ; BSR set to: 57
 14946                           ;mcc_generated_files/ext_int.c: 134:  (INTCON0bits.INT1EDG = 0);
 14947  005B52  92D2               	bcf	16338,1,c	;volatile
 14948                           
 14949                           ;mcc_generated_files/ext_int.c: 136:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 14950  005B54  0EB8               	movlw	low _INT1_DefaultInterruptHandler
 14951  005B56  6EE6               	movwf	postinc1,c
 14952  005B58  0E65               	movlw	high _INT1_DefaultInterruptHandler
 14953  005B5A  6EE6               	movwf	postinc1,c
 14954  005B5C  0E00               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 14955  005B5E  6EE6               	movwf	postinc1,c
 14956  005B60  ECE0  F030         	call	_INT1_SetInterruptHandler	;wreg free
 14957                           
 14958                           ;mcc_generated_files/ext_int.c: 137:  (PIE5bits.INT1IE = 1);
 14959  005B64  0139               	movlb	57	; () banked
 14960  005B66  8195               	bsf	149,0,b	;volatile
 14961                           
 14962                           ; BSR set to: 57
 14963                           ;mcc_generated_files/ext_int.c: 142:  (PIR7bits.INT2IF = 0);
 14964  005B68  9BA7               	bcf	167,5,b	;volatile
 14965                           
 14966                           ; BSR set to: 57
 14967                           ;mcc_generated_files/ext_int.c: 143:  (INTCON0bits.INT2EDG = 0);
 14968  005B6A  94D2               	bcf	16338,2,c	;volatile
 14969                           
 14970                           ;mcc_generated_files/ext_int.c: 145:  INT2_SetInterruptHandler(INT2_DefaultInterruptHand
      +                          ler);
 14971  005B6C  0EBA               	movlw	low _INT2_DefaultInterruptHandler
 14972  005B6E  6EE6               	movwf	postinc1,c
 14973  005B70  0E65               	movlw	high _INT2_DefaultInterruptHandler
 14974  005B72  6EE6               	movwf	postinc1,c
 14975  005B74  0E00               	movlw	low (_INT2_DefaultInterruptHandler shr (0+16))
 14976  005B76  6EE6               	movwf	postinc1,c
 14977  005B78  ECCC  F030         	call	_INT2_SetInterruptHandler	;wreg free
 14978                           
 14979                           ;mcc_generated_files/ext_int.c: 146:  (PIE7bits.INT2IE = 1);
 14980  005B7C  0139               	movlb	57	; () banked
 14981  005B7E  8B97               	bsf	151,5,b	;volatile
 14982                           
 14983                           ; BSR set to: 57
 14984                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 14985  005B80  0012               	return		;funcret
 14986  005B82                     __end_of_EXT_INT_Initialize:
 14987                           	opt callstack 0
 14988                           
 14989 ;; *************** function _INT2_SetInterruptHandler *****************
 14990 ;; Defined at:
 14991 ;;		line 108 in file "mcc_generated_files/ext_int.c"
 14992 ;; Parameters:    Size  Location     Type
 14993 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 14994 ;;		 -> INT2_DefaultInterruptHandler(1), 
 14995 ;; Auto vars:     Size  Location     Type
 14996 ;;		None
 14997 ;; Return value:  Size  Location     Type
 14998 ;;                  1  [STACK] void 
 14999 ;; Registers used:
 15000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15001 ;; Tracked objects:
 15002 ;;		On entry : 3F/39
 15003 ;;		On exit  : 0/0
 15004 ;;		Unchanged: 0/0
 15005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15007 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15009 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15010 ;;Total ram usage:        0 bytes
 15011 ;; Hardware stack levels used:    1
 15012 ;; Hardware stack levels required when called:    3
 15013 ;; This function calls:
 15014 ;;		Nothing
 15015 ;; This function is called by:
 15016 ;;		_EXT_INT_Initialize
 15017 ;; This function uses a reentrant model
 15018 ;;
 15019                           
 15020                           	psect	text73
 15021  006198                     __ptext73:
 15022                           	opt callstack 0
 15023  006198                     _INT2_SetInterruptHandler:
 15024                           	opt callstack 25
 15025                           
 15026                           ;mcc_generated_files/ext_int.c: 108: void INT2_SetInterruptHandler(void (* InterruptHand
      +                          ler)(void));mcc_generated_files/ext_int.c: 109: {;mcc_generated_files/ext_int.c: 110:  I
      +                          NT2_InterruptHandler = InterruptHandler;
 15027                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15028                           
 15029                           ; BSR set to: 57
 15030                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15031                           ;incstack = 0
 15032  006198  50E1               	movf	fsr1l,w,c
 15033  00619A  0FFD               	addlw	-3
 15034  00619C  6ED9               	movwf	fsr2l,c
 15035  00619E  50E2               	movf	fsr1h,w,c
 15036  0061A0  6EDA               	movwf	fsr2h,c
 15037  0061A2  0EFF               	movlw	255
 15038  0061A4  22DA               	addwfc	fsr2h,f,c
 15039  0061A6  006F FF78  F014    	movff	postinc2,_INT2_InterruptHandler
 15040  0061AC  006F FF78  F015    	movff	postinc2,_INT2_InterruptHandler+1
 15041  0061B2  006F FF74  F016    	movff	postdec2,_INT2_InterruptHandler+2
 15042                           
 15043                           ; _INT2_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15044  0061B8  52E5               	movf	postdec1,f,c
 15045  0061BA  52E5               	movf	postdec1,f,c
 15046  0061BC  52E5               	movf	postdec1,f,c
 15047  0061BE  0012               	return		;funcret
 15048  0061C0                     __end_of_INT2_SetInterruptHandler:
 15049                           	opt callstack 0
 15050                           
 15051 ;; *************** function _INT1_SetInterruptHandler *****************
 15052 ;; Defined at:
 15053 ;;		line 81 in file "mcc_generated_files/ext_int.c"
 15054 ;; Parameters:    Size  Location     Type
 15055 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15056 ;;		 -> INT1_DefaultInterruptHandler(1), 
 15057 ;; Auto vars:     Size  Location     Type
 15058 ;;		None
 15059 ;; Return value:  Size  Location     Type
 15060 ;;                  1  [STACK] void 
 15061 ;; Registers used:
 15062 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15063 ;; Tracked objects:
 15064 ;;		On entry : 3F/39
 15065 ;;		On exit  : 0/0
 15066 ;;		Unchanged: 0/0
 15067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15072 ;;Total ram usage:        0 bytes
 15073 ;; Hardware stack levels used:    1
 15074 ;; Hardware stack levels required when called:    3
 15075 ;; This function calls:
 15076 ;;		Nothing
 15077 ;; This function is called by:
 15078 ;;		_EXT_INT_Initialize
 15079 ;; This function uses a reentrant model
 15080 ;;
 15081                           
 15082                           	psect	text74
 15083  0061C0                     __ptext74:
 15084                           	opt callstack 0
 15085  0061C0                     _INT1_SetInterruptHandler:
 15086                           	opt callstack 25
 15087                           
 15088                           ;mcc_generated_files/ext_int.c: 81: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 82: {;mcc_generated_files/ext_int.c: 83:  INT1
      +                          _InterruptHandler = InterruptHandler;
 15089                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15090                           
 15091                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15092                           ;incstack = 0
 15093  0061C0  50E1               	movf	fsr1l,w,c
 15094  0061C2  0FFD               	addlw	-3
 15095  0061C4  6ED9               	movwf	fsr2l,c
 15096  0061C6  50E2               	movf	fsr1h,w,c
 15097  0061C8  6EDA               	movwf	fsr2h,c
 15098  0061CA  0EFF               	movlw	255
 15099  0061CC  22DA               	addwfc	fsr2h,f,c
 15100  0061CE  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler
 15101  0061D4  006F FF78  F018    	movff	postinc2,_INT1_InterruptHandler+1
 15102  0061DA  006F FF74  F019    	movff	postdec2,_INT1_InterruptHandler+2
 15103                           
 15104                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15105  0061E0  52E5               	movf	postdec1,f,c
 15106  0061E2  52E5               	movf	postdec1,f,c
 15107  0061E4  52E5               	movf	postdec1,f,c
 15108  0061E6  0012               	return		;funcret
 15109  0061E8                     __end_of_INT1_SetInterruptHandler:
 15110                           	opt callstack 0
 15111                           
 15112 ;; *************** function _INT0_SetInterruptHandler *****************
 15113 ;; Defined at:
 15114 ;;		line 54 in file "mcc_generated_files/ext_int.c"
 15115 ;; Parameters:    Size  Location     Type
 15116 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15117 ;;		 -> INT0_DefaultInterruptHandler(1), 
 15118 ;; Auto vars:     Size  Location     Type
 15119 ;;		None
 15120 ;; Return value:  Size  Location     Type
 15121 ;;                  1  [STACK] void 
 15122 ;; Registers used:
 15123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15124 ;; Tracked objects:
 15125 ;;		On entry : 3F/39
 15126 ;;		On exit  : 0/0
 15127 ;;		Unchanged: 0/0
 15128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15133 ;;Total ram usage:        0 bytes
 15134 ;; Hardware stack levels used:    1
 15135 ;; Hardware stack levels required when called:    3
 15136 ;; This function calls:
 15137 ;;		Nothing
 15138 ;; This function is called by:
 15139 ;;		_EXT_INT_Initialize
 15140 ;; This function uses a reentrant model
 15141 ;;
 15142                           
 15143                           	psect	text75
 15144  0061E8                     __ptext75:
 15145                           	opt callstack 0
 15146  0061E8                     _INT0_SetInterruptHandler:
 15147                           	opt callstack 25
 15148                           
 15149                           ;mcc_generated_files/ext_int.c: 54: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 55: {;mcc_generated_files/ext_int.c: 56:  INT0
      +                          _InterruptHandler = InterruptHandler;
 15150                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15151                           
 15152                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15153                           ;incstack = 0
 15154  0061E8  50E1               	movf	fsr1l,w,c
 15155  0061EA  0FFD               	addlw	-3
 15156  0061EC  6ED9               	movwf	fsr2l,c
 15157  0061EE  50E2               	movf	fsr1h,w,c
 15158  0061F0  6EDA               	movwf	fsr2h,c
 15159  0061F2  0EFF               	movlw	255
 15160  0061F4  22DA               	addwfc	fsr2h,f,c
 15161  0061F6  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler
 15162  0061FC  006F FF78  F01B    	movff	postinc2,_INT0_InterruptHandler+1
 15163  006202  006F FF74  F01C    	movff	postdec2,_INT0_InterruptHandler+2
 15164                           
 15165                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 15166  006208  52E5               	movf	postdec1,f,c
 15167  00620A  52E5               	movf	postdec1,f,c
 15168  00620C  52E5               	movf	postdec1,f,c
 15169  00620E  0012               	return		;funcret
 15170  006210                     __end_of_INT0_SetInterruptHandler:
 15171                           	opt callstack 0
 15172                           
 15173 ;; *************** function _DSM_Initialize *****************
 15174 ;; Defined at:
 15175 ;;		line 58 in file "mcc_generated_files/dsm.c"
 15176 ;; Parameters:    Size  Location     Type
 15177 ;;		None
 15178 ;; Auto vars:     Size  Location     Type
 15179 ;;		None
 15180 ;; Return value:  Size  Location     Type
 15181 ;;                  1  [STACK] void 
 15182 ;; Registers used:
 15183 ;;		wreg, status,2
 15184 ;; Tracked objects:
 15185 ;;		On entry : 0/3C
 15186 ;;		On exit  : 3F/3C
 15187 ;;		Unchanged: 0/0
 15188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15192 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15193 ;;Total ram usage:        0 bytes
 15194 ;; Hardware stack levels used:    1
 15195 ;; Hardware stack levels required when called:    3
 15196 ;; This function calls:
 15197 ;;		Nothing
 15198 ;; This function is called by:
 15199 ;;		_SYSTEM_Initialize
 15200 ;; This function uses a reentrant model
 15201 ;;
 15202                           
 15203                           	psect	text76
 15204  00645C                     __ptext76:
 15205                           	opt callstack 0
 15206  00645C                     _DSM_Initialize:
 15207                           	opt callstack 26
 15208                           
 15209                           ;mcc_generated_files/dsm.c: 63:     MD1CON0bits.MD1OPOL = 0;
 15210                           
 15211                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15212                           ;incstack = 0
 15213  00645C  013C               	movlb	60	; () banked
 15214  00645E  99FA               	bcf	250,4,b	;volatile
 15215                           
 15216                           ;mcc_generated_files/dsm.c: 66:     MD1CON1bits.MD1CLSYNC = 1;
 15217  006460  81FB               	bsf	251,0,b	;volatile
 15218                           
 15219                           ;mcc_generated_files/dsm.c: 69:     MD1CON1bits.MD1CLPOL = 0;
 15220  006462  93FB               	bcf	251,1,b	;volatile
 15221                           
 15222                           ;mcc_generated_files/dsm.c: 72:     MD1CON1bits.MD1CHSYNC = 1;
 15223  006464  89FB               	bsf	251,4,b	;volatile
 15224                           
 15225                           ;mcc_generated_files/dsm.c: 75:     MD1CON1bits.MD1CHPOL = 0;
 15226  006466  9BFB               	bcf	251,5,b	;volatile
 15227                           
 15228                           ; BSR set to: 60
 15229                           ;mcc_generated_files/dsm.c: 78:     MD1SRC = 0x13;
 15230  006468  0E13               	movlw	19
 15231  00646A  6FFC               	movwf	252,b	;volatile
 15232                           
 15233                           ;mcc_generated_files/dsm.c: 81:     MD1CARH = 0x0E;
 15234  00646C  0E0E               	movlw	14
 15235  00646E  6FFE               	movwf	254,b	;volatile
 15236                           
 15237                           ;mcc_generated_files/dsm.c: 84:     MD1CARL = 0x04;
 15238  006470  0E04               	movlw	4
 15239  006472  6FFD               	movwf	253,b	;volatile
 15240                           
 15241                           ; BSR set to: 60
 15242                           ;mcc_generated_files/dsm.c: 87:     MD1CON0bits.MD1EN = 1;
 15243  006474  8FFA               	bsf	250,7,b	;volatile
 15244                           
 15245                           ; BSR set to: 60
 15246                           ; _DSM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 15247  006476  0012               	return		;funcret
 15248  006478                     __end_of_DSM_Initialize:
 15249                           	opt callstack 0
 15250                           
 15251 ;; *************** function _DMA1_Initialize *****************
 15252 ;; Defined at:
 15253 ;;		line 86 in file "mcc_generated_files/dma1.c"
 15254 ;; Parameters:    Size  Location     Type
 15255 ;;		None
 15256 ;; Auto vars:     Size  Location     Type
 15257 ;;		None
 15258 ;; Return value:  Size  Location     Type
 15259 ;;                  1  [STACK] void 
 15260 ;; Registers used:
 15261 ;;		wreg, status,2
 15262 ;; Tracked objects:
 15263 ;;		On entry : 3F/3D
 15264 ;;		On exit  : 3F/3B
 15265 ;;		Unchanged: 0/0
 15266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15267 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15268 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15269 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15270 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15271 ;;Total ram usage:        0 bytes
 15272 ;; Hardware stack levels used:    1
 15273 ;; Hardware stack levels required when called:    3
 15274 ;; This function calls:
 15275 ;;		Nothing
 15276 ;; This function is called by:
 15277 ;;		_SYSTEM_Initialize
 15278 ;; This function uses a reentrant model
 15279 ;;
 15280                           
 15281                           	psect	text77
 15282  005796                     __ptext77:
 15283                           	opt callstack 0
 15284  005796                     _DMA1_Initialize:
 15285                           	opt callstack 26
 15286                           
 15287                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 15288                           
 15289                           ; BSR set to: 60
 15290                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15291                           ;incstack = 0
 15292  005796  0E00               	movlw	0
 15293  005798  013B               	movlb	59	; () banked
 15294  00579A  6FF9               	movwf	249,b	;volatile
 15295  00579C  0E10               	movlw	16
 15296  00579E  6FFA               	movwf	250,b	;volatile
 15297  0057A0  0E00               	movlw	0
 15298  0057A2  6FFB               	movwf	251,b	;volatile
 15299                           
 15300                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 15301  0057A4  0E3D               	movlw	61
 15302  0057A6  6FF1               	movwf	241,b	;volatile
 15303  0057A8  0E11               	movlw	17
 15304  0057AA  6FF0               	movwf	240,b	;volatile
 15305                           
 15306                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 15307  0057AC  0E03               	movlw	3
 15308  0057AE  6FFD               	movwf	253,b	;volatile
 15309                           
 15310                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 15311  0057B0  0E00               	movlw	0
 15312  0057B2  6FF8               	movwf	248,b	;volatile
 15313  0057B4  0E01               	movlw	1
 15314  0057B6  6FF7               	movwf	247,b	;volatile
 15315                           
 15316                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 15317  0057B8  0E00               	movlw	0
 15318  0057BA  6FEF               	movwf	239,b	;volatile
 15319  0057BC  0E01               	movlw	1
 15320  0057BE  6FEE               	movwf	238,b	;volatile
 15321                           
 15322                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 15323  0057C0  0E15               	movlw	21
 15324  0057C2  6FFF               	movwf	255,b	;volatile
 15325                           
 15326                           ; BSR set to: 59
 15327                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 15328  0057C4  6BFE               	clrf	254,b	;volatile
 15329                           
 15330                           ; BSR set to: 59
 15331                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 15332  0057C6  0139               	movlb	57	; () banked
 15333  0057C8  93A2               	bcf	162,1,b	;volatile
 15334                           
 15335                           ; BSR set to: 57
 15336                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 15337  0057CA  91A2               	bcf	162,0,b	;volatile
 15338                           
 15339                           ; BSR set to: 57
 15340                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 15341  0057CC  97A2               	bcf	162,3,b	;volatile
 15342                           
 15343                           ; BSR set to: 57
 15344                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 15345  0057CE  95A2               	bcf	162,2,b	;volatile
 15346                           
 15347                           ; BSR set to: 57
 15348                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 15349  0057D0  8392               	bsf	146,1,b	;volatile
 15350                           
 15351                           ; BSR set to: 57
 15352                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 15353  0057D2  8192               	bsf	146,0,b	;volatile
 15354                           
 15355                           ; BSR set to: 57
 15356                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 15357  0057D4  8792               	bsf	146,3,b	;volatile
 15358                           
 15359                           ; BSR set to: 57
 15360                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 15361  0057D6  8592               	bsf	146,2,b	;volatile
 15362                           
 15363                           ; BSR set to: 57
 15364                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 15365  0057D8  6BF1               	clrf	241,b	;volatile
 15366                           
 15367                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 15368  0057DA  0E01               	movlw	1
 15369  0057DC  6FF2               	movwf	242,b	;volatile
 15370                           
 15371                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 15372  0057DE  0E04               	movlw	4
 15373  0057E0  6FF3               	movwf	243,b	;volatile
 15374                           
 15375                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 15376  0057E2  0E02               	movlw	2
 15377  0057E4  6FF4               	movwf	244,b	;volatile
 15378                           
 15379                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 15380  0057E6  0E03               	movlw	3
 15381  0057E8  6FF7               	movwf	247,b	;volatile
 15382  0057EA  9ED2               	bcf	16338,7,c	;# 
 15383  0057EC  0139               	banksel	14831	;# 
 15384  0057EE  0E55               	movlw	85	;# 
 15385  0057F0  6FEF               	movwf	14831,b	;# 
 15386  0057F2  0EAA               	movlw	170	;# 
 15387  0057F4  6FEF               	movwf	14831,b	;# 
 15388  0057F6  81EF               	bsf	14831,0,b	;# 
 15389  0057F8  8ED2               	bsf	16338,7,c	;# 
 15390                           
 15391                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 15392  0057FA  013B               	movlb	59	; () banked
 15393  0057FC  6BFC               	clrf	252,b	;volatile
 15394                           
 15395                           ; BSR set to: 59
 15396                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15397  0057FE  0012               	return		;funcret
 15398  005800                     __end_of_DMA1_Initialize:
 15399                           	opt callstack 0
 15400                           
 15401 ;; *************** function _CLKREF_Initialize *****************
 15402 ;; Defined at:
 15403 ;;		line 58 in file "mcc_generated_files/clkref.c"
 15404 ;; Parameters:    Size  Location     Type
 15405 ;;		None
 15406 ;; Auto vars:     Size  Location     Type
 15407 ;;		None
 15408 ;; Return value:  Size  Location     Type
 15409 ;;                  1  [STACK] void 
 15410 ;; Registers used:
 15411 ;;		wreg, status,2
 15412 ;; Tracked objects:
 15413 ;;		On entry : 3F/3B
 15414 ;;		On exit  : 3F/3C
 15415 ;;		Unchanged: 0/0
 15416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15421 ;;Total ram usage:        0 bytes
 15422 ;; Hardware stack levels used:    1
 15423 ;; Hardware stack levels required when called:    3
 15424 ;; This function calls:
 15425 ;;		Nothing
 15426 ;; This function is called by:
 15427 ;;		_SYSTEM_Initialize
 15428 ;; This function uses a reentrant model
 15429 ;;
 15430                           
 15431                           	psect	text78
 15432  006556                     __ptext78:
 15433                           	opt callstack 0
 15434  006556                     _CLKREF_Initialize:
 15435                           	opt callstack 26
 15436                           
 15437                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 15438                           
 15439                           ; BSR set to: 59
 15440                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15441                           ;incstack = 0
 15442  006556  013C               	movlb	60	; () banked
 15443  006558  6BE6               	clrf	230,b	;volatile
 15444                           
 15445                           ; BSR set to: 60
 15446                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 15447  00655A  0E94               	movlw	148
 15448  00655C  6FE5               	movwf	229,b	;volatile
 15449                           
 15450                           ; BSR set to: 60
 15451                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 15452  00655E  0012               	return		;funcret
 15453  006560                     __end_of_CLKREF_Initialize:
 15454                           	opt callstack 0
 15455                           
 15456 ;; *************** function _CLC1_Initialize *****************
 15457 ;; Defined at:
 15458 ;;		line 58 in file "mcc_generated_files/clc1.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;		None
 15461 ;; Auto vars:     Size  Location     Type
 15462 ;;		None
 15463 ;; Return value:  Size  Location     Type
 15464 ;;                  1  [STACK] void 
 15465 ;; Registers used:
 15466 ;;		wreg, status,2
 15467 ;; Tracked objects:
 15468 ;;		On entry : 0/39
 15469 ;;		On exit  : 3F/3C
 15470 ;;		Unchanged: 0/0
 15471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15475 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15476 ;;Total ram usage:        0 bytes
 15477 ;; Hardware stack levels used:    1
 15478 ;; Hardware stack levels required when called:    3
 15479 ;; This function calls:
 15480 ;;		Nothing
 15481 ;; This function is called by:
 15482 ;;		_SYSTEM_Initialize
 15483 ;; This function uses a reentrant model
 15484 ;;
 15485                           
 15486                           	psect	text79
 15487  00631E                     __ptext79:
 15488                           	opt callstack 0
 15489  00631E                     _CLC1_Initialize:
 15490                           	opt callstack 26
 15491                           
 15492                           ;mcc_generated_files/clc1.c: 63:     CLC1POL = 0x00;
 15493                           
 15494                           ; BSR set to: 60
 15495                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15496                           ;incstack = 0
 15497  00631E  013C               	movlb	60	; () banked
 15498  006320  6B75               	clrf	117,b	;volatile
 15499                           
 15500                           ; BSR set to: 60
 15501                           ;mcc_generated_files/clc1.c: 65:     CLC1SEL0 = 0x04;
 15502  006322  0E04               	movlw	4
 15503  006324  6F76               	movwf	118,b	;volatile
 15504                           
 15505                           ;mcc_generated_files/clc1.c: 67:     CLC1SEL1 = 0x04;
 15506  006326  0E04               	movlw	4
 15507  006328  6F77               	movwf	119,b	;volatile
 15508                           
 15509                           ;mcc_generated_files/clc1.c: 69:     CLC1SEL2 = 0x04;
 15510  00632A  0E04               	movlw	4
 15511  00632C  6F78               	movwf	120,b	;volatile
 15512                           
 15513                           ;mcc_generated_files/clc1.c: 71:     CLC1SEL3 = 0x04;
 15514  00632E  0E04               	movlw	4
 15515  006330  6F79               	movwf	121,b	;volatile
 15516                           
 15517                           ; BSR set to: 60
 15518                           ;mcc_generated_files/clc1.c: 73:     CLC1GLS0 = 0x00;
 15519  006332  6B7A               	clrf	122,b	;volatile
 15520                           
 15521                           ; BSR set to: 60
 15522                           ;mcc_generated_files/clc1.c: 75:     CLC1GLS1 = 0x00;
 15523  006334  6B7B               	clrf	123,b	;volatile
 15524                           
 15525                           ; BSR set to: 60
 15526                           ;mcc_generated_files/clc1.c: 77:     CLC1GLS2 = 0x00;
 15527  006336  6B7C               	clrf	124,b	;volatile
 15528                           
 15529                           ; BSR set to: 60
 15530                           ;mcc_generated_files/clc1.c: 79:     CLC1GLS3 = 0x00;
 15531  006338  6B7D               	clrf	125,b	;volatile
 15532                           
 15533                           ;mcc_generated_files/clc1.c: 81:     CLC1CON = 0x81;
 15534  00633A  0E81               	movlw	129
 15535  00633C  6F74               	movwf	116,b	;volatile
 15536                           
 15537                           ; BSR set to: 60
 15538                           ; _CLC1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15539  00633E  0012               	return		;funcret
 15540  006340                     __end_of_CLC1_Initialize:
 15541                           	opt callstack 0
 15542                           
 15543 ;; *************** function _ADCC_Initialize *****************
 15544 ;; Defined at:
 15545 ;;		line 64 in file "mcc_generated_files/adcc.c"
 15546 ;; Parameters:    Size  Location     Type
 15547 ;;		None
 15548 ;; Auto vars:     Size  Location     Type
 15549 ;;		None
 15550 ;; Return value:  Size  Location     Type
 15551 ;;                  1  [STACK] void 
 15552 ;; Registers used:
 15553 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 15554 ;; Tracked objects:
 15555 ;;		On entry : 3F/39
 15556 ;;		On exit  : 0/0
 15557 ;;		Unchanged: 0/0
 15558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15563 ;;Total ram usage:        0 bytes
 15564 ;; Hardware stack levels used:    1
 15565 ;; Hardware stack levels required when called:    4
 15566 ;; This function calls:
 15567 ;;		_ADCC_SetADIInterruptHandler
 15568 ;; This function is called by:
 15569 ;;		_SYSTEM_Initialize
 15570 ;; This function uses a reentrant model
 15571 ;;
 15572                           
 15573                           	psect	text80
 15574  005B82                     __ptext80:
 15575                           	opt callstack 0
 15576  005B82                     _ADCC_Initialize:
 15577                           	opt callstack 25
 15578                           
 15579                           ;mcc_generated_files/adcc.c: 68:     ADLTHL = 0x00;
 15580                           
 15581                           ; BSR set to: 60
 15582                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15583                           ;incstack = 0
 15584  005B82  013E               	movlb	62	; () banked
 15585  005B84  6BDE               	clrf	222,b	;volatile
 15586                           
 15587                           ;mcc_generated_files/adcc.c: 70:     ADLTHH = 0x00;
 15588  005B86  6BDF               	clrf	223,b	;volatile
 15589                           
 15590                           ;mcc_generated_files/adcc.c: 72:     ADUTHL = 0x00;
 15591  005B88  6BE0               	clrf	224,b	;volatile
 15592                           
 15593                           ;mcc_generated_files/adcc.c: 74:     ADUTHH = 0x00;
 15594  005B8A  6BE1               	clrf	225,b	;volatile
 15595                           
 15596                           ;mcc_generated_files/adcc.c: 76:     ADSTPTL = 0x00;
 15597  005B8C  6BE4               	clrf	228,b	;volatile
 15598                           
 15599                           ;mcc_generated_files/adcc.c: 78:     ADSTPTH = 0x00;
 15600  005B8E  6BE5               	clrf	229,b	;volatile
 15601                           
 15602                           ;mcc_generated_files/adcc.c: 80:     ADACCU = 0x00;
 15603  005B90  6BEA               	clrf	234,b	;volatile
 15604                           
 15605                           ;mcc_generated_files/adcc.c: 82:     ADRPT = 0x00;
 15606  005B92  6BEC               	clrf	236,b	;volatile
 15607                           
 15608                           ;mcc_generated_files/adcc.c: 84:     ADPCH = 0x00;
 15609  005B94  6BF1               	clrf	241,b	;volatile
 15610                           
 15611                           ;mcc_generated_files/adcc.c: 86:     ADACQL = 0x00;
 15612  005B96  6BF3               	clrf	243,b	;volatile
 15613                           
 15614                           ;mcc_generated_files/adcc.c: 88:     ADACQH = 0x00;
 15615  005B98  6BF4               	clrf	244,b	;volatile
 15616                           
 15617                           ;mcc_generated_files/adcc.c: 90:     ADCAP = 0x00;
 15618  005B9A  6BF5               	clrf	245,b	;volatile
 15619                           
 15620                           ;mcc_generated_files/adcc.c: 92:     ADPREL = 0x00;
 15621  005B9C  6BF6               	clrf	246,b	;volatile
 15622                           
 15623                           ;mcc_generated_files/adcc.c: 94:     ADPREH = 0x00;
 15624  005B9E  6BF7               	clrf	247,b	;volatile
 15625                           
 15626                           ;mcc_generated_files/adcc.c: 96:     ADCON1 = 0x00;
 15627  005BA0  6BF9               	clrf	249,b	;volatile
 15628                           
 15629                           ;mcc_generated_files/adcc.c: 98:     ADCON2 = 0x00;
 15630  005BA2  6BFA               	clrf	250,b	;volatile
 15631                           
 15632                           ;mcc_generated_files/adcc.c: 100:     ADCON3 = 0x00;
 15633  005BA4  6BFB               	clrf	251,b	;volatile
 15634                           
 15635                           ;mcc_generated_files/adcc.c: 102:     ADSTAT = 0x00;
 15636  005BA6  6BFC               	clrf	252,b	;volatile
 15637                           
 15638                           ; BSR set to: 62
 15639                           ;mcc_generated_files/adcc.c: 104:     ADREF = 0x02;
 15640  005BA8  0E02               	movlw	2
 15641  005BAA  6FFD               	movwf	253,b	;volatile
 15642                           
 15643                           ; BSR set to: 62
 15644                           ;mcc_generated_files/adcc.c: 106:     ADACT = 0x00;
 15645  005BAC  6BFE               	clrf	254,b	;volatile
 15646                           
 15647                           ; BSR set to: 62
 15648                           ;mcc_generated_files/adcc.c: 108:     ADCLK = 0x00;
 15649  005BAE  6BFF               	clrf	255,b	;volatile
 15650                           
 15651                           ;mcc_generated_files/adcc.c: 110:     ADCON0 = 0x94;
 15652  005BB0  0E94               	movlw	148
 15653  005BB2  6FF8               	movwf	248,b	;volatile
 15654                           
 15655                           ; BSR set to: 62
 15656                           ;mcc_generated_files/adcc.c: 113:     PIR1bits.ADIF = 0;
 15657  005BB4  0139               	movlb	57	; () banked
 15658  005BB6  95A1               	bcf	161,2,b	;volatile
 15659                           
 15660                           ; BSR set to: 57
 15661                           ;mcc_generated_files/adcc.c: 115:     PIE1bits.ADIE = 1;
 15662  005BB8  8591               	bsf	145,2,b	;volatile
 15663                           
 15664                           ; BSR set to: 57
 15665                           ;mcc_generated_files/adcc.c: 117:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 15666  005BBA  0EBC               	movlw	low _ADCC_DefaultInterruptHandler
 15667  005BBC  6EE6               	movwf	postinc1,c
 15668  005BBE  0E65               	movlw	high _ADCC_DefaultInterruptHandler
 15669  005BC0  6EE6               	movwf	postinc1,c
 15670  005BC2  0E00               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 15671  005BC4  6EE6               	movwf	postinc1,c
 15672  005BC6  EC08  F031         	call	_ADCC_SetADIInterruptHandler	;wreg free
 15673                           
 15674                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 15675  005BCA  0012               	return		;funcret
 15676  005BCC                     __end_of_ADCC_Initialize:
 15677                           	opt callstack 0
 15678                           
 15679 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 15680 ;; Defined at:
 15681 ;;		line 316 in file "mcc_generated_files/adcc.c"
 15682 ;; Parameters:    Size  Location     Type
 15683 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 15684 ;;		 -> ADCC_DefaultInterruptHandler(1), 
 15685 ;; Auto vars:     Size  Location     Type
 15686 ;;		None
 15687 ;; Return value:  Size  Location     Type
 15688 ;;                  1  [STACK] void 
 15689 ;; Registers used:
 15690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 15691 ;; Tracked objects:
 15692 ;;		On entry : 3F/39
 15693 ;;		On exit  : 0/0
 15694 ;;		Unchanged: 0/0
 15695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15699 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15700 ;;Total ram usage:        0 bytes
 15701 ;; Hardware stack levels used:    1
 15702 ;; Hardware stack levels required when called:    3
 15703 ;; This function calls:
 15704 ;;		Nothing
 15705 ;; This function is called by:
 15706 ;;		_ADCC_Initialize
 15707 ;; This function uses a reentrant model
 15708 ;;
 15709                           
 15710                           	psect	text81
 15711  006210                     __ptext81:
 15712                           	opt callstack 0
 15713  006210                     _ADCC_SetADIInterruptHandler:
 15714                           	opt callstack 25
 15715                           
 15716                           ;mcc_generated_files/adcc.c: 317:     ADCC_ADI_InterruptHandler = InterruptHandler;
 15717                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 15718                           
 15719                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15720                           ;incstack = 0
 15721  006210  50E1               	movf	fsr1l,w,c
 15722  006212  0FFD               	addlw	-3
 15723  006214  6ED9               	movwf	fsr2l,c
 15724  006216  50E2               	movf	fsr1h,w,c
 15725  006218  6EDA               	movwf	fsr2h,c
 15726  00621A  0EFF               	movlw	255
 15727  00621C  22DA               	addwfc	fsr2h,f,c
 15728  00621E  006F FF78  F0EC    	movff	postinc2,_ADCC_ADI_InterruptHandler
 15729  006224  006F FF78  F0ED    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 15730  00622A  006F FF74  F0EE    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 15731                           
 15732                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 15733  006230  52E5               	movf	postdec1,f,c
 15734  006232  52E5               	movf	postdec1,f,c
 15735  006234  52E5               	movf	postdec1,f,c
 15736  006236  0012               	return		;funcret
 15737  006238                     __end_of_ADCC_SetADIInterruptHandler:
 15738                           	opt callstack 0
 15739                           
 15740 ;; *************** function _INT0_ISR *****************
 15741 ;; Defined at:
 15742 ;;		line 38 in file "mcc_generated_files/ext_int.c"
 15743 ;; Parameters:    Size  Location     Type
 15744 ;;		None
 15745 ;; Auto vars:     Size  Location     Type
 15746 ;;		None
 15747 ;; Return value:  Size  Location     Type
 15748 ;;                  1    wreg      void 
 15749 ;; Registers used:
 15750 ;;		wreg, status,2, status,0, pclath, tosl
 15751 ;; Tracked objects:
 15752 ;;		On entry : 0/0
 15753 ;;		On exit  : 0/0
 15754 ;;		Unchanged: 0/0
 15755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15760 ;;Total ram usage:        0 bytes
 15761 ;; Hardware stack levels used:    1
 15762 ;; Hardware stack levels required when called:    2
 15763 ;; This function calls:
 15764 ;;		_INT0_CallBack
 15765 ;; This function is called by:
 15766 ;;		Interrupt level 2
 15767 ;; This function uses a non-reentrant model
 15768 ;;
 15769                           
 15770                           	psect	text82
 15771  006528                     __ptext82:
 15772                           	opt callstack 0
 15773  006528                     _INT0_ISR:
 15774                           	opt callstack 17
 15775                           
 15776                           ;incstack = 0
 15777  006528  EE13  F200         	lfsr	1,___inthi_sp
 15778                           
 15779                           ;mcc_generated_files/ext_int.c: 40:  (PIR1bits.INT0IF = 0);
 15780  00652C  0139               	movlb	57	; () banked
 15781  00652E  91A1               	bcf	161,0,b	;volatile
 15782                           
 15783                           ; BSR set to: 57
 15784                           ;mcc_generated_files/ext_int.c: 43:  INT0_CallBack();
 15785  006530  ECA0  F031         	call	_INT0_CallBack	;wreg free
 15786  006534  0011               	retfie		f
 15787  006536                     __end_of_INT0_ISR:
 15788                           	opt callstack 0
 15789                           
 15790 ;; *************** function _INT0_CallBack *****************
 15791 ;; Defined at:
 15792 ;;		line 46 in file "mcc_generated_files/ext_int.c"
 15793 ;; Parameters:    Size  Location     Type
 15794 ;;		None
 15795 ;; Auto vars:     Size  Location     Type
 15796 ;;		None
 15797 ;; Return value:  Size  Location     Type
 15798 ;;                  1  [STACK] void 
 15799 ;; Registers used:
 15800 ;;		wreg, status,2, status,0, pclath, tosl
 15801 ;; Tracked objects:
 15802 ;;		On entry : 3F/39
 15803 ;;		On exit  : 0/0
 15804 ;;		Unchanged: 0/0
 15805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15810 ;;Total ram usage:        0 bytes
 15811 ;; Hardware stack levels used:    1
 15812 ;; Hardware stack levels required when called:    1
 15813 ;; This function calls:
 15814 ;;		Absolute function
 15815 ;;		_INT0_DefaultInterruptHandler
 15816 ;; This function is called by:
 15817 ;;		_INT0_ISR
 15818 ;; This function uses a reentrant model
 15819 ;;
 15820                           
 15821                           	psect	text83
 15822  006340                     __ptext83:
 15823                           	opt callstack 0
 15824  006340                     _INT0_CallBack:
 15825                           	opt callstack 17
 15826                           
 15827                           ;mcc_generated_files/ext_int.c: 49:  if (INT0_InterruptHandler) {
 15828                           
 15829                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15830                           ;incstack = 0
 15831  006340  501A               	movf	_INT0_InterruptHandler,w,c
 15832  006342  101B               	iorwf	_INT0_InterruptHandler+1,w,c
 15833  006344  101C               	iorwf	_INT0_InterruptHandler+2,w,c
 15834  006346  B4D8               	btfsc	status,2,c
 15835  006348  0012               	return	
 15836                           
 15837                           ;mcc_generated_files/ext_int.c: 50:   INT0_InterruptHandler();
 15838  00634A  D801               	call	u125_48
 15839  00634C  0012               	return	
 15840  00634E                     u125_48:
 15841  00634E  0005               	push	
 15842  006350  6EFA               	movwf	pclath,c
 15843  006352  501A               	movf	_INT0_InterruptHandler,w,c
 15844  006354  6EFD               	movwf	tosl,c
 15845  006356  501B               	movf	_INT0_InterruptHandler+1,w,c
 15846  006358  6EFE               	movwf	tosh,c
 15847  00635A  501C               	movf	_INT0_InterruptHandler+2,w,c
 15848  00635C  6EFF               	movwf	tosu,c
 15849  00635E  50FA               	movf	pclath,w,c
 15850  006360  0012               	return		;indir
 15851  006362                     __end_of_INT0_CallBack:
 15852                           	opt callstack 0
 15853                           
 15854 ;; *************** function _INT0_DefaultInterruptHandler *****************
 15855 ;; Defined at:
 15856 ;;		line 59 in file "mcc_generated_files/ext_int.c"
 15857 ;; Parameters:    Size  Location     Type
 15858 ;;		None
 15859 ;; Auto vars:     Size  Location     Type
 15860 ;;		None
 15861 ;; Return value:  Size  Location     Type
 15862 ;;                  1  [STACK] void 
 15863 ;; Registers used:
 15864 ;;		None
 15865 ;; Tracked objects:
 15866 ;;		On entry : 0/39
 15867 ;;		On exit  : 0/0
 15868 ;;		Unchanged: 0/0
 15869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15874 ;;Total ram usage:        0 bytes
 15875 ;; Hardware stack levels used:    1
 15876 ;; This function calls:
 15877 ;;		Nothing
 15878 ;; This function is called by:
 15879 ;;		_EXT_INT_Initialize
 15880 ;;		_INT0_CallBack
 15881 ;; This function uses a reentrant model
 15882 ;;
 15883                           
 15884                           	psect	text84
 15885  0065B6                     __ptext84:
 15886                           	opt callstack 0
 15887  0065B6                     _INT0_DefaultInterruptHandler:
 15888                           	opt callstack 17
 15889                           
 15890                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 15891                           
 15892                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15893                           ;incstack = 0
 15894  0065B6  0012               	return		;funcret
 15895  0065B8                     __end_of_INT0_DefaultInterruptHandler:
 15896                           	opt callstack 0
 15897                           
 15898 ;; *************** function _INT1_ISR *****************
 15899 ;; Defined at:
 15900 ;;		line 65 in file "mcc_generated_files/ext_int.c"
 15901 ;; Parameters:    Size  Location     Type
 15902 ;;		None
 15903 ;; Auto vars:     Size  Location     Type
 15904 ;;		None
 15905 ;; Return value:  Size  Location     Type
 15906 ;;                  1    wreg      void 
 15907 ;; Registers used:
 15908 ;;		wreg, status,2, status,0, pclath, tosl
 15909 ;; Tracked objects:
 15910 ;;		On entry : 0/0
 15911 ;;		On exit  : 0/0
 15912 ;;		Unchanged: 0/0
 15913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15918 ;;Total ram usage:        0 bytes
 15919 ;; Hardware stack levels used:    1
 15920 ;; Hardware stack levels required when called:    2
 15921 ;; This function calls:
 15922 ;;		_INT1_CallBack
 15923 ;; This function is called by:
 15924 ;;		Interrupt level 2
 15925 ;; This function uses a non-reentrant model
 15926 ;;
 15927                           
 15928                           	psect	text85
 15929  006538                     __ptext85:
 15930                           	opt callstack 0
 15931  006538                     _INT1_ISR:
 15932                           	opt callstack 17
 15933                           
 15934                           ;incstack = 0
 15935  006538  EE13  F200         	lfsr	1,___inthi_sp
 15936                           
 15937                           ;mcc_generated_files/ext_int.c: 67:  (PIR5bits.INT1IF = 0);
 15938  00653C  0139               	movlb	57	; () banked
 15939  00653E  91A5               	bcf	165,0,b	;volatile
 15940                           
 15941                           ; BSR set to: 57
 15942                           ;mcc_generated_files/ext_int.c: 70:  INT1_CallBack();
 15943  006540  ECB1  F031         	call	_INT1_CallBack	;wreg free
 15944  006544  0011               	retfie		f
 15945  006546                     __end_of_INT1_ISR:
 15946                           	opt callstack 0
 15947                           
 15948 ;; *************** function _INT1_CallBack *****************
 15949 ;; Defined at:
 15950 ;;		line 73 in file "mcc_generated_files/ext_int.c"
 15951 ;; Parameters:    Size  Location     Type
 15952 ;;		None
 15953 ;; Auto vars:     Size  Location     Type
 15954 ;;		None
 15955 ;; Return value:  Size  Location     Type
 15956 ;;                  1  [STACK] void 
 15957 ;; Registers used:
 15958 ;;		wreg, status,2, status,0, pclath, tosl
 15959 ;; Tracked objects:
 15960 ;;		On entry : 3F/39
 15961 ;;		On exit  : 0/0
 15962 ;;		Unchanged: 0/0
 15963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15968 ;;Total ram usage:        0 bytes
 15969 ;; Hardware stack levels used:    1
 15970 ;; Hardware stack levels required when called:    1
 15971 ;; This function calls:
 15972 ;;		Absolute function
 15973 ;;		_INT1_DefaultInterruptHandler
 15974 ;; This function is called by:
 15975 ;;		_INT1_ISR
 15976 ;; This function uses a reentrant model
 15977 ;;
 15978                           
 15979                           	psect	text86
 15980  006362                     __ptext86:
 15981                           	opt callstack 0
 15982  006362                     _INT1_CallBack:
 15983                           	opt callstack 17
 15984                           
 15985                           ;mcc_generated_files/ext_int.c: 76:  if (INT1_InterruptHandler) {
 15986                           
 15987                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15988                           ;incstack = 0
 15989  006362  5017               	movf	_INT1_InterruptHandler,w,c
 15990  006364  1018               	iorwf	_INT1_InterruptHandler+1,w,c
 15991  006366  1019               	iorwf	_INT1_InterruptHandler+2,w,c
 15992  006368  B4D8               	btfsc	status,2,c
 15993  00636A  0012               	return	
 15994                           
 15995                           ;mcc_generated_files/ext_int.c: 77:   INT1_InterruptHandler();
 15996  00636C  D801               	call	u127_48
 15997  00636E  0012               	return	
 15998  006370                     u127_48:
 15999  006370  0005               	push	
 16000  006372  6EFA               	movwf	pclath,c
 16001  006374  5017               	movf	_INT1_InterruptHandler,w,c
 16002  006376  6EFD               	movwf	tosl,c
 16003  006378  5018               	movf	_INT1_InterruptHandler+1,w,c
 16004  00637A  6EFE               	movwf	tosh,c
 16005  00637C  5019               	movf	_INT1_InterruptHandler+2,w,c
 16006  00637E  6EFF               	movwf	tosu,c
 16007  006380  50FA               	movf	pclath,w,c
 16008  006382  0012               	return		;indir
 16009  006384                     __end_of_INT1_CallBack:
 16010                           	opt callstack 0
 16011                           
 16012 ;; *************** function _INT1_DefaultInterruptHandler *****************
 16013 ;; Defined at:
 16014 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 16015 ;; Parameters:    Size  Location     Type
 16016 ;;		None
 16017 ;; Auto vars:     Size  Location     Type
 16018 ;;		None
 16019 ;; Return value:  Size  Location     Type
 16020 ;;                  1  [STACK] void 
 16021 ;; Registers used:
 16022 ;;		None
 16023 ;; Tracked objects:
 16024 ;;		On entry : 0/39
 16025 ;;		On exit  : 0/0
 16026 ;;		Unchanged: 0/0
 16027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16029 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16031 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16032 ;;Total ram usage:        0 bytes
 16033 ;; Hardware stack levels used:    1
 16034 ;; This function calls:
 16035 ;;		Nothing
 16036 ;; This function is called by:
 16037 ;;		_EXT_INT_Initialize
 16038 ;;		_INT1_CallBack
 16039 ;; This function uses a reentrant model
 16040 ;;
 16041                           
 16042                           	psect	text87
 16043  0065B8                     __ptext87:
 16044                           	opt callstack 0
 16045  0065B8                     _INT1_DefaultInterruptHandler:
 16046                           	opt callstack 17
 16047                           
 16048                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16049                           
 16050                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16051                           ;incstack = 0
 16052  0065B8  0012               	return		;funcret
 16053  0065BA                     __end_of_INT1_DefaultInterruptHandler:
 16054                           	opt callstack 0
 16055                           
 16056 ;; *************** function _INT2_ISR *****************
 16057 ;; Defined at:
 16058 ;;		line 92 in file "mcc_generated_files/ext_int.c"
 16059 ;; Parameters:    Size  Location     Type
 16060 ;;		None
 16061 ;; Auto vars:     Size  Location     Type
 16062 ;;		None
 16063 ;; Return value:  Size  Location     Type
 16064 ;;                  1    wreg      void 
 16065 ;; Registers used:
 16066 ;;		wreg, status,2, status,0, pclath, tosl
 16067 ;; Tracked objects:
 16068 ;;		On entry : 0/0
 16069 ;;		On exit  : 0/0
 16070 ;;		Unchanged: 0/0
 16071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16075 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16076 ;;Total ram usage:        0 bytes
 16077 ;; Hardware stack levels used:    1
 16078 ;; Hardware stack levels required when called:    2
 16079 ;; This function calls:
 16080 ;;		_INT2_CallBack
 16081 ;; This function is called by:
 16082 ;;		Interrupt level 2
 16083 ;; This function uses a non-reentrant model
 16084 ;;
 16085                           
 16086                           	psect	text88
 16087  006548                     __ptext88:
 16088                           	opt callstack 0
 16089  006548                     _INT2_ISR:
 16090                           	opt callstack 17
 16091                           
 16092                           ;incstack = 0
 16093  006548  EE13  F200         	lfsr	1,___inthi_sp
 16094                           
 16095                           ;mcc_generated_files/ext_int.c: 94:  (PIR7bits.INT2IF = 0);
 16096  00654C  0139               	movlb	57	; () banked
 16097  00654E  9BA7               	bcf	167,5,b	;volatile
 16098                           
 16099                           ; BSR set to: 57
 16100                           ;mcc_generated_files/ext_int.c: 97:  INT2_CallBack();
 16101  006550  ECC2  F031         	call	_INT2_CallBack	;wreg free
 16102  006554  0011               	retfie		f
 16103  006556                     __end_of_INT2_ISR:
 16104                           	opt callstack 0
 16105                           
 16106 ;; *************** function _INT2_CallBack *****************
 16107 ;; Defined at:
 16108 ;;		line 100 in file "mcc_generated_files/ext_int.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;		None
 16111 ;; Auto vars:     Size  Location     Type
 16112 ;;		None
 16113 ;; Return value:  Size  Location     Type
 16114 ;;                  1  [STACK] void 
 16115 ;; Registers used:
 16116 ;;		wreg, status,2, status,0, pclath, tosl
 16117 ;; Tracked objects:
 16118 ;;		On entry : 3F/39
 16119 ;;		On exit  : 0/0
 16120 ;;		Unchanged: 0/0
 16121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16126 ;;Total ram usage:        0 bytes
 16127 ;; Hardware stack levels used:    1
 16128 ;; Hardware stack levels required when called:    1
 16129 ;; This function calls:
 16130 ;;		Absolute function
 16131 ;;		_INT2_DefaultInterruptHandler
 16132 ;; This function is called by:
 16133 ;;		_INT2_ISR
 16134 ;; This function uses a reentrant model
 16135 ;;
 16136                           
 16137                           	psect	text89
 16138  006384                     __ptext89:
 16139                           	opt callstack 0
 16140  006384                     _INT2_CallBack:
 16141                           	opt callstack 17
 16142                           
 16143                           ;mcc_generated_files/ext_int.c: 103:  if (INT2_InterruptHandler) {
 16144                           
 16145                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16146                           ;incstack = 0
 16147  006384  5014               	movf	_INT2_InterruptHandler,w,c
 16148  006386  1015               	iorwf	_INT2_InterruptHandler+1,w,c
 16149  006388  1016               	iorwf	_INT2_InterruptHandler+2,w,c
 16150  00638A  B4D8               	btfsc	status,2,c
 16151  00638C  0012               	return	
 16152                           
 16153                           ;mcc_generated_files/ext_int.c: 104:   INT2_InterruptHandler();
 16154  00638E  D801               	call	u129_48
 16155  006390  0012               	return	
 16156  006392                     u129_48:
 16157  006392  0005               	push	
 16158  006394  6EFA               	movwf	pclath,c
 16159  006396  5014               	movf	_INT2_InterruptHandler,w,c
 16160  006398  6EFD               	movwf	tosl,c
 16161  00639A  5015               	movf	_INT2_InterruptHandler+1,w,c
 16162  00639C  6EFE               	movwf	tosh,c
 16163  00639E  5016               	movf	_INT2_InterruptHandler+2,w,c
 16164  0063A0  6EFF               	movwf	tosu,c
 16165  0063A2  50FA               	movf	pclath,w,c
 16166  0063A4  0012               	return		;indir
 16167  0063A6                     __end_of_INT2_CallBack:
 16168                           	opt callstack 0
 16169                           
 16170 ;; *************** function _INT2_DefaultInterruptHandler *****************
 16171 ;; Defined at:
 16172 ;;		line 113 in file "mcc_generated_files/ext_int.c"
 16173 ;; Parameters:    Size  Location     Type
 16174 ;;		None
 16175 ;; Auto vars:     Size  Location     Type
 16176 ;;		None
 16177 ;; Return value:  Size  Location     Type
 16178 ;;                  1  [STACK] void 
 16179 ;; Registers used:
 16180 ;;		None
 16181 ;; Tracked objects:
 16182 ;;		On entry : 0/39
 16183 ;;		On exit  : 0/0
 16184 ;;		Unchanged: 0/0
 16185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16190 ;;Total ram usage:        0 bytes
 16191 ;; Hardware stack levels used:    1
 16192 ;; This function calls:
 16193 ;;		Nothing
 16194 ;; This function is called by:
 16195 ;;		_EXT_INT_Initialize
 16196 ;;		_INT2_CallBack
 16197 ;; This function uses a reentrant model
 16198 ;;
 16199                           
 16200                           	psect	text90
 16201  0065BA                     __ptext90:
 16202                           	opt callstack 0
 16203  0065BA                     _INT2_DefaultInterruptHandler:
 16204                           	opt callstack 17
 16205                           
 16206                           ; _INT2_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16207                           
 16208                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16209                           ;incstack = 0
 16210  0065BA  0012               	return		;funcret
 16211  0065BC                     __end_of_INT2_DefaultInterruptHandler:
 16212                           	opt callstack 0
 16213                           
 16214 ;; *************** function _Default_ISR *****************
 16215 ;; Defined at:
 16216 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 16217 ;; Parameters:    Size  Location     Type
 16218 ;;		None
 16219 ;; Auto vars:     Size  Location     Type
 16220 ;;		None
 16221 ;; Return value:  Size  Location     Type
 16222 ;;                  1    wreg      void 
 16223 ;; Registers used:
 16224 ;;		None
 16225 ;; Tracked objects:
 16226 ;;		On entry : 0/0
 16227 ;;		On exit  : 0/0
 16228 ;;		Unchanged: 0/0
 16229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16230 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16231 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16233 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16234 ;;Total ram usage:        0 bytes
 16235 ;; Hardware stack levels used:    1
 16236 ;; This function calls:
 16237 ;;		Nothing
 16238 ;; This function is called by:
 16239 ;;		Interrupt level 2
 16240 ;; This function uses a non-reentrant model
 16241 ;;
 16242                           
 16243                           	psect	text91
 16244  0065B0                     __ptext91:
 16245                           	opt callstack 0
 16246  0065B0                     _Default_ISR:
 16247                           	opt callstack 19
 16248                           
 16249                           ;incstack = 0
 16250  0065B0  EE13  F200         	lfsr	1,___inthi_sp
 16251  0065B4  0011               	retfie		f
 16252  0065B6                     __end_of_Default_ISR:
 16253                           	opt callstack 0
 16254                           
 16255 ;; *************** function _ADCC_ISR *****************
 16256 ;; Defined at:
 16257 ;;		line 307 in file "mcc_generated_files/adcc.c"
 16258 ;; Parameters:    Size  Location     Type
 16259 ;;		None
 16260 ;; Auto vars:     Size  Location     Type
 16261 ;;		None
 16262 ;; Return value:  Size  Location     Type
 16263 ;;                  1    wreg      void 
 16264 ;; Registers used:
 16265 ;;		wreg, status,2, status,0, pclath, tosl
 16266 ;; Tracked objects:
 16267 ;;		On entry : 0/0
 16268 ;;		On exit  : 0/0
 16269 ;;		Unchanged: 0/0
 16270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16275 ;;Total ram usage:        0 bytes
 16276 ;; Hardware stack levels used:    1
 16277 ;; Hardware stack levels required when called:    1
 16278 ;; This function calls:
 16279 ;;		Absolute function
 16280 ;;		_ADCC_DefaultInterruptHandler
 16281 ;; This function is called by:
 16282 ;;		Interrupt level 2
 16283 ;; This function uses a non-reentrant model
 16284 ;;
 16285                           
 16286                           	psect	text92
 16287  005EE0                     __ptext92:
 16288                           	opt callstack 0
 16289  005EE0                     _ADCC_ISR:
 16290                           	opt callstack 18
 16291                           
 16292                           ;incstack = 0
 16293  005EE0  EE13  F200         	lfsr	1,___inthi_sp
 16294                           
 16295                           ;mcc_generated_files/adcc.c: 310:     PIR1bits.ADIF = 0;
 16296  005EE4  0139               	movlb	57	; () banked
 16297  005EE6  95A1               	bcf	161,2,b	;volatile
 16298                           
 16299                           ; BSR set to: 57
 16300                           ;mcc_generated_files/adcc.c: 312:     if (ADCC_ADI_InterruptHandler)
 16301  005EE8  0100               	movlb	0	; () banked
 16302  005EEA  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16303  005EEC  11ED               	iorwf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16304  005EEE  11EE               	iorwf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16305  005EF0  B4D8               	btfsc	status,2,c
 16306  005EF2  0011               	retfie		f
 16307                           
 16308                           ; BSR set to: 0
 16309                           ;mcc_generated_files/adcc.c: 313:             ADCC_ADI_InterruptHandler();
 16310  005EF4  D801               	call	i2u431_48
 16311  005EF6  0011               	retfie		f
 16312  005EF8                     i2u431_48:
 16313  005EF8  0005               	push	
 16314  005EFA  6EFA               	movwf	pclath,c
 16315  005EFC  51EC               	movf	_ADCC_ADI_InterruptHandler& (0+255),w,b
 16316  005EFE  6EFD               	movwf	tosl,c
 16317  005F00  51ED               	movf	(_ADCC_ADI_InterruptHandler+1)& (0+255),w,b
 16318  005F02  6EFE               	movwf	tosh,c
 16319  005F04  51EE               	movf	(_ADCC_ADI_InterruptHandler+2)& (0+255),w,b
 16320  005F06  6EFF               	movwf	tosu,c
 16321  005F08  50FA               	movf	pclath,w,c
 16322  005F0A  0012               	return		;indir
 16323  005F0C                     __end_of_ADCC_ISR:
 16324                           	opt callstack 0
 16325                           
 16326 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 16327 ;; Defined at:
 16328 ;;		line 320 in file "mcc_generated_files/adcc.c"
 16329 ;; Parameters:    Size  Location     Type
 16330 ;;		None
 16331 ;; Auto vars:     Size  Location     Type
 16332 ;;		None
 16333 ;; Return value:  Size  Location     Type
 16334 ;;                  1  [STACK] void 
 16335 ;; Registers used:
 16336 ;;		None
 16337 ;; Tracked objects:
 16338 ;;		On entry : 3F/0
 16339 ;;		On exit  : 0/0
 16340 ;;		Unchanged: 0/0
 16341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16346 ;;Total ram usage:        0 bytes
 16347 ;; Hardware stack levels used:    1
 16348 ;; This function calls:
 16349 ;;		Nothing
 16350 ;; This function is called by:
 16351 ;;		_ADCC_Initialize
 16352 ;;		_ADCC_ISR
 16353 ;; This function uses a reentrant model
 16354 ;;
 16355                           
 16356                           	psect	text93
 16357  0065BC                     __ptext93:
 16358                           	opt callstack 0
 16359  0065BC                     _ADCC_DefaultInterruptHandler:
 16360                           	opt callstack 18
 16361                           
 16362                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 16363                           
 16364                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16365                           ;incstack = 0
 16366  0065BC  0012               	return		;funcret
 16367  0065BE                     __end_of_ADCC_DefaultInterruptHandler:
 16368                           	opt callstack 0
 16369                           
 16370 ;; *************** function _UART1_tx_vect_isr *****************
 16371 ;; Defined at:
 16372 ;;		line 197 in file "mcc_generated_files/uart1.c"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;		None
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;		None
 16377 ;; Return value:  Size  Location     Type
 16378 ;;                  1    wreg      void 
 16379 ;; Registers used:
 16380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16381 ;; Tracked objects:
 16382 ;;		On entry : 0/0
 16383 ;;		On exit  : 0/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16390 ;;Total ram usage:        0 bytes
 16391 ;; Hardware stack levels used:    1
 16392 ;; Hardware stack levels required when called:    1
 16393 ;; This function calls:
 16394 ;;		Absolute function
 16395 ;;		_UART1_Transmit_ISR
 16396 ;; This function is called by:
 16397 ;;		Interrupt level 2
 16398 ;; This function uses a non-reentrant model
 16399 ;;
 16400                           
 16401                           	psect	text94
 16402  006238                     __ptext94:
 16403                           	opt callstack 0
 16404  006238                     _UART1_tx_vect_isr:
 16405                           	opt callstack 18
 16406                           
 16407                           ;incstack = 0
 16408  006238  EE13  F200         	lfsr	1,___inthi_sp
 16409                           
 16410                           ;mcc_generated_files/uart1.c: 199:  if (UART1_TxInterruptHandler) {
 16411  00623C  5008               	movf	_UART1_TxInterruptHandler,w,c
 16412  00623E  1009               	iorwf	_UART1_TxInterruptHandler+1,w,c
 16413  006240  100A               	iorwf	_UART1_TxInterruptHandler+2,w,c
 16414  006242  B4D8               	btfsc	status,2,c
 16415  006244  0011               	retfie		f
 16416                           
 16417                           ;mcc_generated_files/uart1.c: 200:   UART1_TxInterruptHandler();
 16418  006246  D801               	call	i2u433_48
 16419  006248  0011               	retfie		f
 16420  00624A                     i2u433_48:
 16421  00624A  0005               	push	
 16422  00624C  6EFA               	movwf	pclath,c
 16423  00624E  5008               	movf	_UART1_TxInterruptHandler,w,c
 16424  006250  6EFD               	movwf	tosl,c
 16425  006252  5009               	movf	_UART1_TxInterruptHandler+1,w,c
 16426  006254  6EFE               	movwf	tosh,c
 16427  006256  500A               	movf	_UART1_TxInterruptHandler+2,w,c
 16428  006258  6EFF               	movwf	tosu,c
 16429  00625A  50FA               	movf	pclath,w,c
 16430  00625C  0012               	return		;indir
 16431  00625E                     __end_of_UART1_tx_vect_isr:
 16432                           	opt callstack 0
 16433                           
 16434 ;; *************** function _UART1_Transmit_ISR *****************
 16435 ;; Defined at:
 16436 ;;		line 211 in file "mcc_generated_files/uart1.c"
 16437 ;; Parameters:    Size  Location     Type
 16438 ;;		None
 16439 ;; Auto vars:     Size  Location     Type
 16440 ;;		None
 16441 ;; Return value:  Size  Location     Type
 16442 ;;                  1  [STACK] void 
 16443 ;; Registers used:
 16444 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16445 ;; Tracked objects:
 16446 ;;		On entry : 0/0
 16447 ;;		On exit  : 3B/39
 16448 ;;		Unchanged: 0/0
 16449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16454 ;;Total ram usage:        0 bytes
 16455 ;; Hardware stack levels used:    1
 16456 ;; This function calls:
 16457 ;;		Nothing
 16458 ;; This function is called by:
 16459 ;;		_UART1_Initialize
 16460 ;;		_UART1_tx_vect_isr
 16461 ;; This function uses a reentrant model
 16462 ;;
 16463                           
 16464                           	psect	text95
 16465  005F0C                     __ptext95:
 16466                           	opt callstack 0
 16467  005F0C                     _UART1_Transmit_ISR:
 16468                           	opt callstack 18
 16469                           
 16470                           ;mcc_generated_files/uart1.c: 214:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 16471                           
 16472                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16473                           ;incstack = 0
 16474  005F0C  0E40               	movlw	64
 16475  005F0E  603A               	cpfslt	_uart1TxBufferRemaining,c
 16476  005F10  D010               	goto	l597
 16477                           
 16478                           ;mcc_generated_files/uart1.c: 215:   U1TXB = uart1TxBuffer[uart1TxTail++];
 16479  005F12  0E80               	movlw	low _uart1TxBuffer
 16480  005F14  243B               	addwf	_uart1TxTail,w,c	;volatile
 16481  005F16  6ED9               	movwf	fsr2l,c
 16482  005F18  6ADA               	clrf	fsr2h,c
 16483  005F1A  0E02               	movlw	high _uart1TxBuffer
 16484  005F1C  22DA               	addwfc	fsr2h,f,c
 16485  005F1E  50DF               	movf	indf2,w,c
 16486  005F20  013D               	movlb	61	; () banked
 16487  005F22  6FEA               	movwf	234,b	;volatile
 16488                           
 16489                           ; BSR set to: 61
 16490  005F24  2A3B               	incf	_uart1TxTail,f,c	;volatile
 16491                           
 16492                           ; BSR set to: 61
 16493                           ;mcc_generated_files/uart1.c: 216:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 16494  005F26  0E3F               	movlw	63
 16495  005F28  643B               	cpfsgt	_uart1TxTail,c
 16496  005F2A  D001               	goto	l6703
 16497                           
 16498                           ; BSR set to: 61
 16499                           ;mcc_generated_files/uart1.c: 217:    uart1TxTail = 0;
 16500  005F2C  6A3B               	clrf	_uart1TxTail,c	;volatile
 16501  005F2E                     l6703:
 16502                           
 16503                           ; BSR set to: 61
 16504                           ;mcc_generated_files/uart1.c: 219:   uart1TxBufferRemaining++;
 16505  005F2E  2A3A               	incf	_uart1TxBufferRemaining,f,c	;volatile
 16506                           
 16507                           ;mcc_generated_files/uart1.c: 220:  } else {
 16508  005F30  0012               	return	
 16509  005F32                     l597:
 16510                           
 16511                           ;mcc_generated_files/uart1.c: 221:   PIE3bits.U1TXIE = 0;
 16512  005F32  0139               	movlb	57	; () banked
 16513  005F34  9993               	bcf	147,4,b	;volatile
 16514                           
 16515                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16516  005F36  0012               	return		;funcret
 16517  005F38                     __end_of_UART1_Transmit_ISR:
 16518                           	opt callstack 0
 16519                           
 16520 ;; *************** function _UART1_rx_vect_isr *****************
 16521 ;; Defined at:
 16522 ;;		line 204 in file "mcc_generated_files/uart1.c"
 16523 ;; Parameters:    Size  Location     Type
 16524 ;;		None
 16525 ;; Auto vars:     Size  Location     Type
 16526 ;;		None
 16527 ;; Return value:  Size  Location     Type
 16528 ;;                  1    wreg      void 
 16529 ;; Registers used:
 16530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16531 ;; Tracked objects:
 16532 ;;		On entry : 0/0
 16533 ;;		On exit  : 0/0
 16534 ;;		Unchanged: 0/0
 16535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16540 ;;Total ram usage:        0 bytes
 16541 ;; Hardware stack levels used:    1
 16542 ;; Hardware stack levels required when called:    1
 16543 ;; This function calls:
 16544 ;;		Absolute function
 16545 ;;		_UART1_Receive_ISR
 16546 ;; This function is called by:
 16547 ;;		Interrupt level 2
 16548 ;; This function uses a non-reentrant model
 16549 ;;
 16550                           
 16551                           	psect	text96
 16552  006260                     __ptext96:
 16553                           	opt callstack 0
 16554  006260                     _UART1_rx_vect_isr:
 16555                           	opt callstack 18
 16556                           
 16557                           ;incstack = 0
 16558  006260  EE13  F200         	lfsr	1,___inthi_sp
 16559                           
 16560                           ;mcc_generated_files/uart1.c: 206:  if (UART1_RxInterruptHandler) {
 16561  006264  500B               	movf	_UART1_RxInterruptHandler,w,c
 16562  006266  100C               	iorwf	_UART1_RxInterruptHandler+1,w,c
 16563  006268  100D               	iorwf	_UART1_RxInterruptHandler+2,w,c
 16564  00626A  B4D8               	btfsc	status,2,c
 16565  00626C  0011               	retfie		f
 16566                           
 16567                           ;mcc_generated_files/uart1.c: 207:   UART1_RxInterruptHandler();
 16568  00626E  D801               	call	i2u435_48
 16569  006270  0011               	retfie		f
 16570  006272                     i2u435_48:
 16571  006272  0005               	push	
 16572  006274  6EFA               	movwf	pclath,c
 16573  006276  500B               	movf	_UART1_RxInterruptHandler,w,c
 16574  006278  6EFD               	movwf	tosl,c
 16575  00627A  500C               	movf	_UART1_RxInterruptHandler+1,w,c
 16576  00627C  6EFE               	movwf	tosh,c
 16577  00627E  500D               	movf	_UART1_RxInterruptHandler+2,w,c
 16578  006280  6EFF               	movwf	tosu,c
 16579  006282  50FA               	movf	pclath,w,c
 16580  006284  0012               	return		;indir
 16581  006286                     __end_of_UART1_rx_vect_isr:
 16582                           	opt callstack 0
 16583                           
 16584 ;; *************** function _UART1_Receive_ISR *****************
 16585 ;; Defined at:
 16586 ;;		line 227 in file "mcc_generated_files/uart1.c"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;		None
 16589 ;; Auto vars:     Size  Location     Type
 16590 ;;		None
 16591 ;; Return value:  Size  Location     Type
 16592 ;;                  1  [STACK] void 
 16593 ;; Registers used:
 16594 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16595 ;; Tracked objects:
 16596 ;;		On entry : 0/0
 16597 ;;		On exit  : 0/0
 16598 ;;		Unchanged: 0/0
 16599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16604 ;;Total ram usage:        0 bytes
 16605 ;; Hardware stack levels used:    1
 16606 ;; This function calls:
 16607 ;;		Nothing
 16608 ;; This function is called by:
 16609 ;;		_UART1_Initialize
 16610 ;;		_UART1_rx_vect_isr
 16611 ;; This function uses a reentrant model
 16612 ;;
 16613                           
 16614                           	psect	text97
 16615  0063C6                     __ptext97:
 16616                           	opt callstack 0
 16617  0063C6                     _UART1_Receive_ISR:
 16618                           	opt callstack 18
 16619                           
 16620                           ;mcc_generated_files/uart1.c: 230:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 16621                           
 16622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16623                           ;incstack = 0
 16624  0063C6  0E40               	movlw	low _uart1RxBuffer
 16625  0063C8  2439               	addwf	_uart1RxHead,w,c	;volatile
 16626  0063CA  6ED9               	movwf	fsr2l,c
 16627  0063CC  6ADA               	clrf	fsr2h,c
 16628  0063CE  0E02               	movlw	high _uart1RxBuffer
 16629  0063D0  22DA               	addwfc	fsr2h,f,c
 16630  0063D2  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 16631  0063D8  2A39               	incf	_uart1RxHead,f,c	;volatile
 16632                           
 16633                           ;mcc_generated_files/uart1.c: 231:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 16634  0063DA  0E3F               	movlw	63
 16635  0063DC  6439               	cpfsgt	_uart1RxHead,c
 16636  0063DE  D001               	goto	l6713
 16637                           
 16638                           ;mcc_generated_files/uart1.c: 232:   uart1RxHead = 0;
 16639  0063E0  6A39               	clrf	_uart1RxHead,c	;volatile
 16640  0063E2                     l6713:
 16641                           
 16642                           ;mcc_generated_files/uart1.c: 234:  uart1RxCount++;
 16643  0063E2  2A37               	incf	_uart1RxCount,f,c	;volatile
 16644                           
 16645                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16646  0063E4  0012               	return		;funcret
 16647  0063E6                     __end_of_UART1_Receive_ISR:
 16648                           	opt callstack 0
 16649                           
 16650 ;; *************** function _UART2_tx_vect_isr *****************
 16651 ;; Defined at:
 16652 ;;		line 195 in file "mcc_generated_files/uart2.c"
 16653 ;; Parameters:    Size  Location     Type
 16654 ;;		None
 16655 ;; Auto vars:     Size  Location     Type
 16656 ;;		None
 16657 ;; Return value:  Size  Location     Type
 16658 ;;                  1    wreg      void 
 16659 ;; Registers used:
 16660 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16661 ;; Tracked objects:
 16662 ;;		On entry : 0/0
 16663 ;;		On exit  : 0/0
 16664 ;;		Unchanged: 0/0
 16665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16670 ;;Total ram usage:        0 bytes
 16671 ;; Hardware stack levels used:    1
 16672 ;; Hardware stack levels required when called:    1
 16673 ;; This function calls:
 16674 ;;		Absolute function
 16675 ;;		_UART2_Transmit_ISR
 16676 ;; This function is called by:
 16677 ;;		Interrupt level 2
 16678 ;; This function uses a non-reentrant model
 16679 ;;
 16680                           
 16681                           	psect	text98
 16682  006288                     __ptext98:
 16683                           	opt callstack 0
 16684  006288                     _UART2_tx_vect_isr:
 16685                           	opt callstack 18
 16686                           
 16687                           ;incstack = 0
 16688  006288  EE13  F200         	lfsr	1,___inthi_sp
 16689                           
 16690                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 16691  00628C  500E               	movf	_UART2_TxInterruptHandler,w,c
 16692  00628E  100F               	iorwf	_UART2_TxInterruptHandler+1,w,c
 16693  006290  1010               	iorwf	_UART2_TxInterruptHandler+2,w,c
 16694  006292  B4D8               	btfsc	status,2,c
 16695  006294  0011               	retfie		f
 16696                           
 16697                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 16698  006296  D801               	call	i2u437_48
 16699  006298  0011               	retfie		f
 16700  00629A                     i2u437_48:
 16701  00629A  0005               	push	
 16702  00629C  6EFA               	movwf	pclath,c
 16703  00629E  500E               	movf	_UART2_TxInterruptHandler,w,c
 16704  0062A0  6EFD               	movwf	tosl,c
 16705  0062A2  500F               	movf	_UART2_TxInterruptHandler+1,w,c
 16706  0062A4  6EFE               	movwf	tosh,c
 16707  0062A6  5010               	movf	_UART2_TxInterruptHandler+2,w,c
 16708  0062A8  6EFF               	movwf	tosu,c
 16709  0062AA  50FA               	movf	pclath,w,c
 16710  0062AC  0012               	return		;indir
 16711  0062AE                     __end_of_UART2_tx_vect_isr:
 16712                           	opt callstack 0
 16713                           
 16714 ;; *************** function _UART2_Transmit_ISR *****************
 16715 ;; Defined at:
 16716 ;;		line 213 in file "mcc_generated_files/uart2.c"
 16717 ;; Parameters:    Size  Location     Type
 16718 ;;		None
 16719 ;; Auto vars:     Size  Location     Type
 16720 ;;		None
 16721 ;; Return value:  Size  Location     Type
 16722 ;;                  1  [STACK] void 
 16723 ;; Registers used:
 16724 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16725 ;; Tracked objects:
 16726 ;;		On entry : 0/0
 16727 ;;		On exit  : 3B/39
 16728 ;;		Unchanged: 0/0
 16729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16731 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16733 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16734 ;;Total ram usage:        0 bytes
 16735 ;; Hardware stack levels used:    1
 16736 ;; This function calls:
 16737 ;;		Nothing
 16738 ;; This function is called by:
 16739 ;;		_UART2_Initialize
 16740 ;;		_UART2_tx_vect_isr
 16741 ;; This function uses a reentrant model
 16742 ;;
 16743                           
 16744                           	psect	text99
 16745  005F38                     __ptext99:
 16746                           	opt callstack 0
 16747  005F38                     _UART2_Transmit_ISR:
 16748                           	opt callstack 18
 16749                           
 16750                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 16751                           
 16752                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16753                           ;incstack = 0
 16754  005F38  0E40               	movlw	64
 16755  005F3A  6034               	cpfslt	_uart2TxBufferRemaining,c
 16756  005F3C  D010               	goto	l717
 16757                           
 16758                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 16759  005F3E  0E00               	movlw	low _uart2TxBuffer
 16760  005F40  2435               	addwf	_uart2TxTail,w,c	;volatile
 16761  005F42  6ED9               	movwf	fsr2l,c
 16762  005F44  6ADA               	clrf	fsr2h,c
 16763  005F46  0E03               	movlw	high _uart2TxBuffer
 16764  005F48  22DA               	addwfc	fsr2h,f,c
 16765  005F4A  50DF               	movf	indf2,w,c
 16766  005F4C  013D               	movlb	61	; () banked
 16767  005F4E  6FD2               	movwf	210,b	;volatile
 16768                           
 16769                           ; BSR set to: 61
 16770  005F50  2A35               	incf	_uart2TxTail,f,c	;volatile
 16771                           
 16772                           ; BSR set to: 61
 16773                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 16774  005F52  0E3F               	movlw	63
 16775  005F54  6435               	cpfsgt	_uart2TxTail,c
 16776  005F56  D001               	goto	l6725
 16777                           
 16778                           ; BSR set to: 61
 16779                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 16780  005F58  6A35               	clrf	_uart2TxTail,c	;volatile
 16781  005F5A                     l6725:
 16782                           
 16783                           ; BSR set to: 61
 16784                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 16785  005F5A  2A34               	incf	_uart2TxBufferRemaining,f,c	;volatile
 16786                           
 16787                           ;mcc_generated_files/uart2.c: 224:     }
 16788  005F5C  0012               	return	
 16789  005F5E                     l717:
 16790                           
 16791                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 16792  005F5E  0139               	movlb	57	; () banked
 16793  005F60  9796               	bcf	150,3,b	;volatile
 16794                           
 16795                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 16796  005F62  0012               	return		;funcret
 16797  005F64                     __end_of_UART2_Transmit_ISR:
 16798                           	opt callstack 0
 16799                           
 16800 ;; *************** function _UART2_rx_vect_isr *****************
 16801 ;; Defined at:
 16802 ;;		line 203 in file "mcc_generated_files/uart2.c"
 16803 ;; Parameters:    Size  Location     Type
 16804 ;;		None
 16805 ;; Auto vars:     Size  Location     Type
 16806 ;;		None
 16807 ;; Return value:  Size  Location     Type
 16808 ;;                  1    wreg      void 
 16809 ;; Registers used:
 16810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 16811 ;; Tracked objects:
 16812 ;;		On entry : 0/0
 16813 ;;		On exit  : 0/0
 16814 ;;		Unchanged: 0/0
 16815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16820 ;;Total ram usage:        0 bytes
 16821 ;; Hardware stack levels used:    1
 16822 ;; Hardware stack levels required when called:    1
 16823 ;; This function calls:
 16824 ;;		Absolute function
 16825 ;;		_UART2_Receive_ISR
 16826 ;; This function is called by:
 16827 ;;		Interrupt level 2
 16828 ;; This function uses a non-reentrant model
 16829 ;;
 16830                           
 16831                           	psect	text100
 16832  0062B0                     __ptext100:
 16833                           	opt callstack 0
 16834  0062B0                     _UART2_rx_vect_isr:
 16835                           	opt callstack 18
 16836                           
 16837                           ;incstack = 0
 16838  0062B0  EE13  F200         	lfsr	1,___inthi_sp
 16839                           
 16840                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 16841  0062B4  5011               	movf	_UART2_RxInterruptHandler,w,c
 16842  0062B6  1012               	iorwf	_UART2_RxInterruptHandler+1,w,c
 16843  0062B8  1013               	iorwf	_UART2_RxInterruptHandler+2,w,c
 16844  0062BA  B4D8               	btfsc	status,2,c
 16845  0062BC  0011               	retfie		f
 16846                           
 16847                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 16848  0062BE  D801               	call	i2u439_48
 16849  0062C0  0011               	retfie		f
 16850  0062C2                     i2u439_48:
 16851  0062C2  0005               	push	
 16852  0062C4  6EFA               	movwf	pclath,c
 16853  0062C6  5011               	movf	_UART2_RxInterruptHandler,w,c
 16854  0062C8  6EFD               	movwf	tosl,c
 16855  0062CA  5012               	movf	_UART2_RxInterruptHandler+1,w,c
 16856  0062CC  6EFE               	movwf	tosh,c
 16857  0062CE  5013               	movf	_UART2_RxInterruptHandler+2,w,c
 16858  0062D0  6EFF               	movwf	tosu,c
 16859  0062D2  50FA               	movf	pclath,w,c
 16860  0062D4  0012               	return		;indir
 16861  0062D6                     __end_of_UART2_rx_vect_isr:
 16862                           	opt callstack 0
 16863                           
 16864 ;; *************** function _UART2_Receive_ISR *****************
 16865 ;; Defined at:
 16866 ;;		line 233 in file "mcc_generated_files/uart2.c"
 16867 ;; Parameters:    Size  Location     Type
 16868 ;;		None
 16869 ;; Auto vars:     Size  Location     Type
 16870 ;;		None
 16871 ;; Return value:  Size  Location     Type
 16872 ;;                  1  [STACK] void 
 16873 ;; Registers used:
 16874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16875 ;; Tracked objects:
 16876 ;;		On entry : 0/0
 16877 ;;		On exit  : 0/0
 16878 ;;		Unchanged: 0/0
 16879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16881 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16883 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16884 ;;Total ram usage:        0 bytes
 16885 ;; Hardware stack levels used:    1
 16886 ;; This function calls:
 16887 ;;		Nothing
 16888 ;; This function is called by:
 16889 ;;		_UART2_Initialize
 16890 ;;		_UART2_rx_vect_isr
 16891 ;; This function uses a reentrant model
 16892 ;;
 16893                           
 16894                           	psect	text101
 16895  0063E6                     __ptext101:
 16896                           	opt callstack 0
 16897  0063E6                     _UART2_Receive_ISR:
 16898                           	opt callstack 18
 16899                           
 16900                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 16901                           
 16902                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 16903                           ;incstack = 0
 16904  0063E6  0E00               	movlw	low _uart2RxBuffer
 16905  0063E8  2433               	addwf	_uart2RxHead,w,c	;volatile
 16906  0063EA  6ED9               	movwf	fsr2l,c
 16907  0063EC  6ADA               	clrf	fsr2h,c
 16908  0063EE  0E02               	movlw	high _uart2RxBuffer
 16909  0063F0  22DA               	addwfc	fsr2h,f,c
 16910  0063F2  006F F743 FFDF     	movff	15824,indf2	;volatile
 16911  0063F8  2A33               	incf	_uart2RxHead,f,c	;volatile
 16912                           
 16913                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 16914  0063FA  0E3F               	movlw	63
 16915  0063FC  6433               	cpfsgt	_uart2RxHead,c
 16916  0063FE  D001               	goto	l6735
 16917                           
 16918                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 16919  006400  6A33               	clrf	_uart2RxHead,c	;volatile
 16920  006402                     l6735:
 16921                           
 16922                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 16923  006402  2A31               	incf	_uart2RxCount,f,c	;volatile
 16924                           
 16925                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 16926  006404  0012               	return		;funcret
 16927  006406                     __end_of_UART2_Receive_ISR:
 16928                           	opt callstack 0
 16929                           
 16930 ;; *************** function _TMR6_ISR *****************
 16931 ;; Defined at:
 16932 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 16933 ;; Parameters:    Size  Location     Type
 16934 ;;		None
 16935 ;; Auto vars:     Size  Location     Type
 16936 ;;		None
 16937 ;; Return value:  Size  Location     Type
 16938 ;;                  1    wreg      void 
 16939 ;; Registers used:
 16940 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16941 ;; Tracked objects:
 16942 ;;		On entry : 0/0
 16943 ;;		On exit  : 0/0
 16944 ;;		Unchanged: 0/0
 16945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16947 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16948 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16949 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16950 ;;Total ram usage:        1 bytes
 16951 ;; Hardware stack levels used:    1
 16952 ;; Hardware stack levels required when called:    2
 16953 ;; This function calls:
 16954 ;;		_TMR6_CallBack
 16955 ;; This function is called by:
 16956 ;;		Interrupt level 2
 16957 ;; This function uses a non-reentrant model
 16958 ;;
 16959                           
 16960                           	psect	text102
 16961  006494                     __ptext102:
 16962                           	opt callstack 0
 16963  006494                     _TMR6_ISR:
 16964                           	opt callstack 17
 16965                           
 16966                           ;incstack = 0
 16967  006494  0060  F0F4  F05E   	movff	btemp,??_TMR6_ISR
 16968  00649A  EE13  F200         	lfsr	1,___inthi_sp
 16969                           
 16970                           ;mcc_generated_files/tmr6.c: 175:  PIR9bits.TMR6IF = 0;
 16971  00649E  0139               	movlb	57	; () banked
 16972  0064A0  91A9               	bcf	169,0,b	;volatile
 16973                           
 16974                           ; BSR set to: 57
 16975                           ;mcc_generated_files/tmr6.c: 179:  TMR6_CallBack();
 16976  0064A2  EC6B  F031         	call	_TMR6_CallBack	;wreg free
 16977  0064A6  0060  F178  F03D   	movff	??_TMR6_ISR,btemp
 16978  0064AC  0011               	retfie		f
 16979  0064AE                     __end_of_TMR6_ISR:
 16980                           	opt callstack 0
 16981                           
 16982 ;; *************** function _TMR6_CallBack *****************
 16983 ;; Defined at:
 16984 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 16985 ;; Parameters:    Size  Location     Type
 16986 ;;		None
 16987 ;; Auto vars:     Size  Location     Type
 16988 ;;		None
 16989 ;; Return value:  Size  Location     Type
 16990 ;;                  1  [STACK] void 
 16991 ;; Registers used:
 16992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 16993 ;; Tracked objects:
 16994 ;;		On entry : 3F/39
 16995 ;;		On exit  : 0/0
 16996 ;;		Unchanged: 0/0
 16997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 16998 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 16999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17000 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17001 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17002 ;;Total ram usage:        0 bytes
 17003 ;; Hardware stack levels used:    1
 17004 ;; Hardware stack levels required when called:    1
 17005 ;; This function calls:
 17006 ;;		Absolute function
 17007 ;;		_TMR6_DefaultInterruptHandler
 17008 ;; This function is called by:
 17009 ;;		_TMR6_ISR
 17010 ;; This function uses a reentrant model
 17011 ;;
 17012                           
 17013                           	psect	text103
 17014  0062D6                     __ptext103:
 17015                           	opt callstack 0
 17016  0062D6                     _TMR6_CallBack:
 17017                           	opt callstack 17
 17018                           
 17019                           ;mcc_generated_files/tmr6.c: 186:  if (TMR6_InterruptHandler) {
 17020                           
 17021                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17022                           ;incstack = 0
 17023  0062D6  0100               	movlb	0	; () banked
 17024  0062D8  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17025  0062DA  11EA               	iorwf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17026  0062DC  11EB               	iorwf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17027  0062DE  B4D8               	btfsc	status,2,c
 17028  0062E0  0012               	return	
 17029                           
 17030                           ; BSR set to: 0
 17031                           ;mcc_generated_files/tmr6.c: 187:   TMR6_InterruptHandler();
 17032  0062E2  D801               	call	u526_48
 17033  0062E4  0012               	return	
 17034  0062E6                     u526_48:
 17035  0062E6  0005               	push	
 17036  0062E8  6EFA               	movwf	pclath,c
 17037  0062EA  51E9               	movf	_TMR6_InterruptHandler& (0+255),w,b
 17038  0062EC  6EFD               	movwf	tosl,c
 17039  0062EE  51EA               	movf	(_TMR6_InterruptHandler+1)& (0+255),w,b
 17040  0062F0  6EFE               	movwf	tosh,c
 17041  0062F2  51EB               	movf	(_TMR6_InterruptHandler+2)& (0+255),w,b
 17042  0062F4  6EFF               	movwf	tosu,c
 17043  0062F6  50FA               	movf	pclath,w,c
 17044  0062F8  0012               	return		;indir
 17045  0062FA                     __end_of_TMR6_CallBack:
 17046                           	opt callstack 0
 17047                           
 17048 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 17049 ;; Defined at:
 17050 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 17051 ;; Parameters:    Size  Location     Type
 17052 ;;		None
 17053 ;; Auto vars:     Size  Location     Type
 17054 ;;  i               1  [STACK] unsigned char 
 17055 ;; Return value:  Size  Location     Type
 17056 ;;                  1  [STACK] void 
 17057 ;; Registers used:
 17058 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 17059 ;; Tracked objects:
 17060 ;;		On entry : 3F/0
 17061 ;;		On exit  : 0/0
 17062 ;;		Unchanged: 0/0
 17063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17068 ;;Total ram usage:        0 bytes
 17069 ;; Hardware stack levels used:    1
 17070 ;; This function calls:
 17071 ;;		Nothing
 17072 ;; This function is called by:
 17073 ;;		_TMR6_Initialize
 17074 ;;		_TMR6_CallBack
 17075 ;; This function uses a reentrant model
 17076 ;;
 17077                           
 17078                           	psect	text104
 17079  005A98                     __ptext104:
 17080                           	opt callstack 0
 17081  005A98                     _TMR6_DefaultInterruptHandler:
 17082                           	opt callstack 0
 17083                           
 17084                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17085  005A98  52E6               	movf	postinc1,f,c
 17086                           
 17087                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 17088                           ;stkvar	_i @ sp[(-1)+0]
 17089                           
 17090                           ;incstack = 0
 17091  005A9A  0EFF               	movlw	-1
 17092  005A9C  6AE3               	clrf	plusw1,c
 17093  005A9E                     l8437:
 17094                           
 17095                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 17096                           ;stkvar	_i @ sp[(-1)+0]
 17097  005A9E  0EFF               	movlw	-1
 17098  005AA0  50E3               	movf	plusw1,w,c
 17099  005AA2  0D02               	mullw	2
 17100  005AA4  0EC0               	movlw	low _tickCount
 17101  005AA6  24F3               	addwf	prodl,w,c
 17102  005AA8  6ED9               	movwf	fsr2l,c
 17103  005AAA  0E01               	movlw	high _tickCount
 17104  005AAC  20F4               	addwfc	prodh,w,c
 17105  005AAE  6EDA               	movwf	fsr2h,c
 17106  005AB0  50DE               	movf	postinc2,w,c
 17107  005AB2  10DE               	iorwf	postinc2,w,c
 17108  005AB4  B4D8               	btfsc	status,2,c
 17109  005AB6  D00C               	goto	l8441
 17110                           
 17111                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 17112                           ;stkvar	_i @ sp[(-1)+0]
 17113  005AB8  0EFF               	movlw	-1
 17114  005ABA  50E3               	movf	plusw1,w,c
 17115  005ABC  0D02               	mullw	2
 17116  005ABE  0EC0               	movlw	low _tickCount
 17117  005AC0  24F3               	addwf	prodl,w,c
 17118  005AC2  6ED9               	movwf	fsr2l,c
 17119  005AC4  0E01               	movlw	high _tickCount
 17120  005AC6  20F4               	addwfc	prodh,w,c
 17121  005AC8  6EDA               	movwf	fsr2h,c
 17122  005ACA  06DE               	decf	postinc2,f,c
 17123  005ACC  0E00               	movlw	0
 17124  005ACE  5ADD               	subwfb	postdec2,f,c
 17125  005AD0                     l8441:
 17126                           
 17127                           ;mcc_generated_files/tmr6.c: 207:  }
 17128                           ;stkvar	_i @ sp[(-1)+0]
 17129  005AD0  0EFF               	movlw	-1
 17130  005AD2  2AE3               	incf	plusw1,f,c
 17131                           
 17132                           ;stkvar	_i @ sp[(-1)+0]
 17133  005AD4  0EFF               	movlw	-1
 17134  005AD6  006F FF8C  F03D    	movff	plusw1,btemp
 17135  005ADC  0E06               	movlw	6
 17136  005ADE  643D               	cpfsgt	btemp,c
 17137  005AE0  D7DE               	goto	l8437
 17138                           
 17139                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17140  005AE2  52E5               	movf	postdec1,f,c
 17141  005AE4  0012               	return		;funcret
 17142  005AE6                     __end_of_TMR6_DefaultInterruptHandler:
 17143                           	opt callstack 0
 17144                           
 17145 ;; *************** function _DMA1_DMASCNT_ISR *****************
 17146 ;; Defined at:
 17147 ;;		line 126 in file "mcc_generated_files/dma1.c"
 17148 ;; Parameters:    Size  Location     Type
 17149 ;;		None
 17150 ;; Auto vars:     Size  Location     Type
 17151 ;;		None
 17152 ;; Return value:  Size  Location     Type
 17153 ;;                  1    wreg      void 
 17154 ;; Registers used:
 17155 ;;		None
 17156 ;; Tracked objects:
 17157 ;;		On entry : 0/0
 17158 ;;		On exit  : 3F/0
 17159 ;;		Unchanged: 0/0
 17160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17165 ;;Total ram usage:        0 bytes
 17166 ;; Hardware stack levels used:    1
 17167 ;; This function calls:
 17168 ;;		Nothing
 17169 ;; This function is called by:
 17170 ;;		Interrupt level 2
 17171 ;; This function uses a non-reentrant model
 17172 ;;
 17173                           
 17174                           	psect	text105
 17175  006508                     __ptext105:
 17176                           	opt callstack 0
 17177  006508                     _DMA1_DMASCNT_ISR:
 17178                           	opt callstack 19
 17179                           
 17180                           ;incstack = 0
 17181  006508  EE13  F200         	lfsr	1,___inthi_sp
 17182                           
 17183                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 17184  00650C  0139               	movlb	57	; () banked
 17185  00650E  91A2               	bcf	162,0,b	;volatile
 17186                           
 17187                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 17188  006510  0100               	movlb	0	; () banked
 17189  006512  97CF               	bcf	_spi_link& (0+255),3,b	;volatile
 17190                           
 17191                           ; BSR set to: 0
 17192                           
 17193                           ;mcc_generated_files/dma1.c: 131:  do { LATEbits.LATE1 = 0; } while(0);
 17194  006514  92BE               	bcf	16318,1,c	;volatile
 17195                           
 17196                           ; BSR set to: 0
 17197  006516  0011               	retfie		f
 17198  006518                     __end_of_DMA1_DMASCNT_ISR:
 17199                           	opt callstack 0
 17200                           
 17201 ;; *************** function _DMA1_DMADCNT_ISR *****************
 17202 ;; Defined at:
 17203 ;;		line 134 in file "mcc_generated_files/dma1.c"
 17204 ;; Parameters:    Size  Location     Type
 17205 ;;		None
 17206 ;; Auto vars:     Size  Location     Type
 17207 ;;		None
 17208 ;; Return value:  Size  Location     Type
 17209 ;;                  1    wreg      void 
 17210 ;; Registers used:
 17211 ;;		None
 17212 ;; Tracked objects:
 17213 ;;		On entry : 0/0
 17214 ;;		On exit  : 3F/39
 17215 ;;		Unchanged: 0/0
 17216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17221 ;;Total ram usage:        0 bytes
 17222 ;; Hardware stack levels used:    1
 17223 ;; This function calls:
 17224 ;;		Nothing
 17225 ;; This function is called by:
 17226 ;;		Interrupt level 2
 17227 ;; This function uses a non-reentrant model
 17228 ;;
 17229                           
 17230                           	psect	text106
 17231  006560                     __ptext106:
 17232                           	opt callstack 0
 17233  006560                     _DMA1_DMADCNT_ISR:
 17234                           	opt callstack 19
 17235                           
 17236                           ; BSR set to: 0
 17237                           ;incstack = 0
 17238  006560  EE13  F200         	lfsr	1,___inthi_sp
 17239                           
 17240                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 17241  006564  0139               	movlb	57	; () banked
 17242  006566  93A2               	bcf	162,1,b	;volatile
 17243                           
 17244                           ; BSR set to: 57
 17245  006568  0011               	retfie		f
 17246  00656A                     __end_of_DMA1_DMADCNT_ISR:
 17247                           	opt callstack 0
 17248                           
 17249 ;; *************** function _DMA1_DMAA_ISR *****************
 17250 ;; Defined at:
 17251 ;;		line 144 in file "mcc_generated_files/dma1.c"
 17252 ;; Parameters:    Size  Location     Type
 17253 ;;		None
 17254 ;; Auto vars:     Size  Location     Type
 17255 ;;		None
 17256 ;; Return value:  Size  Location     Type
 17257 ;;                  1    wreg      void 
 17258 ;; Registers used:
 17259 ;;		None
 17260 ;; Tracked objects:
 17261 ;;		On entry : 0/0
 17262 ;;		On exit  : 3F/39
 17263 ;;		Unchanged: 0/0
 17264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17269 ;;Total ram usage:        0 bytes
 17270 ;; Hardware stack levels used:    1
 17271 ;; This function calls:
 17272 ;;		Nothing
 17273 ;; This function is called by:
 17274 ;;		Interrupt level 2
 17275 ;; This function uses a non-reentrant model
 17276 ;;
 17277                           
 17278                           	psect	text107
 17279  00656C                     __ptext107:
 17280                           	opt callstack 0
 17281  00656C                     _DMA1_DMAA_ISR:
 17282                           	opt callstack 19
 17283                           
 17284                           ; BSR set to: 57
 17285                           ;incstack = 0
 17286  00656C  EE13  F200         	lfsr	1,___inthi_sp
 17287                           
 17288                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 17289  006570  0139               	movlb	57	; () banked
 17290  006572  97A2               	bcf	162,3,b	;volatile
 17291                           
 17292                           ; BSR set to: 57
 17293  006574  0011               	retfie		f
 17294  006576                     __end_of_DMA1_DMAA_ISR:
 17295                           	opt callstack 0
 17296                           
 17297 ;; *************** function _DMA1_DMAOR_ISR *****************
 17298 ;; Defined at:
 17299 ;;		line 155 in file "mcc_generated_files/dma1.c"
 17300 ;; Parameters:    Size  Location     Type
 17301 ;;		None
 17302 ;; Auto vars:     Size  Location     Type
 17303 ;;		None
 17304 ;; Return value:  Size  Location     Type
 17305 ;;                  1    wreg      void 
 17306 ;; Registers used:
 17307 ;;		None
 17308 ;; Tracked objects:
 17309 ;;		On entry : 0/0
 17310 ;;		On exit  : 3F/39
 17311 ;;		Unchanged: 0/0
 17312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17317 ;;Total ram usage:        0 bytes
 17318 ;; Hardware stack levels used:    1
 17319 ;; This function calls:
 17320 ;;		Nothing
 17321 ;; This function is called by:
 17322 ;;		Interrupt level 2
 17323 ;; This function uses a non-reentrant model
 17324 ;;
 17325                           
 17326                           	psect	text108
 17327  006578                     __ptext108:
 17328                           	opt callstack 0
 17329  006578                     _DMA1_DMAOR_ISR:
 17330                           	opt callstack 19
 17331                           
 17332                           ; BSR set to: 57
 17333                           ;incstack = 0
 17334  006578  EE13  F200         	lfsr	1,___inthi_sp
 17335                           
 17336                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 17337  00657C  0139               	movlb	57	; () banked
 17338  00657E  95A2               	bcf	162,2,b	;volatile
 17339                           
 17340                           ; BSR set to: 57
 17341  006580  0011               	retfie		f
 17342  006582                     __end_of_DMA1_DMAOR_ISR:
 17343                           	opt callstack 0
 17344                           
 17345 ;; *************** function _TMR5_ISR *****************
 17346 ;; Defined at:
 17347 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 17348 ;; Parameters:    Size  Location     Type
 17349 ;;		None
 17350 ;; Auto vars:     Size  Location     Type
 17351 ;;		None
 17352 ;; Return value:  Size  Location     Type
 17353 ;;                  1    wreg      void 
 17354 ;; Registers used:
 17355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 17356 ;; Tracked objects:
 17357 ;;		On entry : 0/0
 17358 ;;		On exit  : 0/0
 17359 ;;		Unchanged: 0/0
 17360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17361 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17362 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17363 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17364 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17365 ;;Total ram usage:        3 bytes
 17366 ;; Hardware stack levels used:    1
 17367 ;; Hardware stack levels required when called:    2
 17368 ;; This function calls:
 17369 ;;		_TMR5_CallBack
 17370 ;;		_TMR5_WriteTimer
 17371 ;; This function is called by:
 17372 ;;		Interrupt level 2
 17373 ;; This function uses a non-reentrant model
 17374 ;;
 17375                           
 17376                           	psect	text109
 17377  005AE8                     __ptext109:
 17378                           	opt callstack 0
 17379  005AE8                     _TMR5_ISR:
 17380                           	opt callstack 17
 17381                           
 17382                           ; BSR set to: 57
 17383                           ;incstack = 0
 17384  005AE8  0060  F120  F0F3   	movff	btemp+11,??_TMR5_ISR+2
 17385  005AEE  EE13  F200         	lfsr	1,___inthi_sp
 17386                           
 17387                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 17388  005AF2  0139               	movlb	57	; () banked
 17389  005AF4  9DA8               	bcf	168,6,b	;volatile
 17390                           
 17391                           ; BSR set to: 57
 17392                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 17393  005AF6  0060  F0A7  FFE6   	movff	_timer5ReloadVal,postinc1
 17394  005AFC  0060  F0AB  FFE6   	movff	_timer5ReloadVal+1,postinc1
 17395  005B02  EC6D  F02E         	call	_TMR5_WriteTimer	;wreg free
 17396                           
 17397                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 17398  005B06  0100               	movlb	0	; () banked
 17399  005B08  51C1               	movf	(_V+97)& (0+255),w,b	;volatile
 17400  005B0A  6FF1               	movwf	??_TMR5_ISR& (0+255),b
 17401  005B0C  6BF2               	clrf	(??_TMR5_ISR+1)& (0+255),b
 17402  005B0E  0E05               	movlw	5
 17403  005B10  27F1               	addwf	??_TMR5_ISR& (0+255),f,b
 17404  005B12  0E00               	movlw	0
 17405  005B14  23F2               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 17406  005B16  4A27               	infsnz	TMR5_ISR@CountCallBack,f,c	;volatile
 17407  005B18  2A28               	incf	TMR5_ISR@CountCallBack+1,f,c	;volatile
 17408  005B1A  51F1               	movf	??_TMR5_ISR& (0+255),w,b
 17409  005B1C  5C27               	subwf	TMR5_ISR@CountCallBack,w,c	;volatile
 17410  005B1E  51F2               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 17411  005B20  5828               	subwfb	TMR5_ISR@CountCallBack+1,w,c	;volatile
 17412  005B22  A0D8               	btfss	status,0,c
 17413  005B24  D004               	goto	i2l1145
 17414                           
 17415                           ; BSR set to: 0
 17416                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 17417  005B26  EC7D  F031         	call	_TMR5_CallBack	;wreg free
 17418                           
 17419                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 17420  005B2A  6A27               	clrf	TMR5_ISR@CountCallBack,c	;volatile
 17421  005B2C  6A28               	clrf	TMR5_ISR@CountCallBack+1,c	;volatile
 17422  005B2E                     i2l1145:
 17423  005B2E  0060  F3CC  F048   	movff	??_TMR5_ISR+2,btemp+11
 17424  005B34  0011               	retfie		f
 17425  005B36                     __end_of_TMR5_ISR:
 17426                           	opt callstack 0
 17427                           
 17428 ;; *************** function _TMR5_WriteTimer *****************
 17429 ;; Defined at:
 17430 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 17431 ;; Parameters:    Size  Location     Type
 17432 ;;  timerVal        2  [STACK] unsigned short 
 17433 ;; Auto vars:     Size  Location     Type
 17434 ;;		None
 17435 ;; Return value:  Size  Location     Type
 17436 ;;                  1  [STACK] void 
 17437 ;; Registers used:
 17438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 17439 ;; Tracked objects:
 17440 ;;		On entry : 3F/39
 17441 ;;		On exit  : 0/0
 17442 ;;		Unchanged: 0/0
 17443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17448 ;;Total ram usage:        0 bytes
 17449 ;; Hardware stack levels used:    1
 17450 ;; This function calls:
 17451 ;;		Nothing
 17452 ;; This function is called by:
 17453 ;;		_TMR5_ISR
 17454 ;; This function uses a reentrant model
 17455 ;;
 17456                           
 17457                           	psect	text110
 17458  005CDA                     __ptext110:
 17459                           	opt callstack 0
 17460  005CDA                     _TMR5_WriteTimer:
 17461                           	opt callstack 18
 17462                           
 17463                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 17464                           
 17465                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17466                           ;incstack = 0
 17467  005CDA  A49A               	btfss	16282,2,c	;volatile
 17468  005CDC  D00F               	goto	l6751
 17469                           
 17470                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 17471  005CDE  909A               	bcf	16282,0,c	;volatile
 17472                           
 17473                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 17474                           ;stkvar	_timerVal @ sp[(0)+-2]
 17475  005CE0  0EFF               	movlw	255
 17476  005CE2  24E1               	addwf	fsr1l,w,c
 17477  005CE4  6ED9               	movwf	fsr2l,c
 17478  005CE6  0EFF               	movlw	255
 17479  005CE8  20E2               	addwfc	fsr1h,w,c
 17480  005CEA  6EDA               	movwf	fsr2h,c
 17481  005CEC  50DF               	movf	indf2,w,c
 17482  005CEE  6E99               	movwf	16281,c	;volatile
 17483                           
 17484                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 17485                           ;stkvar	_timerVal @ sp[(0)+-2]
 17486  005CF0  0EFE               	movlw	-2
 17487  005CF2  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17488                           
 17489                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 17490  005CF8  809A               	bsf	16282,0,c	;volatile
 17491                           
 17492                           ;mcc_generated_files/tmr5.c: 142:  } else {
 17493  005CFA  D00C               	goto	l1128
 17494  005CFC                     l6751:
 17495                           
 17496                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 17497                           ;stkvar	_timerVal @ sp[(0)+-2]
 17498  005CFC  0EFF               	movlw	255
 17499  005CFE  24E1               	addwf	fsr1l,w,c
 17500  005D00  6ED9               	movwf	fsr2l,c
 17501  005D02  0EFF               	movlw	255
 17502  005D04  20E2               	addwfc	fsr1h,w,c
 17503  005D06  6EDA               	movwf	fsr2h,c
 17504  005D08  50DF               	movf	indf2,w,c
 17505  005D0A  6E99               	movwf	16281,c	;volatile
 17506                           
 17507                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 17508                           ;stkvar	_timerVal @ sp[(0)+-2]
 17509  005D0C  0EFE               	movlw	-2
 17510  005D0E  006F FF8F FF98     	movff	plusw1,16280	;volatile
 17511  005D14                     l1128:
 17512                           
 17513                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 17514  005D14  52E5               	movf	postdec1,f,c
 17515  005D16  52E5               	movf	postdec1,f,c
 17516  005D18  0012               	return		;funcret
 17517  005D1A                     __end_of_TMR5_WriteTimer:
 17518                           	opt callstack 0
 17519                           
 17520 ;; *************** function _TMR5_CallBack *****************
 17521 ;; Defined at:
 17522 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 17523 ;; Parameters:    Size  Location     Type
 17524 ;;		None
 17525 ;; Auto vars:     Size  Location     Type
 17526 ;;		None
 17527 ;; Return value:  Size  Location     Type
 17528 ;;                  1  [STACK] void 
 17529 ;; Registers used:
 17530 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 17531 ;; Tracked objects:
 17532 ;;		On entry : 3F/0
 17533 ;;		On exit  : 0/0
 17534 ;;		Unchanged: 0/0
 17535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17540 ;;Total ram usage:        0 bytes
 17541 ;; Hardware stack levels used:    1
 17542 ;; Hardware stack levels required when called:    1
 17543 ;; This function calls:
 17544 ;;		Absolute function
 17545 ;;		_TMR5_DefaultInterruptHandler
 17546 ;; This function is called by:
 17547 ;;		_TMR5_ISR
 17548 ;; This function uses a reentrant model
 17549 ;;
 17550                           
 17551                           	psect	text111
 17552  0062FA                     __ptext111:
 17553                           	opt callstack 0
 17554  0062FA                     _TMR5_CallBack:
 17555                           	opt callstack 17
 17556                           
 17557                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 17558                           
 17559                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17560                           ;incstack = 0
 17561  0062FA  0100               	movlb	0	; () banked
 17562  0062FC  51E6               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17563  0062FE  11E7               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17564  006300  11E8               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17565  006302  B4D8               	btfsc	status,2,c
 17566  006304  0012               	return	
 17567                           
 17568                           ; BSR set to: 0
 17569                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 17570  006306  D801               	call	u366_48
 17571  006308  0012               	return	
 17572  00630A                     u366_48:
 17573  00630A  0005               	push	
 17574  00630C  6EFA               	movwf	pclath,c
 17575  00630E  51E6               	movf	_TMR5_InterruptHandler& (0+255),w,b
 17576  006310  6EFD               	movwf	tosl,c
 17577  006312  51E7               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 17578  006314  6EFE               	movwf	tosh,c
 17579  006316  51E8               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 17580  006318  6EFF               	movwf	tosu,c
 17581  00631A  50FA               	movf	pclath,w,c
 17582  00631C  0012               	return		;indir
 17583  00631E                     __end_of_TMR5_CallBack:
 17584                           	opt callstack 0
 17585                           
 17586 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 17587 ;; Defined at:
 17588 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 17589 ;; Parameters:    Size  Location     Type
 17590 ;;		None
 17591 ;; Auto vars:     Size  Location     Type
 17592 ;;		None
 17593 ;; Return value:  Size  Location     Type
 17594 ;;                  1  [STACK] void 
 17595 ;; Registers used:
 17596 ;;		wreg, status,2, status,0, btemp+11
 17597 ;; Tracked objects:
 17598 ;;		On entry : 3F/0
 17599 ;;		On exit  : 0/0
 17600 ;;		Unchanged: 0/0
 17601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17605 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17606 ;;Total ram usage:        0 bytes
 17607 ;; Hardware stack levels used:    1
 17608 ;; This function calls:
 17609 ;;		Nothing
 17610 ;; This function is called by:
 17611 ;;		_TMR5_Initialize
 17612 ;;		_TMR5_CallBack
 17613 ;; This function uses a reentrant model
 17614 ;;
 17615                           
 17616                           	psect	text112
 17617  0064AE                     __ptext112:
 17618                           	opt callstack 0
 17619  0064AE                     _TMR5_DefaultInterruptHandler:
 17620                           	opt callstack 17
 17621                           
 17622                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 17623                           
 17624                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17625                           ;incstack = 0
 17626  0064AE  A0BE               	btfss	16318,0,c	;volatile
 17627  0064B0  D002               	goto	u340_40
 17628  0064B2  0E01               	movlw	1
 17629  0064B4  D001               	goto	u340_46
 17630  0064B6                     u340_40:
 17631  0064B6  0E00               	movlw	0
 17632  0064B8                     u340_46:
 17633  0064B8  0AFF               	xorlw	255
 17634  0064BA  6E48               	movwf	btemp+11,c
 17635  0064BC  50BE               	movf	16318,w,c	;volatile
 17636  0064BE  1848               	xorwf	btemp+11,w,c
 17637  0064C0  0BFE               	andlw	-2
 17638  0064C2  1848               	xorwf	btemp+11,w,c
 17639  0064C4  6EBE               	movwf	16318,c	;volatile
 17640                           
 17641                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 17642  0064C6  0012               	return		;funcret
 17643  0064C8                     __end_of_TMR5_DefaultInterruptHandler:
 17644                           	opt callstack 0
 17645                           
 17646                           ;
 17647                           ; Interrupt Vector Table @ 0x8
 17648                           ;
 17649                           
 17650                           	psect	ivt0x8
 17651  000008                     __pivt0x8:
 17652                           	opt callstack 0
 17653  000008                     ivt0x8_base:
 17654                           	opt callstack 0
 17655                           
 17656                           ; Vector 0 : SWINT
 17657  000008  196C               	dw	_Default_ISR shr (0+2)
 17658                           
 17659                           ; Vector 1 : HLVD
 17660  00000A  196C               	dw	_Default_ISR shr (0+2)
 17661                           
 17662                           ; Vector 2 : OSF
 17663  00000C  196C               	dw	_Default_ISR shr (0+2)
 17664                           
 17665                           ; Vector 3 : CSW
 17666  00000E  196C               	dw	_Default_ISR shr (0+2)
 17667                           
 17668                           ; Vector 4 : NVM
 17669  000010  196C               	dw	_Default_ISR shr (0+2)
 17670                           
 17671                           ; Vector 5 : SCAN
 17672  000012  196C               	dw	_Default_ISR shr (0+2)
 17673                           
 17674                           ; Vector 6 : CRC
 17675  000014  196C               	dw	_Default_ISR shr (0+2)
 17676                           
 17677                           ; Vector 7 : IOC
 17678  000016  196C               	dw	_Default_ISR shr (0+2)
 17679                           
 17680                           ; Vector 8 : INT0
 17681  000018  194A               	dw	_INT0_ISR shr (0+2)
 17682                           
 17683                           ; Vector 9 : ZCD
 17684  00001A  196C               	dw	_Default_ISR shr (0+2)
 17685                           
 17686                           ; Vector 10 : AD
 17687  00001C  17B8               	dw	_ADCC_ISR shr (0+2)
 17688                           
 17689                           ; Vector 11 : ADT
 17690  00001E  196C               	dw	_Default_ISR shr (0+2)
 17691                           
 17692                           ; Vector 12 : CMP1
 17693  000020  196C               	dw	_Default_ISR shr (0+2)
 17694                           
 17695                           ; Vector 13 : SMT1
 17696  000022  196C               	dw	_Default_ISR shr (0+2)
 17697                           
 17698                           ; Vector 14 : SMT1PRA
 17699  000024  196C               	dw	_Default_ISR shr (0+2)
 17700                           
 17701                           ; Vector 15 : SMT1PRW
 17702  000026  196C               	dw	_Default_ISR shr (0+2)
 17703                           
 17704                           ; Vector 16 : DMA1SCNT
 17705  000028  1942               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 17706                           
 17707                           ; Vector 17 : DMA1DCNT
 17708  00002A  1958               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 17709                           
 17710                           ; Vector 18 : DMA1OR
 17711  00002C  195E               	dw	_DMA1_DMAOR_ISR shr (0+2)
 17712                           
 17713                           ; Vector 19 : DMA1A
 17714  00002E  195B               	dw	_DMA1_DMAA_ISR shr (0+2)
 17715                           
 17716                           ; Vector 20 : SPI1RX
 17717  000030  196C               	dw	_Default_ISR shr (0+2)
 17718                           
 17719                           ; Vector 21 : SPI1TX
 17720  000032  196C               	dw	_Default_ISR shr (0+2)
 17721                           
 17722                           ; Vector 22 : SPI1
 17723  000034  196C               	dw	_Default_ISR shr (0+2)
 17724                           
 17725                           ; Vector 23 : I2C1RX
 17726  000036  196C               	dw	_Default_ISR shr (0+2)
 17727                           
 17728                           ; Vector 24 : I2C1TX
 17729  000038  196C               	dw	_Default_ISR shr (0+2)
 17730                           
 17731                           ; Vector 25 : I2C1
 17732  00003A  196C               	dw	_Default_ISR shr (0+2)
 17733                           
 17734                           ; Vector 26 : I2C1E
 17735  00003C  196C               	dw	_Default_ISR shr (0+2)
 17736                           
 17737                           ; Vector 27 : U1RX
 17738  00003E  1898               	dw	_UART1_rx_vect_isr shr (0+2)
 17739                           
 17740                           ; Vector 28 : U1TX
 17741  000040  188E               	dw	_UART1_tx_vect_isr shr (0+2)
 17742                           
 17743                           ; Vector 29 : U1E
 17744  000042  196C               	dw	_Default_ISR shr (0+2)
 17745                           
 17746                           ; Vector 30 : U1
 17747  000044  196C               	dw	_Default_ISR shr (0+2)
 17748                           
 17749                           ; Vector 31 : TMR0
 17750  000046  196C               	dw	_Default_ISR shr (0+2)
 17751                           
 17752                           ; Vector 32 : TMR1
 17753  000048  196C               	dw	_Default_ISR shr (0+2)
 17754                           
 17755                           ; Vector 33 : TMR1G
 17756  00004A  196C               	dw	_Default_ISR shr (0+2)
 17757                           
 17758                           ; Vector 34 : TMR2
 17759  00004C  196C               	dw	_Default_ISR shr (0+2)
 17760                           
 17761                           ; Vector 35 : CCP1
 17762  00004E  196C               	dw	_Default_ISR shr (0+2)
 17763                           
 17764                           ; Vector 36 : Undefined
 17765  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 17766                           
 17767                           ; Vector 37 : NCO1
 17768  000052  196C               	dw	_Default_ISR shr (0+2)
 17769                           
 17770                           ; Vector 38 : CWG1
 17771  000054  196C               	dw	_Default_ISR shr (0+2)
 17772                           
 17773                           ; Vector 39 : CLC1
 17774  000056  196C               	dw	_Default_ISR shr (0+2)
 17775                           
 17776                           ; Vector 40 : INT1
 17777  000058  194E               	dw	_INT1_ISR shr (0+2)
 17778                           
 17779                           ; Vector 41 : CMP2
 17780  00005A  196C               	dw	_Default_ISR shr (0+2)
 17781                           
 17782                           ; Vector 42 : DMA2SCNT
 17783  00005C  196C               	dw	_Default_ISR shr (0+2)
 17784                           
 17785                           ; Vector 43 : DMA2DCNT
 17786  00005E  196C               	dw	_Default_ISR shr (0+2)
 17787                           
 17788                           ; Vector 44 : DMA2OR
 17789  000060  196C               	dw	_Default_ISR shr (0+2)
 17790                           
 17791                           ; Vector 45 : DMA2A
 17792  000062  196C               	dw	_Default_ISR shr (0+2)
 17793                           
 17794                           ; Vector 46 : I2C2RX
 17795  000064  196C               	dw	_Default_ISR shr (0+2)
 17796                           
 17797                           ; Vector 47 : I2C2TX
 17798  000066  196C               	dw	_Default_ISR shr (0+2)
 17799                           
 17800                           ; Vector 48 : I2C2
 17801  000068  196C               	dw	_Default_ISR shr (0+2)
 17802                           
 17803                           ; Vector 49 : I2C2E
 17804  00006A  196C               	dw	_Default_ISR shr (0+2)
 17805                           
 17806                           ; Vector 50 : U2RX
 17807  00006C  18AC               	dw	_UART2_rx_vect_isr shr (0+2)
 17808                           
 17809                           ; Vector 51 : U2TX
 17810  00006E  18A2               	dw	_UART2_tx_vect_isr shr (0+2)
 17811                           
 17812                           ; Vector 52 : U2E
 17813  000070  196C               	dw	_Default_ISR shr (0+2)
 17814                           
 17815                           ; Vector 53 : U2
 17816  000072  196C               	dw	_Default_ISR shr (0+2)
 17817                           
 17818                           ; Vector 54 : TMR3
 17819  000074  196C               	dw	_Default_ISR shr (0+2)
 17820                           
 17821                           ; Vector 55 : TMR3G
 17822  000076  196C               	dw	_Default_ISR shr (0+2)
 17823                           
 17824                           ; Vector 56 : TMR4
 17825  000078  196C               	dw	_Default_ISR shr (0+2)
 17826                           
 17827                           ; Vector 57 : CCP2
 17828  00007A  196C               	dw	_Default_ISR shr (0+2)
 17829                           
 17830                           ; Vector 58 : Undefined
 17831  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 17832                           
 17833                           ; Vector 59 : CWG2
 17834  00007E  196C               	dw	_Default_ISR shr (0+2)
 17835                           
 17836                           ; Vector 60 : CLC2
 17837  000080  196C               	dw	_Default_ISR shr (0+2)
 17838                           
 17839                           ; Vector 61 : INT2
 17840  000082  1952               	dw	_INT2_ISR shr (0+2)
 17841                           
 17842                           ; Vector 62 : Undefined
 17843  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 17844                           
 17845                           ; Vector 63 : Undefined
 17846  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 17847                           
 17848                           ; Vector 64 : Undefined
 17849  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 17850                           
 17851                           ; Vector 65 : Undefined
 17852  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 17853                           
 17854                           ; Vector 66 : Undefined
 17855  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 17856                           
 17857                           ; Vector 67 : Undefined
 17858  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 17859                           
 17860                           ; Vector 68 : Undefined
 17861  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 17862                           
 17863                           ; Vector 69 : Undefined
 17864  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 17865                           
 17866                           ; Vector 70 : TMR5
 17867  000094  16BA               	dw	_TMR5_ISR shr (0+2)
 17868                           
 17869                           ; Vector 71 : TMR5G
 17870  000096  196C               	dw	_Default_ISR shr (0+2)
 17871                           
 17872                           ; Vector 72 : TMR6
 17873  000098  1925               	dw	_TMR6_ISR shr (0+2)
 17874                           
 17875                           ; Vector 73 : CCP3
 17876  00009A  196C               	dw	_Default_ISR shr (0+2)
 17877                           
 17878                           ; Vector 74 : CWG3
 17879  00009C  196C               	dw	_Default_ISR shr (0+2)
 17880                           
 17881                           ; Vector 75 : CLC3
 17882  00009E  196C               	dw	_Default_ISR shr (0+2)
 17883                           
 17884                           ; Vector 76 : Undefined
 17885  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 17886                           
 17887                           ; Vector 77 : Undefined
 17888  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 17889                           
 17890                           ; Vector 78 : Undefined
 17891  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 17892                           
 17893                           ; Vector 79 : Undefined
 17894  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 17895                           
 17896                           ; Vector 80 : CCP4
 17897  0000A8  196C               	dw	_Default_ISR shr (0+2)
 17898                           
 17899                           ; Vector 81 : CLC4
 17900  0000AA  196C               	dw	_Default_ISR shr (0+2)
 17901  0000AC                     ivt0x8_undefint:
 17902                           	opt callstack 0
 17903  0000AC  00FF               	reset	
 17904                           
 17905                           	psect	text113
 17906  000000                     __ptext113:
 17907                           	opt callstack 0
 17908                           
 17909                           	psect	rparam
 17910  0000                     
 17911                           	psect	temp
 17912  00003D                     btemp:
 17913                           	opt callstack 0
 17914  00003D                     	ds	32
 17915  0000                     wtemp0	set	btemp
 17916  0000                     wtemp1	set	btemp+2
 17917  0000                     wtemp2	set	btemp+4
 17918  0000                     wtemp3	set	btemp+6
 17919  0000                     wtemp4	set	btemp+8
 17920  0000                     wtemp5	set	btemp+10
 17921  0000                     wtemp8	set	btemp+1
 17922  0000                     ttemp0	set	btemp
 17923  0000                     ttemp1	set	btemp+3
 17924  0000                     ttemp2	set	btemp+6
 17925  0000                     ttemp3	set	btemp+9
 17926  0000                     ttemp5	set	btemp+1
 17927  0000                     ttemp6	set	btemp+4
 17928  0000                     ttemp7	set	btemp+8
 17929  0000                     ltemp0	set	btemp
 17930  0000                     ltemp1	set	btemp+4
 17931  0000                     ltemp2	set	btemp+8
 17932  0000                     lltemp0	set	btemp
 17933  0000                     lltemp1	set	btemp+8
 17934  0000                     lltemp2	set	btemp+16
 17935  0000                     lltemp3	set	btemp+24
 17936                           tosu	equ	0x3FFF
 17937                           tosh	equ	0x3FFE
 17938                           tosl	equ	0x3FFD
 17939                           stkptr	equ	0x3FFC
 17940                           pclatu	equ	0x3FFB
 17941                           pclath	equ	0x3FFA
 17942                           pcl	equ	0x3FF9
 17943                           tblptru	equ	0x3FF8
 17944                           tblptrh	equ	0x3FF7
 17945                           tblptrl	equ	0x3FF6
 17946                           tablat	equ	0x3FF5
 17947                           prodh	equ	0x3FF4
 17948                           prodl	equ	0x3FF3
 17949                           indf0	equ	0x3FEF
 17950                           postinc0	equ	0x3FEE
 17951                           postdec0	equ	0x3FED
 17952                           preinc0	equ	0x3FEC
 17953                           plusw0	equ	0x3FEB
 17954                           fsr0h	equ	0x3FEA
 17955                           fsr0l	equ	0x3FE9
 17956                           wreg	equ	0x3FE8
 17957                           indf1	equ	0x3FE7
 17958                           postinc1	equ	0x3FE6
 17959                           postdec1	equ	0x3FE5
 17960                           preinc1	equ	0x3FE4
 17961                           plusw1	equ	0x3FE3
 17962                           fsr1h	equ	0x3FE2
 17963                           fsr1l	equ	0x3FE1
 17964                           bsr	equ	0x3FE0
 17965                           indf2	equ	0x3FDF
 17966                           postinc2	equ	0x3FDE
 17967                           postdec2	equ	0x3FDD
 17968                           preinc2	equ	0x3FDC
 17969                           plusw2	equ	0x3FDB
 17970                           fsr2h	equ	0x3FDA
 17971                           fsr2l	equ	0x3FD9
 17972                           status	equ	0x3FD8


Data Sizes:
    Strings     195
    Constant    0
    Data        636
    BSS         551
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      1      62
    BANK0           160      3     148
    BANK1           256      0     246
    BANK2           256      0     224
    BANK3           256      0     254
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    ?_secs_II_message.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    ?_secs_II_message.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[32]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    _r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    r	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_25(CODE[3]), STR_21(CODE[3]), 

    _l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    a	PTR const unsigned char  size(2) Largest target is 98
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK1[32]), 
		 -> STR_3(CODE[6]), V(BANK0[98]), 

    fmt	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_15(CODE[26]), STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), 
		 -> STR_11(CODE[26]), STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), 
		 -> STR_7(CODE[6]), STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), 
		 -> STR_2(CODE[12]), STR_1(CODE[17]), 

    s	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    S4461_IO_FILE$buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp.buffer	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(1) Largest target is 26
		 -> STR_18(CODE[3]), STR_17(CODE[3]), STR_16(CODE[3]), STR_15(CODE[26]), 
		 -> STR_14(CODE[26]), STR_13(CODE[6]), STR_12(CODE[19]), STR_11(CODE[26]), 
		 -> STR_10(CODE[21]), STR_9(CODE[18]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[14]), STR_5(CODE[21]), STR_4(CODE[15]), STR_2(CODE[12]), 
		 -> STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 1
		 -> cfmt(STACK[1]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_3(CODE[6]), V(BANK0[98]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_3(CODE[6]), 
		 -> V(BANK0[98]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[5]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    F16647.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16647.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[32]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK2[32]), H12(BANK1[30]), H10(BANK1[91]), 

    k	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK2[32]), H12(BANK1[30]), H10(BANK1[91]), 

    t_link	PTR enum E16172 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    S3769response_type$reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    F16635.reply	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H12(BANK1[30]), H10(BANK1[91]), 

    S3769response_type$header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[32]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    F16635.header	PTR unsigned char  size(2) Largest target is 91
		 -> H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), H13(BANK2[32]), 
		 -> H12(BANK1[30]), H10(BANK1[91]), 

    r_protocol@b_block	PTR unsigned char  size(2) Largest target is 257
		 -> H254(BIGRAM[257]), NULL(NULL[0]), 

    r_link	PTR enum E16172 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    m_link	PTR enum E16172 size(1) Largest target is 98
		 -> V(BANK0[98]), 

    byte_block	PTR unsigned char  size(2) Largest target is 91
		 -> H53(BANK3[56]), H24(BANK1[27]), H17(BANK1[20]), H14(BANK1[17]), 
		 -> H13(BANK2[32]), H12(BANK1[30]), H10(BANK1[91]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    strPtr	PTR unsigned char  size(1) Largest target is 98
		 -> V(BANK0[98]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1987spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1987spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT2_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _INT2_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _INT2_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _INT2_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _INT2_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _INT2_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _INT2_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _INT2_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _INT2_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _INT2_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _INT2_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _INT2_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _INT2_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _INT2_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _INT2_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _INT2_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _INT2_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _INT2_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _INT2_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _INT2_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _INT2_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _INT2_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _INT2_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _INT2_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _INT2_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _INT2_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _INT2_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _INT2_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _INT2_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _INT2_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _INT2_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _INT2_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _INT2_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _INT2_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   42460
                  _SYSTEM_Initialize
                             _WaitMs
                _eaDogM_WriteCommand
            _eaDogM_WriteStringAtPos
                       _init_display
                         _m_protocol
                         _r_protocol
                            _sprintf
                              _srand
                         _t_protocol
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _t_protocol                                           2     1      1    2005
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                   _UART1_put_buffer
                    _secs_II_message
                          _secs_send
 ---------------------------------------------------------------------------------
 (2) _secs_send                                           10     5      5    1188
                        _UART1_Write
                  _UART1_is_tx_ready
                   _UART1_put_buffer
                        _UART2_Write
                  _UART2_is_tx_ready
                   _UART2_put_buffer
                     _block_checksum
 ---------------------------------------------------------------------------------
 (3) _block_checksum                                       8     4      4     167
 ---------------------------------------------------------------------------------
 (3) _UART2_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART2_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _UART2_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (3) _UART1_put_buffer                                     1     0      1      22
 ---------------------------------------------------------------------------------
 (3) _UART1_is_tx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _secs_II_message                                      7     0      7     132
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             21     9     12    8312
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _r_protocol                                           2     1      1    1064
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                        _UART1_Write
                  _UART1_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (3) _UART1_Write                                          1     0      1      44
 ---------------------------------------------------------------------------------
 (1) _m_protocol                                           2     1      1    1146
                         _StartTimer
                          _TimerDone
                         _UART1_Read
                  _UART1_is_rx_ready
                         _UART2_Read
                  _UART2_is_rx_ready
                             _WaitMs
                       _run_checksum
                     _secs_gem_state
 ---------------------------------------------------------------------------------
 (2) _secs_gem_state                                       2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _run_checksum                                         2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _WaitMs                                               2     0      2     124
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      31
 ---------------------------------------------------------------------------------
 (2) _StartTimer                                           3     0      3      62
 ---------------------------------------------------------------------------------
 (2) _UART2_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART2_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (2) _UART1_is_rx_ready                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _UART1_Read                                           1     1      0      24
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1202
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      66
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteStringAtPos                              3     0      3   18878
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteString                                   1     0      1    9473
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1    9343
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_dma                                     1     0      1    9312
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (3) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _wait_lcd_done                                        0     0      0      22
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _wdtdelay                                             4     0      4      22
 ---------------------------------------------------------------------------------
 (3) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (3) _printf                                               7     4      3    8087
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             6     1      5    7988
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           39    33      6    7749
                               _ctoa
                               _dtoa
                              _fputc
                               _stoa
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     2      4     225
 ---------------------------------------------------------------------------------
 (4) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (4) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (5) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (5) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (5) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (4) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (5) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (5) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (7) _ringBufS_put_dma                                     3     0      3     186
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                    _CLC1_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                     _DSM_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
                    _NCO1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _SPI1_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _NCO1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      66
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT2_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DSM_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLC1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      22
        _ADCC_SetADIInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (13) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _ADCC_ISR                                            0     0      0       0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (13) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (13) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR6_ISR                                            1     1      0     130
                                              0 COMRAM     1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (13) _TMR6_CallBack                                       0     0      0     130
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR6_DefaultInterruptHandler                        1     1      0     130
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TMR5_ISR                                            3     3      0      90
                                              0 BANK0      3     3      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (13) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (13) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (14) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
     _CLC1_Initialize
     _CLKREF_Initialize
     _DMA1_Initialize
     _DSM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _NCO1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _SPI1_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _WaitMs
     _StartTimer
     _TimerDone
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _eaDogM_WriteStringAtPos
     _eaDogM_WriteString
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _strlen
       _wait_lcd_set
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _fputc
               _putch
                 _ringBufS_put_dma
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _m_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_is_rx_ready
     _UART2_Read
     _UART2_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
   _r_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _WaitMs
       _StartTimer
       _TimerDone
     _run_checksum
     _secs_gem_state
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _fputc
           _putch
             _ringBufS_put_dma
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
   _srand
   _t_protocol
     _StartTimer
     _TimerDone
     _UART1_Read
     _UART1_Write
     _UART1_is_rx_ready
     _UART1_put_buffer
     _secs_II_message
     _secs_send
       _UART1_Write
       _UART1_is_tx_ready
       _UART1_put_buffer
       _UART2_Write
       _UART2_is_tx_ready
       _UART2_put_buffer
       _block_checksum
   _wait_lcd_done
     _wdtdelay

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _INT2_ISR (ROOT)
   _INT2_CallBack
     Absolute function(Fake) *
     _INT2_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0     101      69        3.1%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      FE      11       99.2%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E0       9       87.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      F6       7       96.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3      94       5       92.5%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      1      3E       1       98.4%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3A6      58        0.0%
DATA                 0      0     4A7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Apr  3 01:22:31 2019

                    _SPI1_Exchange8bit 6406                                      _V 0060  
     __end_of_TMR5_SetInterruptHandler 6198              __end_of_UART2_is_rx_ready 659A  
                          __CFG_CP$OFF 000000                __size_of_ringBufS_flush 0092  
            __end_of_UART2_is_tx_ready 658A                            __CFG_LVP$ON 000000  
                                  _H10 0107                                    _H12 0162  
                                  _H13 02C0                                    _H14 01AF  
                                  _H24 0180                                    _H17 019B  
                                  _H53 03C6                                    l194 64EE  
                                  l572 5DFE                                    l717 5F5E  
                                  l851 6414                                    l579 5D6E  
                                  l692 5DC0                                    l597 5F32  
                                  l699 5D30                                    _GIE 01FE97  
                                  _abs 5BCC                                    _pad 4A98  
              __size_of_PMD_Initialize 0014                                    prod 003FF3  
                                  tosl 003FFD                                    wreg 003FE8  
                        _INT0_CallBack 6340                           _run_checksum 5FB8  
                   _UART1_Transmit_ISR 5F0C                          __CFG_BBEN$OFF 000000  
                        _INT1_CallBack 6362                           __CFG_ZCD$OFF 000000  
                                 _H254 03FE                                   l1230 2102  
                                 l1128 5D14                                   l1240 21BE  
                                 l1251 22B6                                   l1260 23FA  
                                 l1270 256C                                   l1254 2304  
                                 l1271 2598                                   l1280 25B8  
                                 l1256 2308                                   l1353 59F8  
                                 l1290 25D0                                   l1266 24FE  
                                 l1711 447A                                   l1636 3448  
                                 l1493 5706                                   l1581 2B94  
                                 l2606 5C0C                                   l1814 5E62  
                                 l1911 2AEA                                   l1489 5366  
                                 l1690 410A                                   l2628 4DBE  
                                 l1845 4AF4                                   l1865 306A  
                                 l5403 3EEA                                   l1892 3B48  
                                 l2668 4A8E                                   l5325 5394  
                                 l5327 53B6                                   l5431 47AE  
                                 l5423 4726                                   l6217 5DD6  
                                 l6241 5D98                                   l8101 4AEC  
                                 l8111 4B84                                   l8103 4AFE  
                                 l5391 3E18                                   l5439 485A  
                                 l5367 5BFC                                   l6351 5222  
                                 l6503 45EC                                   l6423 44D6  
                                 l8121 5758                                   l5385 3DD2  
                                 l6337 5FC4                                   l6345 5210  
                                 l6505 462A                                   l6409 4498  
                                 l8107 4B3A                                   l5379 3D7E  
                                 l8203 3ACA                                   l6355 5226  
                                 l9011 2D08                                   l9003 2CBA  
                                 l6443 452E                                   l6365 5232  
                                 l6349 521A                                   l9101 2F1C  
                                 l9013 2D0C                                   l6453 4550  
                                 l6429 44F4                                   l6541 467E  
                                 l5813 5D50                                   l6703 5F2E  
                                 l8119 572C                                   l8223 3BBA  
                                 l5591 496C                                   l6383 5280  
                                 l6375 5270                                   l6367 525E  
                                 l6359 522A                                   l6391 52B8  
                                 l9103 2F24                                   l9111 2F7A  
                                 l6455 4576                                   l6543 46B0  
                                 l5815 5D52                                   l6713 63E2  
                                 l8153 30A4                                   l8145 305A  
                                 l8241 3CDC                                   l8233 3C74  
                                 l8305 2A7C                                   l9105 2F2A  
                                 l9041 2D92                                   l9025 2D40  
                                 l6529 4664                                   l6473 459A  
                                 l8091 5632                                   l8227 3BEA  
                                 l8219 3B7E                                   l5595 499C  
                                 l8315 2A9C                                   l8411 6000  
                                 l6491 45D2                                   l6475 45B4  
                                 l5827 5F86                                   l6725 5F5A  
                                 l8077 4CEC                                   l8157 30C2  
                                 l8237 3CA0                                   l8309 2A80  
                                 l6389 5292                                   l9061 2E62  
                                 l9053 2E14                                   l9045 2DB6  
                                 l9037 2D74                                   l9109 2F38  
                                 l5773 5D8E                                   l8501 42A6  
                                 l9213 2282                                   l6751 5CFC  
                                 l6735 6402                                   l8087 55F4  
                                 l8191 33C2                                   l8167 32D4  
                                 l8343 38C8                                   l5687 5A0A  
                                 l9063 2E66                                   l5775 5D90  
                                 l9303 2502                                   l9223 22A6  
                                 l9215 2286                                   l9151 20F4  
                                 l8441 5AD0                                   l8097 4AC4  
                                 l8273 2808                                   l8265 2724  
                                 l8337 380A                                   l9049 2DE4  
                                 l8521 43AA                                   l8513 4370  
                                 l9321 25BC                                   l9305 252E  
                                 l9233 22D6                                   l9153 2108  
                                 l8187 3386                                   l8371 55A8  
                                 l9075 2E8E                                   l5787 5FB0  
                                 l8531 43F2                                   l8523 43D2  
                                 l9323 25D4                                   l9219 228E  
                                 l9315 2570                                   l8437 5A9E  
                                 l8277 285A                                   l8357 39E0  
                                 l8349 3932                                   l9093 2EFE  
                                 l8701 34AA                                   l8541 4454  
                                 l8509 4356                                   l9333 2642  
                                 l9261 23E0                                   l9253 236A  
                                 l9237 22EC                                   l9149 20EC  
                                 l8447 5E6C                                   l9095 2F0C  
                                 l8703 34B6                                   l8391 4FCE  
                                 l8527 43D8                                   l9255 239C  
                                 l8289 2980                                   l8369 5566  
                                 l9097 2F10                                   l8721 3528  
                                 l8299 2A28                                   l9099 2F18  
                                 l8395 5040                                   l8539 442C  
                                 l8547 445A                                   l8741 35AA  
                                 l8733 3558                                   l8725 3538  
                                 l8717 350A                                   l8805 371E  
                                 l9293 24D0                                   l9277 2454  
                                 l9197 2222                                   l8479 545E  
                                 l8807 3760                                   l8911 41B0  
                                 l8745 35DA                                   l8737 357C  
                                 l8729 3548                                   l8673 3410  
                                 l8913 41B8                                   l8905 4196  
                                 l9289 24C0                                   l8931 2AF8  
                                 l8755 3648                                   l8691 3476  
                                 l8907 41A4                                   l8827 3FCE  
                                 l8819 3FA0                                   l8757 364C  
                                 l8909 41A8                                   l8853 406E  
                                 l8837 4002                                   l8917 41C6  
                                 l8855 407A                                   l8839 4014  
                                 l8919 4208                                   l8945 2B46  
                                 l8793 3706                                   l8769 3674  
                                 l8881 4140                                   l8849 4056  
                                 l8795 370A                                   l8867 40DC  
                                 l8859 40A0                                   l8965 2BBA  
                                 l8789 36F0                                   l8885 4148  
                                 l8877 412A                                   l8991 2C38  
                                 l8975 2BE6                                   l8799 3716  
                                 l8895 4168                                   STR_1 206F  
                                 STR_2 209D                                   STR_3 20B5  
                                 STR_4 2080                                   l8995 2C5C  
                                 l8987 2C1A                                   STR_5 2035  
                                 STR_6 208F                                   STR_7 20AF  
                                 STR_8 20A9                                   l8999 2C8A  
                                 STR_9 205D                                   u3010 4A44  
                                 _LATA 003FBA                                   _LATB 003FBB  
                                 _LATC 003FBC                                   _LATD 003FBD  
                                 _LATE 003FBE                                   _LATF 003FBF  
                                 u3300 580E                                   u2501 3DD8  
                                 u2510 3E12                                   u2520 3E44  
                                 u5000 2774                                   u2610 4776  
                                 u2450 5BE0                                   u2380 53E4  
                                 u2540 3F22                                   u2620 47A8  
                                 u5020 28B2                                   u3325 5842  
                                 u3326 5844                                   u3318 5810  
                                 u2470 3D78                                   u2630 47DA  
                                 u2560 3F74                                   u2490 3DCE  
                                 u2650 4892                                   u3450 526C  
                                 u2387 53D6                                   u2670 48E4  
                                 u2590 4720                                   u4610 4CE0  
                                 u5090 3A54                                   u5170 544E  
                                 _T6PR 003F93                                   u5180 42A0  
                                 _PMD0 0039C0                                   _PMD1 0039C1  
                                 u4630 4D5C                                   u4710 2FBC  
                                 _PMD2 0039C2                                   _PMD3 0039C3  
                                 u4720 2FBE                                   _PMD4 0039C4  
                                 u4801 3318                                   _PMD5 0039C5  
                                 u4810 332E                                   _PMD6 0039C6  
                                 u4811 332C                                   u5435 369E  
                                 u5531 4094                                   _PMD7 0039C7  
                                 u4820 3342                                   u4740 302E  
                                 u5445 36AE                                   u5437 36A2  
                                 u4830 3346                                   u5455 36BE  
                                 u5447 36B2                                   u4760 3040  
                                 u4920 3BE0                                   u5457 36C2  
                                 u4850 335C                                   u4930 3C26  
                                 u4780 3090                                   u4790 32E8  
                                 u4960 3D02                                   u4937 3C18  
                                 u5855 2EB8                                   u5865 2EC8  
                                 u5857 2EBC                                   u5875 2ED8  
                                 u5867 2ECC                                   u5877 2EDC  
                                 _PLLR 01CEE0                                   _WPUA 003A41  
                                 _WPUB 003A51                                   _WPUC 003A61  
                                 _WPUD 003A71                                   _WPUE 003A81  
                                 _WPUF 003A91                          _INT2_CallBack 6384  
                     __end_of_ADCC_ISR 5F0C                          __CFG_FCMEN$ON 000000  
                                 _dbuf 01CE                                   _ctoa 570E  
                                 _main 20C6                                   _dtoa 2F8C  
                                 _seed 01EE                                   _prec 001F  
                                 _nout 00EF                                   fsr0h 003FEA  
                                 fsr1h 003FE2                                   indf0 003FEF  
                                 fsr2h 003FDA                                   fsr0l 003FE9  
                                 indf1 003FE7                                   indf2 003FDF  
                                 fsr1l 003FE1                                   fsr2l 003FD9  
                                 _stoa 3A5E                                   btemp 003D  
    __size_of_INT2_SetInterruptHandler 0028                                   prodl 003FF3  
                                 start 00AE                        _timer5ReloadVal 0029  
            __end_of_SPI1_Exchange8bit 6424                          __CFG_CSWEN$ON 000000  
                    _UART1_rx_vect_isr 6260                           ___param_bank 000000  
           __size_of_UART1_is_rx_ready 0008                     ?_UART1_rx_vect_isr 005E  
           __size_of_UART1_is_tx_ready 0008                       __end_of_INT0_ISR 6536  
                     __end_of_INT1_ISR 6546                       __end_of_INT2_ISR 6556  
       __size_of_OSCILLATOR_Initialize 0016               __end_of_ringBufS_put_dma 536E  
        __end_of_OSCILLATOR_Initialize 64F4                                  PRLOCK 0039EF  
                      __end_of___aodiv 3F9C                                  _ADCAP 003EF5  
                                _ADACT 003EFE                                  _ADCLK 003EFF  
                      __end_of___aomod 4908                                  _ADPCH 003EF1  
                                _ADREF 003EFD                                  STR_10 2035  
                                STR_11 2001                                  STR_12 204A  
                                STR_13 20A9                                  STR_21 20BB  
                                STR_14 2001                                  STR_23 20BE  
                                STR_15 201B                                  STR_16 20A6  
                                STR_25 20BE                                  STR_17 20C1  
                        __CFG_WDTE$OFF 000000                                  STR_19 20BB  
                                _ADRPT 003EEC                                  _U1P1H 003DED  
                                _U1P2H 003DEF                                  _U1P1L 003DEC  
                                _U1P3H 003DF1                                  _U1P2L 003DEE  
                                _U1P3L 003DF0                                  _U2P1L 003DD4  
                                _U2P2L 003DD6                                  _U2P3L 003DD8  
                                _T5CLK 003F9D                                  _T5CON 003F9A  
                                _T6CON 003F94                         __CFG_DEBUG$OFF 000000  
                                _T6HLT 003F95                                  _U1UIR 003DF8  
                                _U1RXB 003DE8                                  _U2UIR 003DE0  
                                _U1TXB 003DEA                                  _U2RXB 003DD0  
                                _U2TXB 003DD2                                  _T6TMR 003F92  
                                _T6RST 003F97                    ??_UART1_rx_vect_isr 005E  
                                _ISRPR 0039F1                                  _OSCEN 0039DD  
                                _TMR5H 003F99                                  _TMR5L 003F98  
                                _TRISA 003FC2                                  _TRISB 003FC3  
                                _TRISC 003FC4                                  _TRISD 003FC5  
                                _TRISE 003FC6                                  _TRISF 003FC7  
                          _Default_ISR 65B0      __size_of_TMR6_SetInterruptHandler 0028  
                    _UART1_tx_vect_isr 6238                          __CFG_WRTB$OFF 000000  
                        __CFG_WRTC$OFF 000000                          __CFG_WRTD$OFF 000000  
                     __end_of_TMR5_ISR 5B36                           _DMA1CON0bits 003BFC  
                     __end_of_TMR6_ISR 64AE                           _DMA1CON1bits 003BFD  
                   r_protocol@rxData_l 002E                                  _flags 0021  
                                _fputc 4CBC             __size_of_send_lcd_cmd_long 0028  
                                _fputs 55E4                     __CFG_MCLRE$EXTMCLR 000000  
                   ?_UART1_tx_vect_isr 005E                                  _srand 5E80  
                                _width 001D                                  _putch 6478  
             _INT1_SetInterruptHandler 61C0                                  pclath 003FFA  
                                tablat 003FF5                __size_of_DSM_Initialize 001C  
                                ltemp0 003D                                  ltemp1 0041  
                                ltemp2 0045               __size_of_DMA1_Initialize 006A  
                                plusw1 003FE3                                  plusw2 003FDB  
                                ttemp0 003D                                  ttemp1 0040  
                                ttemp2 0043                                  ttemp3 0046  
                                ttemp5 003E                                  ttemp6 0041  
                                ttemp7 0045                         _secs_gem_state 520E  
                                status 003FD8    __end_of_UART1_SetRxInterruptHandler 6120  
          _UART1_SetRxInterruptHandler 60F8                                  wtemp0 003D  
                                wtemp1 003F                                  wtemp2 0041  
                                wtemp3 0043                                  wtemp4 0045  
                                wtemp5 0047                                  wtemp8 003E  
                      __end_of_sprintf 514E                        __end_of_strncmp 4A98  
                  ??_UART1_tx_vect_isr 005E              __size_of_DMA1_DMADCNT_ISR 000A  
            __end_of_UART1_rx_vect_isr 6286               __size_of_SPI1_Initialize 0016  
                      _TMR5_Initialize 5C12                  __end_of_ringBufS_init 6080  
                      __initialization 4BAC                      _UART2_rx_vect_isr 62B0  
                         __end_of_ctoa 5796                           __end_of_main 2646  
                         __end_of_dtoa 340C                           __end_of_stoa 3D1C  
           __size_of_UART2_is_rx_ready 0008                         __CFG_SAFEN$OFF 000000  
                   ?_UART2_rx_vect_isr 005E             __size_of_UART2_is_tx_ready 0008  
             _TMR5_SetInterruptHandler 6170                          __activetblptr 000003  
            __size_of_DMA1_DMASCNT_ISR 0010   __size_of_UART1_SetTxInterruptHandler 0028  
                  ??_UART2_rx_vect_isr 005E              __end_of_UART1_tx_vect_isr 625E  
                               INTCON0 003FD2   __size_of_UART2_SetRxInterruptHandler 0028  
                       __CFG_MVECEN$ON 000000                        _TMR6_Initialize 6120  
                     _UART1_Initialize 5866                      _UART2_tx_vect_isr 6288  
                   _UART2_Transmit_ISR 5F38                                 _ADACCU 003EEA  
                               _ADACQH 003EF4                                 _ADACQL 003EF3  
                               _ADCON0 003EF8                                 _ADCON1 003EF9  
                               _ADCON2 003EFA                                 _ADCON3 003EFB  
                               _ADLTHH 003EDF                                 _ADLTHL 003EDE  
                               _ADPREH 003EF7                                 _ADPREL 003EF6  
                               _DMA1PR 0039F3                                 _DMA2PR 0039F4  
                               _ADSTAT 003EFC                                 _ADUTHH 003EE1  
                               _ADUTHL 003EE0                                 _ANSELA 003A40  
                               _ANSELB 003A50                                 _ANSELC 003A60  
                               _ANSELD 003A70                                 _ANSELE 003A80  
                               _ANSELF 003A90                     ?_UART2_tx_vect_isr 005E  
                               _MD1SRC 003CFC                 __end_of_secs_gem_state 52C4  
                               _U1CON0 003DF2                                 _U1CON1 003DF3  
                               _U1CON2 003DF4                    __size_of_UART1_Read 003E  
                               _U1BRGH 003DF6                                 _U1FIFO 003DF7  
                               _U2CON0 003DDA                                 _U2CON1 003DDB  
                               _U1BRGL 003DF5                                 _U2CON2 003DDC  
                               _U2BRGH 003DDE                                 _U2FIFO 003DDF  
                               _U2BRGL 003DDD                                 _T5GATE 003F9C  
                  __size_of_UART2_Read 003E                                 _T5GCON 003F9B  
                               _MAINPR 0039F2                                 _RA4PPS 003A04  
                               _RA5PPS 003A05                                 _RA6PPS 003A06  
                               _RC3PPS 003A13                                 _RB6PPS 003A0E  
                               _RC5PPS 003A15                                 _ODCONA 003A42  
                               _ODCONB 003A52                                 _ODCONC 003A62  
                               _RC6PPS 003A16                                 _ODCOND 003A72  
                               _ODCONE 003A82                                 _ODCONF 003A92  
                               i2l1145 5B2E                         __CFG_WDTCCS$SC 000000  
                               u125_48 634E                                 u127_48 6370  
                               u129_48 6392                                 u340_40 64B6  
                               u340_46 64B8                                 _SCANPR 0039F7  
                               _IVTADH 00389E                                 _IVTADL 00389D  
                               _IVTADU 00389F                                 u366_48 630A  
                               u526_48 62E6           __size_of_eaDogM_WriteCommand 000E  
                               _OSCFRQ 0039DF               __end_of_send_lcd_cmd_dma 5A98  
                  ??_UART2_tx_vect_isr 005E              __end_of_UART2_rx_vect_isr 62D6  
           __size_of_SPI1_Exchange8bit 001E                 __size_of_DMA1_DMAA_ISR 000A  
                       __CFG_XINST$OFF 000000                      _CLKREF_Initialize 6556  
                     _UART2_Initialize 598E                                 _WaitMs 5E4A  
 __size_of_ADCC_SetADIInterruptHandler 0028                         __CFG_STVREN$ON 000000  
                       _ringBufS_flush 567C                                 _memset 3772  
                               clear_0 4C74                                 clear_1 4C80  
                               clear_2 4C8C                                 clear_3 4C98  
                               clear_4 4CA4                                 _printf 592C  
                   _eaDogM_WriteString 5410                              ?_ADCC_ISR 005E  
                               _strlen 536E                     __size_of_TimerDone 0028  
                         __pdataBIGRAM 03FE                        _ADCC_Initialize 5B82  
                       _PMD_Initialize 64F4   __end_of_INT2_DefaultInterruptHandler 65BC  
__size_of_INT2_DefaultInterruptHandler 0002           _INT2_DefaultInterruptHandler 65BA  
                         __pdataCOMRAM 005D              __end_of_UART2_tx_vect_isr 62AE  
                               lltemp0 003D                                 lltemp1 0045  
                               lltemp2 004D                                 lltemp3 0055  
                         __mediumconst 0000                                 tblptrh 003FF7  
                               tblptrl 003FF6                                 tblptru 003FF8  
                     __end_of_wdtdelay 5A48                       __end_of_vfprintf 55E4  
                           _StartTimer 5C9A                        _CLC1_Initialize 631E  
        __size_of_INTERRUPT_Initialize 0066                __end_of_TMR5_Initialize 5C58  
                    _SYSTEM_Initialize 5C58                             __accesstop 0060  
              __end_of__initialization 4CB6                              ?_INT0_ISR 005E  
                            ?_INT1_ISR 005E                              ?_INT2_ISR 005E  
            __end_of_CLKREF_Initialize 6560                          ___rparam_used 000001  
           __size_of_UART1_rx_vect_isr 0026                        _TMR5_WriteTimer 5CDA  
               __end_of_ringBufS_flush 570E                         __pcstackCOMRAM 005E  
                           ___inthi_sp 0E00                           __pidataBANK0 58CA  
                         __pidataBANK1 514E                           __pidataBANK2 63A6  
                         __pidataBANK3 5E12                              ?_TMR5_ISR 005E  
                            ?_TMR6_ISR 005E                         ivt0x8_undefint 00AC  
                        __end_of_fputc 4DC8                          __end_of_fputs 567C  
                        __end_of_srand 5EB4                  __end_of_TMR5_CallBack 631E  
                        __end_of_putch 6492                __end_of_TMR6_Initialize 6148  
               __end_of_PMD_Initialize 6508                __size_of_block_checksum 00D2  
                           ??_ADCC_ISR 005E                  __end_of_TMR6_CallBack 62FA  
          __size_of_EXT_INT_Initialize 004C             __size_of_UART1_tx_vect_isr 0026  
                        _DMA1_DMAA_ISR 656C       __end_of_INT2_SetInterruptHandler 61C0  
             _UART2_RxInterruptHandler 0011              __end_of_SYSTEM_Initialize 5C9A  
                      __CFG_PR1WAY$OFF 000000                        __CFG_IVT1WAY$ON 000000  
                       _DSM_Initialize 645C                             __pbssBANK0 00C2  
                           __pbssBANK1 01C0                             __pbssBANK2 0200  
                           __pbssBANK3 0300                  _INT0_InterruptHandler 001A  
                           ??_INT0_ISR 005E                             ??_INT1_ISR 005E  
                           ??_INT2_ISR 005E                      __end_of_TimerDone 6008  
                     _DMA1_DMADCNT_ISR 6560              __size_of_UART1_put_buffer 002A  
           __size_of_UART2_rx_vect_isr 0026                                IVTBASEH 003FD6  
                              IVTBASEL 003FD5                                IVTBASEU 003FD7  
                __end_of_wait_lcd_done 6440                        __CFG_PPS1WAY$ON 000000  
     __end_of_TMR6_SetInterruptHandler 6170                __end_of_ADCC_Initialize 5BCC  
                           ??_TMR5_ISR 00F1                             ??_TMR6_ISR 005E  
                   __size_of_secs_send 026A                                _CLC1CON 003C74  
                              _CLC1POL 003C75                                _DMA1DSA 003BF0  
                              _DMA1DSZ 003BEE                                _DMA1SSA 003BF9  
                              _DMA1SSZ 003BF7                                _ADSTPTH 003EE5  
                              _ADSTPTL 003EE4                                _MD1CARH 003CFE  
                              _MD1CARL 003CFD                      _UART1_Receive_ISR 63C6  
                              _CLKRCLK 003CE6                                _CLKRCON 003CE5  
                              _NCO1CLK 003F3F                         ?_DMA1_DMAA_ISR 005E  
                     _DMA1_DMASCNT_ISR 6508                                _NCO1CON 003F3E  
                              _U1ERRIE 003DFA                                _U1ERRIR 003DF9  
              __end_of_CLC1_Initialize 6340                                _U2ERRIE 003DE2  
                              _U2ERRIR 003DE1                                _INT0PPS 003AC0  
                  __CFG_PWRTS$PWRT_OFF 000000                                _INT1PPS 003AC1  
                              _INT2PPS 003AC2                           ?_Default_ISR 005E  
                 __size_of_UART1_Write 003E              __size_of_UART2_put_buffer 002A  
           __size_of_UART2_tx_vect_isr 0026                   __size_of_UART2_Write 003E  
                              _U1RXPPS 003AE5                                _U2RXPPS 003AE8  
                              _OSCCON1 0039D9                                _OSCCON3 0039DB  
                              _IVTLOCK 003FD4                     __size_of_vfpfcnvrt 04AE  
                              _SPI1CLK 003D1C                                _SPI1RXB 003D10  
                              _SPI1TXB 003D11                                _OSCTUNE 0039DE  
               __end_of_DSM_Initialize 6478                                _SLRCONA 003A43  
                              _SLRCONB 003A53                                _SLRCONC 003A63  
                              _SLRCOND 003A73                                _SLRCONE 003A83  
                              _SLRCONF 003A93                     __size_of_start_lcd 0006  
              __end_of_TMR5_WriteTimer 5D1A                     __end_of_UART1_Read 5E12  
                   __end_of_UART2_Read 5DD4      __size_of_INT0_SetInterruptHandler 0028  
           __size_of_CLKREF_Initialize 000A                __size_of_DMA1_DMAOR_ISR 000A  
                              __Hparam 0000                                __Lparam 0000  
             __end_of_UART1_Initialize 58CA                        __size_of_WaitMs 0036  
                              ___aodiv 3D1C                                ___aomod 46C8  
                           _m_protocol 2AF4              __end_of_UART1_Receive_ISR 63E6  
                         __psmallconst 2000                   __end_of_init_display 4FB4  
                              __pcinit 4BAC                        __size_of_memset 02EC  
                  _eaDogM_WriteCommand 6518                                __ramtop 2000  
          __size_of_UART1_Transmit_ISR 002C               __size_of_NCO1_Initialize 001C  
                              __ptext0 20C6                                __ptext1 3F9C  
                              __ptext2 421A                                __ptext3 4FB4  
                              __ptext4 5F64                                __ptext5 6582  
                              __ptext6 5D1A                                __ptext7 5F8E  
                              __ptext8 658A                                __ptext9 4484  
                    _UART2_Receive_ISR 63E6                        __size_of_printf 0062  
                      __CFG_WRTAPP$OFF 000000                        __size_of_strlen 00A2  
                              us257999 3F86                  _OSCILLATOR_Initialize 64DE  
                              us268999 48F6                                us348999 46BA  
                              us470999 2FA6                           __size_of_abs 0046  
                              _r_block 00C2                           __size_of_pad 0114  
                              us487999 3A70                                _mode_sw 0030  
                      __CFG_WRTSAF$OFF 000000                              _T5CONbits 003F9A  
             __end_of_UART2_Initialize 59EC                     m_protocol@rxData_l 002F  
           __size_of_SYSTEM_Initialize 0042                                _sprintf 5086  
                              _strncmp 4908                   end_of_initialization 4CB6  
                    __end_of_secs_send 4484               _INT2_SetInterruptHandler 6198  
             __size_of_secs_II_message 0244                             _r_protocol 340C  
  __end_of_UART1_SetTxInterruptHandler 60F8            _UART1_SetTxInterruptHandler 60D0  
  __end_of_UART2_SetRxInterruptHandler 60D0            _UART2_SetRxInterruptHandler 60A8  
                           _t_protocol 3F9C                      __end_of_vfpfcnvrt 2AF4  
                            _SPI1TCNTL 003D12                                postdec1 003FE5  
                              postdec2 003FDD                                postinc0 003FEE  
                              postinc1 003FE6                                postinc2 003FDE  
                  __size_of_StartTimer 0040                      __end_of_start_lcd 65AE  
            __end_of_UART2_Receive_ISR 6406                         wdtdelay@dcount 00E2  
                __CFG_WDTCPS$WDTCPS_31 000000                        ??_DMA1_DMAA_ISR 005F  
                       _block_checksum 4FB4                  _INT1_InterruptHandler 0017  
                            _PORTBbits 003FCB               _TMR6_SetInterruptHandler 6148  
                _TMR5_InterruptHandler 00E6   __size_of_UART2_SetTxInterruptHandler 0028  
                    __size_of_ADCC_ISR 002C    __end_of_ADCC_SetADIInterruptHandler 6238  
          _ADCC_SetADIInterruptHandler 6210                 __size_of_ringBufS_init 0028  
                     __CFG_FEXTOSC$ECH 000000                        _DMA1_Initialize 5796  
                      _SPI1_Initialize 64C8                       _UART1_put_buffer 5F8E  
                    __size_of_INT0_ISR 000E                      __size_of_INT1_ISR 000E  
                    __size_of_INT2_ISR 000E                      r_protocol@b_block 0023  
                       __end_of_WaitMs 5E80           __end_of_INTERRUPT_Initialize 5866  
               __end_of_block_checksum 5086   __end_of_INT0_DefaultInterruptHandler 65B8  
__size_of_INT0_DefaultInterruptHandler 0002           _INT0_DefaultInterruptHandler 65B6  
           __size_of_UART1_Receive_ISR 0020                          __pidataBIGRAM 4DC8  
                        __pidataCOMRAM 65BE                      __size_of_TMR5_ISR 004E  
                    __size_of_TMR6_ISR 001A            __size_of_UART2_Transmit_ISR 002C  
                       __end_of_memset 3A5E                         __end_of_printf 598E  
             __end_of_DMA1_DMADCNT_ISR 656A                       _UART2_put_buffer 5F64  
                __end_of_INT0_CallBack 6362                         __end_of_strlen 5410  
                  start_initialization 4BAC   __end_of_TMR5_DefaultInterruptHandler 64C8  
__size_of_TMR5_DefaultInterruptHandler 001A           _TMR5_DefaultInterruptHandler 64AE  
      __size_of_PIN_MANAGER_Initialize 009E                            __end_of_abs 5C12  
                __end_of_INT1_CallBack 6384                            __end_of_pad 4BAC  
                 __size_of_Default_ISR 0006                   __end_of_send_lcd_cmd 6058  
                           ivt0x8_base 0008                  __end_of_INT2_CallBack 63A6  
                 secs_II_message@block 0001                          _uart1RxBuffer 0240  
                        _uart1TxBuffer 0280                          _uart2RxBuffer 0200  
             __end_of_DMA1_DMASCNT_ISR 6518                          _uart2TxBuffer 0300  
                       _DMA1_DMAOR_ISR 6578                       __CFG_LPBOREN$OFF 000000  
                __size_of_init_display 00EA            __size_of_eaDogM_WriteString 009E  
                            _TimerDone 5FE0                          _ringBufS_init 6058  
                          _MD1CON0bits 003CFA                            _MD1CON1bits 003CFB  
                          __pdataBANK0 0060                            __pdataBANK1 0100  
                          __pdataBANK2 02C0                            __pdataBANK3 03C6  
           __size_of_UART2_Receive_ISR 0020             __end_of_EXT_INT_Initialize 5B82  
                      run_checksum@sum 0025        __end_of_eaDogM_WriteStringAtPos 5EE0  
              __end_of_DMA1_Initialize 5800                            __pbssCOMRAM 0001  
     __end_of_INT0_SetInterruptHandler 6210                          __pcstackBANK0 00F1  
              __end_of_SPI1_Initialize 64DE               _UART1_RxInterruptHandler 000B  
             _UART2_TxInterruptHandler 000E                    __size_of_m_protocol 0498  
            __size_of_ringBufS_put_dma 00AA                           _init_display 4ECA  
               __end_of_DMA1_DMAOR_ISR 6582                 __size_of_TMR5_CallBack 0024  
                _INT2_InterruptHandler 0014                  _TMR6_InterruptHandler 00E9  
               __size_of_TMR6_CallBack 0024                 _PIN_MANAGER_Initialize 54AE  
                 __end_of_wait_lcd_set 65A8                              __ptext100 62B0  
                            __ptext101 63E6                              __ptext110 5CDA  
                            __ptext102 6494                              __ptext111 62FA  
                            __ptext103 62D6                              __ptext112 64AE  
                            __ptext104 5A98                              __ptext113 0000  
                            __ptext105 6508                              __ptext106 6560  
                            __ptext107 656C                              __ptext108 6578  
                            __ptext109 5AE8                     __end_of_StartTimer 5CDA  
                    __size_of_wdtdelay 005C                      __size_of_vfprintf 0098  
                             _ADCC_ISR 5EE0                    __size_of_r_protocol 0366  
               __CFG_BBSIZE$BBSIZE_512 000000                            __smallconst 2000  
                             _CLC1GLS0 003C7A                               _CLC1GLS1 003C7B  
                             _CLC1GLS2 003C7C                               _CLC1GLS3 003C7D  
                             _CLC1SEL0 003C76                               _CLC1SEL1 003C77  
                             _CLC1SEL2 003C78                               _CLC1SEL3 003C79  
                             _DMA1CON0 003BFC                               _DMA1CON1 003BFD  
                             _DMA1AIRQ 003BFE                               _DMA1SIRQ 003BFF  
                          _NCO1CONbits 003F3E                    __size_of_t_protocol 027E  
               __size_of_wait_lcd_done 001C                         __size_of_fputc 010C  
                       __size_of_fputs 0098                         __size_of_srand 0034  
                             _NCO1ACCH 003F39                         __size_of_putch 001A  
                             _NCO1ACCL 003F38                               _NCO1ACCU 003F3A  
                 _INTERRUPT_Initialize 5800                               _T6CLKCON 003F96  
                             _NCO1INCH 003F3C                               _NCO1INCL 003F3B  
                             _NCO1INCU 003F3D                        ?_DMA1_DMAOR_ISR 005E  
                             _INT0_ISR 6528                               _INT1_ISR 6538  
                             _INT2_ISR 6548                               _LATCbits 003FBC  
                             _LATDbits 003FBD                               _LATEbits 003FBE  
    __size_of_INT1_SetInterruptHandler 0028                              _secs_send 421A  
                             _IPR1bits 003981                               _IPR2bits 003982  
                             _PIE1bits 003991                               _IPR3bits 003983  
                             _PIE2bits 003992                               _IPR5bits 003985  
                             _PIE3bits 003993                              _tickCount 01C0  
                             _IPR6bits 003986                               _PIE5bits 003995  
                             _IPR7bits 003987                               _IPR8bits 003988  
                             _PIE6bits 003996                               _PIE7bits 003997  
                             _IPR9bits 003989                               _PIE8bits 003998  
                  __CFG_BORV$VBOR_2P45 000000                               _PIE9bits 003999  
                            _ring_buf1 0383                              _ring_buf2 0340  
                             i2u431_48 5EF8                               _PIR1bits 0039A1  
                             i2u433_48 624A                               _PIR2bits 0039A2  
                             _SPI1BAUD 003D19                               i2u435_48 6272  
                             i2u437_48 629A                               _SPI1CON0 003D14  
                             _SPI1CON1 003D15                               _SPI1CON2 003D16  
                             i2u439_48 62C2                               _PIR5bits 0039A5  
                             _PIR7bits 0039A7                               _PIR8bits 0039A8  
                             _PIR9bits 0039A9               __size_of_TMR5_Initialize 0046  
           __end_of_UART1_Transmit_ISR 5F38                               _TMR5_ISR 5AE8  
                             _TMR6_ISR 6494                              _vfpfcnvrt 2646  
                         _SPI1INTFbits 003D1A                          _TMR5_CallBack 62FA  
                            _start_lcd 65A8              __size_of_send_lcd_cmd_dma 0050  
                        _TMR6_CallBack 62D6               __end_of_UART1_put_buffer 5FB8  
                __size_of_send_lcd_cmd 0028      __size_of_TMR5_SetInterruptHandler 0028  
                  __end_of_UART1_Write 5D96                    __end_of_UART2_Write 5D58  
             __size_of_TMR6_Initialize 0028                            _INTCON0bits 003FD2  
                            copy_data0 4BC0                              copy_data1 4BE6  
                            copy_data2 4C08                              copy_data3 4C2A  
                            copy_data4 4C4C               _INT0_SetInterruptHandler 61E8  
               _uart1TxBufferRemaining 003A    __end_of_UART2_SetTxInterruptHandler 60A8  
          _UART2_SetTxInterruptHandler 6080                           _uart1RxCount 0037  
             __end_of_UART2_put_buffer 5F8E                           _uart2RxCount 0031  
                             __Hrparam 0000       __size_of_eaDogM_WriteStringAtPos 002C  
              __CFG_RSTOSC$EXTOSC_4PLL 000000                   __end_of_run_checksum 5FE0  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                        _wait_lcd_done 6424                           _send_lcd_cmd 6030  
                     __size_of___aodiv 0280                       __size_of___aomod 0240  
                      _NCO1_Initialize 6440                  __end_of_DMA1_DMAA_ISR 6576  
 __size_of_UART1_SetRxInterruptHandler 0028                      ?_DMA1_DMADCNT_ISR 005E  
             __size_of_ADCC_Initialize 004A            __end_of_eaDogM_WriteCommand 6526  
                             __pivt0x8 0008                     ??_DMA1_DMADCNT_ISR 005F  
                             __ptext10 5E80                               __ptext11 5086  
                             __ptext20 6592                               __ptext12 340C  
                             __ptext21 5D96                               __ptext13 5D58  
                             __ptext30 5410                               __ptext22 659A  
                             __ptext14 2AF4                               __ptext31 6518  
                             __ptext23 5DD4                               __ptext15 520E  
                             __ptext40 554C                               __ptext32 5A48  
                             __ptext24 4ECA                               __ptext16 5FB8  
                             __ptext41 2646                               __ptext33 65A2  
                             __ptext25 6008                               __ptext17 5E4A  
                             __ptext50 536E                               __ptext42 4908  
                             __ptext34 6424                               __ptext26 6030  
                             __ptext18 5FE0                               __ptext51 55E4  
                             __ptext43 3A5E                               __ptext35 59EC  
                             __ptext27 6406                               __ptext19 5C9A  
                             __ptext60 60D0                               __ptext52 4CBC  
                             __ptext44 2F8C                               __ptext36 65A8  
                             __ptext28 6058                               __ptext61 60F8  
                             __ptext53 6478                               __ptext45 5BCC  
                             __ptext37 567C                               __ptext29 5EB4  
                             __ptext70 6440                               __ptext62 6120  
                             __ptext54 52C4                               __ptext46 46C8  
                             __ptext38 3772                               __ptext71 5800  
                             __ptext63 6148                               __ptext55 5C58  
                             __ptext47 3D1C                               __ptext39 592C  
                             __ptext80 5B82                               __ptext72 5B36  
                             __ptext64 5C12                               __ptext56 598E  
                             __ptext48 570E                               __ptext81 6210  
                             __ptext73 6198                               __ptext65 6170  
                             __ptext57 6080                               __ptext49 4A98  
                             __ptext90 65BA                               __ptext82 6528  
                             __ptext74 61C0                               __ptext66 64C8  
                             __ptext58 60A8                               __ptext91 65B0  
                             __ptext83 6340                               __ptext75 61E8  
                             __ptext67 64F4                               __ptext59 5866  
                             __ptext92 5EE0                               __ptext84 65B6  
                             __ptext76 645C                               __ptext68 54AE  
                             __ptext93 65BC                               __ptext85 6538  
                             __ptext77 5796                               __ptext69 64DE  
                             __ptext94 6238                               __ptext86 6362  
                             __ptext78 6556                               __ptext95 5F0C  
                             __ptext87 65B8                               __ptext79 631E  
                             __ptext96 6260                               __ptext88 6548  
                             __ptext97 63C6                               __ptext89 6384  
                             __ptext98 6288                               __ptext99 5F38  
                      _secs_II_message 4484               __size_of_CLC1_Initialize 0022  
                     __size_of_sprintf 00C8                       __size_of_strncmp 0190  
                     _ringBufS_put_dma 52C4                     __end_of_m_protocol 2F8C  
                        __size_of_ctoa 0088                          __size_of_main 0580  
                        __size_of_dtoa 0480                  __size_of_wait_lcd_set 0006  
                        __size_of_stoa 02BE                   __CFG_WDTCWS$WDTCWS_7 000000  
                    ?_DMA1_DMASCNT_ISR 005E                            _IVTLOCKbits 003FD4  
             __size_of_TMR5_WriteTimer 0040              _ADCC_ADI_InterruptHandler 00EC  
                            stoa@F1142 0100                     ??_DMA1_DMASCNT_ISR 005F  
                             _spi_link 00CF                               _wdtdelay 59EC  
           __end_of_UART2_Transmit_ISR 5F64                               _vfprintf 554C  
                  secs_gem_state@block 002B                      _UART1_is_rx_ready 659A  
                          _UART1_Write 5D58   __end_of_INT1_DefaultInterruptHandler 65BA  
__size_of_INT1_DefaultInterruptHandler 0002           _INT1_DefaultInterruptHandler 65B8  
                          _UART2_Write 5D1A                      _UART1_is_tx_ready 658A  
                      r_protocol@retry 005D                      t_protocol@requeue 002C  
                        ??_Default_ISR 005E                     __end_of_r_protocol 3772  
                          _uart1RxHead 0039                            _uart1TxHead 003C  
                          _uart2RxHead 0033                            _uart1RxTail 0038  
                          _uart2TxHead 0036                            _uart1TxTail 003B  
                          _uart2RxTail 0032                            _uart2TxTail 0035  
                         _wait_lcd_set 65A2                     _EXT_INT_Initialize 5B36  
 __end_of_TMR6_DefaultInterruptHandler 5AE6  __size_of_TMR6_DefaultInterruptHandler 004E  
         _TMR6_DefaultInterruptHandler 5A98                     __end_of_t_protocol 421A  
 __end_of_ADCC_DefaultInterruptHandler 65BE  __size_of_ADCC_DefaultInterruptHandler 0002  
         _ADCC_DefaultInterruptHandler 65BC                               intlevel2 0000  
                    _send_lcd_cmd_long 6008                __size_of_secs_gem_state 00B6  
                    __CFG_CLKOUTEN$OFF 000000             __end_of_eaDogM_WriteString 54AE  
              __end_of_NCO1_Initialize 645C                 __size_of_INT0_CallBack 0022  
                           _SPI1SCKPPS 003ADE                             _SPI1SDIPPS 003ADF  
            __end_of_UART1_is_rx_ready 65A2                             _UART1_Read 5DD4  
               __size_of_INT1_CallBack 0022                             _UART2_Read 5D96  
            __end_of_UART1_is_tx_ready 6592                 __size_of_INT2_CallBack 0022  
                    _UART2_is_rx_ready 6592                 _uart2TxBufferRemaining 0034  
                    _UART2_is_tx_ready 6582                       _send_lcd_cmd_dma 5A48  
                TMR5_ISR@CountCallBack 0027                __end_of_secs_II_message 46C8  
     __end_of_INT1_SetInterruptHandler 61E8              __size_of_UART1_Initialize 0064  
                      t_protocol@block 00DB                       ??_DMA1_DMAOR_ISR 005F  
             _UART1_TxInterruptHandler 0008                        t_protocol@retry 002D  
            __end_of_send_lcd_cmd_long 6030                    __end_of_Default_ISR 65B6  
       __end_of_PIN_MANAGER_Initialize 554C                  __size_of_run_checksum 0028  
              _eaDogM_WriteStringAtPos 5EB4              __size_of_UART2_Initialize 005E  
