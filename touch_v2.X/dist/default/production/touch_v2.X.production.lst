

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Nov 11 04:12:50 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og9 
     1                           	processor	18F57K42
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=1
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1,group=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=2
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1,inline
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=4,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=4,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=4,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=4,class=CODE,delta=1
   147                           	psect	text126,global,reloc=4,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=4,class=CODE,delta=1
   152                           	psect	text131,global,reloc=4,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=4,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=4,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=4,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=4,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=4,class=CODE,delta=1
   164                           	psect	text143,global,reloc=4,class=CODE,delta=1
   165                           	psect	text144,global,reloc=4,class=CODE,delta=1
   166                           	psect	text145,global,reloc=4,class=CODE,delta=1
   167                           	psect	ivt0x8,global,reloc=2,class=CODE,delta=1,noexec,keep,optim=
   168                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   169                           	psect	text146,global,reloc=4,class=CODE,delta=1
   170                           	psect	param0,global,class=BANK0,space=1,delta=1,noexec
   171                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   172  0000                     
   173                           ; Version 2.10
   174                           ; Generated 31/07/2019 GMT
   175                           ; 
   176                           ; Copyright © 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
   177                           ; All rights reserved.
   178                           ; 
   179                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   180                           ; 
   181                           ; Redistribution and use in source and binary forms, with or without modification, are
   182                           ; permitted provided that the following conditions are met:
   183                           ; 
   184                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   185                           ;        conditions and the following disclaimer.
   186                           ; 
   187                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   188                           ;        of conditions and the following disclaimer in the documentation and/or other
   189                           ;        materials provided with the distribution.
   190                           ; 
   191                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   192                           ;        software without specific prior written permission.
   193                           ; 
   194                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   195                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   196                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   197                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   198                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   199                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   200                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   201                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   202                           ; 
   203                           ; 
   204                           ; Code-generator required, PIC18F57K42 Definitions
   205                           ; 
   206                           ; SFR Addresses
   207  0000                     
   208 ;;_mode	offset	0
   209 ;;_channel	offset=-1 (param)
   210 ;;_s	offset=-2 (param)
   211 ;;_cmd	offset=-1 (param)
   212 ;;_cmd	offset=-1 (param)
   213 ;;_data	offset=-1 (param)
   214 ;;__this	offset=-2 (param)
   215 ;;_cmd	offset=-1 (param)
   216 ;;_i	offset	0
   217 ;;_lp_speed	offset	0
   218 ;;_new	offset=-4 (param)
   219 ;;_bn	offset=-5 (param)
   220 ;;_slow	offset=-6 (param)
   221 ;;_chan	offset=-1 (param)
   222 ;;_to_what	offset=-2 (param)
   223 ;;_u	offset	0
   224 ;;_s	offset=-2 (param)
   225 ;;_index	offset=-1 (param)
   226 ;;_arg	offset	0
   227 ;;_exp	offset	4
   228 ;;_sign	offset=-1 (param)
   229 ;;_val	offset=-5 (param)
   230 ;;_flipper	offset=-1 (param)
   231 ;;_f	offset	0
   232 ;;_ap	offset	6
   233 ;;_s	offset=-3 (param)
   234 ;;_fmt	offset=-5 (param)
   235 ;;_line	offset=-1 (param)
   236 ;;_vterm	offset=-2 (param)
   237 ;;_numMilliseconds	offset=-2 (param)
   238 ;;_vterm	offset=-1 (param)
   239 ;;_r	offset=-1 (param)
   240 ;;_c	offset=-2 (param)
   241 ;;_strPtr	offset=-4 (param)
   242 ;;_strPtr	offset=-1 (param)
   243 ;;_delay	offset=-4 (param)
   244 ;;_strPtr	offset=-2 (param)
   245 ;;__this	offset=-2 (param)
   246 ;;_clearBuffer	offset=-3 (param)
   247 ;;_s	offset	0
   248 ;;_k	offset	2
   249 ;;_dest	offset=-2 (param)
   250 ;;_c	offset=-4 (param)
   251 ;;_n	offset=-6 (param)
   252 ;;_ap	offset	0
   253 ;;_fmt	offset=-3 (param)
   254 ;;_cfmt	offset	0
   255 ;;_fp	offset=-2 (param)
   256 ;;_fmt	offset=-4 (param)
   257 ;;_ap	offset=-6 (param)
   258 ;;_vfpfcnvrt$4256	offset	0
   259 ;;_vfpfcnvrt$4267	offset	2
   260 ;;_vfpfcnvrt$4255	offset	4
   261 ;;_llu	offset	6
   262 ;;_ll	offset	14
   263 ;;_f	offset	22
   264 ;;_ct	offset	26
   265 ;;_cp	offset	29
   266 ;;_c	offset	31
   267 ;;_fp	offset=-2 (param)
   268 ;;_fmt	offset=-4 (param)
   269 ;;_ap	offset=-6 (param)
   270 ;;_xtoa$4241	offset	0
   271 ;;_xtoa$4240	offset	2
   272 ;;_n	offset	4
   273 ;;_c	offset	12
   274 ;;_i	offset	14
   275 ;;_w	offset	16
   276 ;;_p	offset	18
   277 ;;_fp	offset=-2 (param)
   278 ;;_d	offset=-10 (param)
   279 ;;_x	offset=-11 (param)
   280 ;;_toupper$4925	offset	0
   281 ;;_c	offset=-2 (param)
   282 ;;_c	offset=-2 (param)
   283 ;;_c	offset=-2 (param)
   284 ;;_n	offset	0
   285 ;;_i	offset	8
   286 ;;_w	offset	10
   287 ;;_p	offset	12
   288 ;;_fp	offset=-2 (param)
   289 ;;_d	offset=-10 (param)
   290 ;;_counter	offset	0
   291 ;;_dividend	offset=-8 (param)
   292 ;;_divisor	offset=-16 (param)
   293 ;;_quotient	offset	0
   294 ;;_counter	offset	8
   295 ;;_dividend	offset=-8 (param)
   296 ;;_divisor	offset=-16 (param)
   297 ;;_r	offset	0
   298 ;;_l	offset	2
   299 ;;__l	offset=-2 (param)
   300 ;;__r	offset=-4 (param)
   301 ;;_n	offset=-6 (param)
   302 ;;_nuls	offset	0
   303 ;;_l	offset	7
   304 ;;_p	offset	9
   305 ;;_cp	offset	11
   306 ;;_w	offset	13
   307 ;;_i	offset	15
   308 ;;_fp	offset=-2 (param)
   309 ;;_s	offset=-4 (param)
   310 ;;_efgtoa$4213	offset	0
   311 ;;_efgtoa$4212	offset	2
   312 ;;_efgtoa$4211	offset	4
   313 ;;_efgtoa$4207	offset	6
   314 ;;_efgtoa$4203	offset	8
   315 ;;_efgtoa$4202	offset	10
   316 ;;_u	offset	12
   317 ;;_g	offset	16
   318 ;;_l	offset	20
   319 ;;_h	offset	24
   320 ;;_ou	offset	28
   321 ;;_n	offset	32
   322 ;;_e	offset	34
   323 ;;_i	offset	36
   324 ;;_w	offset	38
   325 ;;_p	offset	40
   326 ;;_sign	offset	42
   327 ;;_d	offset	44
   328 ;;_ne	offset	46
   329 ;;_m	offset	48
   330 ;;_pp	offset	50
   331 ;;_t	offset	52
   332 ;;_mode	offset	54
   333 ;;_nmode	offset	55
   334 ;;_fp	offset=-2 (param)
   335 ;;_f	offset=-6 (param)
   336 ;;_c	offset=-7 (param)
   337 ;;_tolower$4910	offset	0
   338 ;;_c	offset=-2 (param)
   339 ;;_c	offset=-2 (param)
   340 ;;_d	offset	0
   341 ;;_s	offset	2
   342 ;;_dest	offset=-2 (param)
   343 ;;_src	offset=-4 (param)
   344 ;;_u	offset	0
   345 ;;_m	offset	4
   346 ;;_e	offset	8
   347 ;;_x	offset=-4 (param)
   348 ;;_u	offset	0
   349 ;;_e	offset	4
   350 ;;_x	offset=-4 (param)
   351 ;;_exp1	offset	0
   352 ;;_sign1	offset	1
   353 ;;_f1	offset=-4 (param)
   354 ;;_b	offset=-4 (param)
   355 ;;_a	offset=-8 (param)
   356 ;;_grs	offset	0
   357 ;;_bexp	offset	1
   358 ;;_aexp	offset	2
   359 ;;_signs	offset	3
   360 ;;_b	offset=-4 (param)
   361 ;;_a	offset=-8 (param)
   362 ;;_f1	offset=-4 (param)
   363 ;;_prod	offset	0
   364 ;;_grs	offset	4
   365 ;;_temp	offset	8
   366 ;;_bexp	offset	10
   367 ;;_aexp	offset	11
   368 ;;_sign	offset	12
   369 ;;_b	offset=-4 (param)
   370 ;;_a	offset=-8 (param)
   371 ;;_ff1	offset=-4 (param)
   372 ;;_ff2	offset=-8 (param)
   373 ;;_ff1	offset=-4 (param)
   374 ;;_ff2	offset=-8 (param)
   375 ;;_grs	offset	0
   376 ;;_rem	offset	4
   377 ;;_new_exp	offset	8
   378 ;;_aexp	offset	10
   379 ;;_bexp	offset	11
   380 ;;_sign	offset	12
   381 ;;_b	offset=-4 (param)
   382 ;;_a	offset=-8 (param)
   383 ;;_sign	offset	0
   384 ;;_counter	offset	1
   385 ;;_dividend	offset=-2 (param)
   386 ;;_divisor	offset=-4 (param)
   387 ;;_quotient	offset	0
   388 ;;_sign	offset	2
   389 ;;_counter	offset	3
   390 ;;_dividend	offset=-2 (param)
   391 ;;_divisor	offset=-4 (param)
   392 ;;_dtoa$4179	offset	0
   393 ;;_n	offset	2
   394 ;;_i	offset	10
   395 ;;_s	offset	12
   396 ;;_w	offset	14
   397 ;;_p	offset	16
   398 ;;_fp	offset=-2 (param)
   399 ;;_d	offset=-10 (param)
   400 ;;_a	offset=-2 (param)
   401 ;;_sign	offset	0
   402 ;;_counter	offset	1
   403 ;;_dividend	offset=-8 (param)
   404 ;;_divisor	offset=-16 (param)
   405 ;;_quotient	offset	0
   406 ;;_sign	offset	8
   407 ;;_counter	offset	9
   408 ;;_dividend	offset=-8 (param)
   409 ;;_divisor	offset=-16 (param)
   410 ;;_w	offset	0
   411 ;;_fp	offset=-2 (param)
   412 ;;_c	offset=-3 (param)
   413 ;;_w	offset	0
   414 ;;_i	offset	2
   415 ;;_fp	offset=-2 (param)
   416 ;;_buf	offset=-4 (param)
   417 ;;_p	offset=-6 (param)
   418 ;;_a	offset	0
   419 ;;_s	offset=-2 (param)
   420 ;;_i	offset	0
   421 ;;_c	offset	2
   422 ;;_s	offset=-2 (param)
   423 ;;_fp	offset=-4 (param)
   424 ;;_c	offset=-2 (param)
   425 ;;_fp	offset=-4 (param)
   426 ;;_c	offset=-1 (param)
   427 ;;__this	offset=-2 (param)
   428 ;;_c	offset=-3 (param)
   429 ;;_atoi$4763	offset	0
   430 ;;_atoi$4761	offset	2
   431 ;;_atoi$4762	offset	4
   432 ;;_n	offset	5
   433 ;;_neg	offset	7
   434 ;;_s	offset=-2 (param)
   435 ;;_isspace$4801	offset	0
   436 ;;_c	offset=-2 (param)
   437 ;;_c	offset=-2 (param)
   438 ;;_vterm	offset=-1 (param)
   439 ;;_new_response_info	offset=-1 (param)
   440 ;;_new_response_info	offset=-1 (param)
   441 ;;_level	offset=-2 (param)
   442 ;;_dutyValue	offset=-2 (param)
   443 ;;_timer	offset=-1 (param)
   444 ;;_timer	offset=-1 (param)
   445 ;;_count	offset=-3 (param)
   446 ;;_InterruptHandler	offset=-3 (param)
   447 ;;_InterruptHandler	offset=-3 (param)
   448 ;;_InterruptHandler	offset=-3 (param)
   449 ;;_InterruptHandler	offset=-3 (param)
   450 ;;_InterruptHandler	offset=-3 (param)
   451 ;;_InterruptHandler	offset=-3 (param)
   452 ;;_state	offset	0
   453 ;;_InterruptHandler	offset=-3 (param)
   454 ;;_InterruptHandler	offset=-3 (param)
   455 ;;_InterruptHandler	offset=-3 (param)
   456 ;;_InterruptHandler	offset=-3 (param)
   457 ;;_timerVal	offset=-2 (param)
   458 ;;_channel	offset=-1 (param)
   459 ;;_i	offset	0
   460                           
   461                           	psect	idataBANK0
   462  0184F2                     __pidataBANK0:
   463                           	opt callstack 0
   464                           
   465                           ;initializer for _R
   466  0184F2  0000               	dw	0
   467  0184F4  0000               	dw	0
   468  0184F6  0000               	dw	0
   469  0184F8  0000               	dw	0
   470  0184FA  0000               	dw	0
   471  0184FC  0000               	dw	0
   472  0184FE  0000               	dw	0
   473  018500  0000               	dw	0
   474  018502  0000               	dw	0
   475  018504  0000               	dw	0
   476  018506  0000               	dw	0
   477  018508  0000               	dw	0
   478  01850A  0000               	dw	0
   479  01850C  0000               	dw	0
   480  01850E  0000               	dw	0
   481  018510  0000               	dw	0
   482  018512  8000               	dw	32768
   483  018514  451A               	dw	17690
   484  018516  D000               	dw	53248
   485  018518  451B               	dw	17691
   486  01851A  00                 	db	0
   487  01851B  0000               	dw	0
   488  01851D  00                 	db	0
   489                           
   490                           ;initializer for stoa@F1166
   491  01851E  28                 	db	40
   492  01851F  6E                 	db	110
   493  018520  75                 	db	117
   494  018521  6C                 	db	108
   495  018522  6C                 	db	108
   496  018523  29                 	db	41
   497  018524  00                 	db	0
   498                           
   499                           ;initializer for _port_data
   500  018525  FF                 	db	255
   501  018526  00                 	db	0
   502  018527  FF                 	db	255
   503  018528  00                 	db	0
   504  018529  FF                 	db	255
   505  01852A  00                 	db	0
   506  01852B  FF                 	db	255
   507  01852C  00                 	db	0
   508  01852D  FF                 	db	255
   509  01852E  00                 	db	0
   510  01852F  FF                 	db	255
   511  018530  00                 	db	0
   512  018531  FF                 	db	255
   513  018532  00                 	db	0
   514  018533  FF                 	db	255
   515  018534  00                 	db	0
   516                           
   517                           	psect	idataBANK1
   518  017610                     __pidataBANK1:
   519                           	opt callstack 0
   520                           
   521                           ;initializer for _V
   522  017610  00                 	db	0
   523  017611  00                 	db	0
   524  017612  00                 	db	0
   525  017613  00                 	db	0
   526  017614  00                 	db	0
   527  017615  00                 	db	0
   528  017616  00                 	db	0
   529  017617  00                 	db	0
   530  017618  00                 	db	0
   531  017619  00                 	db	0
   532  01761A  00                 	db	0
   533  01761B  00                 	db	0
   534  01761C  00                 	db	0
   535  01761D  00                 	db	0
   536  01761E  00                 	db	0
   537  01761F  00                 	db	0
   538  017620  00                 	db	0
   539  017621  00                 	db	0
   540  017622  00                 	db	0
   541  017623  00                 	db	0
   542  017624  00                 	db	0
   543  017625  00                 	db	0
   544  017626  00                 	db	0
   545  017627  00                 	db	0
   546  017628  00                 	db	0
   547  017629  00                 	db	0
   548  01762A  00                 	db	0
   549  01762B  00                 	db	0
   550  01762C  00                 	db	0
   551  01762D  00                 	db	0
   552  01762E  00                 	db	0
   553  01762F  00                 	db	0
   554  017630  00                 	db	0
   555  017631  00                 	db	0
   556  017632  00                 	db	0
   557  017633  00                 	db	0
   558  017634  00                 	db	0
   559  017635  00                 	db	0
   560  017636  00                 	db	0
   561  017637  00                 	db	0
   562  017638  00                 	db	0
   563  017639  00                 	db	0
   564  01763A  00                 	db	0
   565  01763B  00                 	db	0
   566  01763C  00                 	db	0
   567  01763D  00                 	db	0
   568  01763E  00                 	db	0
   569  01763F  00                 	db	0
   570  017640  00                 	db	0
   571  017641  00                 	db	0
   572  017642  00                 	db	0
   573  017643  00                 	db	0
   574  017644  00                 	db	0
   575  017645  00                 	db	0
   576  017646  00                 	db	0
   577  017647  00                 	db	0
   578  017648  00                 	db	0
   579  017649  00                 	db	0
   580  01764A  00                 	db	0
   581  01764B  00                 	db	0
   582  01764C  00                 	db	0
   583  01764D  00                 	db	0
   584  01764E  00                 	db	0
   585  01764F  00                 	db	0
   586  017650  00                 	db	0
   587  017651  00                 	db	0
   588  017652  00                 	db	0
   589  017653  00                 	db	0
   590  017654  00                 	db	0
   591  017655  00                 	db	0
   592  017656  00                 	db	0
   593  017657  00                 	db	0
   594  017658  00                 	db	0
   595  017659  00                 	db	0
   596  01765A  00                 	db	0
   597  01765B  00                 	db	0
   598  01765C  00                 	db	0
   599  01765D  00                 	db	0
   600  01765E  00                 	db	0
   601  01765F  00                 	db	0
   602  017660  00                 	db	0
   603  017661  00                 	db	0
   604  017662  00                 	db	0
   605  017663  00                 	db	0
   606  017664  00                 	db	0
   607  017665  00                 	db	0
   608  017666  00                 	db	0
   609  017667  00                 	db	0
   610  017668  00                 	db	0
   611  017669  00                 	db	0
   612  01766A  00                 	db	0
   613  01766B  00                 	db	0
   614  01766C  00                 	db	0
   615  01766D  00                 	db	0
   616  01766E  00                 	db	0
   617  01766F  00                 	db	0
   618  017670  00                 	db	0
   619  017671  00                 	db	0
   620  017672  00                 	db	0
   621  017673  00                 	db	0
   622  017674  00                 	db	0
   623  017675  00                 	db	0
   624  017676  00                 	db	0
   625  017677  00                 	db	0
   626  017678  00                 	db	0
   627  017679  00                 	db	0
   628  01767A  00                 	db	0
   629  01767B  00                 	db	0
   630  01767C  00                 	db	0
   631  01767D  00                 	db	0
   632  01767E  00                 	db	0
   633  01767F  00                 	db	0
   634  017680  00                 	db	0
   635  017681  00                 	db	0
   636  017682  00                 	db	0
   637  017683  00                 	db	0
   638  017684  00                 	db	0
   639  017685  00                 	db	0
   640  017686  00                 	db	0
   641  017687  00                 	db	0
   642  017688  00                 	db	0
   643  017689  00                 	db	0
   644  01768A  00                 	db	0
   645  01768B  00                 	db	0
   646  01768C  00                 	db	0
   647  01768D  00                 	db	0
   648  01768E  00                 	db	0
   649  01768F  00                 	db	0
   650  017690  00                 	db	0
   651  017691  0000               	dw	0
   652  017693  0000               	dw	0
   653  017695  0000               	dw	0
   654  017697  0000               	dw	0
   655  017699  00                 	db	0
   656  01769A  00                 	db	0
   657  01769B  00                 	db	0
   658  01769C  00                 	db	0
   659  01769D  00                 	db	0
   660  01769E  00                 	db	0
   661  01769F  0000               	dw	0
   662  0176A1  0000               	dw	0
   663  0176A3  0000               	dw	0
   664  0176A5  0000               	dw	0
   665  0176A7  0000               	dw	0
   666  0176A9  0000               	dw	0
   667  0176AB  00                 	db	0
   668  0176AC  00                 	db	0
   669  0176AD  00                 	db	0
   670  0176AE  00                 	db	0
   671  0176AF  00                 	db	0
   672  0176B0  00                 	db	0
   673  0176B1  00                 	db	0
   674  0176B2  00                 	db	0
   675  0176B3  00                 	db	0
   676  0176B4  00                 	db	0
   677  0176B5  0000               	dw	0
   678  0176B7  0000               	dw	0
   679  0176B9  2D                 	db	45
   680  0176BA  00                 	db	0
   681  0176BB  0000               	dw	0
   682  0176BD  0000               	dw	0
   683  0176BF  0000               	dw	0
   684  0176C1  0000               	dw	0
   685  0176C3  0000               	dw	0
   686  0176C5  0000               	dw	0
   687  0176C7  0000               	dw	0
   688  0176C9  0000               	dw	0
   689                           
   690                           	psect	mediumconst
   691  00FE50                     __pmediumconst:
   692                           	opt callstack 0
   693  00FE50  00                 	db	0
   694  00FE51                     _T:
   695                           	opt callstack 0
   696  00FE51  63                 	db	99
   697  00FE52  6F                 	db	111
   698  00FE53  6D                 	db	109
   699  00FE54  6D                 	db	109
   700  00FE55  61                 	db	97
   701  00FE56  6E                 	db	110
   702  00FE57  64                 	db	100
   703  00FE58  73                 	db	115
   704  00FE59  20                 	db	32
   705  00FE5A  31                 	db	49
   706  00FE5B  00                 	db	0
   707  00FE5C  00                 	db	0
   708  00FE5D  00                 	db	0
   709  00FE5E  00                 	db	0
   710  00FE5F  00                 	db	0
   711  00FE60  00                 	db	0
   712  00FE61  00                 	db	0
   713  00FE62  00                 	db	0
   714  00FE63  64                 	db	100
   715  00FE64  69                 	db	105
   716  00FE65  73                 	db	115
   717  00FE66  70                 	db	112
   718  00FE67  6C                 	db	108
   719  00FE68  61                 	db	97
   720  00FE69  79                 	db	121
   721  00FE6A  73                 	db	115
   722  00FE6B  20                 	db	32
   723  00FE6C  31                 	db	49
   724  00FE6D  00                 	db	0
   725  00FE6E  00                 	db	0
   726  00FE6F  00                 	db	0
   727  00FE70  00                 	db	0
   728  00FE71  00                 	db	0
   729  00FE72  00                 	db	0
   730  00FE73  00                 	db	0
   731  00FE74  00                 	db	0
   732  00FE75  63                 	db	99
   733  00FE76  6F                 	db	111
   734  00FE77  6D                 	db	109
   735  00FE78  6D                 	db	109
   736  00FE79  61                 	db	97
   737  00FE7A  6E                 	db	110
   738  00FE7B  64                 	db	100
   739  00FE7C  73                 	db	115
   740  00FE7D  20                 	db	32
   741  00FE7E  32                 	db	50
   742  00FE7F  00                 	db	0
   743  00FE80  00                 	db	0
   744  00FE81  00                 	db	0
   745  00FE82  00                 	db	0
   746  00FE83  00                 	db	0
   747  00FE84  00                 	db	0
   748  00FE85  00                 	db	0
   749  00FE86  00                 	db	0
   750  00FE87  64                 	db	100
   751  00FE88  69                 	db	105
   752  00FE89  73                 	db	115
   753  00FE8A  70                 	db	112
   754  00FE8B  6C                 	db	108
   755  00FE8C  61                 	db	97
   756  00FE8D  79                 	db	121
   757  00FE8E  73                 	db	115
   758  00FE8F  20                 	db	32
   759  00FE90  32                 	db	50
   760  00FE91  00                 	db	0
   761  00FE92  00                 	db	0
   762  00FE93  00                 	db	0
   763  00FE94  00                 	db	0
   764  00FE95  00                 	db	0
   765  00FE96  00                 	db	0
   766  00FE97  00                 	db	0
   767  00FE98  00                 	db	0
   768  00FE99  63                 	db	99
   769  00FE9A  6F                 	db	111
   770  00FE9B  6D                 	db	109
   771  00FE9C  6D                 	db	109
   772  00FE9D  61                 	db	97
   773  00FE9E  6E                 	db	110
   774  00FE9F  64                 	db	100
   775  00FEA0  73                 	db	115
   776  00FEA1  20                 	db	32
   777  00FEA2  33                 	db	51
   778  00FEA3  00                 	db	0
   779  00FEA4  00                 	db	0
   780  00FEA5  00                 	db	0
   781  00FEA6  00                 	db	0
   782  00FEA7  00                 	db	0
   783  00FEA8  00                 	db	0
   784  00FEA9  00                 	db	0
   785  00FEAA  00                 	db	0
   786  00FEAB  64                 	db	100
   787  00FEAC  69                 	db	105
   788  00FEAD  73                 	db	115
   789  00FEAE  70                 	db	112
   790  00FEAF  6C                 	db	108
   791  00FEB0  61                 	db	97
   792  00FEB1  79                 	db	121
   793  00FEB2  73                 	db	115
   794  00FEB3  20                 	db	32
   795  00FEB4  33                 	db	51
   796  00FEB5  00                 	db	0
   797  00FEB6  00                 	db	0
   798  00FEB7  00                 	db	0
   799  00FEB8  00                 	db	0
   800  00FEB9  00                 	db	0
   801  00FEBA  00                 	db	0
   802  00FEBB  00                 	db	0
   803  00FEBC  00                 	db	0
   804  00FEBD  63                 	db	99
   805  00FEBE  6F                 	db	111
   806  00FEBF  6D                 	db	109
   807  00FEC0  6D                 	db	109
   808  00FEC1  61                 	db	97
   809  00FEC2  6E                 	db	110
   810  00FEC3  64                 	db	100
   811  00FEC4  73                 	db	115
   812  00FEC5  20                 	db	32
   813  00FEC6  34                 	db	52
   814  00FEC7  00                 	db	0
   815  00FEC8  00                 	db	0
   816  00FEC9  00                 	db	0
   817  00FECA  00                 	db	0
   818  00FECB  00                 	db	0
   819  00FECC  00                 	db	0
   820  00FECD  00                 	db	0
   821  00FECE  00                 	db	0
   822  00FECF  64                 	db	100
   823  00FED0  69                 	db	105
   824  00FED1  73                 	db	115
   825  00FED2  70                 	db	112
   826  00FED3  6C                 	db	108
   827  00FED4  61                 	db	97
   828  00FED5  79                 	db	121
   829  00FED6  73                 	db	115
   830  00FED7  20                 	db	32
   831  00FED8  34                 	db	52
   832  00FED9  00                 	db	0
   833  00FEDA  00                 	db	0
   834  00FEDB  00                 	db	0
   835  00FEDC  00                 	db	0
   836  00FEDD  00                 	db	0
   837  00FEDE  00                 	db	0
   838  00FEDF  00                 	db	0
   839  00FEE0  00                 	db	0
   840  00FEE1                     __end_of_T:
   841                           	opt callstack 0
   842  0000                     _IVTADL	set	14493
   843  0000                     _IVTADH	set	14494
   844  0000                     _IVTADU	set	14495
   845  0000                     _PIR4bits	set	14756
   846  0000                     _PIE8bits	set	14744
   847  0000                     _PIR8bits	set	14760
   848  0000                     _SCANPR	set	14839
   849  0000                     _DMA2PR	set	14836
   850  0000                     _DMA1PR	set	14835
   851  0000                     _MAINPR	set	14834
   852  0000                     _ISRPR	set	14833
   853  0000                     _PIE2bits	set	14738
   854  0000                     _PIR2bits	set	14754
   855  0000                     _PIE9bits	set	14745
   856  0000                     _PIR9bits	set	14761
   857  0000                     _PIE6bits	set	14742
   858  0000                     _PIE3bits	set	14739
   859  0000                     _PMD7	set	14791
   860  0000                     _PMD6	set	14790
   861  0000                     _PMD5	set	14789
   862  0000                     _PMD4	set	14788
   863  0000                     _PMD3	set	14787
   864  0000                     _PMD2	set	14786
   865  0000                     _PMD1	set	14785
   866  0000                     _PMD0	set	14784
   867  0000                     _OSCTUNE	set	14814
   868  0000                     _OSCFRQ	set	14815
   869  0000                     _OSCEN	set	14813
   870  0000                     _OSCCON3	set	14811
   871  0000                     _OSCCON1	set	14809
   872  0000                     _IPR8bits	set	14728
   873  0000                     _IPR9bits	set	14729
   874  0000                     _IPR5bits	set	14725
   875  0000                     _IPR1bits	set	14721
   876  0000                     _IPR3bits	set	14723
   877  0000                     _IPR6bits	set	14726
   878  0000                     _IPR2bits	set	14722
   879  0000                     _PIE5bits	set	14741
   880  0000                     _PIE1bits	set	14737
   881  0000                     _PIR5bits	set	14757
   882  0000                     _PIR1bits	set	14753
   883  0000                     _PLLR	set	118496
   884  0000                     _SPI1SDIPPS	set	15071
   885  0000                     _U1RXPPS	set	15077
   886  0000                     _RC6PPS	set	14870
   887  0000                     _RC5PPS	set	14869
   888  0000                     _INT1PPS	set	15041
   889  0000                     _RD1PPS	set	14873
   890  0000                     _INT0PPS	set	15040
   891  0000                     _RC3PPS	set	14867
   892  0000                     _RB6PPS	set	14862
   893  0000                     _SPI1SCKPPS	set	15070
   894  0000                     _U2RXPPS	set	15080
   895  0000                     _SLRCONF	set	14995
   896  0000                     _SLRCONE	set	14979
   897  0000                     _SLRCOND	set	14963
   898  0000                     _SLRCONC	set	14947
   899  0000                     _SLRCONB	set	14931
   900  0000                     _SLRCONA	set	14915
   901  0000                     _ODCOND	set	14962
   902  0000                     _ODCONC	set	14946
   903  0000                     _ODCONB	set	14930
   904  0000                     _ODCONA	set	14914
   905  0000                     _ODCONF	set	14994
   906  0000                     _ODCONE	set	14978
   907  0000                     _WPUC	set	14945
   908  0000                     _WPUA	set	14913
   909  0000                     _WPUB	set	14929
   910  0000                     _WPUE	set	14977
   911  0000                     _WPUF	set	14993
   912  0000                     _WPUD	set	14961
   913  0000                     _ANSELA	set	14912
   914  0000                     _ANSELF	set	14992
   915  0000                     _ANSELE	set	14976
   916  0000                     _ANSELB	set	14928
   917  0000                     _ANSELC	set	14944
   918  0000                     _ANSELD	set	14960
   919  0000                     _DMA2SSA	set	15321
   920  0000                     _DMA1SSA	set	15353
   921  0000                     _DMA2DSZ	set	15310
   922  0000                     _DMA2SSZ	set	15319
   923  0000                     _DMA2DSA	set	15312
   924  0000                     _DMA1DSZ	set	15342
   925  0000                     _DMA1SSZ	set	15351
   926  0000                     _DMA1DSA	set	15344
   927  0000                     _DMA1CON0bits	set	15356
   928  0000                     _DMA1CON1bits	set	15357
   929  0000                     _DMA2CON0	set	15324
   930  0000                     _DMA2AIRQ	set	15326
   931  0000                     _DMA2SIRQ	set	15327
   932  0000                     _DMA2CON1	set	15325
   933  0000                     _DMA1CON0	set	15356
   934  0000                     _DMA1AIRQ	set	15358
   935  0000                     _DMA1SIRQ	set	15359
   936  0000                     _DMA1CON1	set	15357
   937  0000                     _CLKRCON	set	15589
   938  0000                     _CLKRCLK	set	15590
   939  0000                     _SPI1INTFbits	set	15642
   940  0000                     _SPI1RXB	set	15632
   941  0000                     _SPI1TXB	set	15633
   942  0000                     _SPI1TCNTL	set	15634
   943  0000                     _SPI1CON0	set	15636
   944  0000                     _SPI1CLK	set	15644
   945  0000                     _SPI1BAUD	set	15641
   946  0000                     _SPI1CON2	set	15638
   947  0000                     _SPI1CON1	set	15637
   948  0000                     _U2RXB	set	15824
   949  0000                     _U2TXB	set	15826
   950  0000                     _U2ERRIE	set	15842
   951  0000                     _U2ERRIR	set	15841
   952  0000                     _U2UIR	set	15840
   953  0000                     _U2FIFO	set	15839
   954  0000                     _U2BRGH	set	15838
   955  0000                     _U2BRGL	set	15837
   956  0000                     _U2CON2	set	15836
   957  0000                     _U2CON1	set	15835
   958  0000                     _U2CON0	set	15834
   959  0000                     _U2P3L	set	15832
   960  0000                     _U2P2L	set	15830
   961  0000                     _U2P1L	set	15828
   962  0000                     _U1RXB	set	15848
   963  0000                     _U1TXB	set	15850
   964  0000                     _U1ERRIE	set	15866
   965  0000                     _U1ERRIR	set	15865
   966  0000                     _U1UIR	set	15864
   967  0000                     _U1FIFO	set	15863
   968  0000                     _U1BRGH	set	15862
   969  0000                     _U1BRGL	set	15861
   970  0000                     _U1CON2	set	15860
   971  0000                     _U1CON1	set	15859
   972  0000                     _U1CON0	set	15858
   973  0000                     _U1P3H	set	15857
   974  0000                     _U1P3L	set	15856
   975  0000                     _U1P2H	set	15855
   976  0000                     _U1P2L	set	15854
   977  0000                     _U1P1H	set	15853
   978  0000                     _U1P1L	set	15852
   979  0000                     _FVRCON	set	16065
   980  0000                     _ADFLTRL	set	16102
   981  0000                     _ADFLTRH	set	16103
   982  0000                     _ADCON0bits	set	16120
   983  0000                     _ADCON0	set	16120
   984  0000                     _ADCLK	set	16127
   985  0000                     _ADACT	set	16126
   986  0000                     _ADREF	set	16125
   987  0000                     _ADSTAT	set	16124
   988  0000                     _ADCON3	set	16123
   989  0000                     _ADCON2	set	16122
   990  0000                     _ADCON1	set	16121
   991  0000                     _ADPREH	set	16119
   992  0000                     _ADPREL	set	16118
   993  0000                     _ADCAP	set	16117
   994  0000                     _ADACQH	set	16116
   995  0000                     _ADACQL	set	16115
   996  0000                     _ADPCH	set	16113
   997  0000                     _ADRPT	set	16108
   998  0000                     _ADACCU	set	16106
   999  0000                     _ADSTPTH	set	16101
  1000  0000                     _ADSTPTL	set	16100
  1001  0000                     _ADUTHH	set	16097
  1002  0000                     _ADUTHL	set	16096
  1003  0000                     _ADLTHH	set	16095
  1004  0000                     _ADLTHL	set	16094
  1005  0000                     _CCPTMRS1bits	set	16223
  1006  0000                     _LATCbits	set	16316
  1007  0000                     _LATDbits	set	16317
  1008  0000                     _PORTBbits	set	16331
  1009  0000                     _T2CON	set	16300
  1010  0000                     _T2TMR	set	16298
  1011  0000                     _T2PR	set	16299
  1012  0000                     _T2RST	set	16303
  1013  0000                     _T2HLT	set	16301
  1014  0000                     _T2CLKCON	set	16302
  1015  0000                     _PWM8DCL	set	16224
  1016  0000                     _PWM8DCH	set	16225
  1017  0000                     _PWM8CON	set	16226
  1018  0000                     _LATEbits	set	16318
  1019  0000                     _T5CONbits	set	16282
  1020  0000                     _T5CON	set	16282
  1021  0000                     _TMR5L	set	16280
  1022  0000                     _TMR5H	set	16281
  1023  0000                     _T5CLK	set	16285
  1024  0000                     _T5GATE	set	16284
  1025  0000                     _T5GCON	set	16283
  1026  0000                     _T6CON	set	16276
  1027  0000                     _T6TMR	set	16274
  1028  0000                     _T6PR	set	16275
  1029  0000                     _T6RST	set	16279
  1030  0000                     _T6HLT	set	16277
  1031  0000                     _T6CLKCON	set	16278
  1032  0000                     _TRISD	set	16325
  1033  0000                     _TRISC	set	16324
  1034  0000                     _TRISB	set	16323
  1035  0000                     _TRISA	set	16322
  1036  0000                     _TRISF	set	16327
  1037  0000                     _TRISE	set	16326
  1038  0000                     _LATC	set	16316
  1039  0000                     _LATB	set	16315
  1040  0000                     _LATF	set	16319
  1041  0000                     _LATA	set	16314
  1042  0000                     _LATD	set	16317
  1043  0000                     _LATE	set	16318
  1044  0000                     _IVTLOCKbits	set	16340
  1045  0000                     _IVTLOCK	set	16340
  1046  0000                     _INTCON0bits	set	16338
  1047  0000                     _GIE	set	130711
  1048  00FEE1                     
  1049                           ; BSR set to: 57
  1050  00FEE1  20                 	db	32
  1051  00FEE2  4D                 	db	77	;'M'
  1052  00FEE3  65                 	db	101	;'e'
  1053  00FEE4  73                 	db	115	;'s'
  1054  00FEE5  67                 	db	103	;'g'
  1055  00FEE6  20                 	db	32
  1056  00FEE7  25                 	db	37
  1057  00FEE8  64                 	db	100	;'d'
  1058  00FEE9  20                 	db	32
  1059  00FEEA  53                 	db	83	;'S'
  1060  00FEEB  74                 	db	116	;'t'
  1061  00FEEC  61                 	db	97	;'a'
  1062  00FEED  63                 	db	99	;'c'
  1063  00FEEE  6B                 	db	107	;'k'
  1064  00FEEF  20                 	db	32
  1065  00FEF0  25                 	db	37
  1066  00FEF1  64                 	db	100	;'d'
  1067  00FEF2  20                 	db	32
  1068  00FEF3  20                 	db	32
  1069  00FEF4  20                 	db	32
  1070  00FEF5  20                 	db	32
  1071  00FEF6  20                 	db	32
  1072  00FEF7  20                 	db	32
  1073  00FEF8  00                 	db	0
  1074  00FEF9                     STR_27:
  1075                           
  1076                           ; BSR set to: 57
  1077  00FEF9  20                 	db	32
  1078  00FEFA  20                 	db	32
  1079  00FEFB  20                 	db	32
  1080  00FEFC  20                 	db	32
  1081  00FEFD  20                 	db	32
  1082  00FEFE  20                 	db	32
  1083  00FEFF  20                 	db	32
  1084  00FF00  20                 	db	32
  1085  00FF01  20                 	db	32
  1086  00FF02  20                 	db	32
  1087  00FF03  20                 	db	32
  1088  00FF04  20                 	db	32
  1089  00FF05  20                 	db	32
  1090  00FF06  20                 	db	32
  1091  00FF07  20                 	db	32
  1092  00FF08  20                 	db	32
  1093  00FF09  20                 	db	32
  1094  00FF0A  20                 	db	32
  1095  00FF0B  00                 	db	0
  1096  00FF0C                     STR_17:
  1097                           
  1098                           ; BSR set to: 57
  1099  00FF0C  48                 	db	72	;'H'
  1100  00FF0D  45                 	db	69	;'E'
  1101  00FF0E  4C                 	db	76	;'L'
  1102  00FF0F  50                 	db	80	;'P'
  1103  00FF10  20                 	db	32
  1104  00FF11  25                 	db	37
  1105  00FF12  73                 	db	115	;'s'
  1106  00FF13  20                 	db	32
  1107  00FF14  20                 	db	32
  1108  00FF15  20                 	db	32
  1109  00FF16  20                 	db	32
  1110  00FF17  20                 	db	32
  1111  00FF18  20                 	db	32
  1112  00FF19  20                 	db	32
  1113  00FF1A  20                 	db	32
  1114  00FF1B  20                 	db	32
  1115  00FF1C  20                 	db	32
  1116  00FF1D  20                 	db	32
  1117  00FF1E  00                 	db	0
  1118  00FF1F                     
  1119                           ; BSR set to: 57
  1120  00FF1F  44                 	db	68	;'D'
  1121  00FF20  49                 	db	73	;'I'
  1122  00FF21  53                 	db	83	;'S'
  1123  00FF22  50                 	db	80	;'P'
  1124  00FF23  4C                 	db	76	;'L'
  1125  00FF24  41                 	db	65	;'A'
  1126  00FF25  59                 	db	89	;'Y'
  1127  00FF26  20                 	db	32
  1128  00FF27  25                 	db	37
  1129  00FF28  73                 	db	115	;'s'
  1130  00FF29  20                 	db	32
  1131  00FF2A  20                 	db	32
  1132  00FF2B  20                 	db	32
  1133  00FF2C  20                 	db	32
  1134  00FF2D  20                 	db	32
  1135  00FF2E  20                 	db	32
  1136  00FF2F  20                 	db	32
  1137  00FF30  20                 	db	32
  1138  00FF31  00                 	db	0
  1139  00FF32                     STR_11:
  1140                           
  1141                           ; BSR set to: 57
  1142  00FF32  25                 	db	37
  1143  00FF33  64                 	db	100	;'d'
  1144  00FF34  20                 	db	32
  1145  00FF35  25                 	db	37
  1146  00FF36  32                 	db	50	;'2'
  1147  00FF37  2E                 	db	46
  1148  00FF38  32                 	db	50	;'2'
  1149  00FF39  66                 	db	102	;'f'
  1150  00FF3A  2C                 	db	44
  1151  00FF3B  20                 	db	32
  1152  00FF3C  25                 	db	37
  1153  00FF3D  6C                 	db	108	;'l'
  1154  00FF3E  75                 	db	117	;'u'
  1155  00FF3F  20                 	db	32
  1156  00FF40  20                 	db	32
  1157  00FF41  20                 	db	32
  1158  00FF42  23                 	db	35
  1159  00FF43  00                 	db	0
  1160  00FF44                     STR_8:
  1161                           
  1162                           ; BSR set to: 57
  1163  00FF44  20                 	db	32
  1164  00FF45  56                 	db	86	;'V'
  1165  00FF46  54                 	db	84	;'T'
  1166  00FF47  45                 	db	69	;'E'
  1167  00FF48  52                 	db	82	;'R'
  1168  00FF49  4D                 	db	77	;'M'
  1169  00FF4A  20                 	db	32
  1170  00FF4B  23                 	db	35
  1171  00FF4C  32                 	db	50	;'2'
  1172  00FF4D  20                 	db	32
  1173  00FF4E  20                 	db	32
  1174  00FF4F  20                 	db	32
  1175  00FF50  20                 	db	32
  1176  00FF51  20                 	db	32
  1177  00FF52  20                 	db	32
  1178  00FF53  20                 	db	32
  1179  00FF54  00                 	db	0
  1180  00FF55                     STR_4:
  1181                           
  1182                           ; BSR set to: 57
  1183  00FF55  20                 	db	32
  1184  00FF56  4E                 	db	78	;'N'
  1185  00FF57  53                 	db	83	;'S'
  1186  00FF58  41                 	db	65	;'A'
  1187  00FF59  53                 	db	83	;'S'
  1188  00FF5A  50                 	db	80	;'P'
  1189  00FF5B  4F                 	db	79	;'O'
  1190  00FF5C  4F                 	db	79	;'O'
  1191  00FF5D  4B                 	db	75	;'K'
  1192  00FF5E  20                 	db	32
  1193  00FF5F  20                 	db	32
  1194  00FF60  20                 	db	32
  1195  00FF61  20                 	db	32
  1196  00FF62  20                 	db	32
  1197  00FF63  20                 	db	32
  1198  00FF64  20                 	db	32
  1199  00FF65  00                 	db	0
  1200  00FF66                     STR_1:
  1201                           
  1202                           ; BSR set to: 57
  1203  00FF66  20                 	db	32
  1204  00FF67  4D                 	db	77	;'M'
  1205  00FF68  42                 	db	66	;'B'
  1206  00FF69  4D                 	db	77	;'M'
  1207  00FF6A  43                 	db	67	;'C'
  1208  00FF6B  20                 	db	32
  1209  00FF6C  53                 	db	83	;'S'
  1210  00FF6D  4F                 	db	79	;'O'
  1211  00FF6E  4C                 	db	76	;'L'
  1212  00FF6F  41                 	db	65	;'A'
  1213  00FF70  52                 	db	82	;'R'
  1214  00FF71  4D                 	db	77	;'M'
  1215  00FF72  4F                 	db	79	;'O'
  1216  00FF73  4E                 	db	78	;'N'
  1217  00FF74  20                 	db	32
  1218  00FF75  20                 	db	32
  1219  00FF76  00                 	db	0
  1220  00FF77                     STR_5:
  1221                           
  1222                           ; BSR set to: 57
  1223  00FF77  20                 	db	32
  1224  00FF78  53                 	db	83	;'S'
  1225  00FF79  45                 	db	69	;'E'
  1226  00FF7A  51                 	db	81	;'Q'
  1227  00FF7B  55                 	db	85	;'U'
  1228  00FF7C  45                 	db	69	;'E'
  1229  00FF7D  4E                 	db	78	;'N'
  1230  00FF7E  43                 	db	67	;'C'
  1231  00FF7F  45                 	db	69	;'E'
  1232  00FF80  20                 	db	32
  1233  00FF81  54                 	db	84	;'T'
  1234  00FF82  45                 	db	69	;'E'
  1235  00FF83  53                 	db	83	;'S'
  1236  00FF84  54                 	db	84	;'T'
  1237  00FF85  20                 	db	32
  1238  00FF86  20                 	db	32
  1239  00FF87  00                 	db	0
  1240  00FF88                     STR_21:
  1241                           
  1242                           ; BSR set to: 57
  1243  00FF88  76                 	db	118	;'v'
  1244  00FF89  74                 	db	116	;'t'
  1245  00FF8A  65                 	db	101	;'e'
  1246  00FF8B  72                 	db	114	;'r'
  1247  00FF8C  6D                 	db	109	;'m'
  1248  00FF8D  20                 	db	32
  1249  00FF8E  25                 	db	37
  1250  00FF8F  78                 	db	120	;'x'
  1251  00FF90  3A                 	db	58	;':'
  1252  00FF91  25                 	db	37
  1253  00FF92  78                 	db	120	;'x'
  1254  00FF93  20                 	db	32
  1255  00FF94  20                 	db	32
  1256  00FF95  20                 	db	32
  1257  00FF96  00                 	db	0
  1258  00FF97                     STR_2:
  1259                           
  1260                           ; BSR set to: 57
  1261  00FF97  20                 	db	32
  1262  00FF98  56                 	db	86	;'V'
  1263  00FF99  65                 	db	101	;'e'
  1264  00FF9A  72                 	db	114	;'r'
  1265  00FF9B  73                 	db	115	;'s'
  1266  00FF9C  69                 	db	105	;'i'
  1267  00FF9D  6F                 	db	111	;'o'
  1268  00FF9E  6E                 	db	110	;'n'
  1269  00FF9F  20                 	db	32
  1270  00FFA0  25                 	db	37
  1271  00FFA1  73                 	db	115	;'s'
  1272  00FFA2  20                 	db	32
  1273  00FFA3  20                 	db	32
  1274  00FFA4  20                 	db	32
  1275  00FFA5  00                 	db	0
  1276  00FFA6                     STR_9:
  1277                           
  1278                           ; BSR set to: 57
  1279  00FFA6  25                 	db	37
  1280  00FFA7  64                 	db	100	;'d'
  1281  00FFA8  20                 	db	32
  1282  00FFA9  25                 	db	37
  1283  00FFAA  32                 	db	50	;'2'
  1284  00FFAB  2E                 	db	46
  1285  00FFAC  32                 	db	50	;'2'
  1286  00FFAD  66                 	db	102	;'f'
  1287  00FFAE  20                 	db	32
  1288  00FFAF  20                 	db	32
  1289  00FFB0  20                 	db	32
  1290  00FFB1  23                 	db	35
  1291  00FFB2  00                 	db	0
  1292  00FFB3                     STR_15:
  1293                           
  1294                           ; BSR set to: 57
  1295  00FFB3  4E                 	db	78	;'N'
  1296  00FFB4  6F                 	db	111	;'o'
  1297  00FFB5  76                 	db	118	;'v'
  1298  00FFB6  20                 	db	32
  1299  00FFB7  31                 	db	49	;'1'
  1300  00FFB8  30                 	db	48	;'0'
  1301  00FFB9  20                 	db	32
  1302  00FFBA  32                 	db	50	;'2'
  1303  00FFBB  30                 	db	48	;'0'
  1304  00FFBC  31                 	db	49	;'1'
  1305  00FFBD  39                 	db	57	;'9'
  1306  00FFBE  00                 	db	0
  1307  00FFBF                     STR_19:
  1308                           
  1309                           ; BSR set to: 57
  1310  00FFBF  25                 	db	37
  1311  00FFC0  73                 	db	115	;'s'
  1312  00FFC1  20                 	db	32
  1313  00FFC2  20                 	db	32
  1314  00FFC3  20                 	db	32
  1315  00FFC4  20                 	db	32
  1316  00FFC5  20                 	db	32
  1317  00FFC6  20                 	db	32
  1318  00FFC7  20                 	db	32
  1319  00FFC8  00                 	db	0
  1320  00FFC9                     STR_16:
  1321                           
  1322                           ; BSR set to: 57
  1323  00FFC9  31                 	db	49	;'1'
  1324  00FFCA  39                 	db	57	;'9'
  1325  00FFCB  3A                 	db	58	;':'
  1326  00FFCC  30                 	db	48	;'0'
  1327  00FFCD  39                 	db	57	;'9'
  1328  00FFCE  3A                 	db	58	;':'
  1329  00FFCF  31                 	db	49	;'1'
  1330  00FFD0  39                 	db	57	;'9'
  1331  00FFD1  00                 	db	0
  1332  00FFD2                     STR_3:
  1333                           
  1334                           ; BSR set to: 57
  1335  00FFD2  30                 	db	48	;'0'
  1336  00FFD3  2E                 	db	46
  1337  00FFD4  39                 	db	57	;'9'
  1338  00FFD5  31                 	db	49	;'1'
  1339  00FFD6  00                 	db	0
  1340  00FFD7                     STR_34:
  1341                           
  1342                           ; BSR set to: 57
  1343  00FFD7  49                 	db	73	;'I'
  1344  00FFD8  4E                 	db	78	;'N'
  1345  00FFD9  46                 	db	70	;'F'
  1346  00FFDA  00                 	db	0
  1347  00FFDB                     STR_38:
  1348                           
  1349                           ; BSR set to: 57
  1350  00FFDB  4E                 	db	78	;'N'
  1351  00FFDC  41                 	db	65	;'A'
  1352  00FFDD  4E                 	db	78	;'N'
  1353  00FFDE  00                 	db	0
  1354  00FFDF                     STR_35:
  1355                           
  1356                           ; BSR set to: 57
  1357  00FFDF  69                 	db	105	;'i'
  1358  00FFE0  6E                 	db	110	;'n'
  1359  00FFE1  66                 	db	102	;'f'
  1360  00FFE2  00                 	db	0
  1361  00FFE3                     STR_39:
  1362                           
  1363                           ; BSR set to: 57
  1364  00FFE3  6E                 	db	110	;'n'
  1365  00FFE4  61                 	db	97	;'a'
  1366  00FFE5  6E                 	db	110	;'n'
  1367  00FFE6  00                 	db	0
  1368  00FFE7                     STR_65:
  1369                           
  1370                           ; BSR set to: 57
  1371  00FFE7  6C                 	db	108	;'l'
  1372  00FFE8  58                 	db	88	;'X'
  1373  00FFE9  00                 	db	0
  1374  00FFEA                     STR_42:
  1375                           
  1376                           ; BSR set to: 57
  1377  00FFEA  6C                 	db	108	;'l'
  1378  00FFEB  64                 	db	100	;'d'
  1379  00FFEC  00                 	db	0
  1380  00FFED                     STR_51:
  1381                           
  1382                           ; BSR set to: 57
  1383  00FFED  6C                 	db	108	;'l'
  1384  00FFEE  66                 	db	102	;'f'
  1385  00FFEF  00                 	db	0
  1386  00FFF0                     STR_46:
  1387                           
  1388                           ; BSR set to: 57
  1389  00FFF0  6C                 	db	108	;'l'
  1390  00FFF1  69                 	db	105	;'i'
  1391  00FFF2  00                 	db	0
  1392  00FFF3                     STR_56:
  1393                           
  1394                           ; BSR set to: 57
  1395  00FFF3  6C                 	db	108	;'l'
  1396  00FFF4  75                 	db	117	;'u'
  1397  00FFF5  00                 	db	0
  1398  00FFF6                     STR_61:
  1399                           
  1400                           ; BSR set to: 57
  1401  00FFF6  6C                 	db	108	;'l'
  1402  00FFF7  78                 	db	120	;'x'
  1403  00FFF8  00                 	db	0
  1404  00FFF9                     STR_13:
  1405                           
  1406                           ; BSR set to: 57
  1407  00FFF9  25                 	db	37
  1408  00FFFA  63                 	db	99	;'c'
  1409  00FFFB  00                 	db	0
  1410  00FFFC                     STR_12:
  1411                           
  1412                           ; BSR set to: 57
  1413  00FFFC  25                 	db	37
  1414  00FFFD  73                 	db	115	;'s'
  1415  00FFFE  00                 	db	0
  1416  0000                     
  1417                           ; #config settings
  1418  00FFFF  00                 	db	0	; dummy byte at the end
  1419  0000                     
  1420                           	psect	cinit
  1421  017486                     __pcinit:
  1422                           	opt callstack 0
  1423  017486                     start_initialization:
  1424                           	opt callstack 0
  1425  017486                     __initialization:
  1426                           	opt callstack 0
  1427                           
  1428                           ; Initialize objects allocated to BANK1 (187 bytes)
  1429                           ; load TBLPTR registers with __pidataBANK1
  1430  017486  0E10               	movlw	low __pidataBANK1
  1431  017488  6EF6               	movwf	tblptrl,c
  1432  01748A  0E76               	movlw	high __pidataBANK1
  1433  01748C  6EF7               	movwf	tblptrh,c
  1434  01748E  0E01               	movlw	low (__pidataBANK1 shr (0+16))
  1435  017490  6EF8               	movwf	tblptru,c
  1436  017492  EE00  F100         	lfsr	0,__pdataBANK1
  1437  017496  EE20 F0BB          	lfsr	2,187
  1438  01749A                     copy_data0:
  1439  01749A  0009               	tblrd		*+
  1440  01749C  006F FFD7 FFEE     	movff	tablat,postinc0
  1441  0174A2  50DD               	movf	postdec2,w,c
  1442  0174A4  50D9               	movf	fsr2l,w,c
  1443  0174A6  E1F9               	bnz	copy_data0
  1444                           
  1445                           ; Initialize objects allocated to BANK0 (67 bytes)
  1446                           ; load TBLPTR registers with __pidataBANK0
  1447  0174A8  0EF2               	movlw	low __pidataBANK0
  1448  0174AA  6EF6               	movwf	tblptrl,c
  1449  0174AC  0E84               	movlw	high __pidataBANK0
  1450  0174AE  6EF7               	movwf	tblptrh,c
  1451  0174B0  0E01               	movlw	low (__pidataBANK0 shr (0+16))
  1452  0174B2  6EF8               	movwf	tblptru,c
  1453  0174B4  EE00  F0A3         	lfsr	0,__pdataBANK0
  1454  0174B8  EE20 F043          	lfsr	2,67
  1455  0174BC                     copy_data1:
  1456  0174BC  0009               	tblrd		*+
  1457  0174BE  006F FFD7 FFEE     	movff	tablat,postinc0
  1458  0174C4  50DD               	movf	postdec2,w,c
  1459  0174C6  50D9               	movf	fsr2l,w,c
  1460  0174C8  E1F9               	bnz	copy_data1
  1461                           
  1462                           ; Clear objects allocated to BANK6 (255 bytes)
  1463  0174CA  EE01  F200         	lfsr	0,__pbssBANK6
  1464  0174CE  EE20 F0FF          	lfsr	2,255
  1465  0174D2                     clear_0:
  1466  0174D2  6AEE               	clrf	postinc0,c
  1467  0174D4  50DD               	movf	postdec2,w,c
  1468  0174D6  50D9               	movf	fsr2l,w,c
  1469  0174D8  E1FC               	bnz	clear_0
  1470  0174DA  50DA               	movf	fsr2h,w,c
  1471  0174DC  E1FA               	bnz	clear_0
  1472                           
  1473                           ; Clear objects allocated to BANK5 (255 bytes)
  1474  0174DE  EE01  F100         	lfsr	0,__pbssBANK5
  1475  0174E2  EE20 F0FF          	lfsr	2,255
  1476  0174E6                     clear_1:
  1477  0174E6  6AEE               	clrf	postinc0,c
  1478  0174E8  50DD               	movf	postdec2,w,c
  1479  0174EA  50D9               	movf	fsr2l,w,c
  1480  0174EC  E1FC               	bnz	clear_1
  1481  0174EE  50DA               	movf	fsr2h,w,c
  1482  0174F0  E1FA               	bnz	clear_1
  1483                           
  1484                           ; Clear objects allocated to BANK4 (218 bytes)
  1485  0174F2  EE01  F000         	lfsr	0,__pbssBANK4
  1486  0174F6  0EDA               	movlw	218
  1487  0174F8                     clear_2:
  1488  0174F8  6AEE               	clrf	postinc0,c
  1489  0174FA  06E8               	decf	wreg,f,c
  1490  0174FC  E1FD               	bnz	clear_2
  1491                           
  1492                           ; Clear objects allocated to BANK3 (198 bytes)
  1493  0174FE  EE00  F300         	lfsr	0,__pbssBANK3
  1494  017502  0EC6               	movlw	198
  1495  017504                     clear_3:
  1496  017504  6AEE               	clrf	postinc0,c
  1497  017506  06E8               	decf	wreg,f,c
  1498  017508  E1FD               	bnz	clear_3
  1499                           
  1500                           ; Clear objects allocated to BANK2 (252 bytes)
  1501  01750A  EE00  F200         	lfsr	0,__pbssBANK2
  1502  01750E  0EFC               	movlw	252
  1503  017510                     clear_4:
  1504  017510  6AEE               	clrf	postinc0,c
  1505  017512  06E8               	decf	wreg,f,c
  1506  017514  E1FD               	bnz	clear_4
  1507                           
  1508                           ; Clear objects allocated to BANK1 (64 bytes)
  1509  017516  EE00  F1BB         	lfsr	0,__pbssBANK1
  1510  01751A  0E40               	movlw	64
  1511  01751C                     clear_5:
  1512  01751C  6AEE               	clrf	postinc0,c
  1513  01751E  06E8               	decf	wreg,f,c
  1514  017520  E1FD               	bnz	clear_5
  1515                           
  1516                           ; Clear objects allocated to BANK0 (67 bytes)
  1517  017522  EE00  F060         	lfsr	0,__pbssBANK0
  1518  017526  0E43               	movlw	67
  1519  017528                     clear_6:
  1520  017528  6AEE               	clrf	postinc0,c
  1521  01752A  06E8               	decf	wreg,f,c
  1522  01752C  E1FD               	bnz	clear_6
  1523                           
  1524                           ; Clear objects allocated to COMRAM (52 bytes)
  1525  01752E  EE00  F001         	lfsr	0,__pbssCOMRAM
  1526  017532  0E34               	movlw	52
  1527  017534                     clear_7:
  1528  017534  6AEE               	clrf	postinc0,c
  1529  017536  06E8               	decf	wreg,f,c
  1530  017538  E1FD               	bnz	clear_7
  1531                           
  1532                           ;
  1533                           ; Setup IVTBASE
  1534                           ;
  1535  01753A  0E08               	movlw	(ivt0x8_base shr 0)& (0+255)
  1536  01753C  6ED5               	movwf	213,c
  1537  01753E  0E00               	movlw	(ivt0x8_base shr (0+8))& (0+255)
  1538  017540  6ED6               	movwf	214,c
  1539  017542  0E00               	movlw	(ivt0x8_base shr (0+16))& (0+255)
  1540  017544  6ED7               	movwf	215,c
  1541  017546                     end_of_initialization:
  1542                           	opt callstack 0
  1543  017546                     __end_of__initialization:
  1544                           	opt callstack 0
  1545  017546  0100               	movlb	0
  1546  017548  EF47  F0A0         	goto	_main	;jump to C main() function
  1547                           
  1548                           	psect	bssCOMRAM
  1549  000001                     __pbssCOMRAM:
  1550                           	opt callstack 0
  1551  000001                     _TMR6_InterruptHandler:
  1552                           	opt callstack 0
  1553  000001                     	ds	3
  1554  000004                     _ADCC_ADTI_InterruptHandler:
  1555                           	opt callstack 0
  1556  000004                     	ds	3
  1557  000007                     _ADCC_ADI_InterruptHandler:
  1558                           	opt callstack 0
  1559  000007                     	ds	3
  1560  00000A                     _UART1_TxInterruptHandler:
  1561                           	opt callstack 0
  1562  00000A                     	ds	3
  1563  00000D                     _UART1_RxInterruptHandler:
  1564                           	opt callstack 0
  1565  00000D                     	ds	3
  1566  000010                     _UART2_TxInterruptHandler:
  1567                           	opt callstack 0
  1568  000010                     	ds	3
  1569  000013                     _UART2_RxInterruptHandler:
  1570                           	opt callstack 0
  1571  000013                     	ds	3
  1572  000016                     _INT1_InterruptHandler:
  1573                           	opt callstack 0
  1574  000016                     	ds	3
  1575  000019                     _INT0_InterruptHandler:
  1576                           	opt callstack 0
  1577  000019                     	ds	3
  1578  00001C                     _nout:
  1579                           	opt callstack 0
  1580  00001C                     	ds	2
  1581  00001E                     _width:
  1582                           	opt callstack 0
  1583  00001E                     	ds	2
  1584  000020                     _prec:
  1585                           	opt callstack 0
  1586  000020                     	ds	2
  1587  000022                     _flags:
  1588                           	opt callstack 0
  1589  000022                     	ds	2
  1590  000024                     TMR5_ISR@CountCallBack:
  1591                           	opt callstack 0
  1592  000024                     	ds	2
  1593  000026                     _timer5ReloadVal:
  1594                           	opt callstack 0
  1595  000026                     	ds	2
  1596  000028                     _mode_sw:
  1597                           	opt callstack 0
  1598  000028                     	ds	1
  1599  000029                     _uart2RxCount:
  1600                           	opt callstack 0
  1601  000029                     	ds	1
  1602  00002A                     _uart2RxTail:
  1603                           	opt callstack 0
  1604  00002A                     	ds	1
  1605  00002B                     _uart2RxHead:
  1606                           	opt callstack 0
  1607  00002B                     	ds	1
  1608  00002C                     _uart2TxBufferRemaining:
  1609                           	opt callstack 0
  1610  00002C                     	ds	1
  1611  00002D                     _uart2TxTail:
  1612                           	opt callstack 0
  1613  00002D                     	ds	1
  1614  00002E                     _uart2TxHead:
  1615                           	opt callstack 0
  1616  00002E                     	ds	1
  1617  00002F                     _uart1RxCount:
  1618                           	opt callstack 0
  1619  00002F                     	ds	1
  1620  000030                     _uart1RxTail:
  1621                           	opt callstack 0
  1622  000030                     	ds	1
  1623  000031                     _uart1RxHead:
  1624                           	opt callstack 0
  1625  000031                     	ds	1
  1626  000032                     _uart1TxBufferRemaining:
  1627                           	opt callstack 0
  1628  000032                     	ds	1
  1629  000033                     _uart1TxTail:
  1630                           	opt callstack 0
  1631  000033                     	ds	1
  1632  000034                     _uart1TxHead:
  1633                           	opt callstack 0
  1634  000034                     	ds	1
  1635                           
  1636                           	psect	bssBANK0
  1637  000060                     __pbssBANK0:
  1638                           	opt callstack 0
  1639  000060                     _tickCount:
  1640                           	opt callstack 0
  1641  000060                     	ds	24
  1642  000078                     _spi_link:
  1643                           	opt callstack 0
  1644  000078                     	ds	12
  1645  000084                     floorf@F524:
  1646                           	opt callstack 0
  1647  000084                     	ds	4
  1648  000088                     ___fpclassifyf@F463:
  1649                           	opt callstack 0
  1650  000088                     	ds	4
  1651  00008C                     _utctime:
  1652                           	opt callstack 0
  1653  00008C                     	ds	4
  1654  000090                     wdtdelay@dcount:
  1655                           	opt callstack 0
  1656  000090                     	ds	4
  1657  000094                     _P:
  1658                           	opt callstack 0
  1659  000094                     	ds	4
  1660  000098                     _TMR5_InterruptHandler:
  1661                           	opt callstack 0
  1662  000098                     	ds	3
  1663  00009B                     _seed:
  1664                           	opt callstack 0
  1665  00009B                     	ds	8
  1666                           
  1667                           	psect	dataBANK0
  1668  0000A3                     __pdataBANK0:
  1669                           	opt callstack 0
  1670  0000A3                     _R:
  1671                           	opt callstack 0
  1672  0000A3                     	ds	44
  1673  0000CF                     stoa@F1166:
  1674                           	opt callstack 0
  1675  0000CF                     	ds	7
  1676  0000D6                     _port_data:
  1677                           	opt callstack 0
  1678  0000D6                     	ds	16
  1679                           
  1680                           	psect	bssBANK1
  1681  0001BB                     __pbssBANK1:
  1682                           	opt callstack 0
  1683  0001BB                     lp_filter@smooth:
  1684                           	opt callstack 0
  1685  0001BB                     	ds	64
  1686                           
  1687                           	psect	dataBANK1
  1688  000100                     __pdataBANK1:
  1689                           	opt callstack 0
  1690  000100                     _V:
  1691                           	opt callstack 0
  1692  000100                     	ds	187
  1693                           
  1694                           	psect	bssBANK2
  1695  000200                     __pbssBANK2:
  1696                           	opt callstack 0
  1697  000200                     _C:
  1698                           	opt callstack 0
  1699  000200                     	ds	108
  1700  00026C                     _uart1TxBuffer:
  1701                           	opt callstack 0
  1702  00026C                     	ds	64
  1703  0002AC                     _dbuf:
  1704                           	opt callstack 0
  1705  0002AC                     	ds	80
  1706                           
  1707                           	psect	bssBANK3
  1708  000300                     __pbssBANK3:
  1709                           	opt callstack 0
  1710  000300                     _uart2TxBuffer:
  1711                           	opt callstack 0
  1712  000300                     	ds	64
  1713  000340                     _ring_buf2:
  1714                           	opt callstack 0
  1715  000340                     	ds	67
  1716  000383                     _ring_buf1:
  1717                           	opt callstack 0
  1718  000383                     	ds	67
  1719                           
  1720                           	psect	bssBANK4
  1721  000400                     __pbssBANK4:
  1722                           	opt callstack 0
  1723  000400                     _D:
  1724                           	opt callstack 0
  1725  000400                     	ds	218
  1726                           
  1727                           	psect	bssBANK5
  1728  000500                     __pbssBANK5:
  1729                           	opt callstack 0
  1730  000500                     _uart1RxBuffer:
  1731                           	opt callstack 0
  1732  000500                     	ds	255
  1733                           
  1734                           	psect	bssBANK6
  1735  000600                     __pbssBANK6:
  1736                           	opt callstack 0
  1737  000600                     _uart2RxBuffer:
  1738                           	opt callstack 0
  1739  000600                     	ds	255
  1740                           
  1741                           	psect	cstackBANK0
  1742  0000E6                     __pcstackBANK0:
  1743                           	opt callstack 0
  1744  0000E6                     ??_TMR6_ISR:
  1745                           
  1746                           ; 1 bytes @ 0x0
  1747  0000E6                     	ds	1
  1748  0000E7                     ??_TMR5_ISR:
  1749                           
  1750                           ; 1 bytes @ 0x1
  1751  0000E7                     	ds	4
  1752                           
  1753                           	psect	cstackCOMRAM
  1754  000055                     __pcstackCOMRAM:
  1755                           	opt callstack 0
  1756  000055                     ??_ADCC_ISR:
  1757  000055                     
  1758                           ; 1 bytes @ 0x0
  1759  000055                     	ds	1
  1760  000056                     ??_ADCC_ThresholdISR:
  1761                           
  1762                           ; 1 bytes @ 0x1
  1763  000056                     	ds	5
  1764                           
  1765 ;;
  1766 ;;Main: autosize = 1, tempsize = 0, incstack = 0, save=0
  1767 ;;
  1768 ;; *************** function _main *****************
  1769 ;; Defined at:
  1770 ;;		line 147 in file "main.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;  mode            1  [STACK] enum E17005
  1775 ;; Return value:  Size  Location     Type
  1776 ;;                  1  [STACK] void 
  1777 ;; Registers used:
  1778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  1784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  1788 ;;Total ram usage:        0 bytes
  1789 ;; Hardware stack levels required when called:   19
  1790 ;; This function calls:
  1791 ;;		_SYSTEM_Initialize
  1792 ;;		_StartTimer
  1793 ;;		_TimerDone
  1794 ;;		_WaitMs
  1795 ;;		_check_adc_scan
  1796 ;;		_check_help
  1797 ;;		_clear_adc_scan
  1798 ;;		_convert_adc_data
  1799 ;;		_eaDogM_WriteCommand
  1800 ;;		_get_raw_result
  1801 ;;		_get_vterm_ptr
  1802 ;;		_init_display
  1803 ;;		_mode_lamp_dim
  1804 ;;		_set_display_info
  1805 ;;		_set_vterm
  1806 ;;		_sprintf
  1807 ;;		_srand
  1808 ;;		_start_adc_scan
  1809 ;;		_update_lcd
  1810 ;; This function is called by:
  1811 ;;		Startup code after reset
  1812 ;; This function uses a reentrant model
  1813 ;;
  1814                           
  1815                           	psect	text0
  1816  01408E                     __ptext0:
  1817                           	opt callstack 0
  1818  01408E                     _main:
  1819                           	opt callstack 0
  1820                           
  1821                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  1822  01408E  52E6               	movf	postinc1,f,c
  1823                           
  1824                           ;main.c: 149:  UI_STATES mode;;main.c: 152:  SYSTEM_Initialize();
  1825                           
  1826                           ;incstack = 0
  1827  014090  ECEE  F0C1         	call	_SYSTEM_Initialize	;wreg free
  1828                           
  1829                           ; BSR set to: 60
  1830                           ;main.c: 155:  (INTCON0bits.GIEH = 1);
  1831  014094  8ED2               	bsf	210,7,c	;volatile
  1832                           
  1833                           ; BSR set to: 60
  1834                           ;main.c: 158:  (INTCON0bits.GIEL = 1);
  1835  014096  8CD2               	bsf	210,6,c	;volatile
  1836                           
  1837                           ; BSR set to: 60
  1838                           ;main.c: 160:  V.ui_state = UI_STATE_INIT;
  1839  014098  0101               	movlb	1	; () banked
  1840  01409A  6B00               	clrf	_V& (0+255),b	;volatile
  1841                           
  1842                           ; BSR set to: 1
  1843                           ;main.c: 165:  WaitMs(300);
  1844  01409C  0E2C               	movlw	44
  1845  01409E  6EE6               	movwf	postinc1,c
  1846  0140A0  0E01               	movlw	1
  1847  0140A2  6EE6               	movwf	postinc1,c
  1848  0140A4  EC32  F0C3         	call	_WaitMs	;wreg free
  1849                           
  1850                           ;main.c: 166:  if (PORTBbits.RB0) {
  1851  0140A8  A0CB               	btfss	203,0,c	;volatile
  1852  0140AA  D004               	goto	l10371
  1853                           
  1854                           ;main.c: 167:   mode = UI_STATE_HOST;
  1855                           ;stkvar	_mode @ sp[(-1)+0]
  1856  0140AC  0EFF               	movlw	-1
  1857  0140AE  6AE3               	clrf	plusw1,c
  1858  0140B0  2AE3               	incf	plusw1,f,c
  1859                           
  1860                           ;main.c: 168:  } else {
  1861  0140B2  D004               	goto	l10373
  1862  0140B4                     l10371:
  1863                           
  1864                           ;main.c: 169:   mode = UI_STATE_LOG;
  1865                           ;stkvar	_mode @ sp[(-1)+0]
  1866  0140B4  0EFF               	movlw	-1
  1867  0140B6  6AE3               	clrf	plusw1,c
  1868  0140B8  80E3               	bsf	plusw1,0,c
  1869  0140BA  82E3               	bsf	plusw1,1,c	;indir
  1870  0140BC                     l10373:
  1871                           
  1872                           ;main.c: 172:  if (mode == UI_STATE_HOST) {
  1873                           ;stkvar	_mode @ sp[(-1)+0]
  1874  0140BC  0EFF               	movlw	-1
  1875  0140BE  04E3               	decf	plusw1,w,c
  1876  0140C0  A4D8               	btfss	status,2,c
  1877  0140C2  D007               	goto	l1242
  1878                           
  1879                           ;main.c: 173:   do { LATDbits.LATD0 = 1; } while(0);
  1880  0140C4  80BD               	bsf	189,0,c	;volatile
  1881                           
  1882                           ;main.c: 174:   V.mode_pwm = 70;
  1883  0140C6  0E00               	movlw	0
  1884  0140C8  0101               	movlb	1	; () banked
  1885  0140CA  6F96               	movwf	(_V+150)& (0+255),b	;volatile
  1886  0140CC  0E46               	movlw	70
  1887  0140CE  6F95               	movwf	(_V+149)& (0+255),b	;volatile
  1888                           
  1889                           ;main.c: 175:  } else {
  1890  0140D0  D004               	goto	l10377
  1891  0140D2                     l1242:
  1892  0140D2  90BD               	bcf	189,0,c	;volatile
  1893                           
  1894                           ;main.c: 177:   V.mode_pwm = 0;
  1895  0140D4  0101               	movlb	1	; () banked
  1896  0140D6  6B95               	clrf	(_V+149)& (0+255),b	;volatile
  1897  0140D8  6B96               	clrf	(_V+150)& (0+255),b	;volatile
  1898  0140DA                     l10377:
  1899                           
  1900                           ; BSR set to: 1
  1901                           ;main.c: 179:  mode_lamp_dim(V.mode_pwm);
  1902  0140DA  0060  F657  FFE6   	movff	_V+149,postinc1
  1903  0140E0  0060  F65B  FFE6   	movff	_V+150,postinc1
  1904  0140E6  EC8B  F0C6         	call	_mode_lamp_dim	;wreg free
  1905  0140EA  D0CE               	goto	l10419
  1906  0140EC                     l10379:
  1907                           
  1908                           ; BSR set to: 1
  1909                           ;main.c: 190:    init_display();
  1910  0140EC  EC64  F0B9         	call	_init_display	;wreg free
  1911                           
  1912                           ; BSR set to: 61
  1913                           ;main.c: 191:    eaDogM_WriteCommand(0b00001100);
  1914  0140F0  0E0C               	movlw	12
  1915  0140F2  6EE6               	movwf	postinc1,c
  1916  0140F4  ECDF  F0C6         	call	_eaDogM_WriteCommand	;wreg free
  1917                           
  1918                           ; BSR set to: 0
  1919                           ;main.c: 193:    V.ui_state = mode;
  1920                           ;stkvar	_mode @ sp[(-1)+0]
  1921  0140F8  0EFF               	movlw	-1
  1922  0140FA  006F FF8C  F100    	movff	plusw1,_V	;volatile
  1923                           
  1924                           ; BSR set to: 0
  1925                           ;main.c: 194:    srand(1957);
  1926  014100  0EA5               	movlw	165
  1927  014102  6EE6               	movwf	postinc1,c
  1928  014104  0E07               	movlw	7
  1929  014106  6EE6               	movwf	postinc1,c
  1930  014108  EC68  F0C3         	call	_srand	;wreg free
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 195:    set_vterm(0);
  1934  01410C  0E00               	movlw	0
  1935  01410E  6EE6               	movwf	postinc1,c
  1936  014110  EC62  F0C6         	call	_set_vterm	;wreg free
  1937                           
  1938                           ; BSR set to: 4
  1939                           ;main.c: 196:    sprintf(get_vterm_ptr(0, 0), " MBMC SOLARMON  ");
  1940  014114  0E66               	movlw	low STR_1
  1941  014116  6EE6               	movwf	postinc1,c
  1942  014118  0EFF               	movlw	high STR_1
  1943  01411A  6EE6               	movwf	postinc1,c
  1944  01411C  0E00               	movlw	0
  1945  01411E  6EE6               	movwf	postinc1,c
  1946  014120  0E00               	movlw	0
  1947  014122  6EE6               	movwf	postinc1,c
  1948  014124  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  1949  014128  0060  F0D7  FFE6   	movff	btemp,postinc1
  1950  01412E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1951  014134  0E04               	movlw	4
  1952  014136  6EE6               	movwf	postinc1,c
  1953  014138  ECDF  F0B8         	call	_sprintf	;wreg free
  1954                           
  1955                           ;main.c: 197:    sprintf(get_vterm_ptr(1, 0), " Version %s   ", "0.91");
  1956  01413C  0ED2               	movlw	low STR_3
  1957  01413E  6EE6               	movwf	postinc1,c
  1958  014140  0EFF               	movlw	high STR_3
  1959  014142  6EE6               	movwf	postinc1,c
  1960  014144  0E97               	movlw	low STR_2
  1961  014146  6EE6               	movwf	postinc1,c
  1962  014148  0EFF               	movlw	high STR_2
  1963  01414A  6EE6               	movwf	postinc1,c
  1964  01414C  0E00               	movlw	0
  1965  01414E  6EE6               	movwf	postinc1,c
  1966  014150  0E01               	movlw	1
  1967  014152  6EE6               	movwf	postinc1,c
  1968  014154  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  1969  014158  0060  F0D7  FFE6   	movff	btemp,postinc1
  1970  01415E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1971  014164  0E06               	movlw	6
  1972  014166  6EE6               	movwf	postinc1,c
  1973  014168  ECDF  F0B8         	call	_sprintf	;wreg free
  1974                           
  1975                           ;main.c: 198:    sprintf(get_vterm_ptr(2, 0), " NSASPOOK       ");
  1976  01416C  0E55               	movlw	low STR_4
  1977  01416E  6EE6               	movwf	postinc1,c
  1978  014170  0EFF               	movlw	high STR_4
  1979  014172  6EE6               	movwf	postinc1,c
  1980  014174  0E00               	movlw	0
  1981  014176  6EE6               	movwf	postinc1,c
  1982  014178  0E02               	movlw	2
  1983  01417A  6EE6               	movwf	postinc1,c
  1984  01417C  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  1985  014180  0060  F0D7  FFE6   	movff	btemp,postinc1
  1986  014186  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  1987  01418C  0E04               	movlw	4
  1988  01418E  6EE6               	movwf	postinc1,c
  1989  014190  ECDF  F0B8         	call	_sprintf	;wreg free
  1990                           
  1991                           ;main.c: 199:    sprintf(get_vterm_ptr(0, 2), " SEQUENCE TEST  ");
  1992  014194  0E77               	movlw	low STR_5
  1993  014196  6EE6               	movwf	postinc1,c
  1994  014198  0EFF               	movlw	high STR_5
  1995  01419A  6EE6               	movwf	postinc1,c
  1996  01419C  0E02               	movlw	2
  1997  01419E  6EE6               	movwf	postinc1,c
  1998  0141A0  0E00               	movlw	0
  1999  0141A2  6EE6               	movwf	postinc1,c
  2000  0141A4  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  2001  0141A8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2002  0141AE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2003  0141B4  0E04               	movlw	4
  2004  0141B6  6EE6               	movwf	postinc1,c
  2005  0141B8  ECDF  F0B8         	call	_sprintf	;wreg free
  2006                           
  2007                           ;main.c: 200:    sprintf(get_vterm_ptr(1, 2), " Version %s   ", "0.91");
  2008  0141BC  0ED2               	movlw	low STR_3
  2009  0141BE  6EE6               	movwf	postinc1,c
  2010  0141C0  0EFF               	movlw	high STR_3
  2011  0141C2  6EE6               	movwf	postinc1,c
  2012  0141C4  0E97               	movlw	low STR_2
  2013  0141C6  6EE6               	movwf	postinc1,c
  2014  0141C8  0EFF               	movlw	high STR_2
  2015  0141CA  6EE6               	movwf	postinc1,c
  2016  0141CC  0E02               	movlw	2
  2017  0141CE  6EE6               	movwf	postinc1,c
  2018  0141D0  0E01               	movlw	1
  2019  0141D2  6EE6               	movwf	postinc1,c
  2020  0141D4  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  2021  0141D8  0060  F0D7  FFE6   	movff	btemp,postinc1
  2022  0141DE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2023  0141E4  0E06               	movlw	6
  2024  0141E6  6EE6               	movwf	postinc1,c
  2025  0141E8  ECDF  F0B8         	call	_sprintf	;wreg free
  2026                           
  2027                           ;main.c: 201:    sprintf(get_vterm_ptr(2, 2), " VTERM #2       ");
  2028  0141EC  0E44               	movlw	low STR_8
  2029  0141EE  6EE6               	movwf	postinc1,c
  2030  0141F0  0EFF               	movlw	high STR_8
  2031  0141F2  6EE6               	movwf	postinc1,c
  2032  0141F4  0E02               	movlw	2
  2033  0141F6  6EE6               	movwf	postinc1,c
  2034  0141F8  0E02               	movlw	2
  2035  0141FA  6EE6               	movwf	postinc1,c
  2036  0141FC  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  2037  014200  0060  F0D7  FFE6   	movff	btemp,postinc1
  2038  014206  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2039  01420C  0E04               	movlw	4
  2040  01420E  6EE6               	movwf	postinc1,c
  2041  014210  ECDF  F0B8         	call	_sprintf	;wreg free
  2042                           
  2043                           ;main.c: 202:    update_lcd(0);
  2044  014214  0E00               	movlw	0
  2045  014216  6EE6               	movwf	postinc1,c
  2046  014218  EC58  F0B8         	call	_update_lcd	;wreg free
  2047                           
  2048                           ;main.c: 203:    WaitMs(3000);
  2049  01421C  0EB8               	movlw	184
  2050  01421E  6EE6               	movwf	postinc1,c
  2051  014220  0E0B               	movlw	11
  2052  014222  6EE6               	movwf	postinc1,c
  2053  014224  EC32  F0C3         	call	_WaitMs	;wreg free
  2054                           
  2055                           ;main.c: 204:    StartTimer(TMR_DISPLAY, 250);
  2056  014228  0EFA               	movlw	250
  2057  01422A  6EE6               	movwf	postinc1,c
  2058  01422C  0E00               	movlw	0
  2059  01422E  6EE6               	movwf	postinc1,c
  2060  014230  0E0A               	movlw	10
  2061  014232  6EE6               	movwf	postinc1,c
  2062  014234  ECDC  F0C2         	call	_StartTimer	;wreg free
  2063                           
  2064                           ;main.c: 205:    StartTimer(TMR_ADC, 500);
  2065  014238  0EF4               	movlw	244
  2066  01423A  6EE6               	movwf	postinc1,c
  2067  01423C  0E01               	movlw	1
  2068  01423E  6EE6               	movwf	postinc1,c
  2069  014240  0E01               	movlw	1
  2070  014242  6EE6               	movwf	postinc1,c
  2071  014244  ECDC  F0C2         	call	_StartTimer	;wreg free
  2072                           
  2073                           ;main.c: 206:    StartTimer(TMR_INFO, 3000);
  2074  014248  0EB8               	movlw	184
  2075  01424A  6EE6               	movwf	postinc1,c
  2076  01424C  0E0B               	movlw	11
  2077  01424E  6EE6               	movwf	postinc1,c
  2078  014250  0E07               	movlw	7
  2079  014252  6EE6               	movwf	postinc1,c
  2080  014254  ECDC  F0C2         	call	_StartTimer	;wreg free
  2081                           
  2082                           ;main.c: 207:    StartTimer(TMR_FLIPPER, 1500);
  2083  014258  0EDC               	movlw	220
  2084  01425A  6EE6               	movwf	postinc1,c
  2085  01425C  0E05               	movlw	5
  2086  01425E  6EE6               	movwf	postinc1,c
  2087  014260  0E0B               	movlw	11
  2088  014262  6EE6               	movwf	postinc1,c
  2089  014264  ECDC  F0C2         	call	_StartTimer	;wreg free
  2090                           
  2091                           ;main.c: 208:    StartTimer(TMR_HELPDIS, 3000);
  2092  014268  0EB8               	movlw	184
  2093  01426A  6EE6               	movwf	postinc1,c
  2094  01426C  0E0B               	movlw	11
  2095  01426E  6EE6               	movwf	postinc1,c
  2096  014270  0E09               	movlw	9
  2097  014272  6EE6               	movwf	postinc1,c
  2098  014274  ECDC  F0C2         	call	_StartTimer	;wreg free
  2099                           
  2100                           ;main.c: 210:    start_adc_scan();
  2101  014278  EC17  F0BF         	call	_start_adc_scan	;wreg free
  2102                           
  2103                           ;main.c: 212:    break;
  2104  01427C  D01C               	goto	l10421
  2105  01427E                     l1250:
  2106                           
  2107                           ; BSR set to: 1
  2108                           ;main.c: 218:    P.SYSTEM_STABLE = 1;
  2109  01427E  0100               	movlb	0	; () banked
  2110  014280  8195               	bsf	(_P+1)& (0+255),0,b	;volatile
  2111                           
  2112                           ;main.c: 219:    break;
  2113  014282  D019               	goto	l10421
  2114  014284                     l1252:
  2115                           
  2116                           ; BSR set to: 1
  2117                           ;main.c: 222:    V.ui_state = UI_STATE_INIT;
  2118  014284  6B00               	clrf	_V& (0+255),b	;volatile
  2119                           
  2120                           ;main.c: 223:    break;
  2121  014286  D017               	goto	l10421
  2122  014288                     l10419:
  2123  014288  0101               	movlb	1	; () banked
  2124  01428A  5100               	movf	_V& (0+255),w,b	;volatile
  2125  01428C  6E3F               	movwf	(btemp+10)^0,c
  2126  01428E  6A40               	clrf	(btemp+11)^0,c
  2127                           
  2128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2129                           ; Switch size 1, requested type "simple"
  2130                           ; Number of cases is 1, Range of values is 0 to 0
  2131                           ; switch strategies available:
  2132                           ; Name         Instructions Cycles
  2133                           ; simple_byte            4     3 (average)
  2134                           ;	Chosen strategy is simple_byte
  2135  014290  5040               	movf	(btemp+11)^0,w,c
  2136  014292  0A00               	xorlw	0	; case 0
  2137  014294  A4D8               	btfss	status,2,c
  2138  014296  D7F6               	goto	l1252
  2139                           
  2140                           ; BSR set to: 1
  2141                           ; Switch size 1, requested type "simple"
  2142                           ; Number of cases is 5, Range of values is 0 to 5
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte           16     9 (average)
  2146                           ;	Chosen strategy is simple_byte
  2147  014298  503F               	movf	(btemp+10)^0,w,c
  2148  01429A  0A00               	xorlw	0	; case 0
  2149  01429C  B4D8               	btfsc	status,2,c
  2150  01429E  D726               	goto	l10379
  2151  0142A0  0A01               	xorlw	1	; case 1
  2152  0142A2  B4D8               	btfsc	status,2,c
  2153  0142A4  D008               	goto	l10421
  2154  0142A6  0A02               	xorlw	2	; case 3
  2155  0142A8  B4D8               	btfsc	status,2,c
  2156  0142AA  D005               	goto	l10421
  2157  0142AC  0A07               	xorlw	7	; case 4
  2158  0142AE  B4D8               	btfsc	status,2,c
  2159  0142B0  D7E6               	goto	l1250
  2160  0142B2  0A01               	xorlw	1	; case 5
  2161  0142B4  D7E7               	goto	l1252
  2162  0142B6                     l10421:
  2163                           
  2164                           ;main.c: 226:   if (TimerDone(TMR_ADC) && check_adc_scan()) {
  2165  0142B6  0E01               	movlw	1
  2166  0142B8  6EE6               	movwf	postinc1,c
  2167  0142BA  ECA3  F0C5         	call	_TimerDone	;wreg free
  2168  0142BE  5035               	movf	btemp^0,w,c
  2169  0142C0  B4D8               	btfsc	status,2,c
  2170  0142C2  D013               	goto	l10433
  2171  0142C4  EC27  F0C7         	call	_check_adc_scan	;wreg free
  2172  0142C8  5035               	movf	btemp^0,w,c
  2173  0142CA  B4D8               	btfsc	status,2,c
  2174  0142CC  D00E               	goto	l10433
  2175                           
  2176                           ;main.c: 230:    convert_adc_data();
  2177  0142CE  ECA5  F0BE         	call	_convert_adc_data	;wreg free
  2178                           
  2179                           ;main.c: 234:    clear_adc_scan();
  2180  0142D2  EC2F  F0C7         	call	_clear_adc_scan	;wreg free
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;main.c: 235:    start_adc_scan();
  2184  0142D6  EC17  F0BF         	call	_start_adc_scan	;wreg free
  2185                           
  2186                           ;main.c: 236:    StartTimer(TMR_ADC, 500);
  2187  0142DA  0EF4               	movlw	244
  2188  0142DC  6EE6               	movwf	postinc1,c
  2189  0142DE  0E01               	movlw	1
  2190  0142E0  6EE6               	movwf	postinc1,c
  2191  0142E2  0E01               	movlw	1
  2192  0142E4  6EE6               	movwf	postinc1,c
  2193  0142E6  ECDC  F0C2         	call	_StartTimer	;wreg free
  2194  0142EA                     l10433:
  2195                           
  2196                           ;main.c: 243:   if (TimerDone(TMR_DISPLAY)) {
  2197                           
  2198                           ;main.c: 239:   if (V.ticks) {
  2199  0142EA  0E0A               	movlw	10
  2200  0142EC  6EE6               	movwf	postinc1,c
  2201  0142EE  ECA3  F0C5         	call	_TimerDone	;wreg free
  2202  0142F2  5035               	movf	btemp^0,w,c
  2203  0142F4  B4D8               	btfsc	status,2,c
  2204  0142F6  D0A1               	goto	l10451
  2205                           
  2206                           ;main.c: 244:    if (TimerDone(TMR_HELPDIS)) {
  2207  0142F8  0E09               	movlw	9
  2208  0142FA  6EE6               	movwf	postinc1,c
  2209  0142FC  ECA3  F0C5         	call	_TimerDone	;wreg free
  2210  014300  5035               	movf	btemp^0,w,c
  2211  014302  B4D8               	btfsc	status,2,c
  2212  014304  D004               	goto	l10441
  2213                           
  2214                           ;main.c: 245:     set_display_info(DIS_STR);
  2215  014306  0E00               	movlw	0
  2216  014308  6EE6               	movwf	postinc1,c
  2217  01430A  EC18  F0C6         	call	_set_display_info	;wreg free
  2218  01430E                     l10441:
  2219                           
  2220                           ;main.c: 247:    sprintf(get_vterm_ptr(0, 0), "%d %2.2f   #", get_raw_result(C_BATT), C.
      +                          calc[C_BATT]);
  2221  01430E  0060  F803  FFE6   	movff	_C,postinc1
  2222  014314  0060  F807  FFE6   	movff	_C+1,postinc1
  2223  01431A  0060  F80B  FFE6   	movff	_C+2,postinc1
  2224  014320  0060  F80F  FFE6   	movff	_C+3,postinc1
  2225  014326  0E00               	movlw	0
  2226  014328  6EE6               	movwf	postinc1,c
  2227  01432A  EC09  F0C6         	call	_get_raw_result	;wreg free
  2228  01432E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2229  014334  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2230  01433A  0EA6               	movlw	low STR_9
  2231  01433C  6EE6               	movwf	postinc1,c
  2232  01433E  0EFF               	movlw	high STR_9
  2233  014340  6EE6               	movwf	postinc1,c
  2234  014342  0E00               	movlw	0
  2235  014344  6EE6               	movwf	postinc1,c
  2236  014346  0E00               	movlw	0
  2237  014348  6EE6               	movwf	postinc1,c
  2238  01434A  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  2239  01434E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2240  014354  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2241  01435A  0E0A               	movlw	10
  2242  01435C  6EE6               	movwf	postinc1,c
  2243  01435E  ECDF  F0B8         	call	_sprintf	;wreg free
  2244                           
  2245                           ;main.c: 248:    sprintf(get_vterm_ptr(1, 0), "%d %2.2f   #", get_raw_result(C_PV), C.ca
      +                          lc[C_PV]);
  2246  014362  0060  F813  FFE6   	movff	_C+4,postinc1
  2247  014368  0060  F817  FFE6   	movff	_C+5,postinc1
  2248  01436E  0060  F81B  FFE6   	movff	_C+6,postinc1
  2249  014374  0060  F81F  FFE6   	movff	_C+7,postinc1
  2250  01437A  0E01               	movlw	1
  2251  01437C  6EE6               	movwf	postinc1,c
  2252  01437E  EC09  F0C6         	call	_get_raw_result	;wreg free
  2253  014382  0060  F0D7  FFE6   	movff	btemp,postinc1
  2254  014388  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2255  01438E  0EA6               	movlw	low STR_9
  2256  014390  6EE6               	movwf	postinc1,c
  2257  014392  0EFF               	movlw	high STR_9
  2258  014394  6EE6               	movwf	postinc1,c
  2259  014396  0E00               	movlw	0
  2260  014398  6EE6               	movwf	postinc1,c
  2261  01439A  0E01               	movlw	1
  2262  01439C  6EE6               	movwf	postinc1,c
  2263  01439E  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  2264  0143A2  0060  F0D7  FFE6   	movff	btemp,postinc1
  2265  0143A8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2266  0143AE  0E0A               	movlw	10
  2267  0143B0  6EE6               	movwf	postinc1,c
  2268  0143B2  ECDF  F0B8         	call	_sprintf	;wreg free
  2269                           
  2270                           ;main.c: 249:    sprintf(get_vterm_ptr(2, 0), "%d %2.2f, %lu   #", get_raw_result(V_CC),
      +                           C.calc[V_CC], V.timerint_count);
  2271  0143B6  0060  F6DF  FFE6   	movff	_V+183,postinc1
  2272  0143BC  0060  F6E3  FFE6   	movff	_V+184,postinc1
  2273  0143C2  0060  F6E7  FFE6   	movff	_V+185,postinc1
  2274  0143C8  0060  F6EB  FFE6   	movff	_V+186,postinc1
  2275  0143CE  0060  F823  FFE6   	movff	_C+8,postinc1
  2276  0143D4  0060  F827  FFE6   	movff	_C+9,postinc1
  2277  0143DA  0060  F82B  FFE6   	movff	_C+10,postinc1
  2278  0143E0  0060  F82F  FFE6   	movff	_C+11,postinc1
  2279  0143E6  0E02               	movlw	2
  2280  0143E8  6EE6               	movwf	postinc1,c
  2281  0143EA  EC09  F0C6         	call	_get_raw_result	;wreg free
  2282  0143EE  0060  F0D7  FFE6   	movff	btemp,postinc1
  2283  0143F4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2284  0143FA  0E32               	movlw	low STR_11
  2285  0143FC  6EE6               	movwf	postinc1,c
  2286  0143FE  0EFF               	movlw	high STR_11
  2287  014400  6EE6               	movwf	postinc1,c
  2288  014402  0E00               	movlw	0
  2289  014404  6EE6               	movwf	postinc1,c
  2290  014406  0E02               	movlw	2
  2291  014408  6EE6               	movwf	postinc1,c
  2292  01440A  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  2293  01440E  0060  F0D7  FFE6   	movff	btemp,postinc1
  2294  014414  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  2295  01441A  0E0E               	movlw	14
  2296  01441C  6EE6               	movwf	postinc1,c
  2297  01441E  ECDF  F0B8         	call	_sprintf	;wreg free
  2298                           
  2299                           ;main.c: 250:    StartTimer(TMR_DISPLAY, 250);
  2300  014422  0EFA               	movlw	250
  2301  014424  6EE6               	movwf	postinc1,c
  2302  014426  0E00               	movlw	0
  2303  014428  6EE6               	movwf	postinc1,c
  2304  01442A  0E0A               	movlw	10
  2305  01442C  6EE6               	movwf	postinc1,c
  2306  01442E  ECDC  F0C2         	call	_StartTimer	;wreg free
  2307                           
  2308                           ;main.c: 251:    update_lcd(0);
  2309  014432  0E00               	movlw	0
  2310  014434  6EE6               	movwf	postinc1,c
  2311  014436  EC58  F0B8         	call	_update_lcd	;wreg free
  2312  01443A                     l10451:
  2313                           
  2314                           ;main.c: 257:   check_help(V.flipper);
  2315  01443A  0101               	movlb	1	; () banked
  2316  01443C  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  2317  01443E  6EE6               	movwf	postinc1,c
  2318  014440  ECF2  F0AE         	call	_check_help	;wreg free
  2319                           
  2320                           ;main.c: 262:   if (V.set_sequ) {
  2321  014444  0101               	movlb	1	; () banked
  2322  014446  A19B               	btfss	(_V+155)& (0+255),0,b	;volatile
  2323  014448  D71F               	goto	l10419
  2324                           
  2325                           ; BSR set to: 1
  2326                           ;main.c: 263:    if (TimerDone(TMR_INFO)) {
  2327  01444A  0E07               	movlw	7
  2328  01444C  6EE6               	movwf	postinc1,c
  2329  01444E  ECA3  F0C5         	call	_TimerDone	;wreg free
  2330  014452  5035               	movf	btemp^0,w,c
  2331  014454  B4D8               	btfsc	status,2,c
  2332  014456  D00B               	goto	l10463
  2333                           
  2334                           ;main.c: 264:     V.set_sequ = 0;
  2335  014458  0101               	movlb	1	; () banked
  2336  01445A  919B               	bcf	(_V+155)& (0+255),0,b	;volatile
  2337                           
  2338                           ; BSR set to: 1
  2339                           ;main.c: 265:     set_vterm(0);
  2340  01445C  0E00               	movlw	0
  2341  01445E  6EE6               	movwf	postinc1,c
  2342  014460  EC62  F0C6         	call	_set_vterm	;wreg free
  2343                           
  2344                           ; BSR set to: 4
  2345                           ;main.c: 266:     update_lcd(0);
  2346  014464  0E00               	movlw	0
  2347  014466  6EE6               	movwf	postinc1,c
  2348  014468  EC58  F0B8         	call	_update_lcd	;wreg free
  2349                           
  2350                           ;main.c: 267:    } else {
  2351  01446C  D70D               	goto	l10419
  2352  01446E                     l10463:
  2353                           
  2354                           ;main.c: 268:     set_vterm(2);
  2355  01446E  0E02               	movlw	2
  2356  014470  6EE6               	movwf	postinc1,c
  2357  014472  EC62  F0C6         	call	_set_vterm	;wreg free
  2358                           
  2359                           ; BSR set to: 4
  2360                           ;main.c: 269:     update_lcd(2);
  2361  014476  0E02               	movlw	2
  2362  014478  6EE6               	movwf	postinc1,c
  2363  01447A  EC58  F0B8         	call	_update_lcd	;wreg free
  2364  01447E  D704               	goto	l10419
  2365  014480                     __end_of_main:
  2366                           	opt callstack 0
  2367                           
  2368 ;; *************** function _start_adc_scan *****************
  2369 ;; Defined at:
  2370 ;;		line 33 in file "daq.c"
  2371 ;; Parameters:    Size  Location     Type
  2372 ;;		None
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;		None
  2375 ;; Return value:  Size  Location     Type
  2376 ;;                  1  [STACK] _Bool 
  2377 ;; Registers used:
  2378 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
  2379 ;; Tracked objects:
  2380 ;;		On entry : 0/4
  2381 ;;		On exit  : 1/0
  2382 ;;		Unchanged: 0/0
  2383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2388 ;;Total ram usage:        0 bytes
  2389 ;; Hardware stack levels used:    1
  2390 ;; Hardware stack levels required when called:    7
  2391 ;; This function calls:
  2392 ;;		_ADCC_DischargeSampleCapacitor
  2393 ;;		_ADCC_SetADIInterruptHandler
  2394 ;;		_ADCC_SetADTIInterruptHandler
  2395 ;;		_ADCC_StartConversion
  2396 ;; This function is called by:
  2397 ;;		_main
  2398 ;; This function uses a reentrant model
  2399 ;;
  2400                           
  2401                           	psect	text1
  2402  017E2E                     __ptext1:
  2403                           	opt callstack 0
  2404  017E2E                     _start_adc_scan:
  2405                           	opt callstack 23
  2406                           
  2407                           ;daq.c: 35:  if (R.done)
  2408                           
  2409                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2410                           ;incstack = 0
  2411  017E2E  0100               	movlb	0	; () banked
  2412  017E30  51CE               	movf	(_R+43)& (0+255),w,b	;volatile
  2413  017E32  A4D8               	btfss	status,2,c
  2414  017E34  0012               	return	
  2415                           
  2416                           ; BSR set to: 0
  2417                           ;daq.c: 38:  R.scan_index = 0;
  2418  017E36  6BCB               	clrf	(_R+40)& (0+255),b	;volatile
  2419                           
  2420                           ; BSR set to: 0
  2421                           ;daq.c: 39:  R.scan_select = (uint16_t) ((ANSELB << 8) + ANSELA) & 0b0011110001110111;
  2422  017E38  013A               	movlb	58	; () banked
  2423  017E3A  5140               	movf	64,w,b	;volatile
  2424  017E3C  006E F940  F035    	movff	14928,btemp	;volatile
  2425  017E42  6A36               	clrf	(btemp+1)^0,c
  2426  017E44  0060  F0D4  F036   	movff	btemp,btemp+1
  2427  017E4A  6A35               	clrf	btemp^0,c
  2428  017E4C  2635               	addwf	btemp^0,f,c
  2429  017E4E  0E00               	movlw	0
  2430  017E50  2236               	addwfc	(btemp+1)^0,f,c
  2431  017E52  0E77               	movlw	119
  2432  017E54  1435               	andwf	btemp^0,w,c
  2433  017E56  0100               	movlb	0	; () banked
  2434  017E58  6FCC               	movwf	(_R+41)& (0+255),b	;volatile
  2435  017E5A  0E3C               	movlw	60
  2436  017E5C  1436               	andwf	(btemp+1)^0,w,c
  2437  017E5E  6FCD               	movwf	(_R+42)& (0+255),b	;volatile
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;daq.c: 40:  ADCC_SetADIInterruptHandler(adc_int_handler);
  2441  017E60  0E4E               	movlw	low _adc_int_handler
  2442  017E62  6EE6               	movwf	postinc1,c
  2443  017E64  0E8C               	movlw	high _adc_int_handler
  2444  017E66  6EE6               	movwf	postinc1,c
  2445  017E68  0E01               	movlw	low (_adc_int_handler shr (0+16))
  2446  017E6A  6EE6               	movwf	postinc1,c
  2447  017E6C  EC2C  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
  2448                           
  2449                           ;daq.c: 41:  ADCC_SetADTIInterruptHandler(adc_int_t_handler);
  2450  017E70  0E66               	movlw	low _adc_int_t_handler
  2451  017E72  6EE6               	movwf	postinc1,c
  2452  017E74  0E79               	movlw	high _adc_int_t_handler
  2453  017E76  6EE6               	movwf	postinc1,c
  2454  017E78  0E01               	movlw	low (_adc_int_t_handler shr (0+16))
  2455  017E7A  6EE6               	movwf	postinc1,c
  2456  017E7C  EC18  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
  2457                           
  2458                           ;daq.c: 42:  ADCC_DischargeSampleCapacitor();
  2459  017E80  EC1B  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
  2460                           
  2461                           ; BSR set to: 62
  2462                           ;daq.c: 43:  ADCC_StartConversion(R.scan_index & 0xf);
  2463  017E84  0100               	movlb	0	; () banked
  2464  017E86  51CB               	movf	(_R+40)& (0+255),w,b	;volatile
  2465  017E88  0B0F               	andlw	15
  2466  017E8A  6EE6               	movwf	postinc1,c
  2467  017E8C  ECCE  F0C6         	call	_ADCC_StartConversion	;wreg free
  2468                           
  2469                           ; BSR set to: 62
  2470  017E90  82BE               	bsf	190,1,c	;volatile
  2471                           
  2472                           ; BSR set to: 62
  2473  017E92  84BE               	bsf	190,2,c	;volatile
  2474                           
  2475                           ; _start_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  2476  017E94  0012               	return		;funcret
  2477  017E96                     __end_of_start_adc_scan:
  2478                           	opt callstack 0
  2479                           
  2480 ;; *************** function _ADCC_StartConversion *****************
  2481 ;; Defined at:
  2482 ;;		line 128 in file "mcc_generated_files/adcc.c"
  2483 ;; Parameters:    Size  Location     Type
  2484 ;;  channel         1  [STACK] enum E16136
  2485 ;; Auto vars:     Size  Location     Type
  2486 ;;		None
  2487 ;; Return value:  Size  Location     Type
  2488 ;;                  1  [STACK] void 
  2489 ;; Registers used:
  2490 ;;		fsr1l, fsr1h
  2491 ;; Tracked objects:
  2492 ;;		On entry : 3F/0
  2493 ;;		On exit  : 3F/3E
  2494 ;;		Unchanged: 0/0
  2495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2497 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2499 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2500 ;;Total ram usage:        0 bytes
  2501 ;; Hardware stack levels used:    1
  2502 ;; Hardware stack levels required when called:    6
  2503 ;; This function calls:
  2504 ;;		Nothing
  2505 ;; This function is called by:
  2506 ;;		_start_adc_scan
  2507 ;;		_adc_int_t_handler
  2508 ;; This function uses a reentrant model
  2509 ;;
  2510                           
  2511                           	psect	text2
  2512  018D9C                     __ptext2:
  2513                           	opt callstack 0
  2514  018D9C                     _ADCC_StartConversion:
  2515                           	opt callstack 6
  2516                           
  2517                           ;mcc_generated_files/adcc.c: 128: void ADCC_StartConversion(adcc_channel_t channel);mcc_
      +                          generated_files/adcc.c: 129: {;mcc_generated_files/adcc.c: 131:     ADPCH = channel;
  2518                           ;stkvar	_channel @ sp[(0)+-1]
  2519                           
  2520                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2521                           ;incstack = 0
  2522  018D9C  0EFF               	movlw	-1
  2523  018D9E  006F FF8F FEF1     	movff	plusw1,16113	;volatile
  2524                           
  2525                           ;mcc_generated_files/adcc.c: 134:     ADCON0bits.ADON = 1;
  2526  018DA4  013E               	movlb	62	; () banked
  2527  018DA6  8FF8               	bsf	248,7,b	;volatile
  2528                           
  2529                           ; BSR set to: 62
  2530                           ;mcc_generated_files/adcc.c: 137:     ADCON0bits.ADGO = 1;
  2531  018DA8  81F8               	bsf	248,0,b	;volatile
  2532                           
  2533                           ; BSR set to: 62
  2534                           ; _ADCC_StartConversion: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 1, argsize = 1, vargsize = 0
  2535  018DAA  52E5               	movf	postdec1,f,c
  2536  018DAC  0012               	return		;funcret
  2537  018DAE                     __end_of_ADCC_StartConversion:
  2538                           	opt callstack 0
  2539                           
  2540 ;; *************** function _ADCC_DischargeSampleCapacitor *****************
  2541 ;; Defined at:
  2542 ;;		line 189 in file "mcc_generated_files/adcc.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;		None
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;                  1  [STACK] void 
  2549 ;; Registers used:
  2550 ;;		wreg, status,2
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 3F/3E
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2557 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2559 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2560 ;;Total ram usage:        0 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:    6
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_start_adc_scan
  2567 ;;		_adc_int_t_handler
  2568 ;; This function uses a reentrant model
  2569 ;;
  2570                           
  2571                           	psect	text3
  2572  018E36                     __ptext3:
  2573                           	opt callstack 0
  2574  018E36                     _ADCC_DischargeSampleCapacitor:
  2575                           	opt callstack 6
  2576                           
  2577                           ;mcc_generated_files/adcc.c: 192:     ADPCH = 0x3b;
  2578                           
  2579                           ; BSR set to: 62
  2580                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2581                           ;incstack = 0
  2582  018E36  0E3B               	movlw	59
  2583  018E38  013E               	movlb	62	; () banked
  2584  018E3A  6FF1               	movwf	241,b	;volatile
  2585                           
  2586                           ; BSR set to: 62
  2587                           ; _ADCC_DischargeSampleCapacitor: autosize = 0, savesize = 0, parsavesize = 0, tempsize 
      +                          = 0 parsize = 0, argsize = 0, vargsize = 0
  2588  018E3C  0012               	return		;funcret
  2589  018E3E                     __end_of_ADCC_DischargeSampleCapacitor:
  2590                           	opt callstack 0
  2591                           
  2592 ;; *************** function _srand *****************
  2593 ;; Defined at:
  2594 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/rand.c"
  2595 ;; Parameters:    Size  Location     Type
  2596 ;;  s               2  [STACK] unsigned int 
  2597 ;; Auto vars:     Size  Location     Type
  2598 ;;		None
  2599 ;; Return value:  Size  Location     Type
  2600 ;;                  1  [STACK] void 
  2601 ;; Registers used:
  2602 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+10, btemp+11
  2603 ;; Tracked objects:
  2604 ;;		On entry : 3F/0
  2605 ;;		On exit  : 3F/0
  2606 ;;		Unchanged: 0/0
  2607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2608 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2611 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2612 ;;Total ram usage:        0 bytes
  2613 ;; Hardware stack levels used:    1
  2614 ;; Hardware stack levels required when called:    6
  2615 ;; This function calls:
  2616 ;;		Nothing
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text4
  2623  0186D0                     __ptext4:
  2624                           	opt callstack 0
  2625  0186D0                     _srand:
  2626                           	opt callstack 24
  2627                           
  2628                           ;stkvar	_s @ sp[(0)+-2]
  2629                           
  2630                           ; BSR set to: 62
  2631                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2632                           ;incstack = 0
  2633  0186D0  0EFE               	movlw	-2
  2634  0186D2  50E3               	movf	plusw1,w,c
  2635  0186D4  0FFF               	addlw	255
  2636  0186D6  6E3F               	movwf	(btemp+10)^0,c
  2637  0186D8  0EFF               	movlw	-1
  2638  0186DA  006F FF8C  F040    	movff	plusw1,btemp+11
  2639  0186E0  0EFF               	movlw	255
  2640  0186E2  2240               	addwfc	(btemp+11)^0,f,c
  2641  0186E4  0060  F0FC  F09B   	movff	btemp+10,_seed
  2642  0186EA  0060  F100  F09C   	movff	btemp+11,_seed+1
  2643  0186F0  0100               	movlb	0	; () banked
  2644  0186F2  6B9D               	clrf	(_seed+2)& (0+255),b
  2645  0186F4  6B9E               	clrf	(_seed+3)& (0+255),b
  2646  0186F6  6B9F               	clrf	(_seed+4)& (0+255),b
  2647  0186F8  6BA0               	clrf	(_seed+5)& (0+255),b
  2648  0186FA  6BA1               	clrf	(_seed+6)& (0+255),b
  2649  0186FC  6BA2               	clrf	(_seed+7)& (0+255),b
  2650                           
  2651                           ; BSR set to: 0
  2652                           ; _srand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize
      +                           = 2, vargsize = 0
  2653  0186FE  52E5               	movf	postdec1,f,c
  2654  018700  52E5               	movf	postdec1,f,c
  2655  018702  0012               	return		;funcret
  2656  018704                     __end_of_srand:
  2657                           	opt callstack 0
  2658                           
  2659 ;; *************** function _init_display *****************
  2660 ;; Defined at:
  2661 ;;		line 37 in file "eadog.c"
  2662 ;; Parameters:    Size  Location     Type
  2663 ;;		None
  2664 ;; Auto vars:     Size  Location     Type
  2665 ;;		None
  2666 ;; Return value:  Size  Location     Type
  2667 ;;                  1  [STACK] void 
  2668 ;; Registers used:
  2669 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  2670 ;; Tracked objects:
  2671 ;;		On entry : 0/1
  2672 ;;		On exit  : 3F/3D
  2673 ;;		Unchanged: 0/0
  2674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2679 ;;Total ram usage:        0 bytes
  2680 ;; Hardware stack levels used:    1
  2681 ;; Hardware stack levels required when called:    8
  2682 ;; This function calls:
  2683 ;;		_ringBufS_init
  2684 ;;		_send_lcd_cmd
  2685 ;;		_send_lcd_cmd_long
  2686 ;;		_wdtdelay
  2687 ;; This function is called by:
  2688 ;;		_main
  2689 ;; This function uses a reentrant model
  2690 ;;
  2691                           
  2692                           	psect	text5
  2693  0172C8                     __ptext5:
  2694                           	opt callstack 0
  2695  0172C8                     _init_display:
  2696                           	opt callstack 22
  2697                           
  2698                           ;eadog.c: 39:  spi_link.tx1a = &ring_buf1;
  2699                           
  2700                           ; BSR set to: 0
  2701                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2702                           ;incstack = 0
  2703  0172C8  0E83               	movlw	low _ring_buf1
  2704  0172CA  0100               	movlb	0	; () banked
  2705  0172CC  6F7E               	movwf	(_spi_link+6)& (0+255),b	;volatile
  2706  0172CE  0E03               	movlw	high _ring_buf1
  2707  0172D0  6F7F               	movwf	(_spi_link+7)& (0+255),b	;volatile
  2708                           
  2709                           ;eadog.c: 40:  spi_link.tx1b = &ring_buf2;
  2710  0172D2  0E40               	movlw	low _ring_buf2
  2711  0172D4  6F7C               	movwf	(_spi_link+4)& (0+255),b	;volatile
  2712  0172D6  0E03               	movlw	high _ring_buf2
  2713  0172D8  6F7D               	movwf	(_spi_link+5)& (0+255),b	;volatile
  2714                           
  2715                           ; BSR set to: 0
  2716                           ;eadog.c: 41:  ringBufS_init(spi_link.tx1a);
  2717  0172DA  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  2718  0172E0  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  2719  0172E6  EC64  F0C4         	call	_ringBufS_init	;wreg free
  2720                           
  2721                           ;eadog.c: 42:  ringBufS_init(spi_link.tx1b);
  2722  0172EA  0060  F1F3  FFE6   	movff	_spi_link+4,postinc1
  2723  0172F0  0060  F1F7  FFE6   	movff	_spi_link+5,postinc1
  2724  0172F6  EC64  F0C4         	call	_ringBufS_init	;wreg free
  2725                           
  2726                           ;eadog.c: 44:  LATEbits.LATE2 = 1;
  2727  0172FA  84BE               	bsf	190,2,c	;volatile
  2728  0172FC  84BC               	bsf	188,2,c	;volatile
  2729                           
  2730                           ;eadog.c: 46:  wdtdelay(350000);
  2731  0172FE  0E30               	movlw	48
  2732  017300  6EE6               	movwf	postinc1,c
  2733  017302  0E57               	movlw	87
  2734  017304  6EE6               	movwf	postinc1,c
  2735  017306  0E05               	movlw	5
  2736  017308  6EE6               	movwf	postinc1,c
  2737  01730A  0E00               	movlw	0
  2738  01730C  6EE6               	movwf	postinc1,c
  2739  01730E  ECD8  F0C0         	call	_wdtdelay	;wreg free
  2740                           
  2741                           ; BSR set to: 0
  2742                           ;eadog.c: 47:  send_lcd_cmd(0x39);
  2743  017312  0E39               	movlw	57
  2744  017314  6EE6               	movwf	postinc1,c
  2745  017316  EC50  F0C4         	call	_send_lcd_cmd	;wreg free
  2746                           
  2747                           ; BSR set to: 0
  2748                           ;eadog.c: 48:  send_lcd_cmd(0x1d);
  2749  01731A  0E1D               	movlw	29
  2750  01731C  6EE6               	movwf	postinc1,c
  2751  01731E  EC50  F0C4         	call	_send_lcd_cmd	;wreg free
  2752                           
  2753                           ; BSR set to: 0
  2754                           ;eadog.c: 49:  send_lcd_cmd(0x50);
  2755  017322  0E50               	movlw	80
  2756  017324  6EE6               	movwf	postinc1,c
  2757  017326  EC50  F0C4         	call	_send_lcd_cmd	;wreg free
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;eadog.c: 50:  send_lcd_cmd(0x6c);
  2761  01732A  0E6C               	movlw	108
  2762  01732C  6EE6               	movwf	postinc1,c
  2763  01732E  EC50  F0C4         	call	_send_lcd_cmd	;wreg free
  2764                           
  2765                           ; BSR set to: 0
  2766                           ;eadog.c: 51:  send_lcd_cmd(0x76);
  2767  017332  0E76               	movlw	118
  2768  017334  6EE6               	movwf	postinc1,c
  2769  017336  EC50  F0C4         	call	_send_lcd_cmd	;wreg free
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;eadog.c: 52:  send_lcd_cmd_long(0x38);
  2773  01733A  0E38               	movlw	56
  2774  01733C  6EE6               	movwf	postinc1,c
  2775  01733E  EC3C  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2776                           
  2777                           ; BSR set to: 0
  2778                           ;eadog.c: 53:  send_lcd_cmd(0x0f);
  2779  017342  0E0F               	movlw	15
  2780  017344  6EE6               	movwf	postinc1,c
  2781  017346  EC50  F0C4         	call	_send_lcd_cmd	;wreg free
  2782                           
  2783                           ; BSR set to: 0
  2784                           ;eadog.c: 54:  send_lcd_cmd_long(0x01);
  2785  01734A  0E01               	movlw	1
  2786  01734C  6EE6               	movwf	postinc1,c
  2787  01734E  EC3C  F0C4         	call	_send_lcd_cmd_long	;wreg free
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;eadog.c: 55:  send_lcd_cmd(0x02);
  2791  017352  0E02               	movlw	2
  2792  017354  6EE6               	movwf	postinc1,c
  2793  017356  EC50  F0C4         	call	_send_lcd_cmd	;wreg free
  2794                           
  2795                           ; BSR set to: 0
  2796                           ;eadog.c: 56:  send_lcd_cmd(0x06);
  2797  01735A  0E06               	movlw	6
  2798  01735C  6EE6               	movwf	postinc1,c
  2799  01735E  EC50  F0C4         	call	_send_lcd_cmd	;wreg free
  2800                           
  2801                           ; BSR set to: 0
  2802                           ;eadog.c: 57:  wdtdelay(30);
  2803  017362  0E1E               	movlw	30
  2804  017364  6EE6               	movwf	postinc1,c
  2805  017366  0E00               	movlw	0
  2806  017368  6EE6               	movwf	postinc1,c
  2807  01736A  0E00               	movlw	0
  2808  01736C  6EE6               	movwf	postinc1,c
  2809  01736E  0E00               	movlw	0
  2810  017370  6EE6               	movwf	postinc1,c
  2811  017372  ECD8  F0C0         	call	_wdtdelay	;wreg free
  2812                           
  2813                           ; BSR set to: 0
  2814                           ;eadog.c: 58:  SPI1CON2 = 0x02;
  2815  017376  0E02               	movlw	2
  2816  017378  013D               	movlb	61	; () banked
  2817  01737A  6F16               	movwf	22,b	;volatile
  2818                           
  2819                           ; BSR set to: 61
  2820                           ;eadog.c: 59:  SPI1CON1 = 0x40;
  2821  01737C  0E40               	movlw	64
  2822  01737E  6F15               	movwf	21,b	;volatile
  2823                           
  2824                           ; BSR set to: 61
  2825                           ;eadog.c: 60:  SPI1CON0 = 0x83;
  2826  017380  0E83               	movlw	131
  2827  017382  6F14               	movwf	20,b	;volatile
  2828                           
  2829                           ; BSR set to: 61
  2830                           ;eadog.c: 61:  SPI1INTFbits.SPI1TXUIF = 0;
  2831  017384  931A               	bcf	26,1,b	;volatile
  2832                           
  2833                           ; BSR set to: 61
  2834                           ;eadog.c: 62:  DMA1CON1bits.DMODE = 0;
  2835  017386  0E3F               	movlw	-193
  2836  017388  013B               	movlb	59	; () banked
  2837  01738A  17FD               	andwf	253,f,b	;volatile
  2838                           
  2839                           ; BSR set to: 59
  2840                           ;eadog.c: 63:  DMA1CON1bits.DSTP = 0;
  2841  01738C  9BFD               	bcf	253,5,b	;volatile
  2842                           
  2843                           ; BSR set to: 59
  2844                           ;eadog.c: 64:  DMA1CON1bits.SMODE = 1;
  2845  01738E  51FD               	movf	253,w,b	;volatile
  2846  017390  0BF9               	andlw	-7
  2847  017392  0902               	iorlw	2
  2848  017394  6FFD               	movwf	253,b	;volatile
  2849                           
  2850                           ; BSR set to: 59
  2851                           ;eadog.c: 65:  DMA1CON1bits.SMR = 0;
  2852  017396  0EE7               	movlw	-25
  2853  017398  17FD               	andwf	253,f,b	;volatile
  2854                           
  2855                           ; BSR set to: 59
  2856                           ;eadog.c: 66:  DMA1CON1bits.SSTP = 1;
  2857  01739A  81FD               	bsf	253,0,b	;volatile
  2858                           
  2859                           ; BSR set to: 59
  2860                           ;eadog.c: 67:  DMA1SSA = (uint32_t) & ring_buf1;
  2861  01739C  0E83               	movlw	low _ring_buf1
  2862  01739E  6FF9               	movwf	249,b	;volatile
  2863  0173A0  0E03               	movlw	high _ring_buf1
  2864  0173A2  6FFA               	movwf	250,b	;volatile
  2865  0173A4  0E00               	movlw	low (_ring_buf1 shr (0+16))
  2866  0173A6  6FFB               	movwf	251,b	;volatile
  2867                           
  2868                           ; BSR set to: 59
  2869                           ;eadog.c: 68:  DMA1CON0bits.DGO = 0;
  2870  0173A8  9BFC               	bcf	252,5,b	;volatile
  2871                           
  2872                           ; BSR set to: 59
  2873                           ;eadog.c: 69:  SPI1INTFbits.SPI1TXUIF = 1;
  2874  0173AA  013D               	movlb	61	; () banked
  2875  0173AC  831A               	bsf	26,1,b	;volatile
  2876                           
  2877                           ; BSR set to: 61
  2878                           ;eadog.c: 70:  LATEbits.LATE2 = 0;
  2879  0173AE  94BE               	bcf	190,2,c	;volatile
  2880                           
  2881                           ; BSR set to: 61
  2882                           ; _init_display: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  2883  0173B0  0012               	return		;funcret
  2884  0173B2                     __end_of_init_display:
  2885                           	opt callstack 0
  2886                           
  2887 ;; *************** function _send_lcd_cmd_long *****************
  2888 ;; Defined at:
  2889 ;;		line 114 in file "eadog.c"
  2890 ;; Parameters:    Size  Location     Type
  2891 ;;  cmd             1  [STACK] const unsigned char 
  2892 ;; Auto vars:     Size  Location     Type
  2893 ;;		None
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  1  [STACK] void 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2898 ;; Tracked objects:
  2899 ;;		On entry : 3F/0
  2900 ;;		On exit  : 3F/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2904 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2906 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2907 ;;Total ram usage:        0 bytes
  2908 ;; Hardware stack levels used:    1
  2909 ;; Hardware stack levels required when called:    7
  2910 ;; This function calls:
  2911 ;;		_SPI1_Exchange8bit
  2912 ;;		_wdtdelay
  2913 ;; This function is called by:
  2914 ;;		_init_display
  2915 ;; This function uses a reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text6
  2919  018878                     __ptext6:
  2920                           	opt callstack 0
  2921  018878                     _send_lcd_cmd_long:
  2922                           	opt callstack 22
  2923                           
  2924                           ; BSR set to: 61
  2925                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  2926                           ;incstack = 0
  2927                           ;eadog.c: 114: static void send_lcd_cmd_long(const uint8_t cmd);eadog.c: 115: {;eadog.c:
      +                           116:  do { LATCbits.LATC1 = 0; } while(0);
  2928  018878  92BC               	bcf	188,1,c	;volatile
  2929                           
  2930                           ;eadog.c: 117:  do { LATCbits.LATC2 = 0; } while(0);
  2931  01887A  94BC               	bcf	188,2,c	;volatile
  2932                           
  2933                           ;eadog.c: 118:  SPI1_Exchange8bit(cmd);
  2934                           ;stkvar	_cmd @ sp[(0)+-1]
  2935  01887C  0EFF               	movlw	-1
  2936  01887E  50E3               	movf	plusw1,w,c
  2937  018880  6EE6               	movwf	postinc1,c
  2938  018882  ECFA  F0C5         	call	_SPI1_Exchange8bit	;wreg free
  2939                           
  2940                           ; BSR set to: 57
  2941                           ;eadog.c: 119:  wdtdelay(800);
  2942  018886  0E20               	movlw	32
  2943  018888  6EE6               	movwf	postinc1,c
  2944  01888A  0E03               	movlw	3
  2945  01888C  6EE6               	movwf	postinc1,c
  2946  01888E  0E00               	movlw	0
  2947  018890  6EE6               	movwf	postinc1,c
  2948  018892  0E00               	movlw	0
  2949  018894  6EE6               	movwf	postinc1,c
  2950  018896  ECD8  F0C0         	call	_wdtdelay	;wreg free
  2951                           
  2952                           ; BSR set to: 0
  2953  01889A  82BC               	bsf	188,1,c	;volatile
  2954                           
  2955                           ; BSR set to: 0
  2956                           ; _send_lcd_cmd_long: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  2957  01889C  52E5               	movf	postdec1,f,c
  2958  01889E  0012               	return		;funcret
  2959  0188A0                     __end_of_send_lcd_cmd_long:
  2960                           	opt callstack 0
  2961                           
  2962 ;; *************** function _send_lcd_cmd *****************
  2963 ;; Defined at:
  2964 ;;		line 102 in file "eadog.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  cmd             1  [STACK] const unsigned char 
  2967 ;; Auto vars:     Size  Location     Type
  2968 ;;		None
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  1  [STACK] void 
  2971 ;; Registers used:
  2972 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  2973 ;; Tracked objects:
  2974 ;;		On entry : 3F/0
  2975 ;;		On exit  : 3F/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  2978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  2982 ;;Total ram usage:        0 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    7
  2985 ;; This function calls:
  2986 ;;		_SPI1_Exchange8bit
  2987 ;;		_wdtdelay
  2988 ;; This function is called by:
  2989 ;;		_init_display
  2990 ;; This function uses a reentrant model
  2991 ;;
  2992                           
  2993                           	psect	text7
  2994  0188A0                     __ptext7:
  2995                           	opt callstack 0
  2996  0188A0                     _send_lcd_cmd:
  2997                           	opt callstack 22
  2998                           
  2999                           ; BSR set to: 0
  3000                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3001                           ;incstack = 0
  3002                           ;eadog.c: 102: static void send_lcd_cmd(const uint8_t cmd);eadog.c: 103: {;eadog.c: 104:
      +                            do { LATCbits.LATC1 = 0; } while(0);
  3003  0188A0  92BC               	bcf	188,1,c	;volatile
  3004                           
  3005                           ;eadog.c: 105:  do { LATCbits.LATC2 = 0; } while(0);
  3006  0188A2  94BC               	bcf	188,2,c	;volatile
  3007                           
  3008                           ;eadog.c: 106:  SPI1_Exchange8bit(cmd);
  3009                           ;stkvar	_cmd @ sp[(0)+-1]
  3010  0188A4  0EFF               	movlw	-1
  3011  0188A6  50E3               	movf	plusw1,w,c
  3012  0188A8  6EE6               	movwf	postinc1,c
  3013  0188AA  ECFA  F0C5         	call	_SPI1_Exchange8bit	;wreg free
  3014                           
  3015                           ; BSR set to: 57
  3016                           ;eadog.c: 107:  wdtdelay(30);
  3017  0188AE  0E1E               	movlw	30
  3018  0188B0  6EE6               	movwf	postinc1,c
  3019  0188B2  0E00               	movlw	0
  3020  0188B4  6EE6               	movwf	postinc1,c
  3021  0188B6  0E00               	movlw	0
  3022  0188B8  6EE6               	movwf	postinc1,c
  3023  0188BA  0E00               	movlw	0
  3024  0188BC  6EE6               	movwf	postinc1,c
  3025  0188BE  ECD8  F0C0         	call	_wdtdelay	;wreg free
  3026                           
  3027                           ; BSR set to: 0
  3028  0188C2  82BC               	bsf	188,1,c	;volatile
  3029                           
  3030                           ; BSR set to: 0
  3031                           ; _send_lcd_cmd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, 
      +                          argsize = 1, vargsize = 0
  3032  0188C4  52E5               	movf	postdec1,f,c
  3033  0188C6  0012               	return		;funcret
  3034  0188C8                     __end_of_send_lcd_cmd:
  3035                           	opt callstack 0
  3036                           
  3037 ;; *************** function _SPI1_Exchange8bit *****************
  3038 ;; Defined at:
  3039 ;;		line 79 in file "mcc_generated_files/spi1.c"
  3040 ;; Parameters:    Size  Location     Type
  3041 ;;  data            1  [STACK] unsigned char 
  3042 ;; Auto vars:     Size  Location     Type
  3043 ;;		None
  3044 ;; Return value:  Size  Location     Type
  3045 ;;                  1  [STACK] unsigned char 
  3046 ;; Registers used:
  3047 ;;		wreg, fsr1l, fsr1h, status,2, btemp
  3048 ;; Tracked objects:
  3049 ;;		On entry : 0/0
  3050 ;;		On exit  : 3F/39
  3051 ;;		Unchanged: 0/0
  3052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3057 ;;Total ram usage:        0 bytes
  3058 ;; Hardware stack levels used:    1
  3059 ;; Hardware stack levels required when called:    6
  3060 ;; This function calls:
  3061 ;;		Nothing
  3062 ;; This function is called by:
  3063 ;;		_send_lcd_cmd
  3064 ;;		_send_lcd_cmd_long
  3065 ;; This function uses a reentrant model
  3066 ;;
  3067                           
  3068                           	psect	text8
  3069  018BF4                     __ptext8:
  3070                           	opt callstack 0
  3071  018BF4                     _SPI1_Exchange8bit:
  3072                           	opt callstack 22
  3073                           
  3074                           ;mcc_generated_files/spi1.c: 79: uint8_t SPI1_Exchange8bit(uint8_t data);mcc_generated_f
      +                          iles/spi1.c: 80: {;mcc_generated_files/spi1.c: 82:     SPI1TCNTL = 1;
  3075                           
  3076                           ; BSR set to: 0
  3077                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3078                           ;incstack = 0
  3079  018BF4  0E01               	movlw	1
  3080  018BF6  013D               	movlb	61	; () banked
  3081  018BF8  6F12               	movwf	18,b	;volatile
  3082                           
  3083                           ; BSR set to: 61
  3084                           ;mcc_generated_files/spi1.c: 83:     SPI1TXB = data;
  3085                           ;stkvar	_data @ sp[(0)+-1]
  3086  018BFA  0EFF               	movlw	-1
  3087  018BFC  006F FF8F FD11     	movff	plusw1,15633	;volatile
  3088  018C02                     l835:
  3089                           
  3090                           ;mcc_generated_files/spi1.c: 85:     while(PIR2bits.SPI1RXIF == 0x0)
  3091  018C02  0139               	movlb	57	; () banked
  3092  018C04  A9A2               	btfss	162,4,b	;volatile
  3093  018C06  D7FD               	goto	l835
  3094                           
  3095                           ; BSR set to: 57
  3096                           ;mcc_generated_files/spi1.c: 89:     return (SPI1RXB);
  3097  018C08  006F F440  F035    	movff	15632,btemp	;volatile
  3098                           
  3099                           ; BSR set to: 57
  3100                           ; _SPI1_Exchange8bit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 1, argsize = 1, vargsize = 0
  3101  018C0E  52E5               	movf	postdec1,f,c
  3102  018C10  0012               	return		;funcret
  3103  018C12                     __end_of_SPI1_Exchange8bit:
  3104                           	opt callstack 0
  3105                           
  3106 ;; *************** function _ringBufS_init *****************
  3107 ;; Defined at:
  3108 ;;		line 22 in file "ringbufs.c"
  3109 ;; Parameters:    Size  Location     Type
  3110 ;;  _this           2  [STACK] PTR volatile struct ring
  3111 ;;		 -> ring_buf2(67), ring_buf1(67), 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;                  1  [STACK] void 
  3116 ;; Registers used:
  3117 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3126 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3127 ;;Total ram usage:        0 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    7
  3130 ;; This function calls:
  3131 ;;		_memset
  3132 ;; This function is called by:
  3133 ;;		_init_display
  3134 ;; This function uses a reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text9
  3138  0188C8                     __ptext9:
  3139                           	opt callstack 0
  3140  0188C8                     _ringBufS_init:
  3141                           	opt callstack 22
  3142                           
  3143                           ;ringbufs.c: 22: void ringBufS_init(volatile ringBufS_t *_this);ringbufs.c: 23: {;ringbu
      +                          fs.c: 32:  memset((void*)_this, 0, sizeof(*_this));
  3144                           
  3145                           ; BSR set to: 57
  3146                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3147                           ;incstack = 0
  3148  0188C8  0E43               	movlw	67
  3149  0188CA  6EE6               	movwf	postinc1,c
  3150  0188CC  0E00               	movlw	0
  3151  0188CE  6EE6               	movwf	postinc1,c
  3152  0188D0  0E00               	movlw	0
  3153  0188D2  6EE6               	movwf	postinc1,c
  3154  0188D4  0E00               	movlw	0
  3155  0188D6  6EE6               	movwf	postinc1,c
  3156                           
  3157                           ;stkvar	__this @ sp[(-4)+-2]
  3158  0188D8  0EFA               	movlw	-6
  3159  0188DA  006F FF8F FFE6     	movff	plusw1,postinc1
  3160  0188E0  006F FF8F FFE6     	movff	plusw1,postinc1
  3161  0188E6  EC73  F0A7         	call	_memset	;wreg free
  3162                           
  3163                           ; _ringBufS_init: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  3164  0188EA  52E5               	movf	postdec1,f,c
  3165  0188EC  52E5               	movf	postdec1,f,c
  3166  0188EE  0012               	return		;funcret
  3167  0188F0                     __end_of_ringBufS_init:
  3168                           	opt callstack 0
  3169                           
  3170 ;; *************** function _eaDogM_WriteCommand *****************
  3171 ;; Defined at:
  3172 ;;		line 160 in file "eadog.c"
  3173 ;; Parameters:    Size  Location     Type
  3174 ;;  cmd             1  [STACK] const unsigned char 
  3175 ;; Auto vars:     Size  Location     Type
  3176 ;;		None
  3177 ;; Return value:  Size  Location     Type
  3178 ;;                  1  [STACK] void 
  3179 ;; Registers used:
  3180 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  3181 ;; Tracked objects:
  3182 ;;		On entry : 3F/3D
  3183 ;;		On exit  : 3F/0
  3184 ;;		Unchanged: 0/0
  3185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3188 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3189 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3190 ;;Total ram usage:        0 bytes
  3191 ;; Hardware stack levels used:    1
  3192 ;; Hardware stack levels required when called:   16
  3193 ;; This function calls:
  3194 ;;		_send_lcd_cmd_dma
  3195 ;; This function is called by:
  3196 ;;		_main
  3197 ;; This function uses a reentrant model
  3198 ;;
  3199                           
  3200                           	psect	text10
  3201  018DBE                     __ptext10:
  3202                           	opt callstack 0
  3203  018DBE                     _eaDogM_WriteCommand:
  3204                           	opt callstack 14
  3205                           
  3206                           ;eadog.c: 160: void eaDogM_WriteCommand(const uint8_t cmd);eadog.c: 161: {;eadog.c: 162:
      +                            send_lcd_cmd_dma(cmd);
  3207                           ;stkvar	_cmd @ sp[(0)+-1]
  3208                           
  3209                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3210                           ;incstack = 0
  3211  018DBE  0EFF               	movlw	-1
  3212  018DC0  50E3               	movf	plusw1,w,c
  3213  018DC2  6EE6               	movwf	postinc1,c
  3214  018DC4  EC32  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  3215                           
  3216                           ; BSR set to: 0
  3217                           ; _eaDogM_WriteCommand: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsiz
      +                          e = 1, argsize = 1, vargsize = 0
  3218  018DC8  52E5               	movf	postdec1,f,c
  3219  018DCA  0012               	return		;funcret
  3220  018DCC                     __end_of_eaDogM_WriteCommand:
  3221                           	opt callstack 0
  3222                           
  3223 ;; *************** function _convert_adc_data *****************
  3224 ;; Defined at:
  3225 ;;		line 37 in file "mbmc.c"
  3226 ;; Parameters:    Size  Location     Type
  3227 ;;		None
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  i               1  [STACK] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1  [STACK] void 
  3232 ;; Registers used:
  3233 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/4
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3239 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3240 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3242 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3243 ;;Total ram usage:        0 bytes
  3244 ;; Hardware stack levels used:    1
  3245 ;; Hardware stack levels required when called:    9
  3246 ;; This function calls:
  3247 ;;		_conv_raw_result
  3248 ;;		_lp_filter
  3249 ;; This function is called by:
  3250 ;;		_main
  3251 ;; This function uses a reentrant model
  3252 ;;
  3253                           
  3254                           	psect	text11
  3255  017D4A                     __ptext11:
  3256                           	opt callstack 0
  3257  017D4A                     _convert_adc_data:
  3258                           	opt callstack 0
  3259                           
  3260                           ; BSR set to: 0
  3261                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3262  017D4A  52E6               	movf	postinc1,f,c
  3263                           
  3264                           ;mbmc.c: 39:  uint8_t i = 0;
  3265                           ;stkvar	_i @ sp[(-1)+0]
  3266                           
  3267                           ;incstack = 0
  3268  017D4C  0EFF               	movlw	-1
  3269  017D4E  6AE3               	clrf	plusw1,c
  3270  017D50                     l8943:
  3271                           
  3272                           ;mbmc.c: 42:   C.calc[i] = lp_filter(conv_raw_result(i, CONV), i, 0);
  3273  017D50  0E00               	movlw	0
  3274  017D52  6EE6               	movwf	postinc1,c
  3275                           
  3276                           ;stkvar	_i @ sp[(-2)+0]
  3277  017D54  0EFE               	movlw	-2
  3278  017D56  50E3               	movf	plusw1,w,c
  3279  017D58  6EE6               	movwf	postinc1,c
  3280  017D5A  0E00               	movlw	0
  3281  017D5C  6EE6               	movwf	postinc1,c
  3282                           
  3283                           ;stkvar	_i @ sp[(-4)+0]
  3284  017D5E  0EFC               	movlw	-4
  3285  017D60  50E3               	movf	plusw1,w,c
  3286  017D62  6EE6               	movwf	postinc1,c
  3287  017D64  ECA8  F09B         	call	_conv_raw_result	;wreg free
  3288  017D68  0060  F0D7  FFE6   	movff	btemp,postinc1
  3289  017D6E  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3290  017D74  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3291  017D7A  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3292  017D80  ECFD  F0B0         	call	_lp_filter	;wreg free
  3293                           
  3294                           ;stkvar	_i @ sp[(-1)+0]
  3295  017D84  0EFF               	movlw	-1
  3296  017D86  50E3               	movf	plusw1,w,c
  3297  017D88  0D04               	mullw	4
  3298  017D8A  0E00               	movlw	low _C
  3299  017D8C  24F3               	addwf	243,w,c
  3300  017D8E  6ED9               	movwf	fsr2l,c
  3301  017D90  0E02               	movlw	high _C
  3302  017D92  20F4               	addwfc	prodh,w,c
  3303  017D94  6EDA               	movwf	fsr2h,c
  3304  017D96  0060  F0D7  FFDE   	movff	btemp,postinc2
  3305  017D9C  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3306  017DA2  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3307  017DA8  0060  F0E3  FFDE   	movff	btemp+3,postinc2
  3308                           
  3309                           ;mbmc.c: 43:  } while (++i < 16);
  3310                           ;stkvar	_i @ sp[(-1)+0]
  3311  017DAE  0EFF               	movlw	-1
  3312  017DB0  2AE3               	incf	plusw1,f,c
  3313  017DB2  0EFF               	movlw	-1
  3314  017DB4  006F FF8C  F035    	movff	plusw1,btemp
  3315  017DBA  0E0F               	movlw	15
  3316  017DBC  6435               	cpfsgt	btemp^0,c
  3317  017DBE  D7C8               	goto	l8943
  3318                           
  3319                           ; _convert_adc_data: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
  3320  017DC0  52E5               	movf	postdec1,f,c
  3321  017DC2  0012               	return		;funcret
  3322  017DC4                     __end_of_convert_adc_data:
  3323                           	opt callstack 0
  3324                           
  3325 ;; *************** function _lp_filter *****************
  3326 ;; Defined at:
  3327 ;;		line 15 in file "mbmc.c"
  3328 ;; Parameters:    Size  Location     Type
  3329 ;;  new             4  [STACK] float 
  3330 ;;  bn              1  [STACK] unsigned char 
  3331 ;;  slow            1  [STACK] char 
  3332 ;; Auto vars:     Size  Location     Type
  3333 ;;  lp_speed        4  [STACK] float 
  3334 ;; Return value:  Size  Location     Type
  3335 ;;                  4  [STACK] float 
  3336 ;; Registers used:
  3337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3338 ;; Tracked objects:
  3339 ;;		On entry : 0/4
  3340 ;;		On exit  : 0/0
  3341 ;;		Unchanged: 0/0
  3342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3347 ;;Total ram usage:        0 bytes
  3348 ;; Hardware stack levels used:    1
  3349 ;; Hardware stack levels required when called:    8
  3350 ;; This function calls:
  3351 ;;		___fladd
  3352 ;;		___flmul
  3353 ;;		___flsub
  3354 ;; This function is called by:
  3355 ;;		_convert_adc_data
  3356 ;; This function uses a reentrant model
  3357 ;;
  3358                           
  3359                           	psect	text12
  3360  0161FA                     __ptext12:
  3361                           	opt callstack 0
  3362  0161FA                     _lp_filter:
  3363                           	opt callstack 0
  3364                           
  3365                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3366  0161FA  52E6               	movf	postinc1,f,c
  3367  0161FC  52E6               	movf	postinc1,f,c
  3368  0161FE  52E6               	movf	postinc1,f,c
  3369  016200  52E6               	movf	postinc1,f,c
  3370                           
  3371                           ;mbmc.c: 15: float lp_filter(float new, uint8_t bn, int8_t slow);mbmc.c: 16: {;mbmc.c: 1
      +                          7:  static float smooth[16];;mbmc.c: 18:  float lp_speed;;mbmc.c: 20:  if (bn >= 16)
  3372                           ;stkvar	_bn @ sp[(-4)+-5]
  3373                           
  3374                           ;incstack = 0
  3375  016202  0EF7               	movlw	-9
  3376  016204  006F FF8C  F035    	movff	plusw1,btemp
  3377  01620A  0E0F               	movlw	15
  3378  01620C  6435               	cpfsgt	btemp^0,c
  3379  01620E  D011               	goto	l8735
  3380  016210                     u8530:
  3381                           
  3382                           ;mbmc.c: 21:   return new;
  3383                           ;stkvar	_new @ sp[(-4)+-4]
  3384  016210  0EF8               	movlw	-8
  3385  016212  006F FF8C  F035    	movff	plusw1,btemp
  3386  016218  0EF9               	movlw	-7
  3387  01621A  006F FF8C  F036    	movff	plusw1,btemp+1
  3388  016220  0EFA               	movlw	-6
  3389  016222  006F FF8C  F037    	movff	plusw1,btemp+2
  3390  016228  0EFB               	movlw	-5
  3391  01622A  006F FF8C  F038    	movff	plusw1,btemp+3
  3392  016230  D0BF               	goto	l1696
  3393  016232                     l8735:
  3394                           
  3395                           ;mbmc.c: 23:  if (slow == (-1)) {
  3396                           ;stkvar	_slow @ sp[(-4)+-6]
  3397  016232  0EF6               	movlw	-10
  3398  016234  28E3               	incf	plusw1,w,c
  3399  016236  A4D8               	btfss	status,2,c
  3400  016238  D012               	goto	l8743
  3401                           
  3402                           ;mbmc.c: 24:   smooth[bn] = 0.0;
  3403                           ;stkvar	_bn @ sp[(-4)+-5]
  3404  01623A  0EF7               	movlw	-9
  3405  01623C  50E3               	movf	plusw1,w,c
  3406  01623E  0D04               	mullw	4
  3407  016240  0EBB               	movlw	low lp_filter@smooth
  3408  016242  24F3               	addwf	243,w,c
  3409  016244  6ED9               	movwf	fsr2l,c
  3410  016246  0E01               	movlw	high lp_filter@smooth
  3411  016248  20F4               	addwfc	prodh,w,c
  3412  01624A  6EDA               	movwf	fsr2h,c
  3413  01624C  0E00               	movlw	0
  3414  01624E  6EDE               	movwf	postinc2,c
  3415  016250  0E00               	movlw	0
  3416  016252  6EDE               	movwf	postinc2,c
  3417  016254  0E00               	movlw	0
  3418  016256  6EDE               	movwf	postinc2,c
  3419  016258  0E00               	movlw	0
  3420  01625A  6EDD               	movwf	postdec2,c
  3421  01625C  D7D9               	goto	u8530
  3422  01625E                     l8743:
  3423                           
  3424                           ;mbmc.c: 28:  if (slow) {
  3425                           ;stkvar	_slow @ sp[(-4)+-6]
  3426  01625E  0EF6               	movlw	-10
  3427  016260  50E3               	movf	plusw1,w,c
  3428  016262  B4D8               	btfsc	status,2,c
  3429  016264  D008               	goto	l8747
  3430                           
  3431                           ;mbmc.c: 29:   lp_speed = 0.066;
  3432  016266  0E02               	movlw	2
  3433  016268  6E3D               	movwf	(btemp+8)^0,c
  3434  01626A  0E2B               	movlw	43
  3435  01626C  6E3E               	movwf	(btemp+9)^0,c
  3436  01626E  0E87               	movlw	135
  3437  016270  6E3F               	movwf	(btemp+10)^0,c
  3438  016272  0E3D               	movlw	61
  3439  016274  D007               	goto	L1
  3440  016276                     l8747:
  3441                           
  3442                           ;mbmc.c: 31:   lp_speed = 0.333;
  3443  016276  0EFA               	movlw	250
  3444  016278  6E3D               	movwf	(btemp+8)^0,c
  3445  01627A  0E7E               	movlw	126
  3446  01627C  6E3E               	movwf	(btemp+9)^0,c
  3447  01627E  0EAA               	movlw	170
  3448  016280  6E3F               	movwf	(btemp+10)^0,c
  3449  016282  0E3E               	movlw	62
  3450  016284                     L1:
  3451  016284  6E40               	movwf	(btemp+11)^0,c
  3452                           
  3453                           ;stkvar	_lp_speed @ sp[(-4)+0]
  3454  016286  0EFC               	movlw	-4
  3455  016288  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  3456  01628E  0EFD               	movlw	-3
  3457  016290  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  3458  016296  0EFE               	movlw	-2
  3459  016298  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  3460  01629E  0EFF               	movlw	-1
  3461  0162A0  0060  F103  FFE3   	movff	btemp+11,plusw1
  3462                           
  3463                           ;mbmc.c: 34:  return smooth[bn] = smooth[bn] + ((new - smooth[bn]) * lp_speed);
  3464                           ;stkvar	_bn @ sp[(-4)+-5]
  3465  0162A6  0EF7               	movlw	-9
  3466  0162A8  50E3               	movf	plusw1,w,c
  3467  0162AA  0D04               	mullw	4
  3468  0162AC  0EBB               	movlw	low lp_filter@smooth
  3469  0162AE  24F3               	addwf	243,w,c
  3470  0162B0  6ED9               	movwf	fsr2l,c
  3471  0162B2  0E01               	movlw	high lp_filter@smooth
  3472  0162B4  20F4               	addwfc	prodh,w,c
  3473  0162B6  6EDA               	movwf	fsr2h,c
  3474  0162B8  006F FF7B FFE6     	movff	postinc2,postinc1
  3475  0162BE  006F FF7B FFE6     	movff	postinc2,postinc1
  3476  0162C4  006F FF7B FFE6     	movff	postinc2,postinc1
  3477  0162CA  006F FF7B FFE6     	movff	postinc2,postinc1
  3478                           
  3479                           ;stkvar	_lp_speed @ sp[(-8)+0]
  3480  0162D0  0EF8               	movlw	-8
  3481  0162D2  006F FF8F FFE6     	movff	plusw1,postinc1
  3482  0162D8  006F FF8F FFE6     	movff	plusw1,postinc1
  3483  0162DE  006F FF8F FFE6     	movff	plusw1,postinc1
  3484  0162E4  006F FF8F FFE6     	movff	plusw1,postinc1
  3485                           
  3486                           ;stkvar	_bn @ sp[(-12)+-5]
  3487  0162EA  0EEF               	movlw	-17
  3488  0162EC  50E3               	movf	plusw1,w,c
  3489  0162EE  0D04               	mullw	4
  3490  0162F0  0EBB               	movlw	low lp_filter@smooth
  3491  0162F2  24F3               	addwf	243,w,c
  3492  0162F4  6ED9               	movwf	fsr2l,c
  3493  0162F6  0E01               	movlw	high lp_filter@smooth
  3494  0162F8  20F4               	addwfc	prodh,w,c
  3495  0162FA  6EDA               	movwf	fsr2h,c
  3496  0162FC  006F FF7B FFE6     	movff	postinc2,postinc1
  3497  016302  006F FF7B FFE6     	movff	postinc2,postinc1
  3498  016308  006F FF7B FFE6     	movff	postinc2,postinc1
  3499  01630E  006F FF7B FFE6     	movff	postinc2,postinc1
  3500                           
  3501                           ;stkvar	_new @ sp[(-16)+-4]
  3502  016314  0EEC               	movlw	-20
  3503  016316  006F FF8F FFE6     	movff	plusw1,postinc1
  3504  01631C  006F FF8F FFE6     	movff	plusw1,postinc1
  3505  016322  006F FF8F FFE6     	movff	plusw1,postinc1
  3506  016328  006F FF8F FFE6     	movff	plusw1,postinc1
  3507  01632E  ECA8  F0C1         	call	___flsub	;wreg free
  3508  016332  0060  F0D7  FFE6   	movff	btemp,postinc1
  3509  016338  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3510  01633E  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3511  016344  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3512  01634A  ECF8  F090         	call	___flmul	;wreg free
  3513  01634E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3514  016354  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3515  01635A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3516  016360  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3517  016366  EC0D  F095         	call	___fladd	;wreg free
  3518                           
  3519                           ;stkvar	_bn @ sp[(-4)+-5]
  3520  01636A  0EF7               	movlw	-9
  3521  01636C  50E3               	movf	plusw1,w,c
  3522  01636E  0D04               	mullw	4
  3523  016370  0EBB               	movlw	low lp_filter@smooth
  3524  016372  24F3               	addwf	243,w,c
  3525  016374  6ED9               	movwf	fsr2l,c
  3526  016376  0E01               	movlw	high lp_filter@smooth
  3527  016378  20F4               	addwfc	prodh,w,c
  3528  01637A  6EDA               	movwf	fsr2h,c
  3529  01637C  0060  F0D7  FFDE   	movff	btemp,postinc2
  3530  016382  0060  F0DB  FFDE   	movff	btemp+1,postinc2
  3531  016388  0060  F0DF  FFDE   	movff	btemp+2,postinc2
  3532  01638E  0060  F0E3  FFDD   	movff	btemp+3,postdec2
  3533  016394  52DD               	movf	postdec2,f,c
  3534  016396  52DD               	movf	postdec2,f,c
  3535  016398  006F FF78  F035    	movff	postinc2,btemp
  3536  01639E  006F FF78  F036    	movff	postinc2,btemp+1
  3537  0163A4  006F FF78  F037    	movff	postinc2,btemp+2
  3538  0163AA  006F FF78  F038    	movff	postinc2,btemp+3
  3539  0163B0                     l1696:
  3540                           
  3541                           ; _lp_filter: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, arg
      +                          size = 6, vargsize = 0
  3542  0163B0  0EF6               	movlw	246
  3543  0163B2  26E1               	addwf	fsr1l,f,c
  3544  0163B4  0EFF               	movlw	255
  3545  0163B6  22E2               	addwfc	fsr1h,f,c
  3546  0163B8  0012               	return		;funcret
  3547  0163BA                     __end_of_lp_filter:
  3548                           	opt callstack 0
  3549                           
  3550 ;; *************** function _conv_raw_result *****************
  3551 ;; Defined at:
  3552 ;;		line 80 in file "daq.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;  chan            1  [STACK] enum E16136
  3555 ;;  to_what         1  [STACK] enum E16198
  3556 ;; Auto vars:     Size  Location     Type
  3557 ;;		None
  3558 ;; Return value:  Size  Location     Type
  3559 ;;                  4  [STACK] float 
  3560 ;; Registers used:
  3561 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  3562 ;; Tracked objects:
  3563 ;;		On entry : 0/4
  3564 ;;		On exit  : 0/0
  3565 ;;		Unchanged: 0/0
  3566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  3567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3570 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  3571 ;;Total ram usage:        0 bytes
  3572 ;; Hardware stack levels used:    1
  3573 ;; Hardware stack levels required when called:    8
  3574 ;; This function calls:
  3575 ;;		___fldiv
  3576 ;;		___flmul
  3577 ;;		___flsub
  3578 ;;		___xxtofl
  3579 ;;		_get_raw_result
  3580 ;;		_nanf
  3581 ;; This function is called by:
  3582 ;;		_convert_adc_data
  3583 ;; This function uses a reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text13
  3587  013750                     __ptext13:
  3588                           	opt callstack 0
  3589  013750                     _conv_raw_result:
  3590                           	opt callstack 21
  3591                           
  3592                           ;daq.c: 80: float conv_raw_result(adcc_channel_t chan, adc_conv_t to_what);daq.c: 81: {;
      +                          daq.c: 82:  if (!(0b0011110001110111 >> chan & 0x1))
  3593                           ;stkvar	_chan @ sp[(0)+-1]
  3594                           
  3595                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  3596                           ;incstack = 0
  3597  013750  0EFF               	movlw	-1
  3598  013752  006F FF8C  F040    	movff	plusw1,btemp+11
  3599  013758  0E77               	movlw	119
  3600  01375A  6E3D               	movwf	(btemp+8)^0,c
  3601  01375C  0E3C               	movlw	60
  3602  01375E  6E3E               	movwf	(btemp+9)^0,c
  3603  013760  2A40               	incf	(btemp+11)^0,f,c
  3604  013762  D003               	goto	u8454
  3605  013764                     u8455:
  3606  013764  343E               	rlcf	(btemp+9)^0,w,c
  3607  013766  323E               	rrcf	(btemp+9)^0,f,c
  3608  013768  323D               	rrcf	(btemp+8)^0,f,c
  3609  01376A                     u8454:
  3610  01376A  2E40               	decfsz	(btemp+11)^0,f,c
  3611  01376C  D7FB               	goto	u8455
  3612  01376E  B03D               	btfsc	(btemp+8)^0,0,c
  3613  013770  D23B               	goto	l8719
  3614                           
  3615                           ;daq.c: 83:   return nanf("");
  3616  013772  0E0B               	movlw	low (STR_27+18)
  3617  013774  6EE6               	movwf	postinc1,c
  3618  013776  0EFF               	movlw	high (STR_27+18)
  3619  013778  6EE6               	movwf	postinc1,c
  3620  01377A  EC19  F0C0         	call	_nanf	;wreg free
  3621  01377E  D244               	goto	l1654
  3622  013780                     l8679:
  3623                           
  3624                           ;daq.c: 87:   if (0b0000000000000011 >> chan & 0x1) {
  3625                           ;stkvar	_chan @ sp[(0)+-1]
  3626  013780  0EFF               	movlw	-1
  3627  013782  006F FF8C  F040    	movff	plusw1,btemp+11
  3628  013788  0E03               	movlw	3
  3629  01378A  6E3D               	movwf	(btemp+8)^0,c
  3630  01378C  0E00               	movlw	0
  3631  01378E  6E3E               	movwf	(btemp+9)^0,c
  3632  013790  2A40               	incf	(btemp+11)^0,f,c
  3633  013792  D003               	goto	u8474
  3634  013794                     u8475:
  3635  013794  343E               	rlcf	(btemp+9)^0,w,c
  3636  013796  323E               	rrcf	(btemp+9)^0,f,c
  3637  013798  323D               	rrcf	(btemp+8)^0,f,c
  3638  01379A                     u8474:
  3639  01379A  2E40               	decfsz	(btemp+11)^0,f,c
  3640  01379C  D7FB               	goto	u8475
  3641  01379E  A03D               	btfss	(btemp+8)^0,0,c
  3642  0137A0  D139               	goto	l8693
  3643                           
  3644                           ;daq.c: 88:    if (0b0000000000000001 >> chan & 0x1) {
  3645                           ;stkvar	_chan @ sp[(0)+-1]
  3646  0137A2  0EFF               	movlw	-1
  3647  0137A4  006F FF8C  F040    	movff	plusw1,btemp+11
  3648  0137AA  0E01               	movlw	1
  3649  0137AC  6E3D               	movwf	(btemp+8)^0,c
  3650  0137AE  0E00               	movlw	0
  3651  0137B0  6E3E               	movwf	(btemp+9)^0,c
  3652  0137B2  2A40               	incf	(btemp+11)^0,f,c
  3653  0137B4  D003               	goto	u8494
  3654  0137B6                     u8495:
  3655  0137B6  343E               	rlcf	(btemp+9)^0,w,c
  3656  0137B8  323E               	rrcf	(btemp+9)^0,f,c
  3657  0137BA  323D               	rrcf	(btemp+8)^0,f,c
  3658  0137BC                     u8494:
  3659  0137BC  2E40               	decfsz	(btemp+11)^0,f,c
  3660  0137BE  D7FB               	goto	u8495
  3661  0137C0  A03D               	btfss	(btemp+8)^0,0,c
  3662  0137C2  D094               	goto	l8689
  3663                           
  3664                           ;daq.c: 89:     return(((float) get_raw_result(chan) * 1.25/2.0) - R.c_offset[0]) * 59.3
      +                          0 / 1000.0;
  3665  0137C4  0E00               	movlw	0
  3666  0137C6  6EE6               	movwf	postinc1,c
  3667  0137C8  0E00               	movlw	0
  3668  0137CA  6EE6               	movwf	postinc1,c
  3669  0137CC  0E7A               	movlw	122
  3670  0137CE  6EE6               	movwf	postinc1,c
  3671  0137D0  0E44               	movlw	68
  3672  0137D2  6EE6               	movwf	postinc1,c
  3673  0137D4  0E33               	movlw	51
  3674  0137D6  6EE6               	movwf	postinc1,c
  3675  0137D8  0E33               	movlw	51
  3676  0137DA  6EE6               	movwf	postinc1,c
  3677  0137DC  0E6D               	movlw	109
  3678  0137DE  6EE6               	movwf	postinc1,c
  3679  0137E0  0E42               	movlw	66
  3680  0137E2  6EE6               	movwf	postinc1,c
  3681  0137E4  0060  F30F  FFE6   	movff	_R+32,postinc1
  3682  0137EA  0060  F313  FFE6   	movff	_R+33,postinc1
  3683  0137F0  0060  F317  FFE6   	movff	_R+34,postinc1
  3684  0137F6  0060  F31B  FFE6   	movff	_R+35,postinc1
  3685  0137FC  0E00               	movlw	0
  3686  0137FE  6EE6               	movwf	postinc1,c
  3687  013800  0E00               	movlw	0
  3688  013802  6EE6               	movwf	postinc1,c
  3689  013804  0E00               	movlw	0
  3690  013806  6EE6               	movwf	postinc1,c
  3691  013808  0E40               	movlw	64
  3692  01380A  6EE6               	movwf	postinc1,c
  3693  01380C  0E00               	movlw	0
  3694  01380E  6EE6               	movwf	postinc1,c
  3695  013810  0E00               	movlw	0
  3696  013812  6EE6               	movwf	postinc1,c
  3697  013814  0EA0               	movlw	160
  3698  013816  6EE6               	movwf	postinc1,c
  3699  013818  0E3F               	movlw	63
  3700  01381A  6EE6               	movwf	postinc1,c
  3701                           
  3702                           ;stkvar	_chan @ sp[(-20)+-1]
  3703  01381C  0EEB               	movlw	-21
  3704  01381E  50E3               	movf	plusw1,w,c
  3705  013820  6EE6               	movwf	postinc1,c
  3706  013822  EC09  F0C6         	call	_get_raw_result	;wreg free
  3707  013826  0060  F0D4  F03F   	movff	btemp,btemp+10
  3708  01382C  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3709  013832  503F               	movf	(btemp+10)^0,w,c
  3710  013834  6E39               	movwf	(btemp+4)^0,c
  3711  013836  5040               	movf	(btemp+11)^0,w,c
  3712  013838  6E3A               	movwf	(btemp+5)^0,c
  3713  01383A  6A3B               	clrf	(btemp+6)^0,c
  3714  01383C  6A3C               	clrf	(btemp+7)^0,c
  3715  01383E  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3716  013844  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3717  01384A  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3718  013850  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3719  013856  0E00               	movlw	0
  3720  013858  6EE6               	movwf	postinc1,c
  3721  01385A  ECFB  F0AF         	call	___xxtofl	;wreg free
  3722  01385E  0060  F0D7  FFE6   	movff	btemp,postinc1
  3723  013864  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3724  01386A  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3725  013870  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3726  013876  ECF8  F090         	call	___flmul	;wreg free
  3727  01387A  0060  F0D7  FFE6   	movff	btemp,postinc1
  3728  013880  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3729  013886  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3730  01388C  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3731  013892  ECEB  F098         	call	___fldiv	;wreg free
  3732  013896  0060  F0D7  FFE6   	movff	btemp,postinc1
  3733  01389C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3734  0138A2  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3735  0138A8  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3736  0138AE  ECA8  F0C1         	call	___flsub	;wreg free
  3737  0138B2  0060  F0D7  FFE6   	movff	btemp,postinc1
  3738  0138B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3739  0138BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3740  0138C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3741  0138CA  ECF8  F090         	call	___flmul	;wreg free
  3742  0138CE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3743  0138D4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3744  0138DA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3745  0138E0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3746  0138E6  ECEB  F098         	call	___fldiv	;wreg free
  3747  0138EA  D18E               	goto	l1654
  3748  0138EC                     l8689:
  3749                           
  3750                           ;daq.c: 91:     return(((float) get_raw_result(chan) * 1.25/2.0) - R.c_offset[1]) * 30.0
      +                          0 / 1000.0;
  3751  0138EC  0E00               	movlw	0
  3752  0138EE  6EE6               	movwf	postinc1,c
  3753  0138F0  0E00               	movlw	0
  3754  0138F2  6EE6               	movwf	postinc1,c
  3755  0138F4  0E7A               	movlw	122
  3756  0138F6  6EE6               	movwf	postinc1,c
  3757  0138F8  0E44               	movlw	68
  3758  0138FA  6EE6               	movwf	postinc1,c
  3759  0138FC  0E00               	movlw	0
  3760  0138FE  6EE6               	movwf	postinc1,c
  3761  013900  0E00               	movlw	0
  3762  013902  6EE6               	movwf	postinc1,c
  3763  013904  0EF0               	movlw	240
  3764  013906  6EE6               	movwf	postinc1,c
  3765  013908  0E41               	movlw	65
  3766  01390A  6EE6               	movwf	postinc1,c
  3767  01390C  0060  F31F  FFE6   	movff	_R+36,postinc1
  3768  013912  0060  F323  FFE6   	movff	_R+37,postinc1
  3769  013918  0060  F327  FFE6   	movff	_R+38,postinc1
  3770  01391E  0060  F32B  FFE6   	movff	_R+39,postinc1
  3771  013924  0E00               	movlw	0
  3772  013926  6EE6               	movwf	postinc1,c
  3773  013928  0E00               	movlw	0
  3774  01392A  6EE6               	movwf	postinc1,c
  3775  01392C  0E00               	movlw	0
  3776  01392E  6EE6               	movwf	postinc1,c
  3777  013930  0E40               	movlw	64
  3778  013932  6EE6               	movwf	postinc1,c
  3779  013934  0E00               	movlw	0
  3780  013936  6EE6               	movwf	postinc1,c
  3781  013938  0E00               	movlw	0
  3782  01393A  6EE6               	movwf	postinc1,c
  3783  01393C  0EA0               	movlw	160
  3784  01393E  6EE6               	movwf	postinc1,c
  3785  013940  0E3F               	movlw	63
  3786  013942  6EE6               	movwf	postinc1,c
  3787                           
  3788                           ;stkvar	_chan @ sp[(-20)+-1]
  3789  013944  0EEB               	movlw	-21
  3790  013946  50E3               	movf	plusw1,w,c
  3791  013948  6EE6               	movwf	postinc1,c
  3792  01394A  EC09  F0C6         	call	_get_raw_result	;wreg free
  3793  01394E  0060  F0D4  F03F   	movff	btemp,btemp+10
  3794  013954  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3795  01395A  503F               	movf	(btemp+10)^0,w,c
  3796  01395C  6E39               	movwf	(btemp+4)^0,c
  3797  01395E  5040               	movf	(btemp+11)^0,w,c
  3798  013960  6E3A               	movwf	(btemp+5)^0,c
  3799  013962  6A3B               	clrf	(btemp+6)^0,c
  3800  013964  6A3C               	clrf	(btemp+7)^0,c
  3801  013966  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3802  01396C  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3803  013972  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3804  013978  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3805  01397E  0E00               	movlw	0
  3806  013980  6EE6               	movwf	postinc1,c
  3807  013982  ECFB  F0AF         	call	___xxtofl	;wreg free
  3808  013986  0060  F0D7  FFE6   	movff	btemp,postinc1
  3809  01398C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3810  013992  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3811  013998  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3812  01399E  ECF8  F090         	call	___flmul	;wreg free
  3813  0139A2  0060  F0D7  FFE6   	movff	btemp,postinc1
  3814  0139A8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3815  0139AE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3816  0139B4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3817  0139BA  ECEB  F098         	call	___fldiv	;wreg free
  3818  0139BE  0060  F0D7  FFE6   	movff	btemp,postinc1
  3819  0139C4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3820  0139CA  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3821  0139D0  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3822  0139D6  ECA8  F0C1         	call	___flsub	;wreg free
  3823  0139DA  0060  F0D7  FFE6   	movff	btemp,postinc1
  3824  0139E0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3825  0139E6  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3826  0139EC  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3827  0139F2  ECF8  F090         	call	___flmul	;wreg free
  3828  0139F6  0060  F0D7  FFE6   	movff	btemp,postinc1
  3829  0139FC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3830  013A02  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3831  013A08  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3832  013A0E  ECEB  F098         	call	___fldiv	;wreg free
  3833  013A12  D0FA               	goto	l1654
  3834  013A14                     l8693:
  3835                           
  3836                           ;daq.c: 94:    if (0b0000100000000000 >> chan & 0x1) {
  3837                           ;stkvar	_chan @ sp[(0)+-1]
  3838  013A14  0EFF               	movlw	-1
  3839  013A16  006F FF8C  F040    	movff	plusw1,btemp+11
  3840  013A1C  0E00               	movlw	0
  3841  013A1E  6E3D               	movwf	(btemp+8)^0,c
  3842  013A20  0E08               	movlw	8
  3843  013A22  6E3E               	movwf	(btemp+9)^0,c
  3844  013A24  2A40               	incf	(btemp+11)^0,f,c
  3845  013A26  D003               	goto	u8514
  3846  013A28                     u8515:
  3847  013A28  343E               	rlcf	(btemp+9)^0,w,c
  3848  013A2A  323E               	rrcf	(btemp+9)^0,f,c
  3849  013A2C  323D               	rrcf	(btemp+8)^0,f,c
  3850  013A2E                     u8514:
  3851  013A2E  2E40               	decfsz	(btemp+11)^0,f,c
  3852  013A30  D7FB               	goto	u8515
  3853  013A32  A03D               	btfss	(btemp+8)^0,0,c
  3854  013A34  D008               	goto	l8701
  3855                           
  3856                           ;daq.c: 95:     return 25.0;
  3857  013A36  0E00               	movlw	0
  3858  013A38  6E35               	movwf	btemp^0,c
  3859  013A3A  0E00               	movlw	0
  3860  013A3C  6E36               	movwf	(btemp+1)^0,c
  3861  013A3E  0EC8               	movlw	200
  3862  013A40  6E37               	movwf	(btemp+2)^0,c
  3863  013A42  0E41               	movlw	65
  3864  013A44  D0CF               	goto	L2
  3865  013A46                     l8701:
  3866                           
  3867                           ;daq.c: 97:     return((float) get_raw_result(chan) * 8.250825/2.0) / 1000.0;
  3868  013A46  0E00               	movlw	0
  3869  013A48  6EE6               	movwf	postinc1,c
  3870  013A4A  0E00               	movlw	0
  3871  013A4C  6EE6               	movwf	postinc1,c
  3872  013A4E  0E7A               	movlw	122
  3873  013A50  6EE6               	movwf	postinc1,c
  3874  013A52  0E44               	movlw	68
  3875  013A54  6EE6               	movwf	postinc1,c
  3876  013A56  0E00               	movlw	0
  3877  013A58  6EE6               	movwf	postinc1,c
  3878  013A5A  0E00               	movlw	0
  3879  013A5C  6EE6               	movwf	postinc1,c
  3880  013A5E  0E00               	movlw	0
  3881  013A60  6EE6               	movwf	postinc1,c
  3882  013A62  0E40               	movlw	64
  3883  013A64  6EE6               	movwf	postinc1,c
  3884  013A66  0E61               	movlw	97
  3885  013A68  6EE6               	movwf	postinc1,c
  3886  013A6A  0E03               	movlw	3
  3887  013A6C  6EE6               	movwf	postinc1,c
  3888  013A6E  0E04               	movlw	4
  3889  013A70  6EE6               	movwf	postinc1,c
  3890  013A72  0E41               	movlw	65
  3891  013A74  6EE6               	movwf	postinc1,c
  3892                           
  3893                           ;stkvar	_chan @ sp[(-12)+-1]
  3894  013A76  0EF3               	movlw	-13
  3895  013A78  50E3               	movf	plusw1,w,c
  3896  013A7A  6EE6               	movwf	postinc1,c
  3897  013A7C  EC09  F0C6         	call	_get_raw_result	;wreg free
  3898  013A80  0060  F0D4  F03F   	movff	btemp,btemp+10
  3899  013A86  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3900  013A8C  503F               	movf	(btemp+10)^0,w,c
  3901  013A8E  6E39               	movwf	(btemp+4)^0,c
  3902  013A90  5040               	movf	(btemp+11)^0,w,c
  3903  013A92  6E3A               	movwf	(btemp+5)^0,c
  3904  013A94  6A3B               	clrf	(btemp+6)^0,c
  3905  013A96  6A3C               	clrf	(btemp+7)^0,c
  3906  013A98  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3907  013A9E  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3908  013AA4  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3909  013AAA  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3910  013AB0  0E00               	movlw	0
  3911  013AB2  6EE6               	movwf	postinc1,c
  3912  013AB4  ECFB  F0AF         	call	___xxtofl	;wreg free
  3913  013AB8  0060  F0D7  FFE6   	movff	btemp,postinc1
  3914  013ABE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3915  013AC4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3916  013ACA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3917  013AD0  ECF8  F090         	call	___flmul	;wreg free
  3918  013AD4  0060  F0D7  FFE6   	movff	btemp,postinc1
  3919  013ADA  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3920  013AE0  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3921  013AE6  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3922  013AEC  ECEB  F098         	call	___fldiv	;wreg free
  3923  013AF0  0060  F0D7  FFE6   	movff	btemp,postinc1
  3924  013AF6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3925  013AFC  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3926  013B02  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3927  013B08  ECEB  F098         	call	___fldiv	;wreg free
  3928  013B0C  D07D               	goto	l1654
  3929  013B0E                     l8705:
  3930                           
  3931                           ;daq.c: 102:   return((float) get_raw_result(chan) * 1.25/2.0) / 1000.0;
  3932  013B0E  0E00               	movlw	0
  3933  013B10  6EE6               	movwf	postinc1,c
  3934  013B12  0E00               	movlw	0
  3935  013B14  6EE6               	movwf	postinc1,c
  3936  013B16  0E7A               	movlw	122
  3937  013B18  6EE6               	movwf	postinc1,c
  3938  013B1A  0E44               	movlw	68
  3939  013B1C  6EE6               	movwf	postinc1,c
  3940  013B1E  0E00               	movlw	0
  3941  013B20  6EE6               	movwf	postinc1,c
  3942  013B22  0E00               	movlw	0
  3943  013B24  6EE6               	movwf	postinc1,c
  3944  013B26  0E00               	movlw	0
  3945  013B28  6EE6               	movwf	postinc1,c
  3946  013B2A  0E40               	movlw	64
  3947  013B2C  6EE6               	movwf	postinc1,c
  3948  013B2E  0E00               	movlw	0
  3949  013B30  6EE6               	movwf	postinc1,c
  3950  013B32  0E00               	movlw	0
  3951  013B34  6EE6               	movwf	postinc1,c
  3952  013B36  0EA0               	movlw	160
  3953  013B38  6EE6               	movwf	postinc1,c
  3954  013B3A  0E3F               	movlw	63
  3955  013B3C  6EE6               	movwf	postinc1,c
  3956                           
  3957                           ;stkvar	_chan @ sp[(-12)+-1]
  3958  013B3E  0EF3               	movlw	-13
  3959  013B40  50E3               	movf	plusw1,w,c
  3960  013B42  6EE6               	movwf	postinc1,c
  3961  013B44  EC09  F0C6         	call	_get_raw_result	;wreg free
  3962  013B48  0060  F0D4  F03F   	movff	btemp,btemp+10
  3963  013B4E  0060  F0D8  F040   	movff	btemp+1,btemp+11
  3964  013B54  503F               	movf	(btemp+10)^0,w,c
  3965  013B56  6E39               	movwf	(btemp+4)^0,c
  3966  013B58  5040               	movf	(btemp+11)^0,w,c
  3967  013B5A  6E3A               	movwf	(btemp+5)^0,c
  3968  013B5C  6A3B               	clrf	(btemp+6)^0,c
  3969  013B5E  6A3C               	clrf	(btemp+7)^0,c
  3970  013B60  0060  F0E7  FFE6   	movff	btemp+4,postinc1
  3971  013B66  0060  F0EB  FFE6   	movff	btemp+5,postinc1
  3972  013B6C  0060  F0EF  FFE6   	movff	btemp+6,postinc1
  3973  013B72  0060  F0F3  FFE6   	movff	btemp+7,postinc1
  3974  013B78  0E00               	movlw	0
  3975  013B7A  6EE6               	movwf	postinc1,c
  3976  013B7C  ECFB  F0AF         	call	___xxtofl	;wreg free
  3977  013B80  0060  F0D7  FFE6   	movff	btemp,postinc1
  3978  013B86  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3979  013B8C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3980  013B92  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3981  013B98  ECF8  F090         	call	___flmul	;wreg free
  3982  013B9C  0060  F0D7  FFE6   	movff	btemp,postinc1
  3983  013BA2  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3984  013BA8  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3985  013BAE  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3986  013BB4  ECEB  F098         	call	___fldiv	;wreg free
  3987  013BB8  0060  F0D7  FFE6   	movff	btemp,postinc1
  3988  013BBE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  3989  013BC4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
  3990  013BCA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
  3991  013BD0  ECEB  F098         	call	___fldiv	;wreg free
  3992  013BD4  D019               	goto	l1654
  3993  013BD6                     l8711:
  3994                           
  3995                           ;daq.c: 105:   return 0.0;
  3996  013BD6  0E00               	movlw	0
  3997  013BD8  6E35               	movwf	btemp^0,c
  3998  013BDA  0E00               	movlw	0
  3999  013BDC  6E36               	movwf	(btemp+1)^0,c
  4000  013BDE  0E00               	movlw	0
  4001  013BE0  6E37               	movwf	(btemp+2)^0,c
  4002  013BE2  0E00               	movlw	0
  4003  013BE4                     L2:
  4004  013BE4  6E38               	movwf	(btemp+3)^0,c
  4005  013BE6  D010               	goto	l1654
  4006  013BE8                     l8719:
  4007                           
  4008                           ;stkvar	_to_what @ sp[(0)+-2]
  4009  013BE8  0EFE               	movlw	-2
  4010  013BEA  50E3               	movf	plusw1,w,c
  4011  013BEC  6E3F               	movwf	(btemp+10)^0,c
  4012  013BEE  6A40               	clrf	(btemp+11)^0,c
  4013                           
  4014                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4015                           ; Switch size 1, requested type "simple"
  4016                           ; Number of cases is 1, Range of values is 0 to 0
  4017                           ; switch strategies available:
  4018                           ; Name         Instructions Cycles
  4019                           ; simple_byte            4     3 (average)
  4020                           ;	Chosen strategy is simple_byte
  4021  013BF0  5040               	movf	(btemp+11)^0,w,c
  4022  013BF2  0A00               	xorlw	0	; case 0
  4023  013BF4  A4D8               	btfss	status,2,c
  4024  013BF6  D7EF               	goto	l8711
  4025                           
  4026                           ; Switch size 1, requested type "simple"
  4027                           ; Number of cases is 2, Range of values is 0 to 1
  4028                           ; switch strategies available:
  4029                           ; Name         Instructions Cycles
  4030                           ; simple_byte            7     4 (average)
  4031                           ;	Chosen strategy is simple_byte
  4032  013BF8  503F               	movf	(btemp+10)^0,w,c
  4033  013BFA  0A00               	xorlw	0	; case 0
  4034  013BFC  B4D8               	btfsc	status,2,c
  4035  013BFE  D5C0               	goto	l8679
  4036  013C00  0A01               	xorlw	1	; case 1
  4037  013C02  B4D8               	btfsc	status,2,c
  4038  013C04  D784               	goto	l8705
  4039  013C06  D7E7               	goto	l8711
  4040  013C08                     l1654:
  4041                           
  4042                           ; _conv_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
  4043  013C08  52E5               	movf	postdec1,f,c
  4044  013C0A  52E5               	movf	postdec1,f,c
  4045  013C0C  0012               	return		;funcret
  4046  013C0E                     __end_of_conv_raw_result:
  4047                           	opt callstack 0
  4048                           
  4049 ;; *************** function _nanf *****************
  4050 ;; Defined at:
  4051 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nanf.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  s               2  [STACK] PTR const unsigned char 
  4054 ;;		 -> STR_33(1), 
  4055 ;; Auto vars:     Size  Location     Type
  4056 ;;  u               4  [STACK] struct .
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  4  [STACK] float 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr1l, fsr1h, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, btemp+11
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/4
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4070 ;;Total ram usage:        0 bytes
  4071 ;; Hardware stack levels used:    1
  4072 ;; Hardware stack levels required when called:    6
  4073 ;; This function calls:
  4074 ;;		Nothing
  4075 ;; This function is called by:
  4076 ;;		_conv_raw_result
  4077 ;; This function uses a reentrant model
  4078 ;;
  4079                           
  4080                           	psect	text14
  4081  018032                     __ptext14:
  4082                           	opt callstack 0
  4083  018032                     _nanf:
  4084                           	opt callstack 0
  4085                           
  4086                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4087  018032  52E6               	movf	postinc1,f,c
  4088  018034  52E6               	movf	postinc1,f,c
  4089  018036  52E6               	movf	postinc1,f,c
  4090  018038  52E6               	movf	postinc1,f,c
  4091                           
  4092                           ;incstack = 0
  4093  01803A  0EFF               	movlw	255
  4094  01803C  6E3D               	movwf	(btemp+8)^0,c
  4095  01803E  0EFF               	movlw	255
  4096  018040  6E3E               	movwf	(btemp+9)^0,c
  4097  018042  0EFF               	movlw	255
  4098  018044  6E3F               	movwf	(btemp+10)^0,c
  4099  018046  0E7F               	movlw	127
  4100  018048  6E40               	movwf	(btemp+11)^0,c
  4101                           
  4102                           ;stkvar	_u @ sp[(-4)+0]
  4103  01804A  0EFC               	movlw	-4
  4104  01804C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4105  018052  0EFD               	movlw	-3
  4106  018054  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4107  01805A  0EFE               	movlw	-2
  4108  01805C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4109  018062  0EFF               	movlw	-1
  4110  018064  0060  F103  FFE3   	movff	btemp+11,plusw1
  4111                           
  4112                           ;stkvar	_u @ sp[(-4)+0]
  4113  01806A  0EFC               	movlw	-4
  4114  01806C  006F FF8C  F035    	movff	plusw1,btemp
  4115  018072  0EFD               	movlw	-3
  4116  018074  006F FF8C  F036    	movff	plusw1,btemp+1
  4117  01807A  0EFE               	movlw	-2
  4118  01807C  006F FF8C  F037    	movff	plusw1,btemp+2
  4119  018082  0EFF               	movlw	-1
  4120  018084  006F FF8C  F038    	movff	plusw1,btemp+3
  4121                           
  4122                           ; _nanf: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
  4123  01808A  0EFA               	movlw	250
  4124  01808C  26E1               	addwf	fsr1l,f,c
  4125  01808E  0EFF               	movlw	255
  4126  018090  22E2               	addwfc	fsr1h,f,c
  4127  018092  0012               	return		;funcret
  4128  018094                     __end_of_nanf:
  4129                           	opt callstack 0
  4130                           
  4131 ;; *************** function _get_raw_result *****************
  4132 ;; Defined at:
  4133 ;;		line 72 in file "daq.c"
  4134 ;; Parameters:    Size  Location     Type
  4135 ;;  index           1  [STACK] enum E16136
  4136 ;; Auto vars:     Size  Location     Type
  4137 ;;		None
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  2  [STACK] unsigned short 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, prodl, prodh
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/4
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4151 ;;Total ram usage:        0 bytes
  4152 ;; Hardware stack levels used:    1
  4153 ;; Hardware stack levels required when called:    6
  4154 ;; This function calls:
  4155 ;;		Nothing
  4156 ;; This function is called by:
  4157 ;;		_main
  4158 ;;		_conv_raw_result
  4159 ;; This function uses a reentrant model
  4160 ;;
  4161                           
  4162                           	psect	text15
  4163  018C12                     __ptext15:
  4164                           	opt callstack 0
  4165  018C12                     _get_raw_result:
  4166                           	opt callstack 24
  4167                           
  4168                           ;daq.c: 72: adc_result_t get_raw_result(adcc_channel_t index);daq.c: 73: {;daq.c: 74:  r
      +                          eturn R.raw_adc[index];
  4169                           ;stkvar	_index @ sp[(0)+-1]
  4170                           
  4171                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4172                           ;incstack = 0
  4173  018C12  0EFF               	movlw	-1
  4174  018C14  50E3               	movf	plusw1,w,c
  4175  018C16  0D02               	mullw	2
  4176  018C18  50F3               	movf	243,w,c
  4177  018C1A  0FA3               	addlw	low _R
  4178  018C1C  6ED9               	movwf	fsr2l,c
  4179  018C1E  6ADA               	clrf	fsr2h,c
  4180  018C20  006F FF78  F035    	movff	postinc2,btemp
  4181  018C26  006F FF74  F036    	movff	postdec2,btemp+1
  4182                           
  4183                           ; _get_raw_result: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1
      +                          , argsize = 1, vargsize = 0
  4184  018C2C  52E5               	movf	postdec1,f,c
  4185  018C2E  0012               	return		;funcret
  4186  018C30                     __end_of_get_raw_result:
  4187                           	opt callstack 0
  4188                           
  4189 ;; *************** function ___xxtofl *****************
  4190 ;; Defined at:
  4191 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/xxtofl.c"
  4192 ;; Parameters:    Size  Location     Type
  4193 ;;  sign            1  [STACK] unsigned char 
  4194 ;;  val             4  [STACK] long 
  4195 ;; Auto vars:     Size  Location     Type
  4196 ;;  arg             4  [STACK] unsigned long 
  4197 ;;  exp             1  [STACK] unsigned char 
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  4  [STACK] unsigned char 
  4200 ;; Registers used:
  4201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/4
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used:    1
  4213 ;; Hardware stack levels required when called:    6
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_conv_raw_result
  4218 ;; This function uses a reentrant model
  4219 ;;
  4220                           
  4221                           	psect	text16
  4222  015FF6                     __ptext16:
  4223                           	opt callstack 0
  4224  015FF6                     ___xxtofl:
  4225                           	opt callstack 0
  4226                           
  4227                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, argsize = 5 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4228  015FF6  0E05               	movlw	5
  4229  015FF8  26E1               	addwf	fsr1l,f,c
  4230  015FFA  0E00               	movlw	0
  4231  015FFC  22E2               	addwfc	fsr1h,f,c
  4232                           
  4233                           ;stkvar	_sign @ sp[(-5)+-1]
  4234                           
  4235                           ;incstack = 0
  4236  015FFE  0EFA               	movlw	-6
  4237  016000  50E3               	movf	plusw1,w,c
  4238  016002  B4D8               	btfsc	status,2,c
  4239  016004  D01D               	goto	l8149
  4240                           
  4241                           ;stkvar	_val @ sp[(-5)+-5]
  4242  016006  0EF9               	movlw	-7
  4243  016008  AEE3               	btfss	plusw1,7,c
  4244  01600A  D01A               	goto	l8149
  4245                           
  4246                           ;stkvar	_val @ sp[(-5)+-5]
  4247  01600C  0EF6               	movlw	-10
  4248  01600E  006F FF8C  F03D    	movff	plusw1,btemp+8
  4249  016014  0EF7               	movlw	-9
  4250  016016  006F FF8C  F03E    	movff	plusw1,btemp+9
  4251  01601C  0EF8               	movlw	-8
  4252  01601E  006F FF8C  F03F    	movff	plusw1,btemp+10
  4253  016024  0EF9               	movlw	-7
  4254  016026  006F FF8C  F040    	movff	plusw1,btemp+11
  4255  01602C  1E3D               	comf	(btemp+8)^0,f,c
  4256  01602E  1E3E               	comf	(btemp+9)^0,f,c
  4257  016030  1E3F               	comf	(btemp+10)^0,f,c
  4258  016032  1E40               	comf	(btemp+11)^0,f,c
  4259  016034  2A3D               	incf	(btemp+8)^0,f,c
  4260  016036  0E00               	movlw	0
  4261  016038  223E               	addwfc	(btemp+9)^0,f,c
  4262  01603A  223F               	addwfc	(btemp+10)^0,f,c
  4263  01603C  2240               	addwfc	(btemp+11)^0,f,c
  4264  01603E  D010               	goto	L3
  4265  016040                     l8149:
  4266                           
  4267                           ;stkvar	_val @ sp[(-5)+-5]
  4268  016040  0EF6               	movlw	-10
  4269  016042  006F FF8C  F03D    	movff	plusw1,btemp+8
  4270  016048  0EF7               	movlw	-9
  4271  01604A  006F FF8C  F03E    	movff	plusw1,btemp+9
  4272  016050  0EF8               	movlw	-8
  4273  016052  006F FF8C  F03F    	movff	plusw1,btemp+10
  4274  016058  0EF9               	movlw	-7
  4275  01605A  006F FF8C  F040    	movff	plusw1,btemp+11
  4276  016060                     L3:
  4277                           
  4278                           ;stkvar	_arg @ sp[(-5)+0]
  4279  016060  0EFB               	movlw	-5
  4280  016062  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  4281  016068  0EFC               	movlw	-4
  4282  01606A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  4283  016070  0EFD               	movlw	-3
  4284  016072  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  4285  016078  0EFE               	movlw	-2
  4286  01607A  0060  F103  FFE3   	movff	btemp+11,plusw1
  4287                           
  4288                           ;stkvar	_val @ sp[(-5)+-5]
  4289  016080  0EF6               	movlw	-10
  4290  016082  50E3               	movf	plusw1,w,c
  4291  016084  E113               	bnz	l8157
  4292  016086  0EF7               	movlw	-9
  4293  016088  50E3               	movf	plusw1,w,c
  4294  01608A  E110               	bnz	l8157
  4295  01608C  0EF8               	movlw	-8
  4296  01608E  50E3               	movf	plusw1,w,c
  4297  016090  E10D               	bnz	l8157
  4298  016092  0EF9               	movlw	-7
  4299  016094  50E3               	movf	plusw1,w,c
  4300  016096  A4D8               	btfss	status,2,c
  4301  016098  D009               	goto	l8157
  4302  01609A  0E00               	movlw	0
  4303  01609C  6E35               	movwf	btemp^0,c
  4304  01609E  0E00               	movlw	0
  4305  0160A0  6E36               	movwf	(btemp+1)^0,c
  4306  0160A2  0E00               	movlw	0
  4307  0160A4  6E37               	movwf	(btemp+2)^0,c
  4308  0160A6  0E00               	movlw	0
  4309  0160A8  6E38               	movwf	(btemp+3)^0,c
  4310  0160AA  D0A2               	goto	l2666
  4311  0160AC                     l8157:
  4312  0160AC  0E96               	movlw	150
  4313  0160AE  6E40               	movwf	(btemp+11)^0,c
  4314                           
  4315                           ;stkvar	_exp @ sp[(-5)+4]
  4316  0160B0  0EFF               	movlw	-1
  4317  0160B2  0060  F103  FFE3   	movff	btemp+11,plusw1
  4318  0160B8  D00B               	goto	l8161
  4319  0160BA                     l8159:
  4320                           
  4321                           ;stkvar	_exp @ sp[(-5)+4]
  4322  0160BA  0EFF               	movlw	-1
  4323  0160BC  2AE3               	incf	plusw1,f,c
  4324                           
  4325                           ;stkvar	_arg @ sp[(-5)+0]
  4326  0160BE  90D8               	bcf	status,0,c
  4327  0160C0  0EFE               	movlw	-2
  4328  0160C2  32E3               	rrcf	plusw1,f,c
  4329  0160C4  0EFD               	movlw	-3
  4330  0160C6  32E3               	rrcf	plusw1,f,c
  4331  0160C8  0EFC               	movlw	-4
  4332  0160CA  32E3               	rrcf	plusw1,f,c
  4333  0160CC  0EFB               	movlw	-5
  4334  0160CE  32E3               	rrcf	plusw1,f,c
  4335  0160D0                     l8161:
  4336                           
  4337                           ;stkvar	_arg @ sp[(-5)+0]
  4338  0160D0  50E1               	movf	fsr1l,w,c
  4339  0160D2  0FFB               	addlw	-5
  4340  0160D4  6ED9               	movwf	fsr2l,c
  4341  0160D6  50E2               	movf	fsr1h,w,c
  4342  0160D8  6EDA               	movwf	fsr2h,c
  4343  0160DA  0EFF               	movlw	255
  4344  0160DC  22DA               	addwfc	fsr2h,f,c
  4345  0160DE  52DE               	movf	postinc2,f,c
  4346  0160E0  52DE               	movf	postinc2,f,c
  4347  0160E2  52DE               	movf	postinc2,f,c
  4348  0160E4  0EFE               	movlw	254
  4349  0160E6  14DD               	andwf	postdec2,w,c
  4350  0160E8  B4D8               	btfsc	status,2,c
  4351  0160EA  D018               	goto	l8169
  4352  0160EC  D7E6               	goto	l8159
  4353  0160EE                     l8163:
  4354                           
  4355                           ;stkvar	_exp @ sp[(-5)+4]
  4356  0160EE  0EFF               	movlw	-1
  4357  0160F0  2AE3               	incf	plusw1,f,c
  4358                           
  4359                           ;stkvar	_arg @ sp[(-5)+0]
  4360  0160F2  50E1               	movf	fsr1l,w,c
  4361  0160F4  0FFB               	addlw	-5
  4362  0160F6  6ED9               	movwf	fsr2l,c
  4363  0160F8  50E2               	movf	fsr1h,w,c
  4364  0160FA  6EDA               	movwf	fsr2h,c
  4365  0160FC  0EFF               	movlw	255
  4366  0160FE  22DA               	addwfc	fsr2h,f,c
  4367  016100  2ADE               	incf	postinc2,f,c
  4368  016102  0E00               	movlw	0
  4369  016104  22DE               	addwfc	postinc2,f,c
  4370  016106  22DE               	addwfc	postinc2,f,c
  4371  016108  22DE               	addwfc	postinc2,f,c
  4372                           
  4373                           ;stkvar	_arg @ sp[(-5)+0]
  4374  01610A  90D8               	bcf	status,0,c
  4375  01610C  0EFE               	movlw	-2
  4376  01610E  32E3               	rrcf	plusw1,f,c
  4377  016110  0EFD               	movlw	-3
  4378  016112  32E3               	rrcf	plusw1,f,c
  4379  016114  0EFC               	movlw	-4
  4380  016116  32E3               	rrcf	plusw1,f,c
  4381  016118  0EFB               	movlw	-5
  4382  01611A  32E3               	rrcf	plusw1,f,c
  4383  01611C                     l8169:
  4384                           
  4385                           ;stkvar	_arg @ sp[(-5)+0]
  4386  01611C  50E1               	movf	fsr1l,w,c
  4387  01611E  0FFB               	addlw	-5
  4388  016120  6ED9               	movwf	fsr2l,c
  4389  016122  50E2               	movf	fsr1h,w,c
  4390  016124  6EDA               	movwf	fsr2h,c
  4391  016126  0EFF               	movlw	255
  4392  016128  22DA               	addwfc	fsr2h,f,c
  4393  01612A  52DE               	movf	postinc2,f,c
  4394  01612C  52DE               	movf	postinc2,f,c
  4395  01612E  52DE               	movf	postinc2,f,c
  4396  016130  0EFF               	movlw	255
  4397  016132  14DD               	andwf	postdec2,w,c
  4398  016134  B4D8               	btfsc	status,2,c
  4399  016136  D00C               	goto	l8173
  4400  016138  D7DA               	goto	l8163
  4401  01613A                     l8171:
  4402                           
  4403                           ;stkvar	_exp @ sp[(-5)+4]
  4404  01613A  0EFF               	movlw	-1
  4405  01613C  06E3               	decf	plusw1,f,c
  4406                           
  4407                           ;stkvar	_arg @ sp[(-5)+0]
  4408  01613E  90D8               	bcf	status,0,c
  4409  016140  0EFB               	movlw	-5
  4410  016142  36E3               	rlcf	plusw1,f,c
  4411  016144  0EFC               	movlw	-4
  4412  016146  36E3               	rlcf	plusw1,f,c
  4413  016148  0EFD               	movlw	-3
  4414  01614A  36E3               	rlcf	plusw1,f,c
  4415  01614C  0EFE               	movlw	-2
  4416  01614E  36E3               	rlcf	plusw1,f,c
  4417  016150                     l8173:
  4418                           
  4419                           ;stkvar	_arg @ sp[(-5)+0]
  4420  016150  0EFD               	movlw	-3
  4421  016152  BEE3               	btfsc	plusw1,7,c
  4422  016154  D007               	goto	u8280
  4423                           
  4424                           ;stkvar	_exp @ sp[(-5)+4]
  4425  016156  0EFF               	movlw	-1
  4426  016158  006F FF8C  F035    	movff	plusw1,btemp
  4427  01615E  0E02               	movlw	2
  4428  016160  6035               	cpfslt	btemp^0,c
  4429  016162  D7EB               	goto	l8171
  4430  016164                     u8280:
  4431                           
  4432                           ;stkvar	_exp @ sp[(-5)+4]
  4433  016164  0EFF               	movlw	-1
  4434  016166  B0E3               	btfsc	plusw1,0,c
  4435  016168  D002               	goto	l8181
  4436                           
  4437                           ;stkvar	_arg @ sp[(-5)+0]
  4438  01616A  0EFD               	movlw	-3
  4439  01616C  9EE3               	bcf	plusw1,7,c
  4440  01616E                     l8181:
  4441                           
  4442                           ;stkvar	_exp @ sp[(-5)+4]
  4443  01616E  50E1               	movf	fsr1l,w,c
  4444  016170  0FFF               	addlw	-1
  4445  016172  6ED9               	movwf	fsr2l,c
  4446  016174  50E2               	movf	fsr1h,w,c
  4447  016176  6EDA               	movwf	fsr2h,c
  4448  016178  0EFF               	movlw	255
  4449  01617A  22DA               	addwfc	fsr2h,f,c
  4450  01617C  90D8               	bcf	status,0,c
  4451  01617E  32DF               	rrcf	indf2,f,c
  4452                           
  4453                           ;stkvar	_exp @ sp[(-5)+4]
  4454  016180  0EFF               	movlw	-1
  4455  016182  006F FF8C  F040    	movff	plusw1,btemp+11
  4456  016188  0060  F100  F039   	movff	btemp+11,btemp+4
  4457  01618E  6A3A               	clrf	(btemp+5)^0,c
  4458  016190  6A3B               	clrf	(btemp+6)^0,c
  4459  016192  6A3C               	clrf	(btemp+7)^0,c
  4460  016194  0060  F0E4  F03C   	movff	btemp+4,btemp+7
  4461  01619A  6A3B               	clrf	(btemp+6)^0,c
  4462  01619C  6A3A               	clrf	(btemp+5)^0,c
  4463  01619E  6A39               	clrf	(btemp+4)^0,c
  4464                           
  4465                           ;stkvar	_arg @ sp[(-5)+0]
  4466  0161A0  50E1               	movf	fsr1l,w,c
  4467  0161A2  0FFB               	addlw	-5
  4468  0161A4  6ED9               	movwf	fsr2l,c
  4469  0161A6  50E2               	movf	fsr1h,w,c
  4470  0161A8  6EDA               	movwf	fsr2h,c
  4471  0161AA  0EFF               	movlw	255
  4472  0161AC  22DA               	addwfc	fsr2h,f,c
  4473  0161AE  5039               	movf	(btemp+4)^0,w,c
  4474  0161B0  12DE               	iorwf	postinc2,f,c
  4475  0161B2  503A               	movf	(btemp+5)^0,w,c
  4476  0161B4  12DE               	iorwf	postinc2,f,c
  4477  0161B6  503B               	movf	(btemp+6)^0,w,c
  4478  0161B8  12DE               	iorwf	postinc2,f,c
  4479  0161BA  503C               	movf	(btemp+7)^0,w,c
  4480  0161BC  12DE               	iorwf	postinc2,f,c
  4481                           
  4482                           ;stkvar	_sign @ sp[(-5)+-1]
  4483  0161BE  0EFA               	movlw	-6
  4484  0161C0  50E3               	movf	plusw1,w,c
  4485  0161C2  B4D8               	btfsc	status,2,c
  4486  0161C4  D005               	goto	l8191
  4487                           
  4488                           ;stkvar	_val @ sp[(-5)+-5]
  4489  0161C6  0EF9               	movlw	-7
  4490  0161C8  AEE3               	btfss	plusw1,7,c
  4491  0161CA  D002               	goto	l8191
  4492                           
  4493                           ;stkvar	_arg @ sp[(-5)+0]
  4494  0161CC  0EFE               	movlw	-2
  4495  0161CE  8EE3               	bsf	plusw1,7,c
  4496  0161D0                     l8191:
  4497                           
  4498                           ;stkvar	_arg @ sp[(-5)+0]
  4499  0161D0  0EFB               	movlw	-5
  4500  0161D2  006F FF8C  F035    	movff	plusw1,btemp
  4501  0161D8  0EFC               	movlw	-4
  4502  0161DA  006F FF8C  F036    	movff	plusw1,btemp+1
  4503  0161E0  0EFD               	movlw	-3
  4504  0161E2  006F FF8C  F037    	movff	plusw1,btemp+2
  4505  0161E8  0EFE               	movlw	-2
  4506  0161EA  006F FF8C  F038    	movff	plusw1,btemp+3
  4507  0161F0                     l2666:
  4508                           
  4509                           ; ___xxtofl: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 5, args
      +                          ize = 5, vargsize = 0
  4510  0161F0  0EF6               	movlw	246
  4511  0161F2  26E1               	addwf	fsr1l,f,c
  4512  0161F4  0EFF               	movlw	255
  4513  0161F6  22E2               	addwfc	fsr1h,f,c
  4514  0161F8  0012               	return		;funcret
  4515  0161FA                     __end_of___xxtofl:
  4516                           	opt callstack 0
  4517                           
  4518 ;; *************** function _clear_adc_scan *****************
  4519 ;; Defined at:
  4520 ;;		line 64 in file "daq.c"
  4521 ;; Parameters:    Size  Location     Type
  4522 ;;		None
  4523 ;; Auto vars:     Size  Location     Type
  4524 ;;		None
  4525 ;; Return value:  Size  Location     Type
  4526 ;;                  1  [STACK] void 
  4527 ;; Registers used:
  4528 ;;		None
  4529 ;; Tracked objects:
  4530 ;;		On entry : 0/4
  4531 ;;		On exit  : 3F/0
  4532 ;;		Unchanged: 0/0
  4533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4535 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4537 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4538 ;;Total ram usage:        0 bytes
  4539 ;; Hardware stack levels used:    1
  4540 ;; Hardware stack levels required when called:    6
  4541 ;; This function calls:
  4542 ;;		Nothing
  4543 ;; This function is called by:
  4544 ;;		_main
  4545 ;; This function uses a reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text17
  4549  018E5E                     __ptext17:
  4550                           	opt callstack 0
  4551  018E5E                     _clear_adc_scan:
  4552                           	opt callstack 24
  4553                           
  4554                           ;daq.c: 66:  R.done = 0;
  4555                           
  4556                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4557                           ;incstack = 0
  4558  018E5E  0100               	movlb	0	; () banked
  4559  018E60  6BCE               	clrf	(_R+43)& (0+255),b	;volatile
  4560                           
  4561                           ; BSR set to: 0
  4562                           ; _clear_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
  4563  018E62  0012               	return		;funcret
  4564  018E64                     __end_of_clear_adc_scan:
  4565                           	opt callstack 0
  4566                           
  4567 ;; *************** function _check_help *****************
  4568 ;; Defined at:
  4569 ;;		line 40 in file "mconfig.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;  flipper         1  [STACK] _Bool 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1  [STACK] void 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4578 ;; Tracked objects:
  4579 ;;		On entry : 3F/1
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4587 ;;Total ram usage:        0 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:   18
  4590 ;; This function calls:
  4591 ;;		_StartTimer
  4592 ;;		_TimerDone
  4593 ;;		_display_help
  4594 ;;		_display_info
  4595 ;;		_get_vterm_ptr
  4596 ;;		_help_button
  4597 ;;		_mode_lamp_bright
  4598 ;;		_mode_lamp_dim
  4599 ;;		_set_display_info
  4600 ;;		_set_temp_display_help
  4601 ;;		_set_vterm
  4602 ;;		_sprintf
  4603 ;;		_update_lcd
  4604 ;;		_vterm_dump
  4605 ;; This function is called by:
  4606 ;;		_main
  4607 ;; This function uses a reentrant model
  4608 ;;
  4609                           
  4610                           	psect	text18
  4611  015DE4                     __ptext18:
  4612                           	opt callstack 0
  4613  015DE4                     _check_help:
  4614                           	opt callstack 12
  4615                           
  4616                           ;mconfig.c: 40: void check_help(_Bool flipper);mconfig.c: 41: {;mconfig.c: 45:  if (help
      +                          _button() && display_info() != DIS_HELP) {
  4617                           
  4618                           ; BSR set to: 0
  4619                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4620                           ;incstack = 0
  4621  015DE4  ECFA  F0C2         	call	_help_button	;wreg free
  4622  015DE8  5035               	movf	btemp^0,w,c
  4623  015DEA  B4D8               	btfsc	status,2,c
  4624  015DEC  D0D0               	goto	l10303
  4625  015DEE  EC1F  F0C7         	call	_display_info	;wreg free
  4626  015DF2  0435               	decf	btemp^0,w,c
  4627  015DF4  B4D8               	btfsc	status,2,c
  4628  015DF6  D0CB               	goto	l10303
  4629                           
  4630                           ;mconfig.c: 46:   StartTimer(TMR_FLIPPER, 1500);
  4631  015DF8  0EDC               	movlw	220
  4632  015DFA  6EE6               	movwf	postinc1,c
  4633  015DFC  0E05               	movlw	5
  4634  015DFE  6EE6               	movwf	postinc1,c
  4635  015E00  0E0B               	movlw	11
  4636  015E02  6EE6               	movwf	postinc1,c
  4637  015E04  ECDC  F0C2         	call	_StartTimer	;wreg free
  4638                           
  4639                           ;mconfig.c: 47:   if (V.debug)
  4640  015E08  0101               	movlb	1	; () banked
  4641  015E0A  B39B               	btfsc	(_V+155)& (0+255),1,b	;volatile
  4642                           
  4643                           ; BSR set to: 1
  4644                           ;mconfig.c: 48:    vterm_dump();
  4645  015E0C  EC19  F0B6         	call	_vterm_dump	;wreg free
  4646                           
  4647                           ;mconfig.c: 50:   set_vterm(1);
  4648  015E10  0E01               	movlw	1
  4649  015E12  6EE6               	movwf	postinc1,c
  4650  015E14  EC62  F0C6         	call	_set_vterm	;wreg free
  4651                           
  4652                           ; BSR set to: 4
  4653                           ;mconfig.c: 51:   set_temp_display_help(display_info());
  4654  015E18  EC1F  F0C7         	call	_display_info	;wreg free
  4655  015E1C  5035               	movf	btemp^0,w,c
  4656  015E1E  6EE6               	movwf	postinc1,c
  4657  015E20  ECD7  F0C6         	call	_set_temp_display_help	;wreg free
  4658                           
  4659                           ; BSR set to: 1
  4660                           ;mconfig.c: 52:   set_display_info(DIS_HELP);
  4661  015E24  0E01               	movlw	1
  4662  015E26  6EE6               	movwf	postinc1,c
  4663  015E28  EC18  F0C6         	call	_set_display_info	;wreg free
  4664                           
  4665                           ;mconfig.c: 53:   if (flipper) {
  4666                           ;stkvar	_flipper @ sp[(0)+-1]
  4667  015E2C  0EFF               	movlw	-1
  4668  015E2E  50E3               	movf	plusw1,w,c
  4669  015E30  B4D8               	btfsc	status,2,c
  4670  015E32  D019               	goto	l10291
  4671                           
  4672                           ;mconfig.c: 54:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_date);
  4673  015E34  0EB3               	movlw	low STR_15
  4674  015E36  6EE6               	movwf	postinc1,c
  4675  015E38  0EFF               	movlw	high STR_15
  4676  015E3A  6EE6               	movwf	postinc1,c
  4677  015E3C  0E0C               	movlw	low STR_17
  4678  015E3E  6EE6               	movwf	postinc1,c
  4679  015E40  0EFF               	movlw	high STR_17
  4680  015E42  6EE6               	movwf	postinc1,c
  4681  015E44  0E01               	movlw	1
  4682  015E46  6EE6               	movwf	postinc1,c
  4683  015E48  0E00               	movlw	0
  4684  015E4A  6EE6               	movwf	postinc1,c
  4685  015E4C  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  4686  015E50  0060  F0D7  FFE6   	movff	btemp,postinc1
  4687  015E56  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4688  015E5C  0E06               	movlw	6
  4689  015E5E  6EE6               	movwf	postinc1,c
  4690  015E60  ECDF  F0B8         	call	_sprintf	;wreg free
  4691                           
  4692                           ;mconfig.c: 55:   } else {
  4693  015E64  D018               	goto	l1554
  4694  015E66                     l10291:
  4695                           
  4696                           ;mconfig.c: 56:    sprintf(get_vterm_ptr(0, 1), "HELP %s           ", build_time);
  4697  015E66  0EC9               	movlw	low STR_16
  4698  015E68  6EE6               	movwf	postinc1,c
  4699  015E6A  0EFF               	movlw	high STR_16
  4700  015E6C  6EE6               	movwf	postinc1,c
  4701  015E6E  0E0C               	movlw	low STR_17
  4702  015E70  6EE6               	movwf	postinc1,c
  4703  015E72  0EFF               	movlw	high STR_17
  4704  015E74  6EE6               	movwf	postinc1,c
  4705  015E76  0E01               	movlw	1
  4706  015E78  6EE6               	movwf	postinc1,c
  4707  015E7A  0E00               	movlw	0
  4708  015E7C  6EE6               	movwf	postinc1,c
  4709  015E7E  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  4710  015E82  0060  F0D7  FFE6   	movff	btemp,postinc1
  4711  015E88  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4712  015E8E  0E06               	movlw	6
  4713  015E90  6EE6               	movwf	postinc1,c
  4714  015E92  ECDF  F0B8         	call	_sprintf	;wreg free
  4715  015E96                     l1554:
  4716                           
  4717                           ;mconfig.c: 58:   sprintf(get_vterm_ptr(1, 1), "%s       ", T[V.help_id].display);
  4718  015E96  0101               	movlb	1	; () banked
  4719  015E98  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4720  015E9A  32E8               	rrcf	wreg,f,c
  4721  015E9C  32E8               	rrcf	wreg,f,c
  4722  015E9E  0B03               	andlw	3
  4723  015EA0  0D24               	mullw	36
  4724  015EA2  0E12               	movlw	18
  4725  015EA4  26F3               	addwf	243,f,c
  4726  015EA6  0E00               	movlw	0
  4727  015EA8  22F4               	addwfc	244,f,c
  4728  015EAA  0E51               	movlw	low _T
  4729  015EAC  6E3F               	movwf	(btemp+10)^0,c
  4730  015EAE  0EFE               	movlw	high _T
  4731  015EB0  6E40               	movwf	(btemp+11)^0,c
  4732  015EB2  50F3               	movf	243,w,c
  4733  015EB4  263F               	addwf	(btemp+10)^0,f,c
  4734  015EB6  50F4               	movf	244,w,c
  4735  015EB8  2240               	addwfc	(btemp+11)^0,f,c
  4736  015EBA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4737  015EC0  0060  F103  FFE6   	movff	btemp+11,postinc1
  4738  015EC6  0EBF               	movlw	low STR_19
  4739  015EC8  6EE6               	movwf	postinc1,c
  4740  015ECA  0EFF               	movlw	high STR_19
  4741  015ECC  6EE6               	movwf	postinc1,c
  4742  015ECE  0E01               	movlw	1
  4743  015ED0  6EE6               	movwf	postinc1,c
  4744  015ED2  0E01               	movlw	1
  4745  015ED4  6EE6               	movwf	postinc1,c
  4746  015ED6  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  4747  015EDA  0060  F0D7  FFE6   	movff	btemp,postinc1
  4748  015EE0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4749  015EE6  0E06               	movlw	6
  4750  015EE8  6EE6               	movwf	postinc1,c
  4751  015EEA  ECDF  F0B8         	call	_sprintf	;wreg free
  4752                           
  4753                           ;mconfig.c: 59:   sprintf(get_vterm_ptr(2, 1), "%s       ", T[V.help_id].message);
  4754  015EEE  0101               	movlb	1	; () banked
  4755  015EF0  399B               	swapf	(_V+155)& (0+255),w,b	;volatile
  4756  015EF2  32E8               	rrcf	wreg,f,c
  4757  015EF4  32E8               	rrcf	wreg,f,c
  4758  015EF6  0B03               	andlw	3
  4759  015EF8  0D24               	mullw	36
  4760  015EFA  0E51               	movlw	low _T
  4761  015EFC  6E3F               	movwf	(btemp+10)^0,c
  4762  015EFE  0EFE               	movlw	high _T
  4763  015F00  6E40               	movwf	(btemp+11)^0,c
  4764  015F02  50F3               	movf	243,w,c
  4765  015F04  263F               	addwf	(btemp+10)^0,f,c
  4766  015F06  50F4               	movf	244,w,c
  4767  015F08  2240               	addwfc	(btemp+11)^0,f,c
  4768  015F0A  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  4769  015F10  0060  F103  FFE6   	movff	btemp+11,postinc1
  4770  015F16  0EBF               	movlw	low STR_19
  4771  015F18  6EE6               	movwf	postinc1,c
  4772  015F1A  0EFF               	movlw	high STR_19
  4773  015F1C  6EE6               	movwf	postinc1,c
  4774  015F1E  0E01               	movlw	1
  4775  015F20  6EE6               	movwf	postinc1,c
  4776  015F22  0E02               	movlw	2
  4777  015F24  6EE6               	movwf	postinc1,c
  4778  015F26  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  4779  015F2A  0060  F0D7  FFE6   	movff	btemp,postinc1
  4780  015F30  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4781  015F36  0E06               	movlw	6
  4782  015F38  6EE6               	movwf	postinc1,c
  4783  015F3A  ECDF  F0B8         	call	_sprintf	;wreg free
  4784                           
  4785                           ;mconfig.c: 60:   V.help_id++;
  4786  015F3E  EE20  F19B         	lfsr	2,_V+155	;volatile
  4787  015F42  38DF               	swapf	223,w,c
  4788  015F44  6E40               	movwf	(btemp+11)^0,c
  4789  015F46  3240               	rrcf	(btemp+11)^0,f,c
  4790  015F48  3040               	rrcf	(btemp+11)^0,w,c
  4791  015F4A  0B03               	andlw	3
  4792  015F4C  6E40               	movwf	(btemp+11)^0,c
  4793  015F4E  2A40               	incf	(btemp+11)^0,f,c
  4794  015F50  3A40               	swapf	(btemp+11)^0,f,c
  4795  015F52  3640               	rlcf	(btemp+11)^0,f,c
  4796  015F54  3640               	rlcf	(btemp+11)^0,f,c
  4797  015F56  50DF               	movf	223,w,c
  4798  015F58  1840               	xorwf	(btemp+11)^0,w,c
  4799  015F5A  0B3F               	andlw	-193
  4800  015F5C  1840               	xorwf	(btemp+11)^0,w,c
  4801  015F5E  6EDF               	movwf	223,c
  4802                           
  4803                           ;mconfig.c: 61:   StartTimer(TMR_HELPDIS, 3000);
  4804  015F60  0EB8               	movlw	184
  4805  015F62  6EE6               	movwf	postinc1,c
  4806  015F64  0E0B               	movlw	11
  4807  015F66  6EE6               	movwf	postinc1,c
  4808  015F68  0E09               	movlw	9
  4809  015F6A  6EE6               	movwf	postinc1,c
  4810  015F6C  ECDC  F0C2         	call	_StartTimer	;wreg free
  4811                           
  4812                           ;mconfig.c: 62:   StartTimer(TMR_INFO, 3000);
  4813  015F70  0EB8               	movlw	184
  4814  015F72  6EE6               	movwf	postinc1,c
  4815  015F74  0E0B               	movlw	11
  4816  015F76  6EE6               	movwf	postinc1,c
  4817  015F78  0E07               	movlw	7
  4818  015F7A  6EE6               	movwf	postinc1,c
  4819  015F7C  ECDC  F0C2         	call	_StartTimer	;wreg free
  4820                           
  4821                           ;mconfig.c: 63:   mode_lamp_bright();
  4822  015F80  ECE6  F0C6         	call	_mode_lamp_bright	;wreg free
  4823                           
  4824                           ;mconfig.c: 64:   update_lcd(1);
  4825  015F84  0E01               	movlw	1
  4826  015F86  6EE6               	movwf	postinc1,c
  4827  015F88  EC58  F0B8         	call	_update_lcd	;wreg free
  4828                           
  4829                           ;mconfig.c: 65:  } else {
  4830  015F8C  D032               	goto	l1558
  4831  015F8E                     l10303:
  4832                           
  4833                           ;mconfig.c: 66:   if (TimerDone(TMR_HELPDIS)) {
  4834  015F8E  0E09               	movlw	9
  4835  015F90  6EE6               	movwf	postinc1,c
  4836  015F92  ECA3  F0C5         	call	_TimerDone	;wreg free
  4837  015F96  5035               	movf	btemp^0,w,c
  4838  015F98  B4D8               	btfsc	status,2,c
  4839  015F9A  D02B               	goto	l1558
  4840                           
  4841                           ;mconfig.c: 67:    set_vterm(0);
  4842  015F9C  0E00               	movlw	0
  4843  015F9E  6EE6               	movwf	postinc1,c
  4844  015FA0  EC62  F0C6         	call	_set_vterm	;wreg free
  4845                           
  4846                           ; BSR set to: 4
  4847                           ;mconfig.c: 68:    V.help = 0;
  4848  015FA4  0101               	movlb	1	; () banked
  4849  015FA6  959B               	bcf	(_V+155)& (0+255),2,b	;volatile
  4850                           
  4851                           ; BSR set to: 1
  4852                           ;mconfig.c: 69:    set_display_info(display_help());
  4853  015FA8  EC23  F0C7         	call	_display_help	;wreg free
  4854  015FAC  5035               	movf	btemp^0,w,c
  4855  015FAE  6EE6               	movwf	postinc1,c
  4856  015FB0  EC18  F0C6         	call	_set_display_info	;wreg free
  4857                           
  4858                           ;mconfig.c: 70:    mode_lamp_dim(V.mode_pwm);
  4859  015FB4  0060  F657  FFE6   	movff	_V+149,postinc1
  4860  015FBA  0060  F65B  FFE6   	movff	_V+150,postinc1
  4861  015FC0  EC8B  F0C6         	call	_mode_lamp_dim	;wreg free
  4862                           
  4863                           ;mconfig.c: 71:    if (TimerDone(TMR_FLIPPER)) {
  4864  015FC4  0E0B               	movlw	11
  4865  015FC6  6EE6               	movwf	postinc1,c
  4866  015FC8  ECA3  F0C5         	call	_TimerDone	;wreg free
  4867  015FCC  5035               	movf	btemp^0,w,c
  4868  015FCE  B4D8               	btfsc	status,2,c
  4869  015FD0  D010               	goto	l1558
  4870                           
  4871                           ;mconfig.c: 72:     V.flipper = !V.flipper;
  4872  015FD2  0101               	movlb	1	; () banked
  4873  015FD4  51AA               	movf	(_V+170)& (0+255),w,b	;volatile
  4874  015FD6  A4D8               	btfss	status,2,c
  4875  015FD8  D002               	goto	u10650
  4876  015FDA  0E01               	movlw	1
  4877  015FDC  D001               	goto	u10660
  4878  015FDE                     u10650:
  4879  015FDE  0E00               	movlw	0
  4880  015FE0                     u10660:
  4881  015FE0  6FAA               	movwf	(_V+170)& (0+255),b	;volatile
  4882                           
  4883                           ; BSR set to: 1
  4884                           ;mconfig.c: 73:     StartTimer(TMR_FLIPPER, 1500);
  4885  015FE2  0EDC               	movlw	220
  4886  015FE4  6EE6               	movwf	postinc1,c
  4887  015FE6  0E05               	movlw	5
  4888  015FE8  6EE6               	movwf	postinc1,c
  4889  015FEA  0E0B               	movlw	11
  4890  015FEC  6EE6               	movwf	postinc1,c
  4891  015FEE  ECDC  F0C2         	call	_StartTimer	;wreg free
  4892  015FF2                     l1558:
  4893                           
  4894                           ; _check_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  4895  015FF2  52E5               	movf	postdec1,f,c
  4896  015FF4  0012               	return		;funcret
  4897  015FF6                     __end_of_check_help:
  4898                           	opt callstack 0
  4899                           
  4900 ;; *************** function _vterm_dump *****************
  4901 ;; Defined at:
  4902 ;;		line 118 in file "mconfig.c"
  4903 ;; Parameters:    Size  Location     Type
  4904 ;;		None
  4905 ;; Auto vars:     Size  Location     Type
  4906 ;;		None
  4907 ;; Return value:  Size  Location     Type
  4908 ;;                  1  [STACK] void 
  4909 ;; Registers used:
  4910 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  4911 ;; Tracked objects:
  4912 ;;		On entry : 3F/1
  4913 ;;		On exit  : 0/0
  4914 ;;		Unchanged: 0/0
  4915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  4916 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4917 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4919 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  4920 ;;Total ram usage:        0 bytes
  4921 ;; Hardware stack levels used:    1
  4922 ;; Hardware stack levels required when called:   17
  4923 ;; This function calls:
  4924 ;;		_WaitMs
  4925 ;;		_eaDogM_WriteStringAtPos
  4926 ;;		_get_vterm_ptr
  4927 ;;		_sprintf
  4928 ;;		_wait_lcd_done
  4929 ;; This function is called by:
  4930 ;;		_check_help
  4931 ;; This function uses a reentrant model
  4932 ;;
  4933                           
  4934                           	psect	text19
  4935  016C32                     __ptext19:
  4936                           	opt callstack 0
  4937  016C32                     _vterm_dump:
  4938                           	opt callstack 12
  4939                           
  4940                           ;mconfig.c: 120:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(0, 0), get_vterm_ptr(0,
      +                           1));
  4941                           
  4942                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  4943                           ;incstack = 0
  4944  016C32  0E01               	movlw	1
  4945  016C34  6EE6               	movwf	postinc1,c
  4946  016C36  0E00               	movlw	0
  4947  016C38  6EE6               	movwf	postinc1,c
  4948  016C3A  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  4949  016C3E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4950  016C44  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4951  016C4A  0E00               	movlw	0
  4952  016C4C  6EE6               	movwf	postinc1,c
  4953  016C4E  0E00               	movlw	0
  4954  016C50  6EE6               	movwf	postinc1,c
  4955  016C52  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  4956  016C56  0060  F0D7  FFE6   	movff	btemp,postinc1
  4957  016C5C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4958  016C62  0E88               	movlw	low STR_21
  4959  016C64  6EE6               	movwf	postinc1,c
  4960  016C66  0EFF               	movlw	high STR_21
  4961  016C68  6EE6               	movwf	postinc1,c
  4962  016C6A  0E01               	movlw	low (_V+1)
  4963  016C6C  6EE6               	movwf	postinc1,c
  4964  016C6E  0E01               	movlw	high (_V+1)
  4965  016C70  6EE6               	movwf	postinc1,c
  4966  016C72  0E08               	movlw	8
  4967  016C74  6EE6               	movwf	postinc1,c
  4968  016C76  ECDF  F0B8         	call	_sprintf	;wreg free
  4969                           
  4970                           ;mconfig.c: 121:  wait_lcd_done();
  4971  016C7A  EC54  F0C6         	call	_wait_lcd_done	;wreg free
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;mconfig.c: 122:  eaDogM_WriteStringAtPos(0, 0, V.buf);
  4975  016C7E  0E01               	movlw	low (_V+1)
  4976  016C80  6EE6               	movwf	postinc1,c
  4977  016C82  0E01               	movlw	high (_V+1)
  4978  016C84  6EE6               	movwf	postinc1,c
  4979  016C86  0E00               	movlw	0
  4980  016C88  6EE6               	movwf	postinc1,c
  4981  016C8A  0E00               	movlw	0
  4982  016C8C  6EE6               	movwf	postinc1,c
  4983  016C8E  EC4D  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  4984                           
  4985                           ; BSR set to: 59
  4986                           ;mconfig.c: 123:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(1, 0), get_vterm_ptr(1,
      +                           1));
  4987  016C92  0E01               	movlw	1
  4988  016C94  6EE6               	movwf	postinc1,c
  4989  016C96  0E01               	movlw	1
  4990  016C98  6EE6               	movwf	postinc1,c
  4991  016C9A  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  4992  016C9E  0060  F0D7  FFE6   	movff	btemp,postinc1
  4993  016CA4  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  4994  016CAA  0E00               	movlw	0
  4995  016CAC  6EE6               	movwf	postinc1,c
  4996  016CAE  0E01               	movlw	1
  4997  016CB0  6EE6               	movwf	postinc1,c
  4998  016CB2  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  4999  016CB6  0060  F0D7  FFE6   	movff	btemp,postinc1
  5000  016CBC  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5001  016CC2  0E88               	movlw	low STR_21
  5002  016CC4  6EE6               	movwf	postinc1,c
  5003  016CC6  0EFF               	movlw	high STR_21
  5004  016CC8  6EE6               	movwf	postinc1,c
  5005  016CCA  0E01               	movlw	low (_V+1)
  5006  016CCC  6EE6               	movwf	postinc1,c
  5007  016CCE  0E01               	movlw	high (_V+1)
  5008  016CD0  6EE6               	movwf	postinc1,c
  5009  016CD2  0E08               	movlw	8
  5010  016CD4  6EE6               	movwf	postinc1,c
  5011  016CD6  ECDF  F0B8         	call	_sprintf	;wreg free
  5012                           
  5013                           ;mconfig.c: 124:  wait_lcd_done();
  5014  016CDA  EC54  F0C6         	call	_wait_lcd_done	;wreg free
  5015                           
  5016                           ;mconfig.c: 125:  eaDogM_WriteStringAtPos(1, 0, V.buf);
  5017  016CDE  0E01               	movlw	low (_V+1)
  5018  016CE0  6EE6               	movwf	postinc1,c
  5019  016CE2  0E01               	movlw	high (_V+1)
  5020  016CE4  6EE6               	movwf	postinc1,c
  5021  016CE6  0E00               	movlw	0
  5022  016CE8  6EE6               	movwf	postinc1,c
  5023  016CEA  0E01               	movlw	1
  5024  016CEC  6EE6               	movwf	postinc1,c
  5025  016CEE  EC4D  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5026                           
  5027                           ;mconfig.c: 126:  sprintf(V.buf, "vterm %x:%x   ", get_vterm_ptr(2, 0), get_vterm_ptr(2,
      +                           1));
  5028  016CF2  0E01               	movlw	1
  5029  016CF4  6EE6               	movwf	postinc1,c
  5030  016CF6  0E02               	movlw	2
  5031  016CF8  6EE6               	movwf	postinc1,c
  5032  016CFA  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  5033  016CFE  0060  F0D7  FFE6   	movff	btemp,postinc1
  5034  016D04  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5035  016D0A  0E00               	movlw	0
  5036  016D0C  6EE6               	movwf	postinc1,c
  5037  016D0E  0E02               	movlw	2
  5038  016D10  6EE6               	movwf	postinc1,c
  5039  016D12  ECE4  F0C3         	call	_get_vterm_ptr	;wreg free
  5040  016D16  0060  F0D7  FFE6   	movff	btemp,postinc1
  5041  016D1C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5042  016D22  0E88               	movlw	low STR_21
  5043  016D24  6EE6               	movwf	postinc1,c
  5044  016D26  0EFF               	movlw	high STR_21
  5045  016D28  6EE6               	movwf	postinc1,c
  5046  016D2A  0E01               	movlw	low (_V+1)
  5047  016D2C  6EE6               	movwf	postinc1,c
  5048  016D2E  0E01               	movlw	high (_V+1)
  5049  016D30  6EE6               	movwf	postinc1,c
  5050  016D32  0E08               	movlw	8
  5051  016D34  6EE6               	movwf	postinc1,c
  5052  016D36  ECDF  F0B8         	call	_sprintf	;wreg free
  5053                           
  5054                           ;mconfig.c: 127:  wait_lcd_done();
  5055  016D3A  EC54  F0C6         	call	_wait_lcd_done	;wreg free
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;mconfig.c: 128:  eaDogM_WriteStringAtPos(2, 0, V.buf);
  5059  016D3E  0E01               	movlw	low (_V+1)
  5060  016D40  6EE6               	movwf	postinc1,c
  5061  016D42  0E01               	movlw	high (_V+1)
  5062  016D44  6EE6               	movwf	postinc1,c
  5063  016D46  0E00               	movlw	0
  5064  016D48  6EE6               	movwf	postinc1,c
  5065  016D4A  0E02               	movlw	2
  5066  016D4C  6EE6               	movwf	postinc1,c
  5067  016D4E  EC4D  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5068                           
  5069                           ; BSR set to: 59
  5070                           ;mconfig.c: 129:  WaitMs(3000);
  5071  016D52  0EB8               	movlw	184
  5072  016D54  6EE6               	movwf	postinc1,c
  5073  016D56  0E0B               	movlw	11
  5074  016D58  6EE6               	movwf	postinc1,c
  5075  016D5A  EC32  F0C3         	call	_WaitMs	;wreg free
  5076                           
  5077                           ; _vterm_dump: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, ar
      +                          gsize = 0, vargsize = 0
  5078  016D5E  0012               	return		;funcret
  5079  016D60                     __end_of_vterm_dump:
  5080                           	opt callstack 0
  5081                           
  5082 ;; *************** function _sprintf *****************
  5083 ;; Defined at:
  5084 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_sprintf.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;  s               2  [STACK] PTR unsigned char 
  5087 ;;		 -> D.lcd(216), D(218), V(187), 
  5088 ;;  fmt             2  [STACK] PTR const unsigned char 
  5089 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  5090 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  5091 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  5092 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  5093 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
  5094 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
  5095 ;;		 -> STR_1(17), 
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;  f               6  [STACK] struct _IO_FILE
  5098 ;;  ap              2  [STACK] PTR void [1]
  5099 ;;		 -> ?_printf(2), ?_sprintf(2), 
  5100 ;;  ret             2    0        int 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  2  [STACK] int 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/4
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5110 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5111 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5113 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5114 ;;Total ram usage:        0 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:   14
  5117 ;; This function calls:
  5118 ;;		_vfprintf
  5119 ;; This function is called by:
  5120 ;;		_main
  5121 ;;		_check_help
  5122 ;;		_vterm_dump
  5123 ;; This function uses a reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text20
  5127  0171BE                     __ptext20:
  5128                           	opt callstack 0
  5129  0171BE                     _sprintf:
  5130                           	opt callstack 0
  5131                           
  5132                           ; autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  5133  0171BE  0E08               	movlw	8
  5134  0171C0  26E1               	addwf	fsr1l,f,c
  5135  0171C2  0E00               	movlw	0
  5136  0171C4  22E2               	addwfc	fsr1h,f,c
  5137                           
  5138                           ;incstack = 0
  5139  0171C6  0EFE               	movlw	254
  5140  0171C8  6E3F               	movwf	(btemp+10)^0,c
  5141  0171CA  0EFF               	movlw	255
  5142  0171CC  6E40               	movwf	(btemp+11)^0,c
  5143                           
  5144                           ;stkvar	?_sprintf @ sp[(-8)+-3]
  5145  0171CE  0EF5               	movlw	245
  5146  0171D0  24E1               	addwf	fsr1l,w,c
  5147  0171D2  6E3D               	movwf	(btemp+8)^0,c
  5148  0171D4  0EFF               	movlw	255
  5149  0171D6  20E2               	addwfc	fsr1h,w,c
  5150  0171D8  6E3E               	movwf	(btemp+9)^0,c
  5151  0171DA  503F               	movf	(btemp+10)^0,w,c
  5152  0171DC  263D               	addwf	(btemp+8)^0,f,c
  5153  0171DE  5040               	movf	(btemp+11)^0,w,c
  5154  0171E0  223E               	addwfc	(btemp+9)^0,f,c
  5155                           
  5156                           ;stkvar	_ap @ sp[(-8)+6]
  5157  0171E2  0EFF               	movlw	-1
  5158  0171E4  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  5159  0171EA  0EFE               	movlw	-2
  5160  0171EC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  5161                           
  5162                           ;stkvar	_s @ sp[(-8)+-3]
  5163  0171F2  0EF5               	movlw	-11
  5164  0171F4  006F FF8C  F03F    	movff	plusw1,btemp+10
  5165  0171FA  0EF6               	movlw	-10
  5166  0171FC  006F FF8C  F040    	movff	plusw1,btemp+11
  5167                           
  5168                           ;stkvar	_f @ sp[(-8)+0]
  5169  017202  0EF9               	movlw	-7
  5170  017204  0060  F103  FFE3   	movff	btemp+11,plusw1
  5171  01720A  0EF8               	movlw	-8
  5172  01720C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  5173                           
  5174                           ;stkvar	_f @ sp[(-8)+0]
  5175  017212  0EFA               	movlw	250
  5176  017214  24E1               	addwf	fsr1l,w,c
  5177  017216  6ED9               	movwf	fsr2l,c
  5178  017218  0EFF               	movlw	255
  5179  01721A  20E2               	addwfc	fsr1h,w,c
  5180  01721C  6EDA               	movwf	fsr2h,c
  5181  01721E  0E00               	movlw	0
  5182  017220  6EDE               	movwf	postinc2,c
  5183  017222  0E00               	movlw	0
  5184  017224  6EDD               	movwf	postdec2,c
  5185                           
  5186                           ;stkvar	_f @ sp[(-8)+0]
  5187  017226  0EFC               	movlw	252
  5188  017228  24E1               	addwf	fsr1l,w,c
  5189  01722A  6ED9               	movwf	fsr2l,c
  5190  01722C  0EFF               	movlw	255
  5191  01722E  20E2               	addwfc	fsr1h,w,c
  5192  017230  6EDA               	movwf	fsr2h,c
  5193  017232  0E00               	movlw	0
  5194  017234  6EDE               	movwf	postinc2,c
  5195  017236  0E00               	movlw	0
  5196  017238  6EDD               	movwf	postdec2,c
  5197                           
  5198                           ;stkvar	_ap @ sp[(-8)+6]
  5199  01723A  0EFE               	movlw	254
  5200  01723C  24E1               	addwf	fsr1l,w,c
  5201  01723E  6E35               	movwf	btemp^0,c
  5202  017240  0EFF               	movlw	255
  5203  017242  20E2               	addwfc	fsr1h,w,c
  5204  017244  6E36               	movwf	(btemp+1)^0,c
  5205  017246  0060  F0D7  FFE6   	movff	btemp,postinc1
  5206  01724C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5207                           
  5208                           ;stkvar	_fmt @ sp[(-10)+-5]
  5209  017252  0EF1               	movlw	-15
  5210  017254  006F FF8F FFE6     	movff	plusw1,postinc1
  5211  01725A  006F FF8F FFE6     	movff	plusw1,postinc1
  5212                           
  5213                           ;stkvar	_f @ sp[(-12)+0]
  5214  017260  0EF4               	movlw	244
  5215  017262  24E1               	addwf	fsr1l,w,c
  5216  017264  6E35               	movwf	btemp^0,c
  5217  017266  0EFF               	movlw	255
  5218  017268  20E2               	addwfc	fsr1h,w,c
  5219  01726A  6E36               	movwf	(btemp+1)^0,c
  5220  01726C  0060  F0D7  FFE6   	movff	btemp,postinc1
  5221  017272  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  5222  017278  ECBB  F0BB         	call	_vfprintf	;wreg free
  5223                           
  5224                           ;stkvar	_f @ sp[(-8)+0]
  5225  01727C  0EFA               	movlw	250
  5226  01727E  24E1               	addwf	fsr1l,w,c
  5227  017280  6ED9               	movwf	fsr2l,c
  5228  017282  0EFF               	movlw	255
  5229  017284  20E2               	addwfc	fsr1h,w,c
  5230  017286  6EDA               	movwf	fsr2h,c
  5231  017288  006F FF78  F03F    	movff	postinc2,btemp+10
  5232  01728E  006F FF74  F040    	movff	postdec2,btemp+11
  5233                           
  5234                           ;stkvar	_s @ sp[(-8)+-3]
  5235  017294  0EF5               	movlw	-11
  5236  017296  006F FF8C  F03D    	movff	plusw1,btemp+8
  5237  01729C  0EF6               	movlw	-10
  5238  01729E  006F FF8C  F03E    	movff	plusw1,btemp+9
  5239  0172A4  503F               	movf	(btemp+10)^0,w,c
  5240  0172A6  243D               	addwf	(btemp+8)^0,w,c
  5241  0172A8  6ED9               	movwf	fsr2l,c
  5242  0172AA  5040               	movf	(btemp+11)^0,w,c
  5243  0172AC  203E               	addwfc	(btemp+9)^0,w,c
  5244  0172AE  6EDA               	movwf	fsr2h,c
  5245  0172B0  0E00               	movlw	0
  5246  0172B2  6EDF               	movwf	indf2,c
  5247                           
  5248                           ; _sprintf: autosize = 8, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 14, args
      +                          ize = 4, vargsize = 0
  5249  0172B4  0EF8               	movlw	248
  5250  0172B6  26E1               	addwf	fsr1l,f,c
  5251  0172B8  0EFF               	movlw	255
  5252  0172BA  22E2               	addwfc	fsr1h,f,c
  5253  0172BC  52E5               	movf	postdec1,f,c
  5254  0172BE  50E7               	movf	indf1,w,c
  5255  0172C0  5EE1               	subwf	fsr1l,f,c
  5256  0172C2  0E00               	movlw	0
  5257  0172C4  5AE2               	subwfb	fsr1h,f,c
  5258  0172C6  0012               	return		;funcret
  5259  0172C8                     __end_of_sprintf:
  5260                           	opt callstack 0
  5261                           
  5262 ;; *************** function _get_vterm_ptr *****************
  5263 ;; Defined at:
  5264 ;;		line 113 in file "mconfig.c"
  5265 ;; Parameters:    Size  Location     Type
  5266 ;;  line            1  [STACK] unsigned char 
  5267 ;;  vterm           1  [STACK] unsigned char 
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;		None
  5270 ;; Return value:  Size  Location     Type
  5271 ;;                  2  [STACK] PTR unsigned char 
  5272 ;; Registers used:
  5273 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, prodl, prodh
  5274 ;; Tracked objects:
  5275 ;;		On entry : 0/4
  5276 ;;		On exit  : 0/0
  5277 ;;		Unchanged: 0/0
  5278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5283 ;;Total ram usage:        0 bytes
  5284 ;; Hardware stack levels used:    1
  5285 ;; Hardware stack levels required when called:    6
  5286 ;; This function calls:
  5287 ;;		Nothing
  5288 ;; This function is called by:
  5289 ;;		_main
  5290 ;;		_check_help
  5291 ;;		_vterm_dump
  5292 ;; This function uses a reentrant model
  5293 ;;
  5294                           
  5295                           	psect	text21
  5296  0187C8                     __ptext21:
  5297                           	opt callstack 0
  5298  0187C8                     _get_vterm_ptr:
  5299                           	opt callstack 24
  5300                           
  5301                           ;mconfig.c: 113: char * get_vterm_ptr(uint8_t line, uint8_t vterm);mconfig.c: 114: {;mco
      +                          nfig.c: 115:  return D.lcd[vterm & 0x03][line & 0x03];
  5302                           ;stkvar	_vterm @ sp[(0)+-2]
  5303                           
  5304                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5305                           ;incstack = 0
  5306  0187C8  0EFE               	movlw	-2
  5307  0187CA  50E3               	movf	plusw1,w,c
  5308  0187CC  0B03               	andlw	3
  5309  0187CE  0D36               	mullw	54
  5310  0187D0  0E00               	movlw	low _D
  5311  0187D2  6E35               	movwf	btemp^0,c
  5312  0187D4  0E04               	movlw	high _D
  5313  0187D6  6E36               	movwf	(btemp+1)^0,c
  5314  0187D8  50F3               	movf	243,w,c
  5315  0187DA  2635               	addwf	btemp^0,f,c
  5316  0187DC  50F4               	movf	244,w,c
  5317  0187DE  2236               	addwfc	(btemp+1)^0,f,c
  5318                           
  5319                           ;stkvar	_line @ sp[(0)+-1]
  5320  0187E0  0EFF               	movlw	-1
  5321  0187E2  50E3               	movf	plusw1,w,c
  5322  0187E4  0B03               	andlw	3
  5323  0187E6  0D12               	mullw	18
  5324  0187E8  50F3               	movf	243,w,c
  5325  0187EA  2635               	addwf	btemp^0,f,c
  5326  0187EC  50F4               	movf	244,w,c
  5327  0187EE  2236               	addwfc	(btemp+1)^0,f,c
  5328                           
  5329                           ; _get_vterm_ptr: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
  5330  0187F0  52E5               	movf	postdec1,f,c
  5331  0187F2  52E5               	movf	postdec1,f,c
  5332  0187F4  0012               	return		;funcret
  5333  0187F6                     __end_of_get_vterm_ptr:
  5334                           	opt callstack 0
  5335                           
  5336 ;; *************** function _WaitMs *****************
  5337 ;; Defined at:
  5338 ;;		line 32 in file "timers.c"
  5339 ;; Parameters:    Size  Location     Type
  5340 ;;  numMilliseco    2  [STACK] const unsigned short 
  5341 ;; Auto vars:     Size  Location     Type
  5342 ;;		None
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  1  [STACK] void 
  5345 ;; Registers used:
  5346 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/1
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5352 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5354 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5355 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5356 ;;Total ram usage:        0 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    7
  5359 ;; This function calls:
  5360 ;;		_StartTimer
  5361 ;;		_TimerDone
  5362 ;; This function is called by:
  5363 ;;		_main
  5364 ;;		_vterm_dump
  5365 ;; This function uses a reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text22
  5369  018664                     __ptext22:
  5370                           	opt callstack 0
  5371  018664                     _WaitMs:
  5372                           	opt callstack 21
  5373                           
  5374                           ;timers.c: 32: void WaitMs(const uint16_t numMilliseconds);timers.c: 33: {;timers.c: 34:
      +                            StartTimer(TMR_INTERNAL, numMilliseconds);
  5375                           ;stkvar	_numMilliseconds @ sp[(0)+-2]
  5376                           
  5377                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5378                           ;incstack = 0
  5379  018664  0EFE               	movlw	-2
  5380  018666  006F FF8F FFE6     	movff	plusw1,postinc1
  5381  01866C  006F FF8F FFE6     	movff	plusw1,postinc1
  5382  018672  0E00               	movlw	0
  5383  018674  6EE6               	movwf	postinc1,c
  5384  018676  ECDC  F0C2         	call	_StartTimer	;wreg free
  5385                           
  5386                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5387  01867A  D005               	goto	l8111
  5388  01867C                     l1484:
  5389                           
  5390                           ;timers.c: 36:   __nop();
  5391  01867C  F000               	nop	
  5392                           
  5393                           ;timers.c: 37:   __nop();
  5394  01867E  F000               	nop	
  5395                           
  5396                           ;timers.c: 38:   __nop();
  5397  018680  F000               	nop	
  5398                           
  5399                           ;timers.c: 39:   __nop();
  5400  018682  F000               	nop	
  5401  018684  0004               	clrwdt		;# 
  5402  018686                     l8111:
  5403                           
  5404                           ;timers.c: 35:  while (!TimerDone(TMR_INTERNAL)) {
  5405  018686  0E00               	movlw	0
  5406  018688  6EE6               	movwf	postinc1,c
  5407  01868A  ECA3  F0C5         	call	_TimerDone	;wreg free
  5408  01868E  5035               	movf	btemp^0,w,c
  5409  018690  B4D8               	btfsc	status,2,c
  5410  018692  D7F4               	goto	l1484
  5411                           
  5412                           ; _WaitMs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
  5413  018694  52E5               	movf	postdec1,f,c
  5414  018696  52E5               	movf	postdec1,f,c
  5415  018698  0012               	return		;funcret
  5416  01869A                     __end_of_WaitMs:
  5417                           	opt callstack 0
  5418                           
  5419 ;; *************** function _update_lcd *****************
  5420 ;; Defined at:
  5421 ;;		line 82 in file "mconfig.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  vterm           1  [STACK] unsigned char 
  5424 ;; Auto vars:     Size  Location     Type
  5425 ;;		None
  5426 ;; Return value:  Size  Location     Type
  5427 ;;                  1  [STACK] unsigned char 
  5428 ;; Registers used:
  5429 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5430 ;; Tracked objects:
  5431 ;;		On entry : 0/4
  5432 ;;		On exit  : 0/0
  5433 ;;		Unchanged: 0/0
  5434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5439 ;;Total ram usage:        0 bytes
  5440 ;; Hardware stack levels used:    1
  5441 ;; Hardware stack levels required when called:   17
  5442 ;; This function calls:
  5443 ;;		_eaDogM_WriteStringAtPos
  5444 ;;		_wait_lcd_done
  5445 ;; This function is called by:
  5446 ;;		_main
  5447 ;;		_check_help
  5448 ;; This function uses a reentrant model
  5449 ;;
  5450                           
  5451                           	psect	text23
  5452  0170B0                     __ptext23:
  5453                           	opt callstack 0
  5454  0170B0                     _update_lcd:
  5455                           	opt callstack 13
  5456                           
  5457                           ;mconfig.c: 82: uint8_t update_lcd(uint8_t vterm);mconfig.c: 83: {;mconfig.c: 84:  vterm
      +                           = vterm & 0x03;
  5458                           ;stkvar	_vterm @ sp[(0)+-1]
  5459                           
  5460                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5461                           ;incstack = 0
  5462  0170B0  0EFF               	movlw	-1
  5463  0170B2  006F FF8C  F035    	movff	plusw1,btemp
  5464  0170B8  0E03               	movlw	3
  5465  0170BA  1635               	andwf	btemp^0,f,c
  5466  0170BC  0EFF               	movlw	-1
  5467  0170BE  0060  F0D7  FFE3   	movff	btemp,plusw1
  5468                           
  5469                           ;mconfig.c: 86:  if (D.vterm >= 1 && vterm == 0)
  5470  0170C4  0104               	movlb	4	; () banked
  5471  0170C6  A1D8               	btfss	(_D+216)& (0+255),0,b
  5472  0170C8  D004               	goto	l10175
  5473                           
  5474                           ; BSR set to: 4
  5475                           ;stkvar	_vterm @ sp[(0)+-1]
  5476  0170CA  0EFF               	movlw	-1
  5477  0170CC  50E3               	movf	plusw1,w,c
  5478  0170CE  B4D8               	btfsc	status,2,c
  5479  0170D0  D074               	goto	l1562
  5480  0170D2                     l10175:
  5481                           
  5482                           ; BSR set to: 4
  5483                           ;mconfig.c: 89:  D.lcd[vterm][0][16] = 0;
  5484                           ;stkvar	_vterm @ sp[(0)+-1]
  5485  0170D2  0EFF               	movlw	-1
  5486  0170D4  50E3               	movf	plusw1,w,c
  5487  0170D6  0D36               	mullw	54
  5488  0170D8  0E10               	movlw	low (_D+16)
  5489  0170DA  24F3               	addwf	243,w,c
  5490  0170DC  6ED9               	movwf	fsr2l,c
  5491  0170DE  0E04               	movlw	high (_D+16)
  5492  0170E0  20F4               	addwfc	prodh,w,c
  5493  0170E2  6EDA               	movwf	fsr2h,c
  5494  0170E4  0E00               	movlw	0
  5495  0170E6  6EDF               	movwf	indf2,c
  5496                           
  5497                           ;mconfig.c: 90:  D.lcd[vterm][1][16] = 0;
  5498                           ;stkvar	_vterm @ sp[(0)+-1]
  5499  0170E8  0EFF               	movlw	-1
  5500  0170EA  50E3               	movf	plusw1,w,c
  5501  0170EC  0D36               	mullw	54
  5502  0170EE  0E22               	movlw	low (_D+34)
  5503  0170F0  24F3               	addwf	243,w,c
  5504  0170F2  6ED9               	movwf	fsr2l,c
  5505  0170F4  0E04               	movlw	high (_D+34)
  5506  0170F6  20F4               	addwfc	prodh,w,c
  5507  0170F8  6EDA               	movwf	fsr2h,c
  5508  0170FA  0E00               	movlw	0
  5509  0170FC  6EDF               	movwf	indf2,c
  5510                           
  5511                           ;mconfig.c: 91:  D.lcd[vterm][2][16] = 0;
  5512                           ;stkvar	_vterm @ sp[(0)+-1]
  5513  0170FE  0EFF               	movlw	-1
  5514  017100  50E3               	movf	plusw1,w,c
  5515  017102  0D36               	mullw	54
  5516  017104  0E34               	movlw	low (_D+52)
  5517  017106  24F3               	addwf	243,w,c
  5518  017108  6ED9               	movwf	fsr2l,c
  5519  01710A  0E04               	movlw	high (_D+52)
  5520  01710C  20F4               	addwfc	prodh,w,c
  5521  01710E  6EDA               	movwf	fsr2h,c
  5522  017110  0E00               	movlw	0
  5523  017112  6EDF               	movwf	indf2,c
  5524                           
  5525                           ; BSR set to: 4
  5526                           ;mconfig.c: 92:  wait_lcd_done();
  5527  017114  EC54  F0C6         	call	_wait_lcd_done	;wreg free
  5528                           
  5529                           ; BSR set to: 0
  5530                           ;mconfig.c: 93:  eaDogM_WriteStringAtPos(0, 0, D.lcd[vterm][0]);
  5531                           ;stkvar	_vterm @ sp[(0)+-1]
  5532  017118  0EFF               	movlw	-1
  5533  01711A  50E3               	movf	plusw1,w,c
  5534  01711C  0D36               	mullw	54
  5535  01711E  0E00               	movlw	low _D
  5536  017120  6E3F               	movwf	(btemp+10)^0,c
  5537  017122  0E04               	movlw	high _D
  5538  017124  6E40               	movwf	(btemp+11)^0,c
  5539  017126  50F3               	movf	243,w,c
  5540  017128  263F               	addwf	(btemp+10)^0,f,c
  5541  01712A  50F4               	movf	244,w,c
  5542  01712C  2240               	addwfc	(btemp+11)^0,f,c
  5543  01712E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5544  017134  0060  F103  FFE6   	movff	btemp+11,postinc1
  5545  01713A  0E00               	movlw	0
  5546  01713C  6EE6               	movwf	postinc1,c
  5547  01713E  0E00               	movlw	0
  5548  017140  6EE6               	movwf	postinc1,c
  5549  017142  EC4D  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5550                           
  5551                           ; BSR set to: 59
  5552                           ;mconfig.c: 94:  wait_lcd_done();
  5553  017146  EC54  F0C6         	call	_wait_lcd_done	;wreg free
  5554                           
  5555                           ; BSR set to: 0
  5556                           ;mconfig.c: 95:  eaDogM_WriteStringAtPos(1, 0, D.lcd[vterm][1]);
  5557                           ;stkvar	_vterm @ sp[(0)+-1]
  5558  01714A  0EFF               	movlw	-1
  5559  01714C  50E3               	movf	plusw1,w,c
  5560  01714E  0D36               	mullw	54
  5561  017150  0E00               	movlw	low _D
  5562  017152  6E3F               	movwf	(btemp+10)^0,c
  5563  017154  0E04               	movlw	high _D
  5564  017156  6E40               	movwf	(btemp+11)^0,c
  5565  017158  0E12               	movlw	18
  5566  01715A  263F               	addwf	(btemp+10)^0,f,c
  5567  01715C  0E00               	movlw	0
  5568  01715E  2240               	addwfc	(btemp+11)^0,f,c
  5569  017160  50F3               	movf	243,w,c
  5570  017162  263F               	addwf	(btemp+10)^0,f,c
  5571  017164  50F4               	movf	244,w,c
  5572  017166  2240               	addwfc	(btemp+11)^0,f,c
  5573  017168  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5574  01716E  0060  F103  FFE6   	movff	btemp+11,postinc1
  5575  017174  0E00               	movlw	0
  5576  017176  6EE6               	movwf	postinc1,c
  5577  017178  0E01               	movlw	1
  5578  01717A  6EE6               	movwf	postinc1,c
  5579  01717C  EC4D  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5580                           
  5581                           ; BSR set to: 59
  5582                           ;mconfig.c: 96:  wait_lcd_done();
  5583  017180  EC54  F0C6         	call	_wait_lcd_done	;wreg free
  5584                           
  5585                           ; BSR set to: 0
  5586                           ;mconfig.c: 97:  eaDogM_WriteStringAtPos(2, 0, D.lcd[vterm][2]);
  5587                           ;stkvar	_vterm @ sp[(0)+-1]
  5588  017184  0EFF               	movlw	-1
  5589  017186  50E3               	movf	plusw1,w,c
  5590  017188  0D36               	mullw	54
  5591  01718A  0E00               	movlw	low _D
  5592  01718C  6E3F               	movwf	(btemp+10)^0,c
  5593  01718E  0E04               	movlw	high _D
  5594  017190  6E40               	movwf	(btemp+11)^0,c
  5595  017192  0E24               	movlw	36
  5596  017194  263F               	addwf	(btemp+10)^0,f,c
  5597  017196  0E00               	movlw	0
  5598  017198  2240               	addwfc	(btemp+11)^0,f,c
  5599  01719A  50F3               	movf	243,w,c
  5600  01719C  263F               	addwf	(btemp+10)^0,f,c
  5601  01719E  50F4               	movf	244,w,c
  5602  0171A0  2240               	addwfc	(btemp+11)^0,f,c
  5603  0171A2  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  5604  0171A8  0060  F103  FFE6   	movff	btemp+11,postinc1
  5605  0171AE  0E00               	movlw	0
  5606  0171B0  6EE6               	movwf	postinc1,c
  5607  0171B2  0E02               	movlw	2
  5608  0171B4  6EE6               	movwf	postinc1,c
  5609  0171B6  EC4D  F0C3         	call	_eaDogM_WriteStringAtPos	;wreg free
  5610  0171BA                     l1562:
  5611                           
  5612                           ; _update_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, ar
      +                          gsize = 1, vargsize = 0
  5613  0171BA  52E5               	movf	postdec1,f,c
  5614  0171BC  0012               	return		;funcret
  5615  0171BE                     __end_of_update_lcd:
  5616                           	opt callstack 0
  5617                           
  5618 ;; *************** function _eaDogM_WriteStringAtPos *****************
  5619 ;; Defined at:
  5620 ;;		line 252 in file "eadog.c"
  5621 ;; Parameters:    Size  Location     Type
  5622 ;;  r               1  [STACK] const unsigned char 
  5623 ;;  c               1  [STACK] const unsigned char 
  5624 ;;  strPtr          2  [STACK] PTR unsigned char 
  5625 ;;		 -> D.lcd(216), D(218), V(187), 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  1  [STACK] void 
  5630 ;; Registers used:
  5631 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5632 ;; Tracked objects:
  5633 ;;		On entry : 3F/0
  5634 ;;		On exit  : 3F/3B
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5641 ;;Total ram usage:        0 bytes
  5642 ;; Hardware stack levels used:    1
  5643 ;; Hardware stack levels required when called:   16
  5644 ;; This function calls:
  5645 ;;		_eaDogM_WriteString
  5646 ;;		_send_lcd_cmd_dma
  5647 ;; This function is called by:
  5648 ;;		_update_lcd
  5649 ;;		_vterm_dump
  5650 ;; This function uses a reentrant model
  5651 ;;
  5652                           
  5653                           	psect	text24
  5654  01869A                     __ptext24:
  5655                           	opt callstack 0
  5656  01869A                     _eaDogM_WriteStringAtPos:
  5657                           	opt callstack 13
  5658                           
  5659                           ;eadog.c: 252: void eaDogM_WriteStringAtPos(const uint8_t r, const uint8_t c, char *strP
      +                          tr);eadog.c: 253: {;eadog.c: 254:  send_lcd_cmd_dma((0b10000000 + (r * 16) + c));
  5660                           ;stkvar	_c @ sp[(0)+-2]
  5661                           
  5662                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5663                           ;incstack = 0
  5664  01869A  0EFE               	movlw	-2
  5665  01869C  006F FF8C  F040    	movff	plusw1,btemp+11
  5666                           
  5667                           ;stkvar	_r @ sp[(0)+-1]
  5668  0186A2  0EFF               	movlw	-1
  5669  0186A4  50E3               	movf	plusw1,w,c
  5670  0186A6  0D10               	mullw	16
  5671  0186A8  50F3               	movf	243,w,c
  5672  0186AA  2440               	addwf	(btemp+11)^0,w,c
  5673  0186AC  0F80               	addlw	128
  5674  0186AE  6EE6               	movwf	postinc1,c
  5675  0186B0  EC32  F0C1         	call	_send_lcd_cmd_dma	;wreg free
  5676                           
  5677                           ;eadog.c: 255:  eaDogM_WriteString(strPtr);
  5678                           ;stkvar	_strPtr @ sp[(0)+-4]
  5679  0186B4  0EFC               	movlw	-4
  5680  0186B6  006F FF8F FFE6     	movff	plusw1,postinc1
  5681  0186BC  006F FF8F FFE6     	movff	plusw1,postinc1
  5682  0186C2  EC0F  F0BC         	call	_eaDogM_WriteString	;wreg free
  5683                           
  5684                           ; BSR set to: 59
  5685                           ; _eaDogM_WriteStringAtPos: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pa
      +                          rsize = 4, argsize = 4, vargsize = 0
  5686  0186C6  52E5               	movf	postdec1,f,c
  5687  0186C8  52E5               	movf	postdec1,f,c
  5688  0186CA  52E5               	movf	postdec1,f,c
  5689  0186CC  52E5               	movf	postdec1,f,c
  5690  0186CE  0012               	return		;funcret
  5691  0186D0                     __end_of_eaDogM_WriteStringAtPos:
  5692                           	opt callstack 0
  5693                           
  5694 ;; *************** function _send_lcd_cmd_dma *****************
  5695 ;; Defined at:
  5696 ;;		line 205 in file "eadog.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  strPtr          1  [STACK] unsigned char 
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1  [STACK] void 
  5703 ;; Registers used:
  5704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/3D
  5707 ;;		On exit  : 3F/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used:    1
  5716 ;; Hardware stack levels required when called:   15
  5717 ;; This function calls:
  5718 ;;		_printf
  5719 ;;		_ringBufS_flush
  5720 ;;		_start_lcd
  5721 ;;		_wait_lcd_done
  5722 ;;		_wait_lcd_set
  5723 ;; This function is called by:
  5724 ;;		_eaDogM_WriteCommand
  5725 ;;		_eaDogM_WriteStringAtPos
  5726 ;; This function uses a reentrant model
  5727 ;;
  5728                           
  5729                           	psect	text25
  5730  018264                     __ptext25:
  5731                           	opt callstack 0
  5732  018264                     _send_lcd_cmd_dma:
  5733                           	opt callstack 13
  5734                           
  5735                           ;eadog.c: 205: void send_lcd_cmd_dma(uint8_t strPtr);eadog.c: 206: {;eadog.c: 208:  wait
      +                          _lcd_set();
  5736                           
  5737                           ; BSR set to: 59
  5738                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5739                           ;incstack = 0
  5740  018264  EC32  F0C7         	call	_wait_lcd_set	;wreg free
  5741                           
  5742                           ; BSR set to: 0
  5743                           ;eadog.c: 210:  ringBufS_flush(spi_link.tx1a, 0);
  5744  018268  0E00               	movlw	0
  5745  01826A  6EE6               	movwf	postinc1,c
  5746  01826C  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  5747  018272  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  5748  018278  EC4C  F0BD         	call	_ringBufS_flush	;wreg free
  5749  01827C  92BC               	bcf	188,1,c	;volatile
  5750  01827E  94BC               	bcf	188,2,c	;volatile
  5751                           
  5752                           ;eadog.c: 213:  DMA1CON0bits.EN = 0;
  5753  018280  013B               	movlb	59	; () banked
  5754  018282  9FFC               	bcf	252,7,b	;volatile
  5755                           
  5756                           ; BSR set to: 59
  5757                           ;eadog.c: 214:  DMA1SSZ = 1;
  5758  018284  0E00               	movlw	0
  5759  018286  6FF8               	movwf	248,b	;volatile
  5760  018288  0E01               	movlw	1
  5761  01828A  6FF7               	movwf	247,b	;volatile
  5762                           
  5763                           ; BSR set to: 59
  5764                           ;eadog.c: 215:  DMA1CON0bits.EN = 1;
  5765  01828C  8FFC               	bsf	252,7,b	;volatile
  5766                           
  5767                           ; BSR set to: 59
  5768                           ;eadog.c: 216:  printf("%c", strPtr);
  5769                           ;stkvar	_strPtr @ sp[(0)+-1]
  5770  01828E  0EFF               	movlw	-1
  5771  018290  50E3               	movf	plusw1,w,c
  5772  018292  6EE6               	movwf	postinc1,c
  5773  018294  0E00               	movlw	0
  5774  018296  6EE6               	movwf	postinc1,c
  5775  018298  0EF9               	movlw	low STR_13
  5776  01829A  6EE6               	movwf	postinc1,c
  5777  01829C  0EFF               	movlw	high STR_13
  5778  01829E  6EE6               	movwf	postinc1,c
  5779  0182A0  0E04               	movlw	4
  5780  0182A2  6EE6               	movwf	postinc1,c
  5781  0182A4  EC4A  F0C0         	call	_printf	;wreg free
  5782                           
  5783                           ;eadog.c: 217:  start_lcd();
  5784  0182A8  EC35  F0C7         	call	_start_lcd	;wreg free
  5785                           
  5786                           ; BSR set to: 59
  5787                           ;eadog.c: 218:  wait_lcd_done();
  5788  0182AC  EC54  F0C6         	call	_wait_lcd_done	;wreg free
  5789                           
  5790                           ; BSR set to: 0
  5791  0182B0  82BC               	bsf	188,1,c	;volatile
  5792                           
  5793                           ; BSR set to: 0
  5794                           ; _send_lcd_cmd_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
  5795  0182B2  52E5               	movf	postdec1,f,c
  5796  0182B4  0012               	return		;funcret
  5797  0182B6                     __end_of_send_lcd_cmd_dma:
  5798                           	opt callstack 0
  5799                           
  5800 ;; *************** function _wait_lcd_done *****************
  5801 ;; Defined at:
  5802 ;;		line 141 in file "eadog.c"
  5803 ;; Parameters:    Size  Location     Type
  5804 ;;		None
  5805 ;; Auto vars:     Size  Location     Type
  5806 ;;		None
  5807 ;; Return value:  Size  Location     Type
  5808 ;;                  1  [STACK] void 
  5809 ;; Registers used:
  5810 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5811 ;; Tracked objects:
  5812 ;;		On entry : 0/1
  5813 ;;		On exit  : 3F/0
  5814 ;;		Unchanged: 0/0
  5815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5816 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5819 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5820 ;;Total ram usage:        0 bytes
  5821 ;; Hardware stack levels used:    1
  5822 ;; Hardware stack levels required when called:    7
  5823 ;; This function calls:
  5824 ;;		_wdtdelay
  5825 ;; This function is called by:
  5826 ;;		_send_lcd_cmd_dma
  5827 ;;		_update_lcd
  5828 ;;		_vterm_dump
  5829 ;; This function uses a reentrant model
  5830 ;;
  5831                           
  5832                           	psect	text26
  5833  018CA8                     __ptext26:
  5834                           	opt callstack 0
  5835  018CA8                     _wait_lcd_done:
  5836                           	opt callstack 22
  5837                           
  5838                           ;eadog.c: 143:  while (spi_link.LCD_DATA);
  5839                           
  5840                           ; BSR set to: 0
  5841                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5842                           ;incstack = 0
  5843  018CA8  0100               	movlb	0	; () banked
  5844  018CAA  B778               	btfsc	_spi_link& (0+255),3,b	;volatile
  5845  018CAC  D7FD               	goto	_wait_lcd_done
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;eadog.c: 144:  wdtdelay(50);
  5849  018CAE  0E32               	movlw	50
  5850  018CB0  6EE6               	movwf	postinc1,c
  5851  018CB2  0E00               	movlw	0
  5852  018CB4  6EE6               	movwf	postinc1,c
  5853  018CB6  0E00               	movlw	0
  5854  018CB8  6EE6               	movwf	postinc1,c
  5855  018CBA  0E00               	movlw	0
  5856  018CBC  6EE6               	movwf	postinc1,c
  5857  018CBE  ECD8  F0C0         	call	_wdtdelay	;wreg free
  5858                           
  5859                           ; BSR set to: 0
  5860                           ; _wait_lcd_done: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0,
      +                           argsize = 0, vargsize = 0
  5861  018CC2  0012               	return		;funcret
  5862  018CC4                     __end_of_wait_lcd_done:
  5863                           	opt callstack 0
  5864                           
  5865 ;; *************** function _wdtdelay *****************
  5866 ;; Defined at:
  5867 ;;		line 22 in file "eadog.c"
  5868 ;; Parameters:    Size  Location     Type
  5869 ;;  delay           4  [STACK] const unsigned long 
  5870 ;; Auto vars:     Size  Location     Type
  5871 ;;		None
  5872 ;; Return value:  Size  Location     Type
  5873 ;;                  1  [STACK] void 
  5874 ;; Registers used:
  5875 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp
  5876 ;; Tracked objects:
  5877 ;;		On entry : 0/0
  5878 ;;		On exit  : 3F/0
  5879 ;;		Unchanged: 0/0
  5880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5881 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5882 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5883 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5884 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5885 ;;Total ram usage:        0 bytes
  5886 ;; Hardware stack levels used:    1
  5887 ;; Hardware stack levels required when called:    6
  5888 ;; This function calls:
  5889 ;;		Nothing
  5890 ;; This function is called by:
  5891 ;;		_init_display
  5892 ;;		_send_lcd_cmd
  5893 ;;		_send_lcd_cmd_long
  5894 ;;		_wait_lcd_done
  5895 ;; This function uses a reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text27
  5899  0181B0                     __ptext27:
  5900                           	opt callstack 0
  5901  0181B0                     _wdtdelay:
  5902                           	opt callstack 22
  5903                           
  5904                           ;eadog.c: 22: void wdtdelay(const uint32_t delay);eadog.c: 23: {;eadog.c: 24:  static ui
      +                          nt32_t dcount;;eadog.c: 26:  for (dcount = 0; dcount <= delay; dcount++) {
  5905                           
  5906                           ; BSR set to: 0
  5907                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  5908                           ;incstack = 0
  5909  0181B0  0100               	movlb	0	; () banked
  5910  0181B2  6B90               	clrf	wdtdelay@dcount& (0+255),b
  5911  0181B4  6B91               	clrf	(wdtdelay@dcount+1)& (0+255),b
  5912  0181B6  6B92               	clrf	(wdtdelay@dcount+2)& (0+255),b
  5913  0181B8  6B93               	clrf	(wdtdelay@dcount+3)& (0+255),b
  5914  0181BA                     l1329:
  5915                           
  5916                           ; BSR set to: 0
  5917                           ;eadog.c: 27:   __nop();
  5918  0181BA  F000               	nop	
  5919  0181BC  0004               	clrwdt		;# 
  5920                           
  5921                           ;eadog.c: 29:  };
  5922  0181BE  0E01               	movlw	1
  5923  0181C0  0100               	movlb	0	; () banked
  5924  0181C2  2790               	addwf	wdtdelay@dcount& (0+255),f,b
  5925  0181C4  0E00               	movlw	0
  5926  0181C6  2391               	addwfc	(wdtdelay@dcount+1)& (0+255),f,b
  5927  0181C8  2392               	addwfc	(wdtdelay@dcount+2)& (0+255),f,b
  5928  0181CA  2393               	addwfc	(wdtdelay@dcount+3)& (0+255),f,b
  5929                           
  5930                           ; BSR set to: 0
  5931                           ;stkvar	_delay @ sp[(0)+-4]
  5932  0181CC  0EFC               	movlw	-4
  5933  0181CE  006F FF8C  F035    	movff	plusw1,btemp
  5934  0181D4  5190               	movf	wdtdelay@dcount& (0+255),w,b
  5935  0181D6  5C35               	subwf	btemp^0,w,c
  5936  0181D8  0EFD               	movlw	-3
  5937  0181DA  006F FF8C  F035    	movff	plusw1,btemp
  5938  0181E0  5191               	movf	(wdtdelay@dcount+1)& (0+255),w,b
  5939  0181E2  5835               	subwfb	btemp^0,w,c
  5940  0181E4  0EFE               	movlw	-2
  5941  0181E6  006F FF8C  F035    	movff	plusw1,btemp
  5942  0181EC  5192               	movf	(wdtdelay@dcount+2)& (0+255),w,b
  5943  0181EE  5835               	subwfb	btemp^0,w,c
  5944  0181F0  0EFF               	movlw	-1
  5945  0181F2  006F FF8C  F035    	movff	plusw1,btemp
  5946  0181F8  5193               	movf	(wdtdelay@dcount+3)& (0+255),w,b
  5947  0181FA  5835               	subwfb	btemp^0,w,c
  5948  0181FC  B0D8               	btfsc	status,0,c
  5949  0181FE  D7DD               	goto	l1329
  5950                           
  5951                           ; BSR set to: 0
  5952                           ; _wdtdelay: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, args
      +                          ize = 4, vargsize = 0
  5953  018200  52E5               	movf	postdec1,f,c
  5954  018202  52E5               	movf	postdec1,f,c
  5955  018204  52E5               	movf	postdec1,f,c
  5956  018206  52E5               	movf	postdec1,f,c
  5957  018208  0012               	return		;funcret
  5958  01820A                     __end_of_wdtdelay:
  5959                           	opt callstack 0
  5960                           
  5961 ;; *************** function _eaDogM_WriteString *****************
  5962 ;; Defined at:
  5963 ;;		line 184 in file "eadog.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  strPtr          2  [STACK] PTR unsigned char 
  5966 ;;		 -> D.lcd(216), D(218), V(187), 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;		None
  5969 ;; Return value:  Size  Location     Type
  5970 ;;                  1  [STACK] void 
  5971 ;; Registers used:
  5972 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  5973 ;; Tracked objects:
  5974 ;;		On entry : 3F/0
  5975 ;;		On exit  : 3F/3B
  5976 ;;		Unchanged: 0/0
  5977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  5978 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5979 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5981 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  5982 ;;Total ram usage:        0 bytes
  5983 ;; Hardware stack levels used:    1
  5984 ;; Hardware stack levels required when called:   15
  5985 ;; This function calls:
  5986 ;;		_printf
  5987 ;;		_ringBufS_flush
  5988 ;;		_start_lcd
  5989 ;;		_strlen
  5990 ;;		_wait_lcd_set
  5991 ;; This function is called by:
  5992 ;;		_eaDogM_WriteStringAtPos
  5993 ;; This function uses a reentrant model
  5994 ;;
  5995                           
  5996                           	psect	text28
  5997  01781E                     __ptext28:
  5998                           	opt callstack 0
  5999  01781E                     _eaDogM_WriteString:
  6000                           	opt callstack 13
  6001                           
  6002                           ;eadog.c: 184: void eaDogM_WriteString(char *strPtr);eadog.c: 185: {;eadog.c: 187:  wait
      +                          _lcd_set();
  6003                           
  6004                           ; BSR set to: 0
  6005                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6006                           ;incstack = 0
  6007  01781E  EC32  F0C7         	call	_wait_lcd_set	;wreg free
  6008                           
  6009                           ; BSR set to: 0
  6010                           ;eadog.c: 189:  ringBufS_flush(spi_link.tx1a, 0);
  6011  017822  0E00               	movlw	0
  6012  017824  6EE6               	movwf	postinc1,c
  6013  017826  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
  6014  01782C  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
  6015  017832  EC4C  F0BD         	call	_ringBufS_flush	;wreg free
  6016  017836  94BC               	bcf	188,2,c	;volatile
  6017                           
  6018                           ;eadog.c: 191:  if (strlen(strPtr) > 64) strPtr[64] = 0;
  6019                           ;stkvar	_strPtr @ sp[(0)+-2]
  6020  017838  0EFE               	movlw	-2
  6021  01783A  006F FF8F FFE6     	movff	plusw1,postinc1
  6022  017840  006F FF8F FFE6     	movff	plusw1,postinc1
  6023  017846  EC62  F0BC         	call	_strlen	;wreg free
  6024  01784A  5036               	movf	(btemp+1)^0,w,c
  6025  01784C  E104               	bnz	u10560
  6026  01784E  0E41               	movlw	65
  6027  017850  5C35               	subwf	btemp^0,w,c
  6028  017852  A0D8               	btfss	status,0,c
  6029  017854  D010               	goto	l10141
  6030  017856                     u10560:
  6031                           
  6032                           ;stkvar	_strPtr @ sp[(0)+-2]
  6033  017856  0EFE               	movlw	-2
  6034  017858  006F FF8C  F03F    	movff	plusw1,btemp+10
  6035  01785E  0EFF               	movlw	-1
  6036  017860  006F FF8C  F040    	movff	plusw1,btemp+11
  6037  017866  0E40               	movlw	64
  6038  017868  243F               	addwf	(btemp+10)^0,w,c
  6039  01786A  6ED9               	movwf	fsr2l,c
  6040  01786C  0E00               	movlw	0
  6041  01786E  2040               	addwfc	(btemp+11)^0,w,c
  6042  017870  6EDA               	movwf	fsr2h,c
  6043  017872  0E00               	movlw	0
  6044  017874  6EDF               	movwf	indf2,c
  6045  017876                     l10141:
  6046                           
  6047                           ;eadog.c: 192:  DMA1CON0bits.EN = 0;
  6048  017876  013B               	movlb	59	; () banked
  6049  017878  9FFC               	bcf	252,7,b	;volatile
  6050                           
  6051                           ; BSR set to: 59
  6052                           ;eadog.c: 193:  DMA1SSZ = strlen(strPtr);
  6053                           ;stkvar	_strPtr @ sp[(0)+-2]
  6054  01787A  0EFE               	movlw	-2
  6055  01787C  006F FF8F FFE6     	movff	plusw1,postinc1
  6056  017882  006F FF8F FFE6     	movff	plusw1,postinc1
  6057  017888  EC62  F0BC         	call	_strlen	;wreg free
  6058  01788C  0060  F0D7  FBF7   	movff	btemp,15351	;volatile
  6059  017892  0060  F0DB  FBF8   	movff	btemp+1,15352	;volatile
  6060                           
  6061                           ;eadog.c: 194:  DMA1CON0bits.EN = 1;
  6062  017898  013B               	movlb	59	; () banked
  6063  01789A  8FFC               	bsf	252,7,b	;volatile
  6064                           
  6065                           ; BSR set to: 59
  6066                           ;eadog.c: 195:  printf("%s", strPtr);
  6067                           ;stkvar	_strPtr @ sp[(0)+-2]
  6068  01789C  0EFE               	movlw	-2
  6069  01789E  006F FF8F FFE6     	movff	plusw1,postinc1
  6070  0178A4  006F FF8F FFE6     	movff	plusw1,postinc1
  6071  0178AA  0EFC               	movlw	low STR_12
  6072  0178AC  6EE6               	movwf	postinc1,c
  6073  0178AE  0EFF               	movlw	high STR_12
  6074  0178B0  6EE6               	movwf	postinc1,c
  6075  0178B2  0E04               	movlw	4
  6076  0178B4  6EE6               	movwf	postinc1,c
  6077  0178B6  EC4A  F0C0         	call	_printf	;wreg free
  6078                           
  6079                           ;eadog.c: 196:  start_lcd();
  6080  0178BA  EC35  F0C7         	call	_start_lcd	;wreg free
  6081                           
  6082                           ; BSR set to: 59
  6083                           ; _eaDogM_WriteString: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
  6084  0178BE  52E5               	movf	postdec1,f,c
  6085  0178C0  52E5               	movf	postdec1,f,c
  6086  0178C2  0012               	return		;funcret
  6087  0178C4                     __end_of_eaDogM_WriteString:
  6088                           	opt callstack 0
  6089                           
  6090 ;; *************** function _wait_lcd_set *****************
  6091 ;; Defined at:
  6092 ;;		line 131 in file "eadog.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1  [STACK] void 
  6099 ;; Registers used:
  6100 ;;		None
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/3D
  6103 ;;		On exit  : 3F/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6110 ;;Total ram usage:        0 bytes
  6111 ;; Hardware stack levels used:    1
  6112 ;; Hardware stack levels required when called:    6
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_eaDogM_WriteString
  6117 ;;		_send_lcd_cmd_dma
  6118 ;; This function uses a reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text29
  6122  018E64                     __ptext29:
  6123                           	opt callstack 0
  6124  018E64                     _wait_lcd_set:
  6125                           	opt callstack 21
  6126                           
  6127                           ;eadog.c: 133:  spi_link.LCD_DATA = 1;
  6128                           
  6129                           ; BSR set to: 59
  6130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6131                           ;incstack = 0
  6132  018E64  0100               	movlb	0	; () banked
  6133  018E66  8778               	bsf	_spi_link& (0+255),3,b	;volatile
  6134                           
  6135                           ; BSR set to: 0
  6136                           ; _wait_lcd_set: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
  6137  018E68  0012               	return		;funcret
  6138  018E6A                     __end_of_wait_lcd_set:
  6139                           	opt callstack 0
  6140                           
  6141 ;; *************** function _start_lcd *****************
  6142 ;; Defined at:
  6143 ;;		line 126 in file "eadog.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;		None
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1  [STACK] void 
  6150 ;; Registers used:
  6151 ;;		None
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/3B
  6154 ;;		On exit  : 3F/3B
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6161 ;;Total ram usage:        0 bytes
  6162 ;; Hardware stack levels used:    1
  6163 ;; Hardware stack levels required when called:    6
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_eaDogM_WriteString
  6168 ;;		_send_lcd_cmd_dma
  6169 ;; This function uses a reentrant model
  6170 ;;
  6171                           
  6172                           	psect	text30
  6173  018E6A                     __ptext30:
  6174                           	opt callstack 0
  6175  018E6A                     _start_lcd:
  6176                           	opt callstack 21
  6177                           
  6178                           ;eadog.c: 128:  DMA1CON0bits.DMA1SIRQEN = 1;
  6179                           
  6180                           ; BSR set to: 0
  6181                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6182                           ;incstack = 0
  6183  018E6A  013B               	movlb	59	; () banked
  6184  018E6C  8DFC               	bsf	252,6,b	;volatile
  6185                           
  6186                           ; BSR set to: 59
  6187                           ; _start_lcd: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, arg
      +                          size = 0, vargsize = 0
  6188  018E6E  0012               	return		;funcret
  6189  018E70                     __end_of_start_lcd:
  6190                           	opt callstack 0
  6191                           
  6192 ;; *************** function _ringBufS_flush *****************
  6193 ;; Defined at:
  6194 ;;		line 76 in file "ringbufs.c"
  6195 ;; Parameters:    Size  Location     Type
  6196 ;;  _this           2  [STACK] PTR struct ringBufS_t
  6197 ;;		 -> ring_buf1(67), 
  6198 ;;  clearBuffer     1  [STACK] const char 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;		None
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1  [STACK] void 
  6203 ;; Registers used:
  6204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6205 ;; Tracked objects:
  6206 ;;		On entry : 3F/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6211 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6213 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6214 ;;Total ram usage:        0 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    7
  6217 ;; This function calls:
  6218 ;;		_memset
  6219 ;; This function is called by:
  6220 ;;		_eaDogM_WriteString
  6221 ;;		_send_lcd_cmd_dma
  6222 ;; This function uses a reentrant model
  6223 ;;
  6224                           
  6225                           	psect	text31
  6226  017A98                     __ptext31:
  6227                           	opt callstack 0
  6228  017A98                     _ringBufS_flush:
  6229                           	opt callstack 20
  6230                           
  6231                           ;ringbufs.c: 76: void ringBufS_flush(ringBufS_t *_this, const int8_t clearBuffer);ringbu
      +                          fs.c: 77: {;ringbufs.c: 78:  _this->count = 0;
  6232                           ;stkvar	__this @ sp[(0)+-2]
  6233                           
  6234                           ; BSR set to: 59
  6235                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6236                           ;incstack = 0
  6237  017A98  0EFE               	movlw	-2
  6238  017A9A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6239  017AA0  0EFF               	movlw	-1
  6240  017AA2  006F FF8C  F040    	movff	plusw1,btemp+11
  6241  017AA8  0E42               	movlw	66
  6242  017AAA  243F               	addwf	(btemp+10)^0,w,c
  6243  017AAC  6ED9               	movwf	fsr2l,c
  6244  017AAE  0E00               	movlw	0
  6245  017AB0  2040               	addwfc	(btemp+11)^0,w,c
  6246  017AB2  6EDA               	movwf	fsr2h,c
  6247  017AB4  0E00               	movlw	0
  6248  017AB6  6EDF               	movwf	indf2,c
  6249                           
  6250                           ;ringbufs.c: 79:  _this->head = 0;
  6251                           ;stkvar	__this @ sp[(0)+-2]
  6252  017AB8  0EFE               	movlw	-2
  6253  017ABA  006F FF8C  F03F    	movff	plusw1,btemp+10
  6254  017AC0  0EFF               	movlw	-1
  6255  017AC2  006F FF8C  F040    	movff	plusw1,btemp+11
  6256  017AC8  0E40               	movlw	64
  6257  017ACA  243F               	addwf	(btemp+10)^0,w,c
  6258  017ACC  6ED9               	movwf	fsr2l,c
  6259  017ACE  0E00               	movlw	0
  6260  017AD0  2040               	addwfc	(btemp+11)^0,w,c
  6261  017AD2  6EDA               	movwf	fsr2h,c
  6262  017AD4  0E00               	movlw	0
  6263  017AD6  6EDF               	movwf	indf2,c
  6264                           
  6265                           ;ringbufs.c: 80:  _this->tail = 0;
  6266                           ;stkvar	__this @ sp[(0)+-2]
  6267  017AD8  0EFE               	movlw	-2
  6268  017ADA  006F FF8C  F03F    	movff	plusw1,btemp+10
  6269  017AE0  0EFF               	movlw	-1
  6270  017AE2  006F FF8C  F040    	movff	plusw1,btemp+11
  6271  017AE8  0E41               	movlw	65
  6272  017AEA  243F               	addwf	(btemp+10)^0,w,c
  6273  017AEC  6ED9               	movwf	fsr2l,c
  6274  017AEE  0E00               	movlw	0
  6275  017AF0  2040               	addwfc	(btemp+11)^0,w,c
  6276  017AF2  6EDA               	movwf	fsr2h,c
  6277  017AF4  0E00               	movlw	0
  6278  017AF6  6EDF               	movwf	indf2,c
  6279                           
  6280                           ;ringbufs.c: 81:  if (clearBuffer) {
  6281                           ;stkvar	_clearBuffer @ sp[(0)+-3]
  6282  017AF8  0EFD               	movlw	-3
  6283  017AFA  50E3               	movf	plusw1,w,c
  6284  017AFC  B4D8               	btfsc	status,2,c
  6285  017AFE  D011               	goto	l1469
  6286                           
  6287                           ;ringbufs.c: 82:   memset(_this->buf, 0, sizeof(_this->buf));
  6288  017B00  0E40               	movlw	64
  6289  017B02  6EE6               	movwf	postinc1,c
  6290  017B04  0E00               	movlw	0
  6291  017B06  6EE6               	movwf	postinc1,c
  6292  017B08  0E00               	movlw	0
  6293  017B0A  6EE6               	movwf	postinc1,c
  6294  017B0C  0E00               	movlw	0
  6295  017B0E  6EE6               	movwf	postinc1,c
  6296                           
  6297                           ;stkvar	__this @ sp[(-4)+-2]
  6298  017B10  0EFA               	movlw	-6
  6299  017B12  006F FF8F FFE6     	movff	plusw1,postinc1
  6300  017B18  006F FF8F FFE6     	movff	plusw1,postinc1
  6301  017B1E  EC73  F0A7         	call	_memset	;wreg free
  6302  017B22                     l1469:
  6303                           
  6304                           ; _ringBufS_flush: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3
      +                          , argsize = 3, vargsize = 0
  6305  017B22  52E5               	movf	postdec1,f,c
  6306  017B24  52E5               	movf	postdec1,f,c
  6307  017B26  52E5               	movf	postdec1,f,c
  6308  017B28  0012               	return		;funcret
  6309  017B2A                     __end_of_ringBufS_flush:
  6310                           	opt callstack 0
  6311                           
  6312 ;; *************** function _memset *****************
  6313 ;; Defined at:
  6314 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/memset.c"
  6315 ;; Parameters:    Size  Location     Type
  6316 ;;  dest            2  [STACK] PTR void 
  6317 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6318 ;;  c               2  [STACK] int 
  6319 ;;  n               2  [STACK] unsigned int 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  s               2  [STACK] PTR unsigned char 
  6322 ;;		 -> ring_buf2(67), ring_buf1(67), 
  6323 ;;  k               2  [STACK] unsigned int 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  2  [STACK] PTR void 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, prodl
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6337 ;;Total ram usage:        0 bytes
  6338 ;; Hardware stack levels used:    1
  6339 ;; Hardware stack levels required when called:    6
  6340 ;; This function calls:
  6341 ;;		Nothing
  6342 ;; This function is called by:
  6343 ;;		_ringBufS_init
  6344 ;;		_ringBufS_flush
  6345 ;; This function uses a reentrant model
  6346 ;;
  6347                           
  6348                           	psect	text32
  6349  014EE6                     __ptext32:
  6350                           	opt callstack 0
  6351  014EE6                     _memset:
  6352                           	opt callstack 0
  6353                           
  6354                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6355  014EE6  52E6               	movf	postinc1,f,c
  6356  014EE8  52E6               	movf	postinc1,f,c
  6357  014EEA  52E6               	movf	postinc1,f,c
  6358  014EEC  52E6               	movf	postinc1,f,c
  6359                           
  6360                           ;stkvar	_dest @ sp[(-4)+-2]
  6361                           
  6362                           ;incstack = 0
  6363  014EEE  0EFA               	movlw	-6
  6364  014EF0  006F FF8C  F03F    	movff	plusw1,btemp+10
  6365  014EF6  0EFB               	movlw	-5
  6366  014EF8  006F FF8C  F040    	movff	plusw1,btemp+11
  6367                           
  6368                           ;stkvar	_s @ sp[(-4)+0]
  6369  014EFE  0EFD               	movlw	-3
  6370  014F00  0060  F103  FFE3   	movff	btemp+11,plusw1
  6371  014F06  0EFC               	movlw	-4
  6372  014F08  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6373                           
  6374                           ;stkvar	_n @ sp[(-4)+-6]
  6375  014F0E  0EF6               	movlw	-10
  6376  014F10  006F FF8C  F035    	movff	plusw1,btemp
  6377  014F16  0EF7               	movlw	-9
  6378  014F18  50E3               	movf	plusw1,w,c
  6379  014F1A  1035               	iorwf	btemp^0,w,c
  6380  014F1C  B4D8               	btfsc	status,2,c
  6381  014F1E  D154               	goto	u10530
  6382                           
  6383                           ;stkvar	_c @ sp[(-4)+-4]
  6384                           ;stkvar	_s @ sp[(-4)+0]
  6385  014F20  0EFC               	movlw	-4
  6386  014F22  006F FF8F FFD9     	movff	plusw1,fsr2l
  6387  014F28  0EFD               	movlw	-3
  6388  014F2A  006F FF8F FFDA     	movff	plusw1,fsr2h
  6389  014F30  0EF8               	movlw	-8
  6390  014F32  006F FF8F FFDF     	movff	plusw1,indf2
  6391                           
  6392                           ;stkvar	_c @ sp[(-4)+-4]
  6393                           ;stkvar	_n @ sp[(-4)+-6]
  6394                           ;stkvar	_s @ sp[(-4)+0]
  6395  014F38  0EFC               	movlw	-4
  6396  014F3A  006F FF8C  F03F    	movff	plusw1,btemp+10
  6397  014F40  0EFD               	movlw	-3
  6398  014F42  006F FF8C  F040    	movff	plusw1,btemp+11
  6399  014F48  0EF6               	movlw	-10
  6400  014F4A  50E3               	movf	plusw1,w,c
  6401  014F4C  263F               	addwf	(btemp+10)^0,f,c
  6402  014F4E  0EF7               	movlw	-9
  6403  014F50  50E3               	movf	plusw1,w,c
  6404  014F52  2240               	addwfc	(btemp+11)^0,f,c
  6405  014F54  0EFF               	movlw	255
  6406  014F56  243F               	addwf	(btemp+10)^0,w,c
  6407  014F58  6ED9               	movwf	fsr2l,c
  6408  014F5A  0EFF               	movlw	255
  6409  014F5C  2040               	addwfc	(btemp+11)^0,w,c
  6410  014F5E  6EDA               	movwf	fsr2h,c
  6411  014F60  0EF8               	movlw	-8
  6412  014F62  006F FF8F FFDF     	movff	plusw1,indf2
  6413                           
  6414                           ;stkvar	_n @ sp[(-4)+-6]
  6415  014F68  0EF7               	movlw	-9
  6416  014F6A  50E3               	movf	plusw1,w,c
  6417  014F6C  E108               	bnz	l10057
  6418  014F6E  0EF6               	movlw	-10
  6419  014F70  006F FF8C  F035    	movff	plusw1,btemp
  6420  014F76  0E03               	movlw	3
  6421  014F78  5E35               	subwf	btemp^0,f,c
  6422  014F7A  A0D8               	btfss	status,0,c
  6423  014F7C  D125               	goto	u10530
  6424  014F7E                     l10057:
  6425                           
  6426                           ;stkvar	_c @ sp[(-4)+-4]
  6427                           ;stkvar	_s @ sp[(-4)+0]
  6428  014F7E  0EFC               	movlw	-4
  6429  014F80  006F FF8C  F03F    	movff	plusw1,btemp+10
  6430  014F86  0EFD               	movlw	-3
  6431  014F88  006F FF8C  F040    	movff	plusw1,btemp+11
  6432  014F8E  0E01               	movlw	1
  6433  014F90  243F               	addwf	(btemp+10)^0,w,c
  6434  014F92  6ED9               	movwf	fsr2l,c
  6435  014F94  0E00               	movlw	0
  6436  014F96  2040               	addwfc	(btemp+11)^0,w,c
  6437  014F98  6EDA               	movwf	fsr2h,c
  6438  014F9A  0EF8               	movlw	-8
  6439  014F9C  006F FF8F FFDF     	movff	plusw1,indf2
  6440                           
  6441                           ;stkvar	_c @ sp[(-4)+-4]
  6442                           ;stkvar	_s @ sp[(-4)+0]
  6443  014FA2  0EFC               	movlw	-4
  6444  014FA4  006F FF8C  F03F    	movff	plusw1,btemp+10
  6445  014FAA  0EFD               	movlw	-3
  6446  014FAC  006F FF8C  F040    	movff	plusw1,btemp+11
  6447  014FB2  0E02               	movlw	2
  6448  014FB4  243F               	addwf	(btemp+10)^0,w,c
  6449  014FB6  6ED9               	movwf	fsr2l,c
  6450  014FB8  0E00               	movlw	0
  6451  014FBA  2040               	addwfc	(btemp+11)^0,w,c
  6452  014FBC  6EDA               	movwf	fsr2h,c
  6453  014FBE  0EF8               	movlw	-8
  6454  014FC0  006F FF8F FFDF     	movff	plusw1,indf2
  6455                           
  6456                           ;stkvar	_c @ sp[(-4)+-4]
  6457                           ;stkvar	_n @ sp[(-4)+-6]
  6458                           ;stkvar	_s @ sp[(-4)+0]
  6459  014FC6  0EFC               	movlw	-4
  6460  014FC8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6461  014FCE  0EFD               	movlw	-3
  6462  014FD0  006F FF8C  F040    	movff	plusw1,btemp+11
  6463  014FD6  0EF6               	movlw	-10
  6464  014FD8  50E3               	movf	plusw1,w,c
  6465  014FDA  263F               	addwf	(btemp+10)^0,f,c
  6466  014FDC  0EF7               	movlw	-9
  6467  014FDE  50E3               	movf	plusw1,w,c
  6468  014FE0  2240               	addwfc	(btemp+11)^0,f,c
  6469  014FE2  0EFE               	movlw	254
  6470  014FE4  243F               	addwf	(btemp+10)^0,w,c
  6471  014FE6  6ED9               	movwf	fsr2l,c
  6472  014FE8  0EFF               	movlw	255
  6473  014FEA  2040               	addwfc	(btemp+11)^0,w,c
  6474  014FEC  6EDA               	movwf	fsr2h,c
  6475  014FEE  0EF8               	movlw	-8
  6476  014FF0  006F FF8F FFDF     	movff	plusw1,indf2
  6477                           
  6478                           ;stkvar	_c @ sp[(-4)+-4]
  6479                           ;stkvar	_n @ sp[(-4)+-6]
  6480                           ;stkvar	_s @ sp[(-4)+0]
  6481  014FF6  0EFC               	movlw	-4
  6482  014FF8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6483  014FFE  0EFD               	movlw	-3
  6484  015000  006F FF8C  F040    	movff	plusw1,btemp+11
  6485  015006  0EF6               	movlw	-10
  6486  015008  50E3               	movf	plusw1,w,c
  6487  01500A  263F               	addwf	(btemp+10)^0,f,c
  6488  01500C  0EF7               	movlw	-9
  6489  01500E  50E3               	movf	plusw1,w,c
  6490  015010  2240               	addwfc	(btemp+11)^0,f,c
  6491  015012  0EFD               	movlw	253
  6492  015014  243F               	addwf	(btemp+10)^0,w,c
  6493  015016  6ED9               	movwf	fsr2l,c
  6494  015018  0EFF               	movlw	255
  6495  01501A  2040               	addwfc	(btemp+11)^0,w,c
  6496  01501C  6EDA               	movwf	fsr2h,c
  6497  01501E  0EF8               	movlw	-8
  6498  015020  006F FF8F FFDF     	movff	plusw1,indf2
  6499                           
  6500                           ;stkvar	_n @ sp[(-4)+-6]
  6501  015026  0EF7               	movlw	-9
  6502  015028  50E3               	movf	plusw1,w,c
  6503  01502A  E108               	bnz	l10063
  6504  01502C  0EF6               	movlw	-10
  6505  01502E  006F FF8C  F035    	movff	plusw1,btemp
  6506  015034  0E07               	movlw	7
  6507  015036  5E35               	subwf	btemp^0,f,c
  6508  015038  A0D8               	btfss	status,0,c
  6509  01503A  D0C6               	goto	u10530
  6510  01503C                     l10063:
  6511                           
  6512                           ;stkvar	_c @ sp[(-4)+-4]
  6513                           ;stkvar	_s @ sp[(-4)+0]
  6514  01503C  0EFC               	movlw	-4
  6515  01503E  006F FF8C  F03F    	movff	plusw1,btemp+10
  6516  015044  0EFD               	movlw	-3
  6517  015046  006F FF8C  F040    	movff	plusw1,btemp+11
  6518  01504C  0E03               	movlw	3
  6519  01504E  243F               	addwf	(btemp+10)^0,w,c
  6520  015050  6ED9               	movwf	fsr2l,c
  6521  015052  0E00               	movlw	0
  6522  015054  2040               	addwfc	(btemp+11)^0,w,c
  6523  015056  6EDA               	movwf	fsr2h,c
  6524  015058  0EF8               	movlw	-8
  6525  01505A  006F FF8F FFDF     	movff	plusw1,indf2
  6526                           
  6527                           ;stkvar	_c @ sp[(-4)+-4]
  6528                           ;stkvar	_n @ sp[(-4)+-6]
  6529                           ;stkvar	_s @ sp[(-4)+0]
  6530  015060  0EFC               	movlw	-4
  6531  015062  006F FF8C  F03F    	movff	plusw1,btemp+10
  6532  015068  0EFD               	movlw	-3
  6533  01506A  006F FF8C  F040    	movff	plusw1,btemp+11
  6534  015070  0EF6               	movlw	-10
  6535  015072  50E3               	movf	plusw1,w,c
  6536  015074  263F               	addwf	(btemp+10)^0,f,c
  6537  015076  0EF7               	movlw	-9
  6538  015078  50E3               	movf	plusw1,w,c
  6539  01507A  2240               	addwfc	(btemp+11)^0,f,c
  6540  01507C  0EFC               	movlw	252
  6541  01507E  243F               	addwf	(btemp+10)^0,w,c
  6542  015080  6ED9               	movwf	fsr2l,c
  6543  015082  0EFF               	movlw	255
  6544  015084  2040               	addwfc	(btemp+11)^0,w,c
  6545  015086  6EDA               	movwf	fsr2h,c
  6546  015088  0EF8               	movlw	-8
  6547  01508A  006F FF8F FFDF     	movff	plusw1,indf2
  6548                           
  6549                           ;stkvar	_n @ sp[(-4)+-6]
  6550  015090  0EF7               	movlw	-9
  6551  015092  50E3               	movf	plusw1,w,c
  6552  015094  E108               	bnz	l10069
  6553  015096  0EF6               	movlw	-10
  6554  015098  006F FF8C  F035    	movff	plusw1,btemp
  6555  01509E  0E09               	movlw	9
  6556  0150A0  5E35               	subwf	btemp^0,f,c
  6557  0150A2  A0D8               	btfss	status,0,c
  6558  0150A4  D091               	goto	u10530
  6559  0150A6                     l10069:
  6560                           
  6561                           ;stkvar	_s @ sp[(-4)+0]
  6562  0150A6  0EFC               	movlw	-4
  6563  0150A8  006F FF8C  F03F    	movff	plusw1,btemp+10
  6564  0150AE  1E3F               	comf	(btemp+10)^0,f,c
  6565  0150B0  0EFD               	movlw	-3
  6566  0150B2  006F FF8C  F040    	movff	plusw1,btemp+11
  6567  0150B8  1E40               	comf	(btemp+11)^0,f,c
  6568  0150BA  2A3F               	incf	(btemp+10)^0,f,c
  6569  0150BC  B4D8               	btfsc	status,2,c
  6570  0150BE  2A40               	incf	(btemp+11)^0,f,c
  6571  0150C0  0E03               	movlw	3
  6572  0150C2  163F               	andwf	(btemp+10)^0,f,c
  6573  0150C4  0E00               	movlw	0
  6574  0150C6  1640               	andwf	(btemp+11)^0,f,c
  6575                           
  6576                           ;stkvar	_k @ sp[(-4)+2]
  6577  0150C8  0EFE               	movlw	-2
  6578  0150CA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6579  0150D0  0EFF               	movlw	-1
  6580  0150D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  6581                           
  6582                           ;stkvar	_k @ sp[(-4)+2]
  6583                           ;stkvar	_s @ sp[(-4)+0]
  6584  0150D8  0EFC               	movlw	-4
  6585  0150DA  50E3               	movf	plusw1,w,c
  6586  0150DC  6E35               	movwf	btemp^0,c
  6587  0150DE  0EFE               	movlw	-2
  6588  0150E0  50E3               	movf	plusw1,w,c
  6589  0150E2  2635               	addwf	btemp^0,f,c
  6590  0150E4  0EFC               	movlw	-4
  6591  0150E6  0060  F0D7  FFE3   	movff	btemp,plusw1
  6592  0150EC  0EFD               	movlw	-3
  6593  0150EE  50E3               	movf	plusw1,w,c
  6594  0150F0  6E35               	movwf	btemp^0,c
  6595  0150F2  0EFF               	movlw	-1
  6596  0150F4  50E3               	movf	plusw1,w,c
  6597  0150F6  2235               	addwfc	btemp^0,f,c
  6598  0150F8  0EFD               	movlw	-3
  6599  0150FA  0060  F0D7  FFE3   	movff	btemp,plusw1
  6600                           
  6601                           ;stkvar	_k @ sp[(-4)+2]
  6602                           ;stkvar	_n @ sp[(-4)+-6]
  6603  015100  0EF6               	movlw	-10
  6604  015102  50E3               	movf	plusw1,w,c
  6605  015104  6E35               	movwf	btemp^0,c
  6606  015106  0EFE               	movlw	-2
  6607  015108  50E3               	movf	plusw1,w,c
  6608  01510A  5E35               	subwf	btemp^0,f,c
  6609  01510C  0EF6               	movlw	-10
  6610  01510E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6611  015114  0EF7               	movlw	-9
  6612  015116  50E3               	movf	plusw1,w,c
  6613  015118  6E35               	movwf	btemp^0,c
  6614  01511A  0EFF               	movlw	-1
  6615  01511C  50E3               	movf	plusw1,w,c
  6616  01511E  5A35               	subwfb	btemp^0,f,c
  6617  015120  0EF7               	movlw	-9
  6618  015122  0060  F0D7  FFE3   	movff	btemp,plusw1
  6619  015128  0EFC               	movlw	252
  6620  01512A  6E3F               	movwf	(btemp+10)^0,c
  6621  01512C  0EFF               	movlw	255
  6622  01512E  6E40               	movwf	(btemp+11)^0,c
  6623                           
  6624                           ;stkvar	_n @ sp[(-4)+-6]
  6625  015130  0EF6               	movlw	-10
  6626  015132  006F FF8C  F035    	movff	plusw1,btemp
  6627  015138  503F               	movf	(btemp+10)^0,w,c
  6628  01513A  1635               	andwf	btemp^0,f,c
  6629  01513C  0EF6               	movlw	-10
  6630  01513E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6631  015144  0EF7               	movlw	-9
  6632  015146  006F FF8C  F035    	movff	plusw1,btemp
  6633  01514C  5040               	movf	(btemp+11)^0,w,c
  6634  01514E  1635               	andwf	btemp^0,f,c
  6635  015150  0EF7               	movlw	-9
  6636  015152  D02E               	goto	L4
  6637  015154                     l10077:
  6638                           
  6639                           ;stkvar	_c @ sp[(-4)+-4]
  6640                           ;stkvar	_s @ sp[(-4)+0]
  6641  015154  0EFC               	movlw	-4
  6642  015156  006F FF8F FFD9     	movff	plusw1,fsr2l
  6643  01515C  0EFD               	movlw	-3
  6644  01515E  006F FF8F FFDA     	movff	plusw1,fsr2h
  6645  015164  0EF8               	movlw	-8
  6646  015166  006F FF8F FFDF     	movff	plusw1,indf2
  6647                           
  6648                           ;stkvar	_n @ sp[(-4)+-6]
  6649  01516C  0EF6               	movlw	-10
  6650  01516E  006F FF8C  F035    	movff	plusw1,btemp
  6651  015174  0E01               	movlw	1
  6652  015176  5E35               	subwf	btemp^0,f,c
  6653  015178  0EF6               	movlw	-10
  6654  01517A  0060  F0D7  FFE3   	movff	btemp,plusw1
  6655  015180  0EF7               	movlw	-9
  6656  015182  006F FF8C  F035    	movff	plusw1,btemp
  6657  015188  0E00               	movlw	0
  6658  01518A  5A35               	subwfb	btemp^0,f,c
  6659  01518C  0EF7               	movlw	-9
  6660  01518E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6661                           
  6662                           ;stkvar	_s @ sp[(-4)+0]
  6663  015194  0EFC               	movlw	-4
  6664  015196  50E3               	movf	plusw1,w,c
  6665  015198  0F01               	addlw	1
  6666  01519A  6E35               	movwf	btemp^0,c
  6667  01519C  0EFC               	movlw	-4
  6668  01519E  0060  F0D7  FFE3   	movff	btemp,plusw1
  6669  0151A4  6A35               	clrf	btemp^0,c
  6670  0151A6  0EFD               	movlw	-3
  6671  0151A8  50E3               	movf	plusw1,w,c
  6672  0151AA  2035               	addwfc	btemp^0,w,c
  6673  0151AC  6E35               	movwf	btemp^0,c
  6674  0151AE  0EFD               	movlw	-3
  6675  0151B0                     L4:
  6676  0151B0  0060  F0D7  FFE3   	movff	btemp,plusw1
  6677                           
  6678                           ;stkvar	_n @ sp[(-4)+-6]
  6679  0151B6  0EF6               	movlw	-10
  6680  0151B8  006F FF8C  F035    	movff	plusw1,btemp
  6681  0151BE  0EF7               	movlw	-9
  6682  0151C0  50E3               	movf	plusw1,w,c
  6683  0151C2  1035               	iorwf	btemp^0,w,c
  6684  0151C4  A4D8               	btfss	status,2,c
  6685  0151C6  D7C6               	goto	l10077
  6686  0151C8                     u10530:
  6687                           
  6688                           ; _memset: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsiz
      +                          e = 6, vargsize = 0
  6689  0151C8  0EF6               	movlw	246
  6690  0151CA  26E1               	addwf	fsr1l,f,c
  6691  0151CC  0EFF               	movlw	255
  6692  0151CE  22E2               	addwfc	fsr1h,f,c
  6693  0151D0  0012               	return		;funcret
  6694  0151D2                     __end_of_memset:
  6695                           	opt callstack 0
  6696                           
  6697 ;; *************** function _printf *****************
  6698 ;; Defined at:
  6699 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/printf.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  fmt             2  [STACK] PTR const unsigned char 
  6702 ;;		 -> STR_14(3), STR_13(3), STR_12(3), 
  6703 ;; Auto vars:     Size  Location     Type
  6704 ;;  ap              2  [STACK] PTR void [1]
  6705 ;;		 -> ?_printf(2), ?_sprintf(2), 
  6706 ;;  ret             2    0        int 
  6707 ;; Return value:  Size  Location     Type
  6708 ;;                  2  [STACK] int 
  6709 ;; Registers used:
  6710 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6711 ;; Tracked objects:
  6712 ;;		On entry : 3F/3B
  6713 ;;		On exit  : 0/0
  6714 ;;		Unchanged: 0/0
  6715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6720 ;;Total ram usage:        0 bytes
  6721 ;; Hardware stack levels used:    1
  6722 ;; Hardware stack levels required when called:   14
  6723 ;; This function calls:
  6724 ;;		_vfprintf
  6725 ;; This function is called by:
  6726 ;;		_eaDogM_WriteString
  6727 ;;		_send_lcd_cmd_dma
  6728 ;; This function uses a reentrant model
  6729 ;;
  6730                           
  6731                           	psect	text33
  6732  018094                     __ptext33:
  6733                           	opt callstack 0
  6734  018094                     _printf:
  6735                           	opt callstack 0
  6736                           
  6737                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6738  018094  52E6               	movf	postinc1,f,c
  6739  018096  52E6               	movf	postinc1,f,c
  6740                           
  6741                           ;stkvar	?_printf @ sp[(-2)+-3]
  6742                           
  6743                           ;incstack = 0
  6744  018098  0EFB               	movlw	251
  6745  01809A  24E1               	addwf	fsr1l,w,c
  6746  01809C  6E3F               	movwf	(btemp+10)^0,c
  6747  01809E  0EFF               	movlw	255
  6748  0180A0  20E2               	addwfc	fsr1h,w,c
  6749  0180A2  6E40               	movwf	(btemp+11)^0,c
  6750                           
  6751                           ;stkvar	_ap @ sp[(-2)+0]
  6752  0180A4  0EFF               	movlw	-1
  6753  0180A6  0060  F103  FFE3   	movff	btemp+11,plusw1
  6754  0180AC  0EFE               	movlw	-2
  6755  0180AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6756                           
  6757                           ;stkvar	_ap @ sp[(-2)+0]
  6758  0180B4  0EFE               	movlw	254
  6759  0180B6  24E1               	addwf	fsr1l,w,c
  6760  0180B8  6E35               	movwf	btemp^0,c
  6761  0180BA  0EFF               	movlw	255
  6762  0180BC  20E2               	addwfc	fsr1h,w,c
  6763  0180BE  6E36               	movwf	(btemp+1)^0,c
  6764  0180C0  0060  F0D7  FFE6   	movff	btemp,postinc1
  6765  0180C6  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6766                           
  6767                           ;stkvar	_fmt @ sp[(-4)+-3]
  6768  0180CC  0EF9               	movlw	-7
  6769  0180CE  006F FF8F FFE6     	movff	plusw1,postinc1
  6770  0180D4  006F FF8F FFE6     	movff	plusw1,postinc1
  6771  0180DA  0E00               	movlw	0
  6772  0180DC  6EE6               	movwf	postinc1,c
  6773  0180DE  0E00               	movlw	0
  6774  0180E0  6EE6               	movwf	postinc1,c
  6775  0180E2  ECBB  F0BB         	call	_vfprintf	;wreg free
  6776                           
  6777                           ; _printf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 2, vargsize = 0
  6778  0180E6  52E5               	movf	postdec1,f,c
  6779  0180E8  52E5               	movf	postdec1,f,c
  6780  0180EA  52E5               	movf	postdec1,f,c
  6781  0180EC  50E7               	movf	indf1,w,c
  6782  0180EE  5EE1               	subwf	fsr1l,f,c
  6783  0180F0  0E00               	movlw	0
  6784  0180F2  5AE2               	subwfb	fsr1h,f,c
  6785  0180F4  0012               	return		;funcret
  6786  0180F6                     __end_of_printf:
  6787                           	opt callstack 0
  6788                           
  6789 ;; *************** function _vfprintf *****************
  6790 ;; Defined at:
  6791 ;;		line 1368 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6792 ;; Parameters:    Size  Location     Type
  6793 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6794 ;;		 -> f(6), NULL(0), 
  6795 ;;  fmt             2  [STACK] PTR const unsigned char 
  6796 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6797 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6798 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6799 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6800 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6801 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6802 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6803 ;;  ap              2  [STACK] PTR PTR void 
  6804 ;;		 -> ap(2), ap(2), 
  6805 ;; Auto vars:     Size  Location     Type
  6806 ;;  cfmt            2  [STACK] PTR unsigned char 
  6807 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
  6808 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
  6809 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
  6810 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
  6811 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
  6812 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
  6813 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;                  2  [STACK] int 
  6816 ;; Registers used:
  6817 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/4
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6827 ;;Total ram usage:        0 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:   13
  6830 ;; This function calls:
  6831 ;;		_vfpfcnvrt
  6832 ;; This function is called by:
  6833 ;;		_sprintf
  6834 ;;		_printf
  6835 ;; This function uses a reentrant model
  6836 ;;
  6837                           
  6838                           	psect	text34
  6839  017776                     __ptext34:
  6840                           	opt callstack 0
  6841  017776                     _vfprintf:
  6842                           	opt callstack 0
  6843                           
  6844                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  6845  017776  52E6               	movf	postinc1,f,c
  6846  017778  52E6               	movf	postinc1,f,c
  6847                           
  6848                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1368: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1
      +                          369: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1371:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1373:     cfmt = (char *)fmt;
  6849                           ;stkvar	_fmt @ sp[(-2)+-4]
  6850                           
  6851                           ;incstack = 0
  6852  01777A  0EFA               	movlw	-6
  6853  01777C  006F FF8C  F03F    	movff	plusw1,btemp+10
  6854  017782  0EFB               	movlw	-5
  6855  017784  006F FF8C  F040    	movff	plusw1,btemp+11
  6856                           
  6857                           ;stkvar	_cfmt @ sp[(-2)+0]
  6858  01778A  0EFF               	movlw	-1
  6859  01778C  0060  F103  FFE3   	movff	btemp+11,plusw1
  6860  017792  0EFE               	movlw	-2
  6861  017794  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  6862                           
  6863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1374:     nout = 0;
  6864  01779A  6A1C               	clrf	_nout^0,c
  6865  01779C  6A1D               	clrf	(_nout+1)^0,c
  6866                           
  6867                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6868  01779E  D020               	goto	l10091
  6869  0177A0                     l10089:
  6870                           
  6871                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1376:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6872                           ;stkvar	_ap @ sp[(-2)+-6]
  6873  0177A0  0EF8               	movlw	-8
  6874  0177A2  006F FF8F FFE6     	movff	plusw1,postinc1
  6875  0177A8  006F FF8F FFE6     	movff	plusw1,postinc1
  6876                           
  6877                           ;stkvar	_cfmt @ sp[(-4)+0]
  6878  0177AE  0EFC               	movlw	252
  6879  0177B0  24E1               	addwf	fsr1l,w,c
  6880  0177B2  6E35               	movwf	btemp^0,c
  6881  0177B4  0EFF               	movlw	255
  6882  0177B6  20E2               	addwfc	fsr1h,w,c
  6883  0177B8  6E36               	movwf	(btemp+1)^0,c
  6884  0177BA  0060  F0D7  FFE6   	movff	btemp,postinc1
  6885  0177C0  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  6886                           
  6887                           ;stkvar	_fp @ sp[(-6)+-2]
  6888  0177C6  0EF8               	movlw	-8
  6889  0177C8  006F FF8F FFE6     	movff	plusw1,postinc1
  6890  0177CE  006F FF8F FFE6     	movff	plusw1,postinc1
  6891  0177D4  EC22  F089         	call	_vfpfcnvrt	;wreg free
  6892  0177D8  5035               	movf	btemp^0,w,c
  6893  0177DA  261C               	addwf	_nout^0,f,c
  6894  0177DC  5036               	movf	(btemp+1)^0,w,c
  6895  0177DE  221D               	addwfc	(_nout+1)^0,f,c
  6896  0177E0                     l10091:
  6897                           
  6898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1375:     while (*cfmt) {
  6899                           ;stkvar	_cfmt @ sp[(-2)+0]
  6900  0177E0  50E1               	movf	fsr1l,w,c
  6901  0177E2  0FFE               	addlw	-2
  6902  0177E4  6ED9               	movwf	fsr2l,c
  6903  0177E6  50E2               	movf	fsr1h,w,c
  6904  0177E8  6EDA               	movwf	fsr2h,c
  6905  0177EA  0EFF               	movlw	255
  6906  0177EC  22DA               	addwfc	fsr2h,f,c
  6907  0177EE  006F FF7B FFF6     	movff	postinc2,tblptrl
  6908  0177F4  006F FF77 FFF7     	movff	postdec2,tblptrh
  6909  0177FA                     	if	0	;tblptru may be non-zero
  6910  0177FA                     	endif
  6911  0177FA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6912  0177FA  0E00               	movlw	low (__mediumconst shr (0+16))
  6913  0177FC  6EF8               	movwf	tblptru,c
  6914  0177FE                     	endif
  6915  0177FE  0008               	tblrd		*
  6916  017800  50F5               	movf	tablat,w,c
  6917  017802  0900               	iorlw	0
  6918  017804  A4D8               	btfss	status,2,c
  6919  017806  D7CC               	goto	l10089
  6920                           
  6921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1378:     return nout;
  6922  017808  0060  F070  F035   	movff	_nout,btemp
  6923  01780E  0060  F074  F036   	movff	_nout+1,btemp+1
  6924                           
  6925                           ; _vfprintf: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, args
      +                          ize = 6, vargsize = 0
  6926  017814  0EF8               	movlw	248
  6927  017816  26E1               	addwf	fsr1l,f,c
  6928  017818  0EFF               	movlw	255
  6929  01781A  22E2               	addwfc	fsr1h,f,c
  6930  01781C  0012               	return		;funcret
  6931  01781E                     __end_of_vfprintf:
  6932                           	opt callstack 0
  6933                           
  6934 ;; *************** function _vfpfcnvrt *****************
  6935 ;; Defined at:
  6936 ;;		line 670 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  6937 ;; Parameters:    Size  Location     Type
  6938 ;;  fp              2  [STACK] PTR struct _IO_FILE
  6939 ;;		 -> f(6), NULL(0), 
  6940 ;;  fmt             2  [STACK] PTR PTR unsigned char 
  6941 ;;		 -> cfmt(2), 
  6942 ;;  ap              2  [STACK] PTR PTR void 
  6943 ;;		 -> ap(2), ap(2), 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;  llu             8  [STACK] unsigned long long 
  6946 ;;  ll              8  [STACK] long long 
  6947 ;;  f               4  [STACK] long long 
  6948 ;;  ct              3  [STACK] unsigned char [3]
  6949 ;;  vp              3    0        PTR void 
  6950 ;;  cp              2  [STACK] PTR unsigned char 
  6951 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
  6952 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
  6953 ;;		 -> STR_3(5), V(187), 
  6954 ;;  i               2    0        int 
  6955 ;;  done            2    0        int 
  6956 ;;  c               1  [STACK] unsigned char 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2  [STACK] int 
  6959 ;; Registers used:
  6960 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, 
      +btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl, prodh
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/4
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  6966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  6970 ;;Total ram usage:        0 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:   12
  6973 ;; This function calls:
  6974 ;;		_atoi
  6975 ;;		_ctoa
  6976 ;;		_dtoa
  6977 ;;		_efgtoa
  6978 ;;		_fputc
  6979 ;;		_isdigit
  6980 ;;		_isupper
  6981 ;;		_stoa
  6982 ;;		_strncmp
  6983 ;;		_tolower
  6984 ;;		_utoa
  6985 ;;		_xtoa
  6986 ;; This function is called by:
  6987 ;;		_vfprintf
  6988 ;; This function uses a reentrant model
  6989 ;;
  6990                           
  6991                           	psect	text35
  6992  011244                     __ptext35:
  6993                           	opt callstack 0
  6994  011244                     _vfpfcnvrt:
  6995                           	opt callstack 0
  6996                           
  6997                           ; autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
  6998  011244  0E20               	movlw	32
  6999  011246  26E1               	addwf	fsr1l,f,c
  7000  011248  0E00               	movlw	0
  7001  01124A  22E2               	addwfc	fsr1h,f,c
  7002                           
  7003                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 670: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 671: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 672:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 673:     int done, i;;
      +                          /opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 674:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 675:     unsigned long long llu;
  7004                           ;stkvar	_fmt @ sp[(-32)+-4]
  7005                           
  7006                           ;incstack = 0
  7007  01124C  0EDC               	movlw	-36
  7008  01124E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7009  011254  0EDD               	movlw	-35
  7010  011256  006F FF8F FFDA     	movff	plusw1,fsr2h
  7011  01125C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7012  011262  006F FF77 FFF7     	movff	postdec2,tblptrh
  7013  011268                     	if	0	;tblptru may be non-zero
  7014  011268                     	endif
  7015  011268                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7016  011268  0E00               	movlw	low (__mediumconst shr (0+16))
  7017  01126A  6EF8               	movwf	tblptru,c
  7018  01126C                     	endif
  7019  01126C  0008               	tblrd		*
  7020  01126E  50F5               	movf	tablat,w,c
  7021  011270  0A25               	xorlw	37
  7022  011272  A4D8               	btfss	status,2,c
  7023  011274  EFC9  F090         	goto	l10035
  7024                           
  7025                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 681:         ++*fmt;
  7026                           ;stkvar	_fmt @ sp[(-32)+-4]
  7027  011278  0EDC               	movlw	-36
  7028  01127A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7029  011280  0EDD               	movlw	-35
  7030  011282  006F FF8F FFDA     	movff	plusw1,fsr2h
  7031  011288  2ADE               	incf	postinc2,f,c
  7032  01128A  0E00               	movlw	0
  7033  01128C  22DD               	addwfc	postdec2,f,c
  7034                           
  7035                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 683:         flags = width = 
      +                          0;
  7036  01128E  6A1E               	clrf	_width^0,c
  7037  011290  6A1F               	clrf	(_width+1)^0,c
  7038  011292  6A22               	clrf	_flags^0,c
  7039  011294  6A23               	clrf	(_flags+1)^0,c
  7040                           
  7041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 684:         prec = -1;
  7042  011296  6820               	setf	_prec^0,c
  7043  011298  6821               	setf	(_prec+1)^0,c
  7044                           
  7045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 723:         if ((*fmt)[0] ==
      +                           '*') {
  7046                           ;stkvar	_fmt @ sp[(-32)+-4]
  7047  01129A  0EDC               	movlw	-36
  7048  01129C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7049  0112A2  0EDD               	movlw	-35
  7050  0112A4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7051  0112AA  006F FF7B FFF6     	movff	postinc2,tblptrl
  7052  0112B0  006F FF77 FFF7     	movff	postdec2,tblptrh
  7053  0112B6                     	if	0	;tblptru may be non-zero
  7054  0112B6                     	endif
  7055  0112B6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7056  0112B6  0E00               	movlw	low (__mediumconst shr (0+16))
  7057  0112B8  6EF8               	movwf	tblptru,c
  7058  0112BA                     	endif
  7059  0112BA  0008               	tblrd		*
  7060  0112BC  50F5               	movf	tablat,w,c
  7061  0112BE  0A2A               	xorlw	42
  7062  0112C0  A4D8               	btfss	status,2,c
  7063  0112C2  D031               	goto	l9853
  7064                           
  7065                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 724:             ++*fmt;
  7066                           ;stkvar	_fmt @ sp[(-32)+-4]
  7067  0112C4  0EDC               	movlw	-36
  7068  0112C6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7069  0112CC  0EDD               	movlw	-35
  7070  0112CE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7071  0112D4  2ADE               	incf	postinc2,f,c
  7072  0112D6  0E00               	movlw	0
  7073  0112D8  22DD               	addwfc	postdec2,f,c
  7074                           
  7075                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 725:             width = (*(i
      +                          nt *)__va_arg(*(int **)ap, (int)0));
  7076                           ;stkvar	_ap @ sp[(-32)+-6]
  7077  0112DA  0EDA               	movlw	-38
  7078  0112DC  006F FF8F FFD9     	movff	plusw1,fsr2l
  7079  0112E2  0EDB               	movlw	-37
  7080  0112E4  006F FF8F FFDA     	movff	plusw1,fsr2h
  7081  0112EA  0E02               	movlw	2
  7082  0112EC  5EDE               	subwf	postinc2,f,c
  7083  0112EE  0E00               	movlw	0
  7084  0112F0  5ADD               	subwfb	postdec2,f,c
  7085  0112F2  006F FF78  F03F    	movff	postinc2,btemp+10
  7086  0112F8  006F FF74  F040    	movff	postdec2,btemp+11
  7087  0112FE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7088  011304  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7089  01130A  006F FF78  F01E    	movff	postinc2,_width
  7090  011310  006F FF74  F01F    	movff	postdec2,_width+1
  7091                           
  7092                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 726:             if (width < 
      +                          0) {
  7093  011316  AE1F               	btfss	(_width+1)^0,7,c
  7094  011318  D066               	goto	u10230
  7095                           
  7096                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 727:                 flags |=
      +                           (1 << 0);
  7097  01131A  8022               	bsf	_flags^0,0,c
  7098                           
  7099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 728:                 width = 
      +                          -width;
  7100  01131C  6C1E               	negf	_width^0,c
  7101  01131E  1E1F               	comf	(_width+1)^0,f,c
  7102  011320  B0D8               	btfsc	status,0,c
  7103  011322  2A1F               	incf	(_width+1)^0,f,c
  7104  011324  D060               	goto	u10230
  7105  011326                     l9853:
  7106                           
  7107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 731:             width = atoi
      +                          (*fmt);
  7108                           ;stkvar	_fmt @ sp[(-32)+-4]
  7109  011326  0EDC               	movlw	-36
  7110  011328  006F FF8F FFD9     	movff	plusw1,fsr2l
  7111  01132E  0EDD               	movlw	-35
  7112  011330  006F FF8F FFDA     	movff	plusw1,fsr2h
  7113  011336  006F FF78  F03F    	movff	postinc2,btemp+10
  7114  01133C  006F FF74  F040    	movff	postdec2,btemp+11
  7115  011342  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7116  011348  0060  F103  FFE6   	movff	btemp+11,postinc1
  7117  01134E  EC88  F0AB         	call	_atoi	;wreg free
  7118  011352  0060  F0D4  F01E   	movff	btemp,_width
  7119  011358  0060  F0D8  F01F   	movff	btemp+1,_width+1
  7120                           
  7121                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 732:             while ((0 ? 
      +                          isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7122  01135E  D00B               	goto	l9857
  7123  011360                     l9855:
  7124                           
  7125                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 733:                 ++*fmt;
  7126                           ;stkvar	_fmt @ sp[(-32)+-4]
  7127  011360  0EDC               	movlw	-36
  7128  011362  006F FF8F FFD9     	movff	plusw1,fsr2l
  7129  011368  0EDD               	movlw	-35
  7130  01136A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7131  011370  2ADE               	incf	postinc2,f,c
  7132  011372  0E00               	movlw	0
  7133  011374  22DD               	addwfc	postdec2,f,c
  7134  011376                     l9857:
  7135  011376  0ED0               	movlw	208
  7136  011378  6E3F               	movwf	(btemp+10)^0,c
  7137  01137A  0EFF               	movlw	255
  7138  01137C  6E40               	movwf	(btemp+11)^0,c
  7139                           
  7140                           ;stkvar	_fmt @ sp[(-32)+-4]
  7141  01137E  0EDC               	movlw	-36
  7142  011380  006F FF8F FFD9     	movff	plusw1,fsr2l
  7143  011386  0EDD               	movlw	-35
  7144  011388  006F FF8F FFDA     	movff	plusw1,fsr2h
  7145  01138E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7146  011394  006F FF77 FFF7     	movff	postdec2,tblptrh
  7147  01139A                     	if	0	;tblptru may be non-zero
  7148  01139A                     	endif
  7149  01139A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7150  01139A  0E00               	movlw	low (__mediumconst shr (0+16))
  7151  01139C  6EF8               	movwf	tblptru,c
  7152  01139E                     	endif
  7153  01139E  0008               	tblrd		*
  7154  0113A0  50F5               	movf	tablat,w,c
  7155  0113A2  6E3D               	movwf	(btemp+8)^0,c
  7156  0113A4  6A3E               	clrf	(btemp+9)^0,c
  7157  0113A6  503F               	movf	(btemp+10)^0,w,c
  7158  0113A8  263D               	addwf	(btemp+8)^0,f,c
  7159  0113AA  5040               	movf	(btemp+11)^0,w,c
  7160  0113AC  223E               	addwfc	(btemp+9)^0,f,c
  7161  0113AE  503E               	movf	(btemp+9)^0,w,c
  7162  0113B0  E106               	bnz	u10210
  7163  0113B2  0E0A               	movlw	10
  7164  0113B4  5C3D               	subwf	(btemp+8)^0,w,c
  7165  0113B6  B0D8               	btfsc	status,0,c
  7166  0113B8  D002               	goto	u10210
  7167  0113BA  0E01               	movlw	1
  7168  0113BC  D001               	goto	u10220
  7169  0113BE                     u10210:
  7170  0113BE  0E00               	movlw	0
  7171  0113C0                     u10220:
  7172  0113C0  6E3F               	movwf	(btemp+10)^0,c
  7173  0113C2  6A40               	clrf	(btemp+11)^0,c
  7174                           
  7175                           ;stkvar	_vfpfcnvrt$4255 @ sp[(-32)+4]
  7176  0113C4  0EE4               	movlw	-28
  7177  0113C6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7178  0113CC  0EE5               	movlw	-27
  7179  0113CE  0060  F103  FFE3   	movff	btemp+11,plusw1
  7180                           
  7181                           ;stkvar	_vfpfcnvrt$4255 @ sp[(-32)+4]
  7182  0113D4  0EE4               	movlw	-28
  7183  0113D6  006F FF8C  F035    	movff	plusw1,btemp
  7184  0113DC  0EE5               	movlw	-27
  7185  0113DE  50E3               	movf	plusw1,w,c
  7186  0113E0  1035               	iorwf	btemp^0,w,c
  7187  0113E2  A4D8               	btfss	status,2,c
  7188  0113E4  D7BD               	goto	l9855
  7189  0113E6                     u10230:
  7190                           
  7191                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 740:         if ((*fmt)[0] ==
      +                           '.') {
  7192                           ;stkvar	_fmt @ sp[(-32)+-4]
  7193  0113E6  0EDC               	movlw	-36
  7194  0113E8  006F FF8F FFD9     	movff	plusw1,fsr2l
  7195  0113EE  0EDD               	movlw	-35
  7196  0113F0  006F FF8F FFDA     	movff	plusw1,fsr2h
  7197  0113F6  006F FF7B FFF6     	movff	postinc2,tblptrl
  7198  0113FC  006F FF77 FFF7     	movff	postdec2,tblptrh
  7199  011402                     	if	0	;tblptru may be non-zero
  7200  011402                     	endif
  7201  011402                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7202  011402  0E00               	movlw	low (__mediumconst shr (0+16))
  7203  011404  6EF8               	movwf	tblptru,c
  7204  011406                     	endif
  7205  011406  0008               	tblrd		*
  7206  011408  50F5               	movf	tablat,w,c
  7207  01140A  0A2E               	xorlw	46
  7208  01140C  A4D8               	btfss	status,2,c
  7209  01140E  D0AC               	goto	u10280
  7210                           
  7211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 741:             prec = 0;
  7212  011410  6A20               	clrf	_prec^0,c
  7213  011412  6A21               	clrf	(_prec+1)^0,c
  7214                           
  7215                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 742:             ++*fmt;
  7216                           ;stkvar	_fmt @ sp[(-32)+-4]
  7217  011414  0EDC               	movlw	-36
  7218  011416  006F FF8F FFD9     	movff	plusw1,fsr2l
  7219  01141C  0EDD               	movlw	-35
  7220  01141E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7221  011424  2ADE               	incf	postinc2,f,c
  7222  011426  0E00               	movlw	0
  7223  011428  22DD               	addwfc	postdec2,f,c
  7224                           
  7225                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 743:             if ((*fmt)[0
      +                          ] == '*') {
  7226                           ;stkvar	_fmt @ sp[(-32)+-4]
  7227  01142A  0EDC               	movlw	-36
  7228  01142C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7229  011432  0EDD               	movlw	-35
  7230  011434  006F FF8F FFDA     	movff	plusw1,fsr2h
  7231  01143A  006F FF7B FFF6     	movff	postinc2,tblptrl
  7232  011440  006F FF77 FFF7     	movff	postdec2,tblptrh
  7233  011446                     	if	0	;tblptru may be non-zero
  7234  011446                     	endif
  7235  011446                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7236  011446  0E00               	movlw	low (__mediumconst shr (0+16))
  7237  011448  6EF8               	movwf	tblptru,c
  7238  01144A                     	endif
  7239  01144A  0008               	tblrd		*
  7240  01144C  50F5               	movf	tablat,w,c
  7241  01144E  0A2A               	xorlw	42
  7242  011450  A4D8               	btfss	status,2,c
  7243  011452  D02A               	goto	l9875
  7244                           
  7245                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 744:                 ++*fmt;
  7246                           ;stkvar	_fmt @ sp[(-32)+-4]
  7247  011454  0EDC               	movlw	-36
  7248  011456  006F FF8F FFD9     	movff	plusw1,fsr2l
  7249  01145C  0EDD               	movlw	-35
  7250  01145E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7251  011464  2ADE               	incf	postinc2,f,c
  7252  011466  0E00               	movlw	0
  7253  011468  22DD               	addwfc	postdec2,f,c
  7254                           
  7255                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 745:                 prec = (
      +                          *(int *)__va_arg(*(int **)ap, (int)0));
  7256                           ;stkvar	_ap @ sp[(-32)+-6]
  7257  01146A  0EDA               	movlw	-38
  7258  01146C  006F FF8F FFD9     	movff	plusw1,fsr2l
  7259  011472  0EDB               	movlw	-37
  7260  011474  006F FF8F FFDA     	movff	plusw1,fsr2h
  7261  01147A  0E02               	movlw	2
  7262  01147C  5EDE               	subwf	postinc2,f,c
  7263  01147E  0E00               	movlw	0
  7264  011480  5ADD               	subwfb	postdec2,f,c
  7265  011482  006F FF78  F03F    	movff	postinc2,btemp+10
  7266  011488  006F FF74  F040    	movff	postdec2,btemp+11
  7267  01148E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7268  011494  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7269  01149A  006F FF78  F020    	movff	postinc2,_prec
  7270  0114A0  006F FF74  F021    	movff	postdec2,_prec+1
  7271                           
  7272                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 746:             } else {
  7273  0114A6  D060               	goto	u10280
  7274  0114A8                     l9875:
  7275                           
  7276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 747:                 prec = a
      +                          toi(*fmt);
  7277                           ;stkvar	_fmt @ sp[(-32)+-4]
  7278  0114A8  0EDC               	movlw	-36
  7279  0114AA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7280  0114B0  0EDD               	movlw	-35
  7281  0114B2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7282  0114B8  006F FF78  F03F    	movff	postinc2,btemp+10
  7283  0114BE  006F FF74  F040    	movff	postdec2,btemp+11
  7284  0114C4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7285  0114CA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7286  0114D0  EC88  F0AB         	call	_atoi	;wreg free
  7287  0114D4  0060  F0D4  F020   	movff	btemp,_prec
  7288  0114DA  0060  F0D8  F021   	movff	btemp+1,_prec+1
  7289                           
  7290                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 748:                 while ((
      +                          0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7291  0114E0  D00B               	goto	l9879
  7292  0114E2                     l9877:
  7293                           
  7294                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 749:                     ++*f
      +                          mt;
  7295                           ;stkvar	_fmt @ sp[(-32)+-4]
  7296  0114E2  0EDC               	movlw	-36
  7297  0114E4  006F FF8F FFD9     	movff	plusw1,fsr2l
  7298  0114EA  0EDD               	movlw	-35
  7299  0114EC  006F FF8F FFDA     	movff	plusw1,fsr2h
  7300  0114F2  2ADE               	incf	postinc2,f,c
  7301  0114F4  0E00               	movlw	0
  7302  0114F6  22DD               	addwfc	postdec2,f,c
  7303  0114F8                     l9879:
  7304  0114F8  0ED0               	movlw	208
  7305  0114FA  6E3F               	movwf	(btemp+10)^0,c
  7306  0114FC  0EFF               	movlw	255
  7307  0114FE  6E40               	movwf	(btemp+11)^0,c
  7308                           
  7309                           ;stkvar	_fmt @ sp[(-32)+-4]
  7310  011500  0EDC               	movlw	-36
  7311  011502  006F FF8F FFD9     	movff	plusw1,fsr2l
  7312  011508  0EDD               	movlw	-35
  7313  01150A  006F FF8F FFDA     	movff	plusw1,fsr2h
  7314  011510  006F FF7B FFF6     	movff	postinc2,tblptrl
  7315  011516  006F FF77 FFF7     	movff	postdec2,tblptrh
  7316  01151C                     	if	0	;tblptru may be non-zero
  7317  01151C                     	endif
  7318  01151C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7319  01151C  0E00               	movlw	low (__mediumconst shr (0+16))
  7320  01151E  6EF8               	movwf	tblptru,c
  7321  011520                     	endif
  7322  011520  0008               	tblrd		*
  7323  011522  50F5               	movf	tablat,w,c
  7324  011524  6E3D               	movwf	(btemp+8)^0,c
  7325  011526  6A3E               	clrf	(btemp+9)^0,c
  7326  011528  503F               	movf	(btemp+10)^0,w,c
  7327  01152A  263D               	addwf	(btemp+8)^0,f,c
  7328  01152C  5040               	movf	(btemp+11)^0,w,c
  7329  01152E  223E               	addwfc	(btemp+9)^0,f,c
  7330  011530  503E               	movf	(btemp+9)^0,w,c
  7331  011532  E106               	bnz	u10260
  7332  011534  0E0A               	movlw	10
  7333  011536  5C3D               	subwf	(btemp+8)^0,w,c
  7334  011538  B0D8               	btfsc	status,0,c
  7335  01153A  D002               	goto	u10260
  7336  01153C  0E01               	movlw	1
  7337  01153E  D001               	goto	u10270
  7338  011540                     u10260:
  7339  011540  0E00               	movlw	0
  7340  011542                     u10270:
  7341  011542  6E3F               	movwf	(btemp+10)^0,c
  7342  011544  6A40               	clrf	(btemp+11)^0,c
  7343                           
  7344                           ;stkvar	_vfpfcnvrt$4256 @ sp[(-32)+0]
  7345  011546  0EE0               	movlw	-32
  7346  011548  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7347  01154E  0EE1               	movlw	-31
  7348  011550  0060  F103  FFE3   	movff	btemp+11,plusw1
  7349                           
  7350                           ;stkvar	_vfpfcnvrt$4256 @ sp[(-32)+0]
  7351  011556  0EE0               	movlw	-32
  7352  011558  006F FF8C  F035    	movff	plusw1,btemp
  7353  01155E  0EE1               	movlw	-31
  7354  011560  50E3               	movf	plusw1,w,c
  7355  011562  1035               	iorwf	btemp^0,w,c
  7356  011564  A4D8               	btfss	status,2,c
  7357  011566  D7BD               	goto	l9877
  7358  011568                     u10280:
  7359                           
  7360                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 757:         ct[0] = tolower(
      +                          (int)(*fmt)[0]);
  7361                           ;stkvar	_fmt @ sp[(-32)+-4]
  7362  011568  0EDC               	movlw	-36
  7363  01156A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7364  011570  0EDD               	movlw	-35
  7365  011572  006F FF8F FFDA     	movff	plusw1,fsr2h
  7366  011578  006F FF7B FFF6     	movff	postinc2,tblptrl
  7367  01157E  006F FF77 FFF7     	movff	postdec2,tblptrh
  7368  011584                     	if	0	;tblptru may be non-zero
  7369  011584                     	endif
  7370  011584                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7371  011584  0E00               	movlw	low (__mediumconst shr (0+16))
  7372  011586  6EF8               	movwf	tblptru,c
  7373  011588                     	endif
  7374  011588  0008               	tblrd		*
  7375  01158A  50F5               	movf	tablat,w,c
  7376  01158C  6EE6               	movwf	postinc1,c
  7377  01158E  0E00               	movlw	0
  7378  011590  6EE6               	movwf	postinc1,c
  7379  011592  EC63  F0BE         	call	_tolower	;wreg free
  7380                           
  7381                           ;stkvar	_ct @ sp[(-32)+26]
  7382  011596  0EFA               	movlw	-6
  7383  011598  0060  F0D7  FFE3   	movff	btemp,plusw1
  7384                           
  7385                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 758:         if (ct[0]) {
  7386                           ;stkvar	_ct @ sp[(-32)+26]
  7387  01159E  0EFA               	movlw	-6
  7388  0115A0  50E3               	movf	plusw1,w,c
  7389  0115A2  B4D8               	btfsc	status,2,c
  7390  0115A4  D05B               	goto	l9895
  7391                           
  7392                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 759:             ct[1] = tolo
      +                          wer((int)(*fmt)[1]);
  7393                           ;stkvar	_ct @ sp[(-32)+26]
  7394  0115A6  0EFB               	movlw	251
  7395  0115A8  24E1               	addwf	fsr1l,w,c
  7396  0115AA  6ED9               	movwf	fsr2l,c
  7397  0115AC  0EFF               	movlw	255
  7398  0115AE  20E2               	addwfc	fsr1h,w,c
  7399  0115B0  6EDA               	movwf	fsr2h,c
  7400                           
  7401                           ;stkvar	_fmt @ sp[(-32)+-4]
  7402  0115B2  0EDC               	movlw	-36
  7403  0115B4  006F FF8F FFE9     	movff	plusw1,fsr0l
  7404  0115BA  0EDD               	movlw	-35
  7405  0115BC  006F FF8F FFEA     	movff	plusw1,fsr0h
  7406  0115C2  006F FFB8  F03F    	movff	postinc0,btemp+10
  7407  0115C8  006F FFB4  F040    	movff	postdec0,btemp+11
  7408  0115CE  0E01               	movlw	1
  7409  0115D0  263F               	addwf	(btemp+10)^0,f,c
  7410  0115D2  0E00               	movlw	0
  7411  0115D4  2240               	addwfc	(btemp+11)^0,f,c
  7412  0115D6  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7413  0115DC  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7414  0115E2                     	if	0	;tblptru may be non-zero
  7415  0115E2                     	endif
  7416  0115E2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7417  0115E2  0E00               	movlw	low (__mediumconst shr (0+16))
  7418  0115E4  6EF8               	movwf	tblptru,c
  7419  0115E6                     	endif
  7420  0115E6  0008               	tblrd		*
  7421  0115E8  50F5               	movf	tablat,w,c
  7422  0115EA  6EE6               	movwf	postinc1,c
  7423  0115EC  0E00               	movlw	0
  7424  0115EE  6EE6               	movwf	postinc1,c
  7425  0115F0  EC63  F0BE         	call	_tolower	;wreg free
  7426  0115F4  5035               	movf	btemp^0,w,c
  7427  0115F6  6EDF               	movwf	indf2,c
  7428                           
  7429                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 760:             if (ct[1]) {
  7430                           ;stkvar	_ct @ sp[(-32)+26]
  7431  0115F8  0EFB               	movlw	251
  7432  0115FA  24E1               	addwf	fsr1l,w,c
  7433  0115FC  6ED9               	movwf	fsr2l,c
  7434  0115FE  0EFF               	movlw	255
  7435  011600  20E2               	addwfc	fsr1h,w,c
  7436  011602  6EDA               	movwf	fsr2h,c
  7437  011604  50DF               	movf	indf2,w,c
  7438  011606  B4D8               	btfsc	status,2,c
  7439  011608  D029               	goto	l9895
  7440                           
  7441                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 761:                 ct[2] = 
      +                          tolower((int)(*fmt)[2]);
  7442                           ;stkvar	_ct @ sp[(-32)+26]
  7443  01160A  0EFC               	movlw	252
  7444  01160C  24E1               	addwf	fsr1l,w,c
  7445  01160E  6ED9               	movwf	fsr2l,c
  7446  011610  0EFF               	movlw	255
  7447  011612  20E2               	addwfc	fsr1h,w,c
  7448  011614  6EDA               	movwf	fsr2h,c
  7449                           
  7450                           ;stkvar	_fmt @ sp[(-32)+-4]
  7451  011616  0EDC               	movlw	-36
  7452  011618  006F FF8F FFE9     	movff	plusw1,fsr0l
  7453  01161E  0EDD               	movlw	-35
  7454  011620  006F FF8F FFEA     	movff	plusw1,fsr0h
  7455  011626  006F FFB8  F03F    	movff	postinc0,btemp+10
  7456  01162C  006F FFB4  F040    	movff	postdec0,btemp+11
  7457  011632  0E02               	movlw	2
  7458  011634  263F               	addwf	(btemp+10)^0,f,c
  7459  011636  0E00               	movlw	0
  7460  011638  2240               	addwfc	(btemp+11)^0,f,c
  7461  01163A  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7462  011640  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7463  011646                     	if	0	;tblptru may be non-zero
  7464  011646                     	endif
  7465  011646                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7466  011646  0E00               	movlw	low (__mediumconst shr (0+16))
  7467  011648  6EF8               	movwf	tblptru,c
  7468  01164A                     	endif
  7469  01164A  0008               	tblrd		*
  7470  01164C  50F5               	movf	tablat,w,c
  7471  01164E  6EE6               	movwf	postinc1,c
  7472  011650  0E00               	movlw	0
  7473  011652  6EE6               	movwf	postinc1,c
  7474  011654  EC63  F0BE         	call	_tolower	;wreg free
  7475  011658  5035               	movf	btemp^0,w,c
  7476  01165A  6EDF               	movwf	indf2,c
  7477  01165C                     l9895:
  7478                           
  7479                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 792:         if (*fmt[0] == '
      +                          c') {
  7480                           ;stkvar	_fmt @ sp[(-32)+-4]
  7481  01165C  0EDC               	movlw	-36
  7482  01165E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7483  011664  0EDD               	movlw	-35
  7484  011666  006F FF8F FFDA     	movff	plusw1,fsr2h
  7485  01166C  006F FF7B FFF6     	movff	postinc2,tblptrl
  7486  011672  006F FF77 FFF7     	movff	postdec2,tblptrh
  7487  011678                     	if	0	;tblptru may be non-zero
  7488  011678                     	endif
  7489  011678                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7490  011678  0E00               	movlw	low (__mediumconst shr (0+16))
  7491  01167A  6EF8               	movwf	tblptru,c
  7492  01167C                     	endif
  7493  01167C  0008               	tblrd		*
  7494  01167E  50F5               	movf	tablat,w,c
  7495  011680  0A63               	xorlw	99
  7496  011682  A4D8               	btfss	status,2,c
  7497  011684  D037               	goto	l9905
  7498                           
  7499                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 793:             ++*fmt;
  7500                           ;stkvar	_fmt @ sp[(-32)+-4]
  7501  011686  0EDC               	movlw	-36
  7502  011688  006F FF8F FFD9     	movff	plusw1,fsr2l
  7503  01168E  0EDD               	movlw	-35
  7504  011690  006F FF8F FFDA     	movff	plusw1,fsr2h
  7505  011696  2ADE               	incf	postinc2,f,c
  7506  011698  0E00               	movlw	0
  7507  01169A  22DD               	addwfc	postdec2,f,c
  7508                           
  7509                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 794:             c = (unsigne
      +                          d char)(*(int *)__va_arg(*(int **)ap, (int)0));
  7510                           ;stkvar	_ap @ sp[(-32)+-6]
  7511  01169C  0EDA               	movlw	-38
  7512  01169E  006F FF8F FFD9     	movff	plusw1,fsr2l
  7513  0116A4  0EDB               	movlw	-37
  7514  0116A6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7515  0116AC  0E02               	movlw	2
  7516  0116AE  5EDE               	subwf	postinc2,f,c
  7517  0116B0  0E00               	movlw	0
  7518  0116B2  5ADD               	subwfb	postdec2,f,c
  7519  0116B4  006F FF78  F03F    	movff	postinc2,btemp+10
  7520  0116BA  006F FF74  F040    	movff	postdec2,btemp+11
  7521  0116C0  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7522  0116C6  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7523  0116CC  50DF               	movf	indf2,w,c
  7524  0116CE  6E40               	movwf	(btemp+11)^0,c
  7525                           
  7526                           ;stkvar	_c @ sp[(-32)+31]
  7527  0116D0  0EFF               	movlw	-1
  7528  0116D2  0060  F103  FFE3   	movff	btemp+11,plusw1
  7529                           
  7530                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 795:             return ctoa(
      +                          fp, c);
  7531                           ;stkvar	_c @ sp[(-32)+31]
  7532  0116D8  0EFF               	movlw	-1
  7533  0116DA  50E3               	movf	plusw1,w,c
  7534  0116DC  6EE6               	movwf	postinc1,c
  7535                           
  7536                           ;stkvar	_fp @ sp[(-33)+-2]
  7537  0116DE  0EDD               	movlw	-35
  7538  0116E0  006F FF8F FFE6     	movff	plusw1,postinc1
  7539  0116E6  006F FF8F FFE6     	movff	plusw1,postinc1
  7540  0116EC  ECDD  F0BD         	call	_ctoa	;wreg free
  7541  0116F0  EFF3  F090         	goto	l1975
  7542  0116F4                     l9905:
  7543                           
  7544                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 825:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  7545                           ;stkvar	_fmt @ sp[(-32)+-4]
  7546  0116F4  0EDC               	movlw	-36
  7547  0116F6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7548  0116FC  0EDD               	movlw	-35
  7549  0116FE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7550  011704  006F FF7B FFF6     	movff	postinc2,tblptrl
  7551  01170A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7552  011710                     	if	0	;tblptru may be non-zero
  7553  011710                     	endif
  7554  011710                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7555  011710  0E00               	movlw	low (__mediumconst shr (0+16))
  7556  011712  6EF8               	movwf	tblptru,c
  7557  011714                     	endif
  7558  011714  0008               	tblrd		*
  7559  011716  50F5               	movf	tablat,w,c
  7560  011718  0A64               	xorlw	100
  7561  01171A  B4D8               	btfsc	status,2,c
  7562  01171C  D015               	goto	u10330
  7563                           
  7564                           ;stkvar	_fmt @ sp[(-32)+-4]
  7565  01171E  0EDC               	movlw	-36
  7566  011720  006F FF8F FFD9     	movff	plusw1,fsr2l
  7567  011726  0EDD               	movlw	-35
  7568  011728  006F FF8F FFDA     	movff	plusw1,fsr2h
  7569  01172E  006F FF7B FFF6     	movff	postinc2,tblptrl
  7570  011734  006F FF77 FFF7     	movff	postdec2,tblptrh
  7571  01173A                     	if	0	;tblptru may be non-zero
  7572  01173A                     	endif
  7573  01173A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7574  01173A  0E00               	movlw	low (__mediumconst shr (0+16))
  7575  01173C  6EF8               	movwf	tblptru,c
  7576  01173E                     	endif
  7577  01173E  0008               	tblrd		*
  7578  011740  50F5               	movf	tablat,w,c
  7579  011742  0A69               	xorlw	105
  7580  011744  A4D8               	btfss	status,2,c
  7581  011746  D076               	goto	l9917
  7582  011748                     u10330:
  7583                           
  7584                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 827:             ++*fmt;
  7585                           ;stkvar	_fmt @ sp[(-32)+-4]
  7586  011748  0EDC               	movlw	-36
  7587  01174A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7588  011750  0EDD               	movlw	-35
  7589  011752  006F FF8F FFDA     	movff	plusw1,fsr2h
  7590  011758  2ADE               	incf	postinc2,f,c
  7591  01175A  0E00               	movlw	0
  7592  01175C  22DD               	addwfc	postdec2,f,c
  7593                           
  7594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 828:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7595                           ;stkvar	_ap @ sp[(-32)+-6]
  7596  01175E  0EDA               	movlw	-38
  7597  011760  006F FF8F FFD9     	movff	plusw1,fsr2l
  7598  011766  0EDB               	movlw	-37
  7599  011768  006F FF8F FFDA     	movff	plusw1,fsr2h
  7600  01176E  0E02               	movlw	2
  7601  011770  5EDE               	subwf	postinc2,f,c
  7602  011772  0E00               	movlw	0
  7603  011774  5ADD               	subwfb	postdec2,f,c
  7604  011776  006F FF78  F03F    	movff	postinc2,btemp+10
  7605  01177C  006F FF74  F040    	movff	postdec2,btemp+11
  7606  011782  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7607  011788  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7608  01178E  006F FF78  F03F    	movff	postinc2,btemp+10
  7609  011794  006F FF74  F040    	movff	postdec2,btemp+11
  7610                           
  7611                           ;stkvar	_ll @ sp[(-32)+14]
  7612  01179A  0EEE               	movlw	-18
  7613  01179C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7614  0117A2  0EEF               	movlw	-17
  7615  0117A4  0060  F103  FFE3   	movff	btemp+11,plusw1
  7616  0117AA  6A35               	clrf	btemp^0,c
  7617  0117AC  BEE3               	btfsc	plusw1,7,c
  7618  0117AE  6835               	setf	btemp^0,c
  7619  0117B0  0EF0               	movlw	-16
  7620  0117B2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7621  0117B8  0EF1               	movlw	-15
  7622  0117BA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7623  0117C0  0EF2               	movlw	-14
  7624  0117C2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7625  0117C8  0EF3               	movlw	-13
  7626  0117CA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7627  0117D0  0EF4               	movlw	-12
  7628  0117D2  0060  F0D7  FFE3   	movff	btemp,plusw1
  7629  0117D8  0EF5               	movlw	-11
  7630  0117DA  0060  F0D7  FFE3   	movff	btemp,plusw1
  7631  0117E0                     l9913:
  7632                           
  7633                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 830:             return dtoa(
      +                          fp, ll);
  7634                           ;stkvar	_ll @ sp[(-32)+14]
  7635  0117E0  50E1               	movf	fsr1l,w,c
  7636  0117E2  0FEE               	addlw	-18
  7637  0117E4  6ED9               	movwf	fsr2l,c
  7638  0117E6  50E2               	movf	fsr1h,w,c
  7639  0117E8  6EDA               	movwf	fsr2h,c
  7640  0117EA  0EFF               	movlw	255
  7641  0117EC  22DA               	addwfc	fsr2h,f,c
  7642  0117EE  006F FF7B FFE6     	movff	postinc2,postinc1
  7643  0117F4  006F FF7B FFE6     	movff	postinc2,postinc1
  7644  0117FA  006F FF7B FFE6     	movff	postinc2,postinc1
  7645  011800  006F FF7B FFE6     	movff	postinc2,postinc1
  7646  011806  006F FF7B FFE6     	movff	postinc2,postinc1
  7647  01180C  006F FF7B FFE6     	movff	postinc2,postinc1
  7648  011812  006F FF7B FFE6     	movff	postinc2,postinc1
  7649  011818  006F FF7B FFE6     	movff	postinc2,postinc1
  7650                           
  7651                           ;stkvar	_fp @ sp[(-40)+-2]
  7652  01181E  0ED6               	movlw	-42
  7653  011820  006F FF8F FFE6     	movff	plusw1,postinc1
  7654  011826  006F FF8F FFE6     	movff	plusw1,postinc1
  7655  01182C  EC07  F09E         	call	_dtoa	;wreg free
  7656  011830  EFF3  F090         	goto	l1975
  7657  011834                     l9917:
  7658                           
  7659                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 835:         if (!strncmp(*fm
      +                          t, "ld", ((sizeof("ld")/sizeof("ld"[0]))-1)) || !strncmp(*fmt, "li", ((sizeof("li")/size
      +                          of("li"[0]))-1))) {
  7660  011834  0E02               	movlw	2
  7661  011836  6EE6               	movwf	postinc1,c
  7662  011838  0E00               	movlw	0
  7663  01183A  6EE6               	movwf	postinc1,c
  7664  01183C  0EEA               	movlw	low STR_42
  7665  01183E  6EE6               	movwf	postinc1,c
  7666  011840  0EFF               	movlw	high STR_42
  7667  011842  6EE6               	movwf	postinc1,c
  7668                           
  7669                           ;stkvar	_fmt @ sp[(-36)+-4]
  7670  011844  0ED8               	movlw	-40
  7671  011846  006F FF8F FFD9     	movff	plusw1,fsr2l
  7672  01184C  0ED9               	movlw	-39
  7673  01184E  006F FF8F FFDA     	movff	plusw1,fsr2h
  7674  011854  006F FF78  F03F    	movff	postinc2,btemp+10
  7675  01185A  006F FF74  F040    	movff	postdec2,btemp+11
  7676  011860  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7677  011866  0060  F103  FFE6   	movff	btemp+11,postinc1
  7678  01186C  ECE2  F0AD         	call	_strncmp	;wreg free
  7679  011870  5035               	movf	btemp^0,w,c
  7680  011872  1036               	iorwf	(btemp+1)^0,w,c
  7681  011874  B4D8               	btfsc	status,2,c
  7682  011876  D022               	goto	u10350
  7683  011878  0E02               	movlw	2
  7684  01187A  6EE6               	movwf	postinc1,c
  7685  01187C  0E00               	movlw	0
  7686  01187E  6EE6               	movwf	postinc1,c
  7687  011880  0EF0               	movlw	low STR_46
  7688  011882  6EE6               	movwf	postinc1,c
  7689  011884  0EFF               	movlw	high STR_46
  7690  011886  6EE6               	movwf	postinc1,c
  7691                           
  7692                           ;stkvar	_fmt @ sp[(-36)+-4]
  7693  011888  0ED8               	movlw	-40
  7694  01188A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7695  011890  0ED9               	movlw	-39
  7696  011892  006F FF8F FFDA     	movff	plusw1,fsr2h
  7697  011898  006F FF78  F03F    	movff	postinc2,btemp+10
  7698  01189E  006F FF74  F040    	movff	postdec2,btemp+11
  7699  0118A4  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  7700  0118AA  0060  F103  FFE6   	movff	btemp+11,postinc1
  7701  0118B0  ECE2  F0AD         	call	_strncmp	;wreg free
  7702  0118B4  5035               	movf	btemp^0,w,c
  7703  0118B6  1036               	iorwf	(btemp+1)^0,w,c
  7704  0118B8  A4D8               	btfss	status,2,c
  7705  0118BA  D069               	goto	l9929
  7706  0118BC                     u10350:
  7707                           
  7708                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 836: ;/opt/microchip/xc8/v2.1
      +                          0/pic/sources/c99/common/doprnt.c: 838:             *fmt += ((sizeof("ld")/sizeof("ld"[0
      +                          ]))-1);
  7709                           ;stkvar	_fmt @ sp[(-32)+-4]
  7710  0118BC  0EDC               	movlw	-36
  7711  0118BE  006F FF8F FFD9     	movff	plusw1,fsr2l
  7712  0118C4  0EDD               	movlw	-35
  7713  0118C6  006F FF8F FFDA     	movff	plusw1,fsr2h
  7714  0118CC  0E02               	movlw	2
  7715  0118CE  26DE               	addwf	postinc2,f,c
  7716  0118D0  0E00               	movlw	0
  7717  0118D2  22DD               	addwfc	postdec2,f,c
  7718                           
  7719                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 839:             ll = (long l
      +                          ong)(*(long *)__va_arg(*(long **)ap, (long)0));
  7720                           ;stkvar	_ap @ sp[(-32)+-6]
  7721  0118D4  0EDA               	movlw	-38
  7722  0118D6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7723  0118DC  0EDB               	movlw	-37
  7724  0118DE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7725  0118E4  0E04               	movlw	4
  7726  0118E6  5EDE               	subwf	postinc2,f,c
  7727  0118E8  0E00               	movlw	0
  7728  0118EA  5ADD               	subwfb	postdec2,f,c
  7729  0118EC  006F FF78  F03F    	movff	postinc2,btemp+10
  7730  0118F2  006F FF74  F040    	movff	postdec2,btemp+11
  7731  0118F8  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7732  0118FE  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7733  011904  006F FF78  F03D    	movff	postinc2,btemp+8
  7734  01190A  006F FF78  F03E    	movff	postinc2,btemp+9
  7735  011910  006F FF78  F03F    	movff	postinc2,btemp+10
  7736  011916  006F FF78  F040    	movff	postinc2,btemp+11
  7737  01191C  0060  F0F4  F045   	movff	btemp+8,btemp+16
  7738  011922  0060  F0F8  F046   	movff	btemp+9,btemp+17
  7739  011928  0060  F0FC  F047   	movff	btemp+10,btemp+18
  7740  01192E  0060  F100  F048   	movff	btemp+11,btemp+19
  7741  011934  6A49               	clrf	(btemp+20)^0,c
  7742  011936  BE48               	btfsc	(btemp+19)^0,7,c
  7743  011938  6849               	setf	(btemp+20)^0,c
  7744  01193A  0060  F124  F04A   	movff	btemp+20,btemp+21
  7745  011940  0060  F124  F04B   	movff	btemp+20,btemp+22
  7746  011946  0060  F124  F04C   	movff	btemp+20,btemp+23
  7747                           
  7748                           ;stkvar	_ll @ sp[(-32)+14]
  7749  01194C  0EEE               	movlw	-18
  7750  01194E  0060  F117  FFE3   	movff	btemp+16,plusw1
  7751  011954  0EEF               	movlw	-17
  7752  011956  0060  F11B  FFE3   	movff	btemp+17,plusw1
  7753  01195C  0EF0               	movlw	-16
  7754  01195E  0060  F11F  FFE3   	movff	btemp+18,plusw1
  7755  011964  0EF1               	movlw	-15
  7756  011966  0060  F123  FFE3   	movff	btemp+19,plusw1
  7757  01196C  0EF2               	movlw	-14
  7758  01196E  0060  F127  FFE3   	movff	btemp+20,plusw1
  7759  011974  0EF3               	movlw	-13
  7760  011976  0060  F12B  FFE3   	movff	btemp+21,plusw1
  7761  01197C  0EF4               	movlw	-12
  7762  01197E  0060  F12F  FFE3   	movff	btemp+22,plusw1
  7763  011984  0EF5               	movlw	-11
  7764  011986  0060  F133  FFE3   	movff	btemp+23,plusw1
  7765  01198C  D729               	goto	l9913
  7766  01198E                     l9929:
  7767                           
  7768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 920:         if (ct[0] == 'f'
      +                          ) {
  7769                           ;stkvar	_ct @ sp[(-32)+26]
  7770  01198E  0EFA               	movlw	-6
  7771  011990  006F FF8C  F035    	movff	plusw1,btemp
  7772  011996  0E66               	movlw	102
  7773  011998  1835               	xorwf	btemp^0,w,c
  7774  01199A  A4D8               	btfss	status,2,c
  7775  01199C  D06E               	goto	l9941
  7776                           
  7777                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 922:             c = (*fmt)[0
      +                          ];
  7778                           ;stkvar	_fmt @ sp[(-32)+-4]
  7779  01199E  0EDC               	movlw	-36
  7780  0119A0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7781  0119A6  0EDD               	movlw	-35
  7782  0119A8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7783  0119AE  006F FF7B FFF6     	movff	postinc2,tblptrl
  7784  0119B4  006F FF77 FFF7     	movff	postdec2,tblptrh
  7785  0119BA                     	if	0	;tblptru may be non-zero
  7786  0119BA                     	endif
  7787  0119BA                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7788  0119BA  0E00               	movlw	low (__mediumconst shr (0+16))
  7789  0119BC  6EF8               	movwf	tblptru,c
  7790  0119BE                     	endif
  7791                           
  7792                           ;stkvar	_c @ sp[(-32)+31]
  7793  0119BE  0008               	tblrd		*
  7794  0119C0  0EFF               	movlw	-1
  7795  0119C2  006F FFD7 FFE3     	movff	tablat,plusw1
  7796                           
  7797                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 923:             ++*fmt;
  7798                           ;stkvar	_fmt @ sp[(-32)+-4]
  7799  0119C8  0EDC               	movlw	-36
  7800  0119CA  006F FF8F FFD9     	movff	plusw1,fsr2l
  7801  0119D0  0EDD               	movlw	-35
  7802  0119D2  006F FF8F FFDA     	movff	plusw1,fsr2h
  7803  0119D8  2ADE               	incf	postinc2,f,c
  7804  0119DA  0E00               	movlw	0
  7805  0119DC  22DD               	addwfc	postdec2,f,c
  7806                           
  7807                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 924:             f = (long do
      +                          uble)(*(double *)__va_arg(*(double **)ap, (double)0));
  7808                           ;stkvar	_ap @ sp[(-32)+-6]
  7809  0119DE  0EDA               	movlw	-38
  7810  0119E0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7811  0119E6  0EDB               	movlw	-37
  7812  0119E8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7813  0119EE  0E04               	movlw	4
  7814  0119F0  5EDE               	subwf	postinc2,f,c
  7815  0119F2  0E00               	movlw	0
  7816  0119F4  5ADD               	subwfb	postdec2,f,c
  7817  0119F6  006F FF78  F03F    	movff	postinc2,btemp+10
  7818  0119FC  006F FF74  F040    	movff	postdec2,btemp+11
  7819  011A02  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7820  011A08  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7821  011A0E  006F FF78  F03D    	movff	postinc2,btemp+8
  7822  011A14  006F FF78  F03E    	movff	postinc2,btemp+9
  7823  011A1A  006F FF78  F03F    	movff	postinc2,btemp+10
  7824  011A20  006F FF78  F040    	movff	postinc2,btemp+11
  7825                           
  7826                           ;stkvar	_f @ sp[(-32)+22]
  7827  011A26  0EF6               	movlw	-10
  7828  011A28  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7829  011A2E  0EF7               	movlw	-9
  7830  011A30  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7831  011A36  0EF8               	movlw	-8
  7832  011A38  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7833  011A3E  0EF9               	movlw	-7
  7834  011A40  0060  F103  FFE3   	movff	btemp+11,plusw1
  7835  011A46                     l9937:
  7836                           
  7837                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 926:             return efgto
      +                          a(fp, f, c);
  7838                           ;stkvar	_c @ sp[(-32)+31]
  7839  011A46  0EFF               	movlw	-1
  7840  011A48  50E3               	movf	plusw1,w,c
  7841  011A4A  6EE6               	movwf	postinc1,c
  7842                           
  7843                           ;stkvar	_f @ sp[(-33)+22]
  7844  011A4C  0EF5               	movlw	-11
  7845  011A4E  006F FF8F FFE6     	movff	plusw1,postinc1
  7846  011A54  006F FF8F FFE6     	movff	plusw1,postinc1
  7847  011A5A  006F FF8F FFE6     	movff	plusw1,postinc1
  7848  011A60  006F FF8F FFE6     	movff	plusw1,postinc1
  7849                           
  7850                           ;stkvar	_fp @ sp[(-37)+-2]
  7851  011A66  0ED9               	movlw	-39
  7852  011A68  006F FF8F FFE6     	movff	plusw1,postinc1
  7853  011A6E  006F FF8F FFE6     	movff	plusw1,postinc1
  7854  011A74  EC00  F080         	call	_efgtoa	;wreg free
  7855  011A78  D3B6               	goto	l1975
  7856  011A7A                     l9941:
  7857                           
  7858                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 928:         if (!strncmp(ct,
      +                           "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7859  011A7A  0E02               	movlw	2
  7860  011A7C  6EE6               	movwf	postinc1,c
  7861  011A7E  0E00               	movlw	0
  7862  011A80  6EE6               	movwf	postinc1,c
  7863  011A82  0EED               	movlw	low STR_51
  7864  011A84  6EE6               	movwf	postinc1,c
  7865  011A86  0EFF               	movlw	high STR_51
  7866  011A88  6EE6               	movwf	postinc1,c
  7867                           
  7868                           ;stkvar	_ct @ sp[(-36)+26]
  7869  011A8A  0EF6               	movlw	246
  7870  011A8C  24E1               	addwf	fsr1l,w,c
  7871  011A8E  6E35               	movwf	btemp^0,c
  7872  011A90  0EFF               	movlw	255
  7873  011A92  20E2               	addwfc	fsr1h,w,c
  7874  011A94  6E36               	movwf	(btemp+1)^0,c
  7875  011A96  0060  F0D7  FFE6   	movff	btemp,postinc1
  7876  011A9C  0060  F0DB  FFE6   	movff	btemp+1,postinc1
  7877  011AA2  ECE2  F0AD         	call	_strncmp	;wreg free
  7878  011AA6  5035               	movf	btemp^0,w,c
  7879  011AA8  1036               	iorwf	(btemp+1)^0,w,c
  7880  011AAA  A4D8               	btfss	status,2,c
  7881  011AAC  D096               	goto	l9961
  7882                           
  7883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 931:             if ((0 ? isu
      +                          pper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7884                           ;stkvar	_fmt @ sp[(-32)+-4]
  7885  011AAE  0EDC               	movlw	-36
  7886  011AB0  006F FF8F FFD9     	movff	plusw1,fsr2l
  7887  011AB6  0EDD               	movlw	-35
  7888  011AB8  006F FF8F FFDA     	movff	plusw1,fsr2h
  7889  011ABE  006F FF78  F03F    	movff	postinc2,btemp+10
  7890  011AC4  006F FF74  F040    	movff	postdec2,btemp+11
  7891  011ACA  0E01               	movlw	1
  7892  011ACC  263F               	addwf	(btemp+10)^0,f,c
  7893  011ACE  0E00               	movlw	0
  7894  011AD0  2240               	addwfc	(btemp+11)^0,f,c
  7895  011AD2  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  7896  011AD8  0060  F103  FFF7   	movff	btemp+11,tblptrh
  7897  011ADE                     	if	0	;tblptru may be non-zero
  7898  011ADE                     	endif
  7899  011ADE                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7900  011ADE  0E00               	movlw	low (__mediumconst shr (0+16))
  7901  011AE0  6EF8               	movwf	tblptru,c
  7902  011AE2                     	endif
  7903                           
  7904                           ;stkvar	_c @ sp[(-32)+31]
  7905  011AE2  0008               	tblrd		*
  7906  011AE4  0EFF               	movlw	-1
  7907  011AE6  006F FFD7 FFE3     	movff	tablat,plusw1
  7908  011AEC  0EBF               	movlw	191
  7909  011AEE  6E3F               	movwf	(btemp+10)^0,c
  7910  011AF0  0EFF               	movlw	255
  7911  011AF2  6E40               	movwf	(btemp+11)^0,c
  7912                           
  7913                           ;stkvar	_fmt @ sp[(-32)+-4]
  7914  011AF4  0EDC               	movlw	-36
  7915  011AF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  7916  011AFC  0EDD               	movlw	-35
  7917  011AFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  7918  011B04  006F FF7B FFF6     	movff	postinc2,tblptrl
  7919  011B0A  006F FF77 FFF7     	movff	postdec2,tblptrh
  7920  011B10                     	if	0	;tblptru may be non-zero
  7921  011B10                     	endif
  7922  011B10                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  7923  011B10  0E00               	movlw	low (__mediumconst shr (0+16))
  7924  011B12  6EF8               	movwf	tblptru,c
  7925  011B14                     	endif
  7926  011B14  0008               	tblrd		*
  7927  011B16  50F5               	movf	tablat,w,c
  7928  011B18  6E3D               	movwf	(btemp+8)^0,c
  7929  011B1A  6A3E               	clrf	(btemp+9)^0,c
  7930  011B1C  503F               	movf	(btemp+10)^0,w,c
  7931  011B1E  263D               	addwf	(btemp+8)^0,f,c
  7932  011B20  5040               	movf	(btemp+11)^0,w,c
  7933  011B22  223E               	addwfc	(btemp+9)^0,f,c
  7934  011B24  503E               	movf	(btemp+9)^0,w,c
  7935  011B26  E106               	bnz	u10380
  7936  011B28  0E1A               	movlw	26
  7937  011B2A  5C3D               	subwf	(btemp+8)^0,w,c
  7938  011B2C  B0D8               	btfsc	status,0,c
  7939  011B2E  D002               	goto	u10380
  7940  011B30  0E01               	movlw	1
  7941  011B32  D001               	goto	u10390
  7942  011B34                     u10380:
  7943  011B34  0E00               	movlw	0
  7944  011B36                     u10390:
  7945  011B36  6E3F               	movwf	(btemp+10)^0,c
  7946  011B38  6A40               	clrf	(btemp+11)^0,c
  7947                           
  7948                           ;stkvar	_vfpfcnvrt$4267 @ sp[(-32)+2]
  7949  011B3A  0EE2               	movlw	-30
  7950  011B3C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7951  011B42  0EE3               	movlw	-29
  7952  011B44  0060  F103  FFE3   	movff	btemp+11,plusw1
  7953                           
  7954                           ;stkvar	_vfpfcnvrt$4267 @ sp[(-32)+2]
  7955  011B4A  0EE2               	movlw	-30
  7956  011B4C  006F FF8C  F035    	movff	plusw1,btemp
  7957  011B52  0EE3               	movlw	-29
  7958  011B54  50E3               	movf	plusw1,w,c
  7959  011B56  1035               	iorwf	btemp^0,w,c
  7960                           
  7961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 934:                 f = (lon
      +                          g double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7962                           ;stkvar	_ap @ sp[(-32)+-6]
  7963                           
  7964                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 933:             } else {
  7965                           
  7966                           ;stkvar	_f @ sp[(-32)+22]
  7967                           
  7968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 932:                 f = (*(l
      +                          ong double *)__va_arg(*(long double **)ap, (long double)0));
  7969                           ;stkvar	_ap @ sp[(-32)+-6]
  7970  011B58  0EDA               	movlw	-38
  7971  011B5A  006F FF8F FFD9     	movff	plusw1,fsr2l
  7972  011B60  0EDB               	movlw	-37
  7973  011B62  006F FF8F FFDA     	movff	plusw1,fsr2h
  7974  011B68  0E04               	movlw	4
  7975  011B6A  5EDE               	subwf	postinc2,f,c
  7976  011B6C  0E00               	movlw	0
  7977  011B6E  5ADD               	subwfb	postdec2,f,c
  7978  011B70  006F FF78  F03F    	movff	postinc2,btemp+10
  7979  011B76  006F FF74  F040    	movff	postdec2,btemp+11
  7980  011B7C  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  7981  011B82  0060  F103  FFDA   	movff	btemp+11,fsr2h
  7982  011B88  006F FF78  F03D    	movff	postinc2,btemp+8
  7983  011B8E  006F FF78  F03E    	movff	postinc2,btemp+9
  7984  011B94  006F FF78  F03F    	movff	postinc2,btemp+10
  7985  011B9A  006F FF78  F040    	movff	postinc2,btemp+11
  7986                           
  7987                           ;stkvar	_f @ sp[(-32)+22]
  7988  011BA0  0EF6               	movlw	-10
  7989  011BA2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
  7990  011BA8  0EF7               	movlw	-9
  7991  011BAA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
  7992  011BB0  0EF8               	movlw	-8
  7993  011BB2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  7994  011BB8  0EF9               	movlw	-7
  7995  011BBA  0060  F103  FFE3   	movff	btemp+11,plusw1
  7996                           
  7997                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 936:             *fmt += ((si
      +                          zeof("lf")/sizeof("lf"[0]))-1);
  7998                           ;stkvar	_fmt @ sp[(-32)+-4]
  7999  011BC0  0EDC               	movlw	-36
  8000  011BC2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8001  011BC8  0EDD               	movlw	-35
  8002  011BCA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8003  011BD0  0E02               	movlw	2
  8004  011BD2  26DE               	addwf	postinc2,f,c
  8005  011BD4  0E00               	movlw	0
  8006  011BD6  22DD               	addwfc	postdec2,f,c
  8007  011BD8  D736               	goto	l9937
  8008  011BDA                     l9961:
  8009                           
  8010                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1149:         if (*fmt[0] == 
      +                          's') {
  8011                           ;stkvar	_fmt @ sp[(-32)+-4]
  8012  011BDA  0EDC               	movlw	-36
  8013  011BDC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8014  011BE2  0EDD               	movlw	-35
  8015  011BE4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8016  011BEA  006F FF7B FFF6     	movff	postinc2,tblptrl
  8017  011BF0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8018  011BF6                     	if	0	;tblptru may be non-zero
  8019  011BF6                     	endif
  8020  011BF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8021  011BF6  0E00               	movlw	low (__mediumconst shr (0+16))
  8022  011BF8  6EF8               	movwf	tblptru,c
  8023  011BFA                     	endif
  8024  011BFA  0008               	tblrd		*
  8025  011BFC  50F5               	movf	tablat,w,c
  8026  011BFE  0A73               	xorlw	115
  8027  011C00  A4D8               	btfss	status,2,c
  8028  011C02  D042               	goto	l9971
  8029                           
  8030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1151:             ++*fmt;
  8031                           ;stkvar	_fmt @ sp[(-32)+-4]
  8032  011C04  0EDC               	movlw	-36
  8033  011C06  006F FF8F FFD9     	movff	plusw1,fsr2l
  8034  011C0C  0EDD               	movlw	-35
  8035  011C0E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8036  011C14  2ADE               	incf	postinc2,f,c
  8037  011C16  0E00               	movlw	0
  8038  011C18  22DD               	addwfc	postdec2,f,c
  8039                           
  8040                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1152:             cp = (*(cha
      +                          r * *)__va_arg(*(char * **)ap, (char *)0));
  8041                           ;stkvar	_ap @ sp[(-32)+-6]
  8042  011C1A  0EDA               	movlw	-38
  8043  011C1C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8044  011C22  0EDB               	movlw	-37
  8045  011C24  006F FF8F FFDA     	movff	plusw1,fsr2h
  8046  011C2A  0E02               	movlw	2
  8047  011C2C  5EDE               	subwf	postinc2,f,c
  8048  011C2E  0E00               	movlw	0
  8049  011C30  5ADD               	subwfb	postdec2,f,c
  8050  011C32  006F FF78  F03F    	movff	postinc2,btemp+10
  8051  011C38  006F FF74  F040    	movff	postdec2,btemp+11
  8052  011C3E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8053  011C44  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8054  011C4A  006F FF78  F03F    	movff	postinc2,btemp+10
  8055  011C50  006F FF74  F040    	movff	postdec2,btemp+11
  8056                           
  8057                           ;stkvar	_cp @ sp[(-32)+29]
  8058  011C56  0EFE               	movlw	-2
  8059  011C58  0060  F103  FFE3   	movff	btemp+11,plusw1
  8060  011C5E  0EFD               	movlw	-3
  8061  011C60  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8062                           
  8063                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1154:             return stoa
      +                          (fp, cp);
  8064                           ;stkvar	_cp @ sp[(-32)+29]
  8065  011C66  0EFD               	movlw	-3
  8066  011C68  006F FF8F FFE6     	movff	plusw1,postinc1
  8067  011C6E  006F FF8F FFE6     	movff	plusw1,postinc1
  8068                           
  8069                           ;stkvar	_fp @ sp[(-34)+-2]
  8070  011C74  0EDC               	movlw	-36
  8071  011C76  006F FF8F FFE6     	movff	plusw1,postinc1
  8072  011C7C  006F FF8F FFE6     	movff	plusw1,postinc1
  8073  011C82  ECE9  F0A8         	call	_stoa	;wreg free
  8074  011C86  D2AF               	goto	l1975
  8075  011C88                     l9971:
  8076                           
  8077                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1182:         if (*fmt[0] == 
      +                          'u') {
  8078                           ;stkvar	_fmt @ sp[(-32)+-4]
  8079  011C88  0EDC               	movlw	-36
  8080  011C8A  006F FF8F FFD9     	movff	plusw1,fsr2l
  8081  011C90  0EDD               	movlw	-35
  8082  011C92  006F FF8F FFDA     	movff	plusw1,fsr2h
  8083  011C98  006F FF7B FFF6     	movff	postinc2,tblptrl
  8084  011C9E  006F FF77 FFF7     	movff	postdec2,tblptrh
  8085  011CA4                     	if	0	;tblptru may be non-zero
  8086  011CA4                     	endif
  8087  011CA4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8088  011CA4  0E00               	movlw	low (__mediumconst shr (0+16))
  8089  011CA6  6EF8               	movwf	tblptru,c
  8090  011CA8                     	endif
  8091  011CA8  0008               	tblrd		*
  8092  011CAA  50F5               	movf	tablat,w,c
  8093  011CAC  0A75               	xorlw	117
  8094  011CAE  A4D8               	btfss	status,2,c
  8095  011CB0  D07C               	goto	l9981
  8096                           
  8097                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1184:             ++*fmt;
  8098                           ;stkvar	_fmt @ sp[(-32)+-4]
  8099  011CB2  0EDC               	movlw	-36
  8100  011CB4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8101  011CBA  0EDD               	movlw	-35
  8102  011CBC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8103  011CC2  2ADE               	incf	postinc2,f,c
  8104  011CC4  0E00               	movlw	0
  8105  011CC6  22DD               	addwfc	postdec2,f,c
  8106                           
  8107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1185:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8108                           ;stkvar	_ap @ sp[(-32)+-6]
  8109  011CC8  0EDA               	movlw	-38
  8110  011CCA  006F FF8F FFD9     	movff	plusw1,fsr2l
  8111  011CD0  0EDB               	movlw	-37
  8112  011CD2  006F FF8F FFDA     	movff	plusw1,fsr2h
  8113  011CD8  0E02               	movlw	2
  8114  011CDA  5EDE               	subwf	postinc2,f,c
  8115  011CDC  0E00               	movlw	0
  8116  011CDE  5ADD               	subwfb	postdec2,f,c
  8117  011CE0  006F FF78  F03F    	movff	postinc2,btemp+10
  8118  011CE6  006F FF74  F040    	movff	postdec2,btemp+11
  8119  011CEC  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8120  011CF2  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8121  011CF8  006F FF78  F03F    	movff	postinc2,btemp+10
  8122  011CFE  006F FF74  F040    	movff	postdec2,btemp+11
  8123  011D04  503F               	movf	(btemp+10)^0,w,c
  8124  011D06  6E45               	movwf	(btemp+16)^0,c
  8125  011D08  5040               	movf	(btemp+11)^0,w,c
  8126  011D0A  6E46               	movwf	(btemp+17)^0,c
  8127  011D0C  6A47               	clrf	(btemp+18)^0,c
  8128  011D0E  6A48               	clrf	(btemp+19)^0,c
  8129  011D10  6A49               	clrf	(btemp+20)^0,c
  8130  011D12  6A4A               	clrf	(btemp+21)^0,c
  8131  011D14  6A4B               	clrf	(btemp+22)^0,c
  8132  011D16  6A4C               	clrf	(btemp+23)^0,c
  8133                           
  8134                           ;stkvar	_llu @ sp[(-32)+6]
  8135  011D18  0EE6               	movlw	-26
  8136  011D1A  0060  F117  FFE3   	movff	btemp+16,plusw1
  8137  011D20  0EE7               	movlw	-25
  8138  011D22  0060  F11B  FFE3   	movff	btemp+17,plusw1
  8139  011D28  0EE8               	movlw	-24
  8140  011D2A  0060  F11F  FFE3   	movff	btemp+18,plusw1
  8141  011D30  0EE9               	movlw	-23
  8142  011D32  0060  F123  FFE3   	movff	btemp+19,plusw1
  8143  011D38  0EEA               	movlw	-22
  8144  011D3A  0060  F127  FFE3   	movff	btemp+20,plusw1
  8145  011D40  0EEB               	movlw	-21
  8146  011D42  0060  F12B  FFE3   	movff	btemp+21,plusw1
  8147  011D48  0EEC               	movlw	-20
  8148  011D4A  0060  F12F  FFE3   	movff	btemp+22,plusw1
  8149  011D50  0EED               	movlw	-19
  8150  011D52  0060  F133  FFE3   	movff	btemp+23,plusw1
  8151                           
  8152                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1187:             return utoa
      +                          (fp, llu);
  8153                           ;stkvar	_llu @ sp[(-32)+6]
  8154  011D58  50E1               	movf	fsr1l,w,c
  8155  011D5A  0FE6               	addlw	-26
  8156  011D5C  6ED9               	movwf	fsr2l,c
  8157  011D5E  50E2               	movf	fsr1h,w,c
  8158  011D60  6EDA               	movwf	fsr2h,c
  8159  011D62  0EFF               	movlw	255
  8160  011D64  22DA               	addwfc	fsr2h,f,c
  8161  011D66  006F FF7B FFE6     	movff	postinc2,postinc1
  8162  011D6C  006F FF7B FFE6     	movff	postinc2,postinc1
  8163  011D72  006F FF7B FFE6     	movff	postinc2,postinc1
  8164  011D78  006F FF7B FFE6     	movff	postinc2,postinc1
  8165  011D7E  006F FF7B FFE6     	movff	postinc2,postinc1
  8166  011D84  006F FF7B FFE6     	movff	postinc2,postinc1
  8167  011D8A  006F FF7B FFE6     	movff	postinc2,postinc1
  8168  011D90  006F FF7B FFE6     	movff	postinc2,postinc1
  8169                           
  8170                           ;stkvar	_fp @ sp[(-40)+-2]
  8171  011D96  0ED6               	movlw	-42
  8172  011D98  006F FF8F FFE6     	movff	plusw1,postinc1
  8173  011D9E  006F FF8F FFE6     	movff	plusw1,postinc1
  8174  011DA4  ECD3  F0A5         	call	_utoa	;wreg free
  8175  011DA8  D21E               	goto	l1975
  8176  011DAA                     l9981:
  8177                           
  8178                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1192:         if (!strncmp(*f
      +                          mt, "lu", ((sizeof("lu")/sizeof("lu"[0]))-1))) {
  8179  011DAA  0E02               	movlw	2
  8180  011DAC  6EE6               	movwf	postinc1,c
  8181  011DAE  0E00               	movlw	0
  8182  011DB0  6EE6               	movwf	postinc1,c
  8183  011DB2  0EF3               	movlw	low STR_56
  8184  011DB4  6EE6               	movwf	postinc1,c
  8185  011DB6  0EFF               	movlw	high STR_56
  8186  011DB8  6EE6               	movwf	postinc1,c
  8187                           
  8188                           ;stkvar	_fmt @ sp[(-36)+-4]
  8189  011DBA  0ED8               	movlw	-40
  8190  011DBC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8191  011DC2  0ED9               	movlw	-39
  8192  011DC4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8193  011DCA  006F FF78  F03F    	movff	postinc2,btemp+10
  8194  011DD0  006F FF74  F040    	movff	postdec2,btemp+11
  8195  011DD6  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8196  011DDC  0060  F103  FFE6   	movff	btemp+11,postinc1
  8197  011DE2  ECE2  F0AD         	call	_strncmp	;wreg free
  8198  011DE6  5035               	movf	btemp^0,w,c
  8199  011DE8  1036               	iorwf	(btemp+1)^0,w,c
  8200  011DEA  A4D8               	btfss	status,2,c
  8201  011DEC  D039               	goto	l9991
  8202                           
  8203                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1194:             *fmt += ((s
      +                          izeof("lu")/sizeof("lu"[0]))-1);
  8204                           ;stkvar	_fmt @ sp[(-32)+-4]
  8205  011DEE  0EDC               	movlw	-36
  8206  011DF0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8207  011DF6  0EDD               	movlw	-35
  8208  011DF8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8209  011DFE  0E02               	movlw	2
  8210  011E00  26DE               	addwf	postinc2,f,c
  8211  011E02  0E00               	movlw	0
  8212  011E04  22DD               	addwfc	postdec2,f,c
  8213                           
  8214                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1195:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8215                           ;stkvar	_ap @ sp[(-32)+-6]
  8216  011E06  0EDA               	movlw	-38
  8217  011E08  006F FF8F FFD9     	movff	plusw1,fsr2l
  8218  011E0E  0EDB               	movlw	-37
  8219  011E10  006F FF8F FFDA     	movff	plusw1,fsr2h
  8220  011E16  0E04               	movlw	4
  8221  011E18  5EDE               	subwf	postinc2,f,c
  8222  011E1A  0E00               	movlw	0
  8223  011E1C  5ADD               	subwfb	postdec2,f,c
  8224  011E1E  006F FF78  F03F    	movff	postinc2,btemp+10
  8225  011E24  006F FF74  F040    	movff	postdec2,btemp+11
  8226  011E2A  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8227  011E30  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8228  011E36  006F FF78  F03D    	movff	postinc2,btemp+8
  8229  011E3C  006F FF78  F03E    	movff	postinc2,btemp+9
  8230  011E42  006F FF78  F03F    	movff	postinc2,btemp+10
  8231  011E48  006F FF78  F040    	movff	postinc2,btemp+11
  8232  011E4E  503D               	movf	(btemp+8)^0,w,c
  8233  011E50  6E45               	movwf	(btemp+16)^0,c
  8234  011E52  503E               	movf	(btemp+9)^0,w,c
  8235  011E54  6E46               	movwf	(btemp+17)^0,c
  8236  011E56  503F               	movf	(btemp+10)^0,w,c
  8237  011E58  6E47               	movwf	(btemp+18)^0,c
  8238  011E5A  5040               	movf	(btemp+11)^0,w,c
  8239  011E5C  6E48               	movwf	(btemp+19)^0,c
  8240  011E5E  D758               	goto	L5
  8241  011E60                     l9991:
  8242                           
  8243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1274:         if ((*fmt[0] ==
      +                           'x') || (*fmt[0] == 'X')) {
  8244                           ;stkvar	_fmt @ sp[(-32)+-4]
  8245  011E60  0EDC               	movlw	-36
  8246  011E62  006F FF8F FFD9     	movff	plusw1,fsr2l
  8247  011E68  0EDD               	movlw	-35
  8248  011E6A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8249  011E70  006F FF7B FFF6     	movff	postinc2,tblptrl
  8250  011E76  006F FF77 FFF7     	movff	postdec2,tblptrh
  8251  011E7C                     	if	0	;tblptru may be non-zero
  8252  011E7C                     	endif
  8253  011E7C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8254  011E7C  0E00               	movlw	low (__mediumconst shr (0+16))
  8255  011E7E  6EF8               	movwf	tblptru,c
  8256  011E80                     	endif
  8257  011E80  0008               	tblrd		*
  8258  011E82  50F5               	movf	tablat,w,c
  8259  011E84  0A78               	xorlw	120
  8260  011E86  B4D8               	btfsc	status,2,c
  8261  011E88  D015               	goto	u10450
  8262                           
  8263                           ;stkvar	_fmt @ sp[(-32)+-4]
  8264  011E8A  0EDC               	movlw	-36
  8265  011E8C  006F FF8F FFD9     	movff	plusw1,fsr2l
  8266  011E92  0EDD               	movlw	-35
  8267  011E94  006F FF8F FFDA     	movff	plusw1,fsr2h
  8268  011E9A  006F FF7B FFF6     	movff	postinc2,tblptrl
  8269  011EA0  006F FF77 FFF7     	movff	postdec2,tblptrh
  8270  011EA6                     	if	0	;tblptru may be non-zero
  8271  011EA6                     	endif
  8272  011EA6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8273  011EA6  0E00               	movlw	low (__mediumconst shr (0+16))
  8274  011EA8  6EF8               	movwf	tblptru,c
  8275  011EAA                     	endif
  8276  011EAA  0008               	tblrd		*
  8277  011EAC  50F5               	movf	tablat,w,c
  8278  011EAE  0A58               	xorlw	88
  8279  011EB0  A4D8               	btfss	status,2,c
  8280  011EB2  D094               	goto	l10005
  8281  011EB4                     u10450:
  8282                           
  8283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1276:             c = (*fmt)[
      +                          0];
  8284                           ;stkvar	_fmt @ sp[(-32)+-4]
  8285  011EB4  0EDC               	movlw	-36
  8286  011EB6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8287  011EBC  0EDD               	movlw	-35
  8288  011EBE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8289  011EC4  006F FF7B FFF6     	movff	postinc2,tblptrl
  8290  011ECA  006F FF77 FFF7     	movff	postdec2,tblptrh
  8291  011ED0                     	if	0	;tblptru may be non-zero
  8292  011ED0                     	endif
  8293  011ED0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8294  011ED0  0E00               	movlw	low (__mediumconst shr (0+16))
  8295  011ED2  6EF8               	movwf	tblptru,c
  8296  011ED4                     	endif
  8297                           
  8298                           ;stkvar	_c @ sp[(-32)+31]
  8299  011ED4  0008               	tblrd		*
  8300  011ED6  0EFF               	movlw	-1
  8301  011ED8  006F FFD7 FFE3     	movff	tablat,plusw1
  8302                           
  8303                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1277:             ++*fmt;
  8304                           ;stkvar	_fmt @ sp[(-32)+-4]
  8305  011EDE  0EDC               	movlw	-36
  8306  011EE0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8307  011EE6  0EDD               	movlw	-35
  8308  011EE8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8309  011EEE  2ADE               	incf	postinc2,f,c
  8310  011EF0  0E00               	movlw	0
  8311  011EF2  22DD               	addwfc	postdec2,f,c
  8312                           
  8313                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1278:             llu = (unsi
      +                          gned long long)(*(unsigned int *)__va_arg(*(unsigned int **)ap, (unsigned int)0));
  8314                           ;stkvar	_ap @ sp[(-32)+-6]
  8315  011EF4  0EDA               	movlw	-38
  8316  011EF6  006F FF8F FFD9     	movff	plusw1,fsr2l
  8317  011EFC  0EDB               	movlw	-37
  8318  011EFE  006F FF8F FFDA     	movff	plusw1,fsr2h
  8319  011F04  0E02               	movlw	2
  8320  011F06  5EDE               	subwf	postinc2,f,c
  8321  011F08  0E00               	movlw	0
  8322  011F0A  5ADD               	subwfb	postdec2,f,c
  8323  011F0C  006F FF78  F03F    	movff	postinc2,btemp+10
  8324  011F12  006F FF74  F040    	movff	postdec2,btemp+11
  8325  011F18  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8326  011F1E  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8327  011F24  006F FF78  F03F    	movff	postinc2,btemp+10
  8328  011F2A  006F FF74  F040    	movff	postdec2,btemp+11
  8329  011F30  503F               	movf	(btemp+10)^0,w,c
  8330  011F32  6E45               	movwf	(btemp+16)^0,c
  8331  011F34  5040               	movf	(btemp+11)^0,w,c
  8332  011F36  6E46               	movwf	(btemp+17)^0,c
  8333  011F38  6A47               	clrf	(btemp+18)^0,c
  8334  011F3A  6A48               	clrf	(btemp+19)^0,c
  8335  011F3C  6A49               	clrf	(btemp+20)^0,c
  8336  011F3E  6A4A               	clrf	(btemp+21)^0,c
  8337  011F40  6A4B               	clrf	(btemp+22)^0,c
  8338  011F42  6A4C               	clrf	(btemp+23)^0,c
  8339                           
  8340                           ;stkvar	_llu @ sp[(-32)+6]
  8341  011F44  0EE6               	movlw	-26
  8342  011F46  0060  F117  FFE3   	movff	btemp+16,plusw1
  8343  011F4C  0EE7               	movlw	-25
  8344  011F4E  0060  F11B  FFE3   	movff	btemp+17,plusw1
  8345  011F54  0EE8               	movlw	-24
  8346  011F56  0060  F11F  FFE3   	movff	btemp+18,plusw1
  8347  011F5C  0EE9               	movlw	-23
  8348  011F5E  0060  F123  FFE3   	movff	btemp+19,plusw1
  8349  011F64  0EEA               	movlw	-22
  8350  011F66  0060  F127  FFE3   	movff	btemp+20,plusw1
  8351  011F6C  0EEB               	movlw	-21
  8352  011F6E  0060  F12B  FFE3   	movff	btemp+21,plusw1
  8353  011F74  0EEC               	movlw	-20
  8354  011F76  0060  F12F  FFE3   	movff	btemp+22,plusw1
  8355  011F7C  0EED               	movlw	-19
  8356  011F7E  0060  F133  FFE3   	movff	btemp+23,plusw1
  8357                           
  8358                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1280:             return xtoa
      +                          (fp, llu, c);
  8359                           ;stkvar	_c @ sp[(-32)+31]
  8360  011F84  0EFF               	movlw	-1
  8361  011F86  50E3               	movf	plusw1,w,c
  8362  011F88  6EE6               	movwf	postinc1,c
  8363                           
  8364                           ;stkvar	_llu @ sp[(-33)+6]
  8365  011F8A  50E1               	movf	fsr1l,w,c
  8366  011F8C  0FE5               	addlw	-27
  8367  011F8E  6ED9               	movwf	fsr2l,c
  8368  011F90  50E2               	movf	fsr1h,w,c
  8369  011F92  6EDA               	movwf	fsr2h,c
  8370  011F94  0EFF               	movlw	255
  8371  011F96  22DA               	addwfc	fsr2h,f,c
  8372  011F98  006F FF7B FFE6     	movff	postinc2,postinc1
  8373  011F9E  006F FF7B FFE6     	movff	postinc2,postinc1
  8374  011FA4  006F FF7B FFE6     	movff	postinc2,postinc1
  8375  011FAA  006F FF7B FFE6     	movff	postinc2,postinc1
  8376  011FB0  006F FF7B FFE6     	movff	postinc2,postinc1
  8377  011FB6  006F FF7B FFE6     	movff	postinc2,postinc1
  8378  011FBC  006F FF7B FFE6     	movff	postinc2,postinc1
  8379  011FC2  006F FF7B FFE6     	movff	postinc2,postinc1
  8380                           
  8381                           ;stkvar	_fp @ sp[(-41)+-2]
  8382  011FC8  0ED5               	movlw	-43
  8383  011FCA  006F FF8F FFE6     	movff	plusw1,postinc1
  8384  011FD0  006F FF8F FFE6     	movff	plusw1,postinc1
  8385  011FD6  EC40  F0A2         	call	_xtoa	;wreg free
  8386  011FDA  D105               	goto	l1975
  8387  011FDC                     l10005:
  8388                           
  8389                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1285:         if (!strncmp(*f
      +                          mt, "lx", ((sizeof("lx")/sizeof("lx"[0]))-1)) || !strncmp(*fmt, "lX", ((sizeof("lX")/siz
      +                          eof("lX"[0]))-1))) {
  8390  011FDC  0E02               	movlw	2
  8391  011FDE  6EE6               	movwf	postinc1,c
  8392  011FE0  0E00               	movlw	0
  8393  011FE2  6EE6               	movwf	postinc1,c
  8394  011FE4  0EF6               	movlw	low STR_61
  8395  011FE6  6EE6               	movwf	postinc1,c
  8396  011FE8  0EFF               	movlw	high STR_61
  8397  011FEA  6EE6               	movwf	postinc1,c
  8398                           
  8399                           ;stkvar	_fmt @ sp[(-36)+-4]
  8400  011FEC  0ED8               	movlw	-40
  8401  011FEE  006F FF8F FFD9     	movff	plusw1,fsr2l
  8402  011FF4  0ED9               	movlw	-39
  8403  011FF6  006F FF8F FFDA     	movff	plusw1,fsr2h
  8404  011FFC  006F FF78  F03F    	movff	postinc2,btemp+10
  8405  012002  006F FF74  F040    	movff	postdec2,btemp+11
  8406  012008  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8407  01200E  0060  F103  FFE6   	movff	btemp+11,postinc1
  8408  012014  ECE2  F0AD         	call	_strncmp	;wreg free
  8409  012018  5035               	movf	btemp^0,w,c
  8410  01201A  1036               	iorwf	(btemp+1)^0,w,c
  8411  01201C  B4D8               	btfsc	status,2,c
  8412  01201E  D022               	goto	u10470
  8413  012020  0E02               	movlw	2
  8414  012022  6EE6               	movwf	postinc1,c
  8415  012024  0E00               	movlw	0
  8416  012026  6EE6               	movwf	postinc1,c
  8417  012028  0EE7               	movlw	low STR_65
  8418  01202A  6EE6               	movwf	postinc1,c
  8419  01202C  0EFF               	movlw	high STR_65
  8420  01202E  6EE6               	movwf	postinc1,c
  8421                           
  8422                           ;stkvar	_fmt @ sp[(-36)+-4]
  8423  012030  0ED8               	movlw	-40
  8424  012032  006F FF8F FFD9     	movff	plusw1,fsr2l
  8425  012038  0ED9               	movlw	-39
  8426  01203A  006F FF8F FFDA     	movff	plusw1,fsr2h
  8427  012040  006F FF78  F03F    	movff	postinc2,btemp+10
  8428  012046  006F FF74  F040    	movff	postdec2,btemp+11
  8429  01204C  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  8430  012052  0060  F103  FFE6   	movff	btemp+11,postinc1
  8431  012058  ECE2  F0AD         	call	_strncmp	;wreg free
  8432  01205C  5035               	movf	btemp^0,w,c
  8433  01205E  1036               	iorwf	(btemp+1)^0,w,c
  8434  012060  A4D8               	btfss	status,2,c
  8435  012062  D058               	goto	l10019
  8436  012064                     u10470:
  8437                           
  8438                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1286: ;/opt/microchip/xc8/v2.
      +                          10/pic/sources/c99/common/doprnt.c: 1288:             c = (*fmt)[1];
  8439                           ;stkvar	_fmt @ sp[(-32)+-4]
  8440  012064  0EDC               	movlw	-36
  8441  012066  006F FF8F FFD9     	movff	plusw1,fsr2l
  8442  01206C  0EDD               	movlw	-35
  8443  01206E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8444  012074  006F FF78  F03F    	movff	postinc2,btemp+10
  8445  01207A  006F FF74  F040    	movff	postdec2,btemp+11
  8446  012080  0E01               	movlw	1
  8447  012082  263F               	addwf	(btemp+10)^0,f,c
  8448  012084  0E00               	movlw	0
  8449  012086  2240               	addwfc	(btemp+11)^0,f,c
  8450  012088  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
  8451  01208E  0060  F103  FFF7   	movff	btemp+11,tblptrh
  8452  012094                     	if	0	;tblptru may be non-zero
  8453  012094                     	endif
  8454  012094                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8455  012094  0E00               	movlw	low (__mediumconst shr (0+16))
  8456  012096  6EF8               	movwf	tblptru,c
  8457  012098                     	endif
  8458                           
  8459                           ;stkvar	_c @ sp[(-32)+31]
  8460  012098  0008               	tblrd		*
  8461  01209A  0EFF               	movlw	-1
  8462  01209C  006F FFD7 FFE3     	movff	tablat,plusw1
  8463                           
  8464                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1289:             *fmt += ((s
      +                          izeof("lx")/sizeof("lx"[0]))-1);
  8465                           ;stkvar	_fmt @ sp[(-32)+-4]
  8466  0120A2  0EDC               	movlw	-36
  8467  0120A4  006F FF8F FFD9     	movff	plusw1,fsr2l
  8468  0120AA  0EDD               	movlw	-35
  8469  0120AC  006F FF8F FFDA     	movff	plusw1,fsr2h
  8470  0120B2  0E02               	movlw	2
  8471  0120B4  26DE               	addwf	postinc2,f,c
  8472  0120B6  0E00               	movlw	0
  8473  0120B8  22DD               	addwfc	postdec2,f,c
  8474                           
  8475                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1290:             llu = (unsi
      +                          gned long long)(*(unsigned long *)__va_arg(*(unsigned long **)ap, (unsigned long)0));
  8476                           ;stkvar	_ap @ sp[(-32)+-6]
  8477  0120BA  0EDA               	movlw	-38
  8478  0120BC  006F FF8F FFD9     	movff	plusw1,fsr2l
  8479  0120C2  0EDB               	movlw	-37
  8480  0120C4  006F FF8F FFDA     	movff	plusw1,fsr2h
  8481  0120CA  0E04               	movlw	4
  8482  0120CC  5EDE               	subwf	postinc2,f,c
  8483  0120CE  0E00               	movlw	0
  8484  0120D0  5ADD               	subwfb	postdec2,f,c
  8485  0120D2  006F FF78  F03F    	movff	postinc2,btemp+10
  8486  0120D8  006F FF74  F040    	movff	postdec2,btemp+11
  8487  0120DE  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
  8488  0120E4  0060  F103  FFDA   	movff	btemp+11,fsr2h
  8489  0120EA  006F FF78  F03D    	movff	postinc2,btemp+8
  8490  0120F0  006F FF78  F03E    	movff	postinc2,btemp+9
  8491  0120F6  006F FF78  F03F    	movff	postinc2,btemp+10
  8492  0120FC  006F FF78  F040    	movff	postinc2,btemp+11
  8493  012102  503D               	movf	(btemp+8)^0,w,c
  8494  012104  6E45               	movwf	(btemp+16)^0,c
  8495  012106  503E               	movf	(btemp+9)^0,w,c
  8496  012108  6E46               	movwf	(btemp+17)^0,c
  8497  01210A  503F               	movf	(btemp+10)^0,w,c
  8498  01210C  6E47               	movwf	(btemp+18)^0,c
  8499  01210E  5040               	movf	(btemp+11)^0,w,c
  8500  012110  6E48               	movwf	(btemp+19)^0,c
  8501  012112  D714               	goto	L6
  8502  012114                     l10019:
  8503                           
  8504                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1350:         if ((*fmt)[0] =
      +                          = '%') {
  8505                           ;stkvar	_fmt @ sp[(-32)+-4]
  8506  012114  0EDC               	movlw	-36
  8507  012116  006F FF8F FFD9     	movff	plusw1,fsr2l
  8508  01211C  0EDD               	movlw	-35
  8509  01211E  006F FF8F FFDA     	movff	plusw1,fsr2h
  8510  012124  006F FF7B FFF6     	movff	postinc2,tblptrl
  8511  01212A  006F FF77 FFF7     	movff	postdec2,tblptrh
  8512  012130                     	if	0	;tblptru may be non-zero
  8513  012130                     	endif
  8514  012130                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8515  012130  0E00               	movlw	low (__mediumconst shr (0+16))
  8516  012132  6EF8               	movwf	tblptru,c
  8517  012134                     	endif
  8518  012134  0008               	tblrd		*
  8519  012136  50F5               	movf	tablat,w,c
  8520  012138  0A25               	xorlw	37
  8521  01213A  A4D8               	btfss	status,2,c
  8522  01213C  D01A               	goto	l10029
  8523                           
  8524                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1351:             ++*fmt;
  8525                           ;stkvar	_fmt @ sp[(-32)+-4]
  8526  01213E  0EDC               	movlw	-36
  8527  012140  006F FF8F FFD9     	movff	plusw1,fsr2l
  8528  012146  0EDD               	movlw	-35
  8529  012148  006F FF8F FFDA     	movff	plusw1,fsr2h
  8530  01214E  2ADE               	incf	postinc2,f,c
  8531  012150  0E00               	movlw	0
  8532  012152  22DD               	addwfc	postdec2,f,c
  8533                           
  8534                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1352:             fputc((int)
      +                          '%', fp);
  8535                           ;stkvar	_fp @ sp[(-32)+-2]
  8536  012154  0EDE               	movlw	-34
  8537  012156  006F FF8F FFE6     	movff	plusw1,postinc1
  8538  01215C  006F FF8F FFE6     	movff	plusw1,postinc1
  8539  012162  0E25               	movlw	37
  8540  012164  6EE6               	movwf	postinc1,c
  8541  012166  0E00               	movlw	0
  8542  012168  6EE6               	movwf	postinc1,c
  8543  01216A  ECB0  F0B6         	call	_fputc	;wreg free
  8544  01216E                     l10025:
  8545                           
  8546                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1353:             return 1;
  8547  01216E  0E01               	movlw	1
  8548  012170  D00C               	goto	L7
  8549  012172                     l10029:
  8550                           
  8551                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1357:         ++*fmt;
  8552                           ;stkvar	_fmt @ sp[(-32)+-4]
  8553  012172  0EDC               	movlw	-36
  8554  012174  006F FF8F FFD9     	movff	plusw1,fsr2l
  8555  01217A  0EDD               	movlw	-35
  8556  01217C  006F FF8F FFDA     	movff	plusw1,fsr2h
  8557  012182  2ADE               	incf	postinc2,f,c
  8558  012184  0E00               	movlw	0
  8559  012186  22DD               	addwfc	postdec2,f,c
  8560                           
  8561                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1358:         return 0;
  8562  012188  0E00               	movlw	0
  8563  01218A                     L7:
  8564  01218A  6E35               	movwf	btemp^0,c
  8565  01218C  0E00               	movlw	0
  8566  01218E  6E36               	movwf	(btemp+1)^0,c
  8567  012190  D02A               	goto	l1975
  8568  012192                     l10035:
  8569                           
  8570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1362:     fputc((int)(*fmt)[0
      +                          ], fp);
  8571                           ;stkvar	_fp @ sp[(-32)+-2]
  8572  012192  0EDE               	movlw	-34
  8573  012194  006F FF8F FFE6     	movff	plusw1,postinc1
  8574  01219A  006F FF8F FFE6     	movff	plusw1,postinc1
  8575                           
  8576                           ;stkvar	_fmt @ sp[(-34)+-4]
  8577  0121A0  0EDA               	movlw	-38
  8578  0121A2  006F FF8F FFD9     	movff	plusw1,fsr2l
  8579  0121A8  0EDB               	movlw	-37
  8580  0121AA  006F FF8F FFDA     	movff	plusw1,fsr2h
  8581  0121B0  006F FF7B FFF6     	movff	postinc2,tblptrl
  8582  0121B6  006F FF77 FFF7     	movff	postdec2,tblptrh
  8583  0121BC                     	if	0	;tblptru may be non-zero
  8584  0121BC                     	endif
  8585  0121BC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  8586  0121BC  0E00               	movlw	low (__mediumconst shr (0+16))
  8587  0121BE  6EF8               	movwf	tblptru,c
  8588  0121C0                     	endif
  8589  0121C0  0008               	tblrd		*
  8590  0121C2  50F5               	movf	tablat,w,c
  8591  0121C4  6EE6               	movwf	postinc1,c
  8592  0121C6  0E00               	movlw	0
  8593  0121C8  6EE6               	movwf	postinc1,c
  8594  0121CA  ECB0  F0B6         	call	_fputc	;wreg free
  8595                           
  8596                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 1363:     ++*fmt;
  8597                           ;stkvar	_fmt @ sp[(-32)+-4]
  8598  0121CE  0EDC               	movlw	-36
  8599  0121D0  006F FF8F FFD9     	movff	plusw1,fsr2l
  8600  0121D6  0EDD               	movlw	-35
  8601  0121D8  006F FF8F FFDA     	movff	plusw1,fsr2h
  8602  0121DE  2ADE               	incf	postinc2,f,c
  8603  0121E0  0E00               	movlw	0
  8604  0121E2  22DD               	addwfc	postdec2,f,c
  8605  0121E4  D7C4               	goto	l10025
  8606  0121E6                     l1975:
  8607                           
  8608                           ; _vfpfcnvrt: autosize = 32, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, ar
      +                          gsize = 6, vargsize = 0
  8609  0121E6  0EDA               	movlw	218
  8610  0121E8  26E1               	addwf	fsr1l,f,c
  8611  0121EA  0EFF               	movlw	255
  8612  0121EC  22E2               	addwfc	fsr1h,f,c
  8613  0121EE  0012               	return		;funcret
  8614  0121F0                     __end_of_vfpfcnvrt:
  8615                           	opt callstack 0
  8616                           
  8617 ;; *************** function _xtoa *****************
  8618 ;; Defined at:
  8619 ;;		line 623 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  8620 ;; Parameters:    Size  Location     Type
  8621 ;;  fp              2  [STACK] PTR struct _IO_FILE
  8622 ;;		 -> f(6), NULL(0), 
  8623 ;;  d               8  [STACK] unsigned long long 
  8624 ;;  x               1  [STACK] unsigned char 
  8625 ;; Auto vars:     Size  Location     Type
  8626 ;;  n               8  [STACK] unsigned long long 
  8627 ;;  c               2  [STACK] int 
  8628 ;;  i               2  [STACK] int 
  8629 ;;  w               2  [STACK] int 
  8630 ;;  p               2  [STACK] int 
  8631 ;; Return value:  Size  Location     Type
  8632 ;;                  2  [STACK] int 
  8633 ;; Registers used:
  8634 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
  8635 ;; Tracked objects:
  8636 ;;		On entry : 0/4
  8637 ;;		On exit  : 0/0
  8638 ;;		Unchanged: 0/0
  8639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  8640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  8644 ;;Total ram usage:        0 bytes
  8645 ;; Hardware stack levels used:    1
  8646 ;; Hardware stack levels required when called:   11
  8647 ;; This function calls:
  8648 ;;		_isalpha
  8649 ;;		_isupper
  8650 ;;		_pad
  8651 ;;		_toupper
  8652 ;; This function is called by:
  8653 ;;		_vfpfcnvrt
  8654 ;; This function uses a reentrant model
  8655 ;;
  8656                           
  8657                           	psect	text36
  8658  014480                     __ptext36:
  8659                           	opt callstack 0
  8660  014480                     _xtoa:
  8661                           	opt callstack 0
  8662                           
  8663                           ; autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsize = 11 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  8664  014480  0E14               	movlw	20
  8665  014482  26E1               	addwf	fsr1l,f,c
  8666  014484  0E00               	movlw	0
  8667  014486  22E2               	addwfc	fsr1h,f,c
  8668                           
  8669                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 623: static int xtoa(FILE *fp
      +                          , unsigned long long d, char x);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c
      +                          : 624: {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 625:     int c, i, p,
      +                           w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 626:     unsigned long lon
      +                          g n;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 629:     if (!(prec < 0))
      +                           {
  8670                           
  8671                           ;incstack = 0
  8672  014488  AE21               	btfss	(_prec+1)^0,7,c
  8673                           
  8674                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 630:         flags &= ~(1 << 
      +                          1);
  8675  01448A  9222               	bcf	_flags^0,1,c
  8676                           
  8677                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 632:     p = (0 < prec) ? pre
      +                          c : 1;
  8678  01448C  BE21               	btfsc	(_prec+1)^0,7,c
  8679  01448E  D005               	goto	u10010
  8680  014490  5021               	movf	(_prec+1)^0,w,c
  8681  014492  E110               	bnz	l9771
  8682  014494  0420               	decf	_prec^0,w,c
  8683  014496  B0D8               	btfsc	status,0,c
  8684  014498  D00D               	goto	l9771
  8685  01449A                     u10010:
  8686  01449A  0E01               	movlw	1
  8687  01449C  6E3F               	movwf	(btemp+10)^0,c
  8688  01449E  0E00               	movlw	0
  8689  0144A0  6E40               	movwf	(btemp+11)^0,c
  8690                           
  8691                           ;stkvar	_p @ sp[(-20)+18]
  8692  0144A2  0EFE               	movlw	-2
  8693  0144A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8694  0144AA  0EFF               	movlw	-1
  8695  0144AC  0060  F103  FFE3   	movff	btemp+11,plusw1
  8696  0144B2  D008               	goto	l1925
  8697  0144B4                     l9771:
  8698                           
  8699                           ;stkvar	_p @ sp[(-20)+18]
  8700  0144B4  0EFE               	movlw	-2
  8701  0144B6  0060  F083  FFE3   	movff	_prec,plusw1
  8702  0144BC  0EFF               	movlw	-1
  8703  0144BE  0060  F087  FFE3   	movff	_prec+1,plusw1
  8704  0144C4                     l1925:
  8705                           
  8706                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 633:     w = width;
  8707                           ;stkvar	_w @ sp[(-20)+16]
  8708  0144C4  0EFC               	movlw	-4
  8709  0144C6  0060  F07B  FFE3   	movff	_width,plusw1
  8710  0144CC  0EFD               	movlw	-3
  8711  0144CE  0060  F07F  FFE3   	movff	_width+1,plusw1
  8712                           
  8713                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 634:     if (flags & (1 << 4)
      +                          ) {
  8714  0144D4  A822               	btfss	_flags^0,4,c
  8715  0144D6  D00B               	goto	l9777
  8716                           
  8717                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 635:         w -= 2;
  8718                           ;stkvar	_w @ sp[(-20)+16]
  8719  0144D8  50E1               	movf	fsr1l,w,c
  8720  0144DA  0FFC               	addlw	-4
  8721  0144DC  6ED9               	movwf	fsr2l,c
  8722  0144DE  50E2               	movf	fsr1h,w,c
  8723  0144E0  6EDA               	movwf	fsr2h,c
  8724  0144E2  0EFF               	movlw	255
  8725  0144E4  22DA               	addwfc	fsr2h,f,c
  8726  0144E6  0EFE               	movlw	254
  8727  0144E8  26DE               	addwf	postinc2,f,c
  8728  0144EA  0EFF               	movlw	255
  8729  0144EC  22DD               	addwfc	postdec2,f,c
  8730  0144EE                     l9777:
  8731                           
  8732                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 639:     n = d;
  8733                           ;stkvar	_d @ sp[(-20)+-10]
  8734  0144EE  0EE2               	movlw	226
  8735  0144F0  24E1               	addwf	fsr1l,w,c
  8736  0144F2  6ED9               	movwf	fsr2l,c
  8737  0144F4  0EFF               	movlw	255
  8738  0144F6  20E2               	addwfc	fsr1h,w,c
  8739  0144F8  6EDA               	movwf	fsr2h,c
  8740                           
  8741                           ;stkvar	_n @ sp[(-20)+4]
  8742  0144FA  0E08               	movlw	8
  8743  0144FC  6E35               	movwf	btemp^0,c
  8744  0144FE  0EF0               	movlw	-16
  8745  014500                     us1003999:
  8746  014500  006F FF7B FFE3     	movff	postinc2,plusw1
  8747  014506  28E8               	incf	wreg,w,c
  8748  014508  2E35               	decfsz	btemp^0,f,c
  8749  01450A  D7FA               	bra	us1003999
  8750                           
  8751                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 640:     i = sizeof(dbuf) - 1
      +                          ;
  8752  01450C  0E4F               	movlw	79
  8753  01450E  6E3F               	movwf	(btemp+10)^0,c
  8754  014510  0E00               	movlw	0
  8755  014512  6E40               	movwf	(btemp+11)^0,c
  8756                           
  8757                           ;stkvar	_i @ sp[(-20)+14]
  8758  014514  0EFA               	movlw	-6
  8759  014516  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8760  01451C  0EFB               	movlw	-5
  8761  01451E  0060  F103  FFE3   	movff	btemp+11,plusw1
  8762                           
  8763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 641:     dbuf[i] = '\0';
  8764  014524  0102               	movlb	2	; () banked
  8765  014526  6BFB               	clrf	(_dbuf+79)& (0+255),b
  8766                           
  8767                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  8768  014528  D0EE               	goto	l9815
  8769  01452A                     l9783:
  8770                           
  8771                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 643:         --i;
  8772                           ;stkvar	_i @ sp[(-20)+14]
  8773  01452A  50E1               	movf	fsr1l,w,c
  8774  01452C  0FFA               	addlw	-6
  8775  01452E  6ED9               	movwf	fsr2l,c
  8776  014530  50E2               	movf	fsr1h,w,c
  8777  014532  6EDA               	movwf	fsr2h,c
  8778  014534  0EFF               	movlw	255
  8779  014536  22DA               	addwfc	fsr2h,f,c
  8780  014538  06DE               	decf	postinc2,f,c
  8781  01453A  0E00               	movlw	0
  8782  01453C  5ADD               	subwfb	postdec2,f,c
  8783                           
  8784                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 644:         c = n & 0x0f;
  8785                           ;stkvar	_n @ sp[(-20)+4]
  8786  01453E  0EF0               	movlw	-16
  8787  014540  006F FF8C  F03F    	movff	plusw1,btemp+10
  8788  014546  0EF1               	movlw	-15
  8789  014548  006F FF8C  F040    	movff	plusw1,btemp+11
  8790  01454E  0E0F               	movlw	15
  8791  014550  163F               	andwf	(btemp+10)^0,f,c
  8792  014552  0E00               	movlw	0
  8793  014554  1640               	andwf	(btemp+11)^0,f,c
  8794                           
  8795                           ;stkvar	_c @ sp[(-20)+12]
  8796  014556  0EF8               	movlw	-8
  8797  014558  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8798  01455E  0EF9               	movlw	-7
  8799  014560  0060  F103  FFE3   	movff	btemp+11,plusw1
  8800                           
  8801                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 645:         c = (c < 10) ? '
      +                          0' + c : 'a' + (c - 10);
  8802                           ;stkvar	_c @ sp[(-20)+12]
  8803  014566  0EF9               	movlw	-7
  8804  014568  BEE3               	btfsc	plusw1,7,c
  8805  01456A  D00F               	goto	l9791
  8806  01456C  0EF9               	movlw	-7
  8807  01456E  50E3               	movf	plusw1,w,c
  8808  014570  E108               	bnz	u10040
  8809  014572  0EF8               	movlw	-8
  8810  014574  006F FF8C  F035    	movff	plusw1,btemp
  8811  01457A  0E0A               	movlw	10
  8812  01457C  5E35               	subwf	btemp^0,f,c
  8813  01457E  A0D8               	btfss	status,0,c
  8814  014580  D004               	goto	l9791
  8815  014582                     u10040:
  8816                           
  8817                           ;stkvar	_c @ sp[(-20)+12]
  8818  014582  0EF8               	movlw	-8
  8819  014584  50E3               	movf	plusw1,w,c
  8820  014586  0F57               	addlw	87
  8821  014588  D003               	goto	L8
  8822  01458A                     l9791:
  8823                           
  8824                           ;stkvar	_c @ sp[(-20)+12]
  8825  01458A  0EF8               	movlw	-8
  8826  01458C  50E3               	movf	plusw1,w,c
  8827  01458E  0F30               	addlw	48
  8828  014590                     L8:
  8829  014590  6E3F               	movwf	(btemp+10)^0,c
  8830  014592  0EF9               	movlw	-7
  8831  014594  006F FF8C  F040    	movff	plusw1,btemp+11
  8832  01459A  0E00               	movlw	0
  8833  01459C  2240               	addwfc	(btemp+11)^0,f,c
  8834                           
  8835                           ;stkvar	_c @ sp[(-20)+12]
  8836  01459E  0EF8               	movlw	-8
  8837  0145A0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8838  0145A6  0EF9               	movlw	-7
  8839  0145A8  0060  F103  FFE3   	movff	btemp+11,plusw1
  8840  0145AE  0EBF               	movlw	191
  8841  0145B0  6E3F               	movwf	(btemp+10)^0,c
  8842  0145B2  0EFF               	movlw	255
  8843  0145B4  6E40               	movwf	(btemp+11)^0,c
  8844                           
  8845                           ;stkvar	_x @ sp[(-20)+-11]
  8846  0145B6  0EE1               	movlw	-31
  8847  0145B8  50E3               	movf	plusw1,w,c
  8848  0145BA  6E3D               	movwf	(btemp+8)^0,c
  8849  0145BC  6A3E               	clrf	(btemp+9)^0,c
  8850  0145BE  503F               	movf	(btemp+10)^0,w,c
  8851  0145C0  263D               	addwf	(btemp+8)^0,f,c
  8852  0145C2  5040               	movf	(btemp+11)^0,w,c
  8853  0145C4  223E               	addwfc	(btemp+9)^0,f,c
  8854  0145C6  503E               	movf	(btemp+9)^0,w,c
  8855  0145C8  E106               	bnz	u10050
  8856  0145CA  0E1A               	movlw	26
  8857  0145CC  5C3D               	subwf	(btemp+8)^0,w,c
  8858  0145CE  B0D8               	btfsc	status,0,c
  8859  0145D0  D002               	goto	u10050
  8860  0145D2  0E01               	movlw	1
  8861  0145D4  D001               	goto	u10060
  8862  0145D6                     u10050:
  8863  0145D6  0E00               	movlw	0
  8864  0145D8                     u10060:
  8865  0145D8  6E3F               	movwf	(btemp+10)^0,c
  8866  0145DA  6A40               	clrf	(btemp+11)^0,c
  8867                           
  8868                           ;stkvar	_xtoa$4240 @ sp[(-20)+2]
  8869  0145DC  0EEE               	movlw	-18
  8870  0145DE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8871  0145E4  0EEF               	movlw	-17
  8872  0145E6  0060  F103  FFE3   	movff	btemp+11,plusw1
  8873                           
  8874                           ;stkvar	_xtoa$4240 @ sp[(-20)+2]
  8875  0145EC  0EEE               	movlw	-18
  8876  0145EE  006F FF8C  F035    	movff	plusw1,btemp
  8877  0145F4  0EEF               	movlw	-17
  8878  0145F6  50E3               	movf	plusw1,w,c
  8879  0145F8  1035               	iorwf	btemp^0,w,c
  8880  0145FA  B4D8               	btfsc	status,2,c
  8881  0145FC  D041               	goto	l9807
  8882  0145FE  0E9F               	movlw	159
  8883  014600  6E3F               	movwf	(btemp+10)^0,c
  8884  014602  0EFF               	movlw	255
  8885  014604  6E40               	movwf	(btemp+11)^0,c
  8886                           
  8887                           ;stkvar	_c @ sp[(-20)+12]
  8888  014606  0EF8               	movlw	-8
  8889  014608  006F FF8C  F03D    	movff	plusw1,btemp+8
  8890  01460E  0EF9               	movlw	-7
  8891  014610  006F FF8C  F03E    	movff	plusw1,btemp+9
  8892  014616  0E20               	movlw	32
  8893  014618  123D               	iorwf	(btemp+8)^0,f,c
  8894  01461A  0E00               	movlw	0
  8895  01461C  123E               	iorwf	(btemp+9)^0,f,c
  8896  01461E  503F               	movf	(btemp+10)^0,w,c
  8897  014620  263D               	addwf	(btemp+8)^0,f,c
  8898  014622  5040               	movf	(btemp+11)^0,w,c
  8899  014624  223E               	addwfc	(btemp+9)^0,f,c
  8900  014626  503E               	movf	(btemp+9)^0,w,c
  8901  014628  E106               	bnz	u10080
  8902  01462A  0E1A               	movlw	26
  8903  01462C  5C3D               	subwf	(btemp+8)^0,w,c
  8904  01462E  B0D8               	btfsc	status,0,c
  8905  014630  D002               	goto	u10080
  8906  014632  0E01               	movlw	1
  8907  014634  D001               	goto	u10090
  8908  014636                     u10080:
  8909  014636  0E00               	movlw	0
  8910  014638                     u10090:
  8911  014638  6E3F               	movwf	(btemp+10)^0,c
  8912  01463A  6A40               	clrf	(btemp+11)^0,c
  8913                           
  8914                           ;stkvar	_xtoa$4241 @ sp[(-20)+0]
  8915  01463C  0EEC               	movlw	-20
  8916  01463E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  8917  014644  0EED               	movlw	-19
  8918  014646  0060  F103  FFE3   	movff	btemp+11,plusw1
  8919                           
  8920                           ;stkvar	_xtoa$4241 @ sp[(-20)+0]
  8921  01464C  0EEC               	movlw	-20
  8922  01464E  006F FF8C  F035    	movff	plusw1,btemp
  8923  014654  0EED               	movlw	-19
  8924  014656  50E3               	movf	plusw1,w,c
  8925  014658  1035               	iorwf	btemp^0,w,c
  8926  01465A  B4D8               	btfsc	status,2,c
  8927  01465C  D011               	goto	l9807
  8928                           
  8929                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 647:             c = toupper(
      +                          c);
  8930                           ;stkvar	_c @ sp[(-20)+12]
  8931  01465E  0EF8               	movlw	-8
  8932  014660  006F FF8F FFE6     	movff	plusw1,postinc1
  8933  014666  006F FF8F FFE6     	movff	plusw1,postinc1
  8934  01466C  EC21  F0BE         	call	_toupper	;wreg free
  8935                           
  8936                           ;stkvar	_c @ sp[(-20)+12]
  8937  014670  0EF8               	movlw	-8
  8938  014672  0060  F0D7  FFE3   	movff	btemp,plusw1
  8939  014678  0EF9               	movlw	-7
  8940  01467A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
  8941  014680                     l9807:
  8942                           
  8943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 649:         dbuf[i] = (char)
      +                          c;
  8944                           ;stkvar	_c @ sp[(-20)+12]
  8945                           ;stkvar	_i @ sp[(-20)+14]
  8946  014680  0EFA               	movlw	-6
  8947  014682  006F FF8C  F03F    	movff	plusw1,btemp+10
  8948  014688  0EFB               	movlw	-5
  8949  01468A  006F FF8C  F040    	movff	plusw1,btemp+11
  8950  014690  0EAC               	movlw	low _dbuf
  8951  014692  243F               	addwf	(btemp+10)^0,w,c
  8952  014694  6ED9               	movwf	fsr2l,c
  8953  014696  0E02               	movlw	high _dbuf
  8954  014698  2040               	addwfc	(btemp+11)^0,w,c
  8955  01469A  6EDA               	movwf	fsr2h,c
  8956  01469C  0EF8               	movlw	-8
  8957  01469E  006F FF8F FFDF     	movff	plusw1,indf2
  8958                           
  8959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 650:         --p;
  8960                           ;stkvar	_p @ sp[(-20)+18]
  8961  0146A4  50E1               	movf	fsr1l,w,c
  8962  0146A6  0FFE               	addlw	-2
  8963  0146A8  6ED9               	movwf	fsr2l,c
  8964  0146AA  50E2               	movf	fsr1h,w,c
  8965  0146AC  6EDA               	movwf	fsr2h,c
  8966  0146AE  0EFF               	movlw	255
  8967  0146B0  22DA               	addwfc	fsr2h,f,c
  8968  0146B2  06DE               	decf	postinc2,f,c
  8969  0146B4  0E00               	movlw	0
  8970  0146B6  5ADD               	subwfb	postdec2,f,c
  8971                           
  8972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 651:         --w;
  8973                           ;stkvar	_w @ sp[(-20)+16]
  8974  0146B8  50E1               	movf	fsr1l,w,c
  8975  0146BA  0FFC               	addlw	-4
  8976  0146BC  6ED9               	movwf	fsr2l,c
  8977  0146BE  50E2               	movf	fsr1h,w,c
  8978  0146C0  6EDA               	movwf	fsr2h,c
  8979  0146C2  0EFF               	movlw	255
  8980  0146C4  22DA               	addwfc	fsr2h,f,c
  8981  0146C6  06DE               	decf	postinc2,f,c
  8982  0146C8  0E00               	movlw	0
  8983  0146CA  5ADD               	subwfb	postdec2,f,c
  8984                           
  8985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 652:         n = n >> 4;
  8986  0146CC  0E04               	movlw	4
  8987  0146CE  6E40               	movwf	(btemp+11)^0,c
  8988                           
  8989                           ;stkvar	_n @ sp[(-20)+4]
  8990  0146D0  50E1               	movf	fsr1l,w,c
  8991  0146D2  0FF0               	addlw	-16
  8992  0146D4  6ED9               	movwf	fsr2l,c
  8993  0146D6  50E2               	movf	fsr1h,w,c
  8994  0146D8  6EDA               	movwf	fsr2h,c
  8995  0146DA  0EFF               	movlw	255
  8996  0146DC  22DA               	addwfc	fsr2h,f,c
  8997  0146DE  2840               	incf	(btemp+11)^0,w,c
  8998  0146E0  52DE               	movf	postinc2,f,c
  8999  0146E2  D00F               	goto	u10110
  9000  0146E4                     u10115:
  9001  0146E4  52DE               	movf	postinc2,f,c
  9002  0146E6  52DE               	movf	postinc2,f,c
  9003  0146E8  52DE               	movf	postinc2,f,c
  9004  0146EA  52DE               	movf	postinc2,f,c
  9005  0146EC  52DE               	movf	postinc2,f,c
  9006  0146EE  52DE               	movf	postinc2,f,c
  9007  0146F0  90D8               	bcf	status,0,c
  9008  0146F2  32DD               	rrcf	postdec2,f,c
  9009  0146F4  32DD               	rrcf	postdec2,f,c
  9010  0146F6  32DD               	rrcf	postdec2,f,c
  9011  0146F8  32DD               	rrcf	postdec2,f,c
  9012  0146FA  32DD               	rrcf	postdec2,f,c
  9013  0146FC  32DD               	rrcf	postdec2,f,c
  9014  0146FE  32DD               	rrcf	postdec2,f,c
  9015  014700  32DE               	rrcf	postinc2,f,c
  9016  014702                     u10110:
  9017  014702  2EE8               	decfsz	wreg,f,c
  9018  014704  D7EF               	goto	u10115
  9019  014706                     l9815:
  9020                           
  9021                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 642:     while (!(i < 2) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9022                           ;stkvar	_i @ sp[(-20)+14]
  9023  014706  0EFB               	movlw	-5
  9024  014708  BEE3               	btfsc	plusw1,7,c
  9025  01470A  D03A               	goto	u10160
  9026  01470C  0EFB               	movlw	-5
  9027  01470E  50E3               	movf	plusw1,w,c
  9028  014710  E108               	bnz	u10120
  9029  014712  0EFA               	movlw	-6
  9030  014714  006F FF8C  F035    	movff	plusw1,btemp
  9031  01471A  0E02               	movlw	2
  9032  01471C  5E35               	subwf	btemp^0,f,c
  9033  01471E  A0D8               	btfss	status,0,c
  9034  014720  D02F               	goto	u10160
  9035  014722                     u10120:
  9036                           
  9037                           ;stkvar	_n @ sp[(-20)+4]
  9038  014722  0EF0               	movlw	-16
  9039  014724  50E3               	movf	plusw1,w,c
  9040  014726  E115               	bnz	u10131
  9041  014728  0EF1               	movlw	-15
  9042  01472A  50E3               	movf	plusw1,w,c
  9043  01472C  E112               	bnz	u10131
  9044  01472E  0EF2               	movlw	-14
  9045  014730  50E3               	movf	plusw1,w,c
  9046  014732  E10F               	bnz	u10131
  9047  014734  0EF3               	movlw	-13
  9048  014736  50E3               	movf	plusw1,w,c
  9049  014738  E10C               	bnz	u10131
  9050  01473A  0EF4               	movlw	-12
  9051  01473C  50E3               	movf	plusw1,w,c
  9052  01473E  E109               	bnz	u10131
  9053  014740  0EF5               	movlw	-11
  9054  014742  50E3               	movf	plusw1,w,c
  9055  014744  E106               	bnz	u10131
  9056  014746  0EF6               	movlw	-10
  9057  014748  50E3               	movf	plusw1,w,c
  9058  01474A  E103               	bnz	u10131
  9059  01474C  0EF7               	movlw	-9
  9060  01474E  50E3               	movf	plusw1,w,c
  9061  014750  A4D8               	btfss	status,2,c
  9062  014752                     u10131:
  9063  014752  D6EB               	goto	l9783
  9064                           
  9065                           ;stkvar	_p @ sp[(-20)+18]
  9066  014754  0EFF               	movlw	-1
  9067  014756  BEE3               	btfsc	plusw1,7,c
  9068  014758  D007               	goto	u10140
  9069  01475A  0EFF               	movlw	-1
  9070  01475C  50E3               	movf	plusw1,w,c
  9071  01475E  E103               	bnz	u10141
  9072  014760  0EFE               	movlw	-2
  9073  014762  04E3               	decf	plusw1,w,c
  9074  014764  B0D8               	btfsc	status,0,c
  9075  014766                     u10141:
  9076  014766  D6E1               	goto	l9783
  9077  014768                     u10140:
  9078                           
  9079                           ;stkvar	_w @ sp[(-20)+16]
  9080  014768  0EFD               	movlw	-3
  9081  01476A  BEE3               	btfsc	plusw1,7,c
  9082  01476C  D009               	goto	u10160
  9083  01476E  0EFD               	movlw	-3
  9084  014770  50E3               	movf	plusw1,w,c
  9085  014772  E104               	bnz	u10150
  9086  014774  0EFC               	movlw	-4
  9087  014776  04E3               	decf	plusw1,w,c
  9088  014778  A0D8               	btfss	status,0,c
  9089  01477A  D002               	goto	u10160
  9090  01477C                     u10150:
  9091  01477C  B222               	btfsc	_flags^0,1,c
  9092  01477E  D6D5               	goto	l9783
  9093  014780                     u10160:
  9094                           
  9095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 656:     if (flags & (1 << 4)
      +                          ) {
  9096  014780  A822               	btfss	_flags^0,4,c
  9097  014782  D036               	goto	l9831
  9098                           
  9099                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 657:         --i;
  9100                           ;stkvar	_i @ sp[(-20)+14]
  9101  014784  50E1               	movf	fsr1l,w,c
  9102  014786  0FFA               	addlw	-6
  9103  014788  6ED9               	movwf	fsr2l,c
  9104  01478A  50E2               	movf	fsr1h,w,c
  9105  01478C  6EDA               	movwf	fsr2h,c
  9106  01478E  0EFF               	movlw	255
  9107  014790  22DA               	addwfc	fsr2h,f,c
  9108  014792  06DE               	decf	postinc2,f,c
  9109  014794  0E00               	movlw	0
  9110  014796  5ADD               	subwfb	postdec2,f,c
  9111                           
  9112                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 658:         dbuf[i] = x;
  9113                           ;stkvar	_x @ sp[(-20)+-11]
  9114                           ;stkvar	_i @ sp[(-20)+14]
  9115  014798  0EFA               	movlw	-6
  9116  01479A  006F FF8C  F03F    	movff	plusw1,btemp+10
  9117  0147A0  0EFB               	movlw	-5
  9118  0147A2  006F FF8C  F040    	movff	plusw1,btemp+11
  9119  0147A8  0EAC               	movlw	low _dbuf
  9120  0147AA  243F               	addwf	(btemp+10)^0,w,c
  9121  0147AC  6ED9               	movwf	fsr2l,c
  9122  0147AE  0E02               	movlw	high _dbuf
  9123  0147B0  2040               	addwfc	(btemp+11)^0,w,c
  9124  0147B2  6EDA               	movwf	fsr2h,c
  9125  0147B4  0EE1               	movlw	-31
  9126  0147B6  006F FF8F FFDF     	movff	plusw1,indf2
  9127                           
  9128                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 659:         --i;
  9129                           ;stkvar	_i @ sp[(-20)+14]
  9130  0147BC  50E1               	movf	fsr1l,w,c
  9131  0147BE  0FFA               	addlw	-6
  9132  0147C0  6ED9               	movwf	fsr2l,c
  9133  0147C2  50E2               	movf	fsr1h,w,c
  9134  0147C4  6EDA               	movwf	fsr2h,c
  9135  0147C6  0EFF               	movlw	255
  9136  0147C8  22DA               	addwfc	fsr2h,f,c
  9137  0147CA  06DE               	decf	postinc2,f,c
  9138  0147CC  0E00               	movlw	0
  9139  0147CE  5ADD               	subwfb	postdec2,f,c
  9140                           
  9141                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 660:         dbuf[i] = '0';
  9142                           ;stkvar	_i @ sp[(-20)+14]
  9143  0147D0  0EFA               	movlw	-6
  9144  0147D2  006F FF8C  F03F    	movff	plusw1,btemp+10
  9145  0147D8  0EFB               	movlw	-5
  9146  0147DA  006F FF8C  F040    	movff	plusw1,btemp+11
  9147  0147E0  0EAC               	movlw	low _dbuf
  9148  0147E2  243F               	addwf	(btemp+10)^0,w,c
  9149  0147E4  6ED9               	movwf	fsr2l,c
  9150  0147E6  0E02               	movlw	high _dbuf
  9151  0147E8  2040               	addwfc	(btemp+11)^0,w,c
  9152  0147EA  6EDA               	movwf	fsr2h,c
  9153  0147EC  0E30               	movlw	48
  9154  0147EE  6EDF               	movwf	indf2,c
  9155  0147F0                     l9831:
  9156                           
  9157                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 664:     return pad(fp, &dbuf
      +                          [i], w);
  9158                           ;stkvar	_w @ sp[(-20)+16]
  9159  0147F0  0EFC               	movlw	-4
  9160  0147F2  006F FF8F FFE6     	movff	plusw1,postinc1
  9161  0147F8  006F FF8F FFE6     	movff	plusw1,postinc1
  9162                           
  9163                           ;stkvar	_i @ sp[(-22)+14]
  9164  0147FE  0EAC               	movlw	low _dbuf
  9165  014800  6E3F               	movwf	(btemp+10)^0,c
  9166  014802  0E02               	movlw	high _dbuf
  9167  014804  6E40               	movwf	(btemp+11)^0,c
  9168  014806  0EF8               	movlw	-8
  9169  014808  50E3               	movf	plusw1,w,c
  9170  01480A  263F               	addwf	(btemp+10)^0,f,c
  9171  01480C  0EF9               	movlw	-7
  9172  01480E  50E3               	movf	plusw1,w,c
  9173  014810  2240               	addwfc	(btemp+11)^0,f,c
  9174  014812  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9175  014818  0060  F103  FFE6   	movff	btemp+11,postinc1
  9176                           
  9177                           ;stkvar	_fp @ sp[(-24)+-2]
  9178  01481E  0EE6               	movlw	-26
  9179  014820  006F FF8F FFE6     	movff	plusw1,postinc1
  9180  014826  006F FF8F FFE6     	movff	plusw1,postinc1
  9181  01482C  ECCE  F0B7         	call	_pad	;wreg free
  9182                           
  9183                           ; _xtoa: autosize = 20, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 11, argsiz
      +                          e = 11, vargsize = 0
  9184  014830  0EE1               	movlw	225
  9185  014832  26E1               	addwf	fsr1l,f,c
  9186  014834  0EFF               	movlw	255
  9187  014836  22E2               	addwfc	fsr1h,f,c
  9188  014838  0012               	return		;funcret
  9189  01483A                     __end_of_xtoa:
  9190                           	opt callstack 0
  9191                           
  9192 ;; *************** function _toupper *****************
  9193 ;; Defined at:
  9194 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/toupper.c"
  9195 ;; Parameters:    Size  Location     Type
  9196 ;;  c               2  [STACK] int 
  9197 ;; Auto vars:     Size  Location     Type
  9198 ;;		None
  9199 ;; Return value:  Size  Location     Type
  9200 ;;                  2  [STACK] int 
  9201 ;; Registers used:
  9202 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
  9203 ;; Tracked objects:
  9204 ;;		On entry : 0/2
  9205 ;;		On exit  : 0/0
  9206 ;;		Unchanged: 0/0
  9207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9211 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9212 ;;Total ram usage:        0 bytes
  9213 ;; Hardware stack levels used:    1
  9214 ;; Hardware stack levels required when called:    7
  9215 ;; This function calls:
  9216 ;;		_islower
  9217 ;; This function is called by:
  9218 ;;		_xtoa
  9219 ;; This function uses a reentrant model
  9220 ;;
  9221                           
  9222                           	psect	text37
  9223  017C42                     __ptext37:
  9224                           	opt callstack 0
  9225  017C42                     _toupper:
  9226                           	opt callstack 0
  9227                           
  9228                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9229  017C42  52E6               	movf	postinc1,f,c
  9230  017C44  52E6               	movf	postinc1,f,c
  9231                           
  9232                           ;stkvar	_c @ sp[(-2)+-2]
  9233                           
  9234                           ;incstack = 0
  9235  017C46  0EFC               	movlw	-4
  9236  017C48  50E3               	movf	plusw1,w,c
  9237  017C4A  0F9F               	addlw	159
  9238  017C4C  6E3F               	movwf	(btemp+10)^0,c
  9239  017C4E  0EFD               	movlw	-3
  9240  017C50  006F FF8C  F040    	movff	plusw1,btemp+11
  9241  017C56  0EFF               	movlw	255
  9242  017C58  2240               	addwfc	(btemp+11)^0,f,c
  9243  017C5A  5040               	movf	(btemp+11)^0,w,c
  9244  017C5C  E106               	bnz	u5370
  9245  017C5E  0E1A               	movlw	26
  9246  017C60  5C3F               	subwf	(btemp+10)^0,w,c
  9247  017C62  B0D8               	btfsc	status,0,c
  9248  017C64  D002               	goto	u5370
  9249  017C66  0E01               	movlw	1
  9250  017C68  D001               	goto	u5380
  9251  017C6A                     u5370:
  9252  017C6A  0E00               	movlw	0
  9253  017C6C                     u5380:
  9254  017C6C  6E3F               	movwf	(btemp+10)^0,c
  9255  017C6E  6A40               	clrf	(btemp+11)^0,c
  9256                           
  9257                           ;stkvar	_toupper$4925 @ sp[(-2)+0]
  9258  017C70  0EFE               	movlw	-2
  9259  017C72  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9260  017C78  0EFF               	movlw	-1
  9261  017C7A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9262                           
  9263                           ;stkvar	_toupper$4925 @ sp[(-2)+0]
  9264  017C80  0EFE               	movlw	-2
  9265  017C82  006F FF8C  F035    	movff	plusw1,btemp
  9266  017C88  0EFF               	movlw	-1
  9267  017C8A  50E3               	movf	plusw1,w,c
  9268  017C8C  1035               	iorwf	btemp^0,w,c
  9269  017C8E  B4D8               	btfsc	status,2,c
  9270  017C90  D00D               	goto	l6475
  9271                           
  9272                           ;stkvar	_c @ sp[(-2)+-2]
  9273  017C92  0EFC               	movlw	-4
  9274  017C94  006F FF8C  F035    	movff	plusw1,btemp
  9275  017C9A  0EFD               	movlw	-3
  9276  017C9C  006F FF8C  F036    	movff	plusw1,btemp+1
  9277  017CA2  0E5F               	movlw	95
  9278  017CA4  1635               	andwf	btemp^0,f,c
  9279  017CA6  0E00               	movlw	0
  9280  017CA8  1636               	andwf	(btemp+1)^0,f,c
  9281  017CAA  D008               	goto	l2866
  9282  017CAC                     l6475:
  9283                           
  9284                           ;stkvar	_c @ sp[(-2)+-2]
  9285  017CAC  0EFC               	movlw	-4
  9286  017CAE  006F FF8C  F035    	movff	plusw1,btemp
  9287  017CB4  0EFD               	movlw	-3
  9288  017CB6  006F FF8C  F036    	movff	plusw1,btemp+1
  9289  017CBC                     l2866:
  9290                           
  9291                           ; _toupper: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9292  017CBC  52E5               	movf	postdec1,f,c
  9293  017CBE  52E5               	movf	postdec1,f,c
  9294  017CC0  52E5               	movf	postdec1,f,c
  9295  017CC2  52E5               	movf	postdec1,f,c
  9296  017CC4  0012               	return		;funcret
  9297  017CC6                     __end_of_toupper:
  9298                           	opt callstack 0
  9299                           
  9300 ;; *************** function _islower *****************
  9301 ;; Defined at:
  9302 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/islower.c"
  9303 ;; Parameters:    Size  Location     Type
  9304 ;;  c               2  [STACK] int 
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  2  [STACK] int 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9320 ;;Total ram usage:        0 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; Hardware stack levels required when called:    6
  9323 ;; This function calls:
  9324 ;;		Nothing
  9325 ;; This function is called by:
  9326 ;;		_toupper
  9327 ;; This function uses a reentrant model
  9328 ;;
  9329                           
  9330                           	psect	text38
  9331  018738                     __ptext38:
  9332                           	opt callstack 0
  9333  018738                     _islower:
  9334                           	opt callstack 16
  9335                           
  9336                           ;stkvar	_c @ sp[(0)+-2]
  9337                           
  9338                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9339                           ;incstack = 0
  9340  018738  0EFE               	movlw	-2
  9341  01873A  50E3               	movf	plusw1,w,c
  9342  01873C  0F9F               	addlw	159
  9343  01873E  6E3F               	movwf	(btemp+10)^0,c
  9344  018740  0EFF               	movlw	-1
  9345  018742  006F FF8C  F040    	movff	plusw1,btemp+11
  9346  018748  0EFF               	movlw	255
  9347  01874A  2240               	addwfc	(btemp+11)^0,f,c
  9348  01874C  5040               	movf	(btemp+11)^0,w,c
  9349  01874E  E106               	bnz	u5060
  9350  018750  0E1A               	movlw	26
  9351  018752  5C3F               	subwf	(btemp+10)^0,w,c
  9352  018754  B0D8               	btfsc	status,0,c
  9353  018756  D002               	goto	u5060
  9354  018758  0E01               	movlw	1
  9355  01875A  D001               	goto	u5070
  9356  01875C                     u5060:
  9357  01875C  0E00               	movlw	0
  9358  01875E                     u5070:
  9359  01875E  6E35               	movwf	btemp^0,c
  9360  018760  6A36               	clrf	(btemp+1)^0,c
  9361                           
  9362                           ; _islower: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9363  018762  52E5               	movf	postdec1,f,c
  9364  018764  52E5               	movf	postdec1,f,c
  9365  018766  0012               	return		;funcret
  9366  018768                     __end_of_islower:
  9367                           	opt callstack 0
  9368                           
  9369 ;; *************** function _isalpha *****************
  9370 ;; Defined at:
  9371 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isalpha.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;  c               2  [STACK] int 
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;		None
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  2  [STACK] int 
  9378 ;; Registers used:
  9379 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9389 ;;Total ram usage:        0 bytes
  9390 ;; Hardware stack levels used:    1
  9391 ;; Hardware stack levels required when called:    6
  9392 ;; This function calls:
  9393 ;;		Nothing
  9394 ;; This function is called by:
  9395 ;;		_xtoa
  9396 ;; This function uses a reentrant model
  9397 ;;
  9398                           
  9399                           	psect	text39
  9400  0184AE                     __ptext39:
  9401                           	opt callstack 0
  9402  0184AE                     _isalpha:
  9403                           	opt callstack 17
  9404                           
  9405                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
  9406                           ;incstack = 0
  9407  0184AE  0E9F               	movlw	159
  9408  0184B0  6E3F               	movwf	(btemp+10)^0,c
  9409  0184B2  0EFF               	movlw	255
  9410  0184B4  6E40               	movwf	(btemp+11)^0,c
  9411                           
  9412                           ;stkvar	_c @ sp[(0)+-2]
  9413  0184B6  0EFE               	movlw	-2
  9414  0184B8  006F FF8C  F03D    	movff	plusw1,btemp+8
  9415  0184BE  0EFF               	movlw	-1
  9416  0184C0  006F FF8C  F03E    	movff	plusw1,btemp+9
  9417  0184C6  0E20               	movlw	32
  9418  0184C8  123D               	iorwf	(btemp+8)^0,f,c
  9419  0184CA  0E00               	movlw	0
  9420  0184CC  123E               	iorwf	(btemp+9)^0,f,c
  9421  0184CE  503F               	movf	(btemp+10)^0,w,c
  9422  0184D0  263D               	addwf	(btemp+8)^0,f,c
  9423  0184D2  5040               	movf	(btemp+11)^0,w,c
  9424  0184D4  223E               	addwfc	(btemp+9)^0,f,c
  9425  0184D6  503E               	movf	(btemp+9)^0,w,c
  9426  0184D8  E106               	bnz	u5350
  9427  0184DA  0E1A               	movlw	26
  9428  0184DC  5C3D               	subwf	(btemp+8)^0,w,c
  9429  0184DE  B0D8               	btfsc	status,0,c
  9430  0184E0  D002               	goto	u5350
  9431  0184E2  0E01               	movlw	1
  9432  0184E4  D001               	goto	u5360
  9433  0184E6                     u5350:
  9434  0184E6  0E00               	movlw	0
  9435  0184E8                     u5360:
  9436  0184E8  6E35               	movwf	btemp^0,c
  9437  0184EA  6A36               	clrf	(btemp+1)^0,c
  9438                           
  9439                           ; _isalpha: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
  9440  0184EC  52E5               	movf	postdec1,f,c
  9441  0184EE  52E5               	movf	postdec1,f,c
  9442  0184F0  0012               	return		;funcret
  9443  0184F2                     __end_of_isalpha:
  9444                           	opt callstack 0
  9445                           
  9446 ;; *************** function _utoa *****************
  9447 ;; Defined at:
  9448 ;;		line 593 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
  9449 ;; Parameters:    Size  Location     Type
  9450 ;;  fp              2  [STACK] PTR struct _IO_FILE
  9451 ;;		 -> f(6), NULL(0), 
  9452 ;;  d               8  [STACK] unsigned long long 
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;  n               8  [STACK] unsigned long long 
  9455 ;;  i               2  [STACK] int 
  9456 ;;  w               2  [STACK] int 
  9457 ;;  p               2  [STACK] int 
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  2  [STACK] int 
  9460 ;; Registers used:
  9461 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/4
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9471 ;;Total ram usage:        0 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:   11
  9474 ;; This function calls:
  9475 ;;		___lodiv
  9476 ;;		___lomod
  9477 ;;		_pad
  9478 ;; This function is called by:
  9479 ;;		_vfpfcnvrt
  9480 ;; This function uses a reentrant model
  9481 ;;
  9482                           
  9483                           	psect	text40
  9484  014BA6                     __ptext40:
  9485                           	opt callstack 0
  9486  014BA6                     _utoa:
  9487                           	opt callstack 0
  9488                           
  9489                           ; autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
  9490  014BA6  0E0E               	movlw	14
  9491  014BA8  26E1               	addwf	fsr1l,f,c
  9492  014BAA  0E00               	movlw	0
  9493  014BAC  22E2               	addwfc	fsr1h,f,c
  9494                           
  9495                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 593: static int utoa(FILE *fp
      +                          , unsigned long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 594: {
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 595:     int i, p, w;;/opt/mi
      +                          crochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 596:     unsigned long long n;;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 599:     if (!(prec < 0)) {
  9496                           
  9497                           ;incstack = 0
  9498  014BAE  AE21               	btfss	(_prec+1)^0,7,c
  9499                           
  9500                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 600:         flags &= ~(1 << 
      +                          1);
  9501  014BB0  9222               	bcf	_flags^0,1,c
  9502                           
  9503                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 602:     p = (0 < prec) ? pre
      +                          c : 1;
  9504  014BB2  BE21               	btfsc	(_prec+1)^0,7,c
  9505  014BB4  D005               	goto	u9930
  9506  014BB6  5021               	movf	(_prec+1)^0,w,c
  9507  014BB8  E110               	bnz	l9731
  9508  014BBA  0420               	decf	_prec^0,w,c
  9509  014BBC  B0D8               	btfsc	status,0,c
  9510  014BBE  D00D               	goto	l9731
  9511  014BC0                     u9930:
  9512  014BC0  0E01               	movlw	1
  9513  014BC2  6E3F               	movwf	(btemp+10)^0,c
  9514  014BC4  0E00               	movlw	0
  9515  014BC6  6E40               	movwf	(btemp+11)^0,c
  9516                           
  9517                           ;stkvar	_p @ sp[(-14)+12]
  9518  014BC8  0EFE               	movlw	-2
  9519  014BCA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9520  014BD0  0EFF               	movlw	-1
  9521  014BD2  0060  F103  FFE3   	movff	btemp+11,plusw1
  9522  014BD8  D008               	goto	l1910
  9523  014BDA                     l9731:
  9524                           
  9525                           ;stkvar	_p @ sp[(-14)+12]
  9526  014BDA  0EFE               	movlw	-2
  9527  014BDC  0060  F083  FFE3   	movff	_prec,plusw1
  9528  014BE2  0EFF               	movlw	-1
  9529  014BE4  0060  F087  FFE3   	movff	_prec+1,plusw1
  9530  014BEA                     l1910:
  9531                           
  9532                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 603:     w = width;
  9533                           ;stkvar	_w @ sp[(-14)+10]
  9534  014BEA  0EFC               	movlw	-4
  9535  014BEC  0060  F07B  FFE3   	movff	_width,plusw1
  9536  014BF2  0EFD               	movlw	-3
  9537  014BF4  0060  F07F  FFE3   	movff	_width+1,plusw1
  9538                           
  9539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 606:     n = d;
  9540                           ;stkvar	_d @ sp[(-14)+-10]
  9541  014BFA  0EE8               	movlw	232
  9542  014BFC  24E1               	addwf	fsr1l,w,c
  9543  014BFE  6ED9               	movwf	fsr2l,c
  9544  014C00  0EFF               	movlw	255
  9545  014C02  20E2               	addwfc	fsr1h,w,c
  9546  014C04  6EDA               	movwf	fsr2h,c
  9547                           
  9548                           ;stkvar	_n @ sp[(-14)+0]
  9549  014C06  0E08               	movlw	8
  9550  014C08  6E35               	movwf	btemp^0,c
  9551  014C0A  0EF2               	movlw	-14
  9552  014C0C                     us994999:
  9553  014C0C  006F FF7B FFE3     	movff	postinc2,plusw1
  9554  014C12  28E8               	incf	wreg,w,c
  9555  014C14  2E35               	decfsz	btemp^0,f,c
  9556  014C16  D7FA               	bra	us994999
  9557                           
  9558                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 607:     i = sizeof(dbuf) - 1
      +                          ;
  9559  014C18  0E4F               	movlw	79
  9560  014C1A  6E3F               	movwf	(btemp+10)^0,c
  9561  014C1C  0E00               	movlw	0
  9562  014C1E  6E40               	movwf	(btemp+11)^0,c
  9563                           
  9564                           ;stkvar	_i @ sp[(-14)+8]
  9565  014C20  0EFA               	movlw	-6
  9566  014C22  0060  F0FF  FFE3   	movff	btemp+10,plusw1
  9567  014C28  0EFB               	movlw	-5
  9568  014C2A  0060  F103  FFE3   	movff	btemp+11,plusw1
  9569                           
  9570                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 608:     dbuf[i] = '\0';
  9571  014C30  0102               	movlb	2	; () banked
  9572  014C32  6BFB               	clrf	(_dbuf+79)& (0+255),b
  9573                           
  9574                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9575  014C34  D0FB               	goto	l9749
  9576  014C36                     l9739:
  9577                           
  9578                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 610:         --i;
  9579                           ;stkvar	_i @ sp[(-14)+8]
  9580  014C36  50E1               	movf	fsr1l,w,c
  9581  014C38  0FFA               	addlw	-6
  9582  014C3A  6ED9               	movwf	fsr2l,c
  9583  014C3C  50E2               	movf	fsr1h,w,c
  9584  014C3E  6EDA               	movwf	fsr2h,c
  9585  014C40  0EFF               	movlw	255
  9586  014C42  22DA               	addwfc	fsr2h,f,c
  9587  014C44  06DE               	decf	postinc2,f,c
  9588  014C46  0E00               	movlw	0
  9589  014C48  5ADD               	subwfb	postdec2,f,c
  9590                           
  9591                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 611:         dbuf[i] = '0' + 
      +                          (n % 10);
  9592  014C4A  0E0A               	movlw	10
  9593  014C4C  6EE6               	movwf	postinc1,c
  9594  014C4E  0E00               	movlw	0
  9595  014C50  6EE6               	movwf	postinc1,c
  9596  014C52  0E00               	movlw	0
  9597  014C54  6EE6               	movwf	postinc1,c
  9598  014C56  0E00               	movlw	0
  9599  014C58  6EE6               	movwf	postinc1,c
  9600  014C5A  0E00               	movlw	0
  9601  014C5C  6EE6               	movwf	postinc1,c
  9602  014C5E  0E00               	movlw	0
  9603  014C60  6EE6               	movwf	postinc1,c
  9604  014C62  0E00               	movlw	0
  9605  014C64  6EE6               	movwf	postinc1,c
  9606  014C66  0E00               	movlw	0
  9607  014C68  6EE6               	movwf	postinc1,c
  9608                           
  9609                           ;stkvar	_n @ sp[(-22)+0]
  9610  014C6A  50E1               	movf	fsr1l,w,c
  9611  014C6C  0FEA               	addlw	-22
  9612  014C6E  6ED9               	movwf	fsr2l,c
  9613  014C70  50E2               	movf	fsr1h,w,c
  9614  014C72  6EDA               	movwf	fsr2h,c
  9615  014C74  0EFF               	movlw	255
  9616  014C76  22DA               	addwfc	fsr2h,f,c
  9617  014C78  006F FF7B FFE6     	movff	postinc2,postinc1
  9618  014C7E  006F FF7B FFE6     	movff	postinc2,postinc1
  9619  014C84  006F FF7B FFE6     	movff	postinc2,postinc1
  9620  014C8A  006F FF7B FFE6     	movff	postinc2,postinc1
  9621  014C90  006F FF7B FFE6     	movff	postinc2,postinc1
  9622  014C96  006F FF7B FFE6     	movff	postinc2,postinc1
  9623  014C9C  006F FF7B FFE6     	movff	postinc2,postinc1
  9624  014CA2  006F FF7B FFE6     	movff	postinc2,postinc1
  9625  014CA8  EC79  F0B5         	call	___lomod	;wreg free
  9626  014CAC  52E5               	movf	postdec1,f,c
  9627  014CAE  006F FF9C  F04C    	movff	indf1,btemp+23
  9628  014CB4  52E5               	movf	postdec1,f,c
  9629  014CB6  006F FF9C  F04B    	movff	indf1,btemp+22
  9630  014CBC  52E5               	movf	postdec1,f,c
  9631  014CBE  006F FF9C  F04A    	movff	indf1,btemp+21
  9632  014CC4  52E5               	movf	postdec1,f,c
  9633  014CC6  006F FF9C  F049    	movff	indf1,btemp+20
  9634  014CCC  52E5               	movf	postdec1,f,c
  9635  014CCE  006F FF9C  F048    	movff	indf1,btemp+19
  9636  014CD4  52E5               	movf	postdec1,f,c
  9637  014CD6  006F FF9C  F047    	movff	indf1,btemp+18
  9638  014CDC  52E5               	movf	postdec1,f,c
  9639  014CDE  006F FF9C  F046    	movff	indf1,btemp+17
  9640  014CE4  52E5               	movf	postdec1,f,c
  9641  014CE6  006F FF9C  F045    	movff	indf1,btemp+16
  9642  014CEC  0EF8               	movlw	248
  9643  014CEE  26E1               	addwf	fsr1l,f,c
  9644  014CF0  0EFF               	movlw	255
  9645  014CF2  22E2               	addwfc	fsr1h,f,c
  9646  014CF4  0E30               	movlw	48
  9647  014CF6  2645               	addwf	(btemp+16)^0,f,c
  9648                           
  9649                           ;stkvar	_i @ sp[(-14)+8]
  9650  014CF8  0EFA               	movlw	-6
  9651  014CFA  006F FF8C  F03F    	movff	plusw1,btemp+10
  9652  014D00  0EFB               	movlw	-5
  9653  014D02  006F FF8C  F040    	movff	plusw1,btemp+11
  9654  014D08  0EAC               	movlw	low _dbuf
  9655  014D0A  243F               	addwf	(btemp+10)^0,w,c
  9656  014D0C  6ED9               	movwf	fsr2l,c
  9657  014D0E  0E02               	movlw	high _dbuf
  9658  014D10  2040               	addwfc	(btemp+11)^0,w,c
  9659  014D12  6EDA               	movwf	fsr2h,c
  9660  014D14  0060  F117  FFDF   	movff	btemp+16,indf2
  9661                           
  9662                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 612:         --p;
  9663                           ;stkvar	_p @ sp[(-14)+12]
  9664  014D1A  50E1               	movf	fsr1l,w,c
  9665  014D1C  0FFE               	addlw	-2
  9666  014D1E  6ED9               	movwf	fsr2l,c
  9667  014D20  50E2               	movf	fsr1h,w,c
  9668  014D22  6EDA               	movwf	fsr2h,c
  9669  014D24  0EFF               	movlw	255
  9670  014D26  22DA               	addwfc	fsr2h,f,c
  9671  014D28  06DE               	decf	postinc2,f,c
  9672  014D2A  0E00               	movlw	0
  9673  014D2C  5ADD               	subwfb	postdec2,f,c
  9674                           
  9675                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 613:         --w;
  9676                           ;stkvar	_w @ sp[(-14)+10]
  9677  014D2E  50E1               	movf	fsr1l,w,c
  9678  014D30  0FFC               	addlw	-4
  9679  014D32  6ED9               	movwf	fsr2l,c
  9680  014D34  50E2               	movf	fsr1h,w,c
  9681  014D36  6EDA               	movwf	fsr2h,c
  9682  014D38  0EFF               	movlw	255
  9683  014D3A  22DA               	addwfc	fsr2h,f,c
  9684  014D3C  06DE               	decf	postinc2,f,c
  9685  014D3E  0E00               	movlw	0
  9686  014D40  5ADD               	subwfb	postdec2,f,c
  9687                           
  9688                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 614:         n = n / 10;
  9689  014D42  0E0A               	movlw	10
  9690  014D44  6EE6               	movwf	postinc1,c
  9691  014D46  0E00               	movlw	0
  9692  014D48  6EE6               	movwf	postinc1,c
  9693  014D4A  0E00               	movlw	0
  9694  014D4C  6EE6               	movwf	postinc1,c
  9695  014D4E  0E00               	movlw	0
  9696  014D50  6EE6               	movwf	postinc1,c
  9697  014D52  0E00               	movlw	0
  9698  014D54  6EE6               	movwf	postinc1,c
  9699  014D56  0E00               	movlw	0
  9700  014D58  6EE6               	movwf	postinc1,c
  9701  014D5A  0E00               	movlw	0
  9702  014D5C  6EE6               	movwf	postinc1,c
  9703  014D5E  0E00               	movlw	0
  9704  014D60  6EE6               	movwf	postinc1,c
  9705                           
  9706                           ;stkvar	_n @ sp[(-22)+0]
  9707  014D62  50E1               	movf	fsr1l,w,c
  9708  014D64  0FEA               	addlw	-22
  9709  014D66  6ED9               	movwf	fsr2l,c
  9710  014D68  50E2               	movf	fsr1h,w,c
  9711  014D6A  6EDA               	movwf	fsr2h,c
  9712  014D6C  0EFF               	movlw	255
  9713  014D6E  22DA               	addwfc	fsr2h,f,c
  9714  014D70  006F FF7B FFE6     	movff	postinc2,postinc1
  9715  014D76  006F FF7B FFE6     	movff	postinc2,postinc1
  9716  014D7C  006F FF7B FFE6     	movff	postinc2,postinc1
  9717  014D82  006F FF7B FFE6     	movff	postinc2,postinc1
  9718  014D88  006F FF7B FFE6     	movff	postinc2,postinc1
  9719  014D8E  006F FF7B FFE6     	movff	postinc2,postinc1
  9720  014D94  006F FF7B FFE6     	movff	postinc2,postinc1
  9721  014D9A  006F FF7B FFE6     	movff	postinc2,postinc1
  9722  014DA0  ECA8  F0B2         	call	___lodiv	;wreg free
  9723  014DA4  52E5               	movf	postdec1,f,c
  9724  014DA6  006F FF9C  F04C    	movff	indf1,btemp+23
  9725  014DAC  52E5               	movf	postdec1,f,c
  9726  014DAE  006F FF9C  F04B    	movff	indf1,btemp+22
  9727  014DB4  52E5               	movf	postdec1,f,c
  9728  014DB6  006F FF9C  F04A    	movff	indf1,btemp+21
  9729  014DBC  52E5               	movf	postdec1,f,c
  9730  014DBE  006F FF9C  F049    	movff	indf1,btemp+20
  9731  014DC4  52E5               	movf	postdec1,f,c
  9732  014DC6  006F FF9C  F048    	movff	indf1,btemp+19
  9733  014DCC  52E5               	movf	postdec1,f,c
  9734  014DCE  006F FF9C  F047    	movff	indf1,btemp+18
  9735  014DD4  52E5               	movf	postdec1,f,c
  9736  014DD6  006F FF9C  F046    	movff	indf1,btemp+17
  9737  014DDC  52E5               	movf	postdec1,f,c
  9738  014DDE  006F FF9C  F045    	movff	indf1,btemp+16
  9739  014DE4  0EF8               	movlw	248
  9740  014DE6  26E1               	addwf	fsr1l,f,c
  9741  014DE8  0EFF               	movlw	255
  9742  014DEA  22E2               	addwfc	fsr1h,f,c
  9743                           
  9744                           ;stkvar	_n @ sp[(-14)+0]
  9745  014DEC  0EF2               	movlw	-14
  9746  014DEE  0060  F117  FFE3   	movff	btemp+16,plusw1
  9747  014DF4  0EF3               	movlw	-13
  9748  014DF6  0060  F11B  FFE3   	movff	btemp+17,plusw1
  9749  014DFC  0EF4               	movlw	-12
  9750  014DFE  0060  F11F  FFE3   	movff	btemp+18,plusw1
  9751  014E04  0EF5               	movlw	-11
  9752  014E06  0060  F123  FFE3   	movff	btemp+19,plusw1
  9753  014E0C  0EF6               	movlw	-10
  9754  014E0E  0060  F127  FFE3   	movff	btemp+20,plusw1
  9755  014E14  0EF7               	movlw	-9
  9756  014E16  0060  F12B  FFE3   	movff	btemp+21,plusw1
  9757  014E1C  0EF8               	movlw	-8
  9758  014E1E  0060  F12F  FFE3   	movff	btemp+22,plusw1
  9759  014E24  0EF9               	movlw	-7
  9760  014E26  0060  F133  FFE3   	movff	btemp+23,plusw1
  9761  014E2C                     l9749:
  9762                           
  9763                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 609:     while (i && (n || (0
      +                           < p) || ((0 < w) && (flags & (1 << 1))))) {
  9764                           ;stkvar	_i @ sp[(-14)+8]
  9765  014E2C  0EFA               	movlw	-6
  9766  014E2E  006F FF8C  F035    	movff	plusw1,btemp
  9767  014E34  0EFB               	movlw	-5
  9768  014E36  50E3               	movf	plusw1,w,c
  9769  014E38  1035               	iorwf	btemp^0,w,c
  9770  014E3A  B4D8               	btfsc	status,2,c
  9771  014E3C  D02F               	goto	u9990
  9772                           
  9773                           ;stkvar	_n @ sp[(-14)+0]
  9774  014E3E  0EF2               	movlw	-14
  9775  014E40  50E3               	movf	plusw1,w,c
  9776  014E42  E115               	bnz	u9961
  9777  014E44  0EF3               	movlw	-13
  9778  014E46  50E3               	movf	plusw1,w,c
  9779  014E48  E112               	bnz	u9961
  9780  014E4A  0EF4               	movlw	-12
  9781  014E4C  50E3               	movf	plusw1,w,c
  9782  014E4E  E10F               	bnz	u9961
  9783  014E50  0EF5               	movlw	-11
  9784  014E52  50E3               	movf	plusw1,w,c
  9785  014E54  E10C               	bnz	u9961
  9786  014E56  0EF6               	movlw	-10
  9787  014E58  50E3               	movf	plusw1,w,c
  9788  014E5A  E109               	bnz	u9961
  9789  014E5C  0EF7               	movlw	-9
  9790  014E5E  50E3               	movf	plusw1,w,c
  9791  014E60  E106               	bnz	u9961
  9792  014E62  0EF8               	movlw	-8
  9793  014E64  50E3               	movf	plusw1,w,c
  9794  014E66  E103               	bnz	u9961
  9795  014E68  0EF9               	movlw	-7
  9796  014E6A  50E3               	movf	plusw1,w,c
  9797  014E6C  A4D8               	btfss	status,2,c
  9798  014E6E                     u9961:
  9799  014E6E  D6E3               	goto	l9739
  9800                           
  9801                           ;stkvar	_p @ sp[(-14)+12]
  9802  014E70  0EFF               	movlw	-1
  9803  014E72  BEE3               	btfsc	plusw1,7,c
  9804  014E74  D007               	goto	u9970
  9805  014E76  0EFF               	movlw	-1
  9806  014E78  50E3               	movf	plusw1,w,c
  9807  014E7A  E103               	bnz	u9971
  9808  014E7C  0EFE               	movlw	-2
  9809  014E7E  04E3               	decf	plusw1,w,c
  9810  014E80  B0D8               	btfsc	status,0,c
  9811  014E82                     u9971:
  9812  014E82  D6D9               	goto	l9739
  9813  014E84                     u9970:
  9814                           
  9815                           ;stkvar	_w @ sp[(-14)+10]
  9816  014E84  0EFD               	movlw	-3
  9817  014E86  BEE3               	btfsc	plusw1,7,c
  9818  014E88  D009               	goto	u9990
  9819  014E8A  0EFD               	movlw	-3
  9820  014E8C  50E3               	movf	plusw1,w,c
  9821  014E8E  E104               	bnz	u9980
  9822  014E90  0EFC               	movlw	-4
  9823  014E92  04E3               	decf	plusw1,w,c
  9824  014E94  A0D8               	btfss	status,0,c
  9825  014E96  D002               	goto	u9990
  9826  014E98                     u9980:
  9827  014E98  B222               	btfsc	_flags^0,1,c
  9828  014E9A  D6CD               	goto	l9739
  9829  014E9C                     u9990:
  9830                           
  9831                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 618:     return pad(fp, &dbuf
      +                          [i], w);
  9832                           ;stkvar	_w @ sp[(-14)+10]
  9833  014E9C  0EFC               	movlw	-4
  9834  014E9E  006F FF8F FFE6     	movff	plusw1,postinc1
  9835  014EA4  006F FF8F FFE6     	movff	plusw1,postinc1
  9836                           
  9837                           ;stkvar	_i @ sp[(-16)+8]
  9838  014EAA  0EAC               	movlw	low _dbuf
  9839  014EAC  6E3F               	movwf	(btemp+10)^0,c
  9840  014EAE  0E02               	movlw	high _dbuf
  9841  014EB0  6E40               	movwf	(btemp+11)^0,c
  9842  014EB2  0EF8               	movlw	-8
  9843  014EB4  50E3               	movf	plusw1,w,c
  9844  014EB6  263F               	addwf	(btemp+10)^0,f,c
  9845  014EB8  0EF9               	movlw	-7
  9846  014EBA  50E3               	movf	plusw1,w,c
  9847  014EBC  2240               	addwfc	(btemp+11)^0,f,c
  9848  014EBE  0060  F0FF  FFE6   	movff	btemp+10,postinc1
  9849  014EC4  0060  F103  FFE6   	movff	btemp+11,postinc1
  9850                           
  9851                           ;stkvar	_fp @ sp[(-18)+-2]
  9852  014ECA  0EEC               	movlw	-20
  9853  014ECC  006F FF8F FFE6     	movff	plusw1,postinc1
  9854  014ED2  006F FF8F FFE6     	movff	plusw1,postinc1
  9855  014ED8  ECCE  F0B7         	call	_pad	;wreg free
  9856                           
  9857                           ; _utoa: autosize = 14, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
  9858  014EDC  0EE8               	movlw	232
  9859  014EDE  26E1               	addwf	fsr1l,f,c
  9860  014EE0  0EFF               	movlw	255
  9861  014EE2  22E2               	addwfc	fsr1h,f,c
  9862  014EE4  0012               	return		;funcret
  9863  014EE6                     __end_of_utoa:
  9864                           	opt callstack 0
  9865                           
  9866 ;; *************** function ___lomod *****************
  9867 ;; Defined at:
  9868 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lomod.c"
  9869 ;; Parameters:    Size  Location     Type
  9870 ;;  dividend        8  [STACK] unsigned long long 
  9871 ;;  divisor         8  [STACK] unsigned long long 
  9872 ;; Auto vars:     Size  Location     Type
  9873 ;;  counter         1  [STACK] unsigned char 
  9874 ;; Return value:  Size  Location     Type
  9875 ;;                  8  [STACK] unsigned long long 
  9876 ;; Registers used:
  9877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
  9878 ;; Tracked objects:
  9879 ;;		On entry : 0/2
  9880 ;;		On exit  : 0/0
  9881 ;;		Unchanged: 0/0
  9882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
  9883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
  9887 ;;Total ram usage:        0 bytes
  9888 ;; Hardware stack levels used:    1
  9889 ;; Hardware stack levels required when called:    6
  9890 ;; This function calls:
  9891 ;;		Nothing
  9892 ;; This function is called by:
  9893 ;;		_utoa
  9894 ;; This function uses a reentrant model
  9895 ;;
  9896                           
  9897                           	psect	text41
  9898  016AF2                     __ptext41:
  9899                           	opt callstack 0
  9900  016AF2                     ___lomod:
  9901                           	opt callstack 0
  9902                           
  9903                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
  9904  016AF2  52E6               	movf	postinc1,f,c
  9905                           
  9906                           ;stkvar	_divisor @ sp[(-1)+-16]
  9907                           
  9908                           ;incstack = 0
  9909  016AF4  0EEF               	movlw	-17
  9910  016AF6  50E3               	movf	plusw1,w,c
  9911  016AF8  E116               	bnz	u6500
  9912  016AFA  0EF0               	movlw	-16
  9913  016AFC  50E3               	movf	plusw1,w,c
  9914  016AFE  E113               	bnz	u6500
  9915  016B00  0EF1               	movlw	-15
  9916  016B02  50E3               	movf	plusw1,w,c
  9917  016B04  E110               	bnz	u6500
  9918  016B06  0EF2               	movlw	-14
  9919  016B08  50E3               	movf	plusw1,w,c
  9920  016B0A  E10D               	bnz	u6500
  9921  016B0C  0EF3               	movlw	-13
  9922  016B0E  50E3               	movf	plusw1,w,c
  9923  016B10  E10A               	bnz	u6500
  9924  016B12  0EF4               	movlw	-12
  9925  016B14  50E3               	movf	plusw1,w,c
  9926  016B16  E107               	bnz	u6500
  9927  016B18  0EF5               	movlw	-11
  9928  016B1A  50E3               	movf	plusw1,w,c
  9929  016B1C  E104               	bnz	u6500
  9930  016B1E  0EF6               	movlw	-10
  9931  016B20  50E3               	movf	plusw1,w,c
  9932  016B22  B4D8               	btfsc	status,2,c
  9933  016B24  D075               	goto	u6530
  9934  016B26                     u6500:
  9935                           
  9936                           ;stkvar	_counter @ sp[(-1)+0]
  9937  016B26  0EFF               	movlw	-1
  9938  016B28  6AE3               	clrf	plusw1,c
  9939  016B2A  D012               	goto	L9
  9940  016B2C                     l7085:
  9941                           
  9942                           ;stkvar	_divisor @ sp[(-1)+-16]
  9943  016B2C  90D8               	bcf	status,0,c
  9944  016B2E  0EEF               	movlw	-17
  9945  016B30  36E3               	rlcf	plusw1,f,c
  9946  016B32  0EF0               	movlw	-16
  9947  016B34  36E3               	rlcf	plusw1,f,c
  9948  016B36  0EF1               	movlw	-15
  9949  016B38  36E3               	rlcf	plusw1,f,c
  9950  016B3A  0EF2               	movlw	-14
  9951  016B3C  36E3               	rlcf	plusw1,f,c
  9952  016B3E  0EF3               	movlw	-13
  9953  016B40  36E3               	rlcf	plusw1,f,c
  9954  016B42  0EF4               	movlw	-12
  9955  016B44  36E3               	rlcf	plusw1,f,c
  9956  016B46  0EF5               	movlw	-11
  9957  016B48  36E3               	rlcf	plusw1,f,c
  9958  016B4A  0EF6               	movlw	-10
  9959  016B4C  36E3               	rlcf	plusw1,f,c
  9960                           
  9961                           ;stkvar	_counter @ sp[(-1)+0]
  9962  016B4E  0EFF               	movlw	-1
  9963  016B50                     L9:
  9964  016B50  2AE3               	incf	plusw1,f,c
  9965                           
  9966                           ;stkvar	_divisor @ sp[(-1)+-16]
  9967  016B52  0EF6               	movlw	-10
  9968  016B54  AEE3               	btfss	plusw1,7,c
  9969  016B56  D7EA               	goto	l7085
  9970  016B58                     u6510:
  9971                           
  9972                           ;stkvar	_divisor @ sp[(-1)+-16]
  9973                           ;stkvar	_dividend @ sp[(-1)+-8]
  9974  016B58  50E1               	movf	fsr1l,w,c
  9975  016B5A  0FF7               	addlw	-9
  9976  016B5C  6ED9               	movwf	fsr2l,c
  9977  016B5E  50E2               	movf	fsr1h,w,c
  9978  016B60  6EDA               	movwf	fsr2h,c
  9979  016B62  0EFF               	movlw	255
  9980  016B64  22DA               	addwfc	fsr2h,f,c
  9981  016B66  0EEF               	movlw	-17
  9982  016B68  50E3               	movf	plusw1,w,c
  9983  016B6A  5CDE               	subwf	postinc2,w,c
  9984  016B6C  0EF0               	movlw	-16
  9985  016B6E  50E3               	movf	plusw1,w,c
  9986  016B70  58DE               	subwfb	postinc2,w,c
  9987  016B72  0EF1               	movlw	-15
  9988  016B74  50E3               	movf	plusw1,w,c
  9989  016B76  58DE               	subwfb	postinc2,w,c
  9990  016B78  0EF2               	movlw	-14
  9991  016B7A  50E3               	movf	plusw1,w,c
  9992  016B7C  58DE               	subwfb	postinc2,w,c
  9993  016B7E  0EF3               	movlw	-13
  9994  016B80  50E3               	movf	plusw1,w,c
  9995  016B82  58DE               	subwfb	postinc2,w,c
  9996  016B84  0EF4               	movlw	-12
  9997  016B86  50E3               	movf	plusw1,w,c
  9998  016B88  58DE               	subwfb	postinc2,w,c
  9999  016B8A  0EF5               	movlw	-11
 10000  016B8C  50E3               	movf	plusw1,w,c
 10001  016B8E  58DE               	subwfb	postinc2,w,c
 10002  016B90  0EF6               	movlw	-10
 10003  016B92  50E3               	movf	plusw1,w,c
 10004  016B94  58DE               	subwfb	postinc2,w,c
 10005  016B96  A0D8               	btfss	status,0,c
 10006  016B98  D01F               	goto	l7093
 10007                           
 10008                           ;stkvar	_divisor @ sp[(-1)+-16]
 10009                           ;stkvar	_dividend @ sp[(-1)+-8]
 10010  016B9A  50E1               	movf	fsr1l,w,c
 10011  016B9C  0FF7               	addlw	-9
 10012  016B9E  6ED9               	movwf	fsr2l,c
 10013  016BA0  50E2               	movf	fsr1h,w,c
 10014  016BA2  6EDA               	movwf	fsr2h,c
 10015  016BA4  0EFF               	movlw	255
 10016  016BA6  22DA               	addwfc	fsr2h,f,c
 10017  016BA8  0EEF               	movlw	-17
 10018  016BAA  50E3               	movf	plusw1,w,c
 10019  016BAC  5EDE               	subwf	postinc2,f,c
 10020  016BAE  0EF0               	movlw	-16
 10021  016BB0  50E3               	movf	plusw1,w,c
 10022  016BB2  5ADE               	subwfb	postinc2,f,c
 10023  016BB4  0EF1               	movlw	-15
 10024  016BB6  50E3               	movf	plusw1,w,c
 10025  016BB8  5ADE               	subwfb	postinc2,f,c
 10026  016BBA  0EF2               	movlw	-14
 10027  016BBC  50E3               	movf	plusw1,w,c
 10028  016BBE  5ADE               	subwfb	postinc2,f,c
 10029  016BC0  0EF3               	movlw	-13
 10030  016BC2  50E3               	movf	plusw1,w,c
 10031  016BC4  5ADE               	subwfb	postinc2,f,c
 10032  016BC6  0EF4               	movlw	-12
 10033  016BC8  50E3               	movf	plusw1,w,c
 10034  016BCA  5ADE               	subwfb	postinc2,f,c
 10035  016BCC  0EF5               	movlw	-11
 10036  016BCE  50E3               	movf	plusw1,w,c
 10037  016BD0  5ADE               	subwfb	postinc2,f,c
 10038  016BD2  0EF6               	movlw	-10
 10039  016BD4  50E3               	movf	plusw1,w,c
 10040  016BD6  5ADE               	subwfb	postinc2,f,c
 10041  016BD8                     l7093:
 10042                           
 10043                           ;stkvar	_divisor @ sp[(-1)+-16]
 10044  016BD8  90D8               	bcf	status,0,c
 10045  016BDA  0EF6               	movlw	-10
 10046  016BDC  32E3               	rrcf	plusw1,f,c
 10047  016BDE  0EF5               	movlw	-11
 10048  016BE0  32E3               	rrcf	plusw1,f,c
 10049  016BE2  0EF4               	movlw	-12
 10050  016BE4  32E3               	rrcf	plusw1,f,c
 10051  016BE6  0EF3               	movlw	-13
 10052  016BE8  32E3               	rrcf	plusw1,f,c
 10053  016BEA  0EF2               	movlw	-14
 10054  016BEC  32E3               	rrcf	plusw1,f,c
 10055  016BEE  0EF1               	movlw	-15
 10056  016BF0  32E3               	rrcf	plusw1,f,c
 10057  016BF2  0EF0               	movlw	-16
 10058  016BF4  32E3               	rrcf	plusw1,f,c
 10059  016BF6  0EEF               	movlw	-17
 10060  016BF8  32E3               	rrcf	plusw1,f,c
 10061                           
 10062                           ;stkvar	_counter @ sp[(-1)+0]
 10063  016BFA  0EFF               	movlw	-1
 10064  016BFC  50E3               	movf	plusw1,w,c
 10065  016BFE  6E35               	movwf	btemp^0,c
 10066  016C00  0E01               	movlw	1
 10067  016C02  5E35               	subwf	btemp^0,f,c
 10068  016C04  0EFF               	movlw	-1
 10069  016C06  0060  F0D7  FFE3   	movff	btemp,plusw1
 10070  016C0C  A4D8               	btfss	status,2,c
 10071  016C0E  D7A4               	goto	u6510
 10072  016C10                     u6530:
 10073                           
 10074                           ;stkvar	_dividend @ sp[(-1)+-8]
 10075  016C10  0EF7               	movlw	247
 10076  016C12  24E1               	addwf	fsr1l,w,c
 10077  016C14  6ED9               	movwf	fsr2l,c
 10078  016C16  0EFF               	movlw	255
 10079  016C18  20E2               	addwfc	fsr1h,w,c
 10080  016C1A  6EDA               	movwf	fsr2h,c
 10081                           
 10082                           ;stkvar	?___lomod @ sp[(-1)+-8]
 10083  016C1C  0E08               	movlw	8
 10084  016C1E  6E35               	movwf	btemp^0,c
 10085  016C20  0EF7               	movlw	-9
 10086  016C22                     us654999:
 10087  016C22  006F FF7B FFE3     	movff	postinc2,plusw1
 10088  016C28  28E8               	incf	wreg,w,c
 10089  016C2A  2E35               	decfsz	btemp^0,f,c
 10090  016C2C  D7FA               	bra	us654999
 10091                           
 10092                           ; ___lomod: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10093  016C2E  52E5               	movf	postdec1,f,c
 10094  016C30  0012               	return		;funcret
 10095  016C32                     __end_of___lomod:
 10096                           	opt callstack 0
 10097                           
 10098 ;; *************** function ___lodiv *****************
 10099 ;; Defined at:
 10100 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/lodiv.c"
 10101 ;; Parameters:    Size  Location     Type
 10102 ;;  dividend        8  [STACK] unsigned long long 
 10103 ;;  divisor         8  [STACK] unsigned long long 
 10104 ;; Auto vars:     Size  Location     Type
 10105 ;;  quotient        8  [STACK] unsigned long long 
 10106 ;;  counter         1  [STACK] unsigned char 
 10107 ;; Return value:  Size  Location     Type
 10108 ;;                  8  [STACK] unsigned long long 
 10109 ;; Registers used:
 10110 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 10111 ;; Tracked objects:
 10112 ;;		On entry : 0/2
 10113 ;;		On exit  : 0/0
 10114 ;;		Unchanged: 0/0
 10115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10120 ;;Total ram usage:        0 bytes
 10121 ;; Hardware stack levels used:    1
 10122 ;; Hardware stack levels required when called:    6
 10123 ;; This function calls:
 10124 ;;		Nothing
 10125 ;; This function is called by:
 10126 ;;		_utoa
 10127 ;; This function uses a reentrant model
 10128 ;;
 10129                           
 10130                           	psect	text42
 10131  016550                     __ptext42:
 10132                           	opt callstack 0
 10133  016550                     ___lodiv:
 10134                           	opt callstack 0
 10135                           
 10136                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 10137  016550  0E09               	movlw	9
 10138  016552  26E1               	addwf	fsr1l,f,c
 10139  016554  0E00               	movlw	0
 10140  016556  22E2               	addwfc	fsr1h,f,c
 10141                           
 10142                           ;stkvar	_quotient @ sp[(-9)+0]
 10143                           
 10144                           ;incstack = 0
 10145  016558  0E07               	movlw	7
 10146  01655A  6E35               	movwf	btemp^0,c
 10147  01655C  0EF7               	movlw	-9
 10148  01655E                     u6441:
 10149  01655E  6AE3               	clrf	plusw1,c
 10150  016560  2AE8               	incf	wreg,f,c
 10151  016562  0635               	decf	btemp^0,f,c
 10152  016564  E2FC               	bc	u6441
 10153                           
 10154                           ;stkvar	_divisor @ sp[(-9)+-16]
 10155  016566  0EE7               	movlw	-25
 10156  016568  50E3               	movf	plusw1,w,c
 10157  01656A  E116               	bnz	u6450
 10158  01656C  0EE8               	movlw	-24
 10159  01656E  50E3               	movf	plusw1,w,c
 10160  016570  E113               	bnz	u6450
 10161  016572  0EE9               	movlw	-23
 10162  016574  50E3               	movf	plusw1,w,c
 10163  016576  E110               	bnz	u6450
 10164  016578  0EEA               	movlw	-22
 10165  01657A  50E3               	movf	plusw1,w,c
 10166  01657C  E10D               	bnz	u6450
 10167  01657E  0EEB               	movlw	-21
 10168  016580  50E3               	movf	plusw1,w,c
 10169  016582  E10A               	bnz	u6450
 10170  016584  0EEC               	movlw	-20
 10171  016586  50E3               	movf	plusw1,w,c
 10172  016588  E107               	bnz	u6450
 10173  01658A  0EED               	movlw	-19
 10174  01658C  50E3               	movf	plusw1,w,c
 10175  01658E  E104               	bnz	u6450
 10176  016590  0EEE               	movlw	-18
 10177  016592  50E3               	movf	plusw1,w,c
 10178  016594  B4D8               	btfsc	status,2,c
 10179  016596  D088               	goto	u6480
 10180  016598                     u6450:
 10181                           
 10182                           ;stkvar	_counter @ sp[(-9)+8]
 10183  016598  0EFF               	movlw	-1
 10184  01659A  6AE3               	clrf	plusw1,c
 10185  01659C  D012               	goto	L10
 10186  01659E                     l7061:
 10187                           
 10188                           ;stkvar	_divisor @ sp[(-9)+-16]
 10189  01659E  90D8               	bcf	status,0,c
 10190  0165A0  0EE7               	movlw	-25
 10191  0165A2  36E3               	rlcf	plusw1,f,c
 10192  0165A4  0EE8               	movlw	-24
 10193  0165A6  36E3               	rlcf	plusw1,f,c
 10194  0165A8  0EE9               	movlw	-23
 10195  0165AA  36E3               	rlcf	plusw1,f,c
 10196  0165AC  0EEA               	movlw	-22
 10197  0165AE  36E3               	rlcf	plusw1,f,c
 10198  0165B0  0EEB               	movlw	-21
 10199  0165B2  36E3               	rlcf	plusw1,f,c
 10200  0165B4  0EEC               	movlw	-20
 10201  0165B6  36E3               	rlcf	plusw1,f,c
 10202  0165B8  0EED               	movlw	-19
 10203  0165BA  36E3               	rlcf	plusw1,f,c
 10204  0165BC  0EEE               	movlw	-18
 10205  0165BE  36E3               	rlcf	plusw1,f,c
 10206                           
 10207                           ;stkvar	_counter @ sp[(-9)+8]
 10208  0165C0  0EFF               	movlw	-1
 10209  0165C2                     L10:
 10210  0165C2  2AE3               	incf	plusw1,f,c
 10211                           
 10212                           ;stkvar	_divisor @ sp[(-9)+-16]
 10213  0165C4  0EEE               	movlw	-18
 10214  0165C6  AEE3               	btfss	plusw1,7,c
 10215  0165C8  D7EA               	goto	l7061
 10216  0165CA                     u6460:
 10217                           
 10218                           ;stkvar	_quotient @ sp[(-9)+0]
 10219  0165CA  90D8               	bcf	status,0,c
 10220  0165CC  0EF7               	movlw	-9
 10221  0165CE  36E3               	rlcf	plusw1,f,c
 10222  0165D0  0EF8               	movlw	-8
 10223  0165D2  36E3               	rlcf	plusw1,f,c
 10224  0165D4  0EF9               	movlw	-7
 10225  0165D6  36E3               	rlcf	plusw1,f,c
 10226  0165D8  0EFA               	movlw	-6
 10227  0165DA  36E3               	rlcf	plusw1,f,c
 10228  0165DC  0EFB               	movlw	-5
 10229  0165DE  36E3               	rlcf	plusw1,f,c
 10230  0165E0  0EFC               	movlw	-4
 10231  0165E2  36E3               	rlcf	plusw1,f,c
 10232  0165E4  0EFD               	movlw	-3
 10233  0165E6  36E3               	rlcf	plusw1,f,c
 10234  0165E8  0EFE               	movlw	-2
 10235  0165EA  36E3               	rlcf	plusw1,f,c
 10236                           
 10237                           ;stkvar	_divisor @ sp[(-9)+-16]
 10238                           ;stkvar	_dividend @ sp[(-9)+-8]
 10239  0165EC  50E1               	movf	fsr1l,w,c
 10240  0165EE  0FEF               	addlw	-17
 10241  0165F0  6ED9               	movwf	fsr2l,c
 10242  0165F2  50E2               	movf	fsr1h,w,c
 10243  0165F4  6EDA               	movwf	fsr2h,c
 10244  0165F6  0EFF               	movlw	255
 10245  0165F8  22DA               	addwfc	fsr2h,f,c
 10246  0165FA  0EE7               	movlw	-25
 10247  0165FC  50E3               	movf	plusw1,w,c
 10248  0165FE  5CDE               	subwf	postinc2,w,c
 10249  016600  0EE8               	movlw	-24
 10250  016602  50E3               	movf	plusw1,w,c
 10251  016604  58DE               	subwfb	postinc2,w,c
 10252  016606  0EE9               	movlw	-23
 10253  016608  50E3               	movf	plusw1,w,c
 10254  01660A  58DE               	subwfb	postinc2,w,c
 10255  01660C  0EEA               	movlw	-22
 10256  01660E  50E3               	movf	plusw1,w,c
 10257  016610  58DE               	subwfb	postinc2,w,c
 10258  016612  0EEB               	movlw	-21
 10259  016614  50E3               	movf	plusw1,w,c
 10260  016616  58DE               	subwfb	postinc2,w,c
 10261  016618  0EEC               	movlw	-20
 10262  01661A  50E3               	movf	plusw1,w,c
 10263  01661C  58DE               	subwfb	postinc2,w,c
 10264  01661E  0EED               	movlw	-19
 10265  016620  50E3               	movf	plusw1,w,c
 10266  016622  58DE               	subwfb	postinc2,w,c
 10267  016624  0EEE               	movlw	-18
 10268  016626  50E3               	movf	plusw1,w,c
 10269  016628  58DE               	subwfb	postinc2,w,c
 10270  01662A  A0D8               	btfss	status,0,c
 10271  01662C  D021               	goto	l7073
 10272                           
 10273                           ;stkvar	_divisor @ sp[(-9)+-16]
 10274                           ;stkvar	_dividend @ sp[(-9)+-8]
 10275  01662E  50E1               	movf	fsr1l,w,c
 10276  016630  0FEF               	addlw	-17
 10277  016632  6ED9               	movwf	fsr2l,c
 10278  016634  50E2               	movf	fsr1h,w,c
 10279  016636  6EDA               	movwf	fsr2h,c
 10280  016638  0EFF               	movlw	255
 10281  01663A  22DA               	addwfc	fsr2h,f,c
 10282  01663C  0EE7               	movlw	-25
 10283  01663E  50E3               	movf	plusw1,w,c
 10284  016640  5EDE               	subwf	postinc2,f,c
 10285  016642  0EE8               	movlw	-24
 10286  016644  50E3               	movf	plusw1,w,c
 10287  016646  5ADE               	subwfb	postinc2,f,c
 10288  016648  0EE9               	movlw	-23
 10289  01664A  50E3               	movf	plusw1,w,c
 10290  01664C  5ADE               	subwfb	postinc2,f,c
 10291  01664E  0EEA               	movlw	-22
 10292  016650  50E3               	movf	plusw1,w,c
 10293  016652  5ADE               	subwfb	postinc2,f,c
 10294  016654  0EEB               	movlw	-21
 10295  016656  50E3               	movf	plusw1,w,c
 10296  016658  5ADE               	subwfb	postinc2,f,c
 10297  01665A  0EEC               	movlw	-20
 10298  01665C  50E3               	movf	plusw1,w,c
 10299  01665E  5ADE               	subwfb	postinc2,f,c
 10300  016660  0EED               	movlw	-19
 10301  016662  50E3               	movf	plusw1,w,c
 10302  016664  5ADE               	subwfb	postinc2,f,c
 10303  016666  0EEE               	movlw	-18
 10304  016668  50E3               	movf	plusw1,w,c
 10305  01666A  5ADE               	subwfb	postinc2,f,c
 10306                           
 10307                           ;stkvar	_quotient @ sp[(-9)+0]
 10308  01666C  0EF7               	movlw	-9
 10309  01666E  80E3               	bsf	plusw1,0,c
 10310  016670                     l7073:
 10311                           
 10312                           ;stkvar	_divisor @ sp[(-9)+-16]
 10313  016670  90D8               	bcf	status,0,c
 10314  016672  0EEE               	movlw	-18
 10315  016674  32E3               	rrcf	plusw1,f,c
 10316  016676  0EED               	movlw	-19
 10317  016678  32E3               	rrcf	plusw1,f,c
 10318  01667A  0EEC               	movlw	-20
 10319  01667C  32E3               	rrcf	plusw1,f,c
 10320  01667E  0EEB               	movlw	-21
 10321  016680  32E3               	rrcf	plusw1,f,c
 10322  016682  0EEA               	movlw	-22
 10323  016684  32E3               	rrcf	plusw1,f,c
 10324  016686  0EE9               	movlw	-23
 10325  016688  32E3               	rrcf	plusw1,f,c
 10326  01668A  0EE8               	movlw	-24
 10327  01668C  32E3               	rrcf	plusw1,f,c
 10328  01668E  0EE7               	movlw	-25
 10329  016690  32E3               	rrcf	plusw1,f,c
 10330                           
 10331                           ;stkvar	_counter @ sp[(-9)+8]
 10332  016692  0EFF               	movlw	-1
 10333  016694  50E3               	movf	plusw1,w,c
 10334  016696  6E35               	movwf	btemp^0,c
 10335  016698  0E01               	movlw	1
 10336  01669A  5E35               	subwf	btemp^0,f,c
 10337  01669C  0EFF               	movlw	-1
 10338  01669E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10339  0166A4  A4D8               	btfss	status,2,c
 10340  0166A6  D791               	goto	u6460
 10341  0166A8                     u6480:
 10342                           
 10343                           ;stkvar	_quotient @ sp[(-9)+0]
 10344  0166A8  0EF7               	movlw	247
 10345  0166AA  24E1               	addwf	fsr1l,w,c
 10346  0166AC  6ED9               	movwf	fsr2l,c
 10347  0166AE  0EFF               	movlw	255
 10348  0166B0  20E2               	addwfc	fsr1h,w,c
 10349  0166B2  6EDA               	movwf	fsr2h,c
 10350                           
 10351                           ;stkvar	?___lodiv @ sp[(-9)+-8]
 10352  0166B4  0E08               	movlw	8
 10353  0166B6  6E35               	movwf	btemp^0,c
 10354  0166B8  0EEF               	movlw	-17
 10355  0166BA                     us649999:
 10356  0166BA  006F FF7B FFE3     	movff	postinc2,plusw1
 10357  0166C0  28E8               	incf	wreg,w,c
 10358  0166C2  2E35               	decfsz	btemp^0,f,c
 10359  0166C4  D7FA               	bra	us649999
 10360                           
 10361                           ; ___lodiv: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 10362  0166C6  0EF7               	movlw	247
 10363  0166C8  26E1               	addwf	fsr1l,f,c
 10364  0166CA  0EFF               	movlw	255
 10365  0166CC  22E2               	addwfc	fsr1h,f,c
 10366  0166CE  0012               	return		;funcret
 10367  0166D0                     __end_of___lodiv:
 10368                           	opt callstack 0
 10369                           
 10370 ;; *************** function _strncmp *****************
 10371 ;; Defined at:
 10372 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strncmp.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;  _l              2  [STACK] PTR const unsigned char 
 10375 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10376 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10377 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10378 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10379 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10380 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10381 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10382 ;;		 -> STR_1(17), 
 10383 ;;  _r              2  [STACK] PTR const unsigned char 
 10384 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10385 ;;		 -> STR_48(3), STR_44(3), 
 10386 ;;  n               2  [STACK] unsigned int 
 10387 ;; Auto vars:     Size  Location     Type
 10388 ;;  r               2  [STACK] PTR const unsigned char 
 10389 ;;		 -> STR_67(3), STR_63(3), STR_58(3), STR_53(3), 
 10390 ;;		 -> STR_48(3), STR_44(3), 
 10391 ;;  l               2  [STACK] PTR const unsigned char 
 10392 ;;		 -> ct(3), STR_32(3), STR_31(3), STR_30(19), 
 10393 ;;		 -> STR_29(19), STR_28(19), STR_27(19), STR_26(19), 
 10394 ;;		 -> STR_25(19), STR_24(24), STR_23(15), STR_22(15), 
 10395 ;;		 -> STR_21(15), STR_20(10), STR_19(10), STR_18(19), 
 10396 ;;		 -> STR_17(19), STR_14(3), STR_13(3), STR_12(3), 
 10397 ;;		 -> STR_11(18), STR_10(13), STR_9(13), STR_8(17), 
 10398 ;;		 -> STR_6(15), STR_5(17), STR_4(17), STR_2(15), 
 10399 ;;		 -> STR_1(17), 
 10400 ;; Return value:  Size  Location     Type
 10401 ;;                  2  [STACK] int 
 10402 ;; Registers used:
 10403 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tbl
      +ptrh, tblptru, prodl
 10404 ;; Tracked objects:
 10405 ;;		On entry : 0/4
 10406 ;;		On exit  : 0/0
 10407 ;;		Unchanged: 0/0
 10408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10413 ;;Total ram usage:        0 bytes
 10414 ;; Hardware stack levels used:    1
 10415 ;; Hardware stack levels required when called:    6
 10416 ;; This function calls:
 10417 ;;		Nothing
 10418 ;; This function is called by:
 10419 ;;		_vfpfcnvrt
 10420 ;; This function uses a reentrant model
 10421 ;;
 10422                           
 10423                           	psect	text43
 10424  015BC4                     __ptext43:
 10425                           	opt callstack 0
 10426  015BC4                     _strncmp:
 10427                           	opt callstack 0
 10428                           
 10429                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 10430  015BC4  52E6               	movf	postinc1,f,c
 10431  015BC6  52E6               	movf	postinc1,f,c
 10432  015BC8  52E6               	movf	postinc1,f,c
 10433  015BCA  52E6               	movf	postinc1,f,c
 10434                           
 10435                           ;stkvar	__l @ sp[(-4)+-2]
 10436                           
 10437                           ;incstack = 0
 10438  015BCC  0EFA               	movlw	-6
 10439  015BCE  006F FF8C  F03F    	movff	plusw1,btemp+10
 10440  015BD4  0EFB               	movlw	-5
 10441  015BD6  006F FF8C  F040    	movff	plusw1,btemp+11
 10442                           
 10443                           ;stkvar	_l @ sp[(-4)+2]
 10444  015BDC  0EFF               	movlw	-1
 10445  015BDE  0060  F103  FFE3   	movff	btemp+11,plusw1
 10446  015BE4  0EFE               	movlw	-2
 10447  015BE6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10448                           
 10449                           ;stkvar	__r @ sp[(-4)+-4]
 10450  015BEC  0EF8               	movlw	-8
 10451  015BEE  006F FF8C  F03F    	movff	plusw1,btemp+10
 10452  015BF4  0EF9               	movlw	-7
 10453  015BF6  006F FF8C  F040    	movff	plusw1,btemp+11
 10454                           
 10455                           ;stkvar	_r @ sp[(-4)+0]
 10456  015BFC  0EFD               	movlw	-3
 10457  015BFE  0060  F103  FFE3   	movff	btemp+11,plusw1
 10458  015C04  0EFC               	movlw	-4
 10459  015C06  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10460                           
 10461                           ;stkvar	_n @ sp[(-4)+-6]
 10462  015C0C  0EF6               	movlw	-10
 10463  015C0E  006F FF8C  F035    	movff	plusw1,btemp
 10464  015C14  0E01               	movlw	1
 10465  015C16  5E35               	subwf	btemp^0,f,c
 10466  015C18  0EF6               	movlw	-10
 10467  015C1A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10468  015C20  0EF7               	movlw	-9
 10469  015C22  006F FF8C  F035    	movff	plusw1,btemp
 10470  015C28  0E00               	movlw	0
 10471  015C2A  5A35               	subwfb	btemp^0,f,c
 10472  015C2C  0EF7               	movlw	-9
 10473  015C2E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10474  015C34  0EF6               	movlw	-10
 10475  015C36  28E3               	incf	plusw1,w,c
 10476  015C38  E13F               	bnz	l7717
 10477  015C3A  0EF7               	movlw	-9
 10478  015C3C  28E3               	incf	plusw1,w,c
 10479  015C3E  A4D8               	btfss	status,2,c
 10480  015C40  D03B               	goto	l7717
 10481  015C42  0E00               	movlw	0
 10482  015C44  6E35               	movwf	btemp^0,c
 10483  015C46  0E00               	movlw	0
 10484  015C48  6E36               	movwf	(btemp+1)^0,c
 10485  015C4A  D0C7               	goto	l2838
 10486  015C4C                     l7715:
 10487                           
 10488                           ;stkvar	_l @ sp[(-4)+2]
 10489  015C4C  0EFE               	movlw	-2
 10490  015C4E  50E3               	movf	plusw1,w,c
 10491  015C50  0F01               	addlw	1
 10492  015C52  6E35               	movwf	btemp^0,c
 10493  015C54  0EFE               	movlw	-2
 10494  015C56  0060  F0D7  FFE3   	movff	btemp,plusw1
 10495  015C5C  6A35               	clrf	btemp^0,c
 10496  015C5E  0EFF               	movlw	-1
 10497  015C60  50E3               	movf	plusw1,w,c
 10498  015C62  2035               	addwfc	btemp^0,w,c
 10499  015C64  6E35               	movwf	btemp^0,c
 10500  015C66  0EFF               	movlw	-1
 10501  015C68  0060  F0D7  FFE3   	movff	btemp,plusw1
 10502                           
 10503                           ;stkvar	_r @ sp[(-4)+0]
 10504  015C6E  0EFC               	movlw	-4
 10505  015C70  50E3               	movf	plusw1,w,c
 10506  015C72  0F01               	addlw	1
 10507  015C74  6E35               	movwf	btemp^0,c
 10508  015C76  0EFC               	movlw	-4
 10509  015C78  0060  F0D7  FFE3   	movff	btemp,plusw1
 10510  015C7E  6A35               	clrf	btemp^0,c
 10511  015C80  0EFD               	movlw	-3
 10512  015C82  50E3               	movf	plusw1,w,c
 10513  015C84  2035               	addwfc	btemp^0,w,c
 10514  015C86  6E35               	movwf	btemp^0,c
 10515  015C88  0EFD               	movlw	-3
 10516  015C8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 10517                           
 10518                           ;stkvar	_n @ sp[(-4)+-6]
 10519  015C90  0EF6               	movlw	-10
 10520  015C92  006F FF8C  F035    	movff	plusw1,btemp
 10521  015C98  0E01               	movlw	1
 10522  015C9A  5E35               	subwf	btemp^0,f,c
 10523  015C9C  0EF6               	movlw	-10
 10524  015C9E  0060  F0D7  FFE3   	movff	btemp,plusw1
 10525  015CA4  0EF7               	movlw	-9
 10526  015CA6  006F FF8C  F035    	movff	plusw1,btemp
 10527  015CAC  0E00               	movlw	0
 10528  015CAE  5A35               	subwfb	btemp^0,f,c
 10529  015CB0  0EF7               	movlw	-9
 10530  015CB2  0060  F0D7  FFE3   	movff	btemp,plusw1
 10531  015CB8                     l7717:
 10532                           
 10533                           ;stkvar	_l @ sp[(-4)+2]
 10534  015CB8  0EFE               	movlw	-2
 10535  015CBA  006F FF8F FFF6     	movff	plusw1,tblptrl
 10536  015CC0  0EFF               	movlw	-1
 10537  015CC2  006F FF8F FFF7     	movff	plusw1,tblptrh
 10538  015CC8  0E00               	movlw	low (__mediumconst shr (0+16))
 10539  015CCA  6EF8               	movwf	tblptru,c
 10540  015CCC  0E1F               	movlw	(high __ramtop+-1)
 10541  015CCE  64F7               	cpfsgt	tblptrh,c
 10542  015CD0  D003               	bra	u7717
 10543  015CD2  0008               	tblrd		*
 10544  015CD4  50F5               	movf	tablat,w,c
 10545  015CD6  D007               	bra	u7710
 10546  015CD8                     u7717:
 10547  015CD8  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10548  015CDE  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10549  015CE4  50EF               	movf	indf0,w,c
 10550  015CE6                     u7710:
 10551  015CE6  0900               	iorlw	0
 10552  015CE8  B4D8               	btfsc	status,2,c
 10553  015CEA  D04A               	goto	u7750
 10554                           
 10555                           ;stkvar	_r @ sp[(-4)+0]
 10556  015CEC  50E1               	movf	fsr1l,w,c
 10557  015CEE  0FFC               	addlw	-4
 10558  015CF0  6ED9               	movwf	fsr2l,c
 10559  015CF2  50E2               	movf	fsr1h,w,c
 10560  015CF4  6EDA               	movwf	fsr2h,c
 10561  015CF6  0EFF               	movlw	255
 10562  015CF8  22DA               	addwfc	fsr2h,f,c
 10563  015CFA  006F FF7B FFF6     	movff	postinc2,tblptrl
 10564  015D00  006F FF77 FFF7     	movff	postdec2,tblptrh
 10565  015D06                     	if	0	;tblptru may be non-zero
 10566  015D06                     	endif
 10567  015D06                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10568  015D06  0E00               	movlw	low (__mediumconst shr (0+16))
 10569  015D08  6EF8               	movwf	tblptru,c
 10570  015D0A                     	endif
 10571  015D0A  0008               	tblrd		*
 10572  015D0C  50F5               	movf	tablat,w,c
 10573  015D0E  0900               	iorlw	0
 10574  015D10  B4D8               	btfsc	status,2,c
 10575  015D12  D036               	goto	u7750
 10576                           
 10577                           ;stkvar	_n @ sp[(-4)+-6]
 10578  015D14  0EF6               	movlw	-10
 10579  015D16  006F FF8C  F035    	movff	plusw1,btemp
 10580  015D1C  0EF7               	movlw	-9
 10581  015D1E  50E3               	movf	plusw1,w,c
 10582  015D20  1035               	iorwf	btemp^0,w,c
 10583  015D22  B4D8               	btfsc	status,2,c
 10584  015D24  D02D               	goto	u7750
 10585                           
 10586                           ;stkvar	_r @ sp[(-4)+0]
 10587  015D26  50E1               	movf	fsr1l,w,c
 10588  015D28  0FFC               	addlw	-4
 10589  015D2A  6ED9               	movwf	fsr2l,c
 10590  015D2C  50E2               	movf	fsr1h,w,c
 10591  015D2E  6EDA               	movwf	fsr2h,c
 10592  015D30  0EFF               	movlw	255
 10593  015D32  22DA               	addwfc	fsr2h,f,c
 10594  015D34  006F FF7B FFF6     	movff	postinc2,tblptrl
 10595  015D3A  006F FF77 FFF7     	movff	postdec2,tblptrh
 10596  015D40                     	if	0	;tblptru may be non-zero
 10597  015D40                     	endif
 10598  015D40                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10599  015D40  0E00               	movlw	low (__mediumconst shr (0+16))
 10600  015D42  6EF8               	movwf	tblptru,c
 10601  015D44                     	endif
 10602  015D44  0008               	tblrd		*
 10603  015D46  006F FFD4  F040    	movff	tablat,btemp+11
 10604                           
 10605                           ;stkvar	_l @ sp[(-4)+2]
 10606  015D4C  0EFE               	movlw	-2
 10607  015D4E  006F FF8F FFF6     	movff	plusw1,tblptrl
 10608  015D54  0EFF               	movlw	-1
 10609  015D56  006F FF8F FFF7     	movff	plusw1,tblptrh
 10610  015D5C  0E00               	movlw	low (__mediumconst shr (0+16))
 10611  015D5E  6EF8               	movwf	tblptru,c
 10612  015D60  0E1F               	movlw	(high __ramtop+-1)
 10613  015D62  64F7               	cpfsgt	tblptrh,c
 10614  015D64  D003               	bra	u7757
 10615  015D66  0008               	tblrd		*
 10616  015D68  50F5               	movf	tablat,w,c
 10617  015D6A  D007               	bra	u7755
 10618  015D6C                     u7757:
 10619  015D6C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10620  015D72  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10621  015D78  50EF               	movf	indf0,w,c
 10622  015D7A                     u7755:
 10623  015D7A  1840               	xorwf	(btemp+11)^0,w,c
 10624  015D7C  B4D8               	btfsc	status,2,c
 10625  015D7E  D766               	goto	l7715
 10626  015D80                     u7750:
 10627                           
 10628                           ;stkvar	_l @ sp[(-4)+2]
 10629  015D80  0EFE               	movlw	-2
 10630  015D82  006F FF8F FFF6     	movff	plusw1,tblptrl
 10631  015D88  0EFF               	movlw	-1
 10632  015D8A  006F FF8F FFF7     	movff	plusw1,tblptrh
 10633  015D90  0E00               	movlw	low (__mediumconst shr (0+16))
 10634  015D92  6EF8               	movwf	tblptru,c
 10635  015D94  0E1F               	movlw	(high __ramtop+-1)
 10636  015D96  64F7               	cpfsgt	tblptrh,c
 10637  015D98  D003               	bra	u7767
 10638  015D9A  0008               	tblrd		*
 10639  015D9C  50F5               	movf	tablat,w,c
 10640  015D9E  D007               	bra	u7760
 10641  015DA0                     u7767:
 10642  015DA0  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10643  015DA6  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10644  015DAC  50EF               	movf	indf0,w,c
 10645  015DAE                     u7760:
 10646  015DAE  6E35               	movwf	btemp^0,c
 10647  015DB0  6A36               	clrf	(btemp+1)^0,c
 10648                           
 10649                           ;stkvar	_r @ sp[(-4)+0]
 10650  015DB2  50E1               	movf	fsr1l,w,c
 10651  015DB4  0FFC               	addlw	-4
 10652  015DB6  6ED9               	movwf	fsr2l,c
 10653  015DB8  50E2               	movf	fsr1h,w,c
 10654  015DBA  6EDA               	movwf	fsr2h,c
 10655  015DBC  0EFF               	movlw	255
 10656  015DBE  22DA               	addwfc	fsr2h,f,c
 10657  015DC0  006F FF7B FFF6     	movff	postinc2,tblptrl
 10658  015DC6  006F FF77 FFF7     	movff	postdec2,tblptrh
 10659  015DCC                     	if	0	;tblptru may be non-zero
 10660  015DCC                     	endif
 10661  015DCC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10662  015DCC  0E00               	movlw	low (__mediumconst shr (0+16))
 10663  015DCE  6EF8               	movwf	tblptru,c
 10664  015DD0                     	endif
 10665  015DD0  0008               	tblrd		*
 10666  015DD2  50F5               	movf	tablat,w,c
 10667  015DD4  5E35               	subwf	btemp^0,f,c
 10668  015DD6  0E00               	movlw	0
 10669  015DD8  5A36               	subwfb	(btemp+1)^0,f,c
 10670  015DDA                     l2838:
 10671                           
 10672                           ; _strncmp: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsi
      +                          ze = 6, vargsize = 0
 10673  015DDA  0EF6               	movlw	246
 10674  015DDC  26E1               	addwf	fsr1l,f,c
 10675  015DDE  0EFF               	movlw	255
 10676  015DE0  22E2               	addwfc	fsr1h,f,c
 10677  015DE2  0012               	return		;funcret
 10678  015DE4                     __end_of_strncmp:
 10679                           	opt callstack 0
 10680                           
 10681 ;; *************** function _stoa *****************
 10682 ;; Defined at:
 10683 ;;		line 546 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 10684 ;; Parameters:    Size  Location     Type
 10685 ;;  fp              2  [STACK] PTR struct _IO_FILE
 10686 ;;		 -> f(6), NULL(0), 
 10687 ;;  s               2  [STACK] PTR unsigned char 
 10688 ;;		 -> ?_printf(2), ?_sprintf(2), STR_16(9), STR_15(12), 
 10689 ;;		 -> D.lcd(216), D(218), T(144), STR_7(5), 
 10690 ;;		 -> STR_3(5), V(187), 
 10691 ;; Auto vars:     Size  Location     Type
 10692 ;;  nuls            7  [STACK] unsigned char [7]
 10693 ;;  l               2  [STACK] int 
 10694 ;;  p               2  [STACK] int 
 10695 ;;  cp              2  [STACK] PTR unsigned char 
 10696 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), STR_16(9), 
 10697 ;;		 -> STR_15(12), D.lcd(216), D(218), T(144), 
 10698 ;;		 -> STR_7(5), STR_3(5), V(187), 
 10699 ;;  w               2  [STACK] int 
 10700 ;;  i               2  [STACK] int 
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  2  [STACK] int 
 10703 ;; Registers used:
 10704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/4
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 10710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 10714 ;;Total ram usage:        0 bytes
 10715 ;; Hardware stack levels used:    1
 10716 ;; Hardware stack levels required when called:    9
 10717 ;; This function calls:
 10718 ;;		_fputc
 10719 ;;		_strlen
 10720 ;; This function is called by:
 10721 ;;		_vfpfcnvrt
 10722 ;; This function uses a reentrant model
 10723 ;;
 10724                           
 10725                           	psect	text44
 10726  0151D2                     __ptext44:
 10727                           	opt callstack 0
 10728  0151D2                     _stoa:
 10729                           	opt callstack 0
 10730                           
 10731                           ; autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 10732  0151D2  0E11               	movlw	17
 10733  0151D4  26E1               	addwf	fsr1l,f,c
 10734  0151D6  0E00               	movlw	0
 10735  0151D8  22E2               	addwfc	fsr1h,f,c
 10736                           
 10737                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 546: static int stoa(FILE *fp
      +                          , char *s);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 547: {;/opt/microch
      +                          ip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 548:     char *cp, nuls[] = "(null)";
 10738                           
 10739                           ;incstack = 0
 10740  0151DA  EE20  F0CF         	lfsr	2,stoa@F1166
 10741                           
 10742                           ;stkvar	_nuls @ sp[(-17)+0]
 10743  0151DE  0E07               	movlw	7
 10744  0151E0  6E35               	movwf	btemp^0,c
 10745  0151E2  0EEF               	movlw	-17
 10746  0151E4                     us982999:
 10747  0151E4  006F FF7B FFE3     	movff	postinc2,plusw1
 10748  0151EA  28E8               	incf	wreg,w,c
 10749  0151EC  2E35               	decfsz	btemp^0,f,c
 10750  0151EE  D7FA               	bra	us982999
 10751                           
 10752                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 549:     int i, l, p, w;;/opt
      +                          /microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 552:     cp = s;
 10753                           ;stkvar	_s @ sp[(-17)+-4]
 10754  0151F0  0EEB               	movlw	-21
 10755  0151F2  006F FF8C  F03F    	movff	plusw1,btemp+10
 10756  0151F8  0EEC               	movlw	-20
 10757  0151FA  006F FF8C  F040    	movff	plusw1,btemp+11
 10758                           
 10759                           ;stkvar	_cp @ sp[(-17)+11]
 10760  015200  0EFB               	movlw	-5
 10761  015202  0060  F103  FFE3   	movff	btemp+11,plusw1
 10762  015208  0EFA               	movlw	-6
 10763  01520A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10764                           
 10765                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 553:     if (!cp) {
 10766                           ;stkvar	_cp @ sp[(-17)+11]
 10767  015210  0EFA               	movlw	-6
 10768  015212  006F FF8C  F035    	movff	plusw1,btemp
 10769  015218  0EFB               	movlw	-5
 10770  01521A  50E3               	movf	plusw1,w,c
 10771  01521C  1035               	iorwf	btemp^0,w,c
 10772  01521E  A4D8               	btfss	status,2,c
 10773  015220  D00E               	goto	l9679
 10774                           
 10775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 554:         cp = nuls;
 10776                           ;stkvar	_nuls @ sp[(-17)+0]
 10777  015222  0EEF               	movlw	239
 10778  015224  24E1               	addwf	fsr1l,w,c
 10779  015226  6E3F               	movwf	(btemp+10)^0,c
 10780  015228  0EFF               	movlw	255
 10781  01522A  20E2               	addwfc	fsr1h,w,c
 10782  01522C  6E40               	movwf	(btemp+11)^0,c
 10783                           
 10784                           ;stkvar	_cp @ sp[(-17)+11]
 10785  01522E  0EFB               	movlw	-5
 10786  015230  0060  F103  FFE3   	movff	btemp+11,plusw1
 10787  015236  0EFA               	movlw	-6
 10788  015238  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 10789  01523E                     l9679:
 10790                           
 10791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 558:     l = strlen(cp);
 10792                           ;stkvar	_cp @ sp[(-17)+11]
 10793  01523E  0EFA               	movlw	-6
 10794  015240  006F FF8F FFE6     	movff	plusw1,postinc1
 10795  015246  006F FF8F FFE6     	movff	plusw1,postinc1
 10796  01524C  EC62  F0BC         	call	_strlen	;wreg free
 10797                           
 10798                           ;stkvar	_l @ sp[(-17)+7]
 10799  015250  0EF6               	movlw	-10
 10800  015252  0060  F0D7  FFE3   	movff	btemp,plusw1
 10801  015258  0EF7               	movlw	-9
 10802  01525A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 10803                           
 10804                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 559:     p = prec;
 10805                           ;stkvar	_p @ sp[(-17)+9]
 10806  015260  0EF8               	movlw	-8
 10807  015262  0060  F083  FFE3   	movff	_prec,plusw1
 10808  015268  0EF9               	movlw	-7
 10809  01526A  0060  F087  FFE3   	movff	_prec+1,plusw1
 10810                           
 10811                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 560:     l = (!(p < 0) && (p 
      +                          < l)) ? p : l;
 10812                           ;stkvar	_p @ sp[(-17)+9]
 10813  015270  0EF9               	movlw	-7
 10814  015272  BEE3               	btfsc	plusw1,7,c
 10815  015274  D023               	goto	l1889
 10816                           
 10817                           ;stkvar	_l @ sp[(-17)+7]
 10818                           ;stkvar	_p @ sp[(-17)+9]
 10819  015276  50E1               	movf	fsr1l,w,c
 10820  015278  0FF8               	addlw	-8
 10821  01527A  6ED9               	movwf	fsr2l,c
 10822  01527C  50E2               	movf	fsr1h,w,c
 10823  01527E  6EDA               	movwf	fsr2h,c
 10824  015280  0EFF               	movlw	255
 10825  015282  22DA               	addwfc	fsr2h,f,c
 10826  015284  0EF6               	movlw	-10
 10827  015286  50E3               	movf	plusw1,w,c
 10828  015288  5CDE               	subwf	postinc2,w,c
 10829  01528A  50DE               	movf	postinc2,w,c
 10830  01528C  0A80               	xorlw	128
 10831  01528E  6E35               	movwf	btemp^0,c
 10832  015290  0EF7               	movlw	-9
 10833  015292  50E3               	movf	plusw1,w,c
 10834  015294  0A80               	xorlw	128
 10835  015296  5835               	subwfb	btemp^0,w,c
 10836  015298  B0D8               	btfsc	status,0,c
 10837  01529A  D010               	goto	l1889
 10838                           
 10839                           ;stkvar	_p @ sp[(-17)+9]
 10840                           ;stkvar	_l @ sp[(-17)+7]
 10841  01529C  0EF8               	movlw	-8
 10842  01529E  006F FF8C  F035    	movff	plusw1,btemp
 10843  0152A4  0EF6               	movlw	-10
 10844  0152A6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10845  0152AC  0EF9               	movlw	-7
 10846  0152AE  006F FF8C  F035    	movff	plusw1,btemp
 10847  0152B4  0EF7               	movlw	-9
 10848  0152B6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10849  0152BC                     l1889:
 10850                           
 10851                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 561:     p = l;
 10852                           ;stkvar	_l @ sp[(-17)+7]
 10853                           ;stkvar	_p @ sp[(-17)+9]
 10854  0152BC  0EF6               	movlw	-10
 10855  0152BE  006F FF8C  F035    	movff	plusw1,btemp
 10856  0152C4  0EF8               	movlw	-8
 10857  0152C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10858  0152CC  0EF7               	movlw	-9
 10859  0152CE  006F FF8C  F035    	movff	plusw1,btemp
 10860  0152D4  0EF9               	movlw	-7
 10861  0152D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 10862                           
 10863                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 562:     w = width;
 10864                           ;stkvar	_w @ sp[(-17)+13]
 10865  0152DC  0EFC               	movlw	-4
 10866  0152DE  0060  F07B  FFE3   	movff	_width,plusw1
 10867  0152E4  0EFD               	movlw	-3
 10868  0152E6  0060  F07F  FFE3   	movff	_width+1,plusw1
 10869                           
 10870                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 565:     if (!(flags & (1 << 
      +                          0))) {
 10871  0152EC  A022               	btfss	_flags^0,0,c
 10872  0152EE  D01F               	goto	l9699
 10873  0152F0  D031               	goto	u9870
 10874  0152F2                     l9695:
 10875                           
 10876                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 567:             fputc(' ', f
      +                          p);
 10877                           ;stkvar	_fp @ sp[(-17)+-2]
 10878  0152F2  0EED               	movlw	-19
 10879  0152F4  006F FF8F FFE6     	movff	plusw1,postinc1
 10880  0152FA  006F FF8F FFE6     	movff	plusw1,postinc1
 10881  015300  0E20               	movlw	32
 10882  015302  6EE6               	movwf	postinc1,c
 10883  015304  0E00               	movlw	0
 10884  015306  6EE6               	movwf	postinc1,c
 10885  015308  ECB0  F0B6         	call	_fputc	;wreg free
 10886                           
 10887                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 568:             ++l;
 10888                           ;stkvar	_l @ sp[(-17)+7]
 10889  01530C  0EF6               	movlw	-10
 10890  01530E  50E3               	movf	plusw1,w,c
 10891  015310  0F01               	addlw	1
 10892  015312  6E35               	movwf	btemp^0,c
 10893  015314  0EF6               	movlw	-10
 10894  015316  0060  F0D7  FFE3   	movff	btemp,plusw1
 10895  01531C  6A35               	clrf	btemp^0,c
 10896  01531E  0EF7               	movlw	-9
 10897  015320  50E3               	movf	plusw1,w,c
 10898  015322  2035               	addwfc	btemp^0,w,c
 10899  015324  6E35               	movwf	btemp^0,c
 10900  015326  0EF7               	movlw	-9
 10901  015328  0060  F0D7  FFE3   	movff	btemp,plusw1
 10902  01532E                     l9699:
 10903                           
 10904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 566:         while (l < w) {
 10905                           ;stkvar	_w @ sp[(-17)+13]
 10906                           ;stkvar	_l @ sp[(-17)+7]
 10907  01532E  50E1               	movf	fsr1l,w,c
 10908  015330  0FF6               	addlw	-10
 10909  015332  6ED9               	movwf	fsr2l,c
 10910  015334  50E2               	movf	fsr1h,w,c
 10911  015336  6EDA               	movwf	fsr2h,c
 10912  015338  0EFF               	movlw	255
 10913  01533A  22DA               	addwfc	fsr2h,f,c
 10914  01533C  0EFC               	movlw	-4
 10915  01533E  50E3               	movf	plusw1,w,c
 10916  015340  5CDE               	subwf	postinc2,w,c
 10917  015342  50DE               	movf	postinc2,w,c
 10918  015344  0A80               	xorlw	128
 10919  015346  6E35               	movwf	btemp^0,c
 10920  015348  0EFD               	movlw	-3
 10921  01534A  50E3               	movf	plusw1,w,c
 10922  01534C  0A80               	xorlw	128
 10923  01534E  5835               	subwfb	btemp^0,w,c
 10924  015350  A0D8               	btfss	status,0,c
 10925  015352  D7CF               	goto	l9695
 10926  015354                     u9870:
 10927                           
 10928                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 573:     i = 0;
 10929                           ;stkvar	_i @ sp[(-17)+15]
 10930  015354  0EFE               	movlw	-2
 10931  015356  6AE3               	clrf	plusw1,c
 10932  015358  0EFF               	movlw	-1
 10933  01535A  6AE3               	clrf	plusw1,c
 10934                           
 10935                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 10936  01535C  D045               	goto	l9709
 10937  01535E                     l9703:
 10938                           
 10939                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 575:         fputc(*cp, fp);
 10940                           ;stkvar	_fp @ sp[(-17)+-2]
 10941  01535E  0EED               	movlw	-19
 10942  015360  006F FF8F FFE6     	movff	plusw1,postinc1
 10943  015366  006F FF8F FFE6     	movff	plusw1,postinc1
 10944                           
 10945                           ;stkvar	_cp @ sp[(-19)+11]
 10946  01536C  0EF8               	movlw	-8
 10947  01536E  006F FF8F FFF6     	movff	plusw1,tblptrl
 10948  015374  0EF9               	movlw	-7
 10949  015376  006F FF8F FFF7     	movff	plusw1,tblptrh
 10950  01537C  0E00               	movlw	low (__mediumconst shr (0+16))
 10951  01537E  6EF8               	movwf	tblptru,c
 10952  015380  0E1F               	movlw	(high __ramtop+-1)
 10953  015382  64F7               	cpfsgt	tblptrh,c
 10954  015384  D003               	bra	u9887
 10955  015386  0008               	tblrd		*
 10956  015388  50F5               	movf	tablat,w,c
 10957  01538A  D007               	bra	u9880
 10958  01538C                     u9887:
 10959  01538C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 10960  015392  006F FFDF FFEA     	movff	tblptrh,fsr0h
 10961  015398  50EF               	movf	indf0,w,c
 10962  01539A                     u9880:
 10963  01539A  6EE6               	movwf	postinc1,c
 10964  01539C  0E00               	movlw	0
 10965  01539E  6EE6               	movwf	postinc1,c
 10966  0153A0  ECB0  F0B6         	call	_fputc	;wreg free
 10967                           
 10968                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 576:         ++cp;
 10969                           ;stkvar	_cp @ sp[(-17)+11]
 10970  0153A4  0EFA               	movlw	-6
 10971  0153A6  50E3               	movf	plusw1,w,c
 10972  0153A8  0F01               	addlw	1
 10973  0153AA  6E35               	movwf	btemp^0,c
 10974  0153AC  0EFA               	movlw	-6
 10975  0153AE  0060  F0D7  FFE3   	movff	btemp,plusw1
 10976  0153B4  6A35               	clrf	btemp^0,c
 10977  0153B6  0EFB               	movlw	-5
 10978  0153B8  50E3               	movf	plusw1,w,c
 10979  0153BA  2035               	addwfc	btemp^0,w,c
 10980  0153BC  6E35               	movwf	btemp^0,c
 10981  0153BE  0EFB               	movlw	-5
 10982  0153C0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10983                           
 10984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 577:         ++i;
 10985                           ;stkvar	_i @ sp[(-17)+15]
 10986  0153C6  0EFE               	movlw	-2
 10987  0153C8  50E3               	movf	plusw1,w,c
 10988  0153CA  0F01               	addlw	1
 10989  0153CC  6E35               	movwf	btemp^0,c
 10990  0153CE  0EFE               	movlw	-2
 10991  0153D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 10992  0153D6  6A35               	clrf	btemp^0,c
 10993  0153D8  0EFF               	movlw	-1
 10994  0153DA  50E3               	movf	plusw1,w,c
 10995  0153DC  2035               	addwfc	btemp^0,w,c
 10996  0153DE  6E35               	movwf	btemp^0,c
 10997  0153E0  0EFF               	movlw	-1
 10998  0153E2  0060  F0D7  FFE3   	movff	btemp,plusw1
 10999  0153E8                     l9709:
 11000                           
 11001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 574:     while (i < p) {
 11002                           ;stkvar	_p @ sp[(-17)+9]
 11003                           ;stkvar	_i @ sp[(-17)+15]
 11004  0153E8  50E1               	movf	fsr1l,w,c
 11005  0153EA  0FFE               	addlw	-2
 11006  0153EC  6ED9               	movwf	fsr2l,c
 11007  0153EE  50E2               	movf	fsr1h,w,c
 11008  0153F0  6EDA               	movwf	fsr2h,c
 11009  0153F2  0EFF               	movlw	255
 11010  0153F4  22DA               	addwfc	fsr2h,f,c
 11011  0153F6  0EF8               	movlw	-8
 11012  0153F8  50E3               	movf	plusw1,w,c
 11013  0153FA  5CDE               	subwf	postinc2,w,c
 11014  0153FC  50DE               	movf	postinc2,w,c
 11015  0153FE  0A80               	xorlw	128
 11016  015400  6E35               	movwf	btemp^0,c
 11017  015402  0EF9               	movlw	-7
 11018  015404  50E3               	movf	plusw1,w,c
 11019  015406  0A80               	xorlw	128
 11020  015408  5835               	subwfb	btemp^0,w,c
 11021  01540A  A0D8               	btfss	status,0,c
 11022  01540C  D7A8               	goto	l9703
 11023                           
 11024                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 581:     if (flags & (1 << 0)
      +                          ) {
 11025  01540E  B022               	btfsc	_flags^0,0,c
 11026  015410  D01F               	goto	l9717
 11027  015412  D031               	goto	u9910
 11028  015414                     l9713:
 11029                           
 11030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 583:             fputc(' ', f
      +                          p);
 11031                           ;stkvar	_fp @ sp[(-17)+-2]
 11032  015414  0EED               	movlw	-19
 11033  015416  006F FF8F FFE6     	movff	plusw1,postinc1
 11034  01541C  006F FF8F FFE6     	movff	plusw1,postinc1
 11035  015422  0E20               	movlw	32
 11036  015424  6EE6               	movwf	postinc1,c
 11037  015426  0E00               	movlw	0
 11038  015428  6EE6               	movwf	postinc1,c
 11039  01542A  ECB0  F0B6         	call	_fputc	;wreg free
 11040                           
 11041                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 584:             ++l;
 11042                           ;stkvar	_l @ sp[(-17)+7]
 11043  01542E  0EF6               	movlw	-10
 11044  015430  50E3               	movf	plusw1,w,c
 11045  015432  0F01               	addlw	1
 11046  015434  6E35               	movwf	btemp^0,c
 11047  015436  0EF6               	movlw	-10
 11048  015438  0060  F0D7  FFE3   	movff	btemp,plusw1
 11049  01543E  6A35               	clrf	btemp^0,c
 11050  015440  0EF7               	movlw	-9
 11051  015442  50E3               	movf	plusw1,w,c
 11052  015444  2035               	addwfc	btemp^0,w,c
 11053  015446  6E35               	movwf	btemp^0,c
 11054  015448  0EF7               	movlw	-9
 11055  01544A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11056  015450                     l9717:
 11057                           
 11058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 582:         while (l < w) {
 11059                           ;stkvar	_w @ sp[(-17)+13]
 11060                           ;stkvar	_l @ sp[(-17)+7]
 11061  015450  50E1               	movf	fsr1l,w,c
 11062  015452  0FF6               	addlw	-10
 11063  015454  6ED9               	movwf	fsr2l,c
 11064  015456  50E2               	movf	fsr1h,w,c
 11065  015458  6EDA               	movwf	fsr2h,c
 11066  01545A  0EFF               	movlw	255
 11067  01545C  22DA               	addwfc	fsr2h,f,c
 11068  01545E  0EFC               	movlw	-4
 11069  015460  50E3               	movf	plusw1,w,c
 11070  015462  5CDE               	subwf	postinc2,w,c
 11071  015464  50DE               	movf	postinc2,w,c
 11072  015466  0A80               	xorlw	128
 11073  015468  6E35               	movwf	btemp^0,c
 11074  01546A  0EFD               	movlw	-3
 11075  01546C  50E3               	movf	plusw1,w,c
 11076  01546E  0A80               	xorlw	128
 11077  015470  5835               	subwfb	btemp^0,w,c
 11078  015472  A0D8               	btfss	status,0,c
 11079  015474  D7CF               	goto	l9713
 11080  015476                     u9910:
 11081                           
 11082                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 588:     return l;
 11083                           ;stkvar	_l @ sp[(-17)+7]
 11084  015476  0EF6               	movlw	-10
 11085  015478  006F FF8C  F035    	movff	plusw1,btemp
 11086  01547E  0EF7               	movlw	-9
 11087  015480  006F FF8C  F036    	movff	plusw1,btemp+1
 11088                           
 11089                           ; _stoa: autosize = 17, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 11090  015486  0EEB               	movlw	235
 11091  015488  26E1               	addwf	fsr1l,f,c
 11092  01548A  0EFF               	movlw	255
 11093  01548C  22E2               	addwfc	fsr1h,f,c
 11094  01548E  0012               	return		;funcret
 11095  015490                     __end_of_stoa:
 11096                           	opt callstack 0
 11097                           
 11098 ;; *************** function _efgtoa *****************
 11099 ;; Defined at:
 11100 ;;		line 319 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;  fp              2  [STACK] PTR struct _IO_FILE
 11103 ;;		 -> f(6), NULL(0), 
 11104 ;;  f               4  [STACK] PTR struct _IO_FILE
 11105 ;;  c               1  [STACK] unsigned char 
 11106 ;; Auto vars:     Size  Location     Type
 11107 ;;  u               4  [STACK] unsigned char 
 11108 ;;  g               4  [STACK] unsigned char 
 11109 ;;  l               4  [STACK] unsigned char 
 11110 ;;  h               4  [STACK] unsigned char 
 11111 ;;  ou              4  [STACK] unsigned char 
 11112 ;;  n               2  [STACK] int 
 11113 ;;  e               2  [STACK] int 
 11114 ;;  i               2  [STACK] int 
 11115 ;;  w               2  [STACK] int 
 11116 ;;  p               2  [STACK] int 
 11117 ;;  sign            2  [STACK] int 
 11118 ;;  d               2  [STACK] int 
 11119 ;;  ne              2  [STACK] int 
 11120 ;;  m               2  [STACK] int 
 11121 ;;  pp              2  [STACK] int 
 11122 ;;  t               2  [STACK] int 
 11123 ;;  mode            1  [STACK] unsigned char 
 11124 ;;  nmode           1  [STACK] unsigned char 
 11125 ;; Return value:  Size  Location     Type
 11126 ;;                  2  [STACK] int 
 11127 ;; Registers used:
 11128 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, tblptrh, tblptru, prodl, prodh
 11129 ;; Tracked objects:
 11130 ;;		On entry : 0/4
 11131 ;;		On exit  : 0/0
 11132 ;;		Unchanged: 0/0
 11133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 11134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 11138 ;;Total ram usage:        0 bytes
 11139 ;; Hardware stack levels used:    1
 11140 ;; Hardware stack levels required when called:   11
 11141 ;; This function calls:
 11142 ;;		___awdiv
 11143 ;;		___awmod
 11144 ;;		___fladd
 11145 ;;		___fldiv
 11146 ;;		___fleq
 11147 ;;		___flge
 11148 ;;		___flmul
 11149 ;;		___flneg
 11150 ;;		___flsub
 11151 ;;		___fltol
 11152 ;;		___fpclassifyf
 11153 ;;		_floorf
 11154 ;;		_isupper
 11155 ;;		_pad
 11156 ;;		_strcpy
 11157 ;;		_tolower
 11158 ;; This function is called by:
 11159 ;;		_vfpfcnvrt
 11160 ;; This function uses a reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text45
 11164  010000                     __ptext45:
 11165                           	opt callstack 0
 11166  010000                     _efgtoa:
 11167                           	opt callstack 0
 11168                           
 11169                           ; autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsize = 7 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 11170  010000  0E38               	movlw	56
 11171  010002  26E1               	addwf	fsr1l,f,c
 11172  010004  0E00               	movlw	0
 11173  010006  22E2               	addwfc	fsr1h,f,c
 11174                           
 11175                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 319: static int efgtoa(FILE *
      +                          fp, long double f, char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 320
      +                          : {;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 321:     char mode, nmode;
      +                          ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 322:     int d, e, i, m, n, n
      +                          e, p, pp, sign, t, w;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 323:    
      +                           long double g, h, l, ou, u;;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 3
      +                          26:     sign = 0;
 11176                           ;stkvar	_sign @ sp[(-56)+42]
 11177                           
 11178                           ;incstack = 0
 11179  010008  0EF2               	movlw	-14
 11180  01000A  6AE3               	clrf	plusw1,c
 11181  01000C  0EF3               	movlw	-13
 11182  01000E  6AE3               	clrf	plusw1,c
 11183                           
 11184                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 327:     g = f;
 11185                           ;stkvar	_f @ sp[(-56)+-6]
 11186  010010  0EC2               	movlw	-62
 11187  010012  006F FF8C  F03D    	movff	plusw1,btemp+8
 11188  010018  0EC3               	movlw	-61
 11189  01001A  006F FF8C  F03E    	movff	plusw1,btemp+9
 11190  010020  0EC4               	movlw	-60
 11191  010022  006F FF8C  F03F    	movff	plusw1,btemp+10
 11192  010028  0EC5               	movlw	-59
 11193  01002A  006F FF8C  F040    	movff	plusw1,btemp+11
 11194                           
 11195                           ;stkvar	_g @ sp[(-56)+16]
 11196  010030  0ED8               	movlw	-40
 11197  010032  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11198  010038  0ED9               	movlw	-39
 11199  01003A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11200  010040  0EDA               	movlw	-38
 11201  010042  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11202  010048  0EDB               	movlw	-37
 11203  01004A  0060  F103  FFE3   	movff	btemp+11,plusw1
 11204                           
 11205                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 328:     if (g < 0.0) {
 11206                           ;stkvar	_g @ sp[(-56)+16]
 11207  010050  0EDB               	movlw	-37
 11208  010052  AEE3               	btfss	plusw1,7,c
 11209  010054  D02B               	goto	l9377
 11210                           
 11211                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 329:         sign = 1;
 11212  010056  0E01               	movlw	1
 11213  010058  6E3F               	movwf	(btemp+10)^0,c
 11214  01005A  0E00               	movlw	0
 11215  01005C  6E40               	movwf	(btemp+11)^0,c
 11216                           
 11217                           ;stkvar	_sign @ sp[(-56)+42]
 11218  01005E  0EF2               	movlw	-14
 11219  010060  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11220  010066  0EF3               	movlw	-13
 11221  010068  0060  F103  FFE3   	movff	btemp+11,plusw1
 11222                           
 11223                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 330:         g = -g;
 11224                           ;stkvar	_g @ sp[(-56)+16]
 11225  01006E  0ED8               	movlw	-40
 11226  010070  006F FF8F FFE6     	movff	plusw1,postinc1
 11227  010076  006F FF8F FFE6     	movff	plusw1,postinc1
 11228  01007C  006F FF8F FFE6     	movff	plusw1,postinc1
 11229  010082  006F FF8F FFE6     	movff	plusw1,postinc1
 11230  010088  EC84  F0C1         	call	___flneg	;wreg free
 11231                           
 11232                           ;stkvar	_g @ sp[(-56)+16]
 11233  01008C  0ED8               	movlw	-40
 11234  01008E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11235  010094  0ED9               	movlw	-39
 11236  010096  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11237  01009C  0EDA               	movlw	-38
 11238  01009E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11239  0100A4  0EDB               	movlw	-37
 11240  0100A6  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11241  0100AC                     l9377:
 11242                           
 11243                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 334:     n = 0;
 11244                           ;stkvar	_n @ sp[(-56)+32]
 11245  0100AC  0EE8               	movlw	-24
 11246  0100AE  6AE3               	clrf	plusw1,c
 11247  0100B0  0EE9               	movlw	-23
 11248  0100B2  6AE3               	clrf	plusw1,c
 11249                           
 11250                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 335:     w = width;
 11251                           ;stkvar	_w @ sp[(-56)+38]
 11252  0100B4  0EEE               	movlw	-18
 11253  0100B6  0060  F07B  FFE3   	movff	_width,plusw1
 11254  0100BC  0EEF               	movlw	-17
 11255  0100BE  0060  F07F  FFE3   	movff	_width+1,plusw1
 11256                           
 11257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 336:     if (sign || (flags &
      +                           (1 << 2))) {
 11258                           ;stkvar	_sign @ sp[(-56)+42]
 11259  0100C4  0EF2               	movlw	-14
 11260  0100C6  006F FF8C  F035    	movff	plusw1,btemp
 11261  0100CC  0EF3               	movlw	-13
 11262  0100CE  50E3               	movf	plusw1,w,c
 11263  0100D0  1035               	iorwf	btemp^0,w,c
 11264  0100D2  A4D8               	btfss	status,2,c
 11265  0100D4  D002               	goto	u9320
 11266  0100D6  A422               	btfss	_flags^0,2,c
 11267  0100D8  D036               	goto	l9397
 11268  0100DA                     u9320:
 11269                           
 11270                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 337:         dbuf[n] = sign ?
      +                           '-' : '+';
 11271                           ;stkvar	_sign @ sp[(-56)+42]
 11272  0100DA  0EF2               	movlw	-14
 11273  0100DC  006F FF8C  F035    	movff	plusw1,btemp
 11274  0100E2  0EF3               	movlw	-13
 11275  0100E4  50E3               	movf	plusw1,w,c
 11276  0100E6  1035               	iorwf	btemp^0,w,c
 11277  0100E8  A4D8               	btfss	status,2,c
 11278  0100EA  D002               	goto	l9389
 11279  0100EC  0E2B               	movlw	43
 11280  0100EE  D001               	goto	L11
 11281  0100F0                     l9389:
 11282  0100F0  0E2D               	movlw	45
 11283  0100F2                     L11:
 11284  0100F2  6E3F               	movwf	(btemp+10)^0,c
 11285  0100F4  0E00               	movlw	0
 11286  0100F6  6E40               	movwf	(btemp+11)^0,c
 11287                           
 11288                           ;stkvar	_efgtoa$4202 @ sp[(-56)+10]
 11289  0100F8  0ED2               	movlw	-46
 11290  0100FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11291  010100  0ED3               	movlw	-45
 11292  010102  0060  F103  FFE3   	movff	btemp+11,plusw1
 11293                           
 11294                           ;stkvar	_efgtoa$4202 @ sp[(-56)+10]
 11295  010108  0ED2               	movlw	-46
 11296  01010A  006F FF8C  F2AC    	movff	plusw1,_dbuf
 11297                           
 11298                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 338:         ++n;
 11299                           ;stkvar	_n @ sp[(-56)+32]
 11300  010110  0EE8               	movlw	-24
 11301  010112  50E3               	movf	plusw1,w,c
 11302  010114  0F01               	addlw	1
 11303  010116  6E35               	movwf	btemp^0,c
 11304  010118  0EE8               	movlw	-24
 11305  01011A  0060  F0D7  FFE3   	movff	btemp,plusw1
 11306  010120  6A35               	clrf	btemp^0,c
 11307  010122  0EE9               	movlw	-23
 11308  010124  50E3               	movf	plusw1,w,c
 11309  010126  2035               	addwfc	btemp^0,w,c
 11310  010128  6E35               	movwf	btemp^0,c
 11311  01012A  0EE9               	movlw	-23
 11312  01012C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11313                           
 11314                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 339:         --w;
 11315                           ;stkvar	_w @ sp[(-56)+38]
 11316  010132  50E1               	movf	fsr1l,w,c
 11317  010134  0FEE               	addlw	-18
 11318  010136  6ED9               	movwf	fsr2l,c
 11319  010138  50E2               	movf	fsr1h,w,c
 11320  01013A  6EDA               	movwf	fsr2h,c
 11321  01013C  0EFF               	movlw	255
 11322  01013E  22DA               	addwfc	fsr2h,f,c
 11323  010140  06DE               	decf	postinc2,f,c
 11324  010142  0E00               	movlw	0
 11325  010144  5ADD               	subwfb	postdec2,f,c
 11326  010146                     l9397:
 11327                           
 11328                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 344:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11329                           ;stkvar	_g @ sp[(-56)+16]
 11330  010146  0ED8               	movlw	-40
 11331  010148  006F FF8F FFE6     	movff	plusw1,postinc1
 11332  01014E  006F FF8F FFE6     	movff	plusw1,postinc1
 11333  010154  006F FF8F FFE6     	movff	plusw1,postinc1
 11334  01015A  006F FF8F FFE6     	movff	plusw1,postinc1
 11335  010160  ECDD  F0B1         	call	___fpclassifyf	;wreg free
 11336  010164  0435               	decf	btemp^0,w,c
 11337  010166  1036               	iorwf	(btemp+1)^0,w,c
 11338  010168  A4D8               	btfss	status,2,c
 11339  01016A  D076               	goto	l9415
 11340  01016C  0EBF               	movlw	191
 11341  01016E  6E3F               	movwf	(btemp+10)^0,c
 11342  010170  0EFF               	movlw	255
 11343  010172  6E40               	movwf	(btemp+11)^0,c
 11344                           
 11345                           ;stkvar	_c @ sp[(-56)+-7]
 11346  010174  0EC1               	movlw	-63
 11347  010176  50E3               	movf	plusw1,w,c
 11348  010178  6E3D               	movwf	(btemp+8)^0,c
 11349  01017A  6A3E               	clrf	(btemp+9)^0,c
 11350  01017C  503F               	movf	(btemp+10)^0,w,c
 11351  01017E  263D               	addwf	(btemp+8)^0,f,c
 11352  010180  5040               	movf	(btemp+11)^0,w,c
 11353  010182  223E               	addwfc	(btemp+9)^0,f,c
 11354  010184  503E               	movf	(btemp+9)^0,w,c
 11355  010186  E106               	bnz	u9350
 11356  010188  0E1A               	movlw	26
 11357  01018A  5C3D               	subwf	(btemp+8)^0,w,c
 11358  01018C  B0D8               	btfsc	status,0,c
 11359  01018E  D002               	goto	u9350
 11360  010190  0E01               	movlw	1
 11361  010192  D001               	goto	u9360
 11362  010194                     u9350:
 11363  010194  0E00               	movlw	0
 11364  010196                     u9360:
 11365  010196  6E3F               	movwf	(btemp+10)^0,c
 11366  010198  6A40               	clrf	(btemp+11)^0,c
 11367                           
 11368                           ;stkvar	_efgtoa$4203 @ sp[(-56)+8]
 11369  01019A  0ED0               	movlw	-48
 11370  01019C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11371  0101A2  0ED1               	movlw	-47
 11372  0101A4  0060  F103  FFE3   	movff	btemp+11,plusw1
 11373                           
 11374                           ;stkvar	_efgtoa$4203 @ sp[(-56)+8]
 11375  0101AA  0ED0               	movlw	-48
 11376  0101AC  006F FF8C  F035    	movff	plusw1,btemp
 11377  0101B2  0ED1               	movlw	-47
 11378  0101B4  50E3               	movf	plusw1,w,c
 11379  0101B6  1035               	iorwf	btemp^0,w,c
 11380  0101B8  B4D8               	btfsc	status,2,c
 11381  0101BA  D017               	goto	l9407
 11382                           
 11383                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 345:             strcpy(&dbuf
      +                          [n], "INF");
 11384  0101BC  0ED7               	movlw	low STR_34
 11385  0101BE  6EE6               	movwf	postinc1,c
 11386  0101C0  0EFF               	movlw	high STR_34
 11387  0101C2  6EE6               	movwf	postinc1,c
 11388                           
 11389                           ;stkvar	_n @ sp[(-58)+32]
 11390  0101C4  0EAC               	movlw	low _dbuf
 11391  0101C6  6E3F               	movwf	(btemp+10)^0,c
 11392  0101C8  0E02               	movlw	high _dbuf
 11393  0101CA  6E40               	movwf	(btemp+11)^0,c
 11394  0101CC  0EE6               	movlw	-26
 11395  0101CE  50E3               	movf	plusw1,w,c
 11396  0101D0  263F               	addwf	(btemp+10)^0,f,c
 11397  0101D2  0EE7               	movlw	-25
 11398  0101D4  50E3               	movf	plusw1,w,c
 11399  0101D6  2240               	addwfc	(btemp+11)^0,f,c
 11400  0101D8  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11401  0101DE  0060  F103  FFE6   	movff	btemp+11,postinc1
 11402  0101E4  ECD9  F0B9         	call	_strcpy	;wreg free
 11403                           
 11404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 346:         } else {
 11405  0101E8  D016               	goto	l9409
 11406  0101EA                     l9407:
 11407                           
 11408                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 347:             strcpy(&dbuf
      +                          [n], "inf");
 11409  0101EA  0EDF               	movlw	low STR_35
 11410  0101EC  6EE6               	movwf	postinc1,c
 11411  0101EE  0EFF               	movlw	high STR_35
 11412  0101F0  6EE6               	movwf	postinc1,c
 11413                           
 11414                           ;stkvar	_n @ sp[(-58)+32]
 11415  0101F2  0EAC               	movlw	low _dbuf
 11416  0101F4  6E3F               	movwf	(btemp+10)^0,c
 11417  0101F6  0E02               	movlw	high _dbuf
 11418  0101F8  6E40               	movwf	(btemp+11)^0,c
 11419  0101FA  0EE6               	movlw	-26
 11420  0101FC  50E3               	movf	plusw1,w,c
 11421  0101FE  263F               	addwf	(btemp+10)^0,f,c
 11422  010200  0EE7               	movlw	-25
 11423  010202  50E3               	movf	plusw1,w,c
 11424  010204  2240               	addwfc	(btemp+11)^0,f,c
 11425  010206  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11426  01020C  0060  F103  FFE6   	movff	btemp+11,postinc1
 11427  010212  ECD9  F0B9         	call	_strcpy	;wreg free
 11428  010216                     l9409:
 11429                           
 11430                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 349:         w -= ((sizeof("i
      +                          nf")/sizeof("inf"[0]))-1);
 11431                           ;stkvar	_w @ sp[(-56)+38]
 11432  010216  50E1               	movf	fsr1l,w,c
 11433  010218  0FEE               	addlw	-18
 11434  01021A  6ED9               	movwf	fsr2l,c
 11435  01021C  50E2               	movf	fsr1h,w,c
 11436  01021E  6EDA               	movwf	fsr2h,c
 11437  010220  0EFF               	movlw	255
 11438  010222  22DA               	addwfc	fsr2h,f,c
 11439  010224  0EFD               	movlw	253
 11440  010226  26DE               	addwf	postinc2,f,c
 11441  010228  0EFF               	movlw	255
 11442  01022A  22DD               	addwfc	postdec2,f,c
 11443  01022C                     l9411:
 11444                           
 11445                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 350:         return pad(fp, &
      +                          dbuf[0], w);
 11446                           ;stkvar	_w @ sp[(-56)+38]
 11447  01022C  0EEE               	movlw	-18
 11448  01022E  006F FF8F FFE6     	movff	plusw1,postinc1
 11449  010234  006F FF8F FFE6     	movff	plusw1,postinc1
 11450  01023A  0EAC               	movlw	low _dbuf
 11451  01023C  6EE6               	movwf	postinc1,c
 11452  01023E  0E02               	movlw	high _dbuf
 11453  010240  6EE6               	movwf	postinc1,c
 11454                           
 11455                           ;stkvar	_fp @ sp[(-60)+-2]
 11456  010242  0EC2               	movlw	-62
 11457  010244  006F FF8F FFE6     	movff	plusw1,postinc1
 11458  01024A  006F FF8F FFE6     	movff	plusw1,postinc1
 11459  010250  ECCE  F0B7         	call	_pad	;wreg free
 11460  010254  EF1D  F089         	goto	l1807
 11461  010258                     l9415:
 11462                           
 11463                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 353:         if ((0 ? isupper
      +                          ((int)c) : ((unsigned)((int)c)-'A') < 26)) {
 11464                           ;stkvar	_g @ sp[(-56)+16]
 11465  010258  0ED8               	movlw	-40
 11466  01025A  006F FF8F FFE6     	movff	plusw1,postinc1
 11467  010260  006F FF8F FFE6     	movff	plusw1,postinc1
 11468  010266  006F FF8F FFE6     	movff	plusw1,postinc1
 11469  01026C  006F FF8F FFE6     	movff	plusw1,postinc1
 11470  010272  ECDD  F0B1         	call	___fpclassifyf	;wreg free
 11471  010276  5035               	movf	btemp^0,w,c
 11472  010278  1036               	iorwf	(btemp+1)^0,w,c
 11473  01027A  A4D8               	btfss	status,2,c
 11474  01027C  D056               	goto	l9433
 11475  01027E  0EBF               	movlw	191
 11476  010280  6E3F               	movwf	(btemp+10)^0,c
 11477  010282  0EFF               	movlw	255
 11478  010284  6E40               	movwf	(btemp+11)^0,c
 11479                           
 11480                           ;stkvar	_c @ sp[(-56)+-7]
 11481  010286  0EC1               	movlw	-63
 11482  010288  50E3               	movf	plusw1,w,c
 11483  01028A  6E3D               	movwf	(btemp+8)^0,c
 11484  01028C  6A3E               	clrf	(btemp+9)^0,c
 11485  01028E  503F               	movf	(btemp+10)^0,w,c
 11486  010290  263D               	addwf	(btemp+8)^0,f,c
 11487  010292  5040               	movf	(btemp+11)^0,w,c
 11488  010294  223E               	addwfc	(btemp+9)^0,f,c
 11489  010296  503E               	movf	(btemp+9)^0,w,c
 11490  010298  E106               	bnz	u9390
 11491  01029A  0E1A               	movlw	26
 11492  01029C  5C3D               	subwf	(btemp+8)^0,w,c
 11493  01029E  B0D8               	btfsc	status,0,c
 11494  0102A0  D002               	goto	u9390
 11495  0102A2  0E01               	movlw	1
 11496  0102A4  D001               	goto	u9400
 11497  0102A6                     u9390:
 11498  0102A6  0E00               	movlw	0
 11499  0102A8                     u9400:
 11500  0102A8  6E3F               	movwf	(btemp+10)^0,c
 11501  0102AA  6A40               	clrf	(btemp+11)^0,c
 11502                           
 11503                           ;stkvar	_efgtoa$4207 @ sp[(-56)+6]
 11504  0102AC  0ECE               	movlw	-50
 11505  0102AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11506  0102B4  0ECF               	movlw	-49
 11507  0102B6  0060  F103  FFE3   	movff	btemp+11,plusw1
 11508                           
 11509                           ;stkvar	_efgtoa$4207 @ sp[(-56)+6]
 11510  0102BC  0ECE               	movlw	-50
 11511  0102BE  006F FF8C  F035    	movff	plusw1,btemp
 11512  0102C4  0ECF               	movlw	-49
 11513  0102C6  50E3               	movf	plusw1,w,c
 11514  0102C8  1035               	iorwf	btemp^0,w,c
 11515  0102CA  B4D8               	btfsc	status,2,c
 11516  0102CC  D017               	goto	l9425
 11517                           
 11518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 354:             strcpy(&dbuf
      +                          [n], "NAN");
 11519  0102CE  0EDB               	movlw	low STR_38
 11520  0102D0  6EE6               	movwf	postinc1,c
 11521  0102D2  0EFF               	movlw	high STR_38
 11522  0102D4  6EE6               	movwf	postinc1,c
 11523                           
 11524                           ;stkvar	_n @ sp[(-58)+32]
 11525  0102D6  0EAC               	movlw	low _dbuf
 11526  0102D8  6E3F               	movwf	(btemp+10)^0,c
 11527  0102DA  0E02               	movlw	high _dbuf
 11528  0102DC  6E40               	movwf	(btemp+11)^0,c
 11529  0102DE  0EE6               	movlw	-26
 11530  0102E0  50E3               	movf	plusw1,w,c
 11531  0102E2  263F               	addwf	(btemp+10)^0,f,c
 11532  0102E4  0EE7               	movlw	-25
 11533  0102E6  50E3               	movf	plusw1,w,c
 11534  0102E8  2240               	addwfc	(btemp+11)^0,f,c
 11535  0102EA  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11536  0102F0  0060  F103  FFE6   	movff	btemp+11,postinc1
 11537  0102F6  ECD9  F0B9         	call	_strcpy	;wreg free
 11538                           
 11539                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 355:         } else {
 11540  0102FA  D78D               	goto	l9409
 11541  0102FC                     l9425:
 11542                           
 11543                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 356:             strcpy(&dbuf
      +                          [n], "nan");
 11544  0102FC  0EE3               	movlw	low STR_39
 11545  0102FE  6EE6               	movwf	postinc1,c
 11546  010300  0EFF               	movlw	high STR_39
 11547  010302  6EE6               	movwf	postinc1,c
 11548                           
 11549                           ;stkvar	_n @ sp[(-58)+32]
 11550  010304  0EAC               	movlw	low _dbuf
 11551  010306  6E3F               	movwf	(btemp+10)^0,c
 11552  010308  0E02               	movlw	high _dbuf
 11553  01030A  6E40               	movwf	(btemp+11)^0,c
 11554  01030C  0EE6               	movlw	-26
 11555  01030E  50E3               	movf	plusw1,w,c
 11556  010310  263F               	addwf	(btemp+10)^0,f,c
 11557  010312  0EE7               	movlw	-25
 11558  010314  50E3               	movf	plusw1,w,c
 11559  010316  2240               	addwfc	(btemp+11)^0,f,c
 11560  010318  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 11561  01031E  0060  F103  FFE6   	movff	btemp+11,postinc1
 11562  010324  ECD9  F0B9         	call	_strcpy	;wreg free
 11563  010328  D776               	goto	l9409
 11564  01032A                     l9433:
 11565                           
 11566                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 363:     u = 1.0;
 11567  01032A  0E00               	movlw	0
 11568  01032C  6E3D               	movwf	(btemp+8)^0,c
 11569  01032E  0E00               	movlw	0
 11570  010330  6E3E               	movwf	(btemp+9)^0,c
 11571  010332  0E80               	movlw	128
 11572  010334  6E3F               	movwf	(btemp+10)^0,c
 11573  010336  0E3F               	movlw	63
 11574  010338  6E40               	movwf	(btemp+11)^0,c
 11575                           
 11576                           ;stkvar	_u @ sp[(-56)+12]
 11577  01033A  0ED4               	movlw	-44
 11578  01033C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11579  010342  0ED5               	movlw	-43
 11580  010344  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11581  01034A  0ED6               	movlw	-42
 11582  01034C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11583  010352  0ED7               	movlw	-41
 11584  010354  0060  F103  FFE3   	movff	btemp+11,plusw1
 11585                           
 11586                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 364:     e = 0;
 11587                           ;stkvar	_e @ sp[(-56)+34]
 11588  01035A  0EEA               	movlw	-22
 11589  01035C  6AE3               	clrf	plusw1,c
 11590  01035E  0EEB               	movlw	-21
 11591  010360  6AE3               	clrf	plusw1,c
 11592                           
 11593                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 365:     if (!(g == 0.0)) {
 11594  010362  0E00               	movlw	0
 11595  010364  6EE6               	movwf	postinc1,c
 11596  010366  0E00               	movlw	0
 11597  010368  6EE6               	movwf	postinc1,c
 11598  01036A  0E00               	movlw	0
 11599  01036C  6EE6               	movwf	postinc1,c
 11600  01036E  0E00               	movlw	0
 11601  010370  6EE6               	movwf	postinc1,c
 11602                           
 11603                           ;stkvar	_g @ sp[(-60)+16]
 11604  010372  0ED4               	movlw	-44
 11605  010374  006F FF8F FFE6     	movff	plusw1,postinc1
 11606  01037A  006F FF8F FFE6     	movff	plusw1,postinc1
 11607  010380  006F FF8F FFE6     	movff	plusw1,postinc1
 11608  010386  006F FF8F FFE6     	movff	plusw1,postinc1
 11609  01038C  ECA6  F0BA         	call	___fleq	;wreg free
 11610  010390  A035               	btfss	btemp& (0+255),0,c
 11611  010392  D039               	goto	l9445
 11612  010394  D0BC               	goto	u9440
 11613  010396                     l9441:
 11614                           
 11615                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 367:             u = u*10.0;
 11616  010396  0E00               	movlw	0
 11617  010398  6EE6               	movwf	postinc1,c
 11618  01039A  0E00               	movlw	0
 11619  01039C  6EE6               	movwf	postinc1,c
 11620  01039E  0E20               	movlw	32
 11621  0103A0  6EE6               	movwf	postinc1,c
 11622  0103A2  0E41               	movlw	65
 11623  0103A4  6EE6               	movwf	postinc1,c
 11624                           
 11625                           ;stkvar	_u @ sp[(-60)+12]
 11626  0103A6  0ED0               	movlw	-48
 11627  0103A8  006F FF8F FFE6     	movff	plusw1,postinc1
 11628  0103AE  006F FF8F FFE6     	movff	plusw1,postinc1
 11629  0103B4  006F FF8F FFE6     	movff	plusw1,postinc1
 11630  0103BA  006F FF8F FFE6     	movff	plusw1,postinc1
 11631  0103C0  ECF8  F090         	call	___flmul	;wreg free
 11632                           
 11633                           ;stkvar	_u @ sp[(-56)+12]
 11634  0103C4  0ED4               	movlw	-44
 11635  0103C6  0060  F0D7  FFE3   	movff	btemp,plusw1
 11636  0103CC  0ED5               	movlw	-43
 11637  0103CE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11638  0103D4  0ED6               	movlw	-42
 11639  0103D6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11640  0103DC  0ED7               	movlw	-41
 11641  0103DE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11642                           
 11643                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 368:             ++e;
 11644                           ;stkvar	_e @ sp[(-56)+34]
 11645  0103E4  0EEA               	movlw	-22
 11646  0103E6  50E3               	movf	plusw1,w,c
 11647  0103E8  0F01               	addlw	1
 11648  0103EA  6E35               	movwf	btemp^0,c
 11649  0103EC  0EEA               	movlw	-22
 11650  0103EE  0060  F0D7  FFE3   	movff	btemp,plusw1
 11651  0103F4  6A35               	clrf	btemp^0,c
 11652  0103F6  0EEB               	movlw	-21
 11653  0103F8  50E3               	movf	plusw1,w,c
 11654  0103FA  2035               	addwfc	btemp^0,w,c
 11655  0103FC  6E35               	movwf	btemp^0,c
 11656  0103FE  0EEB               	movlw	-21
 11657  010400  0060  F0D7  FFE3   	movff	btemp,plusw1
 11658  010406                     l9445:
 11659                           
 11660                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 366:         while (!(g < (u*
      +                          10.0))) {
 11661  010406  0E00               	movlw	0
 11662  010408  6EE6               	movwf	postinc1,c
 11663  01040A  0E00               	movlw	0
 11664  01040C  6EE6               	movwf	postinc1,c
 11665  01040E  0E20               	movlw	32
 11666  010410  6EE6               	movwf	postinc1,c
 11667  010412  0E41               	movlw	65
 11668  010414  6EE6               	movwf	postinc1,c
 11669                           
 11670                           ;stkvar	_u @ sp[(-60)+12]
 11671  010416  0ED0               	movlw	-48
 11672  010418  006F FF8F FFE6     	movff	plusw1,postinc1
 11673  01041E  006F FF8F FFE6     	movff	plusw1,postinc1
 11674  010424  006F FF8F FFE6     	movff	plusw1,postinc1
 11675  01042A  006F FF8F FFE6     	movff	plusw1,postinc1
 11676  010430  ECF8  F090         	call	___flmul	;wreg free
 11677  010434  0060  F0D7  FFE6   	movff	btemp,postinc1
 11678  01043A  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 11679  010440  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 11680  010446  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 11681                           
 11682                           ;stkvar	_g @ sp[(-60)+16]
 11683  01044C  0ED4               	movlw	-44
 11684  01044E  006F FF8F FFE6     	movff	plusw1,postinc1
 11685  010454  006F FF8F FFE6     	movff	plusw1,postinc1
 11686  01045A  006F FF8F FFE6     	movff	plusw1,postinc1
 11687  010460  006F FF8F FFE6     	movff	plusw1,postinc1
 11688  010466  EC21  F0B4         	call	___flge	;wreg free
 11689  01046A  A035               	btfss	btemp& (0+255),0,c
 11690  01046C  D032               	goto	l9451
 11691  01046E  D793               	goto	l9441
 11692  010470                     l9447:
 11693                           
 11694                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 371:             u = u/10.0;
 11695  010470  0E00               	movlw	0
 11696  010472  6EE6               	movwf	postinc1,c
 11697  010474  0E00               	movlw	0
 11698  010476  6EE6               	movwf	postinc1,c
 11699  010478  0E20               	movlw	32
 11700  01047A  6EE6               	movwf	postinc1,c
 11701  01047C  0E41               	movlw	65
 11702  01047E  6EE6               	movwf	postinc1,c
 11703                           
 11704                           ;stkvar	_u @ sp[(-60)+12]
 11705  010480  0ED0               	movlw	-48
 11706  010482  006F FF8F FFE6     	movff	plusw1,postinc1
 11707  010488  006F FF8F FFE6     	movff	plusw1,postinc1
 11708  01048E  006F FF8F FFE6     	movff	plusw1,postinc1
 11709  010494  006F FF8F FFE6     	movff	plusw1,postinc1
 11710  01049A  ECEB  F098         	call	___fldiv	;wreg free
 11711                           
 11712                           ;stkvar	_u @ sp[(-56)+12]
 11713  01049E  0ED4               	movlw	-44
 11714  0104A0  0060  F0D7  FFE3   	movff	btemp,plusw1
 11715  0104A6  0ED5               	movlw	-43
 11716  0104A8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 11717  0104AE  0ED6               	movlw	-42
 11718  0104B0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 11719  0104B6  0ED7               	movlw	-41
 11720  0104B8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 11721                           
 11722                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 372:             --e;
 11723                           ;stkvar	_e @ sp[(-56)+34]
 11724  0104BE  50E1               	movf	fsr1l,w,c
 11725  0104C0  0FEA               	addlw	-22
 11726  0104C2  6ED9               	movwf	fsr2l,c
 11727  0104C4  50E2               	movf	fsr1h,w,c
 11728  0104C6  6EDA               	movwf	fsr2h,c
 11729  0104C8  0EFF               	movlw	255
 11730  0104CA  22DA               	addwfc	fsr2h,f,c
 11731  0104CC  06DE               	decf	postinc2,f,c
 11732  0104CE  0E00               	movlw	0
 11733  0104D0  5ADD               	subwfb	postdec2,f,c
 11734  0104D2                     l9451:
 11735                           
 11736                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 370:         while (g < u) {
 11737                           ;stkvar	_u @ sp[(-56)+12]
 11738  0104D2  0ED4               	movlw	-44
 11739  0104D4  006F FF8F FFE6     	movff	plusw1,postinc1
 11740  0104DA  006F FF8F FFE6     	movff	plusw1,postinc1
 11741  0104E0  006F FF8F FFE6     	movff	plusw1,postinc1
 11742  0104E6  006F FF8F FFE6     	movff	plusw1,postinc1
 11743                           
 11744                           ;stkvar	_g @ sp[(-60)+16]
 11745  0104EC  0ED4               	movlw	-44
 11746  0104EE  006F FF8F FFE6     	movff	plusw1,postinc1
 11747  0104F4  006F FF8F FFE6     	movff	plusw1,postinc1
 11748  0104FA  006F FF8F FFE6     	movff	plusw1,postinc1
 11749  010500  006F FF8F FFE6     	movff	plusw1,postinc1
 11750  010506  EC21  F0B4         	call	___flge	;wreg free
 11751  01050A  A035               	btfss	btemp& (0+255),0,c
 11752  01050C  D7B1               	goto	l9447
 11753  01050E                     u9440:
 11754                           
 11755                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 377:     mode = tolower((int)
      +                          c);
 11756                           ;stkvar	_c @ sp[(-56)+-7]
 11757  01050E  0EC1               	movlw	-63
 11758  010510  50E3               	movf	plusw1,w,c
 11759  010512  6EE6               	movwf	postinc1,c
 11760  010514  0E00               	movlw	0
 11761  010516  6EE6               	movwf	postinc1,c
 11762  010518  EC63  F0BE         	call	_tolower	;wreg free
 11763                           
 11764                           ;stkvar	_mode @ sp[(-56)+54]
 11765  01051C  0EFE               	movlw	-2
 11766  01051E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11767                           
 11768                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 378:     nmode = mode;
 11769                           ;stkvar	_mode @ sp[(-56)+54]
 11770                           ;stkvar	_nmode @ sp[(-56)+55]
 11771  010524  0EFE               	movlw	-2
 11772  010526  006F FF8C  F035    	movff	plusw1,btemp
 11773  01052C  0EFF               	movlw	-1
 11774  01052E  0060  F0D7  FFE3   	movff	btemp,plusw1
 11775                           
 11776                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 379:     if (mode == 'g') {
 11777                           ;stkvar	_mode @ sp[(-56)+54]
 11778  010534  0EFE               	movlw	-2
 11779  010536  006F FF8C  F035    	movff	plusw1,btemp
 11780  01053C  0E67               	movlw	103
 11781  01053E  1835               	xorwf	btemp^0,w,c
 11782  010540  A4D8               	btfss	status,2,c
 11783  010542  D025               	goto	l9469
 11784                           
 11785                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 380:   if (prec == 0) {
 11786  010544  5020               	movf	_prec^0,w,c
 11787  010546  1021               	iorwf	(_prec+1)^0,w,c
 11788  010548  A4D8               	btfss	status,2,c
 11789  01054A  D004               	goto	l9463
 11790                           
 11791                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 381:    prec = 1;
 11792  01054C  0E00               	movlw	0
 11793  01054E  6E21               	movwf	(_prec+1)^0,c
 11794  010550  0E01               	movlw	1
 11795  010552  6E20               	movwf	_prec^0,c
 11796  010554                     l9463:
 11797                           
 11798                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 383:         p = (0 < prec) ?
      +                           prec : 6;
 11799  010554  BE21               	btfsc	(_prec+1)^0,7,c
 11800  010556  D005               	goto	u9470
 11801  010558  5021               	movf	(_prec+1)^0,w,c
 11802  01055A  E110               	bnz	l9467
 11803  01055C  0420               	decf	_prec^0,w,c
 11804  01055E  B0D8               	btfsc	status,0,c
 11805  010560  D00D               	goto	l9467
 11806  010562                     u9470:
 11807  010562  0E06               	movlw	6
 11808  010564  6E3F               	movwf	(btemp+10)^0,c
 11809  010566  0E00               	movlw	0
 11810  010568  6E40               	movwf	(btemp+11)^0,c
 11811                           
 11812                           ;stkvar	_p @ sp[(-56)+40]
 11813  01056A  0EF0               	movlw	-16
 11814  01056C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11815  010572  0EF1               	movlw	-15
 11816  010574  0060  F103  FFE3   	movff	btemp+11,plusw1
 11817  01057A  D00C               	goto	l9475
 11818  01057C                     l9467:
 11819                           
 11820                           ;stkvar	_p @ sp[(-56)+40]
 11821  01057C  0EF0               	movlw	-16
 11822  01057E  0060  F083  FFE3   	movff	_prec,plusw1
 11823  010584  0EF1               	movlw	-15
 11824  010586  0060  F087  FFE3   	movff	_prec+1,plusw1
 11825  01058C  D003               	goto	l9475
 11826  01058E                     l9469:
 11827                           
 11828                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 385:         p = (prec < 0) ?
      +                           6 : prec;
 11829  01058E  AE21               	btfss	(_prec+1)^0,7,c
 11830  010590  D7F5               	goto	l9467
 11831  010592  D7E7               	goto	u9470
 11832  010594                     l9475:
 11833                           
 11834                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 389:     if (mode == 'g') {
 11835                           ;stkvar	_mode @ sp[(-56)+54]
 11836  010594  0EFE               	movlw	-2
 11837  010596  006F FF8C  F035    	movff	plusw1,btemp
 11838  01059C  0E67               	movlw	103
 11839  01059E  1835               	xorwf	btemp^0,w,c
 11840  0105A0  A4D8               	btfss	status,2,c
 11841  0105A2  D02F               	goto	l9485
 11842                           
 11843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 390:         if (!(e < -4) &&
      +                           !((p - 1) < e)) {
 11844                           ;stkvar	_e @ sp[(-56)+34]
 11845  0105A4  0EEB               	movlw	-21
 11846  0105A6  AEE3               	btfss	plusw1,7,c
 11847  0105A8  D00E               	goto	u9500
 11848  0105AA  0EEA               	movlw	-22
 11849  0105AC  006F FF8C  F035    	movff	plusw1,btemp
 11850  0105B2  0EFC               	movlw	252
 11851  0105B4  5E35               	subwf	btemp^0,f,c
 11852  0105B6  0EEB               	movlw	-21
 11853  0105B8  006F FF8C  F035    	movff	plusw1,btemp
 11854  0105BE  0EFF               	movlw	255
 11855  0105C0  5A35               	subwfb	btemp^0,f,c
 11856  0105C2  A0D8               	btfss	status,0,c
 11857  0105C4  D018               	goto	l9483
 11858  0105C6                     u9500:
 11859                           
 11860                           ;stkvar	_e @ sp[(-56)+34]
 11861                           ;stkvar	_p @ sp[(-56)+40]
 11862  0105C6  0EF0               	movlw	-16
 11863  0105C8  50E3               	movf	plusw1,w,c
 11864  0105CA  0FFF               	addlw	255
 11865  0105CC  6E3F               	movwf	(btemp+10)^0,c
 11866  0105CE  0EF1               	movlw	-15
 11867  0105D0  006F FF8C  F040    	movff	plusw1,btemp+11
 11868  0105D6  0EFF               	movlw	255
 11869  0105D8  2240               	addwfc	(btemp+11)^0,f,c
 11870  0105DA  0EEA               	movlw	-22
 11871  0105DC  50E3               	movf	plusw1,w,c
 11872  0105DE  5C3F               	subwf	(btemp+10)^0,w,c
 11873  0105E0  5040               	movf	(btemp+11)^0,w,c
 11874  0105E2  0A80               	xorlw	128
 11875  0105E4  6E35               	movwf	btemp^0,c
 11876  0105E6  0EEB               	movlw	-21
 11877  0105E8  50E3               	movf	plusw1,w,c
 11878  0105EA  0A80               	xorlw	128
 11879  0105EC  5835               	subwfb	btemp^0,w,c
 11880  0105EE  A0D8               	btfss	status,0,c
 11881  0105F0  D002               	goto	l9483
 11882                           
 11883                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 391:             nmode = 'f';
 11884  0105F2  0E66               	movlw	102
 11885  0105F4  D001               	goto	L12
 11886  0105F6                     l9483:
 11887                           
 11888                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 393:             nmode = 'e';
 11889  0105F6  0E65               	movlw	101
 11890  0105F8                     L12:
 11891  0105F8  6E40               	movwf	(btemp+11)^0,c
 11892                           
 11893                           ;stkvar	_nmode @ sp[(-56)+55]
 11894  0105FA  0EFF               	movlw	-1
 11895  0105FC  0060  F103  FFE3   	movff	btemp+11,plusw1
 11896  010602                     l9485:
 11897                           
 11898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 398:     m = p;
 11899                           ;stkvar	_p @ sp[(-56)+40]
 11900                           ;stkvar	_m @ sp[(-56)+48]
 11901  010602  0EF0               	movlw	-16
 11902  010604  006F FF8C  F035    	movff	plusw1,btemp
 11903  01060A  0EF8               	movlw	-8
 11904  01060C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11905  010612  0EF1               	movlw	-15
 11906  010614  006F FF8C  F035    	movff	plusw1,btemp
 11907  01061A  0EF9               	movlw	-7
 11908  01061C  0060  F0D7  FFE3   	movff	btemp,plusw1
 11909                           
 11910                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 399:     if (!(mode == 'g') |
      +                          | ((nmode == 'f') && (e < 0))) {
 11911                           ;stkvar	_mode @ sp[(-56)+54]
 11912  010622  0EFE               	movlw	-2
 11913  010624  006F FF8C  F035    	movff	plusw1,btemp
 11914  01062A  0E67               	movlw	103
 11915  01062C  1835               	xorwf	btemp^0,w,c
 11916  01062E  A4D8               	btfss	status,2,c
 11917  010630  D00B               	goto	u9540
 11918                           
 11919                           ;stkvar	_nmode @ sp[(-56)+55]
 11920  010632  0EFF               	movlw	-1
 11921  010634  006F FF8C  F035    	movff	plusw1,btemp
 11922  01063A  0E66               	movlw	102
 11923  01063C  1835               	xorwf	btemp^0,w,c
 11924  01063E  A4D8               	btfss	status,2,c
 11925  010640  D014               	goto	l1836
 11926                           
 11927                           ;stkvar	_e @ sp[(-56)+34]
 11928  010642  0EEB               	movlw	-21
 11929  010644  AEE3               	btfss	plusw1,7,c
 11930  010646  D011               	goto	l1836
 11931  010648                     u9540:
 11932                           
 11933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 400:         ++m;
 11934                           ;stkvar	_m @ sp[(-56)+48]
 11935  010648  0EF8               	movlw	-8
 11936  01064A  50E3               	movf	plusw1,w,c
 11937  01064C  0F01               	addlw	1
 11938  01064E  6E35               	movwf	btemp^0,c
 11939  010650  0EF8               	movlw	-8
 11940  010652  0060  F0D7  FFE3   	movff	btemp,plusw1
 11941  010658  6A35               	clrf	btemp^0,c
 11942  01065A  0EF9               	movlw	-7
 11943  01065C  50E3               	movf	plusw1,w,c
 11944  01065E  2035               	addwfc	btemp^0,w,c
 11945  010660  6E35               	movwf	btemp^0,c
 11946  010662  0EF9               	movlw	-7
 11947  010664  0060  F0D7  FFE3   	movff	btemp,plusw1
 11948  01066A                     l1836:
 11949                           
 11950                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 404:     if (nmode == 'f') {
 11951                           ;stkvar	_nmode @ sp[(-56)+55]
 11952  01066A  0EFF               	movlw	-1
 11953  01066C  006F FF8C  F035    	movff	plusw1,btemp
 11954  010672  0E66               	movlw	102
 11955  010674  1835               	xorwf	btemp^0,w,c
 11956  010676  A4D8               	btfss	status,2,c
 11957  010678  D03B               	goto	l9505
 11958                           
 11959                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 405:         if (e < 0) {
 11960                           ;stkvar	_e @ sp[(-56)+34]
 11961  01067A  0EEB               	movlw	-21
 11962  01067C  AEE3               	btfss	plusw1,7,c
 11963  01067E  D01C               	goto	l9501
 11964                           
 11965                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 406:             u = 1.0;
 11966  010680  0E00               	movlw	0
 11967  010682  6E3D               	movwf	(btemp+8)^0,c
 11968  010684  0E00               	movlw	0
 11969  010686  6E3E               	movwf	(btemp+9)^0,c
 11970  010688  0E80               	movlw	128
 11971  01068A  6E3F               	movwf	(btemp+10)^0,c
 11972  01068C  0E3F               	movlw	63
 11973  01068E  6E40               	movwf	(btemp+11)^0,c
 11974                           
 11975                           ;stkvar	_u @ sp[(-56)+12]
 11976  010690  0ED4               	movlw	-44
 11977  010692  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 11978  010698  0ED5               	movlw	-43
 11979  01069A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 11980  0106A0  0ED6               	movlw	-42
 11981  0106A2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 11982  0106A8  0ED7               	movlw	-41
 11983  0106AA  0060  F103  FFE3   	movff	btemp+11,plusw1
 11984                           
 11985                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 407:             e = 0;
 11986                           ;stkvar	_e @ sp[(-56)+34]
 11987  0106B0  0EEA               	movlw	-22
 11988  0106B2  6AE3               	clrf	plusw1,c
 11989  0106B4  0EEB               	movlw	-21
 11990  0106B6  6AE3               	clrf	plusw1,c
 11991  0106B8                     l9501:
 11992                           
 11993                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 409:         if (!(mode == 'g
      +                          ')) {
 11994                           ;stkvar	_mode @ sp[(-56)+54]
 11995  0106B8  0EFE               	movlw	-2
 11996  0106BA  006F FF8C  F035    	movff	plusw1,btemp
 11997  0106C0  0E67               	movlw	103
 11998  0106C2  1835               	xorwf	btemp^0,w,c
 11999  0106C4  B4D8               	btfsc	status,2,c
 12000  0106C6  D014               	goto	l9505
 12001                           
 12002                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 410:             m += e;
 12003                           ;stkvar	_e @ sp[(-56)+34]
 12004                           ;stkvar	_m @ sp[(-56)+48]
 12005  0106C8  0EF8               	movlw	-8
 12006  0106CA  50E3               	movf	plusw1,w,c
 12007  0106CC  6E35               	movwf	btemp^0,c
 12008  0106CE  0EEA               	movlw	-22
 12009  0106D0  50E3               	movf	plusw1,w,c
 12010  0106D2  2635               	addwf	btemp^0,f,c
 12011  0106D4  0EF8               	movlw	-8
 12012  0106D6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12013  0106DC  0EF9               	movlw	-7
 12014  0106DE  50E3               	movf	plusw1,w,c
 12015  0106E0  6E35               	movwf	btemp^0,c
 12016  0106E2  0EEB               	movlw	-21
 12017  0106E4  50E3               	movf	plusw1,w,c
 12018  0106E6  2235               	addwfc	btemp^0,f,c
 12019  0106E8  0EF9               	movlw	-7
 12020  0106EA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12021  0106F0                     l9505:
 12022                           
 12023                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 415:     i = 0;
 12024                           ;stkvar	_i @ sp[(-56)+36]
 12025  0106F0  0EEC               	movlw	-20
 12026  0106F2  6AE3               	clrf	plusw1,c
 12027  0106F4  0EED               	movlw	-19
 12028  0106F6  6AE3               	clrf	plusw1,c
 12029                           
 12030                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 416:     h = g;
 12031                           ;stkvar	_g @ sp[(-56)+16]
 12032  0106F8  0ED8               	movlw	-40
 12033  0106FA  006F FF8C  F03D    	movff	plusw1,btemp+8
 12034  010700  0ED9               	movlw	-39
 12035  010702  006F FF8C  F03E    	movff	plusw1,btemp+9
 12036  010708  0EDA               	movlw	-38
 12037  01070A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12038  010710  0EDB               	movlw	-37
 12039  010712  006F FF8C  F040    	movff	plusw1,btemp+11
 12040                           
 12041                           ;stkvar	_h @ sp[(-56)+24]
 12042  010718  0EE0               	movlw	-32
 12043  01071A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12044  010720  0EE1               	movlw	-31
 12045  010722  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12046  010728  0EE2               	movlw	-30
 12047  01072A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12048  010730  0EE3               	movlw	-29
 12049  010732  0060  F103  FFE3   	movff	btemp+11,plusw1
 12050                           
 12051                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 417:     ou = u;
 12052                           ;stkvar	_u @ sp[(-56)+12]
 12053  010738  0ED4               	movlw	-44
 12054  01073A  006F FF8C  F03D    	movff	plusw1,btemp+8
 12055  010740  0ED5               	movlw	-43
 12056  010742  006F FF8C  F03E    	movff	plusw1,btemp+9
 12057  010748  0ED6               	movlw	-42
 12058  01074A  006F FF8C  F03F    	movff	plusw1,btemp+10
 12059  010750  0ED7               	movlw	-41
 12060  010752  006F FF8C  F040    	movff	plusw1,btemp+11
 12061                           
 12062                           ;stkvar	_ou @ sp[(-56)+28]
 12063  010758  0EE4               	movlw	-28
 12064  01075A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12065  010760  0EE5               	movlw	-27
 12066  010762  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12067  010768  0EE6               	movlw	-26
 12068  01076A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12069  010770  0EE7               	movlw	-25
 12070  010772  0060  F103  FFE3   	movff	btemp+11,plusw1
 12071                           
 12072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12073  010778  D0D6               	goto	l9521
 12074  01077A                     l9511:
 12075                           
 12076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 419:         l = floorf(h/u);
 12077                           ;stkvar	_u @ sp[(-56)+12]
 12078  01077A  0ED4               	movlw	-44
 12079  01077C  006F FF8F FFE6     	movff	plusw1,postinc1
 12080  010782  006F FF8F FFE6     	movff	plusw1,postinc1
 12081  010788  006F FF8F FFE6     	movff	plusw1,postinc1
 12082  01078E  006F FF8F FFE6     	movff	plusw1,postinc1
 12083                           
 12084                           ;stkvar	_h @ sp[(-60)+24]
 12085  010794  0EDC               	movlw	-36
 12086  010796  006F FF8F FFE6     	movff	plusw1,postinc1
 12087  01079C  006F FF8F FFE6     	movff	plusw1,postinc1
 12088  0107A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12089  0107A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12090  0107AE  ECEB  F098         	call	___fldiv	;wreg free
 12091  0107B2  0060  F0D7  FFE6   	movff	btemp,postinc1
 12092  0107B8  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12093  0107BE  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12094  0107C4  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12095  0107CA  EC1D  F0A4         	call	_floorf	;wreg free
 12096                           
 12097                           ;stkvar	_l @ sp[(-56)+20]
 12098  0107CE  0EDC               	movlw	-36
 12099  0107D0  0060  F0D7  FFE3   	movff	btemp,plusw1
 12100  0107D6  0EDD               	movlw	-35
 12101  0107D8  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12102  0107DE  0EDE               	movlw	-34
 12103  0107E0  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12104  0107E6  0EDF               	movlw	-33
 12105  0107E8  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12106                           
 12107                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 420:         d = (int)l;
 12108                           ;stkvar	_l @ sp[(-56)+20]
 12109  0107EE  0EDC               	movlw	-36
 12110  0107F0  006F FF8F FFE6     	movff	plusw1,postinc1
 12111  0107F6  006F FF8F FFE6     	movff	plusw1,postinc1
 12112  0107FC  006F FF8F FFE6     	movff	plusw1,postinc1
 12113  010802  006F FF8F FFE6     	movff	plusw1,postinc1
 12114  010808  EC68  F0B3         	call	___fltol	;wreg free
 12115  01080C  0060  F0D4  F03F   	movff	btemp,btemp+10
 12116  010812  0060  F0D8  F040   	movff	btemp+1,btemp+11
 12117                           
 12118                           ;stkvar	_d @ sp[(-56)+44]
 12119  010818  0EF4               	movlw	-12
 12120  01081A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12121  010820  0EF5               	movlw	-11
 12122  010822  0060  F103  FFE3   	movff	btemp+11,plusw1
 12123                           
 12124                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 421:         h -= l*u;
 12125                           ;stkvar	_u @ sp[(-56)+12]
 12126  010828  0ED4               	movlw	-44
 12127  01082A  006F FF8F FFE6     	movff	plusw1,postinc1
 12128  010830  006F FF8F FFE6     	movff	plusw1,postinc1
 12129  010836  006F FF8F FFE6     	movff	plusw1,postinc1
 12130  01083C  006F FF8F FFE6     	movff	plusw1,postinc1
 12131                           
 12132                           ;stkvar	_l @ sp[(-60)+20]
 12133  010842  0ED8               	movlw	-40
 12134  010844  006F FF8F FFE6     	movff	plusw1,postinc1
 12135  01084A  006F FF8F FFE6     	movff	plusw1,postinc1
 12136  010850  006F FF8F FFE6     	movff	plusw1,postinc1
 12137  010856  006F FF8F FFE6     	movff	plusw1,postinc1
 12138  01085C  ECF8  F090         	call	___flmul	;wreg free
 12139  010860  0060  F0D7  FFE6   	movff	btemp,postinc1
 12140  010866  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12141  01086C  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12142  010872  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12143                           
 12144                           ;stkvar	_h @ sp[(-60)+24]
 12145  010878  0EDC               	movlw	-36
 12146  01087A  006F FF8F FFE6     	movff	plusw1,postinc1
 12147  010880  006F FF8F FFE6     	movff	plusw1,postinc1
 12148  010886  006F FF8F FFE6     	movff	plusw1,postinc1
 12149  01088C  006F FF8F FFE6     	movff	plusw1,postinc1
 12150  010892  ECA8  F0C1         	call	___flsub	;wreg free
 12151                           
 12152                           ;stkvar	_h @ sp[(-56)+24]
 12153  010896  0EE0               	movlw	-32
 12154  010898  0060  F0D7  FFE3   	movff	btemp,plusw1
 12155  01089E  0EE1               	movlw	-31
 12156  0108A0  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12157  0108A6  0EE2               	movlw	-30
 12158  0108A8  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12159  0108AE  0EE3               	movlw	-29
 12160  0108B0  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12161                           
 12162                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 422:         u = u/10.0;
 12163  0108B6  0E00               	movlw	0
 12164  0108B8  6EE6               	movwf	postinc1,c
 12165  0108BA  0E00               	movlw	0
 12166  0108BC  6EE6               	movwf	postinc1,c
 12167  0108BE  0E20               	movlw	32
 12168  0108C0  6EE6               	movwf	postinc1,c
 12169  0108C2  0E41               	movlw	65
 12170  0108C4  6EE6               	movwf	postinc1,c
 12171                           
 12172                           ;stkvar	_u @ sp[(-60)+12]
 12173  0108C6  0ED0               	movlw	-48
 12174  0108C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12175  0108CE  006F FF8F FFE6     	movff	plusw1,postinc1
 12176  0108D4  006F FF8F FFE6     	movff	plusw1,postinc1
 12177  0108DA  006F FF8F FFE6     	movff	plusw1,postinc1
 12178  0108E0  ECEB  F098         	call	___fldiv	;wreg free
 12179                           
 12180                           ;stkvar	_u @ sp[(-56)+12]
 12181  0108E4  0ED4               	movlw	-44
 12182  0108E6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12183  0108EC  0ED5               	movlw	-43
 12184  0108EE  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12185  0108F4  0ED6               	movlw	-42
 12186  0108F6  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12187  0108FC  0ED7               	movlw	-41
 12188  0108FE  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12189                           
 12190                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 423:         ++i;
 12191                           ;stkvar	_i @ sp[(-56)+36]
 12192  010904  0EEC               	movlw	-20
 12193  010906  50E3               	movf	plusw1,w,c
 12194  010908  0F01               	addlw	1
 12195  01090A  6E35               	movwf	btemp^0,c
 12196  01090C  0EEC               	movlw	-20
 12197  01090E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12198  010914  6A35               	clrf	btemp^0,c
 12199  010916  0EED               	movlw	-19
 12200  010918  50E3               	movf	plusw1,w,c
 12201  01091A  2035               	addwfc	btemp^0,w,c
 12202  01091C  6E35               	movwf	btemp^0,c
 12203  01091E  0EED               	movlw	-19
 12204  010920  0060  F0D7  FFE3   	movff	btemp,plusw1
 12205  010926                     l9521:
 12206                           
 12207                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 418:     while (i < m) {
 12208                           ;stkvar	_m @ sp[(-56)+48]
 12209                           ;stkvar	_i @ sp[(-56)+36]
 12210  010926  50E1               	movf	fsr1l,w,c
 12211  010928  0FEC               	addlw	-20
 12212  01092A  6ED9               	movwf	fsr2l,c
 12213  01092C  50E2               	movf	fsr1h,w,c
 12214  01092E  6EDA               	movwf	fsr2h,c
 12215  010930  0EFF               	movlw	255
 12216  010932  22DA               	addwfc	fsr2h,f,c
 12217  010934  0EF8               	movlw	-8
 12218  010936  50E3               	movf	plusw1,w,c
 12219  010938  5CDE               	subwf	postinc2,w,c
 12220  01093A  50DE               	movf	postinc2,w,c
 12221  01093C  0A80               	xorlw	128
 12222  01093E  6E35               	movwf	btemp^0,c
 12223  010940  0EF9               	movlw	-7
 12224  010942  50E3               	movf	plusw1,w,c
 12225  010944  0A80               	xorlw	128
 12226  010946  5835               	subwfb	btemp^0,w,c
 12227  010948  A0D8               	btfss	status,0,c
 12228  01094A  D717               	goto	l9511
 12229                           
 12230                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 427:     l = u*5.0;
 12231  01094C  0E00               	movlw	0
 12232  01094E  6EE6               	movwf	postinc1,c
 12233  010950  0E00               	movlw	0
 12234  010952  6EE6               	movwf	postinc1,c
 12235  010954  0EA0               	movlw	160
 12236  010956  6EE6               	movwf	postinc1,c
 12237  010958  0E40               	movlw	64
 12238  01095A  6EE6               	movwf	postinc1,c
 12239                           
 12240                           ;stkvar	_u @ sp[(-60)+12]
 12241  01095C  0ED0               	movlw	-48
 12242  01095E  006F FF8F FFE6     	movff	plusw1,postinc1
 12243  010964  006F FF8F FFE6     	movff	plusw1,postinc1
 12244  01096A  006F FF8F FFE6     	movff	plusw1,postinc1
 12245  010970  006F FF8F FFE6     	movff	plusw1,postinc1
 12246  010976  ECF8  F090         	call	___flmul	;wreg free
 12247                           
 12248                           ;stkvar	_l @ sp[(-56)+20]
 12249  01097A  0EDC               	movlw	-36
 12250  01097C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12251  010982  0EDD               	movlw	-35
 12252  010984  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12253  01098A  0EDE               	movlw	-34
 12254  01098C  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12255  010992  0EDF               	movlw	-33
 12256  010994  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12257                           
 12258                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 428:     if (h < l) {
 12259                           ;stkvar	_l @ sp[(-56)+20]
 12260  01099A  0EDC               	movlw	-36
 12261  01099C  006F FF8F FFE6     	movff	plusw1,postinc1
 12262  0109A2  006F FF8F FFE6     	movff	plusw1,postinc1
 12263  0109A8  006F FF8F FFE6     	movff	plusw1,postinc1
 12264  0109AE  006F FF8F FFE6     	movff	plusw1,postinc1
 12265                           
 12266                           ;stkvar	_h @ sp[(-60)+24]
 12267  0109B4  0EDC               	movlw	-36
 12268  0109B6  006F FF8F FFE6     	movff	plusw1,postinc1
 12269  0109BC  006F FF8F FFE6     	movff	plusw1,postinc1
 12270  0109C2  006F FF8F FFE6     	movff	plusw1,postinc1
 12271  0109C8  006F FF8F FFE6     	movff	plusw1,postinc1
 12272  0109CE  EC21  F0B4         	call	___flge	;wreg free
 12273  0109D2  A035               	btfss	btemp& (0+255),0,c
 12274  0109D4  D021               	goto	u9610
 12275                           
 12276                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 432:         if ((h == l) && 
      +                          !(d % 2)) {
 12277                           ;stkvar	_l @ sp[(-56)+20]
 12278                           
 12279                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 430:     } else {
 12280                           
 12281                           ;stkvar	_l @ sp[(-56)+20]
 12282                           
 12283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 429:         l = 0.0;
 12284  0109D6  0EDC               	movlw	-36
 12285  0109D8  006F FF8F FFE6     	movff	plusw1,postinc1
 12286  0109DE  006F FF8F FFE6     	movff	plusw1,postinc1
 12287  0109E4  006F FF8F FFE6     	movff	plusw1,postinc1
 12288  0109EA  006F FF8F FFE6     	movff	plusw1,postinc1
 12289                           
 12290                           ;stkvar	_h @ sp[(-60)+24]
 12291  0109F0  0EDC               	movlw	-36
 12292  0109F2  006F FF8F FFE6     	movff	plusw1,postinc1
 12293  0109F8  006F FF8F FFE6     	movff	plusw1,postinc1
 12294  0109FE  006F FF8F FFE6     	movff	plusw1,postinc1
 12295  010A04  006F FF8F FFE6     	movff	plusw1,postinc1
 12296  010A0A  ECA6  F0BA         	call	___fleq	;wreg free
 12297  010A0E  A035               	btfss	btemp& (0+255),0,c
 12298  010A10  D01B               	goto	l9535
 12299                           
 12300                           ;stkvar	_d @ sp[(-56)+44]
 12301  010A12  0EF4               	movlw	-12
 12302  010A14  B0E3               	btfsc	plusw1,0,c
 12303  010A16  D018               	goto	l9535
 12304  010A18                     u9610:
 12305                           
 12306                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 433:             l = 0.0;
 12307  010A18  0E00               	movlw	0
 12308  010A1A  6E3D               	movwf	(btemp+8)^0,c
 12309  010A1C  0E00               	movlw	0
 12310  010A1E  6E3E               	movwf	(btemp+9)^0,c
 12311  010A20  0E00               	movlw	0
 12312  010A22  6E3F               	movwf	(btemp+10)^0,c
 12313  010A24  0E00               	movlw	0
 12314  010A26  6E40               	movwf	(btemp+11)^0,c
 12315                           
 12316                           ;stkvar	_l @ sp[(-56)+20]
 12317  010A28  0EDC               	movlw	-36
 12318  010A2A  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12319  010A30  0EDD               	movlw	-35
 12320  010A32  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12321  010A38  0EDE               	movlw	-34
 12322  010A3A  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12323  010A40  0EDF               	movlw	-33
 12324  010A42  0060  F103  FFE3   	movff	btemp+11,plusw1
 12325  010A48                     l9535:
 12326                           
 12327                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 438:     h = g + l;
 12328                           ;stkvar	_l @ sp[(-56)+20]
 12329  010A48  0EDC               	movlw	-36
 12330  010A4A  006F FF8F FFE6     	movff	plusw1,postinc1
 12331  010A50  006F FF8F FFE6     	movff	plusw1,postinc1
 12332  010A56  006F FF8F FFE6     	movff	plusw1,postinc1
 12333  010A5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12334                           
 12335                           ;stkvar	_g @ sp[(-60)+16]
 12336  010A62  0ED4               	movlw	-44
 12337  010A64  006F FF8F FFE6     	movff	plusw1,postinc1
 12338  010A6A  006F FF8F FFE6     	movff	plusw1,postinc1
 12339  010A70  006F FF8F FFE6     	movff	plusw1,postinc1
 12340  010A76  006F FF8F FFE6     	movff	plusw1,postinc1
 12341  010A7C  EC0D  F095         	call	___fladd	;wreg free
 12342                           
 12343                           ;stkvar	_h @ sp[(-56)+24]
 12344  010A80  0EE0               	movlw	-32
 12345  010A82  0060  F0D7  FFE3   	movff	btemp,plusw1
 12346  010A88  0EE1               	movlw	-31
 12347  010A8A  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12348  010A90  0EE2               	movlw	-30
 12349  010A92  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12350  010A98  0EE3               	movlw	-29
 12351  010A9A  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12352                           
 12353                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 441:     u = ou;
 12354                           ;stkvar	_ou @ sp[(-56)+28]
 12355  010AA0  0EE4               	movlw	-28
 12356  010AA2  006F FF8C  F03D    	movff	plusw1,btemp+8
 12357  010AA8  0EE5               	movlw	-27
 12358  010AAA  006F FF8C  F03E    	movff	plusw1,btemp+9
 12359  010AB0  0EE6               	movlw	-26
 12360  010AB2  006F FF8C  F03F    	movff	plusw1,btemp+10
 12361  010AB8  0EE7               	movlw	-25
 12362  010ABA  006F FF8C  F040    	movff	plusw1,btemp+11
 12363                           
 12364                           ;stkvar	_u @ sp[(-56)+12]
 12365  010AC0  0ED4               	movlw	-44
 12366  010AC2  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 12367  010AC8  0ED5               	movlw	-43
 12368  010ACA  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 12369  010AD0  0ED6               	movlw	-42
 12370  010AD2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12371  010AD8  0ED7               	movlw	-41
 12372  010ADA  0060  F103  FFE3   	movff	btemp+11,plusw1
 12373                           
 12374                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 442:     ne = (nmode == 'e') 
      +                          ? 0 : e;
 12375                           ;stkvar	_nmode @ sp[(-56)+55]
 12376  010AE0  0EFF               	movlw	-1
 12377  010AE2  006F FF8C  F035    	movff	plusw1,btemp
 12378  010AE8  0E65               	movlw	101
 12379  010AEA  1835               	xorwf	btemp^0,w,c
 12380  010AEC  B4D8               	btfsc	status,2,c
 12381  010AEE  D011               	goto	l9543
 12382                           
 12383                           ;stkvar	_e @ sp[(-56)+34]
 12384                           ;stkvar	_ne @ sp[(-56)+46]
 12385  010AF0  0EEA               	movlw	-22
 12386  010AF2  006F FF8C  F035    	movff	plusw1,btemp
 12387  010AF8  0EF6               	movlw	-10
 12388  010AFA  0060  F0D7  FFE3   	movff	btemp,plusw1
 12389  010B00  0EEB               	movlw	-21
 12390  010B02  006F FF8C  F035    	movff	plusw1,btemp
 12391  010B08  0EF7               	movlw	-9
 12392  010B0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12393  010B10  D004               	goto	l1851
 12394  010B12                     l9543:
 12395                           
 12396                           ;stkvar	_ne @ sp[(-56)+46]
 12397  010B12  0EF6               	movlw	-10
 12398  010B14  6AE3               	clrf	plusw1,c
 12399  010B16  0EF7               	movlw	-9
 12400  010B18  6AE3               	clrf	plusw1,c
 12401  010B1A                     l1851:
 12402                           
 12403                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 443:     pp = 0;
 12404                           ;stkvar	_pp @ sp[(-56)+50]
 12405  010B1A  0EFA               	movlw	-6
 12406  010B1C  6AE3               	clrf	plusw1,c
 12407  010B1E  0EFB               	movlw	-5
 12408  010B20  6AE3               	clrf	plusw1,c
 12409                           
 12410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 444:     t = 0;
 12411                           ;stkvar	_t @ sp[(-56)+52]
 12412  010B22  0EFC               	movlw	-4
 12413  010B24  6AE3               	clrf	plusw1,c
 12414  010B26  0EFD               	movlw	-3
 12415  010B28  6AE3               	clrf	plusw1,c
 12416                           
 12417                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 445:     i = 0;
 12418                           ;stkvar	_i @ sp[(-56)+36]
 12419  010B2A  0EEC               	movlw	-20
 12420  010B2C  6AE3               	clrf	plusw1,c
 12421  010B2E  0EED               	movlw	-19
 12422  010B30  6AE3               	clrf	plusw1,c
 12423                           
 12424                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12425  010B32  D1B7               	goto	l9595
 12426  010B34                     l9545:
 12427                           
 12428                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 447:         l = floorf(h/u);
 12429                           ;stkvar	_u @ sp[(-56)+12]
 12430  010B34  0ED4               	movlw	-44
 12431  010B36  006F FF8F FFE6     	movff	plusw1,postinc1
 12432  010B3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12433  010B42  006F FF8F FFE6     	movff	plusw1,postinc1
 12434  010B48  006F FF8F FFE6     	movff	plusw1,postinc1
 12435                           
 12436                           ;stkvar	_h @ sp[(-60)+24]
 12437  010B4E  0EDC               	movlw	-36
 12438  010B50  006F FF8F FFE6     	movff	plusw1,postinc1
 12439  010B56  006F FF8F FFE6     	movff	plusw1,postinc1
 12440  010B5C  006F FF8F FFE6     	movff	plusw1,postinc1
 12441  010B62  006F FF8F FFE6     	movff	plusw1,postinc1
 12442  010B68  ECEB  F098         	call	___fldiv	;wreg free
 12443  010B6C  0060  F0D7  FFE6   	movff	btemp,postinc1
 12444  010B72  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12445  010B78  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12446  010B7E  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12447  010B84  EC1D  F0A4         	call	_floorf	;wreg free
 12448                           
 12449                           ;stkvar	_l @ sp[(-56)+20]
 12450  010B88  0EDC               	movlw	-36
 12451  010B8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12452  010B90  0EDD               	movlw	-35
 12453  010B92  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12454  010B98  0EDE               	movlw	-34
 12455  010B9A  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12456  010BA0  0EDF               	movlw	-33
 12457  010BA2  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12458                           
 12459                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 448:         d = (int)l;
 12460                           ;stkvar	_l @ sp[(-56)+20]
 12461  010BA8  0EDC               	movlw	-36
 12462  010BAA  006F FF8F FFE6     	movff	plusw1,postinc1
 12463  010BB0  006F FF8F FFE6     	movff	plusw1,postinc1
 12464  010BB6  006F FF8F FFE6     	movff	plusw1,postinc1
 12465  010BBC  006F FF8F FFE6     	movff	plusw1,postinc1
 12466  010BC2  EC68  F0B3         	call	___fltol	;wreg free
 12467  010BC6  0060  F0D4  F03F   	movff	btemp,btemp+10
 12468  010BCC  0060  F0D8  F040   	movff	btemp+1,btemp+11
 12469                           
 12470                           ;stkvar	_d @ sp[(-56)+44]
 12471  010BD2  0EF4               	movlw	-12
 12472  010BD4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12473  010BDA  0EF5               	movlw	-11
 12474  010BDC  0060  F103  FFE3   	movff	btemp+11,plusw1
 12475                           
 12476                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 449:         if (!(flags & (1
      +                           << 4)) && !d && (mode == 'g') && (ne < 0)) {
 12477  010BE2  B822               	btfsc	_flags^0,4,c
 12478  010BE4  D026               	goto	l9559
 12479                           
 12480                           ;stkvar	_d @ sp[(-56)+44]
 12481  010BE6  0EF4               	movlw	-12
 12482  010BE8  006F FF8C  F035    	movff	plusw1,btemp
 12483  010BEE  0EF5               	movlw	-11
 12484  010BF0  50E3               	movf	plusw1,w,c
 12485  010BF2  1035               	iorwf	btemp^0,w,c
 12486  010BF4  A4D8               	btfss	status,2,c
 12487  010BF6  D01D               	goto	l9559
 12488                           
 12489                           ;stkvar	_mode @ sp[(-56)+54]
 12490  010BF8  0EFE               	movlw	-2
 12491  010BFA  006F FF8C  F035    	movff	plusw1,btemp
 12492  010C00  0E67               	movlw	103
 12493  010C02  1835               	xorwf	btemp^0,w,c
 12494  010C04  A4D8               	btfss	status,2,c
 12495  010C06  D015               	goto	l9559
 12496                           
 12497                           ;stkvar	_ne @ sp[(-56)+46]
 12498  010C08  0EF7               	movlw	-9
 12499  010C0A  AEE3               	btfss	plusw1,7,c
 12500  010C0C  D012               	goto	l9559
 12501                           
 12502                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 450:             ++t;
 12503                           ;stkvar	_t @ sp[(-56)+52]
 12504  010C0E  0EFC               	movlw	-4
 12505  010C10  50E3               	movf	plusw1,w,c
 12506  010C12  0F01               	addlw	1
 12507  010C14  6E35               	movwf	btemp^0,c
 12508  010C16  0EFC               	movlw	-4
 12509  010C18  0060  F0D7  FFE3   	movff	btemp,plusw1
 12510  010C1E  6A35               	clrf	btemp^0,c
 12511  010C20  0EFD               	movlw	-3
 12512  010C22  50E3               	movf	plusw1,w,c
 12513  010C24  2035               	addwfc	btemp^0,w,c
 12514  010C26  6E35               	movwf	btemp^0,c
 12515  010C28  0EFD               	movlw	-3
 12516  010C2A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12517                           
 12518                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 451:         } else {
 12519  010C30  D0AF               	goto	l9587
 12520  010C32                     l9559:
 12521                           
 12522                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 452:             if (!pp && (
      +                          ne < 0)) {
 12523                           ;stkvar	_pp @ sp[(-56)+50]
 12524  010C32  0EFA               	movlw	-6
 12525  010C34  006F FF8C  F035    	movff	plusw1,btemp
 12526  010C3A  0EFB               	movlw	-5
 12527  010C3C  50E3               	movf	plusw1,w,c
 12528  010C3E  1035               	iorwf	btemp^0,w,c
 12529  010C40  A4D8               	btfss	status,2,c
 12530  010C42  D070               	goto	l9579
 12531                           
 12532                           ;stkvar	_ne @ sp[(-56)+46]
 12533  010C44  0EF7               	movlw	-9
 12534  010C46  AEE3               	btfss	plusw1,7,c
 12535  010C48  D06D               	goto	l9579
 12536                           
 12537                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 453:                 dbuf[n++
      +                          ] = '.';
 12538                           ;stkvar	_n @ sp[(-56)+32]
 12539  010C4A  0EE8               	movlw	-24
 12540  010C4C  006F FF8C  F03F    	movff	plusw1,btemp+10
 12541  010C52  0EE9               	movlw	-23
 12542  010C54  006F FF8C  F040    	movff	plusw1,btemp+11
 12543  010C5A  0EAC               	movlw	low _dbuf
 12544  010C5C  243F               	addwf	(btemp+10)^0,w,c
 12545  010C5E  6ED9               	movwf	fsr2l,c
 12546  010C60  0E02               	movlw	high _dbuf
 12547  010C62  2040               	addwfc	(btemp+11)^0,w,c
 12548  010C64  6EDA               	movwf	fsr2h,c
 12549  010C66  0E2E               	movlw	46
 12550  010C68  6EDF               	movwf	indf2,c
 12551                           
 12552                           ;stkvar	_n @ sp[(-56)+32]
 12553  010C6A  0EE8               	movlw	-24
 12554  010C6C  50E3               	movf	plusw1,w,c
 12555  010C6E  0F01               	addlw	1
 12556  010C70  6E35               	movwf	btemp^0,c
 12557  010C72  0EE8               	movlw	-24
 12558  010C74  0060  F0D7  FFE3   	movff	btemp,plusw1
 12559  010C7A  6A35               	clrf	btemp^0,c
 12560  010C7C  0EE9               	movlw	-23
 12561  010C7E  50E3               	movf	plusw1,w,c
 12562  010C80  2035               	addwfc	btemp^0,w,c
 12563  010C82  6E35               	movwf	btemp^0,c
 12564  010C84  0EE9               	movlw	-23
 12565  010C86  0060  F0D7  FFE3   	movff	btemp,plusw1
 12566                           
 12567                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 454:                 --w;
 12568                           ;stkvar	_w @ sp[(-56)+38]
 12569  010C8C  50E1               	movf	fsr1l,w,c
 12570  010C8E  0FEE               	addlw	-18
 12571  010C90  6ED9               	movwf	fsr2l,c
 12572  010C92  50E2               	movf	fsr1h,w,c
 12573  010C94  6EDA               	movwf	fsr2h,c
 12574  010C96  0EFF               	movlw	255
 12575  010C98  22DA               	addwfc	fsr2h,f,c
 12576  010C9A  06DE               	decf	postinc2,f,c
 12577  010C9C  0E00               	movlw	0
 12578  010C9E  5ADD               	subwfb	postdec2,f,c
 12579                           
 12580                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 455:                 pp = 1;
 12581  010CA0  0E01               	movlw	1
 12582  010CA2  6E3F               	movwf	(btemp+10)^0,c
 12583  010CA4  0E00               	movlw	0
 12584  010CA6  6E40               	movwf	(btemp+11)^0,c
 12585                           
 12586                           ;stkvar	_pp @ sp[(-56)+50]
 12587  010CA8  0EFA               	movlw	-6
 12588  010CAA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12589  010CB0  0EFB               	movlw	-5
 12590  010CB2  0060  F103  FFE3   	movff	btemp+11,plusw1
 12591  010CB8  D035               	goto	l9579
 12592  010CBA                     l9571:
 12593                           
 12594                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 458:                 dbuf[n++
      +                          ] = '0';
 12595                           ;stkvar	_n @ sp[(-56)+32]
 12596  010CBA  0EE8               	movlw	-24
 12597  010CBC  006F FF8C  F03F    	movff	plusw1,btemp+10
 12598  010CC2  0EE9               	movlw	-23
 12599  010CC4  006F FF8C  F040    	movff	plusw1,btemp+11
 12600  010CCA  0EAC               	movlw	low _dbuf
 12601  010CCC  243F               	addwf	(btemp+10)^0,w,c
 12602  010CCE  6ED9               	movwf	fsr2l,c
 12603  010CD0  0E02               	movlw	high _dbuf
 12604  010CD2  2040               	addwfc	(btemp+11)^0,w,c
 12605  010CD4  6EDA               	movwf	fsr2h,c
 12606  010CD6  0E30               	movlw	48
 12607  010CD8  6EDF               	movwf	indf2,c
 12608                           
 12609                           ;stkvar	_n @ sp[(-56)+32]
 12610  010CDA  0EE8               	movlw	-24
 12611  010CDC  50E3               	movf	plusw1,w,c
 12612  010CDE  0F01               	addlw	1
 12613  010CE0  6E35               	movwf	btemp^0,c
 12614  010CE2  0EE8               	movlw	-24
 12615  010CE4  0060  F0D7  FFE3   	movff	btemp,plusw1
 12616  010CEA  6A35               	clrf	btemp^0,c
 12617  010CEC  0EE9               	movlw	-23
 12618  010CEE  50E3               	movf	plusw1,w,c
 12619  010CF0  2035               	addwfc	btemp^0,w,c
 12620  010CF2  6E35               	movwf	btemp^0,c
 12621  010CF4  0EE9               	movlw	-23
 12622  010CF6  0060  F0D7  FFE3   	movff	btemp,plusw1
 12623                           
 12624                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 459:                 --w;
 12625                           ;stkvar	_w @ sp[(-56)+38]
 12626  010CFC  50E1               	movf	fsr1l,w,c
 12627  010CFE  0FEE               	addlw	-18
 12628  010D00  6ED9               	movwf	fsr2l,c
 12629  010D02  50E2               	movf	fsr1h,w,c
 12630  010D04  6EDA               	movwf	fsr2h,c
 12631  010D06  0EFF               	movlw	255
 12632  010D08  22DA               	addwfc	fsr2h,f,c
 12633  010D0A  06DE               	decf	postinc2,f,c
 12634  010D0C  0E00               	movlw	0
 12635  010D0E  5ADD               	subwfb	postdec2,f,c
 12636                           
 12637                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 460:                 --t;
 12638                           ;stkvar	_t @ sp[(-56)+52]
 12639  010D10  50E1               	movf	fsr1l,w,c
 12640  010D12  0FFC               	addlw	-4
 12641  010D14  6ED9               	movwf	fsr2l,c
 12642  010D16  50E2               	movf	fsr1h,w,c
 12643  010D18  6EDA               	movwf	fsr2h,c
 12644  010D1A  0EFF               	movlw	255
 12645  010D1C  22DA               	addwfc	fsr2h,f,c
 12646  010D1E  06DE               	decf	postinc2,f,c
 12647  010D20  0E00               	movlw	0
 12648  010D22  5ADD               	subwfb	postdec2,f,c
 12649  010D24                     l9579:
 12650                           
 12651                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 457:             while (t) {
 12652                           ;stkvar	_t @ sp[(-56)+52]
 12653  010D24  0EFC               	movlw	-4
 12654  010D26  006F FF8C  F035    	movff	plusw1,btemp
 12655  010D2C  0EFD               	movlw	-3
 12656  010D2E  50E3               	movf	plusw1,w,c
 12657  010D30  1035               	iorwf	btemp^0,w,c
 12658  010D32  A4D8               	btfss	status,2,c
 12659  010D34  D7C2               	goto	l9571
 12660                           
 12661                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 462:             dbuf[n++] = 
      +                          '0' + d;
 12662                           ;stkvar	_n @ sp[(-56)+32]
 12663  010D36  0EE8               	movlw	-24
 12664  010D38  006F FF8C  F03F    	movff	plusw1,btemp+10
 12665  010D3E  0EE9               	movlw	-23
 12666  010D40  006F FF8C  F040    	movff	plusw1,btemp+11
 12667  010D46  0EAC               	movlw	low _dbuf
 12668  010D48  243F               	addwf	(btemp+10)^0,w,c
 12669  010D4A  6ED9               	movwf	fsr2l,c
 12670  010D4C  0E02               	movlw	high _dbuf
 12671  010D4E  2040               	addwfc	(btemp+11)^0,w,c
 12672  010D50  6EDA               	movwf	fsr2h,c
 12673                           
 12674                           ;stkvar	_d @ sp[(-56)+44]
 12675  010D52  0EF4               	movlw	-12
 12676  010D54  50E3               	movf	plusw1,w,c
 12677  010D56  0F30               	addlw	48
 12678  010D58  6EDF               	movwf	indf2,c
 12679                           
 12680                           ;stkvar	_n @ sp[(-56)+32]
 12681  010D5A  0EE8               	movlw	-24
 12682  010D5C  50E3               	movf	plusw1,w,c
 12683  010D5E  0F01               	addlw	1
 12684  010D60  6E35               	movwf	btemp^0,c
 12685  010D62  0EE8               	movlw	-24
 12686  010D64  0060  F0D7  FFE3   	movff	btemp,plusw1
 12687  010D6A  6A35               	clrf	btemp^0,c
 12688  010D6C  0EE9               	movlw	-23
 12689  010D6E  50E3               	movf	plusw1,w,c
 12690  010D70  2035               	addwfc	btemp^0,w,c
 12691  010D72  6E35               	movwf	btemp^0,c
 12692  010D74  0EE9               	movlw	-23
 12693  010D76  0060  F0D7  FFE3   	movff	btemp,plusw1
 12694                           
 12695                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 463:             --w;
 12696                           ;stkvar	_w @ sp[(-56)+38]
 12697  010D7C  50E1               	movf	fsr1l,w,c
 12698  010D7E  0FEE               	addlw	-18
 12699  010D80  6ED9               	movwf	fsr2l,c
 12700  010D82  50E2               	movf	fsr1h,w,c
 12701  010D84  6EDA               	movwf	fsr2h,c
 12702  010D86  0EFF               	movlw	255
 12703  010D88  22DA               	addwfc	fsr2h,f,c
 12704  010D8A  06DE               	decf	postinc2,f,c
 12705  010D8C  0E00               	movlw	0
 12706  010D8E  5ADD               	subwfb	postdec2,f,c
 12707  010D90                     l9587:
 12708                           
 12709                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 465:         h -= l*u;
 12710                           ;stkvar	_u @ sp[(-56)+12]
 12711  010D90  0ED4               	movlw	-44
 12712  010D92  006F FF8F FFE6     	movff	plusw1,postinc1
 12713  010D98  006F FF8F FFE6     	movff	plusw1,postinc1
 12714  010D9E  006F FF8F FFE6     	movff	plusw1,postinc1
 12715  010DA4  006F FF8F FFE6     	movff	plusw1,postinc1
 12716                           
 12717                           ;stkvar	_l @ sp[(-60)+20]
 12718  010DAA  0ED8               	movlw	-40
 12719  010DAC  006F FF8F FFE6     	movff	plusw1,postinc1
 12720  010DB2  006F FF8F FFE6     	movff	plusw1,postinc1
 12721  010DB8  006F FF8F FFE6     	movff	plusw1,postinc1
 12722  010DBE  006F FF8F FFE6     	movff	plusw1,postinc1
 12723  010DC4  ECF8  F090         	call	___flmul	;wreg free
 12724  010DC8  0060  F0D7  FFE6   	movff	btemp,postinc1
 12725  010DCE  0060  F0DB  FFE6   	movff	btemp+1,postinc1
 12726  010DD4  0060  F0DF  FFE6   	movff	btemp+2,postinc1
 12727  010DDA  0060  F0E3  FFE6   	movff	btemp+3,postinc1
 12728                           
 12729                           ;stkvar	_h @ sp[(-60)+24]
 12730  010DE0  0EDC               	movlw	-36
 12731  010DE2  006F FF8F FFE6     	movff	plusw1,postinc1
 12732  010DE8  006F FF8F FFE6     	movff	plusw1,postinc1
 12733  010DEE  006F FF8F FFE6     	movff	plusw1,postinc1
 12734  010DF4  006F FF8F FFE6     	movff	plusw1,postinc1
 12735  010DFA  ECA8  F0C1         	call	___flsub	;wreg free
 12736                           
 12737                           ;stkvar	_h @ sp[(-56)+24]
 12738  010DFE  0EE0               	movlw	-32
 12739  010E00  0060  F0D7  FFE3   	movff	btemp,plusw1
 12740  010E06  0EE1               	movlw	-31
 12741  010E08  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12742  010E0E  0EE2               	movlw	-30
 12743  010E10  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12744  010E16  0EE3               	movlw	-29
 12745  010E18  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12746                           
 12747                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 466:         u = u/10.0;
 12748  010E1E  0E00               	movlw	0
 12749  010E20  6EE6               	movwf	postinc1,c
 12750  010E22  0E00               	movlw	0
 12751  010E24  6EE6               	movwf	postinc1,c
 12752  010E26  0E20               	movlw	32
 12753  010E28  6EE6               	movwf	postinc1,c
 12754  010E2A  0E41               	movlw	65
 12755  010E2C  6EE6               	movwf	postinc1,c
 12756                           
 12757                           ;stkvar	_u @ sp[(-60)+12]
 12758  010E2E  0ED0               	movlw	-48
 12759  010E30  006F FF8F FFE6     	movff	plusw1,postinc1
 12760  010E36  006F FF8F FFE6     	movff	plusw1,postinc1
 12761  010E3C  006F FF8F FFE6     	movff	plusw1,postinc1
 12762  010E42  006F FF8F FFE6     	movff	plusw1,postinc1
 12763  010E48  ECEB  F098         	call	___fldiv	;wreg free
 12764                           
 12765                           ;stkvar	_u @ sp[(-56)+12]
 12766  010E4C  0ED4               	movlw	-44
 12767  010E4E  0060  F0D7  FFE3   	movff	btemp,plusw1
 12768  010E54  0ED5               	movlw	-43
 12769  010E56  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 12770  010E5C  0ED6               	movlw	-42
 12771  010E5E  0060  F0DF  FFE3   	movff	btemp+2,plusw1
 12772  010E64  0ED7               	movlw	-41
 12773  010E66  0060  F0E3  FFE3   	movff	btemp+3,plusw1
 12774                           
 12775                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 467:         --ne;
 12776                           ;stkvar	_ne @ sp[(-56)+46]
 12777  010E6C  50E1               	movf	fsr1l,w,c
 12778  010E6E  0FF6               	addlw	-10
 12779  010E70  6ED9               	movwf	fsr2l,c
 12780  010E72  50E2               	movf	fsr1h,w,c
 12781  010E74  6EDA               	movwf	fsr2h,c
 12782  010E76  0EFF               	movlw	255
 12783  010E78  22DA               	addwfc	fsr2h,f,c
 12784  010E7A  06DE               	decf	postinc2,f,c
 12785  010E7C  0E00               	movlw	0
 12786  010E7E  5ADD               	subwfb	postdec2,f,c
 12787                           
 12788                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 468:         ++i;
 12789                           ;stkvar	_i @ sp[(-56)+36]
 12790  010E80  0EEC               	movlw	-20
 12791  010E82  50E3               	movf	plusw1,w,c
 12792  010E84  0F01               	addlw	1
 12793  010E86  6E35               	movwf	btemp^0,c
 12794  010E88  0EEC               	movlw	-20
 12795  010E8A  0060  F0D7  FFE3   	movff	btemp,plusw1
 12796  010E90  6A35               	clrf	btemp^0,c
 12797  010E92  0EED               	movlw	-19
 12798  010E94  50E3               	movf	plusw1,w,c
 12799  010E96  2035               	addwfc	btemp^0,w,c
 12800  010E98  6E35               	movwf	btemp^0,c
 12801  010E9A  0EED               	movlw	-19
 12802  010E9C  0060  F0D7  FFE3   	movff	btemp,plusw1
 12803  010EA2                     l9595:
 12804                           
 12805                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 446:     while ((i < m) && (n
      +                           < (80 - 5))) {
 12806                           ;stkvar	_m @ sp[(-56)+48]
 12807                           ;stkvar	_i @ sp[(-56)+36]
 12808  010EA2  50E1               	movf	fsr1l,w,c
 12809  010EA4  0FEC               	addlw	-20
 12810  010EA6  6ED9               	movwf	fsr2l,c
 12811  010EA8  50E2               	movf	fsr1h,w,c
 12812  010EAA  6EDA               	movwf	fsr2h,c
 12813  010EAC  0EFF               	movlw	255
 12814  010EAE  22DA               	addwfc	fsr2h,f,c
 12815  010EB0  0EF8               	movlw	-8
 12816  010EB2  50E3               	movf	plusw1,w,c
 12817  010EB4  5CDE               	subwf	postinc2,w,c
 12818  010EB6  50DE               	movf	postinc2,w,c
 12819  010EB8  0A80               	xorlw	128
 12820  010EBA  6E35               	movwf	btemp^0,c
 12821  010EBC  0EF9               	movlw	-7
 12822  010EBE  50E3               	movf	plusw1,w,c
 12823  010EC0  0A80               	xorlw	128
 12824  010EC2  5835               	subwfb	btemp^0,w,c
 12825  010EC4  B0D8               	btfsc	status,0,c
 12826  010EC6  D00E               	goto	u9710
 12827                           
 12828                           ;stkvar	_n @ sp[(-56)+32]
 12829  010EC8  0EE9               	movlw	-23
 12830  010ECA  BEE3               	btfsc	plusw1,7,c
 12831  010ECC  D633               	goto	l9545
 12832  010ECE  0EE9               	movlw	-23
 12833  010ED0  50E3               	movf	plusw1,w,c
 12834  010ED2  E108               	bnz	u9710
 12835  010ED4  0EE8               	movlw	-24
 12836  010ED6  006F FF8C  F035    	movff	plusw1,btemp
 12837  010EDC  0E4B               	movlw	75
 12838  010EDE  5E35               	subwf	btemp^0,f,c
 12839  010EE0  A0D8               	btfss	status,0,c
 12840  010EE2  D628               	goto	l9545
 12841  010EE4                     u9710:
 12842                           
 12843                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 470:     if (!pp && (flags & 
      +                          (1 << 4))) {
 12844                           ;stkvar	_pp @ sp[(-56)+50]
 12845  010EE4  0EFA               	movlw	-6
 12846  010EE6  006F FF8C  F035    	movff	plusw1,btemp
 12847  010EEC  0EFB               	movlw	-5
 12848  010EEE  50E3               	movf	plusw1,w,c
 12849  010EF0  1035               	iorwf	btemp^0,w,c
 12850  010EF2  B4D8               	btfsc	status,2,c
 12851  010EF4  A822               	btfss	_flags^0,4,c
 12852  010EF6  D021               	goto	l9607
 12853                           
 12854                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 471:         dbuf[n++] = '.';
 12855                           ;stkvar	_n @ sp[(-56)+32]
 12856  010EF8  0EE8               	movlw	-24
 12857  010EFA  006F FF8C  F03F    	movff	plusw1,btemp+10
 12858  010F00  0EE9               	movlw	-23
 12859  010F02  006F FF8C  F040    	movff	plusw1,btemp+11
 12860  010F08  0EAC               	movlw	low _dbuf
 12861  010F0A  243F               	addwf	(btemp+10)^0,w,c
 12862  010F0C  6ED9               	movwf	fsr2l,c
 12863  010F0E  0E02               	movlw	high _dbuf
 12864  010F10  2040               	addwfc	(btemp+11)^0,w,c
 12865  010F12  6EDA               	movwf	fsr2h,c
 12866  010F14  0E2E               	movlw	46
 12867  010F16  6EDF               	movwf	indf2,c
 12868                           
 12869                           ;stkvar	_n @ sp[(-56)+32]
 12870  010F18  0EE8               	movlw	-24
 12871  010F1A  50E3               	movf	plusw1,w,c
 12872  010F1C  0F01               	addlw	1
 12873  010F1E  6E35               	movwf	btemp^0,c
 12874  010F20  0EE8               	movlw	-24
 12875  010F22  0060  F0D7  FFE3   	movff	btemp,plusw1
 12876  010F28  6A35               	clrf	btemp^0,c
 12877  010F2A  0EE9               	movlw	-23
 12878  010F2C  50E3               	movf	plusw1,w,c
 12879  010F2E  2035               	addwfc	btemp^0,w,c
 12880  010F30  6E35               	movwf	btemp^0,c
 12881  010F32  0EE9               	movlw	-23
 12882  010F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 12883  010F3A                     l9607:
 12884                           
 12885                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 473:     dbuf[n] = '\0';
 12886                           ;stkvar	_n @ sp[(-56)+32]
 12887  010F3A  0EE8               	movlw	-24
 12888  010F3C  006F FF8C  F03F    	movff	plusw1,btemp+10
 12889  010F42  0EE9               	movlw	-23
 12890  010F44  006F FF8C  F040    	movff	plusw1,btemp+11
 12891  010F4A  0EAC               	movlw	low _dbuf
 12892  010F4C  243F               	addwf	(btemp+10)^0,w,c
 12893  010F4E  6ED9               	movwf	fsr2l,c
 12894  010F50  0E02               	movlw	high _dbuf
 12895  010F52  2040               	addwfc	(btemp+11)^0,w,c
 12896  010F54  6EDA               	movwf	fsr2h,c
 12897  010F56  0E00               	movlw	0
 12898  010F58  6EDF               	movwf	indf2,c
 12899                           
 12900                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 476:     if (nmode == 'e') {
 12901                           ;stkvar	_nmode @ sp[(-56)+55]
 12902  010F5A  0EFF               	movlw	-1
 12903  010F5C  006F FF8C  F035    	movff	plusw1,btemp
 12904  010F62  0E65               	movlw	101
 12905  010F64  1835               	xorwf	btemp^0,w,c
 12906  010F66  A4D8               	btfss	status,2,c
 12907  010F68  EF16  F081         	goto	l9411
 12908                           
 12909                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 477:         i = sizeof(dbuf)
      +                           - 1;
 12910  010F6C  0E4F               	movlw	79
 12911  010F6E  6E3F               	movwf	(btemp+10)^0,c
 12912  010F70  0E00               	movlw	0
 12913  010F72  6E40               	movwf	(btemp+11)^0,c
 12914                           
 12915                           ;stkvar	_i @ sp[(-56)+36]
 12916  010F74  0EEC               	movlw	-20
 12917  010F76  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12918  010F7C  0EED               	movlw	-19
 12919  010F7E  0060  F103  FFE3   	movff	btemp+11,plusw1
 12920                           
 12921                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 478:         dbuf[i] = '\0';
 12922                           ;stkvar	_i @ sp[(-56)+36]
 12923  010F84  0EEC               	movlw	-20
 12924  010F86  006F FF8C  F03F    	movff	plusw1,btemp+10
 12925  010F8C  0EED               	movlw	-19
 12926  010F8E  006F FF8C  F040    	movff	plusw1,btemp+11
 12927  010F94  0EAC               	movlw	low _dbuf
 12928  010F96  243F               	addwf	(btemp+10)^0,w,c
 12929  010F98  6ED9               	movwf	fsr2l,c
 12930  010F9A  0E02               	movlw	high _dbuf
 12931  010F9C  2040               	addwfc	(btemp+11)^0,w,c
 12932  010F9E  6EDA               	movwf	fsr2h,c
 12933  010FA0  0E00               	movlw	0
 12934  010FA2  6EDF               	movwf	indf2,c
 12935                           
 12936                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 479:         sign = 0;
 12937                           ;stkvar	_sign @ sp[(-56)+42]
 12938  010FA4  0EF2               	movlw	-14
 12939  010FA6  6AE3               	clrf	plusw1,c
 12940  010FA8  0EF3               	movlw	-13
 12941  010FAA  6AE3               	clrf	plusw1,c
 12942                           
 12943                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 480:         if (e < 0) {
 12944                           ;stkvar	_e @ sp[(-56)+34]
 12945  010FAC  0EEB               	movlw	-21
 12946  010FAE  AEE3               	btfss	plusw1,7,c
 12947  010FB0  D012               	goto	l9621
 12948                           
 12949                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 481:             sign = 1;
 12950  010FB2  0E01               	movlw	1
 12951  010FB4  6E3F               	movwf	(btemp+10)^0,c
 12952  010FB6  0E00               	movlw	0
 12953  010FB8  6E40               	movwf	(btemp+11)^0,c
 12954                           
 12955                           ;stkvar	_sign @ sp[(-56)+42]
 12956  010FBA  0EF2               	movlw	-14
 12957  010FBC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12958  010FC2  0EF3               	movlw	-13
 12959  010FC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 12960                           
 12961                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 482:             e = -e;
 12962                           ;stkvar	_e @ sp[(-56)+34]
 12963                           ;stkvar	_e @ sp[(-56)+34]
 12964  010FCA  0EEA               	movlw	-22
 12965  010FCC  6CE3               	negf	plusw1,c
 12966  010FCE  0EEB               	movlw	-21
 12967  010FD0  1EE3               	comf	plusw1,f,c
 12968  010FD2  B0D8               	btfsc	status,0,c
 12969  010FD4  2AE3               	incf	plusw1,f,c
 12970  010FD6                     l9621:
 12971                           
 12972                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 484:         p = 2;
 12973  010FD6  0E02               	movlw	2
 12974  010FD8  6E3F               	movwf	(btemp+10)^0,c
 12975  010FDA  0E00               	movlw	0
 12976  010FDC  6E40               	movwf	(btemp+11)^0,c
 12977                           
 12978                           ;stkvar	_p @ sp[(-56)+40]
 12979  010FDE  0EF0               	movlw	-16
 12980  010FE0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 12981  010FE6  0EF1               	movlw	-15
 12982  010FE8  0060  F103  FFE3   	movff	btemp+11,plusw1
 12983                           
 12984                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 12985  010FEE  D051               	goto	l9633
 12986  010FF0                     l9623:
 12987                           
 12988                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 486:             --i;
 12989                           ;stkvar	_i @ sp[(-56)+36]
 12990  010FF0  50E1               	movf	fsr1l,w,c
 12991  010FF2  0FEC               	addlw	-20
 12992  010FF4  6ED9               	movwf	fsr2l,c
 12993  010FF6  50E2               	movf	fsr1h,w,c
 12994  010FF8  6EDA               	movwf	fsr2h,c
 12995  010FFA  0EFF               	movlw	255
 12996  010FFC  22DA               	addwfc	fsr2h,f,c
 12997  010FFE  06DE               	decf	postinc2,f,c
 12998  011000  0E00               	movlw	0
 12999  011002  5ADD               	subwfb	postdec2,f,c
 13000                           
 13001                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 487:             dbuf[i] = '0
      +                          ' + (e % 10);
 13002                           ;stkvar	_i @ sp[(-56)+36]
 13003  011004  0EEC               	movlw	-20
 13004  011006  006F FF8C  F03F    	movff	plusw1,btemp+10
 13005  01100C  0EED               	movlw	-19
 13006  01100E  006F FF8C  F040    	movff	plusw1,btemp+11
 13007  011014  0EAC               	movlw	low _dbuf
 13008  011016  243F               	addwf	(btemp+10)^0,w,c
 13009  011018  6ED9               	movwf	fsr2l,c
 13010  01101A  0E02               	movlw	high _dbuf
 13011  01101C  2040               	addwfc	(btemp+11)^0,w,c
 13012  01101E  6EDA               	movwf	fsr2h,c
 13013  011020  0E0A               	movlw	10
 13014  011022  6EE6               	movwf	postinc1,c
 13015  011024  0E00               	movlw	0
 13016  011026  6EE6               	movwf	postinc1,c
 13017                           
 13018                           ;stkvar	_e @ sp[(-58)+34]
 13019  011028  0EE8               	movlw	-24
 13020  01102A  006F FF8F FFE6     	movff	plusw1,postinc1
 13021  011030  006F FF8F FFE6     	movff	plusw1,postinc1
 13022  011036  EC42  F0B7         	call	___awmod	;wreg free
 13023  01103A  5035               	movf	btemp^0,w,c
 13024  01103C  0F30               	addlw	48
 13025  01103E  6EDF               	movwf	indf2,c
 13026                           
 13027                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 488:             e = e / 10;
 13028  011040  0E0A               	movlw	10
 13029  011042  6EE6               	movwf	postinc1,c
 13030  011044  0E00               	movlw	0
 13031  011046  6EE6               	movwf	postinc1,c
 13032                           
 13033                           ;stkvar	_e @ sp[(-58)+34]
 13034  011048  0EE8               	movlw	-24
 13035  01104A  006F FF8F FFE6     	movff	plusw1,postinc1
 13036  011050  006F FF8F FFE6     	movff	plusw1,postinc1
 13037  011056  ECD2  F0B4         	call	___awdiv	;wreg free
 13038                           
 13039                           ;stkvar	_e @ sp[(-56)+34]
 13040  01105A  0EEA               	movlw	-22
 13041  01105C  0060  F0D7  FFE3   	movff	btemp,plusw1
 13042  011062  0EEB               	movlw	-21
 13043  011064  0060  F0DB  FFE3   	movff	btemp+1,plusw1
 13044                           
 13045                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 489:             --p;
 13046                           ;stkvar	_p @ sp[(-56)+40]
 13047  01106A  50E1               	movf	fsr1l,w,c
 13048  01106C  0FF0               	addlw	-16
 13049  01106E  6ED9               	movwf	fsr2l,c
 13050  011070  50E2               	movf	fsr1h,w,c
 13051  011072  6EDA               	movwf	fsr2h,c
 13052  011074  0EFF               	movlw	255
 13053  011076  22DA               	addwfc	fsr2h,f,c
 13054  011078  06DE               	decf	postinc2,f,c
 13055  01107A  0E00               	movlw	0
 13056  01107C  5ADD               	subwfb	postdec2,f,c
 13057                           
 13058                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 490:             --w;
 13059                           ;stkvar	_w @ sp[(-56)+38]
 13060  01107E  50E1               	movf	fsr1l,w,c
 13061  011080  0FEE               	addlw	-18
 13062  011082  6ED9               	movwf	fsr2l,c
 13063  011084  50E2               	movf	fsr1h,w,c
 13064  011086  6EDA               	movwf	fsr2h,c
 13065  011088  0EFF               	movlw	255
 13066  01108A  22DA               	addwfc	fsr2h,f,c
 13067  01108C  06DE               	decf	postinc2,f,c
 13068  01108E  0E00               	movlw	0
 13069  011090  5ADD               	subwfb	postdec2,f,c
 13070  011092                     l9633:
 13071                           
 13072                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 485:         while (e || (0 <
      +                           p)) {
 13073                           ;stkvar	_e @ sp[(-56)+34]
 13074  011092  0EEA               	movlw	-22
 13075  011094  006F FF8C  F035    	movff	plusw1,btemp
 13076  01109A  0EEB               	movlw	-21
 13077  01109C  50E3               	movf	plusw1,w,c
 13078  01109E  1035               	iorwf	btemp^0,w,c
 13079  0110A0  A4D8               	btfss	status,2,c
 13080  0110A2  D7A6               	goto	l9623
 13081                           
 13082                           ;stkvar	_p @ sp[(-56)+40]
 13083  0110A4  0EF1               	movlw	-15
 13084  0110A6  BEE3               	btfsc	plusw1,7,c
 13085  0110A8  D007               	goto	u9770
 13086  0110AA  0EF1               	movlw	-15
 13087  0110AC  50E3               	movf	plusw1,w,c
 13088  0110AE  E1A0               	bnz	l9623
 13089  0110B0  0EF0               	movlw	-16
 13090  0110B2  04E3               	decf	plusw1,w,c
 13091  0110B4  B0D8               	btfsc	status,0,c
 13092  0110B6  D79C               	goto	l9623
 13093  0110B8                     u9770:
 13094                           
 13095                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 492:         --i;
 13096                           ;stkvar	_i @ sp[(-56)+36]
 13097  0110B8  50E1               	movf	fsr1l,w,c
 13098  0110BA  0FEC               	addlw	-20
 13099  0110BC  6ED9               	movwf	fsr2l,c
 13100  0110BE  50E2               	movf	fsr1h,w,c
 13101  0110C0  6EDA               	movwf	fsr2h,c
 13102  0110C2  0EFF               	movlw	255
 13103  0110C4  22DA               	addwfc	fsr2h,f,c
 13104  0110C6  06DE               	decf	postinc2,f,c
 13105  0110C8  0E00               	movlw	0
 13106  0110CA  5ADD               	subwfb	postdec2,f,c
 13107                           
 13108                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 493:         dbuf[i] = sign ?
      +                           '-' : '+';
 13109                           ;stkvar	_sign @ sp[(-56)+42]
 13110  0110CC  0EF2               	movlw	-14
 13111  0110CE  006F FF8C  F035    	movff	plusw1,btemp
 13112  0110D4  0EF3               	movlw	-13
 13113  0110D6  50E3               	movf	plusw1,w,c
 13114  0110D8  1035               	iorwf	btemp^0,w,c
 13115  0110DA  A4D8               	btfss	status,2,c
 13116  0110DC  D002               	goto	l9643
 13117  0110DE  0E2B               	movlw	43
 13118  0110E0  D001               	goto	L13
 13119  0110E2                     l9643:
 13120  0110E2  0E2D               	movlw	45
 13121  0110E4                     L13:
 13122  0110E4  6E3F               	movwf	(btemp+10)^0,c
 13123  0110E6  0E00               	movlw	0
 13124  0110E8  6E40               	movwf	(btemp+11)^0,c
 13125                           
 13126                           ;stkvar	_efgtoa$4211 @ sp[(-56)+4]
 13127  0110EA  0ECC               	movlw	-52
 13128  0110EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13129  0110F2  0ECD               	movlw	-51
 13130  0110F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 13131                           
 13132                           ;stkvar	_efgtoa$4211 @ sp[(-56)+4]
 13133                           ;stkvar	_i @ sp[(-56)+36]
 13134  0110FA  0EEC               	movlw	-20
 13135  0110FC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13136  011102  0EED               	movlw	-19
 13137  011104  006F FF8C  F040    	movff	plusw1,btemp+11
 13138  01110A  0EAC               	movlw	low _dbuf
 13139  01110C  243F               	addwf	(btemp+10)^0,w,c
 13140  01110E  6ED9               	movwf	fsr2l,c
 13141  011110  0E02               	movlw	high _dbuf
 13142  011112  2040               	addwfc	(btemp+11)^0,w,c
 13143  011114  6EDA               	movwf	fsr2h,c
 13144  011116  0ECC               	movlw	-52
 13145  011118  006F FF8F FFDF     	movff	plusw1,indf2
 13146                           
 13147                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 494:         --w;
 13148                           ;stkvar	_w @ sp[(-56)+38]
 13149  01111E  50E1               	movf	fsr1l,w,c
 13150  011120  0FEE               	addlw	-18
 13151  011122  6ED9               	movwf	fsr2l,c
 13152  011124  50E2               	movf	fsr1h,w,c
 13153  011126  6EDA               	movwf	fsr2h,c
 13154  011128  0EFF               	movlw	255
 13155  01112A  22DA               	addwfc	fsr2h,f,c
 13156  01112C  06DE               	decf	postinc2,f,c
 13157  01112E  0E00               	movlw	0
 13158  011130  5ADD               	subwfb	postdec2,f,c
 13159                           
 13160                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 496:         dbuf[i] = (0 ? i
      +                          supper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
 13161                           ;stkvar	_i @ sp[(-56)+36]
 13162  011132  50E1               	movf	fsr1l,w,c
 13163  011134  0FEC               	addlw	-20
 13164  011136  6ED9               	movwf	fsr2l,c
 13165  011138  50E2               	movf	fsr1h,w,c
 13166  01113A  6EDA               	movwf	fsr2h,c
 13167  01113C  0EFF               	movlw	255
 13168  01113E  22DA               	addwfc	fsr2h,f,c
 13169  011140  06DE               	decf	postinc2,f,c
 13170  011142  0E00               	movlw	0
 13171  011144  5ADD               	subwfb	postdec2,f,c
 13172  011146  0EBF               	movlw	191
 13173  011148  6E3F               	movwf	(btemp+10)^0,c
 13174  01114A  0EFF               	movlw	255
 13175  01114C  6E40               	movwf	(btemp+11)^0,c
 13176                           
 13177                           ;stkvar	_c @ sp[(-56)+-7]
 13178  01114E  0EC1               	movlw	-63
 13179  011150  50E3               	movf	plusw1,w,c
 13180  011152  6E3D               	movwf	(btemp+8)^0,c
 13181  011154  6A3E               	clrf	(btemp+9)^0,c
 13182  011156  503F               	movf	(btemp+10)^0,w,c
 13183  011158  263D               	addwf	(btemp+8)^0,f,c
 13184  01115A  5040               	movf	(btemp+11)^0,w,c
 13185  01115C  223E               	addwfc	(btemp+9)^0,f,c
 13186  01115E  503E               	movf	(btemp+9)^0,w,c
 13187  011160  E106               	bnz	u9790
 13188  011162  0E1A               	movlw	26
 13189  011164  5C3D               	subwf	(btemp+8)^0,w,c
 13190  011166  B0D8               	btfsc	status,0,c
 13191  011168  D002               	goto	u9790
 13192  01116A  0E01               	movlw	1
 13193  01116C  D001               	goto	u9800
 13194  01116E                     u9790:
 13195  01116E  0E00               	movlw	0
 13196  011170                     u9800:
 13197  011170  6E3F               	movwf	(btemp+10)^0,c
 13198  011172  6A40               	clrf	(btemp+11)^0,c
 13199                           
 13200                           ;stkvar	_efgtoa$4213 @ sp[(-56)+0]
 13201  011174  0EC8               	movlw	-56
 13202  011176  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13203  01117C  0EC9               	movlw	-55
 13204  01117E  0060  F103  FFE3   	movff	btemp+11,plusw1
 13205                           
 13206                           ;stkvar	_efgtoa$4213 @ sp[(-56)+0]
 13207  011184  0EC8               	movlw	-56
 13208  011186  006F FF8C  F035    	movff	plusw1,btemp
 13209  01118C  0EC9               	movlw	-55
 13210  01118E  50E3               	movf	plusw1,w,c
 13211  011190  1035               	iorwf	btemp^0,w,c
 13212  011192  A4D8               	btfss	status,2,c
 13213  011194  D002               	goto	l9659
 13214  011196  0E65               	movlw	101
 13215  011198  D001               	goto	L14
 13216  01119A                     l9659:
 13217  01119A  0E45               	movlw	69
 13218  01119C                     L14:
 13219  01119C  6E3F               	movwf	(btemp+10)^0,c
 13220  01119E  0E00               	movlw	0
 13221  0111A0  6E40               	movwf	(btemp+11)^0,c
 13222                           
 13223                           ;stkvar	_efgtoa$4212 @ sp[(-56)+2]
 13224  0111A2  0ECA               	movlw	-54
 13225  0111A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13226  0111AA  0ECB               	movlw	-53
 13227  0111AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 13228                           
 13229                           ;stkvar	_efgtoa$4212 @ sp[(-56)+2]
 13230                           ;stkvar	_i @ sp[(-56)+36]
 13231  0111B2  0EEC               	movlw	-20
 13232  0111B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 13233  0111BA  0EED               	movlw	-19
 13234  0111BC  006F FF8C  F040    	movff	plusw1,btemp+11
 13235  0111C2  0EAC               	movlw	low _dbuf
 13236  0111C4  243F               	addwf	(btemp+10)^0,w,c
 13237  0111C6  6ED9               	movwf	fsr2l,c
 13238  0111C8  0E02               	movlw	high _dbuf
 13239  0111CA  2040               	addwfc	(btemp+11)^0,w,c
 13240  0111CC  6EDA               	movwf	fsr2h,c
 13241  0111CE  0ECA               	movlw	-54
 13242  0111D0  006F FF8F FFDF     	movff	plusw1,indf2
 13243                           
 13244                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 497:         --w;
 13245                           ;stkvar	_w @ sp[(-56)+38]
 13246  0111D6  50E1               	movf	fsr1l,w,c
 13247  0111D8  0FEE               	addlw	-18
 13248  0111DA  6ED9               	movwf	fsr2l,c
 13249  0111DC  50E2               	movf	fsr1h,w,c
 13250  0111DE  6EDA               	movwf	fsr2h,c
 13251  0111E0  0EFF               	movlw	255
 13252  0111E2  22DA               	addwfc	fsr2h,f,c
 13253  0111E4  06DE               	decf	postinc2,f,c
 13254  0111E6  0E00               	movlw	0
 13255  0111E8  5ADD               	subwfb	postdec2,f,c
 13256                           
 13257                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 498:         strcpy(&dbuf[n],
      +                           &dbuf[i]);
 13258                           ;stkvar	_i @ sp[(-56)+36]
 13259  0111EA  0EEC               	movlw	-20
 13260  0111EC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13261  0111F2  0EED               	movlw	-19
 13262  0111F4  006F FF8C  F040    	movff	plusw1,btemp+11
 13263  0111FA  0EAC               	movlw	low _dbuf
 13264  0111FC  243F               	addwf	(btemp+10)^0,w,c
 13265  0111FE  6E3D               	movwf	(btemp+8)^0,c
 13266  011200  0E02               	movlw	high _dbuf
 13267  011202  2040               	addwfc	(btemp+11)^0,w,c
 13268  011204  6E3E               	movwf	(btemp+9)^0,c
 13269  011206  0060  F0F7  FFE6   	movff	btemp+8,postinc1
 13270  01120C  0060  F0FB  FFE6   	movff	btemp+9,postinc1
 13271                           
 13272                           ;stkvar	_n @ sp[(-58)+32]
 13273  011212  0EAC               	movlw	low _dbuf
 13274  011214  6E3F               	movwf	(btemp+10)^0,c
 13275  011216  0E02               	movlw	high _dbuf
 13276  011218  6E40               	movwf	(btemp+11)^0,c
 13277  01121A  0EE6               	movlw	-26
 13278  01121C  50E3               	movf	plusw1,w,c
 13279  01121E  263F               	addwf	(btemp+10)^0,f,c
 13280  011220  0EE7               	movlw	-25
 13281  011222  50E3               	movf	plusw1,w,c
 13282  011224  2240               	addwfc	(btemp+11)^0,f,c
 13283  011226  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 13284  01122C  0060  F103  FFE6   	movff	btemp+11,postinc1
 13285  011232  ECD9  F0B9         	call	_strcpy	;wreg free
 13286  011236  EF16  F081         	goto	l9411
 13287  01123A                     l1807:
 13288                           
 13289                           ; _efgtoa: autosize = 56, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 7, argsi
      +                          ze = 7, vargsize = 0
 13290  01123A  0EC1               	movlw	193
 13291  01123C  26E1               	addwf	fsr1l,f,c
 13292  01123E  0EFF               	movlw	255
 13293  011240  22E2               	addwfc	fsr1h,f,c
 13294  011242  0012               	return		;funcret
 13295  011244                     __end_of_efgtoa:
 13296                           	opt callstack 0
 13297                           
 13298 ;; *************** function _tolower *****************
 13299 ;; Defined at:
 13300 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/tolower.c"
 13301 ;; Parameters:    Size  Location     Type
 13302 ;;  c               2  [STACK] int 
 13303 ;; Auto vars:     Size  Location     Type
 13304 ;;		None
 13305 ;; Return value:  Size  Location     Type
 13306 ;;                  2  [STACK] int 
 13307 ;; Registers used:
 13308 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, prodl
 13309 ;; Tracked objects:
 13310 ;;		On entry : 0/4
 13311 ;;		On exit  : 0/0
 13312 ;;		Unchanged: 0/0
 13313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13318 ;;Total ram usage:        0 bytes
 13319 ;; Hardware stack levels used:    1
 13320 ;; Hardware stack levels required when called:    7
 13321 ;; This function calls:
 13322 ;;		_isupper
 13323 ;; This function is called by:
 13324 ;;		_efgtoa
 13325 ;;		_vfpfcnvrt
 13326 ;; This function uses a reentrant model
 13327 ;;
 13328                           
 13329                           	psect	text46
 13330  017CC6                     __ptext46:
 13331                           	opt callstack 0
 13332  017CC6                     _tolower:
 13333                           	opt callstack 0
 13334                           
 13335                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13336  017CC6  52E6               	movf	postinc1,f,c
 13337  017CC8  52E6               	movf	postinc1,f,c
 13338                           
 13339                           ;stkvar	_c @ sp[(-2)+-2]
 13340                           
 13341                           ;incstack = 0
 13342  017CCA  0EFC               	movlw	-4
 13343  017CCC  50E3               	movf	plusw1,w,c
 13344  017CCE  0FBF               	addlw	191
 13345  017CD0  6E3F               	movwf	(btemp+10)^0,c
 13346  017CD2  0EFD               	movlw	-3
 13347  017CD4  006F FF8C  F040    	movff	plusw1,btemp+11
 13348  017CDA  0EFF               	movlw	255
 13349  017CDC  2240               	addwfc	(btemp+11)^0,f,c
 13350  017CDE  5040               	movf	(btemp+11)^0,w,c
 13351  017CE0  E106               	bnz	u5220
 13352  017CE2  0E1A               	movlw	26
 13353  017CE4  5C3F               	subwf	(btemp+10)^0,w,c
 13354  017CE6  B0D8               	btfsc	status,0,c
 13355  017CE8  D002               	goto	u5220
 13356  017CEA  0E01               	movlw	1
 13357  017CEC  D001               	goto	u5230
 13358  017CEE                     u5220:
 13359  017CEE  0E00               	movlw	0
 13360  017CF0                     u5230:
 13361  017CF0  6E3F               	movwf	(btemp+10)^0,c
 13362  017CF2  6A40               	clrf	(btemp+11)^0,c
 13363                           
 13364                           ;stkvar	_tolower$4910 @ sp[(-2)+0]
 13365  017CF4  0EFE               	movlw	-2
 13366  017CF6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13367  017CFC  0EFF               	movlw	-1
 13368  017CFE  0060  F103  FFE3   	movff	btemp+11,plusw1
 13369                           
 13370                           ;stkvar	_tolower$4910 @ sp[(-2)+0]
 13371  017D04  0EFE               	movlw	-2
 13372  017D06  006F FF8C  F035    	movff	plusw1,btemp
 13373  017D0C  0EFF               	movlw	-1
 13374  017D0E  50E3               	movf	plusw1,w,c
 13375  017D10  1035               	iorwf	btemp^0,w,c
 13376  017D12  B4D8               	btfsc	status,2,c
 13377  017D14  D00D               	goto	l6419
 13378                           
 13379                           ;stkvar	_c @ sp[(-2)+-2]
 13380  017D16  0EFC               	movlw	-4
 13381  017D18  006F FF8C  F035    	movff	plusw1,btemp
 13382  017D1E  0EFD               	movlw	-3
 13383  017D20  006F FF8C  F036    	movff	plusw1,btemp+1
 13384  017D26  0E20               	movlw	32
 13385  017D28  1235               	iorwf	btemp^0,f,c
 13386  017D2A  0E00               	movlw	0
 13387  017D2C  1236               	iorwf	(btemp+1)^0,f,c
 13388  017D2E  D008               	goto	l2853
 13389  017D30                     l6419:
 13390                           
 13391                           ;stkvar	_c @ sp[(-2)+-2]
 13392  017D30  0EFC               	movlw	-4
 13393  017D32  006F FF8C  F035    	movff	plusw1,btemp
 13394  017D38  0EFD               	movlw	-3
 13395  017D3A  006F FF8C  F036    	movff	plusw1,btemp+1
 13396  017D40                     l2853:
 13397                           
 13398                           ; _tolower: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13399  017D40  52E5               	movf	postdec1,f,c
 13400  017D42  52E5               	movf	postdec1,f,c
 13401  017D44  52E5               	movf	postdec1,f,c
 13402  017D46  52E5               	movf	postdec1,f,c
 13403  017D48  0012               	return		;funcret
 13404  017D4A                     __end_of_tolower:
 13405                           	opt callstack 0
 13406                           
 13407 ;; *************** function _isupper *****************
 13408 ;; Defined at:
 13409 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isupper.c"
 13410 ;; Parameters:    Size  Location     Type
 13411 ;;  c               2  [STACK] int 
 13412 ;; Auto vars:     Size  Location     Type
 13413 ;;		None
 13414 ;; Return value:  Size  Location     Type
 13415 ;;                  2  [STACK] int 
 13416 ;; Registers used:
 13417 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 13418 ;; Tracked objects:
 13419 ;;		On entry : 0/0
 13420 ;;		On exit  : 0/0
 13421 ;;		Unchanged: 0/0
 13422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13427 ;;Total ram usage:        0 bytes
 13428 ;; Hardware stack levels used:    1
 13429 ;; Hardware stack levels required when called:    6
 13430 ;; This function calls:
 13431 ;;		Nothing
 13432 ;; This function is called by:
 13433 ;;		_efgtoa
 13434 ;;		_xtoa
 13435 ;;		_vfpfcnvrt
 13436 ;;		_tolower
 13437 ;; This function uses a reentrant model
 13438 ;;
 13439                           
 13440                           	psect	text47
 13441  018768                     __ptext47:
 13442                           	opt callstack 0
 13443  018768                     _isupper:
 13444                           	opt callstack 17
 13445                           
 13446                           ;stkvar	_c @ sp[(0)+-2]
 13447                           
 13448                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13449                           ;incstack = 0
 13450  018768  0EFE               	movlw	-2
 13451  01876A  50E3               	movf	plusw1,w,c
 13452  01876C  0FBF               	addlw	191
 13453  01876E  6E3F               	movwf	(btemp+10)^0,c
 13454  018770  0EFF               	movlw	-1
 13455  018772  006F FF8C  F040    	movff	plusw1,btemp+11
 13456  018778  0EFF               	movlw	255
 13457  01877A  2240               	addwfc	(btemp+11)^0,f,c
 13458  01877C  5040               	movf	(btemp+11)^0,w,c
 13459  01877E  E106               	bnz	u4620
 13460  018780  0E1A               	movlw	26
 13461  018782  5C3F               	subwf	(btemp+10)^0,w,c
 13462  018784  B0D8               	btfsc	status,0,c
 13463  018786  D002               	goto	u4620
 13464  018788  0E01               	movlw	1
 13465  01878A  D001               	goto	u4630
 13466  01878C                     u4620:
 13467  01878C  0E00               	movlw	0
 13468  01878E                     u4630:
 13469  01878E  6E35               	movwf	btemp^0,c
 13470  018790  6A36               	clrf	(btemp+1)^0,c
 13471                           
 13472                           ; _isupper: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 13473  018792  52E5               	movf	postdec1,f,c
 13474  018794  52E5               	movf	postdec1,f,c
 13475  018796  0012               	return		;funcret
 13476  018798                     __end_of_isupper:
 13477                           	opt callstack 0
 13478                           
 13479 ;; *************** function _strcpy *****************
 13480 ;; Defined at:
 13481 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strcpy.c"
 13482 ;; Parameters:    Size  Location     Type
 13483 ;;  dest            2  [STACK] PTR unsigned char 
 13484 ;;		 -> dbuf(80), 
 13485 ;;  src             2  [STACK] PTR const unsigned char 
 13486 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13487 ;;		 -> dbuf(80), 
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;  d               2  [STACK] PTR unsigned char 
 13490 ;;		 -> dbuf(80), 
 13491 ;;  s               2  [STACK] PTR const unsigned char 
 13492 ;;		 -> STR_39(4), STR_38(4), STR_35(4), STR_34(4), 
 13493 ;;		 -> dbuf(80), 
 13494 ;; Return value:  Size  Location     Type
 13495 ;;                  2  [STACK] PTR unsigned char 
 13496 ;; Registers used:
 13497 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+10, btemp+11, tblptrl, tblptrh, tbl
      +ptru
 13498 ;; Tracked objects:
 13499 ;;		On entry : 0/4
 13500 ;;		On exit  : 0/0
 13501 ;;		Unchanged: 0/0
 13502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13507 ;;Total ram usage:        0 bytes
 13508 ;; Hardware stack levels used:    1
 13509 ;; Hardware stack levels required when called:    6
 13510 ;; This function calls:
 13511 ;;		Nothing
 13512 ;; This function is called by:
 13513 ;;		_efgtoa
 13514 ;; This function uses a reentrant model
 13515 ;;
 13516                           
 13517                           	psect	text48
 13518  0173B2                     __ptext48:
 13519                           	opt callstack 0
 13520  0173B2                     _strcpy:
 13521                           	opt callstack 0
 13522                           
 13523                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 13524  0173B2  52E6               	movf	postinc1,f,c
 13525  0173B4  52E6               	movf	postinc1,f,c
 13526  0173B6  52E6               	movf	postinc1,f,c
 13527  0173B8  52E6               	movf	postinc1,f,c
 13528                           
 13529                           ;stkvar	_src @ sp[(-4)+-4]
 13530                           
 13531                           ;incstack = 0
 13532  0173BA  0EF8               	movlw	-8
 13533  0173BC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13534  0173C2  0EF9               	movlw	-7
 13535  0173C4  006F FF8C  F040    	movff	plusw1,btemp+11
 13536                           
 13537                           ;stkvar	_s @ sp[(-4)+2]
 13538  0173CA  0EFF               	movlw	-1
 13539  0173CC  0060  F103  FFE3   	movff	btemp+11,plusw1
 13540  0173D2  0EFE               	movlw	-2
 13541  0173D4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13542                           
 13543                           ;stkvar	_dest @ sp[(-4)+-2]
 13544  0173DA  0EFA               	movlw	-6
 13545  0173DC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13546  0173E2  0EFB               	movlw	-5
 13547  0173E4  006F FF8C  F040    	movff	plusw1,btemp+11
 13548                           
 13549                           ;stkvar	_d @ sp[(-4)+0]
 13550  0173EA  0EFD               	movlw	-3
 13551  0173EC  0060  F103  FFE3   	movff	btemp+11,plusw1
 13552  0173F2  0EFC               	movlw	-4
 13553  0173F4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13554  0173FA                     l9285:
 13555                           
 13556                           ;stkvar	_s @ sp[(-4)+2]
 13557  0173FA  50E1               	movf	fsr1l,w,c
 13558  0173FC  0FFE               	addlw	-2
 13559  0173FE  6ED9               	movwf	fsr2l,c
 13560  017400  50E2               	movf	fsr1h,w,c
 13561  017402  6EDA               	movwf	fsr2h,c
 13562  017404  0EFF               	movlw	255
 13563  017406  22DA               	addwfc	fsr2h,f,c
 13564  017408  006F FF7C  F03F    	movff	indf2,btemp+10
 13565  01740E  0E01               	movlw	1
 13566  017410  26DE               	addwf	postinc2,f,c
 13567  017412  006F FF7C  F040    	movff	indf2,btemp+11
 13568  017418  0E00               	movlw	0
 13569  01741A  22DD               	addwfc	postdec2,f,c
 13570  01741C  0060  F0FF  FFF6   	movff	btemp+10,tblptrl
 13571  017422  0060  F103  FFF7   	movff	btemp+11,tblptrh
 13572  017428  0E00               	movlw	low (__mediumconst shr (0+16))
 13573  01742A  6EF8               	movwf	tblptru,c
 13574                           
 13575                           ;stkvar	_d @ sp[(-4)+0]
 13576  01742C  50E1               	movf	fsr1l,w,c
 13577  01742E  0FFC               	addlw	-4
 13578  017430  6ED9               	movwf	fsr2l,c
 13579  017432  50E2               	movf	fsr1h,w,c
 13580  017434  6EDA               	movwf	fsr2h,c
 13581  017436  0EFF               	movlw	255
 13582  017438  22DA               	addwfc	fsr2h,f,c
 13583  01743A  006F FF7C  F03F    	movff	indf2,btemp+10
 13584  017440  0E01               	movlw	1
 13585  017442  26DE               	addwf	postinc2,f,c
 13586  017444  006F FF7C  F040    	movff	indf2,btemp+11
 13587  01744A  0E00               	movlw	0
 13588  01744C  22DD               	addwfc	postdec2,f,c
 13589  01744E  0060  F0FF  FFD9   	movff	btemp+10,fsr2l
 13590  017454  0060  F103  FFDA   	movff	btemp+11,fsr2h
 13591  01745A  0E1F               	movlw	(high __ramtop+-1)
 13592  01745C  64F7               	cpfsgt	tblptrh,c
 13593  01745E  D003               	bra	u9107
 13594  017460  0008               	tblrd		*
 13595  017462  50F5               	movf	tablat,w,c
 13596  017464  D007               	bra	u9100
 13597  017466                     u9107:
 13598  017466  006F FFDB FFE9     	movff	tblptrl,fsr0l
 13599  01746C  006F FFDF FFEA     	movff	tblptrh,fsr0h
 13600  017472  50EF               	movf	indf0,w,c
 13601  017474                     u9100:
 13602  017474  6EDF               	movwf	indf2,c
 13603  017476  50DF               	movf	indf2,w,c
 13604  017478  A4D8               	btfss	status,2,c
 13605  01747A  D7BF               	goto	l9285
 13606                           
 13607                           ; _strcpy: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsiz
      +                          e = 4, vargsize = 0
 13608  01747C  0EF8               	movlw	248
 13609  01747E  26E1               	addwf	fsr1l,f,c
 13610  017480  0EFF               	movlw	255
 13611  017482  22E2               	addwfc	fsr1h,f,c
 13612  017484  0012               	return		;funcret
 13613  017486                     __end_of_strcpy:
 13614                           	opt callstack 0
 13615                           
 13616 ;; *************** function _floorf *****************
 13617 ;; Defined at:
 13618 ;;		line 3 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/floorf.c"
 13619 ;; Parameters:    Size  Location     Type
 13620 ;;  x               4  [STACK] float 
 13621 ;; Auto vars:     Size  Location     Type
 13622 ;;  u               4  [STACK] struct .
 13623 ;;  m               4  [STACK] unsigned long 
 13624 ;;  e               2  [STACK] int 
 13625 ;; Return value:  Size  Location     Type
 13626 ;;                  4  [STACK] float 
 13627 ;; Registers used:
 13628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp+5, btemp+6, b
      +temp+7, btemp+8, btemp+9, btemp+10, btemp+11
 13629 ;; Tracked objects:
 13630 ;;		On entry : 0/4
 13631 ;;		On exit  : 0/0
 13632 ;;		Unchanged: 0/0
 13633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 13634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13636 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13637 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 13638 ;;Total ram usage:        0 bytes
 13639 ;; Hardware stack levels used:    1
 13640 ;; Hardware stack levels required when called:    6
 13641 ;; This function calls:
 13642 ;;		Nothing
 13643 ;; This function is called by:
 13644 ;;		_efgtoa
 13645 ;; This function uses a reentrant model
 13646 ;;
 13647                           
 13648                           	psect	text49
 13649  01483A                     __ptext49:
 13650                           	opt callstack 0
 13651  01483A                     _floorf:
 13652                           	opt callstack 0
 13653                           
 13654                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 13655  01483A  0E0A               	movlw	10
 13656  01483C  26E1               	addwf	fsr1l,f,c
 13657  01483E  0E00               	movlw	0
 13658  014840  22E2               	addwfc	fsr1h,f,c
 13659                           
 13660                           ;incstack = 0
 13661  014842  0060  F210  F03D   	movff	floorf@F524,btemp+8
 13662  014848  0060  F214  F03E   	movff	floorf@F524+1,btemp+9
 13663  01484E  0060  F218  F03F   	movff	floorf@F524+2,btemp+10
 13664  014854  0060  F21C  F040   	movff	floorf@F524+3,btemp+11
 13665                           
 13666                           ;stkvar	_u @ sp[(-10)+0]
 13667  01485A  0EF6               	movlw	-10
 13668  01485C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13669  014862  0EF7               	movlw	-9
 13670  014864  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13671  01486A  0EF8               	movlw	-8
 13672  01486C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13673  014872  0EF9               	movlw	-7
 13674  014874  0060  F103  FFE3   	movff	btemp+11,plusw1
 13675                           
 13676                           ;stkvar	_x @ sp[(-10)+-4]
 13677  01487A  0EF2               	movlw	-14
 13678  01487C  006F FF8C  F03D    	movff	plusw1,btemp+8
 13679  014882  0EF3               	movlw	-13
 13680  014884  006F FF8C  F03E    	movff	plusw1,btemp+9
 13681  01488A  0EF4               	movlw	-12
 13682  01488C  006F FF8C  F03F    	movff	plusw1,btemp+10
 13683  014892  0EF5               	movlw	-11
 13684  014894  006F FF8C  F040    	movff	plusw1,btemp+11
 13685                           
 13686                           ;stkvar	_u @ sp[(-10)+0]
 13687  01489A  0EF6               	movlw	-10
 13688  01489C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13689  0148A2  0EF7               	movlw	-9
 13690  0148A4  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13691  0148AA  0EF8               	movlw	-8
 13692  0148AC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 13693  0148B2  0EF9               	movlw	-7
 13694  0148B4  0060  F103  FFE3   	movff	btemp+11,plusw1
 13695  0148BA  0E81               	movlw	129
 13696  0148BC  6E3F               	movwf	(btemp+10)^0,c
 13697  0148BE  0EFF               	movlw	255
 13698  0148C0  6E40               	movwf	(btemp+11)^0,c
 13699                           
 13700                           ;stkvar	_u @ sp[(-10)+0]
 13701  0148C2  0EF6               	movlw	-10
 13702  0148C4  006F FF8C  F039    	movff	plusw1,btemp+4
 13703  0148CA  0EF7               	movlw	-9
 13704  0148CC  006F FF8C  F03A    	movff	plusw1,btemp+5
 13705  0148D2  0EF8               	movlw	-8
 13706  0148D4  006F FF8C  F03B    	movff	plusw1,btemp+6
 13707  0148DA  0EF9               	movlw	-7
 13708  0148DC  006F FF8C  F03C    	movff	plusw1,btemp+7
 13709  0148E2  0E18               	movlw	24
 13710  0148E4  D005               	goto	u5250
 13711  0148E6                     u5255:
 13712  0148E6  90D8               	bcf	status,0,c
 13713  0148E8  323C               	rrcf	(btemp+7)^0,f,c
 13714  0148EA  323B               	rrcf	(btemp+6)^0,f,c
 13715  0148EC  323A               	rrcf	(btemp+5)^0,f,c
 13716  0148EE  3239               	rrcf	(btemp+4)^0,f,c
 13717  0148F0                     u5250:
 13718  0148F0  2EE8               	decfsz	wreg,f,c
 13719  0148F2  D7F9               	goto	u5255
 13720  0148F4  0060  F0E4  F03D   	movff	btemp+4,btemp+8
 13721  0148FA  0060  F0E8  F03E   	movff	btemp+5,btemp+9
 13722  014900  0EFF               	movlw	255
 13723  014902  163D               	andwf	(btemp+8)^0,f,c
 13724  014904  0E00               	movlw	0
 13725  014906  163E               	andwf	(btemp+9)^0,f,c
 13726  014908  503F               	movf	(btemp+10)^0,w,c
 13727  01490A  263D               	addwf	(btemp+8)^0,f,c
 13728  01490C  5040               	movf	(btemp+11)^0,w,c
 13729  01490E  223E               	addwfc	(btemp+9)^0,f,c
 13730                           
 13731                           ;stkvar	_e @ sp[(-10)+8]
 13732  014910  0EFE               	movlw	-2
 13733  014912  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 13734  014918  0EFF               	movlw	-1
 13735  01491A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 13736                           
 13737                           ;stkvar	_e @ sp[(-10)+8]
 13738  014920  0EFF               	movlw	-1
 13739  014922  BEE3               	btfsc	plusw1,7,c
 13740  014924  D019               	goto	l6433
 13741  014926  0EFF               	movlw	-1
 13742  014928  50E3               	movf	plusw1,w,c
 13743  01492A  E108               	bnz	u5260
 13744  01492C  0EFE               	movlw	-2
 13745  01492E  006F FF8C  F035    	movff	plusw1,btemp
 13746  014934  0E17               	movlw	23
 13747  014936  5E35               	subwf	btemp^0,f,c
 13748  014938  A0D8               	btfss	status,0,c
 13749  01493A  D00E               	goto	l6433
 13750  01493C                     u5260:
 13751                           
 13752                           ;stkvar	_x @ sp[(-10)+-4]
 13753  01493C  0EF2               	movlw	-14
 13754  01493E  006F FF8C  F035    	movff	plusw1,btemp
 13755  014944  0EF3               	movlw	-13
 13756  014946  006F FF8C  F036    	movff	plusw1,btemp+1
 13757  01494C  0EF4               	movlw	-12
 13758  01494E  006F FF8C  F037    	movff	plusw1,btemp+2
 13759  014954  0EF5               	movlw	-11
 13760  014956  D11F               	goto	L15
 13761  014958                     l6433:
 13762                           
 13763                           ;stkvar	_e @ sp[(-10)+8]
 13764  014958  0EFF               	movlw	-1
 13765  01495A  BEE3               	btfsc	plusw1,7,c
 13766  01495C  D0B4               	goto	l6449
 13767                           
 13768                           ;stkvar	_e @ sp[(-10)+8]
 13769  01495E  0EFE               	movlw	-2
 13770  014960  006F FF8C  F040    	movff	plusw1,btemp+11
 13771  014966  0EFF               	movlw	255
 13772  014968  6E39               	movwf	(btemp+4)^0,c
 13773  01496A  0EFF               	movlw	255
 13774  01496C  6E3A               	movwf	(btemp+5)^0,c
 13775  01496E  0E7F               	movlw	127
 13776  014970  6E3B               	movwf	(btemp+6)^0,c
 13777  014972  0E00               	movlw	0
 13778  014974  6E3C               	movwf	(btemp+7)^0,c
 13779  014976                     u5285:
 13780  014976  6640               	tstfsz	(btemp+11)^0,c
 13781  014978  D001               	goto	u5286
 13782  01497A  D007               	goto	u5287
 13783  01497C                     u5286:
 13784  01497C  343C               	rlcf	(btemp+7)^0,w,c
 13785  01497E  323C               	rrcf	(btemp+7)^0,f,c
 13786  014980  323B               	rrcf	(btemp+6)^0,f,c
 13787  014982  323A               	rrcf	(btemp+5)^0,f,c
 13788  014984  3239               	rrcf	(btemp+4)^0,f,c
 13789  014986  2E40               	decfsz	(btemp+11)^0,f,c
 13790  014988  D7F6               	goto	u5285
 13791  01498A                     u5287:
 13792                           
 13793                           ;stkvar	_m @ sp[(-10)+4]
 13794  01498A  0EFA               	movlw	-6
 13795  01498C  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 13796  014992  0EFB               	movlw	-5
 13797  014994  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 13798  01499A  0EFC               	movlw	-4
 13799  01499C  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 13800  0149A2  0EFD               	movlw	-3
 13801  0149A4  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 13802                           
 13803                           ;stkvar	_m @ sp[(-10)+4]
 13804                           ;stkvar	_u @ sp[(-10)+0]
 13805  0149AA  0EF6               	movlw	-10
 13806  0149AC  006F FF8C  F03D    	movff	plusw1,btemp+8
 13807  0149B2  0EF7               	movlw	-9
 13808  0149B4  006F FF8C  F03E    	movff	plusw1,btemp+9
 13809  0149BA  0EF8               	movlw	-8
 13810  0149BC  006F FF8C  F03F    	movff	plusw1,btemp+10
 13811  0149C2  0EF9               	movlw	-7
 13812  0149C4  006F FF8C  F040    	movff	plusw1,btemp+11
 13813  0149CA  0EFA               	movlw	-6
 13814  0149CC  50E3               	movf	plusw1,w,c
 13815  0149CE  163D               	andwf	(btemp+8)^0,f,c
 13816  0149D0  0EFB               	movlw	-5
 13817  0149D2  50E3               	movf	plusw1,w,c
 13818  0149D4  163E               	andwf	(btemp+9)^0,f,c
 13819  0149D6  0EFC               	movlw	-4
 13820  0149D8  50E3               	movf	plusw1,w,c
 13821  0149DA  163F               	andwf	(btemp+10)^0,f,c
 13822  0149DC  0EFD               	movlw	-3
 13823  0149DE  50E3               	movf	plusw1,w,c
 13824  0149E0  1640               	andwf	(btemp+11)^0,f,c
 13825  0149E2  503D               	movf	(btemp+8)^0,w,c
 13826  0149E4  103E               	iorwf	(btemp+9)^0,w,c
 13827  0149E6  103F               	iorwf	(btemp+10)^0,w,c
 13828  0149E8  1040               	iorwf	(btemp+11)^0,w,c
 13829  0149EA  B4D8               	btfsc	status,2,c
 13830  0149EC  D7A7               	goto	u5260
 13831                           
 13832                           ;stkvar	_u @ sp[(-10)+0]
 13833  0149EE  0EF6               	movlw	-10
 13834  0149F0  006F FF8C  F03D    	movff	plusw1,btemp+8
 13835  0149F6  0EF7               	movlw	-9
 13836  0149F8  006F FF8C  F03E    	movff	plusw1,btemp+9
 13837  0149FE  0EF8               	movlw	-8
 13838  014A00  006F FF8C  F03F    	movff	plusw1,btemp+10
 13839  014A06  0EF9               	movlw	-7
 13840  014A08  006F FF8C  F040    	movff	plusw1,btemp+11
 13841  014A0E  0E20               	movlw	32
 13842  014A10  D005               	goto	u5300
 13843  014A12                     u5305:
 13844  014A12  90D8               	bcf	status,0,c
 13845  014A14  3240               	rrcf	(btemp+11)^0,f,c
 13846  014A16  323F               	rrcf	(btemp+10)^0,f,c
 13847  014A18  323E               	rrcf	(btemp+9)^0,f,c
 13848  014A1A  323D               	rrcf	(btemp+8)^0,f,c
 13849  014A1C                     u5300:
 13850  014A1C  2EE8               	decfsz	wreg,f,c
 13851  014A1E  D7F9               	goto	u5305
 13852  014A20  503D               	movf	(btemp+8)^0,w,c
 13853  014A22  B4D8               	btfsc	status,2,c
 13854  014A24  D028               	goto	l6447
 13855                           
 13856                           ;stkvar	_m @ sp[(-10)+4]
 13857                           ;stkvar	_u @ sp[(-10)+0]
 13858  014A26  0EF6               	movlw	-10
 13859  014A28  50E3               	movf	plusw1,w,c
 13860  014A2A  6E35               	movwf	btemp^0,c
 13861  014A2C  0EFA               	movlw	-6
 13862  014A2E  50E3               	movf	plusw1,w,c
 13863  014A30  2635               	addwf	btemp^0,f,c
 13864  014A32  0EF6               	movlw	-10
 13865  014A34  0060  F0D7  FFE3   	movff	btemp,plusw1
 13866  014A3A  0EF7               	movlw	-9
 13867  014A3C  50E3               	movf	plusw1,w,c
 13868  014A3E  6E35               	movwf	btemp^0,c
 13869  014A40  0EFB               	movlw	-5
 13870  014A42  50E3               	movf	plusw1,w,c
 13871  014A44  2235               	addwfc	btemp^0,f,c
 13872  014A46  0EF7               	movlw	-9
 13873  014A48  0060  F0D7  FFE3   	movff	btemp,plusw1
 13874  014A4E  0EF8               	movlw	-8
 13875  014A50  50E3               	movf	plusw1,w,c
 13876  014A52  6E35               	movwf	btemp^0,c
 13877  014A54  0EFC               	movlw	-4
 13878  014A56  50E3               	movf	plusw1,w,c
 13879  014A58  2235               	addwfc	btemp^0,f,c
 13880  014A5A  0EF8               	movlw	-8
 13881  014A5C  0060  F0D7  FFE3   	movff	btemp,plusw1
 13882  014A62  0EF9               	movlw	-7
 13883  014A64  50E3               	movf	plusw1,w,c
 13884  014A66  6E35               	movwf	btemp^0,c
 13885  014A68  0EFD               	movlw	-3
 13886  014A6A  50E3               	movf	plusw1,w,c
 13887  014A6C  2235               	addwfc	btemp^0,f,c
 13888  014A6E  0EF9               	movlw	-7
 13889  014A70  0060  F0D7  FFE3   	movff	btemp,plusw1
 13890  014A76                     l6447:
 13891                           
 13892                           ;stkvar	_m @ sp[(-10)+4]
 13893  014A76  0EFA               	movlw	-6
 13894  014A78  006F FF8C  F03D    	movff	plusw1,btemp+8
 13895  014A7E  0EFB               	movlw	-5
 13896  014A80  006F FF8C  F03E    	movff	plusw1,btemp+9
 13897  014A86  0EFC               	movlw	-4
 13898  014A88  006F FF8C  F03F    	movff	plusw1,btemp+10
 13899  014A8E  0EFD               	movlw	-3
 13900  014A90  006F FF8C  F040    	movff	plusw1,btemp+11
 13901  014A96  1C3D               	comf	(btemp+8)^0,w,c
 13902  014A98  6E39               	movwf	(btemp+4)^0,c
 13903  014A9A  1C3E               	comf	(btemp+9)^0,w,c
 13904  014A9C  6E3A               	movwf	(btemp+5)^0,c
 13905  014A9E  1C3F               	comf	(btemp+10)^0,w,c
 13906  014AA0  6E3B               	movwf	(btemp+6)^0,c
 13907  014AA2  1C40               	comf	(btemp+11)^0,w,c
 13908  014AA4  6E3C               	movwf	(btemp+7)^0,c
 13909                           
 13910                           ;stkvar	_u @ sp[(-10)+0]
 13911  014AA6  50E1               	movf	fsr1l,w,c
 13912  014AA8  0FF6               	addlw	-10
 13913  014AAA  6ED9               	movwf	fsr2l,c
 13914  014AAC  50E2               	movf	fsr1h,w,c
 13915  014AAE  6EDA               	movwf	fsr2h,c
 13916  014AB0  0EFF               	movlw	255
 13917  014AB2  22DA               	addwfc	fsr2h,f,c
 13918  014AB4  5039               	movf	(btemp+4)^0,w,c
 13919  014AB6  16DE               	andwf	postinc2,f,c
 13920  014AB8  503A               	movf	(btemp+5)^0,w,c
 13921  014ABA  16DE               	andwf	postinc2,f,c
 13922  014ABC  503B               	movf	(btemp+6)^0,w,c
 13923  014ABE  16DE               	andwf	postinc2,f,c
 13924  014AC0  503C               	movf	(btemp+7)^0,w,c
 13925  014AC2  16DE               	andwf	postinc2,f,c
 13926  014AC4  D05B               	goto	l6457
 13927  014AC6                     l6449:
 13928                           
 13929                           ;stkvar	_u @ sp[(-10)+0]
 13930  014AC6  0EF6               	movlw	-10
 13931  014AC8  006F FF8C  F03D    	movff	plusw1,btemp+8
 13932  014ACE  0EF7               	movlw	-9
 13933  014AD0  006F FF8C  F03E    	movff	plusw1,btemp+9
 13934  014AD6  0EF8               	movlw	-8
 13935  014AD8  006F FF8C  F03F    	movff	plusw1,btemp+10
 13936  014ADE  0EF9               	movlw	-7
 13937  014AE0  006F FF8C  F040    	movff	plusw1,btemp+11
 13938  014AE6  0E20               	movlw	32
 13939  014AE8  D005               	goto	u5320
 13940  014AEA                     u5325:
 13941  014AEA  90D8               	bcf	status,0,c
 13942  014AEC  3240               	rrcf	(btemp+11)^0,f,c
 13943  014AEE  323F               	rrcf	(btemp+10)^0,f,c
 13944  014AF0  323E               	rrcf	(btemp+9)^0,f,c
 13945  014AF2  323D               	rrcf	(btemp+8)^0,f,c
 13946  014AF4                     u5320:
 13947  014AF4  2EE8               	decfsz	wreg,f,c
 13948  014AF6  D7F9               	goto	u5325
 13949  014AF8  663D               	tstfsz	(btemp+8)^0,c
 13950  014AFA  D009               	goto	l6453
 13951                           
 13952                           ;stkvar	_u @ sp[(-10)+0]
 13953  014AFC  0EF6               	movlw	-10
 13954  014AFE  6AE3               	clrf	plusw1,c
 13955  014B00  0EF7               	movlw	-9
 13956  014B02  6AE3               	clrf	plusw1,c
 13957  014B04  0EF8               	movlw	-8
 13958  014B06  6AE3               	clrf	plusw1,c
 13959  014B08  0EF9               	movlw	-7
 13960  014B0A  6AE3               	clrf	plusw1,c
 13961  014B0C  D037               	goto	l6457
 13962  014B0E                     l6453:
 13963                           
 13964                           ;stkvar	_u @ sp[(-10)+0]
 13965  014B0E  0EF6               	movlw	-10
 13966  014B10  006F FF8C  F03D    	movff	plusw1,btemp+8
 13967  014B16  0EF7               	movlw	-9
 13968  014B18  006F FF8C  F03E    	movff	plusw1,btemp+9
 13969  014B1E  0EF8               	movlw	-8
 13970  014B20  006F FF8C  F03F    	movff	plusw1,btemp+10
 13971  014B26  0EF9               	movlw	-7
 13972  014B28  006F FF8C  F040    	movff	plusw1,btemp+11
 13973  014B2E  90D8               	bcf	status,0,c
 13974  014B30  343D               	rlcf	(btemp+8)^0,w,c
 13975  014B32  6E39               	movwf	(btemp+4)^0,c
 13976  014B34  343E               	rlcf	(btemp+9)^0,w,c
 13977  014B36  6E3A               	movwf	(btemp+5)^0,c
 13978  014B38  343F               	rlcf	(btemp+10)^0,w,c
 13979  014B3A  6E3B               	movwf	(btemp+6)^0,c
 13980  014B3C  3440               	rlcf	(btemp+11)^0,w,c
 13981  014B3E  6E3C               	movwf	(btemp+7)^0,c
 13982  014B40  5039               	movf	(btemp+4)^0,w,c
 13983  014B42  103A               	iorwf	(btemp+5)^0,w,c
 13984  014B44  103B               	iorwf	(btemp+6)^0,w,c
 13985  014B46  103C               	iorwf	(btemp+7)^0,w,c
 13986  014B48  B4D8               	btfsc	status,2,c
 13987  014B4A  D018               	goto	l6457
 13988  014B4C  0E00               	movlw	0
 13989  014B4E  6E3D               	movwf	(btemp+8)^0,c
 13990  014B50  0E00               	movlw	0
 13991  014B52  6E3E               	movwf	(btemp+9)^0,c
 13992  014B54  0E80               	movlw	128
 13993  014B56  6E3F               	movwf	(btemp+10)^0,c
 13994  014B58  0EBF               	movlw	191
 13995  014B5A  6E40               	movwf	(btemp+11)^0,c
 13996                           
 13997                           ;stkvar	_u @ sp[(-10)+0]
 13998  014B5C  0EF6               	movlw	-10
 13999  014B5E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14000  014B64  0EF7               	movlw	-9
 14001  014B66  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14002  014B6C  0EF8               	movlw	-8
 14003  014B6E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14004  014B74  0EF9               	movlw	-7
 14005  014B76  0060  F103  FFE3   	movff	btemp+11,plusw1
 14006  014B7C                     l6457:
 14007                           
 14008                           ;stkvar	_u @ sp[(-10)+0]
 14009  014B7C  0EF6               	movlw	-10
 14010  014B7E  006F FF8C  F035    	movff	plusw1,btemp
 14011  014B84  0EF7               	movlw	-9
 14012  014B86  006F FF8C  F036    	movff	plusw1,btemp+1
 14013  014B8C  0EF8               	movlw	-8
 14014  014B8E  006F FF8C  F037    	movff	plusw1,btemp+2
 14015  014B94  0EF9               	movlw	-7
 14016  014B96                     L15:
 14017  014B96  006F FF8C  F038    	movff	plusw1,btemp+3
 14018                           
 14019                           ; _floorf: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14020  014B9C  0EF2               	movlw	242
 14021  014B9E  26E1               	addwf	fsr1l,f,c
 14022  014BA0  0EFF               	movlw	255
 14023  014BA2  22E2               	addwfc	fsr1h,f,c
 14024  014BA4  0012               	return		;funcret
 14025  014BA6                     __end_of_floorf:
 14026                           	opt callstack 0
 14027                           
 14028 ;; *************** function ___fpclassifyf *****************
 14029 ;; Defined at:
 14030 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/__fpclassifyf.c"
 14031 ;; Parameters:    Size  Location     Type
 14032 ;;  x               4  [STACK] float 
 14033 ;; Auto vars:     Size  Location     Type
 14034 ;;  u               4  [STACK] struct .
 14035 ;;  e               2  [STACK] int 
 14036 ;; Return value:  Size  Location     Type
 14037 ;;                  2  [STACK] int 
 14038 ;; Registers used:
 14039 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+
      +10, btemp+11, prodl
 14040 ;; Tracked objects:
 14041 ;;		On entry : 0/4
 14042 ;;		On exit  : 0/0
 14043 ;;		Unchanged: 0/0
 14044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14049 ;;Total ram usage:        0 bytes
 14050 ;; Hardware stack levels used:    1
 14051 ;; Hardware stack levels required when called:    6
 14052 ;; This function calls:
 14053 ;;		Nothing
 14054 ;; This function is called by:
 14055 ;;		_efgtoa
 14056 ;; This function uses a reentrant model
 14057 ;;
 14058                           
 14059                           	psect	text50
 14060  0163BA                     __ptext50:
 14061                           	opt callstack 0
 14062  0163BA                     ___fpclassifyf:
 14063                           	opt callstack 0
 14064                           
 14065                           ; autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14066  0163BA  0E06               	movlw	6
 14067  0163BC  26E1               	addwf	fsr1l,f,c
 14068  0163BE  0E00               	movlw	0
 14069  0163C0  22E2               	addwfc	fsr1h,f,c
 14070                           
 14071                           ;incstack = 0
 14072  0163C2  0060  F220  F03D   	movff	___fpclassifyf@F463,btemp+8
 14073  0163C8  0060  F224  F03E   	movff	___fpclassifyf@F463+1,btemp+9
 14074  0163CE  0060  F228  F03F   	movff	___fpclassifyf@F463+2,btemp+10
 14075  0163D4  0060  F22C  F040   	movff	___fpclassifyf@F463+3,btemp+11
 14076                           
 14077                           ;stkvar	_u @ sp[(-6)+0]
 14078  0163DA  0EFA               	movlw	-6
 14079  0163DC  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14080  0163E2  0EFB               	movlw	-5
 14081  0163E4  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14082  0163EA  0EFC               	movlw	-4
 14083  0163EC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14084  0163F2  0EFD               	movlw	-3
 14085  0163F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 14086                           
 14087                           ;stkvar	_x @ sp[(-6)+-4]
 14088  0163FA  0EF6               	movlw	-10
 14089  0163FC  006F FF8C  F03D    	movff	plusw1,btemp+8
 14090  016402  0EF7               	movlw	-9
 14091  016404  006F FF8C  F03E    	movff	plusw1,btemp+9
 14092  01640A  0EF8               	movlw	-8
 14093  01640C  006F FF8C  F03F    	movff	plusw1,btemp+10
 14094  016412  0EF9               	movlw	-7
 14095  016414  006F FF8C  F040    	movff	plusw1,btemp+11
 14096                           
 14097                           ;stkvar	_u @ sp[(-6)+0]
 14098  01641A  0EFA               	movlw	-6
 14099  01641C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14100  016422  0EFB               	movlw	-5
 14101  016424  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14102  01642A  0EFC               	movlw	-4
 14103  01642C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14104  016432  0EFD               	movlw	-3
 14105  016434  0060  F103  FFE3   	movff	btemp+11,plusw1
 14106                           
 14107                           ;stkvar	_u @ sp[(-6)+0]
 14108  01643A  0EFA               	movlw	-6
 14109  01643C  006F FF8C  F03D    	movff	plusw1,btemp+8
 14110  016442  0EFB               	movlw	-5
 14111  016444  006F FF8C  F03E    	movff	plusw1,btemp+9
 14112  01644A  0EFC               	movlw	-4
 14113  01644C  006F FF8C  F03F    	movff	plusw1,btemp+10
 14114  016452  0EFD               	movlw	-3
 14115  016454  006F FF8C  F040    	movff	plusw1,btemp+11
 14116  01645A  0E18               	movlw	24
 14117  01645C  D005               	goto	u5130
 14118  01645E                     u5135:
 14119  01645E  90D8               	bcf	status,0,c
 14120  016460  3240               	rrcf	(btemp+11)^0,f,c
 14121  016462  323F               	rrcf	(btemp+10)^0,f,c
 14122  016464  323E               	rrcf	(btemp+9)^0,f,c
 14123  016466  323D               	rrcf	(btemp+8)^0,f,c
 14124  016468                     u5130:
 14125  016468  2EE8               	decfsz	wreg,f,c
 14126  01646A  D7F9               	goto	u5135
 14127  01646C  0060  F0F4  F03B   	movff	btemp+8,btemp+6
 14128  016472  0060  F0F8  F03C   	movff	btemp+9,btemp+7
 14129  016478  0EFF               	movlw	255
 14130  01647A  163B               	andwf	(btemp+6)^0,f,c
 14131  01647C  0E00               	movlw	0
 14132  01647E  163C               	andwf	(btemp+7)^0,f,c
 14133                           
 14134                           ;stkvar	_e @ sp[(-6)+4]
 14135  016480  0EFE               	movlw	-2
 14136  016482  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 14137  016488  0EFF               	movlw	-1
 14138  01648A  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 14139                           
 14140                           ;stkvar	_e @ sp[(-6)+4]
 14141  016490  0EFE               	movlw	-2
 14142  016492  006F FF8C  F035    	movff	plusw1,btemp
 14143  016498  0EFF               	movlw	-1
 14144  01649A  50E3               	movf	plusw1,w,c
 14145  01649C  1035               	iorwf	btemp^0,w,c
 14146  01649E  A4D8               	btfss	status,2,c
 14147  0164A0  D023               	goto	l6395
 14148                           
 14149                           ;stkvar	_u @ sp[(-6)+0]
 14150  0164A2  0EFA               	movlw	-6
 14151  0164A4  006F FF8C  F03D    	movff	plusw1,btemp+8
 14152  0164AA  0EFB               	movlw	-5
 14153  0164AC  006F FF8C  F03E    	movff	plusw1,btemp+9
 14154  0164B2  0EFC               	movlw	-4
 14155  0164B4  006F FF8C  F03F    	movff	plusw1,btemp+10
 14156  0164BA  0EFD               	movlw	-3
 14157  0164BC  006F FF8C  F040    	movff	plusw1,btemp+11
 14158  0164C2  90D8               	bcf	status,0,c
 14159  0164C4  343D               	rlcf	(btemp+8)^0,w,c
 14160  0164C6  6E39               	movwf	(btemp+4)^0,c
 14161  0164C8  343E               	rlcf	(btemp+9)^0,w,c
 14162  0164CA  6E3A               	movwf	(btemp+5)^0,c
 14163  0164CC  343F               	rlcf	(btemp+10)^0,w,c
 14164  0164CE  6E3B               	movwf	(btemp+6)^0,c
 14165  0164D0  3440               	rlcf	(btemp+11)^0,w,c
 14166  0164D2  6E3C               	movwf	(btemp+7)^0,c
 14167  0164D4  5039               	movf	(btemp+4)^0,w,c
 14168  0164D6  103A               	iorwf	(btemp+5)^0,w,c
 14169  0164D8  103B               	iorwf	(btemp+6)^0,w,c
 14170  0164DA  103C               	iorwf	(btemp+7)^0,w,c
 14171  0164DC  A4D8               	btfss	status,2,c
 14172  0164DE  D002               	goto	l6391
 14173  0164E0  0E02               	movlw	2
 14174  0164E2  D02E               	goto	L16
 14175  0164E4                     l6391:
 14176  0164E4  0E03               	movlw	3
 14177  0164E6  D02C               	goto	L16
 14178  0164E8                     l6395:
 14179                           
 14180                           ;stkvar	_e @ sp[(-6)+4]
 14181  0164E8  0EFE               	movlw	-2
 14182  0164EA  28E3               	incf	plusw1,w,c
 14183  0164EC  E128               	bnz	l6401
 14184  0164EE  0EFF               	movlw	-1
 14185  0164F0  50E3               	movf	plusw1,w,c
 14186  0164F2  A4D8               	btfss	status,2,c
 14187  0164F4  D024               	goto	l6401
 14188                           
 14189                           ;stkvar	_u @ sp[(-6)+0]
 14190  0164F6  0EFA               	movlw	-6
 14191  0164F8  006F FF8C  F03D    	movff	plusw1,btemp+8
 14192  0164FE  0EFB               	movlw	-5
 14193  016500  006F FF8C  F03E    	movff	plusw1,btemp+9
 14194  016506  0EFC               	movlw	-4
 14195  016508  006F FF8C  F03F    	movff	plusw1,btemp+10
 14196  01650E  0EFD               	movlw	-3
 14197  016510  006F FF8C  F040    	movff	plusw1,btemp+11
 14198  016516  0E09               	movlw	9
 14199  016518                     u5175:
 14200  016518  90D8               	bcf	status,0,c
 14201  01651A  363D               	rlcf	(btemp+8)^0,f,c
 14202  01651C  363E               	rlcf	(btemp+9)^0,f,c
 14203  01651E  363F               	rlcf	(btemp+10)^0,f,c
 14204  016520  3640               	rlcf	(btemp+11)^0,f,c
 14205  016522  2EE8               	decfsz	wreg,f,c
 14206  016524  D7F9               	goto	u5175
 14207  016526  503D               	movf	(btemp+8)^0,w,c
 14208  016528  103E               	iorwf	(btemp+9)^0,w,c
 14209  01652A  103F               	iorwf	(btemp+10)^0,w,c
 14210  01652C  1040               	iorwf	(btemp+11)^0,w,c
 14211  01652E  A4D8               	btfss	status,2,c
 14212  016530  D002               	goto	u5180
 14213  016532  0E01               	movlw	1
 14214  016534  D001               	goto	u5190
 14215  016536                     u5180:
 14216  016536  0E00               	movlw	0
 14217  016538                     u5190:
 14218  016538  6E35               	movwf	btemp^0,c
 14219  01653A  6A36               	clrf	(btemp+1)^0,c
 14220  01653C  D004               	goto	l2689
 14221  01653E                     l6401:
 14222  01653E  0E04               	movlw	4
 14223  016540                     L16:
 14224  016540  6E35               	movwf	btemp^0,c
 14225  016542  0E00               	movlw	0
 14226  016544  6E36               	movwf	(btemp+1)^0,c
 14227  016546                     l2689:
 14228                           
 14229                           ; ___fpclassifyf: autosize = 6, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4,
      +                           argsize = 4, vargsize = 0
 14230  016546  0EF6               	movlw	246
 14231  016548  26E1               	addwf	fsr1l,f,c
 14232  01654A  0EFF               	movlw	255
 14233  01654C  22E2               	addwfc	fsr1h,f,c
 14234  01654E  0012               	return		;funcret
 14235  016550                     __end_of___fpclassifyf:
 14236                           	opt callstack 0
 14237                           
 14238 ;; *************** function ___fltol *****************
 14239 ;; Defined at:
 14240 ;;		line 43 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fltol.c"
 14241 ;; Parameters:    Size  Location     Type
 14242 ;;  f1              4  [STACK] int 
 14243 ;; Auto vars:     Size  Location     Type
 14244 ;;  exp1            1  [STACK] unsigned char 
 14245 ;;  sign1           1  [STACK] unsigned char 
 14246 ;; Return value:  Size  Location     Type
 14247 ;;                  4  [STACK] long 
 14248 ;; Registers used:
 14249 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 14250 ;; Tracked objects:
 14251 ;;		On entry : 0/4
 14252 ;;		On exit  : 0/0
 14253 ;;		Unchanged: 0/0
 14254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14259 ;;Total ram usage:        0 bytes
 14260 ;; Hardware stack levels used:    1
 14261 ;; Hardware stack levels required when called:    6
 14262 ;; This function calls:
 14263 ;;		Nothing
 14264 ;; This function is called by:
 14265 ;;		_efgtoa
 14266 ;; This function uses a reentrant model
 14267 ;;
 14268                           
 14269                           	psect	text51
 14270  0166D0                     __ptext51:
 14271                           	opt callstack 0
 14272  0166D0                     ___fltol:
 14273                           	opt callstack 0
 14274                           
 14275                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14276  0166D0  52E6               	movf	postinc1,f,c
 14277  0166D2  52E6               	movf	postinc1,f,c
 14278                           
 14279                           ;stkvar	_f1 @ sp[(-2)+-4]
 14280                           
 14281                           ;incstack = 0
 14282  0166D4  0EFA               	movlw	-6
 14283  0166D6  006F FF8C  F03D    	movff	plusw1,btemp+8
 14284  0166DC  0EFB               	movlw	-5
 14285  0166DE  006F FF8C  F03E    	movff	plusw1,btemp+9
 14286  0166E4  0EFC               	movlw	-4
 14287  0166E6  006F FF8C  F03F    	movff	plusw1,btemp+10
 14288  0166EC  0EFD               	movlw	-3
 14289  0166EE  006F FF8C  F040    	movff	plusw1,btemp+11
 14290  0166F4  0E18               	movlw	24
 14291  0166F6  D005               	goto	u6340
 14292  0166F8                     u6345:
 14293  0166F8  90D8               	bcf	status,0,c
 14294  0166FA  3240               	rrcf	(btemp+11)^0,f,c
 14295  0166FC  323F               	rrcf	(btemp+10)^0,f,c
 14296  0166FE  323E               	rrcf	(btemp+9)^0,f,c
 14297  016700  323D               	rrcf	(btemp+8)^0,f,c
 14298  016702                     u6340:
 14299  016702  2EE8               	decfsz	wreg,f,c
 14300  016704  D7F9               	goto	u6345
 14301                           
 14302                           ;stkvar	_exp1 @ sp[(-2)+0]
 14303  016706  0EFE               	movlw	-2
 14304  016708  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14305  01670E  0EFE               	movlw	-2
 14306  016710  50E3               	movf	plusw1,w,c
 14307  016712  A4D8               	btfss	status,2,c
 14308  016714  D006               	goto	l7021
 14309  016716                     u6350:
 14310  016716  0E00               	movlw	0
 14311  016718  6E35               	movwf	btemp^0,c
 14312  01671A  6A36               	clrf	(btemp+1)^0,c
 14313  01671C  6A37               	clrf	(btemp+2)^0,c
 14314  01671E  6A38               	clrf	(btemp+3)^0,c
 14315  016720  D08B               	goto	l2305
 14316  016722                     l7021:
 14317                           
 14318                           ;stkvar	_f1 @ sp[(-2)+-4]
 14319  016722  0EFA               	movlw	-6
 14320  016724  006F FF8C  F03D    	movff	plusw1,btemp+8
 14321  01672A  0EFB               	movlw	-5
 14322  01672C  006F FF8C  F03E    	movff	plusw1,btemp+9
 14323  016732  0EFC               	movlw	-4
 14324  016734  006F FF8C  F03F    	movff	plusw1,btemp+10
 14325  01673A  0EFD               	movlw	-3
 14326  01673C  006F FF8C  F040    	movff	plusw1,btemp+11
 14327  016742  0E20               	movlw	32
 14328  016744  D005               	goto	u6360
 14329  016746                     u6365:
 14330  016746  90D8               	bcf	status,0,c
 14331  016748  3240               	rrcf	(btemp+11)^0,f,c
 14332  01674A  323F               	rrcf	(btemp+10)^0,f,c
 14333  01674C  323E               	rrcf	(btemp+9)^0,f,c
 14334  01674E  323D               	rrcf	(btemp+8)^0,f,c
 14335  016750                     u6360:
 14336  016750  2EE8               	decfsz	wreg,f,c
 14337  016752  D7F9               	goto	u6365
 14338                           
 14339                           ;stkvar	_sign1 @ sp[(-2)+1]
 14340  016754  0EFF               	movlw	-1
 14341  016756  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14342                           
 14343                           ;stkvar	_f1 @ sp[(-2)+-4]
 14344  01675C  0EFC               	movlw	-4
 14345  01675E  8EE3               	bsf	plusw1,7,c
 14346                           
 14347                           ;stkvar	_f1 @ sp[(-2)+-4]
 14348  016760  50E1               	movf	fsr1l,w,c
 14349  016762  0FFA               	addlw	-6
 14350  016764  6ED9               	movwf	fsr2l,c
 14351  016766  50E2               	movf	fsr1h,w,c
 14352  016768  6EDA               	movwf	fsr2h,c
 14353  01676A  0EFF               	movlw	255
 14354  01676C  22DA               	addwfc	fsr2h,f,c
 14355  01676E  0EFF               	movlw	255
 14356  016770  16DE               	andwf	postinc2,f,c
 14357  016772  0EFF               	movlw	255
 14358  016774  16DE               	andwf	postinc2,f,c
 14359  016776  0EFF               	movlw	255
 14360  016778  16DE               	andwf	postinc2,f,c
 14361  01677A  0E00               	movlw	0
 14362  01677C  16DE               	andwf	postinc2,f,c
 14363                           
 14364                           ;stkvar	_exp1 @ sp[(-2)+0]
 14365  01677E  0EFE               	movlw	-2
 14366  016780  006F FF8C  F035    	movff	plusw1,btemp
 14367  016786  0E96               	movlw	150
 14368  016788  5E35               	subwf	btemp^0,f,c
 14369  01678A  0EFE               	movlw	-2
 14370  01678C  0060  F0D7  FFE3   	movff	btemp,plusw1
 14371                           
 14372                           ;stkvar	_exp1 @ sp[(-2)+0]
 14373  016792  0EFE               	movlw	-2
 14374  016794  AEE3               	btfss	plusw1,7,c
 14375  016796  D014               	goto	l7039
 14376                           
 14377                           ;stkvar	_exp1 @ sp[(-2)+0]
 14378  016798  0EFE               	movlw	-2
 14379  01679A  50E3               	movf	plusw1,w,c
 14380  01679C  0A80               	xorlw	128
 14381  01679E  0F97               	addlw	151
 14382  0167A0  A0D8               	btfss	status,0,c
 14383  0167A2  D7B9               	goto	u6350
 14384  0167A4                     l7037:
 14385                           
 14386                           ;stkvar	_f1 @ sp[(-2)+-4]
 14387  0167A4  90D8               	bcf	status,0,c
 14388  0167A6  0EFD               	movlw	-3
 14389  0167A8  32E3               	rrcf	plusw1,f,c
 14390  0167AA  0EFC               	movlw	-4
 14391  0167AC  32E3               	rrcf	plusw1,f,c
 14392  0167AE  0EFB               	movlw	-5
 14393  0167B0  32E3               	rrcf	plusw1,f,c
 14394  0167B2  0EFA               	movlw	-6
 14395  0167B4  32E3               	rrcf	plusw1,f,c
 14396                           
 14397                           ;stkvar	_exp1 @ sp[(-2)+0]
 14398  0167B6  0EFE               	movlw	-2
 14399  0167B8  2AE3               	incf	plusw1,f,c
 14400  0167BA  B4D8               	btfsc	status,2,c
 14401  0167BC  D018               	goto	u6410
 14402  0167BE  D7F2               	goto	l7037
 14403  0167C0                     l7039:
 14404                           
 14405                           ;stkvar	_exp1 @ sp[(-2)+0]
 14406  0167C0  0EFE               	movlw	-2
 14407  0167C2  006F FF8C  F035    	movff	plusw1,btemp
 14408  0167C8  0E1F               	movlw	31
 14409  0167CA  6435               	cpfsgt	btemp^0,c
 14410  0167CC  D00C               	goto	l7047
 14411  0167CE  D7A3               	goto	u6350
 14412  0167D0                     l7045:
 14413                           
 14414                           ;stkvar	_f1 @ sp[(-2)+-4]
 14415  0167D0  90D8               	bcf	status,0,c
 14416  0167D2  0EFA               	movlw	-6
 14417  0167D4  36E3               	rlcf	plusw1,f,c
 14418  0167D6  0EFB               	movlw	-5
 14419  0167D8  36E3               	rlcf	plusw1,f,c
 14420  0167DA  0EFC               	movlw	-4
 14421  0167DC  36E3               	rlcf	plusw1,f,c
 14422  0167DE  0EFD               	movlw	-3
 14423  0167E0  36E3               	rlcf	plusw1,f,c
 14424                           
 14425                           ;stkvar	_exp1 @ sp[(-2)+0]
 14426  0167E2  0EFE               	movlw	-2
 14427  0167E4  06E3               	decf	plusw1,f,c
 14428  0167E6                     l7047:
 14429                           
 14430                           ;stkvar	_exp1 @ sp[(-2)+0]
 14431  0167E6  0EFE               	movlw	-2
 14432  0167E8  50E3               	movf	plusw1,w,c
 14433  0167EA  A4D8               	btfss	status,2,c
 14434  0167EC  D7F1               	goto	l7045
 14435  0167EE                     u6410:
 14436                           
 14437                           ;stkvar	_sign1 @ sp[(-2)+1]
 14438  0167EE  0EFF               	movlw	-1
 14439  0167F0  50E3               	movf	plusw1,w,c
 14440  0167F2  B4D8               	btfsc	status,2,c
 14441  0167F4  D011               	goto	u6430
 14442                           
 14443                           ;stkvar	_f1 @ sp[(-2)+-4]
 14444                           ;stkvar	_f1 @ sp[(-2)+-4]
 14445  0167F6  0EFA               	movlw	-6
 14446  0167F8  6CE3               	negf	plusw1,c
 14447  0167FA  0EFB               	movlw	-5
 14448  0167FC  1EE3               	comf	plusw1,f,c
 14449  0167FE  0EFC               	movlw	-4
 14450  016800  1EE3               	comf	plusw1,f,c
 14451  016802  0EFD               	movlw	-3
 14452  016804  1EE3               	comf	plusw1,f,c
 14453  016806  E308               	bnc	u6430
 14454  016808  0EFB               	movlw	-5
 14455  01680A  2AE3               	incf	plusw1,f,c
 14456  01680C  E305               	bnc	u6430
 14457  01680E  0EFC               	movlw	-4
 14458  016810  2AE3               	incf	plusw1,f,c
 14459  016812  E302               	bnc	u6430
 14460  016814  0EFD               	movlw	-3
 14461  016816  2AE3               	incf	plusw1,f,c
 14462  016818                     u6430:
 14463                           
 14464                           ;stkvar	_f1 @ sp[(-2)+-4]
 14465  016818  0EFA               	movlw	-6
 14466  01681A  006F FF8C  F035    	movff	plusw1,btemp
 14467  016820  0EFB               	movlw	-5
 14468  016822  006F FF8C  F036    	movff	plusw1,btemp+1
 14469  016828  0EFC               	movlw	-4
 14470  01682A  006F FF8C  F037    	movff	plusw1,btemp+2
 14471  016830  0EFD               	movlw	-3
 14472  016832  006F FF8C  F038    	movff	plusw1,btemp+3
 14473  016838                     l2305:
 14474                           
 14475                           ; ___fltol: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 14476  016838  0EFA               	movlw	250
 14477  01683A  26E1               	addwf	fsr1l,f,c
 14478  01683C  0EFF               	movlw	255
 14479  01683E  22E2               	addwfc	fsr1h,f,c
 14480  016840  0012               	return		;funcret
 14481  016842                     __end_of___fltol:
 14482                           	opt callstack 0
 14483                           
 14484 ;; *************** function ___flsub *****************
 14485 ;; Defined at:
 14486 ;;		line 245 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14487 ;; Parameters:    Size  Location     Type
 14488 ;;  b               4  [STACK] long 
 14489 ;;  a               4  [STACK] long 
 14490 ;; Auto vars:     Size  Location     Type
 14491 ;;		None
 14492 ;; Return value:  Size  Location     Type
 14493 ;;                  4  [STACK] long 
 14494 ;; Registers used:
 14495 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14496 ;; Tracked objects:
 14497 ;;		On entry : 0/4
 14498 ;;		On exit  : 0/0
 14499 ;;		Unchanged: 0/0
 14500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14505 ;;Total ram usage:        0 bytes
 14506 ;; Hardware stack levels used:    1
 14507 ;; Hardware stack levels required when called:    7
 14508 ;; This function calls:
 14509 ;;		___fladd
 14510 ;; This function is called by:
 14511 ;;		_conv_raw_result
 14512 ;;		_lp_filter
 14513 ;;		_efgtoa
 14514 ;; This function uses a reentrant model
 14515 ;;
 14516                           
 14517                           	psect	text52
 14518  018350                     __ptext52:
 14519                           	opt callstack 0
 14520  018350                     ___flsub:
 14521                           	opt callstack 16
 14522                           
 14523                           ;stkvar	_a @ sp[(0)+-8]
 14524                           
 14525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14526                           ;incstack = 0
 14527  018350  0EFB               	movlw	-5
 14528  018352  7EE3               	btg	plusw1,7,c
 14529                           
 14530                           ;stkvar	_a @ sp[(0)+-8]
 14531  018354  0EF8               	movlw	-8
 14532  018356  006F FF8F FFE6     	movff	plusw1,postinc1
 14533  01835C  006F FF8F FFE6     	movff	plusw1,postinc1
 14534  018362  006F FF8F FFE6     	movff	plusw1,postinc1
 14535  018368  006F FF8F FFE6     	movff	plusw1,postinc1
 14536                           
 14537                           ;stkvar	_b @ sp[(-4)+-4]
 14538  01836E  0EF8               	movlw	-8
 14539  018370  006F FF8F FFE6     	movff	plusw1,postinc1
 14540  018376  006F FF8F FFE6     	movff	plusw1,postinc1
 14541  01837C  006F FF8F FFE6     	movff	plusw1,postinc1
 14542  018382  006F FF8F FFE6     	movff	plusw1,postinc1
 14543  018388  EC0D  F095         	call	___fladd	;wreg free
 14544                           
 14545                           ; ___flsub: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 14546  01838C  0EF8               	movlw	248
 14547  01838E  26E1               	addwf	fsr1l,f,c
 14548  018390  0EFF               	movlw	255
 14549  018392  22E2               	addwfc	fsr1h,f,c
 14550  018394  0012               	return		;funcret
 14551  018396                     __end_of___flsub:
 14552                           	opt callstack 0
 14553                           
 14554 ;; *************** function ___fladd *****************
 14555 ;; Defined at:
 14556 ;;		line 10 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcadd.c"
 14557 ;; Parameters:    Size  Location     Type
 14558 ;;  b               4  [STACK] long 
 14559 ;;  a               4  [STACK] long 
 14560 ;; Auto vars:     Size  Location     Type
 14561 ;;  grs             1  [STACK] unsigned char 
 14562 ;;  bexp            1  [STACK] unsigned char 
 14563 ;;  aexp            1  [STACK] unsigned char 
 14564 ;;  signs           1  [STACK] unsigned char 
 14565 ;; Return value:  Size  Location     Type
 14566 ;;                  4  [STACK] unsigned char 
 14567 ;; Registers used:
 14568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11
 14569 ;; Tracked objects:
 14570 ;;		On entry : 0/4
 14571 ;;		On exit  : 0/0
 14572 ;;		Unchanged: 0/0
 14573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 14574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14575 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14576 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14577 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 14578 ;;Total ram usage:        0 bytes
 14579 ;; Hardware stack levels used:    1
 14580 ;; Hardware stack levels required when called:    6
 14581 ;; This function calls:
 14582 ;;		Nothing
 14583 ;; This function is called by:
 14584 ;;		_lp_filter
 14585 ;;		_efgtoa
 14586 ;;		___flsub
 14587 ;; This function uses a reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text53
 14591  012A1A                     __ptext53:
 14592                           	opt callstack 0
 14593  012A1A                     ___fladd:
 14594                           	opt callstack 0
 14595                           
 14596                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 14597  012A1A  52E6               	movf	postinc1,f,c
 14598  012A1C  52E6               	movf	postinc1,f,c
 14599  012A1E  52E6               	movf	postinc1,f,c
 14600  012A20  52E6               	movf	postinc1,f,c
 14601                           
 14602                           ;stkvar	_b @ sp[(-4)+-4]
 14603                           
 14604                           ;incstack = 0
 14605  012A22  0EFB               	movlw	251
 14606  012A24  24E1               	addwf	fsr1l,w,c
 14607  012A26  6ED9               	movwf	fsr2l,c
 14608  012A28  0EFF               	movlw	255
 14609  012A2A  20E2               	addwfc	fsr1h,w,c
 14610  012A2C  6EDA               	movwf	fsr2h,c
 14611  012A2E  50DF               	movf	indf2,w,c
 14612  012A30  6E40               	movwf	(btemp+11)^0,c
 14613  012A32  0E80               	movlw	128
 14614  012A34  1640               	andwf	(btemp+11)^0,f,c
 14615                           
 14616                           ;stkvar	_signs @ sp[(-4)+3]
 14617  012A36  0EFF               	movlw	-1
 14618  012A38  0060  F103  FFE3   	movff	btemp+11,plusw1
 14619                           
 14620                           ;stkvar	_b @ sp[(-4)+-4]
 14621  012A3E  0EFB               	movlw	251
 14622  012A40  24E1               	addwf	fsr1l,w,c
 14623  012A42  6ED9               	movwf	fsr2l,c
 14624  012A44  0EFF               	movlw	255
 14625  012A46  20E2               	addwfc	fsr1h,w,c
 14626  012A48  6EDA               	movwf	fsr2h,c
 14627  012A4A  50DF               	movf	indf2,w,c
 14628  012A4C  6E40               	movwf	(btemp+11)^0,c
 14629  012A4E  90D8               	bcf	status,0,c
 14630  012A50  3440               	rlcf	(btemp+11)^0,w,c
 14631  012A52  6E3F               	movwf	(btemp+10)^0,c
 14632                           
 14633                           ;stkvar	_bexp @ sp[(-4)+1]
 14634  012A54  0EFD               	movlw	-3
 14635  012A56  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14636                           
 14637                           ;stkvar	_b @ sp[(-4)+-4]
 14638  012A5C  0EFA               	movlw	250
 14639  012A5E  24E1               	addwf	fsr1l,w,c
 14640  012A60  6ED9               	movwf	fsr2l,c
 14641  012A62  0EFF               	movlw	255
 14642  012A64  20E2               	addwfc	fsr1h,w,c
 14643  012A66  6EDA               	movwf	fsr2h,c
 14644  012A68  AEDF               	btfss	indf2,7,c
 14645  012A6A  D002               	goto	l6135
 14646                           
 14647                           ;stkvar	_bexp @ sp[(-4)+1]
 14648  012A6C  0EFD               	movlw	-3
 14649  012A6E  80E3               	bsf	plusw1,0,c
 14650  012A70                     l6135:
 14651                           
 14652                           ;stkvar	_bexp @ sp[(-4)+1]
 14653  012A70  0EFD               	movlw	-3
 14654  012A72  50E3               	movf	plusw1,w,c
 14655  012A74  B4D8               	btfsc	status,2,c
 14656  012A76  D027               	goto	l6145
 14657                           
 14658                           ;stkvar	_bexp @ sp[(-4)+1]
 14659  012A78  0EFD               	movlw	-3
 14660  012A7A  28E3               	incf	plusw1,w,c
 14661  012A7C  A4D8               	btfss	status,2,c
 14662  012A7E  D018               	goto	l6141
 14663  012A80  0E00               	movlw	0
 14664  012A82  6E3D               	movwf	(btemp+8)^0,c
 14665  012A84  0E00               	movlw	0
 14666  012A86  6E3E               	movwf	(btemp+9)^0,c
 14667  012A88  0E00               	movlw	0
 14668  012A8A  6E3F               	movwf	(btemp+10)^0,c
 14669  012A8C  0E00               	movlw	0
 14670  012A8E  6E40               	movwf	(btemp+11)^0,c
 14671                           
 14672                           ;stkvar	_b @ sp[(-4)+-4]
 14673  012A90  0EF8               	movlw	-8
 14674  012A92  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14675  012A98  0EF9               	movlw	-7
 14676  012A9A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14677  012AA0  0EFA               	movlw	-6
 14678  012AA2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14679  012AA8  0EFB               	movlw	-5
 14680  012AAA  0060  F103  FFE3   	movff	btemp+11,plusw1
 14681  012AB0                     l6141:
 14682                           
 14683                           ;stkvar	_b @ sp[(-4)+-4]
 14684  012AB0  0EFA               	movlw	-6
 14685  012AB2  8EE3               	bsf	plusw1,7,c
 14686                           
 14687                           ;stkvar	_b @ sp[(-4)+-4]
 14688  012AB4  0EFB               	movlw	251
 14689  012AB6  24E1               	addwf	fsr1l,w,c
 14690  012AB8  6ED9               	movwf	fsr2l,c
 14691  012ABA  0EFF               	movlw	255
 14692  012ABC  20E2               	addwfc	fsr1h,w,c
 14693  012ABE  6EDA               	movwf	fsr2h,c
 14694  012AC0  0E00               	movlw	0
 14695  012AC2  6EDF               	movwf	indf2,c
 14696  012AC4  D018               	goto	l6147
 14697  012AC6                     l6145:
 14698  012AC6  0E00               	movlw	0
 14699  012AC8  6E3D               	movwf	(btemp+8)^0,c
 14700  012ACA  0E00               	movlw	0
 14701  012ACC  6E3E               	movwf	(btemp+9)^0,c
 14702  012ACE  0E00               	movlw	0
 14703  012AD0  6E3F               	movwf	(btemp+10)^0,c
 14704  012AD2  0E00               	movlw	0
 14705  012AD4  6E40               	movwf	(btemp+11)^0,c
 14706                           
 14707                           ;stkvar	_b @ sp[(-4)+-4]
 14708  012AD6  0EF8               	movlw	-8
 14709  012AD8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14710  012ADE  0EF9               	movlw	-7
 14711  012AE0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14712  012AE6  0EFA               	movlw	-6
 14713  012AE8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14714  012AEE  0EFB               	movlw	-5
 14715  012AF0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14716  012AF6                     l6147:
 14717                           
 14718                           ;stkvar	_a @ sp[(-4)+-8]
 14719  012AF6  0EF7               	movlw	247
 14720  012AF8  24E1               	addwf	fsr1l,w,c
 14721  012AFA  6ED9               	movwf	fsr2l,c
 14722  012AFC  0EFF               	movlw	255
 14723  012AFE  20E2               	addwfc	fsr1h,w,c
 14724  012B00  6EDA               	movwf	fsr2h,c
 14725  012B02  50DF               	movf	indf2,w,c
 14726  012B04  6E40               	movwf	(btemp+11)^0,c
 14727  012B06  0E80               	movlw	128
 14728  012B08  1640               	andwf	(btemp+11)^0,f,c
 14729                           
 14730                           ;stkvar	_aexp @ sp[(-4)+2]
 14731  012B0A  0EFE               	movlw	-2
 14732  012B0C  0060  F103  FFE3   	movff	btemp+11,plusw1
 14733                           
 14734                           ;stkvar	_signs @ sp[(-4)+3]
 14735                           ;stkvar	_aexp @ sp[(-4)+2]
 14736  012B12  50E1               	movf	fsr1l,w,c
 14737  012B14  0FFE               	addlw	-2
 14738  012B16  6ED9               	movwf	fsr2l,c
 14739  012B18  50E2               	movf	fsr1h,w,c
 14740  012B1A  6EDA               	movwf	fsr2h,c
 14741  012B1C  0EFF               	movlw	255
 14742  012B1E  22DA               	addwfc	fsr2h,f,c
 14743  012B20  0EFF               	movlw	-1
 14744  012B22  50E3               	movf	plusw1,w,c
 14745  012B24  18DE               	xorwf	postinc2,w,c
 14746  012B26  B4D8               	btfsc	status,2,c
 14747  012B28  D002               	goto	l6153
 14748                           
 14749                           ;stkvar	_signs @ sp[(-4)+3]
 14750  012B2A  0EFF               	movlw	-1
 14751  012B2C  8CE3               	bsf	plusw1,6,c
 14752  012B2E                     l6153:
 14753                           
 14754                           ;stkvar	_a @ sp[(-4)+-8]
 14755  012B2E  0EF7               	movlw	247
 14756  012B30  24E1               	addwf	fsr1l,w,c
 14757  012B32  6ED9               	movwf	fsr2l,c
 14758  012B34  0EFF               	movlw	255
 14759  012B36  20E2               	addwfc	fsr1h,w,c
 14760  012B38  6EDA               	movwf	fsr2h,c
 14761  012B3A  50DF               	movf	indf2,w,c
 14762  012B3C  6E40               	movwf	(btemp+11)^0,c
 14763  012B3E  90D8               	bcf	status,0,c
 14764  012B40  3440               	rlcf	(btemp+11)^0,w,c
 14765  012B42  6E3F               	movwf	(btemp+10)^0,c
 14766                           
 14767                           ;stkvar	_aexp @ sp[(-4)+2]
 14768  012B44  0EFE               	movlw	-2
 14769  012B46  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14770                           
 14771                           ;stkvar	_a @ sp[(-4)+-8]
 14772  012B4C  0EF6               	movlw	246
 14773  012B4E  24E1               	addwf	fsr1l,w,c
 14774  012B50  6ED9               	movwf	fsr2l,c
 14775  012B52  0EFF               	movlw	255
 14776  012B54  20E2               	addwfc	fsr1h,w,c
 14777  012B56  6EDA               	movwf	fsr2h,c
 14778  012B58  AEDF               	btfss	indf2,7,c
 14779  012B5A  D002               	goto	l6159
 14780                           
 14781                           ;stkvar	_aexp @ sp[(-4)+2]
 14782  012B5C  0EFE               	movlw	-2
 14783  012B5E  80E3               	bsf	plusw1,0,c
 14784  012B60                     l6159:
 14785                           
 14786                           ;stkvar	_aexp @ sp[(-4)+2]
 14787  012B60  0EFE               	movlw	-2
 14788  012B62  50E3               	movf	plusw1,w,c
 14789  012B64  B4D8               	btfsc	status,2,c
 14790  012B66  D027               	goto	l6169
 14791                           
 14792                           ;stkvar	_aexp @ sp[(-4)+2]
 14793  012B68  0EFE               	movlw	-2
 14794  012B6A  28E3               	incf	plusw1,w,c
 14795  012B6C  A4D8               	btfss	status,2,c
 14796  012B6E  D018               	goto	l6165
 14797  012B70  0E00               	movlw	0
 14798  012B72  6E3D               	movwf	(btemp+8)^0,c
 14799  012B74  0E00               	movlw	0
 14800  012B76  6E3E               	movwf	(btemp+9)^0,c
 14801  012B78  0E00               	movlw	0
 14802  012B7A  6E3F               	movwf	(btemp+10)^0,c
 14803  012B7C  0E00               	movlw	0
 14804  012B7E  6E40               	movwf	(btemp+11)^0,c
 14805                           
 14806                           ;stkvar	_a @ sp[(-4)+-8]
 14807  012B80  0EF4               	movlw	-12
 14808  012B82  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14809  012B88  0EF5               	movlw	-11
 14810  012B8A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14811  012B90  0EF6               	movlw	-10
 14812  012B92  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14813  012B98  0EF7               	movlw	-9
 14814  012B9A  0060  F103  FFE3   	movff	btemp+11,plusw1
 14815  012BA0                     l6165:
 14816                           
 14817                           ;stkvar	_a @ sp[(-4)+-8]
 14818  012BA0  0EF6               	movlw	-10
 14819  012BA2  8EE3               	bsf	plusw1,7,c
 14820                           
 14821                           ;stkvar	_a @ sp[(-4)+-8]
 14822  012BA4  0EF7               	movlw	247
 14823  012BA6  24E1               	addwf	fsr1l,w,c
 14824  012BA8  6ED9               	movwf	fsr2l,c
 14825  012BAA  0EFF               	movlw	255
 14826  012BAC  20E2               	addwfc	fsr1h,w,c
 14827  012BAE  6EDA               	movwf	fsr2h,c
 14828  012BB0  0E00               	movlw	0
 14829  012BB2  6EDF               	movwf	indf2,c
 14830  012BB4  D018               	goto	l6171
 14831  012BB6                     l6169:
 14832  012BB6  0E00               	movlw	0
 14833  012BB8  6E3D               	movwf	(btemp+8)^0,c
 14834  012BBA  0E00               	movlw	0
 14835  012BBC  6E3E               	movwf	(btemp+9)^0,c
 14836  012BBE  0E00               	movlw	0
 14837  012BC0  6E3F               	movwf	(btemp+10)^0,c
 14838  012BC2  0E00               	movlw	0
 14839  012BC4  6E40               	movwf	(btemp+11)^0,c
 14840                           
 14841                           ;stkvar	_a @ sp[(-4)+-8]
 14842  012BC6  0EF4               	movlw	-12
 14843  012BC8  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 14844  012BCE  0EF5               	movlw	-11
 14845  012BD0  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 14846  012BD6  0EF6               	movlw	-10
 14847  012BD8  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 14848  012BDE  0EF7               	movlw	-9
 14849  012BE0  0060  F103  FFE3   	movff	btemp+11,plusw1
 14850  012BE6                     l6171:
 14851                           
 14852                           ;stkvar	_bexp @ sp[(-4)+1]
 14853                           ;stkvar	_aexp @ sp[(-4)+2]
 14854  012BE6  50E1               	movf	fsr1l,w,c
 14855  012BE8  0FFE               	addlw	-2
 14856  012BEA  6ED9               	movwf	fsr2l,c
 14857  012BEC  50E2               	movf	fsr1h,w,c
 14858  012BEE  6EDA               	movwf	fsr2h,c
 14859  012BF0  0EFF               	movlw	255
 14860  012BF2  22DA               	addwfc	fsr2h,f,c
 14861  012BF4  0EFD               	movlw	-3
 14862  012BF6  50E3               	movf	plusw1,w,c
 14863  012BF8  5CDE               	subwf	postinc2,w,c
 14864  012BFA  B0D8               	btfsc	status,0,c
 14865  012BFC  D0A4               	goto	l6207
 14866                           
 14867                           ;stkvar	_signs @ sp[(-4)+3]
 14868  012BFE  0EFF               	movlw	-1
 14869  012C00  ACE3               	btfss	plusw1,6,c
 14870  012C02  D002               	goto	l6177
 14871                           
 14872                           ;stkvar	_signs @ sp[(-4)+3]
 14873  012C04  0EFF               	movlw	-1
 14874  012C06  7EE3               	btg	plusw1,7,c
 14875  012C08                     l6177:
 14876                           
 14877                           ;stkvar	_bexp @ sp[(-4)+1]
 14878                           ;stkvar	_grs @ sp[(-4)+0]
 14879  012C08  0EFD               	movlw	-3
 14880  012C0A  006F FF8C  F035    	movff	plusw1,btemp
 14881  012C10  0EFC               	movlw	-4
 14882  012C12  0060  F0D7  FFE3   	movff	btemp,plusw1
 14883                           
 14884                           ;stkvar	_aexp @ sp[(-4)+2]
 14885                           ;stkvar	_bexp @ sp[(-4)+1]
 14886  012C18  0EFE               	movlw	-2
 14887  012C1A  006F FF8C  F035    	movff	plusw1,btemp
 14888  012C20  0EFD               	movlw	-3
 14889  012C22  0060  F0D7  FFE3   	movff	btemp,plusw1
 14890                           
 14891                           ;stkvar	_grs @ sp[(-4)+0]
 14892                           ;stkvar	_aexp @ sp[(-4)+2]
 14893  012C28  0EFC               	movlw	-4
 14894  012C2A  006F FF8C  F035    	movff	plusw1,btemp
 14895  012C30  0EFE               	movlw	-2
 14896  012C32  0060  F0D7  FFE3   	movff	btemp,plusw1
 14897                           
 14898                           ;stkvar	_b @ sp[(-4)+-4]
 14899                           ;stkvar	_grs @ sp[(-4)+0]
 14900  012C38  0EF8               	movlw	-8
 14901  012C3A  006F FF8C  F035    	movff	plusw1,btemp
 14902  012C40  0EFC               	movlw	-4
 14903  012C42  0060  F0D7  FFE3   	movff	btemp,plusw1
 14904                           
 14905                           ;stkvar	_a @ sp[(-4)+-8]
 14906                           ;stkvar	_b @ sp[(-4)+-4]
 14907  012C48  0EF4               	movlw	-12
 14908  012C4A  006F FF8C  F035    	movff	plusw1,btemp
 14909  012C50  0EF8               	movlw	-8
 14910  012C52  0060  F0D7  FFE3   	movff	btemp,plusw1
 14911                           
 14912                           ;stkvar	_grs @ sp[(-4)+0]
 14913                           ;stkvar	_a @ sp[(-4)+-8]
 14914  012C58  0EFC               	movlw	-4
 14915  012C5A  006F FF8C  F035    	movff	plusw1,btemp
 14916  012C60  0EF4               	movlw	-12
 14917  012C62  0060  F0D7  FFE3   	movff	btemp,plusw1
 14918                           
 14919                           ;stkvar	_b @ sp[(-4)+-4]
 14920  012C68  0EF9               	movlw	249
 14921  012C6A  24E1               	addwf	fsr1l,w,c
 14922  012C6C  6ED9               	movwf	fsr2l,c
 14923  012C6E  0EFF               	movlw	255
 14924  012C70  20E2               	addwfc	fsr1h,w,c
 14925  012C72  6EDA               	movwf	fsr2h,c
 14926  012C74  50DF               	movf	indf2,w,c
 14927  012C76  6E40               	movwf	(btemp+11)^0,c
 14928                           
 14929                           ;stkvar	_grs @ sp[(-4)+0]
 14930  012C78  0EFC               	movlw	-4
 14931  012C7A  0060  F103  FFE3   	movff	btemp+11,plusw1
 14932                           
 14933                           ;stkvar	_a @ sp[(-4)+-8]
 14934  012C80  0EF5               	movlw	245
 14935  012C82  24E1               	addwf	fsr1l,w,c
 14936  012C84  6ED9               	movwf	fsr2l,c
 14937  012C86  0EFF               	movlw	255
 14938  012C88  20E2               	addwfc	fsr1h,w,c
 14939  012C8A  6EDA               	movwf	fsr2h,c
 14940                           
 14941                           ;stkvar	_b @ sp[(-4)+-4]
 14942  012C8C  0EF9               	movlw	249
 14943  012C8E  24E1               	addwf	fsr1l,w,c
 14944  012C90  6EE9               	movwf	fsr0l,c
 14945  012C92  0EFF               	movlw	255
 14946  012C94  20E2               	addwfc	fsr1h,w,c
 14947  012C96  6EEA               	movwf	fsr0h,c
 14948  012C98  006F FF7F FFEF     	movff	indf2,indf0
 14949                           
 14950                           ;stkvar	_grs @ sp[(-4)+0]
 14951                           ;stkvar	_a @ sp[(-4)+-8]
 14952  012C9E  0EF5               	movlw	245
 14953  012CA0  24E1               	addwf	fsr1l,w,c
 14954  012CA2  6ED9               	movwf	fsr2l,c
 14955  012CA4  0EFF               	movlw	255
 14956  012CA6  20E2               	addwfc	fsr1h,w,c
 14957  012CA8  6EDA               	movwf	fsr2h,c
 14958  012CAA  0EFC               	movlw	-4
 14959  012CAC  006F FF8F FFDF     	movff	plusw1,indf2
 14960                           
 14961                           ;stkvar	_b @ sp[(-4)+-4]
 14962  012CB2  0EFA               	movlw	250
 14963  012CB4  24E1               	addwf	fsr1l,w,c
 14964  012CB6  6ED9               	movwf	fsr2l,c
 14965  012CB8  0EFF               	movlw	255
 14966  012CBA  20E2               	addwfc	fsr1h,w,c
 14967  012CBC  6EDA               	movwf	fsr2h,c
 14968  012CBE  50DF               	movf	indf2,w,c
 14969  012CC0  6E40               	movwf	(btemp+11)^0,c
 14970                           
 14971                           ;stkvar	_grs @ sp[(-4)+0]
 14972  012CC2  0EFC               	movlw	-4
 14973  012CC4  0060  F103  FFE3   	movff	btemp+11,plusw1
 14974                           
 14975                           ;stkvar	_a @ sp[(-4)+-8]
 14976  012CCA  0EF6               	movlw	246
 14977  012CCC  24E1               	addwf	fsr1l,w,c
 14978  012CCE  6ED9               	movwf	fsr2l,c
 14979  012CD0  0EFF               	movlw	255
 14980  012CD2  20E2               	addwfc	fsr1h,w,c
 14981  012CD4  6EDA               	movwf	fsr2h,c
 14982                           
 14983                           ;stkvar	_b @ sp[(-4)+-4]
 14984  012CD6  0EFA               	movlw	250
 14985  012CD8  24E1               	addwf	fsr1l,w,c
 14986  012CDA  6EE9               	movwf	fsr0l,c
 14987  012CDC  0EFF               	movlw	255
 14988  012CDE  20E2               	addwfc	fsr1h,w,c
 14989  012CE0  6EEA               	movwf	fsr0h,c
 14990  012CE2  006F FF7F FFEF     	movff	indf2,indf0
 14991                           
 14992                           ;stkvar	_grs @ sp[(-4)+0]
 14993                           ;stkvar	_a @ sp[(-4)+-8]
 14994  012CE8  0EF6               	movlw	246
 14995  012CEA  24E1               	addwf	fsr1l,w,c
 14996  012CEC  6ED9               	movwf	fsr2l,c
 14997  012CEE  0EFF               	movlw	255
 14998  012CF0  20E2               	addwfc	fsr1h,w,c
 14999  012CF2  6EDA               	movwf	fsr2h,c
 15000  012CF4  0EFC               	movlw	-4
 15001  012CF6  006F FF8F FFDF     	movff	plusw1,indf2
 15002                           
 15003                           ;stkvar	_b @ sp[(-4)+-4]
 15004  012CFC  0EFB               	movlw	251
 15005  012CFE  24E1               	addwf	fsr1l,w,c
 15006  012D00  6ED9               	movwf	fsr2l,c
 15007  012D02  0EFF               	movlw	255
 15008  012D04  20E2               	addwfc	fsr1h,w,c
 15009  012D06  6EDA               	movwf	fsr2h,c
 15010  012D08  50DF               	movf	indf2,w,c
 15011  012D0A  6E40               	movwf	(btemp+11)^0,c
 15012                           
 15013                           ;stkvar	_grs @ sp[(-4)+0]
 15014  012D0C  0EFC               	movlw	-4
 15015  012D0E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15016                           
 15017                           ;stkvar	_a @ sp[(-4)+-8]
 15018  012D14  0EF7               	movlw	247
 15019  012D16  24E1               	addwf	fsr1l,w,c
 15020  012D18  6ED9               	movwf	fsr2l,c
 15021  012D1A  0EFF               	movlw	255
 15022  012D1C  20E2               	addwfc	fsr1h,w,c
 15023  012D1E  6EDA               	movwf	fsr2h,c
 15024                           
 15025                           ;stkvar	_b @ sp[(-4)+-4]
 15026  012D20  0EFB               	movlw	251
 15027  012D22  24E1               	addwf	fsr1l,w,c
 15028  012D24  6EE9               	movwf	fsr0l,c
 15029  012D26  0EFF               	movlw	255
 15030  012D28  20E2               	addwfc	fsr1h,w,c
 15031  012D2A  6EEA               	movwf	fsr0h,c
 15032  012D2C  006F FF7F FFEF     	movff	indf2,indf0
 15033                           
 15034                           ;stkvar	_grs @ sp[(-4)+0]
 15035                           ;stkvar	_a @ sp[(-4)+-8]
 15036  012D32  0EF7               	movlw	247
 15037  012D34  24E1               	addwf	fsr1l,w,c
 15038  012D36  6ED9               	movwf	fsr2l,c
 15039  012D38  0EFF               	movlw	255
 15040  012D3A  20E2               	addwfc	fsr1h,w,c
 15041  012D3C  6EDA               	movwf	fsr2h,c
 15042  012D3E  0EFC               	movlw	-4
 15043  012D40  006F FF8F FFDF     	movff	plusw1,indf2
 15044  012D46                     l6207:
 15045                           
 15046                           ;stkvar	_grs @ sp[(-4)+0]
 15047  012D46  0EFC               	movlw	-4
 15048  012D48  6AE3               	clrf	plusw1,c
 15049                           
 15050                           ;stkvar	_aexp @ sp[(-4)+2]
 15051  012D4A  0EFE               	movlw	-2
 15052  012D4C  50E3               	movf	plusw1,w,c
 15053  012D4E  6E3F               	movwf	(btemp+10)^0,c
 15054  012D50  6A40               	clrf	(btemp+11)^0,c
 15055                           
 15056                           ;stkvar	_bexp @ sp[(-4)+1]
 15057  012D52  0EFD               	movlw	-3
 15058  012D54  50E3               	movf	plusw1,w,c
 15059  012D56  5E3F               	subwf	(btemp+10)^0,f,c
 15060  012D58  0E00               	movlw	0
 15061  012D5A  5A40               	subwfb	(btemp+11)^0,f,c
 15062  012D5C  BE40               	btfsc	(btemp+11)^0,7,c
 15063  012D5E  D062               	goto	l6231
 15064  012D60  5040               	movf	(btemp+11)^0,w,c
 15065  012D62  E104               	bnz	u4730
 15066  012D64  0E1A               	movlw	26
 15067  012D66  5C3F               	subwf	(btemp+10)^0,w,c
 15068  012D68  A0D8               	btfss	status,0,c
 15069  012D6A  D05C               	goto	l6231
 15070  012D6C                     u4730:
 15071                           
 15072                           ;stkvar	_b @ sp[(-4)+-4]
 15073  012D6C  0EF8               	movlw	-8
 15074  012D6E  50E3               	movf	plusw1,w,c
 15075  012D70  E10A               	bnz	u4741
 15076  012D72  0EF9               	movlw	-7
 15077  012D74  50E3               	movf	plusw1,w,c
 15078  012D76  E107               	bnz	u4741
 15079  012D78  0EFA               	movlw	-6
 15080  012D7A  50E3               	movf	plusw1,w,c
 15081  012D7C  E104               	bnz	u4741
 15082  012D7E  0EFB               	movlw	-5
 15083  012D80  50E3               	movf	plusw1,w,c
 15084  012D82  B4D8               	btfsc	status,2,c
 15085  012D84  D003               	goto	u4740
 15086  012D86                     u4741:
 15087  012D86  6A40               	clrf	(btemp+11)^0,c
 15088  012D88  2A40               	incf	(btemp+11)^0,f,c
 15089  012D8A  D001               	goto	u4758
 15090  012D8C                     u4740:
 15091  012D8C  6A40               	clrf	(btemp+11)^0,c
 15092  012D8E                     u4758:
 15093                           
 15094                           ;stkvar	_grs @ sp[(-4)+0]
 15095  012D8E  0EFC               	movlw	-4
 15096  012D90  0060  F103  FFE3   	movff	btemp+11,plusw1
 15097                           
 15098                           ;stkvar	_b @ sp[(-4)+-4]
 15099  012D96  0EF8               	movlw	-8
 15100  012D98  6AE3               	clrf	plusw1,c
 15101  012D9A  0EF9               	movlw	-7
 15102  012D9C  6AE3               	clrf	plusw1,c
 15103  012D9E  0EFA               	movlw	-6
 15104  012DA0  6AE3               	clrf	plusw1,c
 15105  012DA2  0EFB               	movlw	-5
 15106  012DA4  6AE3               	clrf	plusw1,c
 15107                           
 15108                           ;stkvar	_aexp @ sp[(-4)+2]
 15109                           ;stkvar	_bexp @ sp[(-4)+1]
 15110  012DA6  0EFE               	movlw	-2
 15111  012DA8  006F FF8C  F035    	movff	plusw1,btemp
 15112  012DAE  0EFD               	movlw	-3
 15113  012DB0  0060  F0D7  FFE3   	movff	btemp,plusw1
 15114  012DB6  D042               	goto	u4790
 15115  012DB8                     l6217:
 15116                           
 15117                           ;stkvar	_grs @ sp[(-4)+0]
 15118  012DB8  0EFC               	movlw	-4
 15119  012DBA  A0E3               	btfss	plusw1,0,c
 15120  012DBC  D00D               	goto	l6221
 15121                           
 15122                           ;stkvar	_grs @ sp[(-4)+0]
 15123  012DBE  0EFC               	movlw	-4
 15124  012DC0  006F FF8C  F040    	movff	plusw1,btemp+11
 15125  012DC6  90D8               	bcf	status,0,c
 15126  012DC8  3240               	rrcf	(btemp+11)^0,f,c
 15127  012DCA  0E01               	movlw	1
 15128  012DCC  1240               	iorwf	(btemp+11)^0,f,c
 15129                           
 15130                           ;stkvar	_grs @ sp[(-4)+0]
 15131  012DCE  0EFC               	movlw	-4
 15132  012DD0  0060  F103  FFE3   	movff	btemp+11,plusw1
 15133  012DD6  D009               	goto	l6223
 15134  012DD8                     l6221:
 15135                           
 15136                           ;stkvar	_grs @ sp[(-4)+0]
 15137  012DD8  50E1               	movf	fsr1l,w,c
 15138  012DDA  0FFC               	addlw	-4
 15139  012DDC  6ED9               	movwf	fsr2l,c
 15140  012DDE  50E2               	movf	fsr1h,w,c
 15141  012DE0  6EDA               	movwf	fsr2h,c
 15142  012DE2  0EFF               	movlw	255
 15143  012DE4  22DA               	addwfc	fsr2h,f,c
 15144  012DE6  90D8               	bcf	status,0,c
 15145  012DE8  32DF               	rrcf	indf2,f,c
 15146  012DEA                     l6223:
 15147                           
 15148                           ;stkvar	_b @ sp[(-4)+-4]
 15149  012DEA  0EF8               	movlw	-8
 15150  012DEC  A0E3               	btfss	plusw1,0,c
 15151  012DEE  D002               	goto	l6227
 15152                           
 15153                           ;stkvar	_grs @ sp[(-4)+0]
 15154  012DF0  0EFC               	movlw	-4
 15155  012DF2  8EE3               	bsf	plusw1,7,c
 15156  012DF4                     l6227:
 15157  012DF4  0E01               	movlw	1
 15158  012DF6  6E40               	movwf	(btemp+11)^0,c
 15159                           
 15160                           ;stkvar	_b @ sp[(-4)+-4]
 15161  012DF8  50E1               	movf	fsr1l,w,c
 15162  012DFA  0FF8               	addlw	-8
 15163  012DFC  6ED9               	movwf	fsr2l,c
 15164  012DFE  50E2               	movf	fsr1h,w,c
 15165  012E00  6EDA               	movwf	fsr2h,c
 15166  012E02  0EFF               	movlw	255
 15167  012E04  22DA               	addwfc	fsr2h,f,c
 15168  012E06  2840               	incf	(btemp+11)^0,w,c
 15169  012E08  52DE               	movf	postinc2,f,c
 15170  012E0A  D008               	goto	u4780
 15171  012E0C                     u4785:
 15172  012E0C  52DE               	movf	postinc2,f,c
 15173  012E0E  90D8               	bcf	status,0,c
 15174  012E10  BEDC               	btfsc	preinc2,7,c
 15175  012E12  80D8               	bsf	status,0,c
 15176  012E14  32DD               	rrcf	postdec2,f,c
 15177  012E16  32DD               	rrcf	postdec2,f,c
 15178  012E18  32DD               	rrcf	postdec2,f,c
 15179  012E1A  32DE               	rrcf	postinc2,f,c
 15180  012E1C                     u4780:
 15181  012E1C  2EE8               	decfsz	wreg,f,c
 15182  012E1E  D7F6               	goto	u4785
 15183                           
 15184                           ;stkvar	_bexp @ sp[(-4)+1]
 15185  012E20  0EFD               	movlw	-3
 15186  012E22  2AE3               	incf	plusw1,f,c
 15187  012E24                     l6231:
 15188                           
 15189                           ;stkvar	_aexp @ sp[(-4)+2]
 15190                           ;stkvar	_bexp @ sp[(-4)+1]
 15191  012E24  50E1               	movf	fsr1l,w,c
 15192  012E26  0FFD               	addlw	-3
 15193  012E28  6ED9               	movwf	fsr2l,c
 15194  012E2A  50E2               	movf	fsr1h,w,c
 15195  012E2C  6EDA               	movwf	fsr2h,c
 15196  012E2E  0EFF               	movlw	255
 15197  012E30  22DA               	addwfc	fsr2h,f,c
 15198  012E32  0EFE               	movlw	-2
 15199  012E34  50E3               	movf	plusw1,w,c
 15200  012E36  5CDE               	subwf	postinc2,w,c
 15201  012E38  A0D8               	btfss	status,0,c
 15202  012E3A  D7BE               	goto	l6217
 15203  012E3C                     u4790:
 15204                           
 15205                           ;stkvar	_signs @ sp[(-4)+3]
 15206  012E3C  0EFF               	movlw	-1
 15207  012E3E  BCE3               	btfsc	plusw1,6,c
 15208  012E40  D066               	goto	l6259
 15209                           
 15210                           ;stkvar	_bexp @ sp[(-4)+1]
 15211  012E42  0EFD               	movlw	-3
 15212  012E44  50E3               	movf	plusw1,w,c
 15213  012E46  B4D8               	btfsc	status,2,c
 15214  012E48  D0F2               	goto	u4890
 15215                           
 15216                           ;stkvar	_a @ sp[(-4)+-8]
 15217                           ;stkvar	_b @ sp[(-4)+-4]
 15218  012E4A  0EF8               	movlw	-8
 15219  012E4C  50E3               	movf	plusw1,w,c
 15220  012E4E  6E35               	movwf	btemp^0,c
 15221  012E50  0EF4               	movlw	-12
 15222  012E52  50E3               	movf	plusw1,w,c
 15223  012E54  2635               	addwf	btemp^0,f,c
 15224  012E56  0EF8               	movlw	-8
 15225  012E58  0060  F0D7  FFE3   	movff	btemp,plusw1
 15226  012E5E  0EF9               	movlw	-7
 15227  012E60  50E3               	movf	plusw1,w,c
 15228  012E62  6E35               	movwf	btemp^0,c
 15229  012E64  0EF5               	movlw	-11
 15230  012E66  50E3               	movf	plusw1,w,c
 15231  012E68  2235               	addwfc	btemp^0,f,c
 15232  012E6A  0EF9               	movlw	-7
 15233  012E6C  0060  F0D7  FFE3   	movff	btemp,plusw1
 15234  012E72  0EFA               	movlw	-6
 15235  012E74  50E3               	movf	plusw1,w,c
 15236  012E76  6E35               	movwf	btemp^0,c
 15237  012E78  0EF6               	movlw	-10
 15238  012E7A  50E3               	movf	plusw1,w,c
 15239  012E7C  2235               	addwfc	btemp^0,f,c
 15240  012E7E  0EFA               	movlw	-6
 15241  012E80  0060  F0D7  FFE3   	movff	btemp,plusw1
 15242  012E86  0EFB               	movlw	-5
 15243  012E88  50E3               	movf	plusw1,w,c
 15244  012E8A  6E35               	movwf	btemp^0,c
 15245  012E8C  0EF7               	movlw	-9
 15246  012E8E  50E3               	movf	plusw1,w,c
 15247  012E90  2235               	addwfc	btemp^0,f,c
 15248  012E92  0EFB               	movlw	-5
 15249  012E94  0060  F0D7  FFE3   	movff	btemp,plusw1
 15250                           
 15251                           ;stkvar	_b @ sp[(-4)+-4]
 15252  012E9A  0EFB               	movlw	-5
 15253  012E9C  A0E3               	btfss	plusw1,0,c
 15254  012E9E  D101               	goto	u4930
 15255                           
 15256                           ;stkvar	_grs @ sp[(-4)+0]
 15257  012EA0  0EFC               	movlw	-4
 15258  012EA2  A0E3               	btfss	plusw1,0,c
 15259  012EA4  D00D               	goto	l6249
 15260                           
 15261                           ;stkvar	_grs @ sp[(-4)+0]
 15262  012EA6  0EFC               	movlw	-4
 15263  012EA8  006F FF8C  F040    	movff	plusw1,btemp+11
 15264  012EAE  90D8               	bcf	status,0,c
 15265  012EB0  3240               	rrcf	(btemp+11)^0,f,c
 15266  012EB2  0E01               	movlw	1
 15267  012EB4  1240               	iorwf	(btemp+11)^0,f,c
 15268                           
 15269                           ;stkvar	_grs @ sp[(-4)+0]
 15270  012EB6  0EFC               	movlw	-4
 15271  012EB8  0060  F103  FFE3   	movff	btemp+11,plusw1
 15272  012EBE  D009               	goto	l6251
 15273  012EC0                     l6249:
 15274                           
 15275                           ;stkvar	_grs @ sp[(-4)+0]
 15276  012EC0  50E1               	movf	fsr1l,w,c
 15277  012EC2  0FFC               	addlw	-4
 15278  012EC4  6ED9               	movwf	fsr2l,c
 15279  012EC6  50E2               	movf	fsr1h,w,c
 15280  012EC8  6EDA               	movwf	fsr2h,c
 15281  012ECA  0EFF               	movlw	255
 15282  012ECC  22DA               	addwfc	fsr2h,f,c
 15283  012ECE  90D8               	bcf	status,0,c
 15284  012ED0  32DF               	rrcf	indf2,f,c
 15285  012ED2                     l6251:
 15286                           
 15287                           ;stkvar	_b @ sp[(-4)+-4]
 15288  012ED2  0EF8               	movlw	-8
 15289  012ED4  A0E3               	btfss	plusw1,0,c
 15290  012ED6  D002               	goto	l6255
 15291                           
 15292                           ;stkvar	_grs @ sp[(-4)+0]
 15293  012ED8  0EFC               	movlw	-4
 15294  012EDA  8EE3               	bsf	plusw1,7,c
 15295  012EDC                     l6255:
 15296  012EDC  0E01               	movlw	1
 15297  012EDE  6E40               	movwf	(btemp+11)^0,c
 15298                           
 15299                           ;stkvar	_b @ sp[(-4)+-4]
 15300  012EE0  50E1               	movf	fsr1l,w,c
 15301  012EE2  0FF8               	addlw	-8
 15302  012EE4  6ED9               	movwf	fsr2l,c
 15303  012EE6  50E2               	movf	fsr1h,w,c
 15304  012EE8  6EDA               	movwf	fsr2h,c
 15305  012EEA  0EFF               	movlw	255
 15306  012EEC  22DA               	addwfc	fsr2h,f,c
 15307  012EEE  2840               	incf	(btemp+11)^0,w,c
 15308  012EF0  52DE               	movf	postinc2,f,c
 15309  012EF2  D008               	goto	u4850
 15310  012EF4                     u4855:
 15311  012EF4  52DE               	movf	postinc2,f,c
 15312  012EF6  90D8               	bcf	status,0,c
 15313  012EF8  BEDC               	btfsc	preinc2,7,c
 15314  012EFA  80D8               	bsf	status,0,c
 15315  012EFC  32DD               	rrcf	postdec2,f,c
 15316  012EFE  32DD               	rrcf	postdec2,f,c
 15317  012F00  32DD               	rrcf	postdec2,f,c
 15318  012F02  32DE               	rrcf	postinc2,f,c
 15319  012F04                     u4850:
 15320  012F04  2EE8               	decfsz	wreg,f,c
 15321  012F06  D7F6               	goto	u4855
 15322                           
 15323                           ;stkvar	_bexp @ sp[(-4)+1]
 15324  012F08  0EFD               	movlw	-3
 15325  012F0A  2AE3               	incf	plusw1,f,c
 15326  012F0C  D0CA               	goto	u4930
 15327  012F0E                     l6259:
 15328                           
 15329                           ;stkvar	_a @ sp[(-4)+-8]
 15330                           ;stkvar	_b @ sp[(-4)+-4]
 15331  012F0E  50E1               	movf	fsr1l,w,c
 15332  012F10  0FF8               	addlw	-8
 15333  012F12  6ED9               	movwf	fsr2l,c
 15334  012F14  50E2               	movf	fsr1h,w,c
 15335  012F16  6EDA               	movwf	fsr2h,c
 15336  012F18  0EFF               	movlw	255
 15337  012F1A  22DA               	addwfc	fsr2h,f,c
 15338  012F1C  0EF4               	movlw	-12
 15339  012F1E  50E3               	movf	plusw1,w,c
 15340  012F20  5CDE               	subwf	postinc2,w,c
 15341  012F22  0EF5               	movlw	-11
 15342  012F24  50E3               	movf	plusw1,w,c
 15343  012F26  58DE               	subwfb	postinc2,w,c
 15344  012F28  0EF6               	movlw	-10
 15345  012F2A  50E3               	movf	plusw1,w,c
 15346  012F2C  58DE               	subwfb	postinc2,w,c
 15347  012F2E  50DE               	movf	postinc2,w,c
 15348  012F30  0A80               	xorlw	128
 15349  012F32  6E35               	movwf	btemp^0,c
 15350  012F34  0EF7               	movlw	-9
 15351  012F36  50E3               	movf	plusw1,w,c
 15352  012F38  0A80               	xorlw	128
 15353  012F3A  5835               	subwfb	btemp^0,w,c
 15354  012F3C  B0D8               	btfsc	status,0,c
 15355  012F3E  D053               	goto	l6271
 15356                           
 15357                           ;stkvar	_b @ sp[(-4)+-4]
 15358                           ;stkvar	_a @ sp[(-4)+-8]
 15359  012F40  0EF4               	movlw	-12
 15360  012F42  006F FF8C  F03D    	movff	plusw1,btemp+8
 15361  012F48  0EF5               	movlw	-11
 15362  012F4A  006F FF8C  F03E    	movff	plusw1,btemp+9
 15363  012F50  0EF6               	movlw	-10
 15364  012F52  006F FF8C  F03F    	movff	plusw1,btemp+10
 15365  012F58  0EF7               	movlw	-9
 15366  012F5A  006F FF8C  F040    	movff	plusw1,btemp+11
 15367  012F60  0EF8               	movlw	-8
 15368  012F62  50E3               	movf	plusw1,w,c
 15369  012F64  5E3D               	subwf	(btemp+8)^0,f,c
 15370  012F66  0EF9               	movlw	-7
 15371  012F68  50E3               	movf	plusw1,w,c
 15372  012F6A  5A3E               	subwfb	(btemp+9)^0,f,c
 15373  012F6C  0EFA               	movlw	-6
 15374  012F6E  50E3               	movf	plusw1,w,c
 15375  012F70  5A3F               	subwfb	(btemp+10)^0,f,c
 15376  012F72  0EFB               	movlw	-5
 15377  012F74  50E3               	movf	plusw1,w,c
 15378  012F76  5A40               	subwfb	(btemp+11)^0,f,c
 15379  012F78  0EFF               	movlw	255
 15380  012F7A  243D               	addwf	(btemp+8)^0,w,c
 15381  012F7C  6E39               	movwf	(btemp+4)^0,c
 15382  012F7E  0EFF               	movlw	255
 15383  012F80  203E               	addwfc	(btemp+9)^0,w,c
 15384  012F82  6E3A               	movwf	(btemp+5)^0,c
 15385  012F84  0EFF               	movlw	255
 15386  012F86  203F               	addwfc	(btemp+10)^0,w,c
 15387  012F88  6E3B               	movwf	(btemp+6)^0,c
 15388  012F8A  0EFF               	movlw	255
 15389  012F8C  2040               	addwfc	(btemp+11)^0,w,c
 15390  012F8E  6E3C               	movwf	(btemp+7)^0,c
 15391                           
 15392                           ;stkvar	_b @ sp[(-4)+-4]
 15393  012F90  0EF8               	movlw	-8
 15394  012F92  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 15395  012F98  0EF9               	movlw	-7
 15396  012F9A  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 15397  012FA0  0EFA               	movlw	-6
 15398  012FA2  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 15399  012FA8  0EFB               	movlw	-5
 15400  012FAA  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 15401                           
 15402                           ;stkvar	_signs @ sp[(-4)+3]
 15403  012FB0  0EFF               	movlw	-1
 15404  012FB2  7EE3               	btg	plusw1,7,c
 15405                           
 15406                           ;stkvar	_grs @ sp[(-4)+0]
 15407  012FB4  0EFC               	movlw	-4
 15408  012FB6  50E3               	movf	plusw1,w,c
 15409  012FB8  0800               	sublw	0
 15410  012FBA  6E40               	movwf	(btemp+11)^0,c
 15411                           
 15412                           ;stkvar	_grs @ sp[(-4)+0]
 15413  012FBC  0EFC               	movlw	-4
 15414  012FBE  0060  F103  FFE3   	movff	btemp+11,plusw1
 15415                           
 15416                           ;stkvar	_grs @ sp[(-4)+0]
 15417  012FC4  0EFC               	movlw	-4
 15418  012FC6  50E3               	movf	plusw1,w,c
 15419  012FC8  A4D8               	btfss	status,2,c
 15420  012FCA  D020               	goto	l6273
 15421                           
 15422                           ;stkvar	_b @ sp[(-4)+-4]
 15423  012FCC  50E1               	movf	fsr1l,w,c
 15424  012FCE  0FF8               	addlw	-8
 15425  012FD0  6ED9               	movwf	fsr2l,c
 15426  012FD2  50E2               	movf	fsr1h,w,c
 15427  012FD4  6EDA               	movwf	fsr2h,c
 15428  012FD6  0EFF               	movlw	255
 15429  012FD8  22DA               	addwfc	fsr2h,f,c
 15430  012FDA  2ADE               	incf	postinc2,f,c
 15431  012FDC  0E00               	movlw	0
 15432  012FDE  22DE               	addwfc	postinc2,f,c
 15433  012FE0  22DE               	addwfc	postinc2,f,c
 15434  012FE2  22DE               	addwfc	postinc2,f,c
 15435  012FE4  D013               	goto	l6273
 15436  012FE6                     l6271:
 15437                           
 15438                           ;stkvar	_a @ sp[(-4)+-8]
 15439                           ;stkvar	_b @ sp[(-4)+-4]
 15440  012FE6  50E1               	movf	fsr1l,w,c
 15441  012FE8  0FF8               	addlw	-8
 15442  012FEA  6ED9               	movwf	fsr2l,c
 15443  012FEC  50E2               	movf	fsr1h,w,c
 15444  012FEE  6EDA               	movwf	fsr2h,c
 15445  012FF0  0EFF               	movlw	255
 15446  012FF2  22DA               	addwfc	fsr2h,f,c
 15447  012FF4  0EF4               	movlw	-12
 15448  012FF6  50E3               	movf	plusw1,w,c
 15449  012FF8  5EDE               	subwf	postinc2,f,c
 15450  012FFA  0EF5               	movlw	-11
 15451  012FFC  50E3               	movf	plusw1,w,c
 15452  012FFE  5ADE               	subwfb	postinc2,f,c
 15453  013000  0EF6               	movlw	-10
 15454  013002  50E3               	movf	plusw1,w,c
 15455  013004  5ADE               	subwfb	postinc2,f,c
 15456  013006  0EF7               	movlw	-9
 15457  013008  50E3               	movf	plusw1,w,c
 15458  01300A  5ADE               	subwfb	postinc2,f,c
 15459  01300C                     l6273:
 15460                           
 15461                           ;stkvar	_b @ sp[(-4)+-4]
 15462  01300C  0EF8               	movlw	-8
 15463  01300E  50E3               	movf	plusw1,w,c
 15464  013010  E145               	bnz	l6295
 15465  013012  0EF9               	movlw	-7
 15466  013014  50E3               	movf	plusw1,w,c
 15467  013016  E142               	bnz	l6295
 15468  013018  0EFA               	movlw	-6
 15469  01301A  50E3               	movf	plusw1,w,c
 15470  01301C  E13F               	bnz	l6295
 15471  01301E  0EFB               	movlw	-5
 15472  013020  50E3               	movf	plusw1,w,c
 15473  013022  A4D8               	btfss	status,2,c
 15474  013024  D03B               	goto	l6295
 15475                           
 15476                           ;stkvar	_grs @ sp[(-4)+0]
 15477  013026  0EFC               	movlw	-4
 15478  013028  50E3               	movf	plusw1,w,c
 15479  01302A  A4D8               	btfss	status,2,c
 15480  01302C  D037               	goto	l6295
 15481  01302E                     u4890:
 15482  01302E  0E00               	movlw	0
 15483  013030  6E35               	movwf	btemp^0,c
 15484  013032  0E00               	movlw	0
 15485  013034  6E36               	movwf	(btemp+1)^0,c
 15486  013036  0E00               	movlw	0
 15487  013038  6E37               	movwf	(btemp+2)^0,c
 15488  01303A  0E00               	movlw	0
 15489  01303C  6E38               	movwf	(btemp+3)^0,c
 15490  01303E  D0C6               	goto	l2545
 15491  013040                     l6281:
 15492                           
 15493                           ;stkvar	_b @ sp[(-4)+-4]
 15494  013040  90D8               	bcf	status,0,c
 15495  013042  0EF8               	movlw	-8
 15496  013044  36E3               	rlcf	plusw1,f,c
 15497  013046  0EF9               	movlw	-7
 15498  013048  36E3               	rlcf	plusw1,f,c
 15499  01304A  0EFA               	movlw	-6
 15500  01304C  36E3               	rlcf	plusw1,f,c
 15501  01304E  0EFB               	movlw	-5
 15502  013050  36E3               	rlcf	plusw1,f,c
 15503                           
 15504                           ;stkvar	_grs @ sp[(-4)+0]
 15505  013052  0EFC               	movlw	-4
 15506  013054  AEE3               	btfss	plusw1,7,c
 15507  013056  D002               	goto	l2557
 15508                           
 15509                           ;stkvar	_b @ sp[(-4)+-4]
 15510  013058  0EF8               	movlw	-8
 15511  01305A  80E3               	bsf	plusw1,0,c
 15512  01305C                     l2557:
 15513                           
 15514                           ;stkvar	_grs @ sp[(-4)+0]
 15515  01305C  0EFC               	movlw	-4
 15516  01305E  A0E3               	btfss	plusw1,0,c
 15517  013060  D00E               	goto	l6289
 15518                           
 15519                           ;stkvar	_grs @ sp[(-4)+0]
 15520  013062  0EFC               	movlw	-4
 15521  013064  006F FF8C  F040    	movff	plusw1,btemp+11
 15522  01306A  90D8               	bcf	status,0,c
 15523  01306C  3440               	rlcf	(btemp+11)^0,w,c
 15524  01306E  6E3F               	movwf	(btemp+10)^0,c
 15525  013070  0E01               	movlw	1
 15526  013072  123F               	iorwf	(btemp+10)^0,f,c
 15527                           
 15528                           ;stkvar	_grs @ sp[(-4)+0]
 15529  013074  0EFC               	movlw	-4
 15530  013076  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15531  01307C  D009               	goto	l6291
 15532  01307E                     l6289:
 15533                           
 15534                           ;stkvar	_grs @ sp[(-4)+0]
 15535  01307E  50E1               	movf	fsr1l,w,c
 15536  013080  0FFC               	addlw	-4
 15537  013082  6ED9               	movwf	fsr2l,c
 15538  013084  50E2               	movf	fsr1h,w,c
 15539  013086  6EDA               	movwf	fsr2h,c
 15540  013088  0EFF               	movlw	255
 15541  01308A  22DA               	addwfc	fsr2h,f,c
 15542  01308C  90D8               	bcf	status,0,c
 15543  01308E  36DF               	rlcf	indf2,f,c
 15544  013090                     l6291:
 15545                           
 15546                           ;stkvar	_bexp @ sp[(-4)+1]
 15547  013090  0EFD               	movlw	-3
 15548  013092  50E3               	movf	plusw1,w,c
 15549  013094  B4D8               	btfsc	status,2,c
 15550  013096  D002               	goto	l6295
 15551                           
 15552                           ;stkvar	_bexp @ sp[(-4)+1]
 15553  013098  0EFD               	movlw	-3
 15554  01309A  06E3               	decf	plusw1,f,c
 15555  01309C                     l6295:
 15556                           
 15557                           ;stkvar	_b @ sp[(-4)+-4]
 15558  01309C  0EFA               	movlw	-6
 15559  01309E  AEE3               	btfss	plusw1,7,c
 15560  0130A0  D7CF               	goto	l6281
 15561  0130A2                     u4930:
 15562                           
 15563                           ;stkvar	_aexp @ sp[(-4)+2]
 15564  0130A2  0EFE               	movlw	-2
 15565  0130A4  6AE3               	clrf	plusw1,c
 15566                           
 15567                           ;stkvar	_grs @ sp[(-4)+0]
 15568  0130A6  0EFC               	movlw	-4
 15569  0130A8  AEE3               	btfss	plusw1,7,c
 15570  0130AA  D00F               	goto	l6309
 15571                           
 15572                           ;stkvar	_grs @ sp[(-4)+0]
 15573  0130AC  0EFC               	movlw	-4
 15574  0130AE  006F FF8C  F040    	movff	plusw1,btemp+11
 15575  0130B4  0E7F               	movlw	127
 15576  0130B6  1640               	andwf	(btemp+11)^0,f,c
 15577  0130B8  B4D8               	btfsc	status,2,c
 15578  0130BA  D004               	goto	l6305
 15579  0130BC                     u4950:
 15580                           
 15581                           ;stkvar	_aexp @ sp[(-4)+2]
 15582  0130BC  0EFE               	movlw	-2
 15583  0130BE  6AE3               	clrf	plusw1,c
 15584  0130C0  2AE3               	incf	plusw1,f,c
 15585  0130C2  D003               	goto	l6309
 15586  0130C4                     l6305:
 15587                           
 15588                           ;stkvar	_b @ sp[(-4)+-4]
 15589  0130C4  0EF8               	movlw	-8
 15590  0130C6  B0E3               	btfsc	plusw1,0,c
 15591  0130C8  D7F9               	goto	u4950
 15592  0130CA                     l6309:
 15593                           
 15594                           ;stkvar	_aexp @ sp[(-4)+2]
 15595  0130CA  0EFE               	movlw	-2
 15596  0130CC  50E3               	movf	plusw1,w,c
 15597  0130CE  B4D8               	btfsc	status,2,c
 15598  0130D0  D02B               	goto	l6321
 15599                           
 15600                           ;stkvar	_b @ sp[(-4)+-4]
 15601  0130D2  50E1               	movf	fsr1l,w,c
 15602  0130D4  0FF8               	addlw	-8
 15603  0130D6  6ED9               	movwf	fsr2l,c
 15604  0130D8  50E2               	movf	fsr1h,w,c
 15605  0130DA  6EDA               	movwf	fsr2h,c
 15606  0130DC  0EFF               	movlw	255
 15607  0130DE  22DA               	addwfc	fsr2h,f,c
 15608  0130E0  2ADE               	incf	postinc2,f,c
 15609  0130E2  0E00               	movlw	0
 15610  0130E4  22DE               	addwfc	postinc2,f,c
 15611  0130E6  22DE               	addwfc	postinc2,f,c
 15612  0130E8  22DE               	addwfc	postinc2,f,c
 15613                           
 15614                           ;stkvar	_b @ sp[(-4)+-4]
 15615  0130EA  0EFB               	movlw	-5
 15616  0130EC  A0E3               	btfss	plusw1,0,c
 15617  0130EE  D01C               	goto	l6321
 15618  0130F0  0E01               	movlw	1
 15619  0130F2  6E40               	movwf	(btemp+11)^0,c
 15620                           
 15621                           ;stkvar	_b @ sp[(-4)+-4]
 15622  0130F4  50E1               	movf	fsr1l,w,c
 15623  0130F6  0FF8               	addlw	-8
 15624  0130F8  6ED9               	movwf	fsr2l,c
 15625  0130FA  50E2               	movf	fsr1h,w,c
 15626  0130FC  6EDA               	movwf	fsr2h,c
 15627  0130FE  0EFF               	movlw	255
 15628  013100  22DA               	addwfc	fsr2h,f,c
 15629  013102  2840               	incf	(btemp+11)^0,w,c
 15630  013104  52DE               	movf	postinc2,f,c
 15631  013106  D008               	goto	u4990
 15632  013108                     u4995:
 15633  013108  52DE               	movf	postinc2,f,c
 15634  01310A  90D8               	bcf	status,0,c
 15635  01310C  BEDC               	btfsc	preinc2,7,c
 15636  01310E  80D8               	bsf	status,0,c
 15637  013110  32DD               	rrcf	postdec2,f,c
 15638  013112  32DD               	rrcf	postdec2,f,c
 15639  013114  32DD               	rrcf	postdec2,f,c
 15640  013116  32DE               	rrcf	postinc2,f,c
 15641  013118                     u4990:
 15642  013118  2EE8               	decfsz	wreg,f,c
 15643  01311A  D7F6               	goto	u4995
 15644                           
 15645                           ;stkvar	_bexp @ sp[(-4)+1]
 15646  01311C  0EFD               	movlw	-3
 15647  01311E  28E3               	incf	plusw1,w,c
 15648  013120  B4D8               	btfsc	status,2,c
 15649  013122  D002               	goto	l6321
 15650                           
 15651                           ;stkvar	_bexp @ sp[(-4)+1]
 15652  013124  0EFD               	movlw	-3
 15653  013126  2AE3               	incf	plusw1,f,c
 15654  013128                     l6321:
 15655                           
 15656                           ;stkvar	_bexp @ sp[(-4)+1]
 15657  013128  0EFD               	movlw	-3
 15658  01312A  28E3               	incf	plusw1,w,c
 15659  01312C  B4D8               	btfsc	status,2,c
 15660  01312E  D004               	goto	u5020
 15661                           
 15662                           ;stkvar	_bexp @ sp[(-4)+1]
 15663  013130  0EFD               	movlw	-3
 15664  013132  50E3               	movf	plusw1,w,c
 15665  013134  A4D8               	btfss	status,2,c
 15666  013136  D00E               	goto	l6331
 15667  013138                     u5020:
 15668                           
 15669                           ;stkvar	_b @ sp[(-4)+-4]
 15670  013138  0EF8               	movlw	-8
 15671  01313A  6AE3               	clrf	plusw1,c
 15672  01313C  0EF9               	movlw	-7
 15673  01313E  6AE3               	clrf	plusw1,c
 15674  013140  0EFA               	movlw	-6
 15675  013142  6AE3               	clrf	plusw1,c
 15676  013144  0EFB               	movlw	-5
 15677  013146  6AE3               	clrf	plusw1,c
 15678                           
 15679                           ;stkvar	_bexp @ sp[(-4)+1]
 15680  013148  0EFD               	movlw	-3
 15681  01314A  50E3               	movf	plusw1,w,c
 15682  01314C  A4D8               	btfss	status,2,c
 15683  01314E  D002               	goto	l6331
 15684                           
 15685                           ;stkvar	_signs @ sp[(-4)+3]
 15686  013150  0EFF               	movlw	-1
 15687  013152  6AE3               	clrf	plusw1,c
 15688  013154                     l6331:
 15689                           
 15690                           ;stkvar	_bexp @ sp[(-4)+1]
 15691  013154  0EFD               	movlw	-3
 15692  013156  A0E3               	btfss	plusw1,0,c
 15693  013158  D009               	goto	l6335
 15694                           
 15695                           ;stkvar	_b @ sp[(-4)+-4]
 15696  01315A  0EFA               	movlw	250
 15697  01315C  24E1               	addwf	fsr1l,w,c
 15698  01315E  6ED9               	movwf	fsr2l,c
 15699  013160  0EFF               	movlw	255
 15700  013162  20E2               	addwfc	fsr1h,w,c
 15701  013164  6EDA               	movwf	fsr2h,c
 15702  013166  0E00               	movlw	0
 15703  013168  8EDB               	bsf	plusw2,7,c
 15704  01316A  D008               	goto	l6337
 15705  01316C                     l6335:
 15706                           
 15707                           ;stkvar	_b @ sp[(-4)+-4]
 15708  01316C  0EFA               	movlw	250
 15709  01316E  24E1               	addwf	fsr1l,w,c
 15710  013170  6ED9               	movwf	fsr2l,c
 15711  013172  0EFF               	movlw	255
 15712  013174  20E2               	addwfc	fsr1h,w,c
 15713  013176  6EDA               	movwf	fsr2h,c
 15714  013178  0E7F               	movlw	127
 15715  01317A  16DF               	andwf	indf2,f,c
 15716  01317C                     l6337:
 15717                           
 15718                           ;stkvar	_b @ sp[(-4)+-4]
 15719  01317C  0EFB               	movlw	251
 15720  01317E  24E1               	addwf	fsr1l,w,c
 15721  013180  6ED9               	movwf	fsr2l,c
 15722  013182  0EFF               	movlw	255
 15723  013184  20E2               	addwfc	fsr1h,w,c
 15724  013186  6EDA               	movwf	fsr2h,c
 15725                           
 15726                           ;stkvar	_bexp @ sp[(-4)+1]
 15727  013188  0EFD               	movlw	-3
 15728  01318A  006F FF8C  F040    	movff	plusw1,btemp+11
 15729  013190  90D8               	bcf	status,0,c
 15730  013192  3040               	rrcf	(btemp+11)^0,w,c
 15731  013194  6EDF               	movwf	indf2,c
 15732                           
 15733                           ;stkvar	_signs @ sp[(-4)+3]
 15734  013196  0EFF               	movlw	-1
 15735  013198  AEE3               	btfss	plusw1,7,c
 15736  01319A  D008               	goto	l6343
 15737                           
 15738                           ;stkvar	_b @ sp[(-4)+-4]
 15739  01319C  0EFB               	movlw	251
 15740  01319E  24E1               	addwf	fsr1l,w,c
 15741  0131A0  6ED9               	movwf	fsr2l,c
 15742  0131A2  0EFF               	movlw	255
 15743  0131A4  20E2               	addwfc	fsr1h,w,c
 15744  0131A6  6EDA               	movwf	fsr2h,c
 15745  0131A8  0E00               	movlw	0
 15746  0131AA  8EDB               	bsf	plusw2,7,c
 15747  0131AC                     l6343:
 15748                           
 15749                           ;stkvar	_b @ sp[(-4)+-4]
 15750  0131AC  0EF8               	movlw	-8
 15751  0131AE  006F FF8C  F035    	movff	plusw1,btemp
 15752  0131B4  0EF9               	movlw	-7
 15753  0131B6  006F FF8C  F036    	movff	plusw1,btemp+1
 15754  0131BC  0EFA               	movlw	-6
 15755  0131BE  006F FF8C  F037    	movff	plusw1,btemp+2
 15756  0131C4  0EFB               	movlw	-5
 15757  0131C6  006F FF8C  F038    	movff	plusw1,btemp+3
 15758  0131CC                     l2545:
 15759                           
 15760                           ; ___fladd: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsi
      +                          ze = 8, vargsize = 0
 15761  0131CC  0EF4               	movlw	244
 15762  0131CE  26E1               	addwf	fsr1l,f,c
 15763  0131D0  0EFF               	movlw	255
 15764  0131D2  22E2               	addwfc	fsr1h,f,c
 15765  0131D4  0012               	return		;funcret
 15766  0131D6                     __end_of___fladd:
 15767                           	opt callstack 0
 15768                           
 15769 ;; *************** function ___flneg *****************
 15770 ;; Defined at:
 15771 ;;		line 15 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flneg.c"
 15772 ;; Parameters:    Size  Location     Type
 15773 ;;  f1              4  [STACK] unsigned char 
 15774 ;; Auto vars:     Size  Location     Type
 15775 ;;		None
 15776 ;; Return value:  Size  Location     Type
 15777 ;;                  4  [STACK] unsigned char 
 15778 ;; Registers used:
 15779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3
 15780 ;; Tracked objects:
 15781 ;;		On entry : 0/4
 15782 ;;		On exit  : 0/0
 15783 ;;		Unchanged: 0/0
 15784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15789 ;;Total ram usage:        0 bytes
 15790 ;; Hardware stack levels used:    1
 15791 ;; Hardware stack levels required when called:    6
 15792 ;; This function calls:
 15793 ;;		Nothing
 15794 ;; This function is called by:
 15795 ;;		_efgtoa
 15796 ;; This function uses a reentrant model
 15797 ;;
 15798                           
 15799                           	psect	text54
 15800  018308                     __ptext54:
 15801                           	opt callstack 0
 15802  018308                     ___flneg:
 15803                           	opt callstack 17
 15804                           
 15805                           ;stkvar	_f1 @ sp[(0)+-4]
 15806                           
 15807                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 15808                           ;incstack = 0
 15809  018308  0EFC               	movlw	-4
 15810  01830A  50E3               	movf	plusw1,w,c
 15811  01830C  E10A               	bnz	u6330
 15812  01830E  0EFD               	movlw	-3
 15813  018310  50E3               	movf	plusw1,w,c
 15814  018312  E107               	bnz	u6330
 15815  018314  0EFE               	movlw	-2
 15816  018316  50E3               	movf	plusw1,w,c
 15817  018318  E104               	bnz	u6330
 15818  01831A  0EFF               	movlw	-1
 15819  01831C  50E3               	movf	plusw1,w,c
 15820  01831E  B4D8               	btfsc	status,2,c
 15821  018320  D002               	goto	l7011
 15822  018322                     u6330:
 15823                           
 15824                           ;stkvar	_f1 @ sp[(0)+-4]
 15825  018322  0EFF               	movlw	-1
 15826  018324  7EE3               	btg	plusw1,7,c
 15827  018326                     l7011:
 15828                           
 15829                           ;stkvar	_f1 @ sp[(0)+-4]
 15830  018326  0EFC               	movlw	-4
 15831  018328  006F FF8C  F035    	movff	plusw1,btemp
 15832  01832E  0EFD               	movlw	-3
 15833  018330  006F FF8C  F036    	movff	plusw1,btemp+1
 15834  018336  0EFE               	movlw	-2
 15835  018338  006F FF8C  F037    	movff	plusw1,btemp+2
 15836  01833E  0EFF               	movlw	-1
 15837  018340  006F FF8C  F038    	movff	plusw1,btemp+3
 15838                           
 15839                           ; ___flneg: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 15840  018346  52E5               	movf	postdec1,f,c
 15841  018348  52E5               	movf	postdec1,f,c
 15842  01834A  52E5               	movf	postdec1,f,c
 15843  01834C  52E5               	movf	postdec1,f,c
 15844  01834E  0012               	return		;funcret
 15845  018350                     __end_of___flneg:
 15846                           	opt callstack 0
 15847                           
 15848 ;; *************** function ___flmul *****************
 15849 ;; Defined at:
 15850 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcmul.c"
 15851 ;; Parameters:    Size  Location     Type
 15852 ;;  b               4  [STACK] unsigned char 
 15853 ;;  a               4  [STACK] unsigned char 
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;  prod            4  [STACK] struct .
 15856 ;;  grs             4  [STACK] unsigned long 
 15857 ;;  temp            2  [STACK] struct .
 15858 ;;  bexp            1  [STACK] unsigned char 
 15859 ;;  aexp            1  [STACK] unsigned char 
 15860 ;;  sign            1  [STACK] unsigned char 
 15861 ;; Return value:  Size  Location     Type
 15862 ;;                  4  [STACK] unsigned char 
 15863 ;; Registers used:
 15864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+4, btemp
      ++5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 15865 ;; Tracked objects:
 15866 ;;		On entry : 0/4
 15867 ;;		On exit  : 0/0
 15868 ;;		Unchanged: 0/0
 15869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 15870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 15874 ;;Total ram usage:        0 bytes
 15875 ;; Hardware stack levels used:    1
 15876 ;; Hardware stack levels required when called:    6
 15877 ;; This function calls:
 15878 ;;		Nothing
 15879 ;; This function is called by:
 15880 ;;		_conv_raw_result
 15881 ;;		_lp_filter
 15882 ;;		_efgtoa
 15883 ;; This function uses a reentrant model
 15884 ;;
 15885                           
 15886                           	psect	text55
 15887  0121F0                     __ptext55:
 15888                           	opt callstack 0
 15889  0121F0                     ___flmul:
 15890                           	opt callstack 0
 15891                           
 15892                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 15893  0121F0  0E0D               	movlw	13
 15894  0121F2  26E1               	addwf	fsr1l,f,c
 15895  0121F4  0E00               	movlw	0
 15896  0121F6  22E2               	addwfc	fsr1h,f,c
 15897                           
 15898                           ;stkvar	_b @ sp[(-13)+-4]
 15899                           
 15900                           ;incstack = 0
 15901  0121F8  0EF2               	movlw	242
 15902  0121FA  24E1               	addwf	fsr1l,w,c
 15903  0121FC  6ED9               	movwf	fsr2l,c
 15904  0121FE  0EFF               	movlw	255
 15905  012200  20E2               	addwfc	fsr1h,w,c
 15906  012202  6EDA               	movwf	fsr2h,c
 15907  012204  50DF               	movf	indf2,w,c
 15908  012206  6E40               	movwf	(btemp+11)^0,c
 15909  012208  0E80               	movlw	128
 15910  01220A  1640               	andwf	(btemp+11)^0,f,c
 15911                           
 15912                           ;stkvar	_sign @ sp[(-13)+12]
 15913  01220C  0EFF               	movlw	-1
 15914  01220E  0060  F103  FFE3   	movff	btemp+11,plusw1
 15915                           
 15916                           ;stkvar	_b @ sp[(-13)+-4]
 15917  012214  0EF2               	movlw	242
 15918  012216  24E1               	addwf	fsr1l,w,c
 15919  012218  6ED9               	movwf	fsr2l,c
 15920  01221A  0EFF               	movlw	255
 15921  01221C  20E2               	addwfc	fsr1h,w,c
 15922  01221E  6EDA               	movwf	fsr2h,c
 15923  012220  50DF               	movf	indf2,w,c
 15924  012222  6E40               	movwf	(btemp+11)^0,c
 15925  012224  90D8               	bcf	status,0,c
 15926  012226  3440               	rlcf	(btemp+11)^0,w,c
 15927  012228  6E3F               	movwf	(btemp+10)^0,c
 15928                           
 15929                           ;stkvar	_bexp @ sp[(-13)+10]
 15930  01222A  0EFD               	movlw	-3
 15931  01222C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15932                           
 15933                           ;stkvar	_b @ sp[(-13)+-4]
 15934  012232  0EF1               	movlw	241
 15935  012234  24E1               	addwf	fsr1l,w,c
 15936  012236  6ED9               	movwf	fsr2l,c
 15937  012238  0EFF               	movlw	255
 15938  01223A  20E2               	addwfc	fsr1h,w,c
 15939  01223C  6EDA               	movwf	fsr2h,c
 15940  01223E  AEDF               	btfss	indf2,7,c
 15941  012240  D002               	goto	l6727
 15942                           
 15943                           ;stkvar	_bexp @ sp[(-13)+10]
 15944  012242  0EFD               	movlw	-3
 15945  012244  80E3               	bsf	plusw1,0,c
 15946  012246                     l6727:
 15947                           
 15948                           ;stkvar	_bexp @ sp[(-13)+10]
 15949  012246  0EFD               	movlw	-3
 15950  012248  50E3               	movf	plusw1,w,c
 15951  01224A  B4D8               	btfsc	status,2,c
 15952  01224C  D01F               	goto	l6735
 15953                           
 15954                           ;stkvar	_bexp @ sp[(-13)+10]
 15955  01224E  0EFD               	movlw	-3
 15956  012250  28E3               	incf	plusw1,w,c
 15957  012252  A4D8               	btfss	status,2,c
 15958  012254  D018               	goto	l6733
 15959  012256  0E00               	movlw	0
 15960  012258  6E3D               	movwf	(btemp+8)^0,c
 15961  01225A  0E00               	movlw	0
 15962  01225C  6E3E               	movwf	(btemp+9)^0,c
 15963  01225E  0E00               	movlw	0
 15964  012260  6E3F               	movwf	(btemp+10)^0,c
 15965  012262  0E00               	movlw	0
 15966  012264  6E40               	movwf	(btemp+11)^0,c
 15967                           
 15968                           ;stkvar	_b @ sp[(-13)+-4]
 15969  012266  0EEF               	movlw	-17
 15970  012268  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15971  01226E  0EF0               	movlw	-16
 15972  012270  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15973  012276  0EF1               	movlw	-15
 15974  012278  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 15975  01227E  0EF2               	movlw	-14
 15976  012280  0060  F103  FFE3   	movff	btemp+11,plusw1
 15977  012286                     l6733:
 15978                           
 15979                           ;stkvar	_b @ sp[(-13)+-4]
 15980  012286  0EF1               	movlw	-15
 15981  012288  8EE3               	bsf	plusw1,7,c
 15982  01228A  D018               	goto	l6737
 15983  01228C                     l6735:
 15984  01228C  0E00               	movlw	0
 15985  01228E  6E3D               	movwf	(btemp+8)^0,c
 15986  012290  0E00               	movlw	0
 15987  012292  6E3E               	movwf	(btemp+9)^0,c
 15988  012294  0E00               	movlw	0
 15989  012296  6E3F               	movwf	(btemp+10)^0,c
 15990  012298  0E00               	movlw	0
 15991  01229A  6E40               	movwf	(btemp+11)^0,c
 15992                           
 15993                           ;stkvar	_b @ sp[(-13)+-4]
 15994  01229C  0EEF               	movlw	-17
 15995  01229E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 15996  0122A4  0EF0               	movlw	-16
 15997  0122A6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 15998  0122AC  0EF1               	movlw	-15
 15999  0122AE  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16000  0122B4  0EF2               	movlw	-14
 16001  0122B6  0060  F103  FFE3   	movff	btemp+11,plusw1
 16002  0122BC                     l6737:
 16003                           
 16004                           ;stkvar	_a @ sp[(-13)+-8]
 16005  0122BC  0EEE               	movlw	238
 16006  0122BE  24E1               	addwf	fsr1l,w,c
 16007  0122C0  6ED9               	movwf	fsr2l,c
 16008  0122C2  0EFF               	movlw	255
 16009  0122C4  20E2               	addwfc	fsr1h,w,c
 16010  0122C6  6EDA               	movwf	fsr2h,c
 16011  0122C8  50DF               	movf	indf2,w,c
 16012  0122CA  6E40               	movwf	(btemp+11)^0,c
 16013  0122CC  0E80               	movlw	128
 16014  0122CE  1640               	andwf	(btemp+11)^0,f,c
 16015                           
 16016                           ;stkvar	_sign @ sp[(-13)+12]
 16017  0122D0  50E1               	movf	fsr1l,w,c
 16018  0122D2  0FFF               	addlw	-1
 16019  0122D4  6ED9               	movwf	fsr2l,c
 16020  0122D6  50E2               	movf	fsr1h,w,c
 16021  0122D8  6EDA               	movwf	fsr2h,c
 16022  0122DA  0EFF               	movlw	255
 16023  0122DC  22DA               	addwfc	fsr2h,f,c
 16024  0122DE  5040               	movf	(btemp+11)^0,w,c
 16025  0122E0  1ADF               	xorwf	indf2,f,c
 16026                           
 16027                           ;stkvar	_a @ sp[(-13)+-8]
 16028  0122E2  0EEE               	movlw	238
 16029  0122E4  24E1               	addwf	fsr1l,w,c
 16030  0122E6  6ED9               	movwf	fsr2l,c
 16031  0122E8  0EFF               	movlw	255
 16032  0122EA  20E2               	addwfc	fsr1h,w,c
 16033  0122EC  6EDA               	movwf	fsr2h,c
 16034  0122EE  50DF               	movf	indf2,w,c
 16035  0122F0  6E40               	movwf	(btemp+11)^0,c
 16036  0122F2  90D8               	bcf	status,0,c
 16037  0122F4  3440               	rlcf	(btemp+11)^0,w,c
 16038  0122F6  6E3F               	movwf	(btemp+10)^0,c
 16039                           
 16040                           ;stkvar	_aexp @ sp[(-13)+11]
 16041  0122F8  0EFE               	movlw	-2
 16042  0122FA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16043                           
 16044                           ;stkvar	_a @ sp[(-13)+-8]
 16045  012300  0EED               	movlw	237
 16046  012302  24E1               	addwf	fsr1l,w,c
 16047  012304  6ED9               	movwf	fsr2l,c
 16048  012306  0EFF               	movlw	255
 16049  012308  20E2               	addwfc	fsr1h,w,c
 16050  01230A  6EDA               	movwf	fsr2h,c
 16051  01230C  AEDF               	btfss	indf2,7,c
 16052  01230E  D002               	goto	l6745
 16053                           
 16054                           ;stkvar	_aexp @ sp[(-13)+11]
 16055  012310  0EFE               	movlw	-2
 16056  012312  80E3               	bsf	plusw1,0,c
 16057  012314                     l6745:
 16058                           
 16059                           ;stkvar	_aexp @ sp[(-13)+11]
 16060  012314  0EFE               	movlw	-2
 16061  012316  50E3               	movf	plusw1,w,c
 16062  012318  B4D8               	btfsc	status,2,c
 16063  01231A  D01F               	goto	l6753
 16064                           
 16065                           ;stkvar	_aexp @ sp[(-13)+11]
 16066  01231C  0EFE               	movlw	-2
 16067  01231E  28E3               	incf	plusw1,w,c
 16068  012320  A4D8               	btfss	status,2,c
 16069  012322  D018               	goto	l6751
 16070  012324  0E00               	movlw	0
 16071  012326  6E3D               	movwf	(btemp+8)^0,c
 16072  012328  0E00               	movlw	0
 16073  01232A  6E3E               	movwf	(btemp+9)^0,c
 16074  01232C  0E00               	movlw	0
 16075  01232E  6E3F               	movwf	(btemp+10)^0,c
 16076  012330  0E00               	movlw	0
 16077  012332  6E40               	movwf	(btemp+11)^0,c
 16078                           
 16079                           ;stkvar	_a @ sp[(-13)+-8]
 16080  012334  0EEB               	movlw	-21
 16081  012336  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16082  01233C  0EEC               	movlw	-20
 16083  01233E  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16084  012344  0EED               	movlw	-19
 16085  012346  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16086  01234C  0EEE               	movlw	-18
 16087  01234E  0060  F103  FFE3   	movff	btemp+11,plusw1
 16088  012354                     l6751:
 16089                           
 16090                           ;stkvar	_a @ sp[(-13)+-8]
 16091  012354  0EED               	movlw	-19
 16092  012356  8EE3               	bsf	plusw1,7,c
 16093  012358  D018               	goto	l6755
 16094  01235A                     l6753:
 16095  01235A  0E00               	movlw	0
 16096  01235C  6E3D               	movwf	(btemp+8)^0,c
 16097  01235E  0E00               	movlw	0
 16098  012360  6E3E               	movwf	(btemp+9)^0,c
 16099  012362  0E00               	movlw	0
 16100  012364  6E3F               	movwf	(btemp+10)^0,c
 16101  012366  0E00               	movlw	0
 16102  012368  6E40               	movwf	(btemp+11)^0,c
 16103                           
 16104                           ;stkvar	_a @ sp[(-13)+-8]
 16105  01236A  0EEB               	movlw	-21
 16106  01236C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16107  012372  0EEC               	movlw	-20
 16108  012374  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16109  01237A  0EED               	movlw	-19
 16110  01237C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16111  012382  0EEE               	movlw	-18
 16112  012384  0060  F103  FFE3   	movff	btemp+11,plusw1
 16113  01238A                     l6755:
 16114                           
 16115                           ;stkvar	_aexp @ sp[(-13)+11]
 16116  01238A  0EFE               	movlw	-2
 16117  01238C  50E3               	movf	plusw1,w,c
 16118  01238E  B4D8               	btfsc	status,2,c
 16119  012390  D004               	goto	u5960
 16120                           
 16121                           ;stkvar	_bexp @ sp[(-13)+10]
 16122  012392  0EFD               	movlw	-3
 16123  012394  50E3               	movf	plusw1,w,c
 16124  012396  A4D8               	btfss	status,2,c
 16125  012398  D009               	goto	l6763
 16126  01239A                     u5960:
 16127  01239A  0E00               	movlw	0
 16128  01239C  6E35               	movwf	btemp^0,c
 16129  01239E  0E00               	movlw	0
 16130  0123A0  6E36               	movwf	(btemp+1)^0,c
 16131  0123A2  0E00               	movlw	0
 16132  0123A4  6E37               	movwf	(btemp+2)^0,c
 16133  0123A6  0E00               	movlw	0
 16134  0123A8  6E38               	movwf	(btemp+3)^0,c
 16135  0123AA  D332               	goto	l2626
 16136  0123AC                     l6763:
 16137                           
 16138                           ;stkvar	_b @ sp[(-13)+-4]
 16139  0123AC  0EEF               	movlw	-17
 16140  0123AE  006F FF8C  F040    	movff	plusw1,btemp+11
 16141                           
 16142                           ;stkvar	_a @ sp[(-13)+-8]
 16143  0123B4  0EED               	movlw	237
 16144  0123B6  24E1               	addwf	fsr1l,w,c
 16145  0123B8  6ED9               	movwf	fsr2l,c
 16146  0123BA  0EFF               	movlw	255
 16147  0123BC  20E2               	addwfc	fsr1h,w,c
 16148  0123BE  6EDA               	movwf	fsr2h,c
 16149  0123C0  50DF               	movf	indf2,w,c
 16150  0123C2  0240               	mulwf	(btemp+11)^0,c
 16151                           
 16152                           ;stkvar	_temp @ sp[(-13)+8]
 16153  0123C4  0EFB               	movlw	-5
 16154  0123C6  006F FFCF FFE3     	movff	prodl,plusw1
 16155  0123CC  0EFC               	movlw	-4
 16156  0123CE  006F FFD3 FFE3     	movff	prodh,plusw1
 16157                           
 16158                           ;stkvar	_temp @ sp[(-13)+8]
 16159  0123D4  0EFB               	movlw	-5
 16160  0123D6  006F FF8C  F040    	movff	plusw1,btemp+11
 16161  0123DC  0060  F100  F039   	movff	btemp+11,btemp+4
 16162  0123E2  6A3A               	clrf	(btemp+5)^0,c
 16163  0123E4  6A3B               	clrf	(btemp+6)^0,c
 16164  0123E6  6A3C               	clrf	(btemp+7)^0,c
 16165                           
 16166                           ;stkvar	_grs @ sp[(-13)+4]
 16167  0123E8  0EF7               	movlw	-9
 16168  0123EA  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 16169  0123F0  0EF8               	movlw	-8
 16170  0123F2  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 16171  0123F8  0EF9               	movlw	-7
 16172  0123FA  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 16173  012400  0EFA               	movlw	-6
 16174  012402  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 16175                           
 16176                           ;stkvar	_temp @ sp[(-13)+8]
 16177  012408  0EFC               	movlw	252
 16178  01240A  24E1               	addwf	fsr1l,w,c
 16179  01240C  6ED9               	movwf	fsr2l,c
 16180  01240E  0EFF               	movlw	255
 16181  012410  20E2               	addwfc	fsr1h,w,c
 16182  012412  6EDA               	movwf	fsr2h,c
 16183  012414  50DF               	movf	indf2,w,c
 16184  012416  6E40               	movwf	(btemp+11)^0,c
 16185  012418  0060  F100  F039   	movff	btemp+11,btemp+4
 16186  01241E  6A3A               	clrf	(btemp+5)^0,c
 16187  012420  6A3B               	clrf	(btemp+6)^0,c
 16188  012422  6A3C               	clrf	(btemp+7)^0,c
 16189                           
 16190                           ;stkvar	_prod @ sp[(-13)+0]
 16191  012424  0EF3               	movlw	-13
 16192  012426  0060  F0E7  FFE3   	movff	btemp+4,plusw1
 16193  01242C  0EF4               	movlw	-12
 16194  01242E  0060  F0EB  FFE3   	movff	btemp+5,plusw1
 16195  012434  0EF5               	movlw	-11
 16196  012436  0060  F0EF  FFE3   	movff	btemp+6,plusw1
 16197  01243C  0EF6               	movlw	-10
 16198  01243E  0060  F0F3  FFE3   	movff	btemp+7,plusw1
 16199                           
 16200                           ;stkvar	_b @ sp[(-13)+-4]
 16201  012444  0EF0               	movlw	240
 16202  012446  24E1               	addwf	fsr1l,w,c
 16203  012448  6ED9               	movwf	fsr2l,c
 16204  01244A  0EFF               	movlw	255
 16205  01244C  20E2               	addwfc	fsr1h,w,c
 16206  01244E  6EDA               	movwf	fsr2h,c
 16207  012450  50DF               	movf	indf2,w,c
 16208  012452  6E40               	movwf	(btemp+11)^0,c
 16209                           
 16210                           ;stkvar	_a @ sp[(-13)+-8]
 16211  012454  0EEC               	movlw	236
 16212  012456  24E1               	addwf	fsr1l,w,c
 16213  012458  6ED9               	movwf	fsr2l,c
 16214  01245A  0EFF               	movlw	255
 16215  01245C  20E2               	addwfc	fsr1h,w,c
 16216  01245E  6EDA               	movwf	fsr2h,c
 16217  012460  50DF               	movf	indf2,w,c
 16218  012462  0240               	mulwf	(btemp+11)^0,c
 16219                           
 16220                           ;stkvar	_temp @ sp[(-13)+8]
 16221  012464  0EFB               	movlw	-5
 16222  012466  006F FFCF FFE3     	movff	prodl,plusw1
 16223  01246C  0EFC               	movlw	-4
 16224  01246E  006F FFD3 FFE3     	movff	prodh,plusw1
 16225                           
 16226                           ;stkvar	_grs @ sp[(-13)+4]
 16227  012474  50E1               	movf	fsr1l,w,c
 16228  012476  0FF7               	addlw	-9
 16229  012478  6ED9               	movwf	fsr2l,c
 16230  01247A  50E2               	movf	fsr1h,w,c
 16231  01247C  6EDA               	movwf	fsr2h,c
 16232  01247E  0EFF               	movlw	255
 16233  012480  22DA               	addwfc	fsr2h,f,c
 16234                           
 16235                           ;stkvar	_temp @ sp[(-13)+8]
 16236  012482  0EFB               	movlw	-5
 16237  012484  50E3               	movf	plusw1,w,c
 16238  012486  26DE               	addwf	postinc2,f,c
 16239  012488  0E00               	movlw	0
 16240  01248A  22DE               	addwfc	postinc2,f,c
 16241  01248C  22DE               	addwfc	postinc2,f,c
 16242  01248E  22DE               	addwfc	postinc2,f,c
 16243                           
 16244                           ;stkvar	_prod @ sp[(-13)+0]
 16245  012490  50E1               	movf	fsr1l,w,c
 16246  012492  0FF3               	addlw	-13
 16247  012494  6ED9               	movwf	fsr2l,c
 16248  012496  50E2               	movf	fsr1h,w,c
 16249  012498  6EDA               	movwf	fsr2h,c
 16250  01249A  0EFF               	movlw	255
 16251  01249C  22DA               	addwfc	fsr2h,f,c
 16252                           
 16253                           ;stkvar	_temp @ sp[(-13)+8]
 16254  01249E  0EFC               	movlw	252
 16255  0124A0  24E1               	addwf	fsr1l,w,c
 16256  0124A2  6EE9               	movwf	fsr0l,c
 16257  0124A4  0EFF               	movlw	255
 16258  0124A6  20E2               	addwfc	fsr1h,w,c
 16259  0124A8  6EEA               	movwf	fsr0h,c
 16260  0124AA  50EF               	movf	indf0,w,c
 16261  0124AC  26DE               	addwf	postinc2,f,c
 16262  0124AE  0E00               	movlw	0
 16263  0124B0  22DE               	addwfc	postinc2,f,c
 16264  0124B2  22DE               	addwfc	postinc2,f,c
 16265  0124B4  22DE               	addwfc	postinc2,f,c
 16266                           
 16267                           ;stkvar	_b @ sp[(-13)+-4]
 16268  0124B6  0EF1               	movlw	241
 16269  0124B8  24E1               	addwf	fsr1l,w,c
 16270  0124BA  6ED9               	movwf	fsr2l,c
 16271  0124BC  0EFF               	movlw	255
 16272  0124BE  20E2               	addwfc	fsr1h,w,c
 16273  0124C0  6EDA               	movwf	fsr2h,c
 16274  0124C2  50DF               	movf	indf2,w,c
 16275  0124C4  6E40               	movwf	(btemp+11)^0,c
 16276                           
 16277                           ;stkvar	_a @ sp[(-13)+-8]
 16278  0124C6  0EEB               	movlw	-21
 16279  0124C8  50E3               	movf	plusw1,w,c
 16280  0124CA  0240               	mulwf	(btemp+11)^0,c
 16281                           
 16282                           ;stkvar	_temp @ sp[(-13)+8]
 16283  0124CC  0EFB               	movlw	-5
 16284  0124CE  006F FFCF FFE3     	movff	prodl,plusw1
 16285  0124D4  0EFC               	movlw	-4
 16286  0124D6  006F FFD3 FFE3     	movff	prodh,plusw1
 16287                           
 16288                           ;stkvar	_grs @ sp[(-13)+4]
 16289  0124DC  50E1               	movf	fsr1l,w,c
 16290  0124DE  0FF7               	addlw	-9
 16291  0124E0  6ED9               	movwf	fsr2l,c
 16292  0124E2  50E2               	movf	fsr1h,w,c
 16293  0124E4  6EDA               	movwf	fsr2h,c
 16294  0124E6  0EFF               	movlw	255
 16295  0124E8  22DA               	addwfc	fsr2h,f,c
 16296                           
 16297                           ;stkvar	_temp @ sp[(-13)+8]
 16298  0124EA  0EFB               	movlw	-5
 16299  0124EC  50E3               	movf	plusw1,w,c
 16300  0124EE  26DE               	addwf	postinc2,f,c
 16301  0124F0  0E00               	movlw	0
 16302  0124F2  22DE               	addwfc	postinc2,f,c
 16303  0124F4  22DE               	addwfc	postinc2,f,c
 16304  0124F6  22DE               	addwfc	postinc2,f,c
 16305                           
 16306                           ;stkvar	_prod @ sp[(-13)+0]
 16307  0124F8  50E1               	movf	fsr1l,w,c
 16308  0124FA  0FF3               	addlw	-13
 16309  0124FC  6ED9               	movwf	fsr2l,c
 16310  0124FE  50E2               	movf	fsr1h,w,c
 16311  012500  6EDA               	movwf	fsr2h,c
 16312  012502  0EFF               	movlw	255
 16313  012504  22DA               	addwfc	fsr2h,f,c
 16314                           
 16315                           ;stkvar	_temp @ sp[(-13)+8]
 16316  012506  0EFC               	movlw	252
 16317  012508  24E1               	addwf	fsr1l,w,c
 16318  01250A  6EE9               	movwf	fsr0l,c
 16319  01250C  0EFF               	movlw	255
 16320  01250E  20E2               	addwfc	fsr1h,w,c
 16321  012510  6EEA               	movwf	fsr0h,c
 16322  012512  50EF               	movf	indf0,w,c
 16323  012514  26DE               	addwf	postinc2,f,c
 16324  012516  0E00               	movlw	0
 16325  012518  22DE               	addwfc	postinc2,f,c
 16326  01251A  22DE               	addwfc	postinc2,f,c
 16327  01251C  22DE               	addwfc	postinc2,f,c
 16328                           
 16329                           ;stkvar	_grs @ sp[(-13)+4]
 16330  01251E  50E1               	movf	fsr1l,w,c
 16331  012520  0FF7               	addlw	-9
 16332  012522  6ED9               	movwf	fsr2l,c
 16333  012524  50E2               	movf	fsr1h,w,c
 16334  012526  6EDA               	movwf	fsr2h,c
 16335  012528  0EFF               	movlw	255
 16336  01252A  22DA               	addwfc	fsr2h,f,c
 16337  01252C  0E08               	movlw	8
 16338  01252E                     u5975:
 16339  01252E  90D8               	bcf	status,0,c
 16340  012530  36DE               	rlcf	postinc2,f,c
 16341  012532  36DE               	rlcf	postinc2,f,c
 16342  012534  36DE               	rlcf	postinc2,f,c
 16343  012536  36DD               	rlcf	postdec2,f,c
 16344  012538  52DD               	movf	postdec2,f,c
 16345  01253A  52DD               	movf	postdec2,f,c
 16346  01253C  2EE8               	decfsz	wreg,f,c
 16347  01253E  D7F7               	goto	u5975
 16348                           
 16349                           ;stkvar	_b @ sp[(-13)+-4]
 16350  012540  0EF0               	movlw	240
 16351  012542  24E1               	addwf	fsr1l,w,c
 16352  012544  6ED9               	movwf	fsr2l,c
 16353  012546  0EFF               	movlw	255
 16354  012548  20E2               	addwfc	fsr1h,w,c
 16355  01254A  6EDA               	movwf	fsr2h,c
 16356  01254C  50DF               	movf	indf2,w,c
 16357  01254E  6E40               	movwf	(btemp+11)^0,c
 16358                           
 16359                           ;stkvar	_a @ sp[(-13)+-8]
 16360  012550  0EEB               	movlw	-21
 16361  012552  50E3               	movf	plusw1,w,c
 16362  012554  0240               	mulwf	(btemp+11)^0,c
 16363                           
 16364                           ;stkvar	_temp @ sp[(-13)+8]
 16365  012556  0EFB               	movlw	-5
 16366  012558  006F FFCF FFE3     	movff	prodl,plusw1
 16367  01255E  0EFC               	movlw	-4
 16368  012560  006F FFD3 FFE3     	movff	prodh,plusw1
 16369                           
 16370                           ;stkvar	_temp @ sp[(-13)+8]
 16371  012566  0EFB               	movlw	-5
 16372  012568  006F FF8C  F03F    	movff	plusw1,btemp+10
 16373  01256E  0EFC               	movlw	-4
 16374  012570  006F FF8C  F040    	movff	plusw1,btemp+11
 16375                           
 16376                           ;stkvar	_grs @ sp[(-13)+4]
 16377  012576  50E1               	movf	fsr1l,w,c
 16378  012578  0FF7               	addlw	-9
 16379  01257A  6ED9               	movwf	fsr2l,c
 16380  01257C  50E2               	movf	fsr1h,w,c
 16381  01257E  6EDA               	movwf	fsr2h,c
 16382  012580  0EFF               	movlw	255
 16383  012582  22DA               	addwfc	fsr2h,f,c
 16384  012584  503F               	movf	(btemp+10)^0,w,c
 16385  012586  26DE               	addwf	postinc2,f,c
 16386  012588  5040               	movf	(btemp+11)^0,w,c
 16387  01258A  22DE               	addwfc	postinc2,f,c
 16388  01258C  0E00               	movlw	0
 16389  01258E  22DE               	addwfc	postinc2,f,c
 16390  012590  22DE               	addwfc	postinc2,f,c
 16391                           
 16392                           ;stkvar	_b @ sp[(-13)+-4]
 16393  012592  0EEF               	movlw	-17
 16394  012594  006F FF8C  F040    	movff	plusw1,btemp+11
 16395                           
 16396                           ;stkvar	_a @ sp[(-13)+-8]
 16397  01259A  0EEC               	movlw	236
 16398  01259C  24E1               	addwf	fsr1l,w,c
 16399  01259E  6ED9               	movwf	fsr2l,c
 16400  0125A0  0EFF               	movlw	255
 16401  0125A2  20E2               	addwfc	fsr1h,w,c
 16402  0125A4  6EDA               	movwf	fsr2h,c
 16403  0125A6  50DF               	movf	indf2,w,c
 16404  0125A8  0240               	mulwf	(btemp+11)^0,c
 16405                           
 16406                           ;stkvar	_temp @ sp[(-13)+8]
 16407  0125AA  0EFB               	movlw	-5
 16408  0125AC  006F FFCF FFE3     	movff	prodl,plusw1
 16409  0125B2  0EFC               	movlw	-4
 16410  0125B4  006F FFD3 FFE3     	movff	prodh,plusw1
 16411                           
 16412                           ;stkvar	_temp @ sp[(-13)+8]
 16413  0125BA  0EFB               	movlw	-5
 16414  0125BC  006F FF8C  F03F    	movff	plusw1,btemp+10
 16415  0125C2  0EFC               	movlw	-4
 16416  0125C4  006F FF8C  F040    	movff	plusw1,btemp+11
 16417                           
 16418                           ;stkvar	_grs @ sp[(-13)+4]
 16419  0125CA  50E1               	movf	fsr1l,w,c
 16420  0125CC  0FF7               	addlw	-9
 16421  0125CE  6ED9               	movwf	fsr2l,c
 16422  0125D0  50E2               	movf	fsr1h,w,c
 16423  0125D2  6EDA               	movwf	fsr2h,c
 16424  0125D4  0EFF               	movlw	255
 16425  0125D6  22DA               	addwfc	fsr2h,f,c
 16426  0125D8  503F               	movf	(btemp+10)^0,w,c
 16427  0125DA  26DE               	addwf	postinc2,f,c
 16428  0125DC  5040               	movf	(btemp+11)^0,w,c
 16429  0125DE  22DE               	addwfc	postinc2,f,c
 16430  0125E0  0E00               	movlw	0
 16431  0125E2  22DE               	addwfc	postinc2,f,c
 16432  0125E4  22DE               	addwfc	postinc2,f,c
 16433                           
 16434                           ;stkvar	_grs @ sp[(-13)+4]
 16435  0125E6  50E1               	movf	fsr1l,w,c
 16436  0125E8  0FF7               	addlw	-9
 16437  0125EA  6ED9               	movwf	fsr2l,c
 16438  0125EC  50E2               	movf	fsr1h,w,c
 16439  0125EE  6EDA               	movwf	fsr2h,c
 16440  0125F0  0EFF               	movlw	255
 16441  0125F2  22DA               	addwfc	fsr2h,f,c
 16442  0125F4  0E08               	movlw	8
 16443  0125F6                     u5985:
 16444  0125F6  90D8               	bcf	status,0,c
 16445  0125F8  36DE               	rlcf	postinc2,f,c
 16446  0125FA  36DE               	rlcf	postinc2,f,c
 16447  0125FC  36DE               	rlcf	postinc2,f,c
 16448  0125FE  36DD               	rlcf	postdec2,f,c
 16449  012600  52DD               	movf	postdec2,f,c
 16450  012602  52DD               	movf	postdec2,f,c
 16451  012604  2EE8               	decfsz	wreg,f,c
 16452  012606  D7F7               	goto	u5985
 16453                           
 16454                           ;stkvar	_b @ sp[(-13)+-4]
 16455  012608  0EEF               	movlw	-17
 16456  01260A  006F FF8C  F040    	movff	plusw1,btemp+11
 16457                           
 16458                           ;stkvar	_a @ sp[(-13)+-8]
 16459  012610  0EEB               	movlw	-21
 16460  012612  50E3               	movf	plusw1,w,c
 16461  012614  0240               	mulwf	(btemp+11)^0,c
 16462                           
 16463                           ;stkvar	_temp @ sp[(-13)+8]
 16464  012616  0EFB               	movlw	-5
 16465  012618  006F FFCF FFE3     	movff	prodl,plusw1
 16466  01261E  0EFC               	movlw	-4
 16467  012620  006F FFD3 FFE3     	movff	prodh,plusw1
 16468                           
 16469                           ;stkvar	_temp @ sp[(-13)+8]
 16470  012626  0EFB               	movlw	-5
 16471  012628  006F FF8C  F03F    	movff	plusw1,btemp+10
 16472  01262E  0EFC               	movlw	-4
 16473  012630  006F FF8C  F040    	movff	plusw1,btemp+11
 16474                           
 16475                           ;stkvar	_grs @ sp[(-13)+4]
 16476  012636  50E1               	movf	fsr1l,w,c
 16477  012638  0FF7               	addlw	-9
 16478  01263A  6ED9               	movwf	fsr2l,c
 16479  01263C  50E2               	movf	fsr1h,w,c
 16480  01263E  6EDA               	movwf	fsr2h,c
 16481  012640  0EFF               	movlw	255
 16482  012642  22DA               	addwfc	fsr2h,f,c
 16483  012644  503F               	movf	(btemp+10)^0,w,c
 16484  012646  26DE               	addwf	postinc2,f,c
 16485  012648  5040               	movf	(btemp+11)^0,w,c
 16486  01264A  22DE               	addwfc	postinc2,f,c
 16487  01264C  0E00               	movlw	0
 16488  01264E  22DE               	addwfc	postinc2,f,c
 16489  012650  22DE               	addwfc	postinc2,f,c
 16490                           
 16491                           ;stkvar	_b @ sp[(-13)+-4]
 16492  012652  0EF0               	movlw	240
 16493  012654  24E1               	addwf	fsr1l,w,c
 16494  012656  6ED9               	movwf	fsr2l,c
 16495  012658  0EFF               	movlw	255
 16496  01265A  20E2               	addwfc	fsr1h,w,c
 16497  01265C  6EDA               	movwf	fsr2h,c
 16498  01265E  50DF               	movf	indf2,w,c
 16499  012660  6E40               	movwf	(btemp+11)^0,c
 16500                           
 16501                           ;stkvar	_a @ sp[(-13)+-8]
 16502  012662  0EED               	movlw	237
 16503  012664  24E1               	addwf	fsr1l,w,c
 16504  012666  6ED9               	movwf	fsr2l,c
 16505  012668  0EFF               	movlw	255
 16506  01266A  20E2               	addwfc	fsr1h,w,c
 16507  01266C  6EDA               	movwf	fsr2h,c
 16508  01266E  50DF               	movf	indf2,w,c
 16509  012670  0240               	mulwf	(btemp+11)^0,c
 16510                           
 16511                           ;stkvar	_temp @ sp[(-13)+8]
 16512  012672  0EFB               	movlw	-5
 16513  012674  006F FFCF FFE3     	movff	prodl,plusw1
 16514  01267A  0EFC               	movlw	-4
 16515  01267C  006F FFD3 FFE3     	movff	prodh,plusw1
 16516                           
 16517                           ;stkvar	_temp @ sp[(-13)+8]
 16518  012682  0EFB               	movlw	-5
 16519  012684  006F FF8C  F03F    	movff	plusw1,btemp+10
 16520  01268A  0EFC               	movlw	-4
 16521  01268C  006F FF8C  F040    	movff	plusw1,btemp+11
 16522                           
 16523                           ;stkvar	_prod @ sp[(-13)+0]
 16524  012692  50E1               	movf	fsr1l,w,c
 16525  012694  0FF3               	addlw	-13
 16526  012696  6ED9               	movwf	fsr2l,c
 16527  012698  50E2               	movf	fsr1h,w,c
 16528  01269A  6EDA               	movwf	fsr2h,c
 16529  01269C  0EFF               	movlw	255
 16530  01269E  22DA               	addwfc	fsr2h,f,c
 16531  0126A0  503F               	movf	(btemp+10)^0,w,c
 16532  0126A2  26DE               	addwf	postinc2,f,c
 16533  0126A4  5040               	movf	(btemp+11)^0,w,c
 16534  0126A6  22DE               	addwfc	postinc2,f,c
 16535  0126A8  0E00               	movlw	0
 16536  0126AA  22DE               	addwfc	postinc2,f,c
 16537  0126AC  22DE               	addwfc	postinc2,f,c
 16538                           
 16539                           ;stkvar	_b @ sp[(-13)+-4]
 16540  0126AE  0EF1               	movlw	241
 16541  0126B0  24E1               	addwf	fsr1l,w,c
 16542  0126B2  6ED9               	movwf	fsr2l,c
 16543  0126B4  0EFF               	movlw	255
 16544  0126B6  20E2               	addwfc	fsr1h,w,c
 16545  0126B8  6EDA               	movwf	fsr2h,c
 16546  0126BA  50DF               	movf	indf2,w,c
 16547  0126BC  6E40               	movwf	(btemp+11)^0,c
 16548                           
 16549                           ;stkvar	_a @ sp[(-13)+-8]
 16550  0126BE  0EEC               	movlw	236
 16551  0126C0  24E1               	addwf	fsr1l,w,c
 16552  0126C2  6ED9               	movwf	fsr2l,c
 16553  0126C4  0EFF               	movlw	255
 16554  0126C6  20E2               	addwfc	fsr1h,w,c
 16555  0126C8  6EDA               	movwf	fsr2h,c
 16556  0126CA  50DF               	movf	indf2,w,c
 16557  0126CC  0240               	mulwf	(btemp+11)^0,c
 16558                           
 16559                           ;stkvar	_temp @ sp[(-13)+8]
 16560  0126CE  0EFB               	movlw	-5
 16561  0126D0  006F FFCF FFE3     	movff	prodl,plusw1
 16562  0126D6  0EFC               	movlw	-4
 16563  0126D8  006F FFD3 FFE3     	movff	prodh,plusw1
 16564                           
 16565                           ;stkvar	_temp @ sp[(-13)+8]
 16566  0126DE  0EFB               	movlw	-5
 16567  0126E0  006F FF8C  F03F    	movff	plusw1,btemp+10
 16568  0126E6  0EFC               	movlw	-4
 16569  0126E8  006F FF8C  F040    	movff	plusw1,btemp+11
 16570                           
 16571                           ;stkvar	_prod @ sp[(-13)+0]
 16572  0126EE  50E1               	movf	fsr1l,w,c
 16573  0126F0  0FF3               	addlw	-13
 16574  0126F2  6ED9               	movwf	fsr2l,c
 16575  0126F4  50E2               	movf	fsr1h,w,c
 16576  0126F6  6EDA               	movwf	fsr2h,c
 16577  0126F8  0EFF               	movlw	255
 16578  0126FA  22DA               	addwfc	fsr2h,f,c
 16579  0126FC  503F               	movf	(btemp+10)^0,w,c
 16580  0126FE  26DE               	addwf	postinc2,f,c
 16581  012700  5040               	movf	(btemp+11)^0,w,c
 16582  012702  22DE               	addwfc	postinc2,f,c
 16583  012704  0E00               	movlw	0
 16584  012706  22DE               	addwfc	postinc2,f,c
 16585  012708  22DE               	addwfc	postinc2,f,c
 16586                           
 16587                           ;stkvar	_b @ sp[(-13)+-4]
 16588  01270A  0EF1               	movlw	241
 16589  01270C  24E1               	addwf	fsr1l,w,c
 16590  01270E  6ED9               	movwf	fsr2l,c
 16591  012710  0EFF               	movlw	255
 16592  012712  20E2               	addwfc	fsr1h,w,c
 16593  012714  6EDA               	movwf	fsr2h,c
 16594  012716  50DF               	movf	indf2,w,c
 16595  012718  6E40               	movwf	(btemp+11)^0,c
 16596                           
 16597                           ;stkvar	_a @ sp[(-13)+-8]
 16598  01271A  0EED               	movlw	237
 16599  01271C  24E1               	addwf	fsr1l,w,c
 16600  01271E  6ED9               	movwf	fsr2l,c
 16601  012720  0EFF               	movlw	255
 16602  012722  20E2               	addwfc	fsr1h,w,c
 16603  012724  6EDA               	movwf	fsr2h,c
 16604  012726  50DF               	movf	indf2,w,c
 16605  012728  0240               	mulwf	(btemp+11)^0,c
 16606                           
 16607                           ;stkvar	_temp @ sp[(-13)+8]
 16608  01272A  0EFB               	movlw	-5
 16609  01272C  006F FFCF FFE3     	movff	prodl,plusw1
 16610  012732  0EFC               	movlw	-4
 16611  012734  006F FFD3 FFE3     	movff	prodh,plusw1
 16612                           
 16613                           ;stkvar	_temp @ sp[(-13)+8]
 16614  01273A  0EFB               	movlw	-5
 16615  01273C  006F FF8C  F03F    	movff	plusw1,btemp+10
 16616  012742  0EFC               	movlw	-4
 16617  012744  006F FF8C  F040    	movff	plusw1,btemp+11
 16618  01274A  503F               	movf	(btemp+10)^0,w,c
 16619  01274C  6E39               	movwf	(btemp+4)^0,c
 16620  01274E  5040               	movf	(btemp+11)^0,w,c
 16621  012750  6E3A               	movwf	(btemp+5)^0,c
 16622  012752  6A3B               	clrf	(btemp+6)^0,c
 16623  012754  6A3C               	clrf	(btemp+7)^0,c
 16624  012756  0060  F0EC  F03C   	movff	btemp+6,btemp+7
 16625  01275C  0060  F0E8  F03B   	movff	btemp+5,btemp+6
 16626  012762  0060  F0E4  F03A   	movff	btemp+4,btemp+5
 16627  012768  6A39               	clrf	(btemp+4)^0,c
 16628                           
 16629                           ;stkvar	_prod @ sp[(-13)+0]
 16630  01276A  50E1               	movf	fsr1l,w,c
 16631  01276C  0FF3               	addlw	-13
 16632  01276E  6ED9               	movwf	fsr2l,c
 16633  012770  50E2               	movf	fsr1h,w,c
 16634  012772  6EDA               	movwf	fsr2h,c
 16635  012774  0EFF               	movlw	255
 16636  012776  22DA               	addwfc	fsr2h,f,c
 16637  012778  5039               	movf	(btemp+4)^0,w,c
 16638  01277A  26DE               	addwf	postinc2,f,c
 16639  01277C  503A               	movf	(btemp+5)^0,w,c
 16640  01277E  22DE               	addwfc	postinc2,f,c
 16641  012780  503B               	movf	(btemp+6)^0,w,c
 16642  012782  22DE               	addwfc	postinc2,f,c
 16643  012784  503C               	movf	(btemp+7)^0,w,c
 16644  012786  22DE               	addwfc	postinc2,f,c
 16645                           
 16646                           ;stkvar	_prod @ sp[(-13)+0]
 16647  012788  50E1               	movf	fsr1l,w,c
 16648  01278A  0FF3               	addlw	-13
 16649  01278C  6ED9               	movwf	fsr2l,c
 16650  01278E  50E2               	movf	fsr1h,w,c
 16651  012790  6EDA               	movwf	fsr2h,c
 16652  012792  0EFF               	movlw	255
 16653  012794  22DA               	addwfc	fsr2h,f,c
 16654                           
 16655                           ;stkvar	_grs @ sp[(-13)+4]
 16656  012796  0EFA               	movlw	250
 16657  012798  24E1               	addwf	fsr1l,w,c
 16658  01279A  6EE9               	movwf	fsr0l,c
 16659  01279C  0EFF               	movlw	255
 16660  01279E  20E2               	addwfc	fsr1h,w,c
 16661  0127A0  6EEA               	movwf	fsr0h,c
 16662  0127A2  50EF               	movf	indf0,w,c
 16663  0127A4  26DE               	addwf	postinc2,f,c
 16664  0127A6  0E00               	movlw	0
 16665  0127A8  22DE               	addwfc	postinc2,f,c
 16666  0127AA  22DE               	addwfc	postinc2,f,c
 16667  0127AC  22DE               	addwfc	postinc2,f,c
 16668                           
 16669                           ;stkvar	_grs @ sp[(-13)+4]
 16670  0127AE  50E1               	movf	fsr1l,w,c
 16671  0127B0  0FF7               	addlw	-9
 16672  0127B2  6ED9               	movwf	fsr2l,c
 16673  0127B4  50E2               	movf	fsr1h,w,c
 16674  0127B6  6EDA               	movwf	fsr2h,c
 16675  0127B8  0EFF               	movlw	255
 16676  0127BA  22DA               	addwfc	fsr2h,f,c
 16677  0127BC  0E08               	movlw	8
 16678  0127BE                     u5995:
 16679  0127BE  90D8               	bcf	status,0,c
 16680  0127C0  36DE               	rlcf	postinc2,f,c
 16681  0127C2  36DE               	rlcf	postinc2,f,c
 16682  0127C4  36DE               	rlcf	postinc2,f,c
 16683  0127C6  36DD               	rlcf	postdec2,f,c
 16684  0127C8  52DD               	movf	postdec2,f,c
 16685  0127CA  52DD               	movf	postdec2,f,c
 16686  0127CC  2EE8               	decfsz	wreg,f,c
 16687  0127CE  D7F7               	goto	u5995
 16688  0127D0  0E82               	movlw	130
 16689  0127D2  6E3F               	movwf	(btemp+10)^0,c
 16690  0127D4  0EFF               	movlw	255
 16691  0127D6  6E40               	movwf	(btemp+11)^0,c
 16692                           
 16693                           ;stkvar	_bexp @ sp[(-13)+10]
 16694  0127D8  0EFD               	movlw	-3
 16695  0127DA  50E3               	movf	plusw1,w,c
 16696  0127DC  6E3D               	movwf	(btemp+8)^0,c
 16697  0127DE  6A3E               	clrf	(btemp+9)^0,c
 16698                           
 16699                           ;stkvar	_aexp @ sp[(-13)+11]
 16700  0127E0  0EFE               	movlw	-2
 16701  0127E2  50E3               	movf	plusw1,w,c
 16702  0127E4  263D               	addwf	(btemp+8)^0,f,c
 16703  0127E6  0E00               	movlw	0
 16704  0127E8  223E               	addwfc	(btemp+9)^0,f,c
 16705  0127EA  503F               	movf	(btemp+10)^0,w,c
 16706  0127EC  263D               	addwf	(btemp+8)^0,f,c
 16707  0127EE  5040               	movf	(btemp+11)^0,w,c
 16708  0127F0  223E               	addwfc	(btemp+9)^0,f,c
 16709                           
 16710                           ;stkvar	_temp @ sp[(-13)+8]
 16711  0127F2  0EFB               	movlw	-5
 16712  0127F4  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16713  0127FA  0EFC               	movlw	-4
 16714  0127FC  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16715  012802  D021               	goto	l6825
 16716  012804                     l6815:
 16717                           
 16718                           ;stkvar	_prod @ sp[(-13)+0]
 16719  012804  90D8               	bcf	status,0,c
 16720  012806  0EF3               	movlw	-13
 16721  012808  36E3               	rlcf	plusw1,f,c
 16722  01280A  0EF4               	movlw	-12
 16723  01280C  36E3               	rlcf	plusw1,f,c
 16724  01280E  0EF5               	movlw	-11
 16725  012810  36E3               	rlcf	plusw1,f,c
 16726  012812  0EF6               	movlw	-10
 16727  012814  36E3               	rlcf	plusw1,f,c
 16728                           
 16729                           ;stkvar	_grs @ sp[(-13)+4]
 16730  012816  0EFA               	movlw	-6
 16731  012818  AEE3               	btfss	plusw1,7,c
 16732  01281A  D002               	goto	l6821
 16733                           
 16734                           ;stkvar	_prod @ sp[(-13)+0]
 16735  01281C  0EF3               	movlw	-13
 16736  01281E  80E3               	bsf	plusw1,0,c
 16737  012820                     l6821:
 16738                           
 16739                           ;stkvar	_grs @ sp[(-13)+4]
 16740  012820  90D8               	bcf	status,0,c
 16741  012822  0EF7               	movlw	-9
 16742  012824  36E3               	rlcf	plusw1,f,c
 16743  012826  0EF8               	movlw	-8
 16744  012828  36E3               	rlcf	plusw1,f,c
 16745  01282A  0EF9               	movlw	-7
 16746  01282C  36E3               	rlcf	plusw1,f,c
 16747  01282E  0EFA               	movlw	-6
 16748  012830  36E3               	rlcf	plusw1,f,c
 16749                           
 16750                           ;stkvar	_temp @ sp[(-13)+8]
 16751  012832  50E1               	movf	fsr1l,w,c
 16752  012834  0FFB               	addlw	-5
 16753  012836  6ED9               	movwf	fsr2l,c
 16754  012838  50E2               	movf	fsr1h,w,c
 16755  01283A  6EDA               	movwf	fsr2h,c
 16756  01283C  0EFF               	movlw	255
 16757  01283E  22DA               	addwfc	fsr2h,f,c
 16758  012840  06DE               	decf	postinc2,f,c
 16759  012842  0E00               	movlw	0
 16760  012844  5ADD               	subwfb	postdec2,f,c
 16761  012846                     l6825:
 16762                           
 16763                           ;stkvar	_prod @ sp[(-13)+0]
 16764  012846  0EF5               	movlw	-11
 16765  012848  AEE3               	btfss	plusw1,7,c
 16766  01284A  D7DC               	goto	l6815
 16767                           
 16768                           ;stkvar	_aexp @ sp[(-13)+11]
 16769  01284C  0EFE               	movlw	-2
 16770  01284E  6AE3               	clrf	plusw1,c
 16771                           
 16772                           ;stkvar	_grs @ sp[(-13)+4]
 16773  012850  0EFA               	movlw	-6
 16774  012852  AEE3               	btfss	plusw1,7,c
 16775  012854  D020               	goto	l6839
 16776                           
 16777                           ;stkvar	_grs @ sp[(-13)+4]
 16778  012856  50E1               	movf	fsr1l,w,c
 16779  012858  0FF7               	addlw	-9
 16780  01285A  6ED9               	movwf	fsr2l,c
 16781  01285C  50E2               	movf	fsr1h,w,c
 16782  01285E  6EDA               	movwf	fsr2h,c
 16783  012860  0EFF               	movlw	255
 16784  012862  22DA               	addwfc	fsr2h,f,c
 16785  012864  0EFF               	movlw	255
 16786  012866  14DE               	andwf	postinc2,w,c
 16787  012868  6E3D               	movwf	(btemp+8)^0,c
 16788  01286A  0EFF               	movlw	255
 16789  01286C  14DE               	andwf	postinc2,w,c
 16790  01286E  6E3E               	movwf	(btemp+9)^0,c
 16791  012870  0EFF               	movlw	255
 16792  012872  14DE               	andwf	postinc2,w,c
 16793  012874  6E3F               	movwf	(btemp+10)^0,c
 16794  012876  0E7F               	movlw	127
 16795  012878  14DE               	andwf	postinc2,w,c
 16796  01287A  6E40               	movwf	(btemp+11)^0,c
 16797  01287C  503D               	movf	(btemp+8)^0,w,c
 16798  01287E  103E               	iorwf	(btemp+9)^0,w,c
 16799  012880  103F               	iorwf	(btemp+10)^0,w,c
 16800  012882  1040               	iorwf	(btemp+11)^0,w,c
 16801  012884  B4D8               	btfsc	status,2,c
 16802  012886  D004               	goto	l6835
 16803  012888                     u6030:
 16804                           
 16805                           ;stkvar	_aexp @ sp[(-13)+11]
 16806  012888  0EFE               	movlw	-2
 16807  01288A  6AE3               	clrf	plusw1,c
 16808  01288C  2AE3               	incf	plusw1,f,c
 16809  01288E  D003               	goto	l6839
 16810  012890                     l6835:
 16811                           
 16812                           ;stkvar	_prod @ sp[(-13)+0]
 16813  012890  0EF3               	movlw	-13
 16814  012892  B0E3               	btfsc	plusw1,0,c
 16815  012894  D7F9               	goto	u6030
 16816  012896                     l6839:
 16817                           
 16818                           ;stkvar	_aexp @ sp[(-13)+11]
 16819  012896  0EFE               	movlw	-2
 16820  012898  50E3               	movf	plusw1,w,c
 16821  01289A  B4D8               	btfsc	status,2,c
 16822  01289C  D036               	goto	l6849
 16823                           
 16824                           ;stkvar	_prod @ sp[(-13)+0]
 16825  01289E  50E1               	movf	fsr1l,w,c
 16826  0128A0  0FF3               	addlw	-13
 16827  0128A2  6ED9               	movwf	fsr2l,c
 16828  0128A4  50E2               	movf	fsr1h,w,c
 16829  0128A6  6EDA               	movwf	fsr2h,c
 16830  0128A8  0EFF               	movlw	255
 16831  0128AA  22DA               	addwfc	fsr2h,f,c
 16832  0128AC  2ADE               	incf	postinc2,f,c
 16833  0128AE  0E00               	movlw	0
 16834  0128B0  22DE               	addwfc	postinc2,f,c
 16835  0128B2  22DE               	addwfc	postinc2,f,c
 16836  0128B4  22DE               	addwfc	postinc2,f,c
 16837                           
 16838                           ;stkvar	_prod @ sp[(-13)+0]
 16839  0128B6  0EF6               	movlw	-10
 16840  0128B8  A0E3               	btfss	plusw1,0,c
 16841  0128BA  D027               	goto	l6849
 16842  0128BC  0E01               	movlw	1
 16843  0128BE  6E40               	movwf	(btemp+11)^0,c
 16844                           
 16845                           ;stkvar	_prod @ sp[(-13)+0]
 16846  0128C0  50E1               	movf	fsr1l,w,c
 16847  0128C2  0FF3               	addlw	-13
 16848  0128C4  6ED9               	movwf	fsr2l,c
 16849  0128C6  50E2               	movf	fsr1h,w,c
 16850  0128C8  6EDA               	movwf	fsr2h,c
 16851  0128CA  0EFF               	movlw	255
 16852  0128CC  22DA               	addwfc	fsr2h,f,c
 16853  0128CE  2840               	incf	(btemp+11)^0,w,c
 16854  0128D0  52DE               	movf	postinc2,f,c
 16855  0128D2  D008               	goto	u6070
 16856  0128D4                     u6075:
 16857  0128D4  52DE               	movf	postinc2,f,c
 16858  0128D6  90D8               	bcf	status,0,c
 16859  0128D8  BEDC               	btfsc	preinc2,7,c
 16860  0128DA  80D8               	bsf	status,0,c
 16861  0128DC  32DD               	rrcf	postdec2,f,c
 16862  0128DE  32DD               	rrcf	postdec2,f,c
 16863  0128E0  32DD               	rrcf	postdec2,f,c
 16864  0128E2  32DE               	rrcf	postinc2,f,c
 16865  0128E4                     u6070:
 16866  0128E4  2EE8               	decfsz	wreg,f,c
 16867  0128E6  D7F6               	goto	u6075
 16868                           
 16869                           ;stkvar	_temp @ sp[(-13)+8]
 16870  0128E8  0EFB               	movlw	-5
 16871  0128EA  50E3               	movf	plusw1,w,c
 16872  0128EC  0F01               	addlw	1
 16873  0128EE  6E35               	movwf	btemp^0,c
 16874  0128F0  0EFB               	movlw	-5
 16875  0128F2  0060  F0D7  FFE3   	movff	btemp,plusw1
 16876  0128F8  6A35               	clrf	btemp^0,c
 16877  0128FA  0EFC               	movlw	-4
 16878  0128FC  50E3               	movf	plusw1,w,c
 16879  0128FE  2035               	addwfc	btemp^0,w,c
 16880  012900  6E35               	movwf	btemp^0,c
 16881  012902  0EFC               	movlw	-4
 16882  012904  0060  F0D7  FFE3   	movff	btemp,plusw1
 16883  01290A                     l6849:
 16884                           
 16885                           ;stkvar	_temp @ sp[(-13)+8]
 16886  01290A  0EFC               	movlw	-4
 16887  01290C  BEE3               	btfsc	plusw1,7,c
 16888  01290E  D020               	goto	l6853
 16889  012910  0EFC               	movlw	-4
 16890  012912  50E3               	movf	plusw1,w,c
 16891  012914  E104               	bnz	u6080
 16892  012916  0EFB               	movlw	-5
 16893  012918  28E3               	incf	plusw1,w,c
 16894  01291A  A0D8               	btfss	status,0,c
 16895  01291C  D019               	goto	l6853
 16896  01291E                     u6080:
 16897  01291E  0E00               	movlw	0
 16898  012920  6E3D               	movwf	(btemp+8)^0,c
 16899  012922  0E00               	movlw	0
 16900  012924  6E3E               	movwf	(btemp+9)^0,c
 16901  012926  0E80               	movlw	128
 16902  012928  6E3F               	movwf	(btemp+10)^0,c
 16903  01292A  0E7F               	movlw	127
 16904  01292C  6E40               	movwf	(btemp+11)^0,c
 16905                           
 16906                           ;stkvar	_prod @ sp[(-13)+0]
 16907  01292E  0EF3               	movlw	-13
 16908  012930  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 16909  012936  0EF4               	movlw	-12
 16910  012938  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 16911  01293E  0EF5               	movlw	-11
 16912  012940  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 16913  012946  0EF6               	movlw	-10
 16914  012948  0060  F103  FFE3   	movff	btemp+11,plusw1
 16915  01294E  D044               	goto	l6869
 16916  012950                     l6853:
 16917                           
 16918                           ;stkvar	_temp @ sp[(-13)+8]
 16919  012950  0EFC               	movlw	-4
 16920  012952  BEE3               	btfsc	plusw1,7,c
 16921  012954  D007               	goto	u6090
 16922  012956  0EFC               	movlw	-4
 16923  012958  50E3               	movf	plusw1,w,c
 16924  01295A  E10F               	bnz	l6859
 16925  01295C  0EFB               	movlw	-5
 16926  01295E  04E3               	decf	plusw1,w,c
 16927  012960  B0D8               	btfsc	status,0,c
 16928  012962  D00B               	goto	l6859
 16929  012964                     u6090:
 16930                           
 16931                           ;stkvar	_prod @ sp[(-13)+0]
 16932  012964  0EF3               	movlw	-13
 16933  012966  6AE3               	clrf	plusw1,c
 16934  012968  0EF4               	movlw	-12
 16935  01296A  6AE3               	clrf	plusw1,c
 16936  01296C  0EF5               	movlw	-11
 16937  01296E  6AE3               	clrf	plusw1,c
 16938  012970  0EF6               	movlw	-10
 16939  012972  6AE3               	clrf	plusw1,c
 16940                           
 16941                           ;stkvar	_sign @ sp[(-13)+12]
 16942  012974  0EFF               	movlw	-1
 16943  012976  6AE3               	clrf	plusw1,c
 16944  012978  D02F               	goto	l6869
 16945  01297A                     l6859:
 16946                           
 16947                           ;stkvar	_temp @ sp[(-13)+8]
 16948                           ;stkvar	_bexp @ sp[(-13)+10]
 16949  01297A  0EFB               	movlw	-5
 16950  01297C  006F FF8C  F035    	movff	plusw1,btemp
 16951  012982  0EFD               	movlw	-3
 16952  012984  0060  F0D7  FFE3   	movff	btemp,plusw1
 16953                           
 16954                           ;stkvar	_prod @ sp[(-13)+0]
 16955  01298A  50E1               	movf	fsr1l,w,c
 16956  01298C  0FF3               	addlw	-13
 16957  01298E  6ED9               	movwf	fsr2l,c
 16958  012990  50E2               	movf	fsr1h,w,c
 16959  012992  6EDA               	movwf	fsr2h,c
 16960  012994  0EFF               	movlw	255
 16961  012996  22DA               	addwfc	fsr2h,f,c
 16962  012998  0EFF               	movlw	255
 16963  01299A  16DE               	andwf	postinc2,f,c
 16964  01299C  0EFF               	movlw	255
 16965  01299E  16DE               	andwf	postinc2,f,c
 16966  0129A0  0E7F               	movlw	127
 16967  0129A2  16DE               	andwf	postinc2,f,c
 16968  0129A4  0E00               	movlw	0
 16969  0129A6  16DE               	andwf	postinc2,f,c
 16970                           
 16971                           ;stkvar	_bexp @ sp[(-13)+10]
 16972  0129A8  0EFD               	movlw	-3
 16973  0129AA  A0E3               	btfss	plusw1,0,c
 16974  0129AC  D008               	goto	l6867
 16975                           
 16976                           ;stkvar	_prod @ sp[(-13)+0]
 16977  0129AE  0EF5               	movlw	245
 16978  0129B0  24E1               	addwf	fsr1l,w,c
 16979  0129B2  6ED9               	movwf	fsr2l,c
 16980  0129B4  0EFF               	movlw	255
 16981  0129B6  20E2               	addwfc	fsr1h,w,c
 16982  0129B8  6EDA               	movwf	fsr2h,c
 16983  0129BA  0E00               	movlw	0
 16984  0129BC  8EDB               	bsf	plusw2,7,c
 16985  0129BE                     l6867:
 16986                           
 16987                           ;stkvar	_prod @ sp[(-13)+0]
 16988  0129BE  0EF6               	movlw	246
 16989  0129C0  24E1               	addwf	fsr1l,w,c
 16990  0129C2  6ED9               	movwf	fsr2l,c
 16991  0129C4  0EFF               	movlw	255
 16992  0129C6  20E2               	addwfc	fsr1h,w,c
 16993  0129C8  6EDA               	movwf	fsr2h,c
 16994                           
 16995                           ;stkvar	_bexp @ sp[(-13)+10]
 16996  0129CA  0EFD               	movlw	-3
 16997  0129CC  006F FF8C  F040    	movff	plusw1,btemp+11
 16998  0129D2  90D8               	bcf	status,0,c
 16999  0129D4  3040               	rrcf	(btemp+11)^0,w,c
 17000  0129D6  6EDF               	movwf	indf2,c
 17001  0129D8                     l6869:
 17002                           
 17003                           ;stkvar	_sign @ sp[(-13)+12]
 17004  0129D8  0EFF               	movlw	-1
 17005  0129DA  006F FF8C  F040    	movff	plusw1,btemp+11
 17006                           
 17007                           ;stkvar	_prod @ sp[(-13)+0]
 17008  0129E0  0EF6               	movlw	246
 17009  0129E2  24E1               	addwf	fsr1l,w,c
 17010  0129E4  6ED9               	movwf	fsr2l,c
 17011  0129E6  0EFF               	movlw	255
 17012  0129E8  20E2               	addwfc	fsr1h,w,c
 17013  0129EA  6EDA               	movwf	fsr2h,c
 17014  0129EC  5040               	movf	(btemp+11)^0,w,c
 17015  0129EE  12DF               	iorwf	indf2,f,c
 17016                           
 17017                           ;stkvar	_prod @ sp[(-13)+0]
 17018  0129F0  0EF3               	movlw	-13
 17019  0129F2  006F FF8C  F035    	movff	plusw1,btemp
 17020  0129F8  0EF4               	movlw	-12
 17021  0129FA  006F FF8C  F036    	movff	plusw1,btemp+1
 17022  012A00  0EF5               	movlw	-11
 17023  012A02  006F FF8C  F037    	movff	plusw1,btemp+2
 17024  012A08  0EF6               	movlw	-10
 17025  012A0A  006F FF8C  F038    	movff	plusw1,btemp+3
 17026  012A10                     l2626:
 17027                           
 17028                           ; ___flmul: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 17029  012A10  0EEB               	movlw	235
 17030  012A12  26E1               	addwf	fsr1l,f,c
 17031  012A14  0EFF               	movlw	255
 17032  012A16  22E2               	addwfc	fsr1h,f,c
 17033  012A18  0012               	return		;funcret
 17034  012A1A                     __end_of___flmul:
 17035                           	opt callstack 0
 17036                           
 17037 ;; *************** function ___flge *****************
 17038 ;; Defined at:
 17039 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/flge.c"
 17040 ;; Parameters:    Size  Location     Type
 17041 ;;  ff1             4  [STACK] unsigned char 
 17042 ;;  ff2             4  [STACK] unsigned char 
 17043 ;; Auto vars:     Size  Location     Type
 17044 ;;		None
 17045 ;; Return value:  Size  Location     Type
 17046 ;;		None               void
 17047 ;; Registers used:
 17048 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17049 ;; Tracked objects:
 17050 ;;		On entry : 0/4
 17051 ;;		On exit  : 0/0
 17052 ;;		Unchanged: 0/0
 17053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17058 ;;Total ram usage:        0 bytes
 17059 ;; Hardware stack levels used:    1
 17060 ;; Hardware stack levels required when called:    6
 17061 ;; This function calls:
 17062 ;;		Nothing
 17063 ;; This function is called by:
 17064 ;;		_efgtoa
 17065 ;; This function uses a reentrant model
 17066 ;;
 17067                           
 17068                           	psect	text56
 17069  016842                     __ptext56:
 17070                           	opt callstack 0
 17071  016842                     ___flge:
 17072                           	opt callstack 17
 17073                           
 17074                           ;stkvar	_ff1 @ sp[(0)+-4]
 17075                           
 17076                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17077                           ;incstack = 0
 17078  016842  50E1               	movf	fsr1l,w,c
 17079  016844  0FFC               	addlw	-4
 17080  016846  6ED9               	movwf	fsr2l,c
 17081  016848  50E2               	movf	fsr1h,w,c
 17082  01684A  6EDA               	movwf	fsr2h,c
 17083  01684C  0EFF               	movlw	255
 17084  01684E  22DA               	addwfc	fsr2h,f,c
 17085  016850  0E00               	movlw	0
 17086  016852  14DE               	andwf	postinc2,w,c
 17087  016854  6E3D               	movwf	(btemp+8)^0,c
 17088  016856  0E00               	movlw	0
 17089  016858  14DE               	andwf	postinc2,w,c
 17090  01685A  6E3E               	movwf	(btemp+9)^0,c
 17091  01685C  0E80               	movlw	128
 17092  01685E  14DE               	andwf	postinc2,w,c
 17093  016860  6E3F               	movwf	(btemp+10)^0,c
 17094  016862  0E7F               	movlw	127
 17095  016864  14DE               	andwf	postinc2,w,c
 17096  016866  6E40               	movwf	(btemp+11)^0,c
 17097  016868  503D               	movf	(btemp+8)^0,w,c
 17098  01686A  103E               	iorwf	(btemp+9)^0,w,c
 17099  01686C  103F               	iorwf	(btemp+10)^0,w,c
 17100  01686E  1040               	iorwf	(btemp+11)^0,w,c
 17101  016870  A4D8               	btfss	status,2,c
 17102  016872  D008               	goto	l6985
 17103                           
 17104                           ;stkvar	_ff1 @ sp[(0)+-4]
 17105  016874  0EFC               	movlw	-4
 17106  016876  6AE3               	clrf	plusw1,c
 17107  016878  0EFD               	movlw	-3
 17108  01687A  6AE3               	clrf	plusw1,c
 17109  01687C  0EFE               	movlw	-2
 17110  01687E  6AE3               	clrf	plusw1,c
 17111  016880  0EFF               	movlw	-1
 17112  016882  6AE3               	clrf	plusw1,c
 17113  016884                     l6985:
 17114                           
 17115                           ;stkvar	_ff2 @ sp[(0)+-8]
 17116  016884  50E1               	movf	fsr1l,w,c
 17117  016886  0FF8               	addlw	-8
 17118  016888  6ED9               	movwf	fsr2l,c
 17119  01688A  50E2               	movf	fsr1h,w,c
 17120  01688C  6EDA               	movwf	fsr2h,c
 17121  01688E  0EFF               	movlw	255
 17122  016890  22DA               	addwfc	fsr2h,f,c
 17123  016892  0E00               	movlw	0
 17124  016894  14DE               	andwf	postinc2,w,c
 17125  016896  6E3D               	movwf	(btemp+8)^0,c
 17126  016898  0E00               	movlw	0
 17127  01689A  14DE               	andwf	postinc2,w,c
 17128  01689C  6E3E               	movwf	(btemp+9)^0,c
 17129  01689E  0E80               	movlw	128
 17130  0168A0  14DE               	andwf	postinc2,w,c
 17131  0168A2  6E3F               	movwf	(btemp+10)^0,c
 17132  0168A4  0E7F               	movlw	127
 17133  0168A6  14DE               	andwf	postinc2,w,c
 17134  0168A8  6E40               	movwf	(btemp+11)^0,c
 17135  0168AA  503D               	movf	(btemp+8)^0,w,c
 17136  0168AC  103E               	iorwf	(btemp+9)^0,w,c
 17137  0168AE  103F               	iorwf	(btemp+10)^0,w,c
 17138  0168B0  1040               	iorwf	(btemp+11)^0,w,c
 17139  0168B2  A4D8               	btfss	status,2,c
 17140  0168B4  D008               	goto	l2271
 17141                           
 17142                           ;stkvar	_ff2 @ sp[(0)+-8]
 17143  0168B6  0EF8               	movlw	-8
 17144  0168B8  6AE3               	clrf	plusw1,c
 17145  0168BA  0EF9               	movlw	-7
 17146  0168BC  6AE3               	clrf	plusw1,c
 17147  0168BE  0EFA               	movlw	-6
 17148  0168C0  6AE3               	clrf	plusw1,c
 17149  0168C2  0EFB               	movlw	-5
 17150  0168C4  6AE3               	clrf	plusw1,c
 17151  0168C6                     l2271:
 17152                           
 17153                           ;stkvar	_ff1 @ sp[(0)+-4]
 17154  0168C6  0EFF               	movlw	-1
 17155  0168C8  AEE3               	btfss	plusw1,7,c
 17156  0168CA  D024               	goto	l6991
 17157                           
 17158                           ;stkvar	_ff1 @ sp[(0)+-4]
 17159  0168CC  0E00               	movlw	0
 17160  0168CE  6E3D               	movwf	(btemp+8)^0,c
 17161  0168D0  0E00               	movlw	0
 17162  0168D2  6E3E               	movwf	(btemp+9)^0,c
 17163  0168D4  0E00               	movlw	0
 17164  0168D6  6E3F               	movwf	(btemp+10)^0,c
 17165  0168D8  0E80               	movlw	128
 17166  0168DA  6E40               	movwf	(btemp+11)^0,c
 17167  0168DC  0EFC               	movlw	-4
 17168  0168DE  50E3               	movf	plusw1,w,c
 17169  0168E0  5E3D               	subwf	(btemp+8)^0,f,c
 17170  0168E2  0EFD               	movlw	-3
 17171  0168E4  50E3               	movf	plusw1,w,c
 17172  0168E6  5A3E               	subwfb	(btemp+9)^0,f,c
 17173  0168E8  0EFE               	movlw	-2
 17174  0168EA  50E3               	movf	plusw1,w,c
 17175  0168EC  5A3F               	subwfb	(btemp+10)^0,f,c
 17176  0168EE  0EFF               	movlw	-1
 17177  0168F0  50E3               	movf	plusw1,w,c
 17178  0168F2  5A40               	subwfb	(btemp+11)^0,f,c
 17179                           
 17180                           ;stkvar	_ff1 @ sp[(0)+-4]
 17181  0168F4  0EFC               	movlw	-4
 17182  0168F6  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17183  0168FC  0EFD               	movlw	-3
 17184  0168FE  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17185  016904  0EFE               	movlw	-2
 17186  016906  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17187  01690C  0EFF               	movlw	-1
 17188  01690E  0060  F103  FFE3   	movff	btemp+11,plusw1
 17189  016914                     l6991:
 17190                           
 17191                           ;stkvar	_ff2 @ sp[(0)+-8]
 17192  016914  0EFB               	movlw	-5
 17193  016916  AEE3               	btfss	plusw1,7,c
 17194  016918  D024               	goto	l6995
 17195                           
 17196                           ;stkvar	_ff2 @ sp[(0)+-8]
 17197  01691A  0E00               	movlw	0
 17198  01691C  6E3D               	movwf	(btemp+8)^0,c
 17199  01691E  0E00               	movlw	0
 17200  016920  6E3E               	movwf	(btemp+9)^0,c
 17201  016922  0E00               	movlw	0
 17202  016924  6E3F               	movwf	(btemp+10)^0,c
 17203  016926  0E80               	movlw	128
 17204  016928  6E40               	movwf	(btemp+11)^0,c
 17205  01692A  0EF8               	movlw	-8
 17206  01692C  50E3               	movf	plusw1,w,c
 17207  01692E  5E3D               	subwf	(btemp+8)^0,f,c
 17208  016930  0EF9               	movlw	-7
 17209  016932  50E3               	movf	plusw1,w,c
 17210  016934  5A3E               	subwfb	(btemp+9)^0,f,c
 17211  016936  0EFA               	movlw	-6
 17212  016938  50E3               	movf	plusw1,w,c
 17213  01693A  5A3F               	subwfb	(btemp+10)^0,f,c
 17214  01693C  0EFB               	movlw	-5
 17215  01693E  50E3               	movf	plusw1,w,c
 17216  016940  5A40               	subwfb	(btemp+11)^0,f,c
 17217                           
 17218                           ;stkvar	_ff2 @ sp[(0)+-8]
 17219  016942  0EF8               	movlw	-8
 17220  016944  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17221  01694A  0EF9               	movlw	-7
 17222  01694C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17223  016952  0EFA               	movlw	-6
 17224  016954  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17225  01695A  0EFB               	movlw	-5
 17226  01695C  0060  F103  FFE3   	movff	btemp+11,plusw1
 17227  016962                     l6995:
 17228                           
 17229                           ;stkvar	_ff1 @ sp[(0)+-4]
 17230  016962  0EFF               	movlw	-1
 17231  016964  7EE3               	btg	plusw1,7,c
 17232                           
 17233                           ;stkvar	_ff2 @ sp[(0)+-8]
 17234  016966  0EFB               	movlw	-5
 17235  016968  7EE3               	btg	plusw1,7,c
 17236                           
 17237                           ;stkvar	_ff2 @ sp[(0)+-8]
 17238                           ;stkvar	_ff1 @ sp[(0)+-4]
 17239  01696A  50E1               	movf	fsr1l,w,c
 17240  01696C  0FFC               	addlw	-4
 17241  01696E  6ED9               	movwf	fsr2l,c
 17242  016970  50E2               	movf	fsr1h,w,c
 17243  016972  6EDA               	movwf	fsr2h,c
 17244  016974  0EFF               	movlw	255
 17245  016976  22DA               	addwfc	fsr2h,f,c
 17246  016978  0EF8               	movlw	-8
 17247  01697A  50E3               	movf	plusw1,w,c
 17248  01697C  5CDE               	subwf	postinc2,w,c
 17249  01697E  0EF9               	movlw	-7
 17250  016980  50E3               	movf	plusw1,w,c
 17251  016982  58DE               	subwfb	postinc2,w,c
 17252  016984  0EFA               	movlw	-6
 17253  016986  50E3               	movf	plusw1,w,c
 17254  016988  58DE               	subwfb	postinc2,w,c
 17255  01698A  0EFB               	movlw	-5
 17256  01698C  50E3               	movf	plusw1,w,c
 17257  01698E  58DE               	subwfb	postinc2,w,c
 17258  016990  B0D8               	btfsc	status,0,c
 17259  016992  D002               	goto	l7003
 17260  016994  9035               	bcf	btemp& (0+255),0,c
 17261  016996  D001               	goto	l2278
 17262  016998                     l7003:
 17263  016998  8035               	bsf	btemp& (0+255),0,c
 17264  01699A                     l2278:
 17265                           
 17266                           ; ___flge: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17267  01699A  0EF8               	movlw	248
 17268  01699C  26E1               	addwf	fsr1l,f,c
 17269  01699E  0EFF               	movlw	255
 17270  0169A0  22E2               	addwfc	fsr1h,f,c
 17271  0169A2  0012               	return		;funcret
 17272  0169A4                     __end_of___flge:
 17273                           	opt callstack 0
 17274                           
 17275 ;; *************** function ___fleq *****************
 17276 ;; Defined at:
 17277 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/fleq.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;  ff1             4  [STACK] unsigned char 
 17280 ;;  ff2             4  [STACK] unsigned char 
 17281 ;; Auto vars:     Size  Location     Type
 17282 ;;		None
 17283 ;; Return value:  Size  Location     Type
 17284 ;;		None               void
 17285 ;; Registers used:
 17286 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 17287 ;; Tracked objects:
 17288 ;;		On entry : 0/4
 17289 ;;		On exit  : 0/0
 17290 ;;		Unchanged: 0/0
 17291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17295 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17296 ;;Total ram usage:        0 bytes
 17297 ;; Hardware stack levels used:    1
 17298 ;; Hardware stack levels required when called:    6
 17299 ;; This function calls:
 17300 ;;		Nothing
 17301 ;; This function is called by:
 17302 ;;		_efgtoa
 17303 ;; This function uses a reentrant model
 17304 ;;
 17305                           
 17306                           	psect	text57
 17307  01754C                     __ptext57:
 17308                           	opt callstack 0
 17309  01754C                     ___fleq:
 17310                           	opt callstack 17
 17311                           
 17312                           ;stkvar	_ff1 @ sp[(0)+-4]
 17313                           
 17314                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 17315                           ;incstack = 0
 17316  01754C  50E1               	movf	fsr1l,w,c
 17317  01754E  0FFC               	addlw	-4
 17318  017550  6ED9               	movwf	fsr2l,c
 17319  017552  50E2               	movf	fsr1h,w,c
 17320  017554  6EDA               	movwf	fsr2h,c
 17321  017556  0EFF               	movlw	255
 17322  017558  22DA               	addwfc	fsr2h,f,c
 17323  01755A  0E00               	movlw	0
 17324  01755C  14DE               	andwf	postinc2,w,c
 17325  01755E  6E3D               	movwf	(btemp+8)^0,c
 17326  017560  0E00               	movlw	0
 17327  017562  14DE               	andwf	postinc2,w,c
 17328  017564  6E3E               	movwf	(btemp+9)^0,c
 17329  017566  0E80               	movlw	128
 17330  017568  14DE               	andwf	postinc2,w,c
 17331  01756A  6E3F               	movwf	(btemp+10)^0,c
 17332  01756C  0E7F               	movlw	127
 17333  01756E  14DE               	andwf	postinc2,w,c
 17334  017570  6E40               	movwf	(btemp+11)^0,c
 17335  017572  503D               	movf	(btemp+8)^0,w,c
 17336  017574  103E               	iorwf	(btemp+9)^0,w,c
 17337  017576  103F               	iorwf	(btemp+10)^0,w,c
 17338  017578  1040               	iorwf	(btemp+11)^0,w,c
 17339  01757A  A4D8               	btfss	status,2,c
 17340  01757C  D008               	goto	l6969
 17341                           
 17342                           ;stkvar	_ff1 @ sp[(0)+-4]
 17343  01757E  0EFC               	movlw	-4
 17344  017580  6AE3               	clrf	plusw1,c
 17345  017582  0EFD               	movlw	-3
 17346  017584  6AE3               	clrf	plusw1,c
 17347  017586  0EFE               	movlw	-2
 17348  017588  6AE3               	clrf	plusw1,c
 17349  01758A  0EFF               	movlw	-1
 17350  01758C  6AE3               	clrf	plusw1,c
 17351  01758E                     l6969:
 17352                           
 17353                           ;stkvar	_ff2 @ sp[(0)+-8]
 17354  01758E  50E1               	movf	fsr1l,w,c
 17355  017590  0FF8               	addlw	-8
 17356  017592  6ED9               	movwf	fsr2l,c
 17357  017594  50E2               	movf	fsr1h,w,c
 17358  017596  6EDA               	movwf	fsr2h,c
 17359  017598  0EFF               	movlw	255
 17360  01759A  22DA               	addwfc	fsr2h,f,c
 17361  01759C  0E00               	movlw	0
 17362  01759E  14DE               	andwf	postinc2,w,c
 17363  0175A0  6E3D               	movwf	(btemp+8)^0,c
 17364  0175A2  0E00               	movlw	0
 17365  0175A4  14DE               	andwf	postinc2,w,c
 17366  0175A6  6E3E               	movwf	(btemp+9)^0,c
 17367  0175A8  0E80               	movlw	128
 17368  0175AA  14DE               	andwf	postinc2,w,c
 17369  0175AC  6E3F               	movwf	(btemp+10)^0,c
 17370  0175AE  0E7F               	movlw	127
 17371  0175B0  14DE               	andwf	postinc2,w,c
 17372  0175B2  6E40               	movwf	(btemp+11)^0,c
 17373  0175B4  503D               	movf	(btemp+8)^0,w,c
 17374  0175B6  103E               	iorwf	(btemp+9)^0,w,c
 17375  0175B8  103F               	iorwf	(btemp+10)^0,w,c
 17376  0175BA  1040               	iorwf	(btemp+11)^0,w,c
 17377  0175BC  A4D8               	btfss	status,2,c
 17378  0175BE  D008               	goto	l6973
 17379                           
 17380                           ;stkvar	_ff2 @ sp[(0)+-8]
 17381  0175C0  0EF8               	movlw	-8
 17382  0175C2  6AE3               	clrf	plusw1,c
 17383  0175C4  0EF9               	movlw	-7
 17384  0175C6  6AE3               	clrf	plusw1,c
 17385  0175C8  0EFA               	movlw	-6
 17386  0175CA  6AE3               	clrf	plusw1,c
 17387  0175CC  0EFB               	movlw	-5
 17388  0175CE  6AE3               	clrf	plusw1,c
 17389  0175D0                     l6973:
 17390                           
 17391                           ;stkvar	_ff2 @ sp[(0)+-8]
 17392                           ;stkvar	_ff1 @ sp[(0)+-4]
 17393  0175D0  50E1               	movf	fsr1l,w,c
 17394  0175D2  0FFC               	addlw	-4
 17395  0175D4  6ED9               	movwf	fsr2l,c
 17396  0175D6  50E2               	movf	fsr1h,w,c
 17397  0175D8  6EDA               	movwf	fsr2h,c
 17398  0175DA  0EFF               	movlw	255
 17399  0175DC  22DA               	addwfc	fsr2h,f,c
 17400  0175DE  0EF8               	movlw	-8
 17401  0175E0  50E3               	movf	plusw1,w,c
 17402  0175E2  18DE               	xorwf	postinc2,w,c
 17403  0175E4  E10D               	bnz	u6270
 17404  0175E6  0EF9               	movlw	-7
 17405  0175E8  50E3               	movf	plusw1,w,c
 17406  0175EA  18DE               	xorwf	postinc2,w,c
 17407  0175EC  E109               	bnz	u6270
 17408  0175EE  0EFA               	movlw	-6
 17409  0175F0  50E3               	movf	plusw1,w,c
 17410  0175F2  18DE               	xorwf	postinc2,w,c
 17411  0175F4  E105               	bnz	u6270
 17412  0175F6  0EFB               	movlw	-5
 17413  0175F8  50E3               	movf	plusw1,w,c
 17414  0175FA  18DE               	xorwf	postinc2,w,c
 17415  0175FC  B4D8               	btfsc	status,2,c
 17416  0175FE  D002               	goto	l6977
 17417  017600                     u6270:
 17418  017600  9035               	bcf	btemp& (0+255),0,c
 17419  017602  D001               	goto	l2267
 17420  017604                     l6977:
 17421  017604  8035               	bsf	btemp& (0+255),0,c
 17422  017606                     l2267:
 17423                           
 17424                           ; ___fleq: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsiz
      +                          e = 8, vargsize = 0
 17425  017606  0EF8               	movlw	248
 17426  017608  26E1               	addwf	fsr1l,f,c
 17427  01760A  0EFF               	movlw	255
 17428  01760C  22E2               	addwfc	fsr1h,f,c
 17429  01760E  0012               	return		;funcret
 17430  017610                     __end_of___fleq:
 17431                           	opt callstack 0
 17432                           
 17433 ;; *************** function ___fldiv *****************
 17434 ;; Defined at:
 17435 ;;		line 11 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/sprcdiv.c"
 17436 ;; Parameters:    Size  Location     Type
 17437 ;;  b               4  [STACK] unsigned char 
 17438 ;;  a               4  [STACK] unsigned char 
 17439 ;; Auto vars:     Size  Location     Type
 17440 ;;  grs             4  [STACK] unsigned long 
 17441 ;;  rem             4  [STACK] unsigned long 
 17442 ;;  new_exp         2  [STACK] short 
 17443 ;;  aexp            1  [STACK] unsigned char 
 17444 ;;  bexp            1  [STACK] unsigned char 
 17445 ;;  sign            1  [STACK] unsigned char 
 17446 ;; Return value:  Size  Location     Type
 17447 ;;                  4  [STACK] unsigned char 
 17448 ;; Registers used:
 17449 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+2, btemp+3, btemp+8, btemp+9, btemp+10, 
      +btemp+11
 17450 ;; Tracked objects:
 17451 ;;		On entry : 0/4
 17452 ;;		On exit  : 0/0
 17453 ;;		Unchanged: 0/0
 17454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 17455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 17459 ;;Total ram usage:        0 bytes
 17460 ;; Hardware stack levels used:    1
 17461 ;; Hardware stack levels required when called:    6
 17462 ;; This function calls:
 17463 ;;		Nothing
 17464 ;; This function is called by:
 17465 ;;		_conv_raw_result
 17466 ;;		_efgtoa
 17467 ;; This function uses a reentrant model
 17468 ;;
 17469                           
 17470                           	psect	text58
 17471  0131D6                     __ptext58:
 17472                           	opt callstack 0
 17473  0131D6                     ___fldiv:
 17474                           	opt callstack 0
 17475                           
 17476                           ; autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, argsize = 8 va
      +                          rgsize = 0, retsize = 0 argfudge = 0
 17477  0131D6  0E0D               	movlw	13
 17478  0131D8  26E1               	addwf	fsr1l,f,c
 17479  0131DA  0E00               	movlw	0
 17480  0131DC  22E2               	addwfc	fsr1h,f,c
 17481                           
 17482                           ;stkvar	_b @ sp[(-13)+-4]
 17483                           
 17484                           ;incstack = 0
 17485  0131DE  0EF2               	movlw	242
 17486  0131E0  24E1               	addwf	fsr1l,w,c
 17487  0131E2  6ED9               	movwf	fsr2l,c
 17488  0131E4  0EFF               	movlw	255
 17489  0131E6  20E2               	addwfc	fsr1h,w,c
 17490  0131E8  6EDA               	movwf	fsr2h,c
 17491  0131EA  50DF               	movf	indf2,w,c
 17492  0131EC  6E40               	movwf	(btemp+11)^0,c
 17493  0131EE  0E80               	movlw	128
 17494  0131F0  1640               	andwf	(btemp+11)^0,f,c
 17495                           
 17496                           ;stkvar	_sign @ sp[(-13)+12]
 17497  0131F2  0EFF               	movlw	-1
 17498  0131F4  0060  F103  FFE3   	movff	btemp+11,plusw1
 17499                           
 17500                           ;stkvar	_b @ sp[(-13)+-4]
 17501  0131FA  0EF2               	movlw	242
 17502  0131FC  24E1               	addwf	fsr1l,w,c
 17503  0131FE  6ED9               	movwf	fsr2l,c
 17504  013200  0EFF               	movlw	255
 17505  013202  20E2               	addwfc	fsr1h,w,c
 17506  013204  6EDA               	movwf	fsr2h,c
 17507  013206  50DF               	movf	indf2,w,c
 17508  013208  6E40               	movwf	(btemp+11)^0,c
 17509  01320A  90D8               	bcf	status,0,c
 17510  01320C  3440               	rlcf	(btemp+11)^0,w,c
 17511  01320E  6E3F               	movwf	(btemp+10)^0,c
 17512                           
 17513                           ;stkvar	_bexp @ sp[(-13)+11]
 17514  013210  0EFE               	movlw	-2
 17515  013212  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17516                           
 17517                           ;stkvar	_b @ sp[(-13)+-4]
 17518  013218  0EF1               	movlw	241
 17519  01321A  24E1               	addwf	fsr1l,w,c
 17520  01321C  6ED9               	movwf	fsr2l,c
 17521  01321E  0EFF               	movlw	255
 17522  013220  20E2               	addwfc	fsr1h,w,c
 17523  013222  6EDA               	movwf	fsr2h,c
 17524  013224  AEDF               	btfss	indf2,7,c
 17525  013226  D002               	goto	l6571
 17526                           
 17527                           ;stkvar	_bexp @ sp[(-13)+11]
 17528  013228  0EFE               	movlw	-2
 17529  01322A  80E3               	bsf	plusw1,0,c
 17530  01322C                     l6571:
 17531                           
 17532                           ;stkvar	_bexp @ sp[(-13)+11]
 17533  01322C  0EFE               	movlw	-2
 17534  01322E  50E3               	movf	plusw1,w,c
 17535  013230  B4D8               	btfsc	status,2,c
 17536  013232  D027               	goto	l6581
 17537                           
 17538                           ;stkvar	_bexp @ sp[(-13)+11]
 17539  013234  0EFE               	movlw	-2
 17540  013236  28E3               	incf	plusw1,w,c
 17541  013238  A4D8               	btfss	status,2,c
 17542  01323A  D018               	goto	l6577
 17543  01323C  0E00               	movlw	0
 17544  01323E  6E3D               	movwf	(btemp+8)^0,c
 17545  013240  0E00               	movlw	0
 17546  013242  6E3E               	movwf	(btemp+9)^0,c
 17547  013244  0E00               	movlw	0
 17548  013246  6E3F               	movwf	(btemp+10)^0,c
 17549  013248  0E00               	movlw	0
 17550  01324A  6E40               	movwf	(btemp+11)^0,c
 17551                           
 17552                           ;stkvar	_b @ sp[(-13)+-4]
 17553  01324C  0EEF               	movlw	-17
 17554  01324E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17555  013254  0EF0               	movlw	-16
 17556  013256  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17557  01325C  0EF1               	movlw	-15
 17558  01325E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17559  013264  0EF2               	movlw	-14
 17560  013266  0060  F103  FFE3   	movff	btemp+11,plusw1
 17561  01326C                     l6577:
 17562                           
 17563                           ;stkvar	_b @ sp[(-13)+-4]
 17564  01326C  0EF1               	movlw	-15
 17565  01326E  8EE3               	bsf	plusw1,7,c
 17566                           
 17567                           ;stkvar	_b @ sp[(-13)+-4]
 17568  013270  0EF2               	movlw	242
 17569  013272  24E1               	addwf	fsr1l,w,c
 17570  013274  6ED9               	movwf	fsr2l,c
 17571  013276  0EFF               	movlw	255
 17572  013278  20E2               	addwfc	fsr1h,w,c
 17573  01327A  6EDA               	movwf	fsr2h,c
 17574  01327C  0E00               	movlw	0
 17575  01327E  6EDF               	movwf	indf2,c
 17576  013280  D018               	goto	l6583
 17577  013282                     l6581:
 17578  013282  0E00               	movlw	0
 17579  013284  6E3D               	movwf	(btemp+8)^0,c
 17580  013286  0E00               	movlw	0
 17581  013288  6E3E               	movwf	(btemp+9)^0,c
 17582  01328A  0E00               	movlw	0
 17583  01328C  6E3F               	movwf	(btemp+10)^0,c
 17584  01328E  0E00               	movlw	0
 17585  013290  6E40               	movwf	(btemp+11)^0,c
 17586                           
 17587                           ;stkvar	_b @ sp[(-13)+-4]
 17588  013292  0EEF               	movlw	-17
 17589  013294  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17590  01329A  0EF0               	movlw	-16
 17591  01329C  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17592  0132A2  0EF1               	movlw	-15
 17593  0132A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17594  0132AA  0EF2               	movlw	-14
 17595  0132AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 17596  0132B2                     l6583:
 17597                           
 17598                           ;stkvar	_a @ sp[(-13)+-8]
 17599  0132B2  0EEE               	movlw	238
 17600  0132B4  24E1               	addwf	fsr1l,w,c
 17601  0132B6  6ED9               	movwf	fsr2l,c
 17602  0132B8  0EFF               	movlw	255
 17603  0132BA  20E2               	addwfc	fsr1h,w,c
 17604  0132BC  6EDA               	movwf	fsr2h,c
 17605  0132BE  50DF               	movf	indf2,w,c
 17606  0132C0  6E40               	movwf	(btemp+11)^0,c
 17607  0132C2  0E80               	movlw	128
 17608  0132C4  1640               	andwf	(btemp+11)^0,f,c
 17609                           
 17610                           ;stkvar	_sign @ sp[(-13)+12]
 17611  0132C6  50E1               	movf	fsr1l,w,c
 17612  0132C8  0FFF               	addlw	-1
 17613  0132CA  6ED9               	movwf	fsr2l,c
 17614  0132CC  50E2               	movf	fsr1h,w,c
 17615  0132CE  6EDA               	movwf	fsr2h,c
 17616  0132D0  0EFF               	movlw	255
 17617  0132D2  22DA               	addwfc	fsr2h,f,c
 17618  0132D4  5040               	movf	(btemp+11)^0,w,c
 17619  0132D6  1ADF               	xorwf	indf2,f,c
 17620                           
 17621                           ;stkvar	_a @ sp[(-13)+-8]
 17622  0132D8  0EEE               	movlw	238
 17623  0132DA  24E1               	addwf	fsr1l,w,c
 17624  0132DC  6ED9               	movwf	fsr2l,c
 17625  0132DE  0EFF               	movlw	255
 17626  0132E0  20E2               	addwfc	fsr1h,w,c
 17627  0132E2  6EDA               	movwf	fsr2h,c
 17628  0132E4  50DF               	movf	indf2,w,c
 17629  0132E6  6E40               	movwf	(btemp+11)^0,c
 17630  0132E8  90D8               	bcf	status,0,c
 17631  0132EA  3440               	rlcf	(btemp+11)^0,w,c
 17632  0132EC  6E3F               	movwf	(btemp+10)^0,c
 17633                           
 17634                           ;stkvar	_aexp @ sp[(-13)+10]
 17635  0132EE  0EFD               	movlw	-3
 17636  0132F0  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17637                           
 17638                           ;stkvar	_a @ sp[(-13)+-8]
 17639  0132F6  0EED               	movlw	237
 17640  0132F8  24E1               	addwf	fsr1l,w,c
 17641  0132FA  6ED9               	movwf	fsr2l,c
 17642  0132FC  0EFF               	movlw	255
 17643  0132FE  20E2               	addwfc	fsr1h,w,c
 17644  013300  6EDA               	movwf	fsr2h,c
 17645  013302  AEDF               	btfss	indf2,7,c
 17646  013304  D002               	goto	l6591
 17647                           
 17648                           ;stkvar	_aexp @ sp[(-13)+10]
 17649  013306  0EFD               	movlw	-3
 17650  013308  80E3               	bsf	plusw1,0,c
 17651  01330A                     l6591:
 17652                           
 17653                           ;stkvar	_aexp @ sp[(-13)+10]
 17654  01330A  0EFD               	movlw	-3
 17655  01330C  50E3               	movf	plusw1,w,c
 17656  01330E  B4D8               	btfsc	status,2,c
 17657  013310  D027               	goto	l6601
 17658                           
 17659                           ;stkvar	_aexp @ sp[(-13)+10]
 17660  013312  0EFD               	movlw	-3
 17661  013314  28E3               	incf	plusw1,w,c
 17662  013316  A4D8               	btfss	status,2,c
 17663  013318  D018               	goto	l6597
 17664  01331A  0E00               	movlw	0
 17665  01331C  6E3D               	movwf	(btemp+8)^0,c
 17666  01331E  0E00               	movlw	0
 17667  013320  6E3E               	movwf	(btemp+9)^0,c
 17668  013322  0E00               	movlw	0
 17669  013324  6E3F               	movwf	(btemp+10)^0,c
 17670  013326  0E00               	movlw	0
 17671  013328  6E40               	movwf	(btemp+11)^0,c
 17672                           
 17673                           ;stkvar	_a @ sp[(-13)+-8]
 17674  01332A  0EEB               	movlw	-21
 17675  01332C  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17676  013332  0EEC               	movlw	-20
 17677  013334  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17678  01333A  0EED               	movlw	-19
 17679  01333C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17680  013342  0EEE               	movlw	-18
 17681  013344  0060  F103  FFE3   	movff	btemp+11,plusw1
 17682  01334A                     l6597:
 17683                           
 17684                           ;stkvar	_a @ sp[(-13)+-8]
 17685  01334A  0EED               	movlw	-19
 17686  01334C  8EE3               	bsf	plusw1,7,c
 17687                           
 17688                           ;stkvar	_a @ sp[(-13)+-8]
 17689  01334E  0EEE               	movlw	238
 17690  013350  24E1               	addwf	fsr1l,w,c
 17691  013352  6ED9               	movwf	fsr2l,c
 17692  013354  0EFF               	movlw	255
 17693  013356  20E2               	addwfc	fsr1h,w,c
 17694  013358  6EDA               	movwf	fsr2h,c
 17695  01335A  0E00               	movlw	0
 17696  01335C  6EDF               	movwf	indf2,c
 17697  01335E  D018               	goto	l6603
 17698  013360                     l6601:
 17699  013360  0E00               	movlw	0
 17700  013362  6E3D               	movwf	(btemp+8)^0,c
 17701  013364  0E00               	movlw	0
 17702  013366  6E3E               	movwf	(btemp+9)^0,c
 17703  013368  0E00               	movlw	0
 17704  01336A  6E3F               	movwf	(btemp+10)^0,c
 17705  01336C  0E00               	movlw	0
 17706  01336E  6E40               	movwf	(btemp+11)^0,c
 17707                           
 17708                           ;stkvar	_a @ sp[(-13)+-8]
 17709  013370  0EEB               	movlw	-21
 17710  013372  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17711  013378  0EEC               	movlw	-20
 17712  01337A  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17713  013380  0EED               	movlw	-19
 17714  013382  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17715  013388  0EEE               	movlw	-18
 17716  01338A  0060  F103  FFE3   	movff	btemp+11,plusw1
 17717  013390                     l6603:
 17718                           
 17719                           ;stkvar	_a @ sp[(-13)+-8]
 17720  013390  0EEB               	movlw	-21
 17721  013392  50E3               	movf	plusw1,w,c
 17722  013394  E139               	bnz	l6615
 17723  013396  0EEC               	movlw	-20
 17724  013398  50E3               	movf	plusw1,w,c
 17725  01339A  E136               	bnz	l6615
 17726  01339C  0EED               	movlw	-19
 17727  01339E  50E3               	movf	plusw1,w,c
 17728  0133A0  E133               	bnz	l6615
 17729  0133A2  0EEE               	movlw	-18
 17730  0133A4  50E3               	movf	plusw1,w,c
 17731  0133A6  A4D8               	btfss	status,2,c
 17732  0133A8  D02F               	goto	l6615
 17733                           
 17734                           ;stkvar	_b @ sp[(-13)+-4]
 17735  0133AA  0EEF               	movlw	-17
 17736  0133AC  6AE3               	clrf	plusw1,c
 17737  0133AE  0EF0               	movlw	-16
 17738  0133B0  6AE3               	clrf	plusw1,c
 17739  0133B2  0EF1               	movlw	-15
 17740  0133B4  6AE3               	clrf	plusw1,c
 17741  0133B6  0EF2               	movlw	-14
 17742  0133B8  6AE3               	clrf	plusw1,c
 17743                           
 17744                           ;stkvar	_b @ sp[(-13)+-4]
 17745  0133BA  0EF1               	movlw	241
 17746  0133BC  24E1               	addwf	fsr1l,w,c
 17747  0133BE  6ED9               	movwf	fsr2l,c
 17748  0133C0  0EFF               	movlw	255
 17749  0133C2  20E2               	addwfc	fsr1h,w,c
 17750  0133C4  6EDA               	movwf	fsr2h,c
 17751  0133C6  0E80               	movlw	128
 17752  0133C8  12DE               	iorwf	postinc2,f,c
 17753  0133CA  0E7F               	movlw	127
 17754  0133CC  12DD               	iorwf	postdec2,f,c
 17755  0133CE                     l6609:
 17756                           
 17757                           ;stkvar	_sign @ sp[(-13)+12]
 17758  0133CE  0EFF               	movlw	-1
 17759  0133D0  006F FF8C  F040    	movff	plusw1,btemp+11
 17760                           
 17761                           ;stkvar	_b @ sp[(-13)+-4]
 17762  0133D6  0EF2               	movlw	242
 17763  0133D8  24E1               	addwf	fsr1l,w,c
 17764  0133DA  6ED9               	movwf	fsr2l,c
 17765  0133DC  0EFF               	movlw	255
 17766  0133DE  20E2               	addwfc	fsr1h,w,c
 17767  0133E0  6EDA               	movwf	fsr2h,c
 17768  0133E2  5040               	movf	(btemp+11)^0,w,c
 17769  0133E4  12DF               	iorwf	indf2,f,c
 17770                           
 17771                           ;stkvar	_b @ sp[(-13)+-4]
 17772  0133E6  0EEF               	movlw	-17
 17773  0133E8  006F FF8C  F035    	movff	plusw1,btemp
 17774  0133EE  0EF0               	movlw	-16
 17775  0133F0  006F FF8C  F036    	movff	plusw1,btemp+1
 17776  0133F6  0EF1               	movlw	-15
 17777  0133F8  006F FF8C  F037    	movff	plusw1,btemp+2
 17778  0133FE  0EF2               	movlw	-14
 17779  013400  006F FF8C  F038    	movff	plusw1,btemp+3
 17780  013406  D19F               	goto	l2590
 17781  013408                     l6615:
 17782                           
 17783                           ;stkvar	_bexp @ sp[(-13)+11]
 17784  013408  0EFE               	movlw	-2
 17785  01340A  50E3               	movf	plusw1,w,c
 17786  01340C  A4D8               	btfss	status,2,c
 17787  01340E  D009               	goto	l6623
 17788  013410  0E00               	movlw	0
 17789  013412  6E35               	movwf	btemp^0,c
 17790  013414  0E00               	movlw	0
 17791  013416  6E36               	movwf	(btemp+1)^0,c
 17792  013418  0E00               	movlw	0
 17793  01341A  6E37               	movwf	(btemp+2)^0,c
 17794  01341C  0E00               	movlw	0
 17795  01341E  6E38               	movwf	(btemp+3)^0,c
 17796  013420  D192               	goto	l2590
 17797  013422                     l6623:
 17798                           
 17799                           ;stkvar	_bexp @ sp[(-13)+11]
 17800  013422  0EFE               	movlw	-2
 17801  013424  50E3               	movf	plusw1,w,c
 17802  013426  6E3F               	movwf	(btemp+10)^0,c
 17803  013428  6A40               	clrf	(btemp+11)^0,c
 17804                           
 17805                           ;stkvar	_aexp @ sp[(-13)+10]
 17806  01342A  0EFD               	movlw	-3
 17807  01342C  50E3               	movf	plusw1,w,c
 17808  01342E  5E3F               	subwf	(btemp+10)^0,f,c
 17809  013430  0E00               	movlw	0
 17810  013432  5A40               	subwfb	(btemp+11)^0,f,c
 17811  013434  0E7F               	movlw	127
 17812  013436  263F               	addwf	(btemp+10)^0,f,c
 17813  013438  0E00               	movlw	0
 17814  01343A  2240               	addwfc	(btemp+11)^0,f,c
 17815                           
 17816                           ;stkvar	_new_exp @ sp[(-13)+8]
 17817  01343C  0EFB               	movlw	-5
 17818  01343E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17819  013444  0EFC               	movlw	-4
 17820  013446  0060  F103  FFE3   	movff	btemp+11,plusw1
 17821                           
 17822                           ;stkvar	_b @ sp[(-13)+-4]
 17823  01344C  0EEF               	movlw	-17
 17824  01344E  006F FF8C  F03D    	movff	plusw1,btemp+8
 17825  013454  0EF0               	movlw	-16
 17826  013456  006F FF8C  F03E    	movff	plusw1,btemp+9
 17827  01345C  0EF1               	movlw	-15
 17828  01345E  006F FF8C  F03F    	movff	plusw1,btemp+10
 17829  013464  0EF2               	movlw	-14
 17830  013466  006F FF8C  F040    	movff	plusw1,btemp+11
 17831                           
 17832                           ;stkvar	_rem @ sp[(-13)+4]
 17833  01346C  0EF7               	movlw	-9
 17834  01346E  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 17835  013474  0EF8               	movlw	-8
 17836  013476  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 17837  01347C  0EF9               	movlw	-7
 17838  01347E  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 17839  013484  0EFA               	movlw	-6
 17840  013486  0060  F103  FFE3   	movff	btemp+11,plusw1
 17841                           
 17842                           ;stkvar	_b @ sp[(-13)+-4]
 17843  01348C  0EEF               	movlw	-17
 17844  01348E  6AE3               	clrf	plusw1,c
 17845  013490  0EF0               	movlw	-16
 17846  013492  6AE3               	clrf	plusw1,c
 17847  013494  0EF1               	movlw	-15
 17848  013496  6AE3               	clrf	plusw1,c
 17849  013498  0EF2               	movlw	-14
 17850  01349A  6AE3               	clrf	plusw1,c
 17851                           
 17852                           ;stkvar	_grs @ sp[(-13)+0]
 17853  01349C  0EF3               	movlw	-13
 17854  01349E  6AE3               	clrf	plusw1,c
 17855  0134A0  0EF4               	movlw	-12
 17856  0134A2  6AE3               	clrf	plusw1,c
 17857  0134A4  0EF5               	movlw	-11
 17858  0134A6  6AE3               	clrf	plusw1,c
 17859  0134A8  0EF6               	movlw	-10
 17860  0134AA  6AE3               	clrf	plusw1,c
 17861                           
 17862                           ;stkvar	_aexp @ sp[(-13)+10]
 17863  0134AC  0EFD               	movlw	-3
 17864  0134AE  6AE3               	clrf	plusw1,c
 17865  0134B0  D050               	goto	l6651
 17866  0134B2                     l6633:
 17867                           
 17868                           ;stkvar	_aexp @ sp[(-13)+10]
 17869  0134B2  0EFD               	movlw	-3
 17870  0134B4  50E3               	movf	plusw1,w,c
 17871  0134B6  B4D8               	btfsc	status,2,c
 17872  0134B8  D020               	goto	l6643
 17873                           
 17874                           ;stkvar	_rem @ sp[(-13)+4]
 17875  0134BA  90D8               	bcf	status,0,c
 17876  0134BC  0EF7               	movlw	-9
 17877  0134BE  36E3               	rlcf	plusw1,f,c
 17878  0134C0  0EF8               	movlw	-8
 17879  0134C2  36E3               	rlcf	plusw1,f,c
 17880  0134C4  0EF9               	movlw	-7
 17881  0134C6  36E3               	rlcf	plusw1,f,c
 17882  0134C8  0EFA               	movlw	-6
 17883  0134CA  36E3               	rlcf	plusw1,f,c
 17884                           
 17885                           ;stkvar	_b @ sp[(-13)+-4]
 17886  0134CC  90D8               	bcf	status,0,c
 17887  0134CE  0EEF               	movlw	-17
 17888  0134D0  36E3               	rlcf	plusw1,f,c
 17889  0134D2  0EF0               	movlw	-16
 17890  0134D4  36E3               	rlcf	plusw1,f,c
 17891  0134D6  0EF1               	movlw	-15
 17892  0134D8  36E3               	rlcf	plusw1,f,c
 17893  0134DA  0EF2               	movlw	-14
 17894  0134DC  36E3               	rlcf	plusw1,f,c
 17895                           
 17896                           ;stkvar	_grs @ sp[(-13)+0]
 17897  0134DE  0EF6               	movlw	-10
 17898  0134E0  AEE3               	btfss	plusw1,7,c
 17899  0134E2  D002               	goto	l6641
 17900                           
 17901                           ;stkvar	_b @ sp[(-13)+-4]
 17902  0134E4  0EEF               	movlw	-17
 17903  0134E6  80E3               	bsf	plusw1,0,c
 17904  0134E8                     l6641:
 17905                           
 17906                           ;stkvar	_grs @ sp[(-13)+0]
 17907  0134E8  90D8               	bcf	status,0,c
 17908  0134EA  0EF3               	movlw	-13
 17909  0134EC  36E3               	rlcf	plusw1,f,c
 17910  0134EE  0EF4               	movlw	-12
 17911  0134F0  36E3               	rlcf	plusw1,f,c
 17912  0134F2  0EF5               	movlw	-11
 17913  0134F4  36E3               	rlcf	plusw1,f,c
 17914  0134F6  0EF6               	movlw	-10
 17915  0134F8  36E3               	rlcf	plusw1,f,c
 17916  0134FA                     l6643:
 17917                           
 17918                           ;stkvar	_a @ sp[(-13)+-8]
 17919                           ;stkvar	_rem @ sp[(-13)+4]
 17920  0134FA  50E1               	movf	fsr1l,w,c
 17921  0134FC  0FF7               	addlw	-9
 17922  0134FE  6ED9               	movwf	fsr2l,c
 17923  013500  50E2               	movf	fsr1h,w,c
 17924  013502  6EDA               	movwf	fsr2h,c
 17925  013504  0EFF               	movlw	255
 17926  013506  22DA               	addwfc	fsr2h,f,c
 17927  013508  0EEB               	movlw	-21
 17928  01350A  50E3               	movf	plusw1,w,c
 17929  01350C  5CDE               	subwf	postinc2,w,c
 17930  01350E  0EEC               	movlw	-20
 17931  013510  50E3               	movf	plusw1,w,c
 17932  013512  58DE               	subwfb	postinc2,w,c
 17933  013514  0EED               	movlw	-19
 17934  013516  50E3               	movf	plusw1,w,c
 17935  013518  58DE               	subwfb	postinc2,w,c
 17936  01351A  0EEE               	movlw	-18
 17937  01351C  50E3               	movf	plusw1,w,c
 17938  01351E  58DE               	subwfb	postinc2,w,c
 17939  013520  A0D8               	btfss	status,0,c
 17940  013522  D015               	goto	l6649
 17941                           
 17942                           ;stkvar	_grs @ sp[(-13)+0]
 17943  013524  0EF6               	movlw	-10
 17944  013526  8CE3               	bsf	plusw1,6,c
 17945                           
 17946                           ;stkvar	_a @ sp[(-13)+-8]
 17947                           ;stkvar	_rem @ sp[(-13)+4]
 17948  013528  50E1               	movf	fsr1l,w,c
 17949  01352A  0FF7               	addlw	-9
 17950  01352C  6ED9               	movwf	fsr2l,c
 17951  01352E  50E2               	movf	fsr1h,w,c
 17952  013530  6EDA               	movwf	fsr2h,c
 17953  013532  0EFF               	movlw	255
 17954  013534  22DA               	addwfc	fsr2h,f,c
 17955  013536  0EEB               	movlw	-21
 17956  013538  50E3               	movf	plusw1,w,c
 17957  01353A  5EDE               	subwf	postinc2,f,c
 17958  01353C  0EEC               	movlw	-20
 17959  01353E  50E3               	movf	plusw1,w,c
 17960  013540  5ADE               	subwfb	postinc2,f,c
 17961  013542  0EED               	movlw	-19
 17962  013544  50E3               	movf	plusw1,w,c
 17963  013546  5ADE               	subwfb	postinc2,f,c
 17964  013548  0EEE               	movlw	-18
 17965  01354A  50E3               	movf	plusw1,w,c
 17966  01354C  5ADE               	subwfb	postinc2,f,c
 17967  01354E                     l6649:
 17968                           
 17969                           ;stkvar	_aexp @ sp[(-13)+10]
 17970  01354E  0EFD               	movlw	-3
 17971  013550  2AE3               	incf	plusw1,f,c
 17972  013552                     l6651:
 17973                           
 17974                           ;stkvar	_aexp @ sp[(-13)+10]
 17975  013552  0EFD               	movlw	-3
 17976  013554  006F FF8C  F035    	movff	plusw1,btemp
 17977  01355A  0E19               	movlw	25
 17978  01355C  6435               	cpfsgt	btemp^0,c
 17979  01355E  D7A9               	goto	l6633
 17980                           
 17981                           ;stkvar	_rem @ sp[(-13)+4]
 17982  013560  0EF7               	movlw	-9
 17983  013562  50E3               	movf	plusw1,w,c
 17984  013564  E10A               	bnz	u5770
 17985  013566  0EF8               	movlw	-8
 17986  013568  50E3               	movf	plusw1,w,c
 17987  01356A  E107               	bnz	u5770
 17988  01356C  0EF9               	movlw	-7
 17989  01356E  50E3               	movf	plusw1,w,c
 17990  013570  E104               	bnz	u5770
 17991  013572  0EFA               	movlw	-6
 17992  013574  50E3               	movf	plusw1,w,c
 17993  013576  B4D8               	btfsc	status,2,c
 17994  013578  D024               	goto	l6667
 17995  01357A                     u5770:
 17996                           
 17997                           ;stkvar	_grs @ sp[(-13)+0]
 17998  01357A  0EF3               	movlw	-13
 17999  01357C  80E3               	bsf	plusw1,0,c
 18000  01357E  D021               	goto	l6667
 18001  013580                     l6657:
 18002                           
 18003                           ;stkvar	_b @ sp[(-13)+-4]
 18004  013580  90D8               	bcf	status,0,c
 18005  013582  0EEF               	movlw	-17
 18006  013584  36E3               	rlcf	plusw1,f,c
 18007  013586  0EF0               	movlw	-16
 18008  013588  36E3               	rlcf	plusw1,f,c
 18009  01358A  0EF1               	movlw	-15
 18010  01358C  36E3               	rlcf	plusw1,f,c
 18011  01358E  0EF2               	movlw	-14
 18012  013590  36E3               	rlcf	plusw1,f,c
 18013                           
 18014                           ;stkvar	_grs @ sp[(-13)+0]
 18015  013592  0EF6               	movlw	-10
 18016  013594  AEE3               	btfss	plusw1,7,c
 18017  013596  D002               	goto	l6663
 18018                           
 18019                           ;stkvar	_b @ sp[(-13)+-4]
 18020  013598  0EEF               	movlw	-17
 18021  01359A  80E3               	bsf	plusw1,0,c
 18022  01359C                     l6663:
 18023                           
 18024                           ;stkvar	_grs @ sp[(-13)+0]
 18025  01359C  90D8               	bcf	status,0,c
 18026  01359E  0EF3               	movlw	-13
 18027  0135A0  36E3               	rlcf	plusw1,f,c
 18028  0135A2  0EF4               	movlw	-12
 18029  0135A4  36E3               	rlcf	plusw1,f,c
 18030  0135A6  0EF5               	movlw	-11
 18031  0135A8  36E3               	rlcf	plusw1,f,c
 18032  0135AA  0EF6               	movlw	-10
 18033  0135AC  36E3               	rlcf	plusw1,f,c
 18034                           
 18035                           ;stkvar	_new_exp @ sp[(-13)+8]
 18036  0135AE  50E1               	movf	fsr1l,w,c
 18037  0135B0  0FFB               	addlw	-5
 18038  0135B2  6ED9               	movwf	fsr2l,c
 18039  0135B4  50E2               	movf	fsr1h,w,c
 18040  0135B6  6EDA               	movwf	fsr2h,c
 18041  0135B8  0EFF               	movlw	255
 18042  0135BA  22DA               	addwfc	fsr2h,f,c
 18043  0135BC  06DE               	decf	postinc2,f,c
 18044  0135BE  0E00               	movlw	0
 18045  0135C0  5ADD               	subwfb	postdec2,f,c
 18046  0135C2                     l6667:
 18047                           
 18048                           ;stkvar	_b @ sp[(-13)+-4]
 18049  0135C2  0EF1               	movlw	-15
 18050  0135C4  AEE3               	btfss	plusw1,7,c
 18051  0135C6  D7DC               	goto	l6657
 18052                           
 18053                           ;stkvar	_aexp @ sp[(-13)+10]
 18054  0135C8  0EFD               	movlw	-3
 18055  0135CA  6AE3               	clrf	plusw1,c
 18056                           
 18057                           ;stkvar	_grs @ sp[(-13)+0]
 18058  0135CC  0EF6               	movlw	-10
 18059  0135CE  AEE3               	btfss	plusw1,7,c
 18060  0135D0  D020               	goto	l6681
 18061                           
 18062                           ;stkvar	_grs @ sp[(-13)+0]
 18063  0135D2  50E1               	movf	fsr1l,w,c
 18064  0135D4  0FF3               	addlw	-13
 18065  0135D6  6ED9               	movwf	fsr2l,c
 18066  0135D8  50E2               	movf	fsr1h,w,c
 18067  0135DA  6EDA               	movwf	fsr2h,c
 18068  0135DC  0EFF               	movlw	255
 18069  0135DE  22DA               	addwfc	fsr2h,f,c
 18070  0135E0  0EFF               	movlw	255
 18071  0135E2  14DE               	andwf	postinc2,w,c
 18072  0135E4  6E3D               	movwf	(btemp+8)^0,c
 18073  0135E6  0EFF               	movlw	255
 18074  0135E8  14DE               	andwf	postinc2,w,c
 18075  0135EA  6E3E               	movwf	(btemp+9)^0,c
 18076  0135EC  0EFF               	movlw	255
 18077  0135EE  14DE               	andwf	postinc2,w,c
 18078  0135F0  6E3F               	movwf	(btemp+10)^0,c
 18079  0135F2  0E7F               	movlw	127
 18080  0135F4  14DE               	andwf	postinc2,w,c
 18081  0135F6  6E40               	movwf	(btemp+11)^0,c
 18082  0135F8  503D               	movf	(btemp+8)^0,w,c
 18083  0135FA  103E               	iorwf	(btemp+9)^0,w,c
 18084  0135FC  103F               	iorwf	(btemp+10)^0,w,c
 18085  0135FE  1040               	iorwf	(btemp+11)^0,w,c
 18086  013600  B4D8               	btfsc	status,2,c
 18087  013602  D004               	goto	l6677
 18088  013604                     u5810:
 18089                           
 18090                           ;stkvar	_aexp @ sp[(-13)+10]
 18091  013604  0EFD               	movlw	-3
 18092  013606  6AE3               	clrf	plusw1,c
 18093  013608  2AE3               	incf	plusw1,f,c
 18094  01360A  D003               	goto	l6681
 18095  01360C                     l6677:
 18096                           
 18097                           ;stkvar	_b @ sp[(-13)+-4]
 18098  01360C  0EEF               	movlw	-17
 18099  01360E  B0E3               	btfsc	plusw1,0,c
 18100  013610  D7F9               	goto	u5810
 18101  013612                     l6681:
 18102                           
 18103                           ;stkvar	_aexp @ sp[(-13)+10]
 18104  013612  0EFD               	movlw	-3
 18105  013614  50E3               	movf	plusw1,w,c
 18106  013616  B4D8               	btfsc	status,2,c
 18107  013618  D036               	goto	l6691
 18108                           
 18109                           ;stkvar	_b @ sp[(-13)+-4]
 18110  01361A  50E1               	movf	fsr1l,w,c
 18111  01361C  0FEF               	addlw	-17
 18112  01361E  6ED9               	movwf	fsr2l,c
 18113  013620  50E2               	movf	fsr1h,w,c
 18114  013622  6EDA               	movwf	fsr2h,c
 18115  013624  0EFF               	movlw	255
 18116  013626  22DA               	addwfc	fsr2h,f,c
 18117  013628  2ADE               	incf	postinc2,f,c
 18118  01362A  0E00               	movlw	0
 18119  01362C  22DE               	addwfc	postinc2,f,c
 18120  01362E  22DE               	addwfc	postinc2,f,c
 18121  013630  22DE               	addwfc	postinc2,f,c
 18122                           
 18123                           ;stkvar	_b @ sp[(-13)+-4]
 18124  013632  0EF2               	movlw	-14
 18125  013634  A0E3               	btfss	plusw1,0,c
 18126  013636  D027               	goto	l6691
 18127  013638  0E01               	movlw	1
 18128  01363A  6E40               	movwf	(btemp+11)^0,c
 18129                           
 18130                           ;stkvar	_b @ sp[(-13)+-4]
 18131  01363C  50E1               	movf	fsr1l,w,c
 18132  01363E  0FEF               	addlw	-17
 18133  013640  6ED9               	movwf	fsr2l,c
 18134  013642  50E2               	movf	fsr1h,w,c
 18135  013644  6EDA               	movwf	fsr2h,c
 18136  013646  0EFF               	movlw	255
 18137  013648  22DA               	addwfc	fsr2h,f,c
 18138  01364A  2840               	incf	(btemp+11)^0,w,c
 18139  01364C  52DE               	movf	postinc2,f,c
 18140  01364E  D008               	goto	u5850
 18141  013650                     u5855:
 18142  013650  52DE               	movf	postinc2,f,c
 18143  013652  90D8               	bcf	status,0,c
 18144  013654  BEDC               	btfsc	preinc2,7,c
 18145  013656  80D8               	bsf	status,0,c
 18146  013658  32DD               	rrcf	postdec2,f,c
 18147  01365A  32DD               	rrcf	postdec2,f,c
 18148  01365C  32DD               	rrcf	postdec2,f,c
 18149  01365E  32DE               	rrcf	postinc2,f,c
 18150  013660                     u5850:
 18151  013660  2EE8               	decfsz	wreg,f,c
 18152  013662  D7F6               	goto	u5855
 18153                           
 18154                           ;stkvar	_new_exp @ sp[(-13)+8]
 18155  013664  0EFB               	movlw	-5
 18156  013666  50E3               	movf	plusw1,w,c
 18157  013668  0F01               	addlw	1
 18158  01366A  6E35               	movwf	btemp^0,c
 18159  01366C  0EFB               	movlw	-5
 18160  01366E  0060  F0D7  FFE3   	movff	btemp,plusw1
 18161  013674  6A35               	clrf	btemp^0,c
 18162  013676  0EFC               	movlw	-4
 18163  013678  50E3               	movf	plusw1,w,c
 18164  01367A  2035               	addwfc	btemp^0,w,c
 18165  01367C  6E35               	movwf	btemp^0,c
 18166  01367E  0EFC               	movlw	-4
 18167  013680  0060  F0D7  FFE3   	movff	btemp,plusw1
 18168  013686                     l6691:
 18169                           
 18170                           ;stkvar	_new_exp @ sp[(-13)+8]
 18171  013686  0EFC               	movlw	-4
 18172  013688  BEE3               	btfsc	plusw1,7,c
 18173  01368A  D01B               	goto	l6697
 18174  01368C  0EFC               	movlw	-4
 18175  01368E  50E3               	movf	plusw1,w,c
 18176  013690  E104               	bnz	u5860
 18177  013692  0EFB               	movlw	-5
 18178  013694  28E3               	incf	plusw1,w,c
 18179  013696  A0D8               	btfss	status,0,c
 18180  013698  D014               	goto	l6697
 18181  01369A                     u5860:
 18182  01369A  0EFF               	movlw	255
 18183  01369C  6E3F               	movwf	(btemp+10)^0,c
 18184  01369E  0E00               	movlw	0
 18185  0136A0  6E40               	movwf	(btemp+11)^0,c
 18186                           
 18187                           ;stkvar	_new_exp @ sp[(-13)+8]
 18188  0136A2  0EFB               	movlw	-5
 18189  0136A4  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18190  0136AA  0EFC               	movlw	-4
 18191  0136AC  0060  F103  FFE3   	movff	btemp+11,plusw1
 18192                           
 18193                           ;stkvar	_b @ sp[(-13)+-4]
 18194  0136B2  0EEF               	movlw	-17
 18195  0136B4  6AE3               	clrf	plusw1,c
 18196  0136B6  0EF0               	movlw	-16
 18197  0136B8  6AE3               	clrf	plusw1,c
 18198  0136BA  0EF1               	movlw	-15
 18199  0136BC  6AE3               	clrf	plusw1,c
 18200  0136BE  0EF2               	movlw	-14
 18201  0136C0  6AE3               	clrf	plusw1,c
 18202  0136C2                     l6697:
 18203                           
 18204                           ;stkvar	_new_exp @ sp[(-13)+8]
 18205  0136C2  0EFC               	movlw	-4
 18206  0136C4  BEE3               	btfsc	plusw1,7,c
 18207  0136C6  D007               	goto	u5870
 18208  0136C8  0EFC               	movlw	-4
 18209  0136CA  50E3               	movf	plusw1,w,c
 18210  0136CC  E112               	bnz	l6703
 18211  0136CE  0EFB               	movlw	-5
 18212  0136D0  04E3               	decf	plusw1,w,c
 18213  0136D2  B0D8               	btfsc	status,0,c
 18214  0136D4  D00E               	goto	l6703
 18215  0136D6                     u5870:
 18216                           
 18217                           ;stkvar	_new_exp @ sp[(-13)+8]
 18218  0136D6  0EFB               	movlw	-5
 18219  0136D8  6AE3               	clrf	plusw1,c
 18220  0136DA  0EFC               	movlw	-4
 18221  0136DC  6AE3               	clrf	plusw1,c
 18222                           
 18223                           ;stkvar	_b @ sp[(-13)+-4]
 18224  0136DE  0EEF               	movlw	-17
 18225  0136E0  6AE3               	clrf	plusw1,c
 18226  0136E2  0EF0               	movlw	-16
 18227  0136E4  6AE3               	clrf	plusw1,c
 18228  0136E6  0EF1               	movlw	-15
 18229  0136E8  6AE3               	clrf	plusw1,c
 18230  0136EA  0EF2               	movlw	-14
 18231  0136EC  6AE3               	clrf	plusw1,c
 18232                           
 18233                           ;stkvar	_sign @ sp[(-13)+12]
 18234  0136EE  0EFF               	movlw	-1
 18235  0136F0  6AE3               	clrf	plusw1,c
 18236  0136F2                     l6703:
 18237                           
 18238                           ;stkvar	_new_exp @ sp[(-13)+8]
 18239                           ;stkvar	_bexp @ sp[(-13)+11]
 18240  0136F2  0EFB               	movlw	-5
 18241  0136F4  006F FF8C  F035    	movff	plusw1,btemp
 18242  0136FA  0EFE               	movlw	-2
 18243  0136FC  0060  F0D7  FFE3   	movff	btemp,plusw1
 18244                           
 18245                           ;stkvar	_bexp @ sp[(-13)+11]
 18246  013702  0EFE               	movlw	-2
 18247  013704  A0E3               	btfss	plusw1,0,c
 18248  013706  D009               	goto	l6709
 18249                           
 18250                           ;stkvar	_b @ sp[(-13)+-4]
 18251  013708  0EF1               	movlw	241
 18252  01370A  24E1               	addwf	fsr1l,w,c
 18253  01370C  6ED9               	movwf	fsr2l,c
 18254  01370E  0EFF               	movlw	255
 18255  013710  20E2               	addwfc	fsr1h,w,c
 18256  013712  6EDA               	movwf	fsr2h,c
 18257  013714  0E00               	movlw	0
 18258  013716  8EDB               	bsf	plusw2,7,c
 18259  013718  D008               	goto	l6711
 18260  01371A                     l6709:
 18261                           
 18262                           ;stkvar	_b @ sp[(-13)+-4]
 18263  01371A  0EF1               	movlw	241
 18264  01371C  24E1               	addwf	fsr1l,w,c
 18265  01371E  6ED9               	movwf	fsr2l,c
 18266  013720  0EFF               	movlw	255
 18267  013722  20E2               	addwfc	fsr1h,w,c
 18268  013724  6EDA               	movwf	fsr2h,c
 18269  013726  0E7F               	movlw	127
 18270  013728  16DF               	andwf	indf2,f,c
 18271  01372A                     l6711:
 18272                           
 18273                           ;stkvar	_b @ sp[(-13)+-4]
 18274  01372A  0EF2               	movlw	242
 18275  01372C  24E1               	addwf	fsr1l,w,c
 18276  01372E  6ED9               	movwf	fsr2l,c
 18277  013730  0EFF               	movlw	255
 18278  013732  20E2               	addwfc	fsr1h,w,c
 18279  013734  6EDA               	movwf	fsr2h,c
 18280                           
 18281                           ;stkvar	_bexp @ sp[(-13)+11]
 18282  013736  0EFE               	movlw	-2
 18283  013738  006F FF8C  F040    	movff	plusw1,btemp+11
 18284  01373E  90D8               	bcf	status,0,c
 18285  013740  3040               	rrcf	(btemp+11)^0,w,c
 18286  013742  6EDF               	movwf	indf2,c
 18287  013744  D644               	goto	l6609
 18288  013746                     l2590:
 18289                           
 18290                           ; ___fldiv: autosize = 13, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 8, args
      +                          ize = 8, vargsize = 0
 18291  013746  0EEB               	movlw	235
 18292  013748  26E1               	addwf	fsr1l,f,c
 18293  01374A  0EFF               	movlw	255
 18294  01374C  22E2               	addwfc	fsr1h,f,c
 18295  01374E  0012               	return		;funcret
 18296  013750                     __end_of___fldiv:
 18297                           	opt callstack 0
 18298                           
 18299 ;; *************** function ___awmod *****************
 18300 ;; Defined at:
 18301 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awmod.c"
 18302 ;; Parameters:    Size  Location     Type
 18303 ;;  dividend        2  [STACK] int 
 18304 ;;  divisor         2  [STACK] int 
 18305 ;; Auto vars:     Size  Location     Type
 18306 ;;  sign            1  [STACK] unsigned char 
 18307 ;;  counter         1  [STACK] unsigned char 
 18308 ;; Return value:  Size  Location     Type
 18309 ;;                  2  [STACK] int 
 18310 ;; Registers used:
 18311 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18312 ;; Tracked objects:
 18313 ;;		On entry : 0/4
 18314 ;;		On exit  : 0/0
 18315 ;;		Unchanged: 0/0
 18316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18318 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18319 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18320 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18321 ;;Total ram usage:        0 bytes
 18322 ;; Hardware stack levels used:    1
 18323 ;; Hardware stack levels required when called:    6
 18324 ;; This function calls:
 18325 ;;		Nothing
 18326 ;; This function is called by:
 18327 ;;		_efgtoa
 18328 ;; This function uses a reentrant model
 18329 ;;
 18330                           
 18331                           	psect	text59
 18332  016E84                     __ptext59:
 18333                           	opt callstack 0
 18334  016E84                     ___awmod:
 18335                           	opt callstack 0
 18336                           
 18337                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18338  016E84  52E6               	movf	postinc1,f,c
 18339  016E86  52E6               	movf	postinc1,f,c
 18340                           
 18341                           ;stkvar	_sign @ sp[(-2)+0]
 18342                           
 18343                           ;incstack = 0
 18344  016E88  0EFE               	movlw	-2
 18345  016E8A  6AE3               	clrf	plusw1,c
 18346                           
 18347                           ;stkvar	_dividend @ sp[(-2)+-2]
 18348  016E8C  0EFD               	movlw	-3
 18349  016E8E  AEE3               	btfss	plusw1,7,c
 18350  016E90  D009               	goto	l6935
 18351                           
 18352                           ;stkvar	_dividend @ sp[(-2)+-2]
 18353                           ;stkvar	_dividend @ sp[(-2)+-2]
 18354  016E92  0EFC               	movlw	-4
 18355  016E94  6CE3               	negf	plusw1,c
 18356  016E96  0EFD               	movlw	-3
 18357  016E98  1EE3               	comf	plusw1,f,c
 18358  016E9A  B0D8               	btfsc	status,0,c
 18359  016E9C  2AE3               	incf	plusw1,f,c
 18360                           
 18361                           ;stkvar	_sign @ sp[(-2)+0]
 18362  016E9E  0EFE               	movlw	-2
 18363  016EA0  6AE3               	clrf	plusw1,c
 18364  016EA2  2AE3               	incf	plusw1,f,c
 18365  016EA4                     l6935:
 18366                           
 18367                           ;stkvar	_divisor @ sp[(-2)+-4]
 18368  016EA4  0EFB               	movlw	-5
 18369  016EA6  AEE3               	btfss	plusw1,7,c
 18370  016EA8  D006               	goto	l6939
 18371                           
 18372                           ;stkvar	_divisor @ sp[(-2)+-4]
 18373                           ;stkvar	_divisor @ sp[(-2)+-4]
 18374  016EAA  0EFA               	movlw	-6
 18375  016EAC  6CE3               	negf	plusw1,c
 18376  016EAE  0EFB               	movlw	-5
 18377  016EB0  1EE3               	comf	plusw1,f,c
 18378  016EB2  B0D8               	btfsc	status,0,c
 18379  016EB4  2AE3               	incf	plusw1,f,c
 18380  016EB6                     l6939:
 18381                           
 18382                           ;stkvar	_divisor @ sp[(-2)+-4]
 18383  016EB6  0EFA               	movlw	-6
 18384  016EB8  006F FF8C  F035    	movff	plusw1,btemp
 18385  016EBE  0EFB               	movlw	-5
 18386  016EC0  50E3               	movf	plusw1,w,c
 18387  016EC2  1035               	iorwf	btemp^0,w,c
 18388  016EC4  B4D8               	btfsc	status,2,c
 18389  016EC6  D053               	goto	u6230
 18390                           
 18391                           ;stkvar	_counter @ sp[(-2)+1]
 18392  016EC8  0EFF               	movlw	-1
 18393  016ECA  6AE3               	clrf	plusw1,c
 18394  016ECC  D012               	goto	L17
 18395  016ECE                     l6943:
 18396                           
 18397                           ;stkvar	_divisor @ sp[(-2)+-4]
 18398  016ECE  0EFA               	movlw	-6
 18399  016ED0  50E3               	movf	plusw1,w,c
 18400  016ED2  90D8               	bcf	status,0,c
 18401  016ED4  34E8               	rlcf	wreg,w,c
 18402  016ED6  6E35               	movwf	btemp^0,c
 18403  016ED8  0EFA               	movlw	-6
 18404  016EDA  0060  F0D7  FFE3   	movff	btemp,plusw1
 18405  016EE0  0EFB               	movlw	-5
 18406  016EE2  50E3               	movf	plusw1,w,c
 18407  016EE4  34E8               	rlcf	wreg,w,c
 18408  016EE6  6E35               	movwf	btemp^0,c
 18409  016EE8  0EFB               	movlw	-5
 18410  016EEA  0060  F0D7  FFE3   	movff	btemp,plusw1
 18411                           
 18412                           ;stkvar	_counter @ sp[(-2)+1]
 18413  016EF0  0EFF               	movlw	-1
 18414  016EF2                     L17:
 18415  016EF2  2AE3               	incf	plusw1,f,c
 18416                           
 18417                           ;stkvar	_divisor @ sp[(-2)+-4]
 18418  016EF4  0EFB               	movlw	-5
 18419  016EF6  AEE3               	btfss	plusw1,7,c
 18420  016EF8  D7EA               	goto	l6943
 18421  016EFA                     u6210:
 18422                           
 18423                           ;stkvar	_divisor @ sp[(-2)+-4]
 18424  016EFA  0EFA               	movlw	-6
 18425  016EFC  006F FF8C  F03F    	movff	plusw1,btemp+10
 18426  016F02  0EFB               	movlw	-5
 18427  016F04  006F FF8C  F040    	movff	plusw1,btemp+11
 18428                           
 18429                           ;stkvar	_dividend @ sp[(-2)+-2]
 18430  016F0A  0EFC               	movlw	-4
 18431  016F0C  006F FF8C  F03D    	movff	plusw1,btemp+8
 18432  016F12  0EFD               	movlw	-3
 18433  016F14  006F FF8C  F03E    	movff	plusw1,btemp+9
 18434  016F1A  503F               	movf	(btemp+10)^0,w,c
 18435  016F1C  5C3D               	subwf	(btemp+8)^0,w,c
 18436  016F1E  5040               	movf	(btemp+11)^0,w,c
 18437  016F20  583E               	subwfb	(btemp+9)^0,w,c
 18438  016F22  A0D8               	btfss	status,0,c
 18439  016F24  D014               	goto	l6953
 18440                           
 18441                           ;stkvar	_divisor @ sp[(-2)+-4]
 18442                           ;stkvar	_dividend @ sp[(-2)+-2]
 18443  016F26  0EFC               	movlw	-4
 18444  016F28  50E3               	movf	plusw1,w,c
 18445  016F2A  6E35               	movwf	btemp^0,c
 18446  016F2C  0EFA               	movlw	-6
 18447  016F2E  50E3               	movf	plusw1,w,c
 18448  016F30  5E35               	subwf	btemp^0,f,c
 18449  016F32  0EFC               	movlw	-4
 18450  016F34  0060  F0D7  FFE3   	movff	btemp,plusw1
 18451  016F3A  0EFD               	movlw	-3
 18452  016F3C  50E3               	movf	plusw1,w,c
 18453  016F3E  6E35               	movwf	btemp^0,c
 18454  016F40  0EFB               	movlw	-5
 18455  016F42  50E3               	movf	plusw1,w,c
 18456  016F44  5A35               	subwfb	btemp^0,f,c
 18457  016F46  0EFD               	movlw	-3
 18458  016F48  0060  F0D7  FFE3   	movff	btemp,plusw1
 18459  016F4E                     l6953:
 18460                           
 18461                           ;stkvar	_divisor @ sp[(-2)+-4]
 18462  016F4E  90D8               	bcf	status,0,c
 18463  016F50  0EFB               	movlw	-5
 18464  016F52  32E3               	rrcf	plusw1,f,c
 18465  016F54  0EFA               	movlw	-6
 18466  016F56  32E3               	rrcf	plusw1,f,c
 18467                           
 18468                           ;stkvar	_counter @ sp[(-2)+1]
 18469  016F58  0EFF               	movlw	-1
 18470  016F5A  50E3               	movf	plusw1,w,c
 18471  016F5C  6E35               	movwf	btemp^0,c
 18472  016F5E  0E01               	movlw	1
 18473  016F60  5E35               	subwf	btemp^0,f,c
 18474  016F62  0EFF               	movlw	-1
 18475  016F64  0060  F0D7  FFE3   	movff	btemp,plusw1
 18476  016F6A  A4D8               	btfss	status,2,c
 18477  016F6C  D7C6               	goto	u6210
 18478  016F6E                     u6230:
 18479                           
 18480                           ;stkvar	_sign @ sp[(-2)+0]
 18481  016F6E  0EFE               	movlw	-2
 18482  016F70  50E3               	movf	plusw1,w,c
 18483  016F72  B4D8               	btfsc	status,2,c
 18484  016F74  D006               	goto	l6961
 18485                           
 18486                           ;stkvar	_dividend @ sp[(-2)+-2]
 18487                           ;stkvar	_dividend @ sp[(-2)+-2]
 18488  016F76  0EFC               	movlw	-4
 18489  016F78  6CE3               	negf	plusw1,c
 18490  016F7A  0EFD               	movlw	-3
 18491  016F7C  1EE3               	comf	plusw1,f,c
 18492  016F7E  B0D8               	btfsc	status,0,c
 18493  016F80  2AE3               	incf	plusw1,f,c
 18494  016F82                     l6961:
 18495                           
 18496                           ;stkvar	_dividend @ sp[(-2)+-2]
 18497  016F82  0EFC               	movlw	-4
 18498  016F84  006F FF8C  F035    	movff	plusw1,btemp
 18499  016F8A  0EFD               	movlw	-3
 18500  016F8C  006F FF8C  F036    	movff	plusw1,btemp+1
 18501                           
 18502                           ; ___awmod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18503  016F92  0EFA               	movlw	250
 18504  016F94  26E1               	addwf	fsr1l,f,c
 18505  016F96  0EFF               	movlw	255
 18506  016F98  22E2               	addwfc	fsr1h,f,c
 18507  016F9A  0012               	return		;funcret
 18508  016F9C                     __end_of___awmod:
 18509                           	opt callstack 0
 18510                           
 18511 ;; *************** function ___awdiv *****************
 18512 ;; Defined at:
 18513 ;;		line 7 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/awdiv.c"
 18514 ;; Parameters:    Size  Location     Type
 18515 ;;  dividend        2  [STACK] int 
 18516 ;;  divisor         2  [STACK] int 
 18517 ;; Auto vars:     Size  Location     Type
 18518 ;;  quotient        2  [STACK] int 
 18519 ;;  sign            1  [STACK] unsigned char 
 18520 ;;  counter         1  [STACK] unsigned char 
 18521 ;; Return value:  Size  Location     Type
 18522 ;;                  2  [STACK] int 
 18523 ;; Registers used:
 18524 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl
 18525 ;; Tracked objects:
 18526 ;;		On entry : 0/4
 18527 ;;		On exit  : 0/0
 18528 ;;		Unchanged: 0/0
 18529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18534 ;;Total ram usage:        0 bytes
 18535 ;; Hardware stack levels used:    1
 18536 ;; Hardware stack levels required when called:    6
 18537 ;; This function calls:
 18538 ;;		Nothing
 18539 ;; This function is called by:
 18540 ;;		_efgtoa
 18541 ;; This function uses a reentrant model
 18542 ;;
 18543                           
 18544                           	psect	text60
 18545  0169A4                     __ptext60:
 18546                           	opt callstack 0
 18547  0169A4                     ___awdiv:
 18548                           	opt callstack 0
 18549                           
 18550                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 18551  0169A4  52E6               	movf	postinc1,f,c
 18552  0169A6  52E6               	movf	postinc1,f,c
 18553  0169A8  52E6               	movf	postinc1,f,c
 18554  0169AA  52E6               	movf	postinc1,f,c
 18555                           
 18556                           ;stkvar	_sign @ sp[(-4)+2]
 18557                           
 18558                           ;incstack = 0
 18559  0169AC  0EFE               	movlw	-2
 18560  0169AE  6AE3               	clrf	plusw1,c
 18561                           
 18562                           ;stkvar	_divisor @ sp[(-4)+-4]
 18563  0169B0  0EF9               	movlw	-7
 18564  0169B2  AEE3               	btfss	plusw1,7,c
 18565  0169B4  D009               	goto	l6889
 18566                           
 18567                           ;stkvar	_divisor @ sp[(-4)+-4]
 18568                           ;stkvar	_divisor @ sp[(-4)+-4]
 18569  0169B6  0EF8               	movlw	-8
 18570  0169B8  6CE3               	negf	plusw1,c
 18571  0169BA  0EF9               	movlw	-7
 18572  0169BC  1EE3               	comf	plusw1,f,c
 18573  0169BE  B0D8               	btfsc	status,0,c
 18574  0169C0  2AE3               	incf	plusw1,f,c
 18575                           
 18576                           ;stkvar	_sign @ sp[(-4)+2]
 18577  0169C2  0EFE               	movlw	-2
 18578  0169C4  6AE3               	clrf	plusw1,c
 18579  0169C6  2AE3               	incf	plusw1,f,c
 18580  0169C8                     l6889:
 18581                           
 18582                           ;stkvar	_dividend @ sp[(-4)+-2]
 18583  0169C8  0EFB               	movlw	-5
 18584  0169CA  AEE3               	btfss	plusw1,7,c
 18585  0169CC  D008               	goto	l6895
 18586                           
 18587                           ;stkvar	_dividend @ sp[(-4)+-2]
 18588                           ;stkvar	_dividend @ sp[(-4)+-2]
 18589  0169CE  0EFA               	movlw	-6
 18590  0169D0  6CE3               	negf	plusw1,c
 18591  0169D2  0EFB               	movlw	-5
 18592  0169D4  1EE3               	comf	plusw1,f,c
 18593  0169D6  B0D8               	btfsc	status,0,c
 18594  0169D8  2AE3               	incf	plusw1,f,c
 18595                           
 18596                           ;stkvar	_sign @ sp[(-4)+2]
 18597  0169DA  0EFE               	movlw	-2
 18598  0169DC  70E3               	btg	plusw1,0,c
 18599  0169DE                     l6895:
 18600                           
 18601                           ;stkvar	_quotient @ sp[(-4)+0]
 18602  0169DE  0EFC               	movlw	-4
 18603  0169E0  6AE3               	clrf	plusw1,c
 18604  0169E2  0EFD               	movlw	-3
 18605  0169E4  6AE3               	clrf	plusw1,c
 18606                           
 18607                           ;stkvar	_divisor @ sp[(-4)+-4]
 18608  0169E6  0EF8               	movlw	-8
 18609  0169E8  006F FF8C  F035    	movff	plusw1,btemp
 18610  0169EE  0EF9               	movlw	-7
 18611  0169F0  50E3               	movf	plusw1,w,c
 18612  0169F2  1035               	iorwf	btemp^0,w,c
 18613  0169F4  B4D8               	btfsc	status,2,c
 18614  0169F6  D066               	goto	u6160
 18615                           
 18616                           ;stkvar	_counter @ sp[(-4)+3]
 18617  0169F8  0EFF               	movlw	-1
 18618  0169FA  6AE3               	clrf	plusw1,c
 18619  0169FC  D012               	goto	L18
 18620  0169FE                     l6901:
 18621                           
 18622                           ;stkvar	_divisor @ sp[(-4)+-4]
 18623  0169FE  0EF8               	movlw	-8
 18624  016A00  50E3               	movf	plusw1,w,c
 18625  016A02  90D8               	bcf	status,0,c
 18626  016A04  34E8               	rlcf	wreg,w,c
 18627  016A06  6E35               	movwf	btemp^0,c
 18628  016A08  0EF8               	movlw	-8
 18629  016A0A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18630  016A10  0EF9               	movlw	-7
 18631  016A12  50E3               	movf	plusw1,w,c
 18632  016A14  34E8               	rlcf	wreg,w,c
 18633  016A16  6E35               	movwf	btemp^0,c
 18634  016A18  0EF9               	movlw	-7
 18635  016A1A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18636                           
 18637                           ;stkvar	_counter @ sp[(-4)+3]
 18638  016A20  0EFF               	movlw	-1
 18639  016A22                     L18:
 18640  016A22  2AE3               	incf	plusw1,f,c
 18641                           
 18642                           ;stkvar	_divisor @ sp[(-4)+-4]
 18643  016A24  0EF9               	movlw	-7
 18644  016A26  AEE3               	btfss	plusw1,7,c
 18645  016A28  D7EA               	goto	l6901
 18646  016A2A                     u6140:
 18647                           
 18648                           ;stkvar	_quotient @ sp[(-4)+0]
 18649  016A2A  0EFC               	movlw	-4
 18650  016A2C  50E3               	movf	plusw1,w,c
 18651  016A2E  90D8               	bcf	status,0,c
 18652  016A30  34E8               	rlcf	wreg,w,c
 18653  016A32  6E35               	movwf	btemp^0,c
 18654  016A34  0EFC               	movlw	-4
 18655  016A36  0060  F0D7  FFE3   	movff	btemp,plusw1
 18656  016A3C  0EFD               	movlw	-3
 18657  016A3E  50E3               	movf	plusw1,w,c
 18658  016A40  34E8               	rlcf	wreg,w,c
 18659  016A42  6E35               	movwf	btemp^0,c
 18660  016A44  0EFD               	movlw	-3
 18661  016A46  0060  F0D7  FFE3   	movff	btemp,plusw1
 18662                           
 18663                           ;stkvar	_divisor @ sp[(-4)+-4]
 18664  016A4C  0EF8               	movlw	-8
 18665  016A4E  006F FF8C  F03F    	movff	plusw1,btemp+10
 18666  016A54  0EF9               	movlw	-7
 18667  016A56  006F FF8C  F040    	movff	plusw1,btemp+11
 18668                           
 18669                           ;stkvar	_dividend @ sp[(-4)+-2]
 18670  016A5C  0EFA               	movlw	-6
 18671  016A5E  006F FF8C  F03D    	movff	plusw1,btemp+8
 18672  016A64  0EFB               	movlw	-5
 18673  016A66  006F FF8C  F03E    	movff	plusw1,btemp+9
 18674  016A6C  503F               	movf	(btemp+10)^0,w,c
 18675  016A6E  5C3D               	subwf	(btemp+8)^0,w,c
 18676  016A70  5040               	movf	(btemp+11)^0,w,c
 18677  016A72  583E               	subwfb	(btemp+9)^0,w,c
 18678  016A74  A0D8               	btfss	status,0,c
 18679  016A76  D016               	goto	l6915
 18680                           
 18681                           ;stkvar	_divisor @ sp[(-4)+-4]
 18682                           ;stkvar	_dividend @ sp[(-4)+-2]
 18683  016A78  0EFA               	movlw	-6
 18684  016A7A  50E3               	movf	plusw1,w,c
 18685  016A7C  6E35               	movwf	btemp^0,c
 18686  016A7E  0EF8               	movlw	-8
 18687  016A80  50E3               	movf	plusw1,w,c
 18688  016A82  5E35               	subwf	btemp^0,f,c
 18689  016A84  0EFA               	movlw	-6
 18690  016A86  0060  F0D7  FFE3   	movff	btemp,plusw1
 18691  016A8C  0EFB               	movlw	-5
 18692  016A8E  50E3               	movf	plusw1,w,c
 18693  016A90  6E35               	movwf	btemp^0,c
 18694  016A92  0EF9               	movlw	-7
 18695  016A94  50E3               	movf	plusw1,w,c
 18696  016A96  5A35               	subwfb	btemp^0,f,c
 18697  016A98  0EFB               	movlw	-5
 18698  016A9A  0060  F0D7  FFE3   	movff	btemp,plusw1
 18699                           
 18700                           ;stkvar	_quotient @ sp[(-4)+0]
 18701  016AA0  0EFC               	movlw	-4
 18702  016AA2  80E3               	bsf	plusw1,0,c
 18703  016AA4                     l6915:
 18704                           
 18705                           ;stkvar	_divisor @ sp[(-4)+-4]
 18706  016AA4  90D8               	bcf	status,0,c
 18707  016AA6  0EF9               	movlw	-7
 18708  016AA8  32E3               	rrcf	plusw1,f,c
 18709  016AAA  0EF8               	movlw	-8
 18710  016AAC  32E3               	rrcf	plusw1,f,c
 18711                           
 18712                           ;stkvar	_counter @ sp[(-4)+3]
 18713  016AAE  0EFF               	movlw	-1
 18714  016AB0  50E3               	movf	plusw1,w,c
 18715  016AB2  6E35               	movwf	btemp^0,c
 18716  016AB4  0E01               	movlw	1
 18717  016AB6  5E35               	subwf	btemp^0,f,c
 18718  016AB8  0EFF               	movlw	-1
 18719  016ABA  0060  F0D7  FFE3   	movff	btemp,plusw1
 18720  016AC0  A4D8               	btfss	status,2,c
 18721  016AC2  D7B3               	goto	u6140
 18722  016AC4                     u6160:
 18723                           
 18724                           ;stkvar	_sign @ sp[(-4)+2]
 18725  016AC4  0EFE               	movlw	-2
 18726  016AC6  50E3               	movf	plusw1,w,c
 18727  016AC8  B4D8               	btfsc	status,2,c
 18728  016ACA  D006               	goto	l6923
 18729                           
 18730                           ;stkvar	_quotient @ sp[(-4)+0]
 18731                           ;stkvar	_quotient @ sp[(-4)+0]
 18732  016ACC  0EFC               	movlw	-4
 18733  016ACE  6CE3               	negf	plusw1,c
 18734  016AD0  0EFD               	movlw	-3
 18735  016AD2  1EE3               	comf	plusw1,f,c
 18736  016AD4  B0D8               	btfsc	status,0,c
 18737  016AD6  2AE3               	incf	plusw1,f,c
 18738  016AD8                     l6923:
 18739                           
 18740                           ;stkvar	_quotient @ sp[(-4)+0]
 18741  016AD8  0EFC               	movlw	-4
 18742  016ADA  006F FF8C  F035    	movff	plusw1,btemp
 18743  016AE0  0EFD               	movlw	-3
 18744  016AE2  006F FF8C  F036    	movff	plusw1,btemp+1
 18745                           
 18746                           ; ___awdiv: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsi
      +                          ze = 4, vargsize = 0
 18747  016AE8  0EF8               	movlw	248
 18748  016AEA  26E1               	addwf	fsr1l,f,c
 18749  016AEC  0EFF               	movlw	255
 18750  016AEE  22E2               	addwfc	fsr1h,f,c
 18751  016AF0  0012               	return		;funcret
 18752  016AF2                     __end_of___awdiv:
 18753                           	opt callstack 0
 18754                           
 18755 ;; *************** function _dtoa *****************
 18756 ;; Defined at:
 18757 ;;		line 274 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 18758 ;; Parameters:    Size  Location     Type
 18759 ;;  fp              2  [STACK] PTR struct _IO_FILE
 18760 ;;		 -> f(6), NULL(0), 
 18761 ;;  d               8  [STACK] long long 
 18762 ;; Auto vars:     Size  Location     Type
 18763 ;;  n               8  [STACK] long long 
 18764 ;;  i               2  [STACK] int 
 18765 ;;  s               2  [STACK] int 
 18766 ;;  w               2  [STACK] int 
 18767 ;;  p               2  [STACK] int 
 18768 ;; Return value:  Size  Location     Type
 18769 ;;                  2  [STACK] int 
 18770 ;; Registers used:
 18771 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, btemp+16, btemp+17, btemp+18, btemp+19, btemp+20, btemp+21, btemp+22, btemp+23, tblptrl, tblptrh, tblptru, prodl
 18772 ;; Tracked objects:
 18773 ;;		On entry : 0/4
 18774 ;;		On exit  : 0/0
 18775 ;;		Unchanged: 0/0
 18776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 18777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 18781 ;;Total ram usage:        0 bytes
 18782 ;; Hardware stack levels used:    1
 18783 ;; Hardware stack levels required when called:   11
 18784 ;; This function calls:
 18785 ;;		___aodiv
 18786 ;;		___aomod
 18787 ;;		_abs
 18788 ;;		_pad
 18789 ;; This function is called by:
 18790 ;;		_vfpfcnvrt
 18791 ;; This function uses a reentrant model
 18792 ;;
 18793                           
 18794                           	psect	text61
 18795  013C0E                     __ptext61:
 18796                           	opt callstack 0
 18797  013C0E                     _dtoa:
 18798                           	opt callstack 0
 18799                           
 18800                           ; autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsize = 10 
      +                          vargsize = 0, retsize = 0 argfudge = 0
 18801  013C0E  0E12               	movlw	18
 18802  013C10  26E1               	addwf	fsr1l,f,c
 18803  013C12  0E00               	movlw	0
 18804  013C14  22E2               	addwfc	fsr1h,f,c
 18805                           
 18806                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 274: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 275: {;/opt/mic
      +                          rochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 276:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 277:     long long n;;/opt/microchip/xc8/v2
      +                          .10/pic/sources/c99/common/doprnt.c: 280:     n = d;
 18807                           ;stkvar	_d @ sp[(-18)+-10]
 18808                           
 18809                           ;incstack = 0
 18810  013C16  0EE4               	movlw	228
 18811  013C18  24E1               	addwf	fsr1l,w,c
 18812  013C1A  6ED9               	movwf	fsr2l,c
 18813  013C1C  0EFF               	movlw	255
 18814  013C1E  20E2               	addwfc	fsr1h,w,c
 18815  013C20  6EDA               	movwf	fsr2h,c
 18816                           
 18817                           ;stkvar	_n @ sp[(-18)+2]
 18818  013C22  0E08               	movlw	8
 18819  013C24  6E35               	movwf	btemp^0,c
 18820  013C26  0EF0               	movlw	-16
 18821  013C28                     us913999:
 18822  013C28  006F FF7B FFE3     	movff	postinc2,plusw1
 18823  013C2E  28E8               	incf	wreg,w,c
 18824  013C30  2E35               	decfsz	btemp^0,f,c
 18825  013C32  D7FA               	bra	us913999
 18826                           
 18827                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 281:     s = n < 0 ? 1 : 0;
 18828                           ;stkvar	_n @ sp[(-18)+2]
 18829  013C34  0EF7               	movlw	-9
 18830  013C36  AEE3               	btfss	plusw1,7,c
 18831  013C38  D002               	goto	u9140
 18832  013C3A  0E01               	movlw	1
 18833  013C3C  D001               	goto	u9150
 18834  013C3E                     u9140:
 18835  013C3E  0E00               	movlw	0
 18836  013C40                     u9150:
 18837  013C40  6E3F               	movwf	(btemp+10)^0,c
 18838  013C42  6A40               	clrf	(btemp+11)^0,c
 18839                           
 18840                           ;stkvar	_s @ sp[(-18)+12]
 18841  013C44  0EFA               	movlw	-6
 18842  013C46  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18843  013C4C  0EFB               	movlw	-5
 18844  013C4E  0060  F103  FFE3   	movff	btemp+11,plusw1
 18845                           
 18846                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 282:     if (s) {
 18847                           ;stkvar	_s @ sp[(-18)+12]
 18848  013C54  0EFA               	movlw	-6
 18849  013C56  006F FF8C  F035    	movff	plusw1,btemp
 18850  013C5C  0EFB               	movlw	-5
 18851  013C5E  50E3               	movf	plusw1,w,c
 18852  013C60  1035               	iorwf	btemp^0,w,c
 18853  013C62  B4D8               	btfsc	status,2,c
 18854  013C64  D025               	goto	u9170
 18855                           
 18856                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 283:         n = -n;
 18857                           ;stkvar	_n @ sp[(-18)+2]
 18858                           ;stkvar	_n @ sp[(-18)+2]
 18859  013C66  0EF0               	movlw	-16
 18860  013C68  6CE3               	negf	plusw1,c
 18861  013C6A  0EF1               	movlw	-15
 18862  013C6C  1EE3               	comf	plusw1,f,c
 18863  013C6E  0EF2               	movlw	-14
 18864  013C70  1EE3               	comf	plusw1,f,c
 18865  013C72  0EF3               	movlw	-13
 18866  013C74  1EE3               	comf	plusw1,f,c
 18867  013C76  0EF4               	movlw	-12
 18868  013C78  1EE3               	comf	plusw1,f,c
 18869  013C7A  0EF5               	movlw	-11
 18870  013C7C  1EE3               	comf	plusw1,f,c
 18871  013C7E  0EF6               	movlw	-10
 18872  013C80  1EE3               	comf	plusw1,f,c
 18873  013C82  0EF7               	movlw	-9
 18874  013C84  1EE3               	comf	plusw1,f,c
 18875  013C86  E314               	bnc	u9170
 18876  013C88  0EF1               	movlw	-15
 18877  013C8A  2AE3               	incf	plusw1,f,c
 18878  013C8C  E311               	bnc	u9170
 18879  013C8E  0EF2               	movlw	-14
 18880  013C90  2AE3               	incf	plusw1,f,c
 18881  013C92  E30E               	bnc	u9170
 18882  013C94  0EF3               	movlw	-13
 18883  013C96  2AE3               	incf	plusw1,f,c
 18884  013C98  E30B               	bnc	u9170
 18885  013C9A  0EF4               	movlw	-12
 18886  013C9C  2AE3               	incf	plusw1,f,c
 18887  013C9E  E308               	bnc	u9170
 18888  013CA0  0EF5               	movlw	-11
 18889  013CA2  2AE3               	incf	plusw1,f,c
 18890  013CA4  E305               	bnc	u9170
 18891  013CA6  0EF6               	movlw	-10
 18892  013CA8  2AE3               	incf	plusw1,f,c
 18893  013CAA  E302               	bnc	u9170
 18894  013CAC  0EF7               	movlw	-9
 18895  013CAE  2AE3               	incf	plusw1,f,c
 18896  013CB0                     u9170:
 18897                           
 18898                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 287:     if (!(prec < 0)) {
 18899  013CB0  AE21               	btfss	(_prec+1)^0,7,c
 18900                           
 18901                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 288:         flags &= ~(1 << 
      +                          1);
 18902  013CB2  9222               	bcf	_flags^0,1,c
 18903                           
 18904                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 290:     p = (0 < prec) ? pre
      +                          c : 1;
 18905  013CB4  BE21               	btfsc	(_prec+1)^0,7,c
 18906  013CB6  D005               	goto	u9190
 18907  013CB8  5021               	movf	(_prec+1)^0,w,c
 18908  013CBA  E110               	bnz	l9317
 18909  013CBC  0420               	decf	_prec^0,w,c
 18910  013CBE  B0D8               	btfsc	status,0,c
 18911  013CC0  D00D               	goto	l9317
 18912  013CC2                     u9190:
 18913  013CC2  0E01               	movlw	1
 18914  013CC4  6E3F               	movwf	(btemp+10)^0,c
 18915  013CC6  0E00               	movlw	0
 18916  013CC8  6E40               	movwf	(btemp+11)^0,c
 18917                           
 18918                           ;stkvar	_p @ sp[(-18)+16]
 18919  013CCA  0EFE               	movlw	-2
 18920  013CCC  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18921  013CD2  0EFF               	movlw	-1
 18922  013CD4  0060  F103  FFE3   	movff	btemp+11,plusw1
 18923  013CDA  D008               	goto	l1771
 18924  013CDC                     l9317:
 18925                           
 18926                           ;stkvar	_p @ sp[(-18)+16]
 18927  013CDC  0EFE               	movlw	-2
 18928  013CDE  0060  F083  FFE3   	movff	_prec,plusw1
 18929  013CE4  0EFF               	movlw	-1
 18930  013CE6  0060  F087  FFE3   	movff	_prec+1,plusw1
 18931  013CEC                     l1771:
 18932                           
 18933                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 291:     w = width;
 18934                           ;stkvar	_w @ sp[(-18)+14]
 18935  013CEC  0EFC               	movlw	-4
 18936  013CEE  0060  F07B  FFE3   	movff	_width,plusw1
 18937  013CF4  0EFD               	movlw	-3
 18938  013CF6  0060  F07F  FFE3   	movff	_width+1,plusw1
 18939                           
 18940                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 292:     if (s || (flags & (1
      +                           << 2))) {
 18941                           ;stkvar	_s @ sp[(-18)+12]
 18942  013CFC  0EFA               	movlw	-6
 18943  013CFE  006F FF8C  F035    	movff	plusw1,btemp
 18944  013D04  0EFB               	movlw	-5
 18945  013D06  50E3               	movf	plusw1,w,c
 18946  013D08  1035               	iorwf	btemp^0,w,c
 18947  013D0A  A4D8               	btfss	status,2,c
 18948  013D0C  D002               	goto	u9210
 18949  013D0E  A422               	btfss	_flags^0,2,c
 18950  013D10  D00A               	goto	l9325
 18951  013D12                     u9210:
 18952                           
 18953                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 293:         --w;
 18954                           ;stkvar	_w @ sp[(-18)+14]
 18955  013D12  50E1               	movf	fsr1l,w,c
 18956  013D14  0FFC               	addlw	-4
 18957  013D16  6ED9               	movwf	fsr2l,c
 18958  013D18  50E2               	movf	fsr1h,w,c
 18959  013D1A  6EDA               	movwf	fsr2h,c
 18960  013D1C  0EFF               	movlw	255
 18961  013D1E  22DA               	addwfc	fsr2h,f,c
 18962  013D20  06DE               	decf	postinc2,f,c
 18963  013D22  0E00               	movlw	0
 18964  013D24  5ADD               	subwfb	postdec2,f,c
 18965  013D26                     l9325:
 18966                           
 18967                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 297:     i = sizeof(dbuf) - 1
      +                          ;
 18968  013D26  0E4F               	movlw	79
 18969  013D28  6E3F               	movwf	(btemp+10)^0,c
 18970  013D2A  0E00               	movlw	0
 18971  013D2C  6E40               	movwf	(btemp+11)^0,c
 18972                           
 18973                           ;stkvar	_i @ sp[(-18)+10]
 18974  013D2E  0EF8               	movlw	-8
 18975  013D30  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 18976  013D36  0EF9               	movlw	-7
 18977  013D38  0060  F103  FFE3   	movff	btemp+11,plusw1
 18978                           
 18979                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 298:     dbuf[i] = '\0';
 18980  013D3E  0102               	movlb	2	; () banked
 18981  013D40  6BFB               	clrf	(_dbuf+79)& (0+255),b
 18982                           
 18983                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 18984  013D42  D109               	goto	l9339
 18985  013D44                     l9329:
 18986                           
 18987                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 300:         --i;
 18988                           ;stkvar	_i @ sp[(-18)+10]
 18989  013D44  50E1               	movf	fsr1l,w,c
 18990  013D46  0FF8               	addlw	-8
 18991  013D48  6ED9               	movwf	fsr2l,c
 18992  013D4A  50E2               	movf	fsr1h,w,c
 18993  013D4C  6EDA               	movwf	fsr2h,c
 18994  013D4E  0EFF               	movlw	255
 18995  013D50  22DA               	addwfc	fsr2h,f,c
 18996  013D52  06DE               	decf	postinc2,f,c
 18997  013D54  0E00               	movlw	0
 18998  013D56  5ADD               	subwfb	postdec2,f,c
 18999                           
 19000                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 301:         dbuf[i] = '0' + 
      +                          abs(n % 10);
 19001  013D58  0E0A               	movlw	10
 19002  013D5A  6EE6               	movwf	postinc1,c
 19003  013D5C  0E00               	movlw	0
 19004  013D5E  6EE6               	movwf	postinc1,c
 19005  013D60  0E00               	movlw	0
 19006  013D62  6EE6               	movwf	postinc1,c
 19007  013D64  0E00               	movlw	0
 19008  013D66  6EE6               	movwf	postinc1,c
 19009  013D68  0E00               	movlw	0
 19010  013D6A  6EE6               	movwf	postinc1,c
 19011  013D6C  0E00               	movlw	0
 19012  013D6E  6EE6               	movwf	postinc1,c
 19013  013D70  0E00               	movlw	0
 19014  013D72  6EE6               	movwf	postinc1,c
 19015  013D74  0E00               	movlw	0
 19016  013D76  6EE6               	movwf	postinc1,c
 19017                           
 19018                           ;stkvar	_n @ sp[(-26)+2]
 19019  013D78  50E1               	movf	fsr1l,w,c
 19020  013D7A  0FE8               	addlw	-24
 19021  013D7C  6ED9               	movwf	fsr2l,c
 19022  013D7E  50E2               	movf	fsr1h,w,c
 19023  013D80  6EDA               	movwf	fsr2h,c
 19024  013D82  0EFF               	movlw	255
 19025  013D84  22DA               	addwfc	fsr2h,f,c
 19026  013D86  006F FF7B FFE6     	movff	postinc2,postinc1
 19027  013D8C  006F FF7B FFE6     	movff	postinc2,postinc1
 19028  013D92  006F FF7B FFE6     	movff	postinc2,postinc1
 19029  013D98  006F FF7B FFE6     	movff	postinc2,postinc1
 19030  013D9E  006F FF7B FFE6     	movff	postinc2,postinc1
 19031  013DA4  006F FF7B FFE6     	movff	postinc2,postinc1
 19032  013DAA  006F FF7B FFE6     	movff	postinc2,postinc1
 19033  013DB0  006F FF7B FFE6     	movff	postinc2,postinc1
 19034  013DB6  ECC2  F0AC         	call	___aomod	;wreg free
 19035  013DBA  52E5               	movf	postdec1,f,c
 19036  013DBC  006F FF9C  F04C    	movff	indf1,btemp+23
 19037  013DC2  52E5               	movf	postdec1,f,c
 19038  013DC4  006F FF9C  F04B    	movff	indf1,btemp+22
 19039  013DCA  52E5               	movf	postdec1,f,c
 19040  013DCC  006F FF9C  F04A    	movff	indf1,btemp+21
 19041  013DD2  52E5               	movf	postdec1,f,c
 19042  013DD4  006F FF9C  F049    	movff	indf1,btemp+20
 19043  013DDA  52E5               	movf	postdec1,f,c
 19044  013DDC  006F FF9C  F048    	movff	indf1,btemp+19
 19045  013DE2  52E5               	movf	postdec1,f,c
 19046  013DE4  006F FF9C  F047    	movff	indf1,btemp+18
 19047  013DEA  52E5               	movf	postdec1,f,c
 19048  013DEC  006F FF9C  F046    	movff	indf1,btemp+17
 19049  013DF2  52E5               	movf	postdec1,f,c
 19050  013DF4  006F FF9C  F045    	movff	indf1,btemp+16
 19051  013DFA  0EF8               	movlw	248
 19052  013DFC  26E1               	addwf	fsr1l,f,c
 19053  013DFE  0EFF               	movlw	255
 19054  013E00  22E2               	addwfc	fsr1h,f,c
 19055  013E02  0060  F114  F03F   	movff	btemp+16,btemp+10
 19056  013E08  0060  F118  F040   	movff	btemp+17,btemp+11
 19057  013E0E  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 19058  013E14  0060  F103  FFE6   	movff	btemp+11,postinc1
 19059  013E1A  ECCB  F0C1         	call	_abs	;wreg free
 19060  013E1E  0E30               	movlw	48
 19061  013E20  2635               	addwf	btemp^0,f,c
 19062                           
 19063                           ;stkvar	_i @ sp[(-18)+10]
 19064  013E22  0EF8               	movlw	-8
 19065  013E24  006F FF8C  F03F    	movff	plusw1,btemp+10
 19066  013E2A  0EF9               	movlw	-7
 19067  013E2C  006F FF8C  F040    	movff	plusw1,btemp+11
 19068  013E32  0EAC               	movlw	low _dbuf
 19069  013E34  243F               	addwf	(btemp+10)^0,w,c
 19070  013E36  6ED9               	movwf	fsr2l,c
 19071  013E38  0E02               	movlw	high _dbuf
 19072  013E3A  2040               	addwfc	(btemp+11)^0,w,c
 19073  013E3C  6EDA               	movwf	fsr2h,c
 19074  013E3E  0060  F0D7  FFDF   	movff	btemp,indf2
 19075                           
 19076                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 302:         --p;
 19077                           ;stkvar	_p @ sp[(-18)+16]
 19078  013E44  50E1               	movf	fsr1l,w,c
 19079  013E46  0FFE               	addlw	-2
 19080  013E48  6ED9               	movwf	fsr2l,c
 19081  013E4A  50E2               	movf	fsr1h,w,c
 19082  013E4C  6EDA               	movwf	fsr2h,c
 19083  013E4E  0EFF               	movlw	255
 19084  013E50  22DA               	addwfc	fsr2h,f,c
 19085  013E52  06DE               	decf	postinc2,f,c
 19086  013E54  0E00               	movlw	0
 19087  013E56  5ADD               	subwfb	postdec2,f,c
 19088                           
 19089                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 303:         --w;
 19090                           ;stkvar	_w @ sp[(-18)+14]
 19091  013E58  50E1               	movf	fsr1l,w,c
 19092  013E5A  0FFC               	addlw	-4
 19093  013E5C  6ED9               	movwf	fsr2l,c
 19094  013E5E  50E2               	movf	fsr1h,w,c
 19095  013E60  6EDA               	movwf	fsr2h,c
 19096  013E62  0EFF               	movlw	255
 19097  013E64  22DA               	addwfc	fsr2h,f,c
 19098  013E66  06DE               	decf	postinc2,f,c
 19099  013E68  0E00               	movlw	0
 19100  013E6A  5ADD               	subwfb	postdec2,f,c
 19101                           
 19102                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 304:         n = n / 10;
 19103  013E6C  0E0A               	movlw	10
 19104  013E6E  6EE6               	movwf	postinc1,c
 19105  013E70  0E00               	movlw	0
 19106  013E72  6EE6               	movwf	postinc1,c
 19107  013E74  0E00               	movlw	0
 19108  013E76  6EE6               	movwf	postinc1,c
 19109  013E78  0E00               	movlw	0
 19110  013E7A  6EE6               	movwf	postinc1,c
 19111  013E7C  0E00               	movlw	0
 19112  013E7E  6EE6               	movwf	postinc1,c
 19113  013E80  0E00               	movlw	0
 19114  013E82  6EE6               	movwf	postinc1,c
 19115  013E84  0E00               	movlw	0
 19116  013E86  6EE6               	movwf	postinc1,c
 19117  013E88  0E00               	movlw	0
 19118  013E8A  6EE6               	movwf	postinc1,c
 19119                           
 19120                           ;stkvar	_n @ sp[(-26)+2]
 19121  013E8C  50E1               	movf	fsr1l,w,c
 19122  013E8E  0FE8               	addlw	-24
 19123  013E90  6ED9               	movwf	fsr2l,c
 19124  013E92  50E2               	movf	fsr1h,w,c
 19125  013E94  6EDA               	movwf	fsr2h,c
 19126  013E96  0EFF               	movlw	255
 19127  013E98  22DA               	addwfc	fsr2h,f,c
 19128  013E9A  006F FF7B FFE6     	movff	postinc2,postinc1
 19129  013EA0  006F FF7B FFE6     	movff	postinc2,postinc1
 19130  013EA6  006F FF7B FFE6     	movff	postinc2,postinc1
 19131  013EAC  006F FF7B FFE6     	movff	postinc2,postinc1
 19132  013EB2  006F FF7B FFE6     	movff	postinc2,postinc1
 19133  013EB8  006F FF7B FFE6     	movff	postinc2,postinc1
 19134  013EBE  006F FF7B FFE6     	movff	postinc2,postinc1
 19135  013EC4  006F FF7B FFE6     	movff	postinc2,postinc1
 19136  013ECA  EC48  F0AA         	call	___aodiv	;wreg free
 19137  013ECE  52E5               	movf	postdec1,f,c
 19138  013ED0  006F FF9C  F04C    	movff	indf1,btemp+23
 19139  013ED6  52E5               	movf	postdec1,f,c
 19140  013ED8  006F FF9C  F04B    	movff	indf1,btemp+22
 19141  013EDE  52E5               	movf	postdec1,f,c
 19142  013EE0  006F FF9C  F04A    	movff	indf1,btemp+21
 19143  013EE6  52E5               	movf	postdec1,f,c
 19144  013EE8  006F FF9C  F049    	movff	indf1,btemp+20
 19145  013EEE  52E5               	movf	postdec1,f,c
 19146  013EF0  006F FF9C  F048    	movff	indf1,btemp+19
 19147  013EF6  52E5               	movf	postdec1,f,c
 19148  013EF8  006F FF9C  F047    	movff	indf1,btemp+18
 19149  013EFE  52E5               	movf	postdec1,f,c
 19150  013F00  006F FF9C  F046    	movff	indf1,btemp+17
 19151  013F06  52E5               	movf	postdec1,f,c
 19152  013F08  006F FF9C  F045    	movff	indf1,btemp+16
 19153  013F0E  0EF8               	movlw	248
 19154  013F10  26E1               	addwf	fsr1l,f,c
 19155  013F12  0EFF               	movlw	255
 19156  013F14  22E2               	addwfc	fsr1h,f,c
 19157                           
 19158                           ;stkvar	_n @ sp[(-18)+2]
 19159  013F16  0EF0               	movlw	-16
 19160  013F18  0060  F117  FFE3   	movff	btemp+16,plusw1
 19161  013F1E  0EF1               	movlw	-15
 19162  013F20  0060  F11B  FFE3   	movff	btemp+17,plusw1
 19163  013F26  0EF2               	movlw	-14
 19164  013F28  0060  F11F  FFE3   	movff	btemp+18,plusw1
 19165  013F2E  0EF3               	movlw	-13
 19166  013F30  0060  F123  FFE3   	movff	btemp+19,plusw1
 19167  013F36  0EF4               	movlw	-12
 19168  013F38  0060  F127  FFE3   	movff	btemp+20,plusw1
 19169  013F3E  0EF5               	movlw	-11
 19170  013F40  0060  F12B  FFE3   	movff	btemp+21,plusw1
 19171  013F46  0EF6               	movlw	-10
 19172  013F48  0060  F12F  FFE3   	movff	btemp+22,plusw1
 19173  013F4E  0EF7               	movlw	-9
 19174  013F50  0060  F133  FFE3   	movff	btemp+23,plusw1
 19175  013F56                     l9339:
 19176                           
 19177                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 299:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 19178                           ;stkvar	_i @ sp[(-18)+10]
 19179  013F56  0EF9               	movlw	-7
 19180  013F58  BEE3               	btfsc	plusw1,7,c
 19181  013F5A  D036               	goto	u9260
 19182  013F5C  0EF9               	movlw	-7
 19183  013F5E  50E3               	movf	plusw1,w,c
 19184  013F60  E104               	bnz	u9220
 19185  013F62  0EF8               	movlw	-8
 19186  013F64  04E3               	decf	plusw1,w,c
 19187  013F66  A0D8               	btfss	status,0,c
 19188  013F68  D02F               	goto	u9260
 19189  013F6A                     u9220:
 19190                           
 19191                           ;stkvar	_n @ sp[(-18)+2]
 19192  013F6A  0EF0               	movlw	-16
 19193  013F6C  50E3               	movf	plusw1,w,c
 19194  013F6E  E115               	bnz	u9231
 19195  013F70  0EF1               	movlw	-15
 19196  013F72  50E3               	movf	plusw1,w,c
 19197  013F74  E112               	bnz	u9231
 19198  013F76  0EF2               	movlw	-14
 19199  013F78  50E3               	movf	plusw1,w,c
 19200  013F7A  E10F               	bnz	u9231
 19201  013F7C  0EF3               	movlw	-13
 19202  013F7E  50E3               	movf	plusw1,w,c
 19203  013F80  E10C               	bnz	u9231
 19204  013F82  0EF4               	movlw	-12
 19205  013F84  50E3               	movf	plusw1,w,c
 19206  013F86  E109               	bnz	u9231
 19207  013F88  0EF5               	movlw	-11
 19208  013F8A  50E3               	movf	plusw1,w,c
 19209  013F8C  E106               	bnz	u9231
 19210  013F8E  0EF6               	movlw	-10
 19211  013F90  50E3               	movf	plusw1,w,c
 19212  013F92  E103               	bnz	u9231
 19213  013F94  0EF7               	movlw	-9
 19214  013F96  50E3               	movf	plusw1,w,c
 19215  013F98  A4D8               	btfss	status,2,c
 19216  013F9A                     u9231:
 19217  013F9A  D6D4               	goto	l9329
 19218                           
 19219                           ;stkvar	_p @ sp[(-18)+16]
 19220  013F9C  0EFF               	movlw	-1
 19221  013F9E  BEE3               	btfsc	plusw1,7,c
 19222  013FA0  D007               	goto	u9240
 19223  013FA2  0EFF               	movlw	-1
 19224  013FA4  50E3               	movf	plusw1,w,c
 19225  013FA6  E103               	bnz	u9241
 19226  013FA8  0EFE               	movlw	-2
 19227  013FAA  04E3               	decf	plusw1,w,c
 19228  013FAC  B0D8               	btfsc	status,0,c
 19229  013FAE                     u9241:
 19230  013FAE  D6CA               	goto	l9329
 19231  013FB0                     u9240:
 19232                           
 19233                           ;stkvar	_w @ sp[(-18)+14]
 19234  013FB0  0EFD               	movlw	-3
 19235  013FB2  BEE3               	btfsc	plusw1,7,c
 19236  013FB4  D009               	goto	u9260
 19237  013FB6  0EFD               	movlw	-3
 19238  013FB8  50E3               	movf	plusw1,w,c
 19239  013FBA  E104               	bnz	u9250
 19240  013FBC  0EFC               	movlw	-4
 19241  013FBE  04E3               	decf	plusw1,w,c
 19242  013FC0  A0D8               	btfss	status,0,c
 19243  013FC2  D002               	goto	u9260
 19244  013FC4                     u9250:
 19245  013FC4  B222               	btfsc	_flags^0,1,c
 19246  013FC6  D6BE               	goto	l9329
 19247  013FC8                     u9260:
 19248                           
 19249                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 308:     if (s || (flags & (1
      +                           << 2))) {
 19250                           ;stkvar	_s @ sp[(-18)+12]
 19251  013FC8  0EFA               	movlw	-6
 19252  013FCA  006F FF8C  F035    	movff	plusw1,btemp
 19253  013FD0  0EFB               	movlw	-5
 19254  013FD2  50E3               	movf	plusw1,w,c
 19255  013FD4  1035               	iorwf	btemp^0,w,c
 19256  013FD6  A4D8               	btfss	status,2,c
 19257  013FD8  D002               	goto	u9280
 19258  013FDA  A422               	btfss	_flags^0,2,c
 19259  013FDC  D033               	goto	l9363
 19260  013FDE                     u9280:
 19261                           
 19262                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 309:         --i;
 19263                           ;stkvar	_i @ sp[(-18)+10]
 19264  013FDE  50E1               	movf	fsr1l,w,c
 19265  013FE0  0FF8               	addlw	-8
 19266  013FE2  6ED9               	movwf	fsr2l,c
 19267  013FE4  50E2               	movf	fsr1h,w,c
 19268  013FE6  6EDA               	movwf	fsr2h,c
 19269  013FE8  0EFF               	movlw	255
 19270  013FEA  22DA               	addwfc	fsr2h,f,c
 19271  013FEC  06DE               	decf	postinc2,f,c
 19272  013FEE  0E00               	movlw	0
 19273  013FF0  5ADD               	subwfb	postdec2,f,c
 19274                           
 19275                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 310:         dbuf[i] = s ? '-
      +                          ' : '+';
 19276                           ;stkvar	_s @ sp[(-18)+12]
 19277  013FF2  0EFA               	movlw	-6
 19278  013FF4  006F FF8C  F035    	movff	plusw1,btemp
 19279  013FFA  0EFB               	movlw	-5
 19280  013FFC  50E3               	movf	plusw1,w,c
 19281  013FFE  1035               	iorwf	btemp^0,w,c
 19282  014000  A4D8               	btfss	status,2,c
 19283  014002  D002               	goto	l9359
 19284  014004  0E2B               	movlw	43
 19285  014006  D001               	goto	L19
 19286  014008                     l9359:
 19287  014008  0E2D               	movlw	45
 19288  01400A                     L19:
 19289  01400A  6E3F               	movwf	(btemp+10)^0,c
 19290  01400C  0E00               	movlw	0
 19291  01400E  6E40               	movwf	(btemp+11)^0,c
 19292                           
 19293                           ;stkvar	_dtoa$4179 @ sp[(-18)+0]
 19294  014010  0EEE               	movlw	-18
 19295  014012  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 19296  014018  0EEF               	movlw	-17
 19297  01401A  0060  F103  FFE3   	movff	btemp+11,plusw1
 19298                           
 19299                           ;stkvar	_dtoa$4179 @ sp[(-18)+0]
 19300                           ;stkvar	_i @ sp[(-18)+10]
 19301  014020  0EF8               	movlw	-8
 19302  014022  006F FF8C  F03F    	movff	plusw1,btemp+10
 19303  014028  0EF9               	movlw	-7
 19304  01402A  006F FF8C  F040    	movff	plusw1,btemp+11
 19305  014030  0EAC               	movlw	low _dbuf
 19306  014032  243F               	addwf	(btemp+10)^0,w,c
 19307  014034  6ED9               	movwf	fsr2l,c
 19308  014036  0E02               	movlw	high _dbuf
 19309  014038  2040               	addwfc	(btemp+11)^0,w,c
 19310  01403A  6EDA               	movwf	fsr2h,c
 19311  01403C  0EEE               	movlw	-18
 19312  01403E  006F FF8F FFDF     	movff	plusw1,indf2
 19313  014044                     l9363:
 19314                           
 19315                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 314:     return pad(fp, &dbuf
      +                          [i], w);
 19316                           ;stkvar	_w @ sp[(-18)+14]
 19317  014044  0EFC               	movlw	-4
 19318  014046  006F FF8F FFE6     	movff	plusw1,postinc1
 19319  01404C  006F FF8F FFE6     	movff	plusw1,postinc1
 19320                           
 19321                           ;stkvar	_i @ sp[(-20)+10]
 19322  014052  0EAC               	movlw	low _dbuf
 19323  014054  6E3F               	movwf	(btemp+10)^0,c
 19324  014056  0E02               	movlw	high _dbuf
 19325  014058  6E40               	movwf	(btemp+11)^0,c
 19326  01405A  0EF6               	movlw	-10
 19327  01405C  50E3               	movf	plusw1,w,c
 19328  01405E  263F               	addwf	(btemp+10)^0,f,c
 19329  014060  0EF7               	movlw	-9
 19330  014062  50E3               	movf	plusw1,w,c
 19331  014064  2240               	addwfc	(btemp+11)^0,f,c
 19332  014066  0060  F0FF  FFE6   	movff	btemp+10,postinc1
 19333  01406C  0060  F103  FFE6   	movff	btemp+11,postinc1
 19334                           
 19335                           ;stkvar	_fp @ sp[(-22)+-2]
 19336  014072  0EE8               	movlw	-24
 19337  014074  006F FF8F FFE6     	movff	plusw1,postinc1
 19338  01407A  006F FF8F FFE6     	movff	plusw1,postinc1
 19339  014080  ECCE  F0B7         	call	_pad	;wreg free
 19340                           
 19341                           ; _dtoa: autosize = 18, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 10, argsiz
      +                          e = 10, vargsize = 0
 19342  014084  0EE4               	movlw	228
 19343  014086  26E1               	addwf	fsr1l,f,c
 19344  014088  0EFF               	movlw	255
 19345  01408A  22E2               	addwfc	fsr1h,f,c
 19346  01408C  0012               	return		;funcret
 19347  01408E                     __end_of_dtoa:
 19348                           	opt callstack 0
 19349                           
 19350 ;; *************** function _abs *****************
 19351 ;; Defined at:
 19352 ;;		line 1 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/abs.c"
 19353 ;; Parameters:    Size  Location     Type
 19354 ;;  a               2  [STACK] int 
 19355 ;; Auto vars:     Size  Location     Type
 19356 ;;		None
 19357 ;; Return value:  Size  Location     Type
 19358 ;;                  2  [STACK] int 
 19359 ;; Registers used:
 19360 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1
 19361 ;; Tracked objects:
 19362 ;;		On entry : 0/2
 19363 ;;		On exit  : 0/0
 19364 ;;		Unchanged: 0/0
 19365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19370 ;;Total ram usage:        0 bytes
 19371 ;; Hardware stack levels used:    1
 19372 ;; Hardware stack levels required when called:    6
 19373 ;; This function calls:
 19374 ;;		Nothing
 19375 ;; This function is called by:
 19376 ;;		_dtoa
 19377 ;; This function uses a reentrant model
 19378 ;;
 19379                           
 19380                           	psect	text62
 19381  018396                     __ptext62:
 19382                           	opt callstack 0
 19383  018396                     _abs:
 19384                           	opt callstack 17
 19385                           
 19386                           ;stkvar	_a @ sp[(0)+-2]
 19387                           
 19388                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 19389                           ;incstack = 0
 19390  018396  0EFF               	movlw	-1
 19391  018398  BEE3               	btfsc	plusw1,7,c
 19392  01839A  D007               	goto	u5120
 19393  01839C  0EFF               	movlw	-1
 19394  01839E  50E3               	movf	plusw1,w,c
 19395  0183A0  E112               	bnz	l6377
 19396  0183A2  0EFE               	movlw	-2
 19397  0183A4  04E3               	decf	plusw1,w,c
 19398  0183A6  B0D8               	btfsc	status,0,c
 19399  0183A8  D00E               	goto	l6377
 19400  0183AA                     u5120:
 19401                           
 19402                           ;stkvar	_a @ sp[(0)+-2]
 19403  0183AA  0EFE               	movlw	-2
 19404  0183AC  006F FF8C  F035    	movff	plusw1,btemp
 19405  0183B2  1E35               	comf	btemp^0,f,c
 19406  0183B4  0EFF               	movlw	-1
 19407  0183B6  006F FF8C  F036    	movff	plusw1,btemp+1
 19408  0183BC  1E36               	comf	(btemp+1)^0,f,c
 19409  0183BE  2A35               	incf	btemp^0,f,c
 19410  0183C0  B4D8               	btfsc	status,2,c
 19411  0183C2  2A36               	incf	(btemp+1)^0,f,c
 19412  0183C4  D008               	goto	l2697
 19413  0183C6                     l6377:
 19414                           
 19415                           ;stkvar	_a @ sp[(0)+-2]
 19416  0183C6  0EFE               	movlw	-2
 19417  0183C8  006F FF8C  F035    	movff	plusw1,btemp
 19418  0183CE  0EFF               	movlw	-1
 19419  0183D0  006F FF8C  F036    	movff	plusw1,btemp+1
 19420  0183D6                     l2697:
 19421                           
 19422                           ; _abs: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize =
      +                           2, vargsize = 0
 19423  0183D6  52E5               	movf	postdec1,f,c
 19424  0183D8  52E5               	movf	postdec1,f,c
 19425  0183DA  0012               	return		;funcret
 19426  0183DC                     __end_of_abs:
 19427                           	opt callstack 0
 19428                           
 19429 ;; *************** function ___aomod *****************
 19430 ;; Defined at:
 19431 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aomod.c"
 19432 ;; Parameters:    Size  Location     Type
 19433 ;;  dividend        8  [STACK] long long 
 19434 ;;  divisor         8  [STACK] long long 
 19435 ;; Auto vars:     Size  Location     Type
 19436 ;;  sign            1  [STACK] unsigned char 
 19437 ;;  counter         1  [STACK] unsigned char 
 19438 ;; Return value:  Size  Location     Type
 19439 ;;                  8  [STACK] long long 
 19440 ;; Registers used:
 19441 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19442 ;; Tracked objects:
 19443 ;;		On entry : 0/2
 19444 ;;		On exit  : 0/0
 19445 ;;		Unchanged: 0/0
 19446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19451 ;;Total ram usage:        0 bytes
 19452 ;; Hardware stack levels used:    1
 19453 ;; Hardware stack levels required when called:    6
 19454 ;; This function calls:
 19455 ;;		Nothing
 19456 ;; This function is called by:
 19457 ;;		_dtoa
 19458 ;; This function uses a reentrant model
 19459 ;;
 19460                           
 19461                           	psect	text63
 19462  015984                     __ptext63:
 19463                           	opt callstack 0
 19464  015984                     ___aomod:
 19465                           	opt callstack 0
 19466                           
 19467                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 v
      +                          argsize = 0, retsize = 8 argfudge = 0
 19468  015984  52E6               	movf	postinc1,f,c
 19469  015986  52E6               	movf	postinc1,f,c
 19470                           
 19471                           ;stkvar	_sign @ sp[(-2)+0]
 19472                           
 19473                           ;incstack = 0
 19474  015988  0EFE               	movlw	-2
 19475  01598A  6AE3               	clrf	plusw1,c
 19476                           
 19477                           ;stkvar	_dividend @ sp[(-2)+-8]
 19478  01598C  0EFD               	movlw	-3
 19479  01598E  AEE3               	btfss	plusw1,7,c
 19480  015990  D028               	goto	l6535
 19481                           
 19482                           ;stkvar	_dividend @ sp[(-2)+-8]
 19483                           ;stkvar	_dividend @ sp[(-2)+-8]
 19484  015992  0EF6               	movlw	-10
 19485  015994  6CE3               	negf	plusw1,c
 19486  015996  0EF7               	movlw	-9
 19487  015998  1EE3               	comf	plusw1,f,c
 19488  01599A  0EF8               	movlw	-8
 19489  01599C  1EE3               	comf	plusw1,f,c
 19490  01599E  0EF9               	movlw	-7
 19491  0159A0  1EE3               	comf	plusw1,f,c
 19492  0159A2  0EFA               	movlw	-6
 19493  0159A4  1EE3               	comf	plusw1,f,c
 19494  0159A6  0EFB               	movlw	-5
 19495  0159A8  1EE3               	comf	plusw1,f,c
 19496  0159AA  0EFC               	movlw	-4
 19497  0159AC  1EE3               	comf	plusw1,f,c
 19498  0159AE  0EFD               	movlw	-3
 19499  0159B0  1EE3               	comf	plusw1,f,c
 19500  0159B2  E314               	bnc	u5550
 19501  0159B4  0EF7               	movlw	-9
 19502  0159B6  2AE3               	incf	plusw1,f,c
 19503  0159B8  E311               	bnc	u5550
 19504  0159BA  0EF8               	movlw	-8
 19505  0159BC  2AE3               	incf	plusw1,f,c
 19506  0159BE  E30E               	bnc	u5550
 19507  0159C0  0EF9               	movlw	-7
 19508  0159C2  2AE3               	incf	plusw1,f,c
 19509  0159C4  E30B               	bnc	u5550
 19510  0159C6  0EFA               	movlw	-6
 19511  0159C8  2AE3               	incf	plusw1,f,c
 19512  0159CA  E308               	bnc	u5550
 19513  0159CC  0EFB               	movlw	-5
 19514  0159CE  2AE3               	incf	plusw1,f,c
 19515  0159D0  E305               	bnc	u5550
 19516  0159D2  0EFC               	movlw	-4
 19517  0159D4  2AE3               	incf	plusw1,f,c
 19518  0159D6  E302               	bnc	u5550
 19519  0159D8  0EFD               	movlw	-3
 19520  0159DA  2AE3               	incf	plusw1,f,c
 19521  0159DC                     u5550:
 19522                           
 19523                           ;stkvar	_sign @ sp[(-2)+0]
 19524  0159DC  0EFE               	movlw	-2
 19525  0159DE  6AE3               	clrf	plusw1,c
 19526  0159E0  2AE3               	incf	plusw1,f,c
 19527  0159E2                     l6535:
 19528                           
 19529                           ;stkvar	_divisor @ sp[(-2)+-16]
 19530  0159E2  0EF5               	movlw	-11
 19531  0159E4  AEE3               	btfss	plusw1,7,c
 19532  0159E6  D025               	goto	u5570
 19533                           
 19534                           ;stkvar	_divisor @ sp[(-2)+-16]
 19535                           ;stkvar	_divisor @ sp[(-2)+-16]
 19536  0159E8  0EEE               	movlw	-18
 19537  0159EA  6CE3               	negf	plusw1,c
 19538  0159EC  0EEF               	movlw	-17
 19539  0159EE  1EE3               	comf	plusw1,f,c
 19540  0159F0  0EF0               	movlw	-16
 19541  0159F2  1EE3               	comf	plusw1,f,c
 19542  0159F4  0EF1               	movlw	-15
 19543  0159F6  1EE3               	comf	plusw1,f,c
 19544  0159F8  0EF2               	movlw	-14
 19545  0159FA  1EE3               	comf	plusw1,f,c
 19546  0159FC  0EF3               	movlw	-13
 19547  0159FE  1EE3               	comf	plusw1,f,c
 19548  015A00  0EF4               	movlw	-12
 19549  015A02  1EE3               	comf	plusw1,f,c
 19550  015A04  0EF5               	movlw	-11
 19551  015A06  1EE3               	comf	plusw1,f,c
 19552  015A08  E314               	bnc	u5570
 19553  015A0A  0EEF               	movlw	-17
 19554  015A0C  2AE3               	incf	plusw1,f,c
 19555  015A0E  E311               	bnc	u5570
 19556  015A10  0EF0               	movlw	-16
 19557  015A12  2AE3               	incf	plusw1,f,c
 19558  015A14  E30E               	bnc	u5570
 19559  015A16  0EF1               	movlw	-15
 19560  015A18  2AE3               	incf	plusw1,f,c
 19561  015A1A  E30B               	bnc	u5570
 19562  015A1C  0EF2               	movlw	-14
 19563  015A1E  2AE3               	incf	plusw1,f,c
 19564  015A20  E308               	bnc	u5570
 19565  015A22  0EF3               	movlw	-13
 19566  015A24  2AE3               	incf	plusw1,f,c
 19567  015A26  E305               	bnc	u5570
 19568  015A28  0EF4               	movlw	-12
 19569  015A2A  2AE3               	incf	plusw1,f,c
 19570  015A2C  E302               	bnc	u5570
 19571  015A2E  0EF5               	movlw	-11
 19572  015A30  2AE3               	incf	plusw1,f,c
 19573  015A32                     u5570:
 19574                           
 19575                           ;stkvar	_divisor @ sp[(-2)+-16]
 19576  015A32  0EEE               	movlw	-18
 19577  015A34  50E3               	movf	plusw1,w,c
 19578  015A36  E116               	bnz	u5580
 19579  015A38  0EEF               	movlw	-17
 19580  015A3A  50E3               	movf	plusw1,w,c
 19581  015A3C  E113               	bnz	u5580
 19582  015A3E  0EF0               	movlw	-16
 19583  015A40  50E3               	movf	plusw1,w,c
 19584  015A42  E110               	bnz	u5580
 19585  015A44  0EF1               	movlw	-15
 19586  015A46  50E3               	movf	plusw1,w,c
 19587  015A48  E10D               	bnz	u5580
 19588  015A4A  0EF2               	movlw	-14
 19589  015A4C  50E3               	movf	plusw1,w,c
 19590  015A4E  E10A               	bnz	u5580
 19591  015A50  0EF3               	movlw	-13
 19592  015A52  50E3               	movf	plusw1,w,c
 19593  015A54  E107               	bnz	u5580
 19594  015A56  0EF4               	movlw	-12
 19595  015A58  50E3               	movf	plusw1,w,c
 19596  015A5A  E104               	bnz	u5580
 19597  015A5C  0EF5               	movlw	-11
 19598  015A5E  50E3               	movf	plusw1,w,c
 19599  015A60  B4D8               	btfsc	status,2,c
 19600  015A62  D075               	goto	u5610
 19601  015A64                     u5580:
 19602                           
 19603                           ;stkvar	_counter @ sp[(-2)+1]
 19604  015A64  0EFF               	movlw	-1
 19605  015A66  6AE3               	clrf	plusw1,c
 19606  015A68  D012               	goto	L20
 19607  015A6A                     l6543:
 19608                           
 19609                           ;stkvar	_divisor @ sp[(-2)+-16]
 19610  015A6A  90D8               	bcf	status,0,c
 19611  015A6C  0EEE               	movlw	-18
 19612  015A6E  36E3               	rlcf	plusw1,f,c
 19613  015A70  0EEF               	movlw	-17
 19614  015A72  36E3               	rlcf	plusw1,f,c
 19615  015A74  0EF0               	movlw	-16
 19616  015A76  36E3               	rlcf	plusw1,f,c
 19617  015A78  0EF1               	movlw	-15
 19618  015A7A  36E3               	rlcf	plusw1,f,c
 19619  015A7C  0EF2               	movlw	-14
 19620  015A7E  36E3               	rlcf	plusw1,f,c
 19621  015A80  0EF3               	movlw	-13
 19622  015A82  36E3               	rlcf	plusw1,f,c
 19623  015A84  0EF4               	movlw	-12
 19624  015A86  36E3               	rlcf	plusw1,f,c
 19625  015A88  0EF5               	movlw	-11
 19626  015A8A  36E3               	rlcf	plusw1,f,c
 19627                           
 19628                           ;stkvar	_counter @ sp[(-2)+1]
 19629  015A8C  0EFF               	movlw	-1
 19630  015A8E                     L20:
 19631  015A8E  2AE3               	incf	plusw1,f,c
 19632                           
 19633                           ;stkvar	_divisor @ sp[(-2)+-16]
 19634  015A90  0EF5               	movlw	-11
 19635  015A92  AEE3               	btfss	plusw1,7,c
 19636  015A94  D7EA               	goto	l6543
 19637  015A96                     u5590:
 19638                           
 19639                           ;stkvar	_divisor @ sp[(-2)+-16]
 19640                           ;stkvar	_dividend @ sp[(-2)+-8]
 19641  015A96  50E1               	movf	fsr1l,w,c
 19642  015A98  0FF6               	addlw	-10
 19643  015A9A  6ED9               	movwf	fsr2l,c
 19644  015A9C  50E2               	movf	fsr1h,w,c
 19645  015A9E  6EDA               	movwf	fsr2h,c
 19646  015AA0  0EFF               	movlw	255
 19647  015AA2  22DA               	addwfc	fsr2h,f,c
 19648  015AA4  0EEE               	movlw	-18
 19649  015AA6  50E3               	movf	plusw1,w,c
 19650  015AA8  5CDE               	subwf	postinc2,w,c
 19651  015AAA  0EEF               	movlw	-17
 19652  015AAC  50E3               	movf	plusw1,w,c
 19653  015AAE  58DE               	subwfb	postinc2,w,c
 19654  015AB0  0EF0               	movlw	-16
 19655  015AB2  50E3               	movf	plusw1,w,c
 19656  015AB4  58DE               	subwfb	postinc2,w,c
 19657  015AB6  0EF1               	movlw	-15
 19658  015AB8  50E3               	movf	plusw1,w,c
 19659  015ABA  58DE               	subwfb	postinc2,w,c
 19660  015ABC  0EF2               	movlw	-14
 19661  015ABE  50E3               	movf	plusw1,w,c
 19662  015AC0  58DE               	subwfb	postinc2,w,c
 19663  015AC2  0EF3               	movlw	-13
 19664  015AC4  50E3               	movf	plusw1,w,c
 19665  015AC6  58DE               	subwfb	postinc2,w,c
 19666  015AC8  0EF4               	movlw	-12
 19667  015ACA  50E3               	movf	plusw1,w,c
 19668  015ACC  58DE               	subwfb	postinc2,w,c
 19669  015ACE  0EF5               	movlw	-11
 19670  015AD0  50E3               	movf	plusw1,w,c
 19671  015AD2  58DE               	subwfb	postinc2,w,c
 19672  015AD4  A0D8               	btfss	status,0,c
 19673  015AD6  D01F               	goto	l6551
 19674                           
 19675                           ;stkvar	_divisor @ sp[(-2)+-16]
 19676                           ;stkvar	_dividend @ sp[(-2)+-8]
 19677  015AD8  50E1               	movf	fsr1l,w,c
 19678  015ADA  0FF6               	addlw	-10
 19679  015ADC  6ED9               	movwf	fsr2l,c
 19680  015ADE  50E2               	movf	fsr1h,w,c
 19681  015AE0  6EDA               	movwf	fsr2h,c
 19682  015AE2  0EFF               	movlw	255
 19683  015AE4  22DA               	addwfc	fsr2h,f,c
 19684  015AE6  0EEE               	movlw	-18
 19685  015AE8  50E3               	movf	plusw1,w,c
 19686  015AEA  5EDE               	subwf	postinc2,f,c
 19687  015AEC  0EEF               	movlw	-17
 19688  015AEE  50E3               	movf	plusw1,w,c
 19689  015AF0  5ADE               	subwfb	postinc2,f,c
 19690  015AF2  0EF0               	movlw	-16
 19691  015AF4  50E3               	movf	plusw1,w,c
 19692  015AF6  5ADE               	subwfb	postinc2,f,c
 19693  015AF8  0EF1               	movlw	-15
 19694  015AFA  50E3               	movf	plusw1,w,c
 19695  015AFC  5ADE               	subwfb	postinc2,f,c
 19696  015AFE  0EF2               	movlw	-14
 19697  015B00  50E3               	movf	plusw1,w,c
 19698  015B02  5ADE               	subwfb	postinc2,f,c
 19699  015B04  0EF3               	movlw	-13
 19700  015B06  50E3               	movf	plusw1,w,c
 19701  015B08  5ADE               	subwfb	postinc2,f,c
 19702  015B0A  0EF4               	movlw	-12
 19703  015B0C  50E3               	movf	plusw1,w,c
 19704  015B0E  5ADE               	subwfb	postinc2,f,c
 19705  015B10  0EF5               	movlw	-11
 19706  015B12  50E3               	movf	plusw1,w,c
 19707  015B14  5ADE               	subwfb	postinc2,f,c
 19708  015B16                     l6551:
 19709                           
 19710                           ;stkvar	_divisor @ sp[(-2)+-16]
 19711  015B16  90D8               	bcf	status,0,c
 19712  015B18  0EF5               	movlw	-11
 19713  015B1A  32E3               	rrcf	plusw1,f,c
 19714  015B1C  0EF4               	movlw	-12
 19715  015B1E  32E3               	rrcf	plusw1,f,c
 19716  015B20  0EF3               	movlw	-13
 19717  015B22  32E3               	rrcf	plusw1,f,c
 19718  015B24  0EF2               	movlw	-14
 19719  015B26  32E3               	rrcf	plusw1,f,c
 19720  015B28  0EF1               	movlw	-15
 19721  015B2A  32E3               	rrcf	plusw1,f,c
 19722  015B2C  0EF0               	movlw	-16
 19723  015B2E  32E3               	rrcf	plusw1,f,c
 19724  015B30  0EEF               	movlw	-17
 19725  015B32  32E3               	rrcf	plusw1,f,c
 19726  015B34  0EEE               	movlw	-18
 19727  015B36  32E3               	rrcf	plusw1,f,c
 19728                           
 19729                           ;stkvar	_counter @ sp[(-2)+1]
 19730  015B38  0EFF               	movlw	-1
 19731  015B3A  50E3               	movf	plusw1,w,c
 19732  015B3C  6E35               	movwf	btemp^0,c
 19733  015B3E  0E01               	movlw	1
 19734  015B40  5E35               	subwf	btemp^0,f,c
 19735  015B42  0EFF               	movlw	-1
 19736  015B44  0060  F0D7  FFE3   	movff	btemp,plusw1
 19737  015B4A  A4D8               	btfss	status,2,c
 19738  015B4C  D7A4               	goto	u5590
 19739  015B4E                     u5610:
 19740                           
 19741                           ;stkvar	_sign @ sp[(-2)+0]
 19742  015B4E  0EFE               	movlw	-2
 19743  015B50  50E3               	movf	plusw1,w,c
 19744  015B52  B4D8               	btfsc	status,2,c
 19745  015B54  D025               	goto	u5630
 19746                           
 19747                           ;stkvar	_dividend @ sp[(-2)+-8]
 19748                           ;stkvar	_dividend @ sp[(-2)+-8]
 19749  015B56  0EF6               	movlw	-10
 19750  015B58  6CE3               	negf	plusw1,c
 19751  015B5A  0EF7               	movlw	-9
 19752  015B5C  1EE3               	comf	plusw1,f,c
 19753  015B5E  0EF8               	movlw	-8
 19754  015B60  1EE3               	comf	plusw1,f,c
 19755  015B62  0EF9               	movlw	-7
 19756  015B64  1EE3               	comf	plusw1,f,c
 19757  015B66  0EFA               	movlw	-6
 19758  015B68  1EE3               	comf	plusw1,f,c
 19759  015B6A  0EFB               	movlw	-5
 19760  015B6C  1EE3               	comf	plusw1,f,c
 19761  015B6E  0EFC               	movlw	-4
 19762  015B70  1EE3               	comf	plusw1,f,c
 19763  015B72  0EFD               	movlw	-3
 19764  015B74  1EE3               	comf	plusw1,f,c
 19765  015B76  E314               	bnc	u5630
 19766  015B78  0EF7               	movlw	-9
 19767  015B7A  2AE3               	incf	plusw1,f,c
 19768  015B7C  E311               	bnc	u5630
 19769  015B7E  0EF8               	movlw	-8
 19770  015B80  2AE3               	incf	plusw1,f,c
 19771  015B82  E30E               	bnc	u5630
 19772  015B84  0EF9               	movlw	-7
 19773  015B86  2AE3               	incf	plusw1,f,c
 19774  015B88  E30B               	bnc	u5630
 19775  015B8A  0EFA               	movlw	-6
 19776  015B8C  2AE3               	incf	plusw1,f,c
 19777  015B8E  E308               	bnc	u5630
 19778  015B90  0EFB               	movlw	-5
 19779  015B92  2AE3               	incf	plusw1,f,c
 19780  015B94  E305               	bnc	u5630
 19781  015B96  0EFC               	movlw	-4
 19782  015B98  2AE3               	incf	plusw1,f,c
 19783  015B9A  E302               	bnc	u5630
 19784  015B9C  0EFD               	movlw	-3
 19785  015B9E  2AE3               	incf	plusw1,f,c
 19786  015BA0                     u5630:
 19787                           
 19788                           ;stkvar	_dividend @ sp[(-2)+-8]
 19789  015BA0  0EF6               	movlw	246
 19790  015BA2  24E1               	addwf	fsr1l,w,c
 19791  015BA4  6ED9               	movwf	fsr2l,c
 19792  015BA6  0EFF               	movlw	255
 19793  015BA8  20E2               	addwfc	fsr1h,w,c
 19794  015BAA  6EDA               	movwf	fsr2h,c
 19795                           
 19796                           ;stkvar	?___aomod @ sp[(-2)+-8]
 19797  015BAC  0E08               	movlw	8
 19798  015BAE  6E35               	movwf	btemp^0,c
 19799  015BB0  0EF6               	movlw	-10
 19800  015BB2                     us564999:
 19801  015BB2  006F FF7B FFE3     	movff	postinc2,plusw1
 19802  015BB8  28E8               	incf	wreg,w,c
 19803  015BBA  2E35               	decfsz	btemp^0,f,c
 19804  015BBC  D7FA               	bra	us564999
 19805                           
 19806                           ; ___aomod: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, args
      +                          ize = 16, vargsize = 0
 19807  015BBE  52E5               	movf	postdec1,f,c
 19808  015BC0  52E5               	movf	postdec1,f,c
 19809  015BC2  0012               	return		;funcret
 19810  015BC4                     __end_of___aomod:
 19811                           	opt callstack 0
 19812                           
 19813 ;; *************** function ___aodiv *****************
 19814 ;; Defined at:
 19815 ;;		line 9 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/aodiv.c"
 19816 ;; Parameters:    Size  Location     Type
 19817 ;;  dividend        8  [STACK] long long 
 19818 ;;  divisor         8  [STACK] long long 
 19819 ;; Auto vars:     Size  Location     Type
 19820 ;;  quotient        8  [STACK] long long 
 19821 ;;  sign            1  [STACK] unsigned char 
 19822 ;;  counter         1  [STACK] unsigned char 
 19823 ;; Return value:  Size  Location     Type
 19824 ;;                  8  [STACK] long long 
 19825 ;; Registers used:
 19826 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp
 19827 ;; Tracked objects:
 19828 ;;		On entry : 0/2
 19829 ;;		On exit  : 0/0
 19830 ;;		Unchanged: 0/0
 19831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 19832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 19836 ;;Total ram usage:        0 bytes
 19837 ;; Hardware stack levels used:    1
 19838 ;; Hardware stack levels required when called:    6
 19839 ;; This function calls:
 19840 ;;		Nothing
 19841 ;; This function is called by:
 19842 ;;		_dtoa
 19843 ;; This function uses a reentrant model
 19844 ;;
 19845                           
 19846                           	psect	text64
 19847  015490                     __ptext64:
 19848                           	opt callstack 0
 19849  015490                     ___aodiv:
 19850                           	opt callstack 0
 19851                           
 19852                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, argsize = 16 
      +                          vargsize = 0, retsize = 8 argfudge = 0
 19853  015490  0E0A               	movlw	10
 19854  015492  26E1               	addwf	fsr1l,f,c
 19855  015494  0E00               	movlw	0
 19856  015496  22E2               	addwfc	fsr1h,f,c
 19857                           
 19858                           ;stkvar	_sign @ sp[(-10)+8]
 19859                           
 19860                           ;incstack = 0
 19861  015498  0EFE               	movlw	-2
 19862  01549A  6AE3               	clrf	plusw1,c
 19863                           
 19864                           ;stkvar	_divisor @ sp[(-10)+-16]
 19865  01549C  0EED               	movlw	-19
 19866  01549E  AEE3               	btfss	plusw1,7,c
 19867  0154A0  D028               	goto	l6491
 19868                           
 19869                           ;stkvar	_divisor @ sp[(-10)+-16]
 19870                           ;stkvar	_divisor @ sp[(-10)+-16]
 19871  0154A2  0EE6               	movlw	-26
 19872  0154A4  6CE3               	negf	plusw1,c
 19873  0154A6  0EE7               	movlw	-25
 19874  0154A8  1EE3               	comf	plusw1,f,c
 19875  0154AA  0EE8               	movlw	-24
 19876  0154AC  1EE3               	comf	plusw1,f,c
 19877  0154AE  0EE9               	movlw	-23
 19878  0154B0  1EE3               	comf	plusw1,f,c
 19879  0154B2  0EEA               	movlw	-22
 19880  0154B4  1EE3               	comf	plusw1,f,c
 19881  0154B6  0EEB               	movlw	-21
 19882  0154B8  1EE3               	comf	plusw1,f,c
 19883  0154BA  0EEC               	movlw	-20
 19884  0154BC  1EE3               	comf	plusw1,f,c
 19885  0154BE  0EED               	movlw	-19
 19886  0154C0  1EE3               	comf	plusw1,f,c
 19887  0154C2  E314               	bnc	u5430
 19888  0154C4  0EE7               	movlw	-25
 19889  0154C6  2AE3               	incf	plusw1,f,c
 19890  0154C8  E311               	bnc	u5430
 19891  0154CA  0EE8               	movlw	-24
 19892  0154CC  2AE3               	incf	plusw1,f,c
 19893  0154CE  E30E               	bnc	u5430
 19894  0154D0  0EE9               	movlw	-23
 19895  0154D2  2AE3               	incf	plusw1,f,c
 19896  0154D4  E30B               	bnc	u5430
 19897  0154D6  0EEA               	movlw	-22
 19898  0154D8  2AE3               	incf	plusw1,f,c
 19899  0154DA  E308               	bnc	u5430
 19900  0154DC  0EEB               	movlw	-21
 19901  0154DE  2AE3               	incf	plusw1,f,c
 19902  0154E0  E305               	bnc	u5430
 19903  0154E2  0EEC               	movlw	-20
 19904  0154E4  2AE3               	incf	plusw1,f,c
 19905  0154E6  E302               	bnc	u5430
 19906  0154E8  0EED               	movlw	-19
 19907  0154EA  2AE3               	incf	plusw1,f,c
 19908  0154EC                     u5430:
 19909                           
 19910                           ;stkvar	_sign @ sp[(-10)+8]
 19911  0154EC  0EFE               	movlw	-2
 19912  0154EE  6AE3               	clrf	plusw1,c
 19913  0154F0  2AE3               	incf	plusw1,f,c
 19914  0154F2                     l6491:
 19915                           
 19916                           ;stkvar	_dividend @ sp[(-10)+-8]
 19917  0154F2  0EF5               	movlw	-11
 19918  0154F4  AEE3               	btfss	plusw1,7,c
 19919  0154F6  D027               	goto	l6497
 19920                           
 19921                           ;stkvar	_dividend @ sp[(-10)+-8]
 19922                           ;stkvar	_dividend @ sp[(-10)+-8]
 19923  0154F8  0EEE               	movlw	-18
 19924  0154FA  6CE3               	negf	plusw1,c
 19925  0154FC  0EEF               	movlw	-17
 19926  0154FE  1EE3               	comf	plusw1,f,c
 19927  015500  0EF0               	movlw	-16
 19928  015502  1EE3               	comf	plusw1,f,c
 19929  015504  0EF1               	movlw	-15
 19930  015506  1EE3               	comf	plusw1,f,c
 19931  015508  0EF2               	movlw	-14
 19932  01550A  1EE3               	comf	plusw1,f,c
 19933  01550C  0EF3               	movlw	-13
 19934  01550E  1EE3               	comf	plusw1,f,c
 19935  015510  0EF4               	movlw	-12
 19936  015512  1EE3               	comf	plusw1,f,c
 19937  015514  0EF5               	movlw	-11
 19938  015516  1EE3               	comf	plusw1,f,c
 19939  015518  E314               	bnc	u5450
 19940  01551A  0EEF               	movlw	-17
 19941  01551C  2AE3               	incf	plusw1,f,c
 19942  01551E  E311               	bnc	u5450
 19943  015520  0EF0               	movlw	-16
 19944  015522  2AE3               	incf	plusw1,f,c
 19945  015524  E30E               	bnc	u5450
 19946  015526  0EF1               	movlw	-15
 19947  015528  2AE3               	incf	plusw1,f,c
 19948  01552A  E30B               	bnc	u5450
 19949  01552C  0EF2               	movlw	-14
 19950  01552E  2AE3               	incf	plusw1,f,c
 19951  015530  E308               	bnc	u5450
 19952  015532  0EF3               	movlw	-13
 19953  015534  2AE3               	incf	plusw1,f,c
 19954  015536  E305               	bnc	u5450
 19955  015538  0EF4               	movlw	-12
 19956  01553A  2AE3               	incf	plusw1,f,c
 19957  01553C  E302               	bnc	u5450
 19958  01553E  0EF5               	movlw	-11
 19959  015540  2AE3               	incf	plusw1,f,c
 19960  015542                     u5450:
 19961                           
 19962                           ;stkvar	_sign @ sp[(-10)+8]
 19963  015542  0EFE               	movlw	-2
 19964  015544  70E3               	btg	plusw1,0,c
 19965  015546                     l6497:
 19966                           
 19967                           ;stkvar	_quotient @ sp[(-10)+0]
 19968  015546  0E07               	movlw	7
 19969  015548  6E35               	movwf	btemp^0,c
 19970  01554A  0EF6               	movlw	-10
 19971  01554C                     u5461:
 19972  01554C  6AE3               	clrf	plusw1,c
 19973  01554E  2AE8               	incf	wreg,f,c
 19974  015550  0635               	decf	btemp^0,f,c
 19975  015552  E2FC               	bc	u5461
 19976                           
 19977                           ;stkvar	_divisor @ sp[(-10)+-16]
 19978  015554  0EE6               	movlw	-26
 19979  015556  50E3               	movf	plusw1,w,c
 19980  015558  E116               	bnz	u5470
 19981  01555A  0EE7               	movlw	-25
 19982  01555C  50E3               	movf	plusw1,w,c
 19983  01555E  E113               	bnz	u5470
 19984  015560  0EE8               	movlw	-24
 19985  015562  50E3               	movf	plusw1,w,c
 19986  015564  E110               	bnz	u5470
 19987  015566  0EE9               	movlw	-23
 19988  015568  50E3               	movf	plusw1,w,c
 19989  01556A  E10D               	bnz	u5470
 19990  01556C  0EEA               	movlw	-22
 19991  01556E  50E3               	movf	plusw1,w,c
 19992  015570  E10A               	bnz	u5470
 19993  015572  0EEB               	movlw	-21
 19994  015574  50E3               	movf	plusw1,w,c
 19995  015576  E107               	bnz	u5470
 19996  015578  0EEC               	movlw	-20
 19997  01557A  50E3               	movf	plusw1,w,c
 19998  01557C  E104               	bnz	u5470
 19999  01557E  0EED               	movlw	-19
 20000  015580  50E3               	movf	plusw1,w,c
 20001  015582  B4D8               	btfsc	status,2,c
 20002  015584  D088               	goto	u5500
 20003  015586                     u5470:
 20004                           
 20005                           ;stkvar	_counter @ sp[(-10)+9]
 20006  015586  0EFF               	movlw	-1
 20007  015588  6AE3               	clrf	plusw1,c
 20008  01558A  D012               	goto	L21
 20009  01558C                     l6503:
 20010                           
 20011                           ;stkvar	_divisor @ sp[(-10)+-16]
 20012  01558C  90D8               	bcf	status,0,c
 20013  01558E  0EE6               	movlw	-26
 20014  015590  36E3               	rlcf	plusw1,f,c
 20015  015592  0EE7               	movlw	-25
 20016  015594  36E3               	rlcf	plusw1,f,c
 20017  015596  0EE8               	movlw	-24
 20018  015598  36E3               	rlcf	plusw1,f,c
 20019  01559A  0EE9               	movlw	-23
 20020  01559C  36E3               	rlcf	plusw1,f,c
 20021  01559E  0EEA               	movlw	-22
 20022  0155A0  36E3               	rlcf	plusw1,f,c
 20023  0155A2  0EEB               	movlw	-21
 20024  0155A4  36E3               	rlcf	plusw1,f,c
 20025  0155A6  0EEC               	movlw	-20
 20026  0155A8  36E3               	rlcf	plusw1,f,c
 20027  0155AA  0EED               	movlw	-19
 20028  0155AC  36E3               	rlcf	plusw1,f,c
 20029                           
 20030                           ;stkvar	_counter @ sp[(-10)+9]
 20031  0155AE  0EFF               	movlw	-1
 20032  0155B0                     L21:
 20033  0155B0  2AE3               	incf	plusw1,f,c
 20034                           
 20035                           ;stkvar	_divisor @ sp[(-10)+-16]
 20036  0155B2  0EED               	movlw	-19
 20037  0155B4  AEE3               	btfss	plusw1,7,c
 20038  0155B6  D7EA               	goto	l6503
 20039  0155B8                     u5480:
 20040                           
 20041                           ;stkvar	_quotient @ sp[(-10)+0]
 20042  0155B8  90D8               	bcf	status,0,c
 20043  0155BA  0EF6               	movlw	-10
 20044  0155BC  36E3               	rlcf	plusw1,f,c
 20045  0155BE  0EF7               	movlw	-9
 20046  0155C0  36E3               	rlcf	plusw1,f,c
 20047  0155C2  0EF8               	movlw	-8
 20048  0155C4  36E3               	rlcf	plusw1,f,c
 20049  0155C6  0EF9               	movlw	-7
 20050  0155C8  36E3               	rlcf	plusw1,f,c
 20051  0155CA  0EFA               	movlw	-6
 20052  0155CC  36E3               	rlcf	plusw1,f,c
 20053  0155CE  0EFB               	movlw	-5
 20054  0155D0  36E3               	rlcf	plusw1,f,c
 20055  0155D2  0EFC               	movlw	-4
 20056  0155D4  36E3               	rlcf	plusw1,f,c
 20057  0155D6  0EFD               	movlw	-3
 20058  0155D8  36E3               	rlcf	plusw1,f,c
 20059                           
 20060                           ;stkvar	_divisor @ sp[(-10)+-16]
 20061                           ;stkvar	_dividend @ sp[(-10)+-8]
 20062  0155DA  50E1               	movf	fsr1l,w,c
 20063  0155DC  0FEE               	addlw	-18
 20064  0155DE  6ED9               	movwf	fsr2l,c
 20065  0155E0  50E2               	movf	fsr1h,w,c
 20066  0155E2  6EDA               	movwf	fsr2h,c
 20067  0155E4  0EFF               	movlw	255
 20068  0155E6  22DA               	addwfc	fsr2h,f,c
 20069  0155E8  0EE6               	movlw	-26
 20070  0155EA  50E3               	movf	plusw1,w,c
 20071  0155EC  5CDE               	subwf	postinc2,w,c
 20072  0155EE  0EE7               	movlw	-25
 20073  0155F0  50E3               	movf	plusw1,w,c
 20074  0155F2  58DE               	subwfb	postinc2,w,c
 20075  0155F4  0EE8               	movlw	-24
 20076  0155F6  50E3               	movf	plusw1,w,c
 20077  0155F8  58DE               	subwfb	postinc2,w,c
 20078  0155FA  0EE9               	movlw	-23
 20079  0155FC  50E3               	movf	plusw1,w,c
 20080  0155FE  58DE               	subwfb	postinc2,w,c
 20081  015600  0EEA               	movlw	-22
 20082  015602  50E3               	movf	plusw1,w,c
 20083  015604  58DE               	subwfb	postinc2,w,c
 20084  015606  0EEB               	movlw	-21
 20085  015608  50E3               	movf	plusw1,w,c
 20086  01560A  58DE               	subwfb	postinc2,w,c
 20087  01560C  0EEC               	movlw	-20
 20088  01560E  50E3               	movf	plusw1,w,c
 20089  015610  58DE               	subwfb	postinc2,w,c
 20090  015612  0EED               	movlw	-19
 20091  015614  50E3               	movf	plusw1,w,c
 20092  015616  58DE               	subwfb	postinc2,w,c
 20093  015618  A0D8               	btfss	status,0,c
 20094  01561A  D021               	goto	l6515
 20095                           
 20096                           ;stkvar	_divisor @ sp[(-10)+-16]
 20097                           ;stkvar	_dividend @ sp[(-10)+-8]
 20098  01561C  50E1               	movf	fsr1l,w,c
 20099  01561E  0FEE               	addlw	-18
 20100  015620  6ED9               	movwf	fsr2l,c
 20101  015622  50E2               	movf	fsr1h,w,c
 20102  015624  6EDA               	movwf	fsr2h,c
 20103  015626  0EFF               	movlw	255
 20104  015628  22DA               	addwfc	fsr2h,f,c
 20105  01562A  0EE6               	movlw	-26
 20106  01562C  50E3               	movf	plusw1,w,c
 20107  01562E  5EDE               	subwf	postinc2,f,c
 20108  015630  0EE7               	movlw	-25
 20109  015632  50E3               	movf	plusw1,w,c
 20110  015634  5ADE               	subwfb	postinc2,f,c
 20111  015636  0EE8               	movlw	-24
 20112  015638  50E3               	movf	plusw1,w,c
 20113  01563A  5ADE               	subwfb	postinc2,f,c
 20114  01563C  0EE9               	movlw	-23
 20115  01563E  50E3               	movf	plusw1,w,c
 20116  015640  5ADE               	subwfb	postinc2,f,c
 20117  015642  0EEA               	movlw	-22
 20118  015644  50E3               	movf	plusw1,w,c
 20119  015646  5ADE               	subwfb	postinc2,f,c
 20120  015648  0EEB               	movlw	-21
 20121  01564A  50E3               	movf	plusw1,w,c
 20122  01564C  5ADE               	subwfb	postinc2,f,c
 20123  01564E  0EEC               	movlw	-20
 20124  015650  50E3               	movf	plusw1,w,c
 20125  015652  5ADE               	subwfb	postinc2,f,c
 20126  015654  0EED               	movlw	-19
 20127  015656  50E3               	movf	plusw1,w,c
 20128  015658  5ADE               	subwfb	postinc2,f,c
 20129                           
 20130                           ;stkvar	_quotient @ sp[(-10)+0]
 20131  01565A  0EF6               	movlw	-10
 20132  01565C  80E3               	bsf	plusw1,0,c
 20133  01565E                     l6515:
 20134                           
 20135                           ;stkvar	_divisor @ sp[(-10)+-16]
 20136  01565E  90D8               	bcf	status,0,c
 20137  015660  0EED               	movlw	-19
 20138  015662  32E3               	rrcf	plusw1,f,c
 20139  015664  0EEC               	movlw	-20
 20140  015666  32E3               	rrcf	plusw1,f,c
 20141  015668  0EEB               	movlw	-21
 20142  01566A  32E3               	rrcf	plusw1,f,c
 20143  01566C  0EEA               	movlw	-22
 20144  01566E  32E3               	rrcf	plusw1,f,c
 20145  015670  0EE9               	movlw	-23
 20146  015672  32E3               	rrcf	plusw1,f,c
 20147  015674  0EE8               	movlw	-24
 20148  015676  32E3               	rrcf	plusw1,f,c
 20149  015678  0EE7               	movlw	-25
 20150  01567A  32E3               	rrcf	plusw1,f,c
 20151  01567C  0EE6               	movlw	-26
 20152  01567E  32E3               	rrcf	plusw1,f,c
 20153                           
 20154                           ;stkvar	_counter @ sp[(-10)+9]
 20155  015680  0EFF               	movlw	-1
 20156  015682  50E3               	movf	plusw1,w,c
 20157  015684  6E35               	movwf	btemp^0,c
 20158  015686  0E01               	movlw	1
 20159  015688  5E35               	subwf	btemp^0,f,c
 20160  01568A  0EFF               	movlw	-1
 20161  01568C  0060  F0D7  FFE3   	movff	btemp,plusw1
 20162  015692  A4D8               	btfss	status,2,c
 20163  015694  D791               	goto	u5480
 20164  015696                     u5500:
 20165                           
 20166                           ;stkvar	_sign @ sp[(-10)+8]
 20167  015696  0EFE               	movlw	-2
 20168  015698  50E3               	movf	plusw1,w,c
 20169  01569A  B4D8               	btfsc	status,2,c
 20170  01569C  D025               	goto	u5520
 20171                           
 20172                           ;stkvar	_quotient @ sp[(-10)+0]
 20173                           ;stkvar	_quotient @ sp[(-10)+0]
 20174  01569E  0EF6               	movlw	-10
 20175  0156A0  6CE3               	negf	plusw1,c
 20176  0156A2  0EF7               	movlw	-9
 20177  0156A4  1EE3               	comf	plusw1,f,c
 20178  0156A6  0EF8               	movlw	-8
 20179  0156A8  1EE3               	comf	plusw1,f,c
 20180  0156AA  0EF9               	movlw	-7
 20181  0156AC  1EE3               	comf	plusw1,f,c
 20182  0156AE  0EFA               	movlw	-6
 20183  0156B0  1EE3               	comf	plusw1,f,c
 20184  0156B2  0EFB               	movlw	-5
 20185  0156B4  1EE3               	comf	plusw1,f,c
 20186  0156B6  0EFC               	movlw	-4
 20187  0156B8  1EE3               	comf	plusw1,f,c
 20188  0156BA  0EFD               	movlw	-3
 20189  0156BC  1EE3               	comf	plusw1,f,c
 20190  0156BE  E314               	bnc	u5520
 20191  0156C0  0EF7               	movlw	-9
 20192  0156C2  2AE3               	incf	plusw1,f,c
 20193  0156C4  E311               	bnc	u5520
 20194  0156C6  0EF8               	movlw	-8
 20195  0156C8  2AE3               	incf	plusw1,f,c
 20196  0156CA  E30E               	bnc	u5520
 20197  0156CC  0EF9               	movlw	-7
 20198  0156CE  2AE3               	incf	plusw1,f,c
 20199  0156D0  E30B               	bnc	u5520
 20200  0156D2  0EFA               	movlw	-6
 20201  0156D4  2AE3               	incf	plusw1,f,c
 20202  0156D6  E308               	bnc	u5520
 20203  0156D8  0EFB               	movlw	-5
 20204  0156DA  2AE3               	incf	plusw1,f,c
 20205  0156DC  E305               	bnc	u5520
 20206  0156DE  0EFC               	movlw	-4
 20207  0156E0  2AE3               	incf	plusw1,f,c
 20208  0156E2  E302               	bnc	u5520
 20209  0156E4  0EFD               	movlw	-3
 20210  0156E6  2AE3               	incf	plusw1,f,c
 20211  0156E8                     u5520:
 20212                           
 20213                           ;stkvar	_quotient @ sp[(-10)+0]
 20214  0156E8  0EF6               	movlw	246
 20215  0156EA  24E1               	addwf	fsr1l,w,c
 20216  0156EC  6ED9               	movwf	fsr2l,c
 20217  0156EE  0EFF               	movlw	255
 20218  0156F0  20E2               	addwfc	fsr1h,w,c
 20219  0156F2  6EDA               	movwf	fsr2h,c
 20220                           
 20221                           ;stkvar	?___aodiv @ sp[(-10)+-8]
 20222  0156F4  0E08               	movlw	8
 20223  0156F6  6E35               	movwf	btemp^0,c
 20224  0156F8  0EEE               	movlw	-18
 20225  0156FA                     us553999:
 20226  0156FA  006F FF7B FFE3     	movff	postinc2,plusw1
 20227  015700  28E8               	incf	wreg,w,c
 20228  015702  2E35               	decfsz	btemp^0,f,c
 20229  015704  D7FA               	bra	us553999
 20230                           
 20231                           ; ___aodiv: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 16, arg
      +                          size = 16, vargsize = 0
 20232  015706  0EF6               	movlw	246
 20233  015708  26E1               	addwf	fsr1l,f,c
 20234  01570A  0EFF               	movlw	255
 20235  01570C  22E2               	addwfc	fsr1h,f,c
 20236  01570E  0012               	return		;funcret
 20237  015710                     __end_of___aodiv:
 20238                           	opt callstack 0
 20239                           
 20240 ;; *************** function _ctoa *****************
 20241 ;; Defined at:
 20242 ;;		line 259 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20243 ;; Parameters:    Size  Location     Type
 20244 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20245 ;;		 -> f(6), NULL(0), 
 20246 ;;  c               1  [STACK] unsigned char 
 20247 ;; Auto vars:     Size  Location     Type
 20248 ;;  w               2  [STACK] int 
 20249 ;;  l               2    0        int 
 20250 ;; Return value:  Size  Location     Type
 20251 ;;                  2  [STACK] int 
 20252 ;; Registers used:
 20253 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20254 ;; Tracked objects:
 20255 ;;		On entry : 0/4
 20256 ;;		On exit  : 0/0
 20257 ;;		Unchanged: 0/0
 20258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20263 ;;Total ram usage:        0 bytes
 20264 ;; Hardware stack levels used:    1
 20265 ;; Hardware stack levels required when called:   11
 20266 ;; This function calls:
 20267 ;;		_pad
 20268 ;; This function is called by:
 20269 ;;		_vfpfcnvrt
 20270 ;; This function uses a reentrant model
 20271 ;;
 20272                           
 20273                           	psect	text65
 20274  017BBA                     __ptext65:
 20275                           	opt callstack 0
 20276  017BBA                     _ctoa:
 20277                           	opt callstack 0
 20278                           
 20279                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20280  017BBA  52E6               	movf	postinc1,f,c
 20281  017BBC  52E6               	movf	postinc1,f,c
 20282                           
 20283                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 259: static int ctoa(FILE *fp
      +                          , char c);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 260: {;/opt/microchi
      +                          p/xc8/v2.10/pic/sources/c99/common/doprnt.c: 261:     int l, w;;/opt/microchip/xc8/v2.10
      +                          /pic/sources/c99/common/doprnt.c: 264:     w = width ? width - 1 : width;
 20284                           
 20285                           ;incstack = 0
 20286  017BBE  501E               	movf	_width^0,w,c
 20287  017BC0  101F               	iorwf	(_width+1)^0,w,c
 20288  017BC2  A4D8               	btfss	status,2,c
 20289  017BC4  D009               	goto	l9291
 20290                           
 20291                           ;stkvar	_w @ sp[(-2)+0]
 20292  017BC6  0EFE               	movlw	-2
 20293  017BC8  0060  F07B  FFE3   	movff	_width,plusw1
 20294  017BCE  0EFF               	movlw	-1
 20295  017BD0  0060  F07F  FFE3   	movff	_width+1,plusw1
 20296  017BD6  D016               	goto	l9293
 20297  017BD8                     l9291:
 20298  017BD8  0EFF               	movlw	255
 20299  017BDA  6E3F               	movwf	(btemp+10)^0,c
 20300  017BDC  0EFF               	movlw	255
 20301  017BDE  6E40               	movwf	(btemp+11)^0,c
 20302  017BE0  0060  F078  F03D   	movff	_width,btemp+8
 20303  017BE6  0060  F07C  F03E   	movff	_width+1,btemp+9
 20304  017BEC  503F               	movf	(btemp+10)^0,w,c
 20305  017BEE  263D               	addwf	(btemp+8)^0,f,c
 20306  017BF0  5040               	movf	(btemp+11)^0,w,c
 20307  017BF2  223E               	addwfc	(btemp+9)^0,f,c
 20308                           
 20309                           ;stkvar	_w @ sp[(-2)+0]
 20310  017BF4  0EFE               	movlw	-2
 20311  017BF6  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 20312  017BFC  0EFF               	movlw	-1
 20313  017BFE  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 20314  017C04                     l9293:
 20315                           
 20316                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 267:     dbuf[0] = c;
 20317                           ;stkvar	_c @ sp[(-2)+-3]
 20318  017C04  0EFB               	movlw	-5
 20319  017C06  006F FF8C  F2AC    	movff	plusw1,_dbuf
 20320                           
 20321                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 268:     dbuf[1] = '\0';
 20322  017C0C  0102               	movlb	2	; () banked
 20323  017C0E  6BAD               	clrf	(_dbuf+1)& (0+255),b
 20324                           
 20325                           ; BSR set to: 2
 20326                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 269:     return pad(fp, &dbuf
      +                          [0], w);
 20327                           ;stkvar	_w @ sp[(-2)+0]
 20328  017C10  0EFE               	movlw	-2
 20329  017C12  006F FF8F FFE6     	movff	plusw1,postinc1
 20330  017C18  006F FF8F FFE6     	movff	plusw1,postinc1
 20331  017C1E  0EAC               	movlw	low _dbuf
 20332  017C20  6EE6               	movwf	postinc1,c
 20333  017C22  0E02               	movlw	high _dbuf
 20334  017C24  6EE6               	movwf	postinc1,c
 20335                           
 20336                           ;stkvar	_fp @ sp[(-6)+-2]
 20337  017C26  0EF8               	movlw	-8
 20338  017C28  006F FF8F FFE6     	movff	plusw1,postinc1
 20339  017C2E  006F FF8F FFE6     	movff	plusw1,postinc1
 20340  017C34  ECCE  F0B7         	call	_pad	;wreg free
 20341                           
 20342                           ; _ctoa: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize 
      +                          = 3, vargsize = 0
 20343  017C38  0EFB               	movlw	251
 20344  017C3A  26E1               	addwf	fsr1l,f,c
 20345  017C3C  0EFF               	movlw	255
 20346  017C3E  22E2               	addwfc	fsr1h,f,c
 20347  017C40  0012               	return		;funcret
 20348  017C42                     __end_of_ctoa:
 20349                           	opt callstack 0
 20350                           
 20351 ;; *************** function _pad *****************
 20352 ;; Defined at:
 20353 ;;		line 72 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c"
 20354 ;; Parameters:    Size  Location     Type
 20355 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20356 ;;		 -> f(6), NULL(0), 
 20357 ;;  buf             2  [STACK] PTR unsigned char 
 20358 ;;		 -> dbuf(80), 
 20359 ;;  p               2  [STACK] int 
 20360 ;; Auto vars:     Size  Location     Type
 20361 ;;  w               2  [STACK] int 
 20362 ;;  i               2  [STACK] int 
 20363 ;; Return value:  Size  Location     Type
 20364 ;;                  2  [STACK] int 
 20365 ;; Registers used:
 20366 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btem
      +p+11, tblptrl, tblptrh, tblptru, prodl
 20367 ;; Tracked objects:
 20368 ;;		On entry : 0/2
 20369 ;;		On exit  : 0/0
 20370 ;;		Unchanged: 0/0
 20371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20375 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20376 ;;Total ram usage:        0 bytes
 20377 ;; Hardware stack levels used:    1
 20378 ;; Hardware stack levels required when called:   10
 20379 ;; This function calls:
 20380 ;;		_fputc
 20381 ;;		_fputs
 20382 ;;		_strlen
 20383 ;; This function is called by:
 20384 ;;		_ctoa
 20385 ;;		_dtoa
 20386 ;;		_efgtoa
 20387 ;;		_utoa
 20388 ;;		_xtoa
 20389 ;; This function uses a reentrant model
 20390 ;;
 20391                           
 20392                           	psect	text66
 20393  016F9C                     __ptext66:
 20394                           	opt callstack 0
 20395  016F9C                     _pad:
 20396                           	opt callstack 0
 20397                           
 20398                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize = 6 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20399  016F9C  52E6               	movf	postinc1,f,c
 20400  016F9E  52E6               	movf	postinc1,f,c
 20401  016FA0  52E6               	movf	postinc1,f,c
 20402  016FA2  52E6               	movf	postinc1,f,c
 20403                           
 20404                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.10/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
 20405                           
 20406                           ;incstack = 0
 20407  016FA4  A022               	btfss	_flags^0,0,c
 20408  016FA6  D010               	goto	l9265
 20409                           
 20410                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
 20411                           ;stkvar	_fp @ sp[(-4)+-2]
 20412  016FA8  0EFA               	movlw	-6
 20413  016FAA  006F FF8F FFE6     	movff	plusw1,postinc1
 20414  016FB0  006F FF8F FFE6     	movff	plusw1,postinc1
 20415                           
 20416                           ;stkvar	_buf @ sp[(-6)+-4]
 20417  016FB6  0EF6               	movlw	-10
 20418  016FB8  006F FF8F FFE6     	movff	plusw1,postinc1
 20419  016FBE  006F FF8F FFE6     	movff	plusw1,postinc1
 20420  016FC4  EC00  F0BD         	call	_fputs	;wreg free
 20421  016FC8                     l9265:
 20422                           
 20423                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
 20424                           ;stkvar	_p @ sp[(-4)+-6]
 20425  016FC8  0EF7               	movlw	-9
 20426  016FCA  BEE3               	btfsc	plusw1,7,c
 20427  016FCC  D011               	goto	l9269
 20428                           
 20429                           ;stkvar	_p @ sp[(-4)+-6]
 20430                           ;stkvar	_w @ sp[(-4)+0]
 20431  016FCE  0EF6               	movlw	-10
 20432  016FD0  006F FF8C  F035    	movff	plusw1,btemp
 20433  016FD6  0EFC               	movlw	-4
 20434  016FD8  0060  F0D7  FFE3   	movff	btemp,plusw1
 20435  016FDE  0EF7               	movlw	-9
 20436  016FE0  006F FF8C  F035    	movff	plusw1,btemp
 20437  016FE6  0EFD               	movlw	-3
 20438  016FE8  0060  F0D7  FFE3   	movff	btemp,plusw1
 20439  016FEE  D004               	goto	l1751
 20440  016FF0                     l9269:
 20441                           
 20442                           ;stkvar	_w @ sp[(-4)+0]
 20443  016FF0  0EFC               	movlw	-4
 20444  016FF2  6AE3               	clrf	plusw1,c
 20445  016FF4  0EFD               	movlw	-3
 20446  016FF6  6AE3               	clrf	plusw1,c
 20447  016FF8                     l1751:
 20448                           
 20449                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 83:     i = 0;
 20450                           ;stkvar	_i @ sp[(-4)+2]
 20451  016FF8  0EFE               	movlw	-2
 20452  016FFA  6AE3               	clrf	plusw1,c
 20453  016FFC  0EFF               	movlw	-1
 20454  016FFE  6AE3               	clrf	plusw1,c
 20455                           
 20456                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20457  017000  D01E               	goto	l9275
 20458  017002                     l9271:
 20459                           
 20460                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
 20461                           ;stkvar	_fp @ sp[(-4)+-2]
 20462  017002  0EFA               	movlw	-6
 20463  017004  006F FF8F FFE6     	movff	plusw1,postinc1
 20464  01700A  006F FF8F FFE6     	movff	plusw1,postinc1
 20465  017010  0E20               	movlw	32
 20466  017012  6EE6               	movwf	postinc1,c
 20467  017014  0E00               	movlw	0
 20468  017016  6EE6               	movwf	postinc1,c
 20469  017018  ECB0  F0B6         	call	_fputc	;wreg free
 20470                           
 20471                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 86:         ++i;
 20472                           ;stkvar	_i @ sp[(-4)+2]
 20473  01701C  0EFE               	movlw	-2
 20474  01701E  50E3               	movf	plusw1,w,c
 20475  017020  0F01               	addlw	1
 20476  017022  6E35               	movwf	btemp^0,c
 20477  017024  0EFE               	movlw	-2
 20478  017026  0060  F0D7  FFE3   	movff	btemp,plusw1
 20479  01702C  6A35               	clrf	btemp^0,c
 20480  01702E  0EFF               	movlw	-1
 20481  017030  50E3               	movf	plusw1,w,c
 20482  017032  2035               	addwfc	btemp^0,w,c
 20483  017034  6E35               	movwf	btemp^0,c
 20484  017036  0EFF               	movlw	-1
 20485  017038  0060  F0D7  FFE3   	movff	btemp,plusw1
 20486  01703E                     l9275:
 20487                           
 20488                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
 20489                           ;stkvar	_w @ sp[(-4)+0]
 20490                           ;stkvar	_i @ sp[(-4)+2]
 20491  01703E  50E1               	movf	fsr1l,w,c
 20492  017040  0FFE               	addlw	-2
 20493  017042  6ED9               	movwf	fsr2l,c
 20494  017044  50E2               	movf	fsr1h,w,c
 20495  017046  6EDA               	movwf	fsr2h,c
 20496  017048  0EFF               	movlw	255
 20497  01704A  22DA               	addwfc	fsr2h,f,c
 20498  01704C  0EFC               	movlw	-4
 20499  01704E  50E3               	movf	plusw1,w,c
 20500  017050  5CDE               	subwf	postinc2,w,c
 20501  017052  50DE               	movf	postinc2,w,c
 20502  017054  0A80               	xorlw	128
 20503  017056  6E35               	movwf	btemp^0,c
 20504  017058  0EFD               	movlw	-3
 20505  01705A  50E3               	movf	plusw1,w,c
 20506  01705C  0A80               	xorlw	128
 20507  01705E  5835               	subwfb	btemp^0,w,c
 20508  017060  A0D8               	btfss	status,0,c
 20509  017062  D7CF               	goto	l9271
 20510                           
 20511                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
 20512  017064  B022               	btfsc	_flags^0,0,c
 20513  017066  D010               	goto	l9279
 20514                           
 20515                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
 20516                           ;stkvar	_fp @ sp[(-4)+-2]
 20517  017068  0EFA               	movlw	-6
 20518  01706A  006F FF8F FFE6     	movff	plusw1,postinc1
 20519  017070  006F FF8F FFE6     	movff	plusw1,postinc1
 20520                           
 20521                           ;stkvar	_buf @ sp[(-6)+-4]
 20522  017076  0EF6               	movlw	-10
 20523  017078  006F FF8F FFE6     	movff	plusw1,postinc1
 20524  01707E  006F FF8F FFE6     	movff	plusw1,postinc1
 20525  017084  EC00  F0BD         	call	_fputs	;wreg free
 20526  017088                     l9279:
 20527                           
 20528                           ;/opt/microchip/xc8/v2.10/pic/sources/c99/common/doprnt.c: 94:     return strlen(buf) + 
      +                          w;
 20529                           ;stkvar	_w @ sp[(-4)+0]
 20530                           ;stkvar	_buf @ sp[(-4)+-4]
 20531  017088  0EF8               	movlw	-8
 20532  01708A  006F FF8F FFE6     	movff	plusw1,postinc1
 20533  017090  006F FF8F FFE6     	movff	plusw1,postinc1
 20534  017096  EC62  F0BC         	call	_strlen	;wreg free
 20535  01709A  0EFC               	movlw	-4
 20536  01709C  50E3               	movf	plusw1,w,c
 20537  01709E  2635               	addwf	btemp^0,f,c
 20538  0170A0  0EFD               	movlw	-3
 20539  0170A2  50E3               	movf	plusw1,w,c
 20540  0170A4  2236               	addwfc	(btemp+1)^0,f,c
 20541                           
 20542                           ; _pad: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 6, argsize =
      +                           6, vargsize = 0
 20543  0170A6  0EF6               	movlw	246
 20544  0170A8  26E1               	addwf	fsr1l,f,c
 20545  0170AA  0EFF               	movlw	255
 20546  0170AC  22E2               	addwfc	fsr1h,f,c
 20547  0170AE  0012               	return		;funcret
 20548  0170B0                     __end_of_pad:
 20549                           	opt callstack 0
 20550                           
 20551 ;; *************** function _strlen *****************
 20552 ;; Defined at:
 20553 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/strlen.c"
 20554 ;; Parameters:    Size  Location     Type
 20555 ;;  s               2  [STACK] PTR const unsigned char 
 20556 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20557 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20558 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20559 ;; Auto vars:     Size  Location     Type
 20560 ;;  a               2  [STACK] PTR const unsigned char 
 20561 ;;		 -> ?_printf(2), ?_sprintf(2), nuls(7), dbuf(80), 
 20562 ;;		 -> STR_16(9), STR_15(12), D.lcd(216), D(218), 
 20563 ;;		 -> T(144), STR_7(5), STR_3(5), V(187), 
 20564 ;; Return value:  Size  Location     Type
 20565 ;;                  2  [STACK] unsigned int 
 20566 ;; Registers used:
 20567 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11, tblptrl, tblptrh, tblptru
 20568 ;; Tracked objects:
 20569 ;;		On entry : 0/0
 20570 ;;		On exit  : 0/0
 20571 ;;		Unchanged: 0/0
 20572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20573 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20576 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20577 ;;Total ram usage:        0 bytes
 20578 ;; Hardware stack levels used:    1
 20579 ;; Hardware stack levels required when called:    6
 20580 ;; This function calls:
 20581 ;;		Nothing
 20582 ;; This function is called by:
 20583 ;;		_eaDogM_WriteString
 20584 ;;		_pad
 20585 ;;		_stoa
 20586 ;; This function uses a reentrant model
 20587 ;;
 20588                           
 20589                           	psect	text67
 20590  0178C4                     __ptext67:
 20591                           	opt callstack 0
 20592  0178C4                     _strlen:
 20593                           	opt callstack 0
 20594                           
 20595                           ; autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20596  0178C4  52E6               	movf	postinc1,f,c
 20597  0178C6  52E6               	movf	postinc1,f,c
 20598                           
 20599                           ;stkvar	_s @ sp[(-2)+-2]
 20600                           
 20601                           ;incstack = 0
 20602  0178C8  0EFC               	movlw	-4
 20603  0178CA  006F FF8C  F03F    	movff	plusw1,btemp+10
 20604  0178D0  0EFD               	movlw	-3
 20605  0178D2  006F FF8C  F040    	movff	plusw1,btemp+11
 20606                           
 20607                           ;stkvar	_a @ sp[(-2)+0]
 20608  0178D8  0EFF               	movlw	-1
 20609  0178DA  0060  F103  FFE3   	movff	btemp+11,plusw1
 20610  0178E0  0EFE               	movlw	-2
 20611  0178E2  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 20612  0178E8  D011               	goto	l6109
 20613  0178EA                     l6107:
 20614                           
 20615                           ;stkvar	_s @ sp[(-2)+-2]
 20616  0178EA  0EFC               	movlw	-4
 20617  0178EC  50E3               	movf	plusw1,w,c
 20618  0178EE  0F01               	addlw	1
 20619  0178F0  6E35               	movwf	btemp^0,c
 20620  0178F2  0EFC               	movlw	-4
 20621  0178F4  0060  F0D7  FFE3   	movff	btemp,plusw1
 20622  0178FA  6A35               	clrf	btemp^0,c
 20623  0178FC  0EFD               	movlw	-3
 20624  0178FE  50E3               	movf	plusw1,w,c
 20625  017900  2035               	addwfc	btemp^0,w,c
 20626  017902  6E35               	movwf	btemp^0,c
 20627  017904  0EFD               	movlw	-3
 20628  017906  0060  F0D7  FFE3   	movff	btemp,plusw1
 20629  01790C                     l6109:
 20630                           
 20631                           ;stkvar	_s @ sp[(-2)+-2]
 20632  01790C  0EFC               	movlw	-4
 20633  01790E  006F FF8F FFF6     	movff	plusw1,tblptrl
 20634  017914  0EFD               	movlw	-3
 20635  017916  006F FF8F FFF7     	movff	plusw1,tblptrh
 20636  01791C  0E00               	movlw	low (__mediumconst shr (0+16))
 20637  01791E  6EF8               	movwf	tblptru,c
 20638  017920  0E1F               	movlw	(high __ramtop+-1)
 20639  017922  64F7               	cpfsgt	tblptrh,c
 20640  017924  D003               	bra	u4597
 20641  017926  0008               	tblrd		*
 20642  017928  50F5               	movf	tablat,w,c
 20643  01792A  D007               	bra	u4590
 20644  01792C                     u4597:
 20645  01792C  006F FFDB FFE9     	movff	tblptrl,fsr0l
 20646  017932  006F FFDF FFEA     	movff	tblptrh,fsr0h
 20647  017938  50EF               	movf	indf0,w,c
 20648  01793A                     u4590:
 20649  01793A  0900               	iorlw	0
 20650  01793C  A4D8               	btfss	status,2,c
 20651  01793E  D7D5               	goto	l6107
 20652                           
 20653                           ;stkvar	_a @ sp[(-2)+0]
 20654                           ;stkvar	_s @ sp[(-2)+-2]
 20655  017940  0EFC               	movlw	-4
 20656  017942  006F FF8C  F035    	movff	plusw1,btemp
 20657  017948  0EFD               	movlw	-3
 20658  01794A  006F FF8C  F036    	movff	plusw1,btemp+1
 20659  017950  0EFE               	movlw	-2
 20660  017952  50E3               	movf	plusw1,w,c
 20661  017954  5E35               	subwf	btemp^0,f,c
 20662  017956  0EFF               	movlw	-1
 20663  017958  50E3               	movf	plusw1,w,c
 20664  01795A  5A36               	subwfb	(btemp+1)^0,f,c
 20665                           
 20666                           ; _strlen: autosize = 2, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsiz
      +                          e = 2, vargsize = 0
 20667  01795C  52E5               	movf	postdec1,f,c
 20668  01795E  52E5               	movf	postdec1,f,c
 20669  017960  52E5               	movf	postdec1,f,c
 20670  017962  52E5               	movf	postdec1,f,c
 20671  017964  0012               	return		;funcret
 20672  017966                     __end_of_strlen:
 20673                           	opt callstack 0
 20674                           
 20675 ;; *************** function _fputs *****************
 20676 ;; Defined at:
 20677 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputs.c"
 20678 ;; Parameters:    Size  Location     Type
 20679 ;;  s               2  [STACK] PTR const unsigned char 
 20680 ;;		 -> dbuf(80), 
 20681 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20682 ;;		 -> f(6), NULL(0), 
 20683 ;; Auto vars:     Size  Location     Type
 20684 ;;  i               2  [STACK] int 
 20685 ;;  c               1  [STACK] unsigned char 
 20686 ;; Return value:  Size  Location     Type
 20687 ;;                  2  [STACK] int 
 20688 ;; Registers used:
 20689 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20690 ;; Tracked objects:
 20691 ;;		On entry : 0/2
 20692 ;;		On exit  : 0/0
 20693 ;;		Unchanged: 0/0
 20694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20699 ;;Total ram usage:        0 bytes
 20700 ;; Hardware stack levels used:    1
 20701 ;; Hardware stack levels required when called:    9
 20702 ;; This function calls:
 20703 ;;		_fputc
 20704 ;; This function is called by:
 20705 ;;		_pad
 20706 ;; This function uses a reentrant model
 20707 ;;
 20708                           
 20709                           	psect	text68
 20710  017A00                     __ptext68:
 20711                           	opt callstack 0
 20712  017A00                     _fputs:
 20713                           	opt callstack 0
 20714                           
 20715                           ; autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20716  017A00  52E6               	movf	postinc1,f,c
 20717  017A02  52E6               	movf	postinc1,f,c
 20718  017A04  52E6               	movf	postinc1,f,c
 20719                           
 20720                           ;stkvar	_i @ sp[(-3)+0]
 20721                           
 20722                           ;incstack = 0
 20723  017A06  0EFD               	movlw	-3
 20724  017A08  6AE3               	clrf	plusw1,c
 20725  017A0A  0EFE               	movlw	-2
 20726  017A0C  6AE3               	clrf	plusw1,c
 20727  017A0E  D01F               	goto	l9259
 20728  017A10                     l9255:
 20729                           
 20730                           ;stkvar	_fp @ sp[(-3)+-4]
 20731  017A10  0EF9               	movlw	-7
 20732  017A12  006F FF8F FFE6     	movff	plusw1,postinc1
 20733  017A18  006F FF8F FFE6     	movff	plusw1,postinc1
 20734                           
 20735                           ;stkvar	_c @ sp[(-5)+2]
 20736  017A1E  0EFD               	movlw	-3
 20737  017A20  50E3               	movf	plusw1,w,c
 20738  017A22  6EE6               	movwf	postinc1,c
 20739  017A24  0E00               	movlw	0
 20740  017A26  6EE6               	movwf	postinc1,c
 20741  017A28  ECB0  F0B6         	call	_fputc	;wreg free
 20742                           
 20743                           ;stkvar	_i @ sp[(-3)+0]
 20744  017A2C  0EFD               	movlw	-3
 20745  017A2E  50E3               	movf	plusw1,w,c
 20746  017A30  0F01               	addlw	1
 20747  017A32  6E35               	movwf	btemp^0,c
 20748  017A34  0EFD               	movlw	-3
 20749  017A36  0060  F0D7  FFE3   	movff	btemp,plusw1
 20750  017A3C  6A35               	clrf	btemp^0,c
 20751  017A3E  0EFE               	movlw	-2
 20752  017A40  50E3               	movf	plusw1,w,c
 20753  017A42  2035               	addwfc	btemp^0,w,c
 20754  017A44  6E35               	movwf	btemp^0,c
 20755  017A46  0EFE               	movlw	-2
 20756  017A48  0060  F0D7  FFE3   	movff	btemp,plusw1
 20757  017A4E                     l9259:
 20758                           
 20759                           ;stkvar	_i @ sp[(-3)+0]
 20760  017A4E  0EFD               	movlw	-3
 20761  017A50  006F FF8C  F03F    	movff	plusw1,btemp+10
 20762  017A56  0EFE               	movlw	-2
 20763  017A58  006F FF8C  F040    	movff	plusw1,btemp+11
 20764                           
 20765                           ;stkvar	_s @ sp[(-3)+-2]
 20766  017A5E  0EFB               	movlw	-5
 20767  017A60  006F FF8C  F03D    	movff	plusw1,btemp+8
 20768  017A66  0EFC               	movlw	-4
 20769  017A68  006F FF8C  F03E    	movff	plusw1,btemp+9
 20770  017A6E  503F               	movf	(btemp+10)^0,w,c
 20771  017A70  243D               	addwf	(btemp+8)^0,w,c
 20772  017A72  6ED9               	movwf	fsr2l,c
 20773  017A74  5040               	movf	(btemp+11)^0,w,c
 20774  017A76  203E               	addwfc	(btemp+9)^0,w,c
 20775  017A78  6EDA               	movwf	fsr2h,c
 20776  017A7A  50DF               	movf	indf2,w,c
 20777  017A7C  6E40               	movwf	(btemp+11)^0,c
 20778                           
 20779                           ;stkvar	_c @ sp[(-3)+2]
 20780  017A7E  0EFF               	movlw	-1
 20781  017A80  0060  F103  FFE3   	movff	btemp+11,plusw1
 20782  017A86  0EFF               	movlw	-1
 20783  017A88  50E3               	movf	plusw1,w,c
 20784  017A8A  A4D8               	btfss	status,2,c
 20785  017A8C  D7C1               	goto	l9255
 20786                           
 20787                           ; _fputs: autosize = 3, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20788  017A8E  0EF9               	movlw	249
 20789  017A90  26E1               	addwf	fsr1l,f,c
 20790  017A92  0EFF               	movlw	255
 20791  017A94  22E2               	addwfc	fsr1h,f,c
 20792  017A96  0012               	return		;funcret
 20793  017A98                     __end_of_fputs:
 20794                           	opt callstack 0
 20795                           
 20796 ;; *************** function _fputc *****************
 20797 ;; Defined at:
 20798 ;;		line 8 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/nf_fputc.c"
 20799 ;; Parameters:    Size  Location     Type
 20800 ;;  c               2  [STACK] int 
 20801 ;;  fp              2  [STACK] PTR struct _IO_FILE
 20802 ;;		 -> f(6), NULL(0), 
 20803 ;; Auto vars:     Size  Location     Type
 20804 ;;		None
 20805 ;; Return value:  Size  Location     Type
 20806 ;;                  2  [STACK] int 
 20807 ;; Registers used:
 20808 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, pro
      +dl
 20809 ;; Tracked objects:
 20810 ;;		On entry : 0/4
 20811 ;;		On exit  : 0/0
 20812 ;;		Unchanged: 0/0
 20813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20818 ;;Total ram usage:        0 bytes
 20819 ;; Hardware stack levels used:    1
 20820 ;; Hardware stack levels required when called:    8
 20821 ;; This function calls:
 20822 ;;		_putch
 20823 ;; This function is called by:
 20824 ;;		_pad
 20825 ;;		_stoa
 20826 ;;		_vfpfcnvrt
 20827 ;;		_fputs
 20828 ;; This function uses a reentrant model
 20829 ;;
 20830                           
 20831                           	psect	text69
 20832  016D60                     __ptext69:
 20833                           	opt callstack 0
 20834  016D60                     _fputc:
 20835                           	opt callstack 13
 20836                           
 20837                           ;stkvar	_fp @ sp[(0)+-4]
 20838                           
 20839                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize = 4 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 20840                           ;incstack = 0
 20841  016D60  0EFC               	movlw	-4
 20842  016D62  006F FF8C  F035    	movff	plusw1,btemp
 20843  016D68  0EFD               	movlw	-3
 20844  016D6A  50E3               	movf	plusw1,w,c
 20845  016D6C  1035               	iorwf	btemp^0,w,c
 20846  016D6E  B4D8               	btfsc	status,2,c
 20847  016D70  D009               	goto	u9020
 20848                           
 20849                           ;stkvar	_fp @ sp[(0)+-4]
 20850  016D72  0EFC               	movlw	-4
 20851  016D74  006F FF8C  F035    	movff	plusw1,btemp
 20852  016D7A  0EFD               	movlw	-3
 20853  016D7C  50E3               	movf	plusw1,w,c
 20854  016D7E  1035               	iorwf	btemp^0,w,c
 20855  016D80  A4D8               	btfss	status,2,c
 20856  016D82  D006               	goto	l9243
 20857  016D84                     u9020:
 20858                           
 20859                           ;stkvar	_c @ sp[(0)+-2]
 20860  016D84  0EFE               	movlw	-2
 20861  016D86  50E3               	movf	plusw1,w,c
 20862  016D88  6EE6               	movwf	postinc1,c
 20863  016D8A  EC70  F0C6         	call	_putch	;wreg free
 20864  016D8E  D075               	goto	l2792
 20865  016D90                     l9243:
 20866                           
 20867                           ;stkvar	_fp @ sp[(0)+-4]
 20868  016D90  0EFC               	movlw	-4
 20869  016D92  006F FF8C  F03F    	movff	plusw1,btemp+10
 20870  016D98  0EFD               	movlw	-3
 20871  016D9A  006F FF8C  F040    	movff	plusw1,btemp+11
 20872  016DA0  0E04               	movlw	4
 20873  016DA2  243F               	addwf	(btemp+10)^0,w,c
 20874  016DA4  6ED9               	movwf	fsr2l,c
 20875  016DA6  0E00               	movlw	0
 20876  016DA8  2040               	addwfc	(btemp+11)^0,w,c
 20877  016DAA  6EDA               	movwf	fsr2h,c
 20878  016DAC  50DE               	movf	postinc2,w,c
 20879  016DAE  10DE               	iorwf	postinc2,w,c
 20880  016DB0  B4D8               	btfsc	status,2,c
 20881  016DB2  D026               	goto	u9040
 20882                           
 20883                           ;stkvar	_fp @ sp[(0)+-4]
 20884  016DB4  0EFC               	movlw	-4
 20885  016DB6  006F FF8C  F03F    	movff	plusw1,btemp+10
 20886  016DBC  0EFD               	movlw	-3
 20887  016DBE  006F FF8C  F040    	movff	plusw1,btemp+11
 20888  016DC4  0E04               	movlw	4
 20889  016DC6  243F               	addwf	(btemp+10)^0,w,c
 20890  016DC8  6ED9               	movwf	fsr2l,c
 20891  016DCA  0E00               	movlw	0
 20892  016DCC  2040               	addwfc	(btemp+11)^0,w,c
 20893  016DCE  6EDA               	movwf	fsr2h,c
 20894                           
 20895                           ;stkvar	_fp @ sp[(0)+-4]
 20896  016DD0  0EFC               	movlw	-4
 20897  016DD2  006F FF8C  F03F    	movff	plusw1,btemp+10
 20898  016DD8  0EFD               	movlw	-3
 20899  016DDA  006F FF8C  F040    	movff	plusw1,btemp+11
 20900  016DE0  0E02               	movlw	2
 20901  016DE2  243F               	addwf	(btemp+10)^0,w,c
 20902  016DE4  6EE9               	movwf	fsr0l,c
 20903  016DE6  0E00               	movlw	0
 20904  016DE8  2040               	addwfc	(btemp+11)^0,w,c
 20905  016DEA  6EEA               	movwf	fsr0h,c
 20906  016DEC  50DE               	movf	postinc2,w,c
 20907  016DEE  5CEE               	subwf	postinc0,w,c
 20908  016DF0  50EE               	movf	postinc0,w,c
 20909  016DF2  0A80               	xorlw	128
 20910  016DF4  6E35               	movwf	btemp^0,c
 20911  016DF6  50DE               	movf	postinc2,w,c
 20912  016DF8  0A80               	xorlw	128
 20913  016DFA  5835               	subwfb	btemp^0,w,c
 20914  016DFC  B0D8               	btfsc	status,0,c
 20915  016DFE  D03D               	goto	l2792
 20916  016E00                     u9040:
 20917                           
 20918                           ;stkvar	_c @ sp[(0)+-2]
 20919                           ;stkvar	_fp @ sp[(0)+-4]
 20920  016E00  0EFC               	movlw	-4
 20921  016E02  006F FF8C  F03F    	movff	plusw1,btemp+10
 20922  016E08  0EFD               	movlw	-3
 20923  016E0A  006F FF8C  F040    	movff	plusw1,btemp+11
 20924  016E10  0E02               	movlw	2
 20925  016E12  243F               	addwf	(btemp+10)^0,w,c
 20926  016E14  6ED9               	movwf	fsr2l,c
 20927  016E16  0E00               	movlw	0
 20928  016E18  2040               	addwfc	(btemp+11)^0,w,c
 20929  016E1A  6EDA               	movwf	fsr2h,c
 20930  016E1C  006F FF78  F03F    	movff	postinc2,btemp+10
 20931  016E22  006F FF74  F040    	movff	postdec2,btemp+11
 20932                           
 20933                           ;stkvar	_fp @ sp[(0)+-4]
 20934  016E28  0EFC               	movlw	-4
 20935  016E2A  006F FF8F FFD9     	movff	plusw1,fsr2l
 20936  016E30  0EFD               	movlw	-3
 20937  016E32  006F FF8F FFDA     	movff	plusw1,fsr2h
 20938  016E38  006F FF78  F03D    	movff	postinc2,btemp+8
 20939  016E3E  006F FF74  F03E    	movff	postdec2,btemp+9
 20940  016E44  503F               	movf	(btemp+10)^0,w,c
 20941  016E46  243D               	addwf	(btemp+8)^0,w,c
 20942  016E48  6ED9               	movwf	fsr2l,c
 20943  016E4A  5040               	movf	(btemp+11)^0,w,c
 20944  016E4C  203E               	addwfc	(btemp+9)^0,w,c
 20945  016E4E  6EDA               	movwf	fsr2h,c
 20946  016E50  0EFE               	movlw	-2
 20947  016E52  006F FF8F FFDF     	movff	plusw1,indf2
 20948                           
 20949                           ;stkvar	_fp @ sp[(0)+-4]
 20950  016E58  0EFC               	movlw	-4
 20951  016E5A  006F FF8C  F03F    	movff	plusw1,btemp+10
 20952  016E60  0EFD               	movlw	-3
 20953  016E62  006F FF8C  F040    	movff	plusw1,btemp+11
 20954  016E68  0E02               	movlw	2
 20955  016E6A  243F               	addwf	(btemp+10)^0,w,c
 20956  016E6C  6ED9               	movwf	fsr2l,c
 20957  016E6E  0E00               	movlw	0
 20958  016E70  2040               	addwfc	(btemp+11)^0,w,c
 20959  016E72  6EDA               	movwf	fsr2h,c
 20960  016E74  2ADE               	incf	postinc2,f,c
 20961  016E76  0E00               	movlw	0
 20962  016E78  22DD               	addwfc	postdec2,f,c
 20963  016E7A                     l2792:
 20964                           
 20965                           ; _fputc: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 4, argsize
      +                           = 4, vargsize = 0
 20966  016E7A  52E5               	movf	postdec1,f,c
 20967  016E7C  52E5               	movf	postdec1,f,c
 20968  016E7E  52E5               	movf	postdec1,f,c
 20969  016E80  52E5               	movf	postdec1,f,c
 20970  016E82  0012               	return		;funcret
 20971  016E84                     __end_of_fputc:
 20972                           	opt callstack 0
 20973                           
 20974 ;; *************** function _putch *****************
 20975 ;; Defined at:
 20976 ;;		line 155 in file "eadog.c"
 20977 ;; Parameters:    Size  Location     Type
 20978 ;;  c               1  [STACK] unsigned char 
 20979 ;; Auto vars:     Size  Location     Type
 20980 ;;		None
 20981 ;; Return value:  Size  Location     Type
 20982 ;;                  1  [STACK] void 
 20983 ;; Registers used:
 20984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 20985 ;; Tracked objects:
 20986 ;;		On entry : 0/4
 20987 ;;		On exit  : 0/0
 20988 ;;		Unchanged: 0/0
 20989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 20990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 20994 ;;Total ram usage:        0 bytes
 20995 ;; Hardware stack levels used:    1
 20996 ;; Hardware stack levels required when called:    7
 20997 ;; This function calls:
 20998 ;;		_ringBufS_put_dma
 20999 ;; This function is called by:
 21000 ;;		_fputc
 21001 ;; This function uses a reentrant model
 21002 ;;
 21003                           
 21004                           	psect	text70
 21005  018CE0                     __ptext70:
 21006                           	opt callstack 0
 21007  018CE0                     _putch:
 21008                           	opt callstack 13
 21009                           
 21010                           ;eadog.c: 155: void putch(char c);eadog.c: 156: {;eadog.c: 157:  ringBufS_put_dma(spi_li
      +                          nk.tx1a, c);
 21011                           ;stkvar	_c @ sp[(0)+-1]
 21012                           
 21013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21014                           ;incstack = 0
 21015  018CE0  0EFF               	movlw	-1
 21016  018CE2  50E3               	movf	plusw1,w,c
 21017  018CE4  6EE6               	movwf	postinc1,c
 21018  018CE6  0060  F1FB  FFE6   	movff	_spi_link+6,postinc1
 21019  018CEC  0060  F1FF  FFE6   	movff	_spi_link+7,postinc1
 21020  018CF2  EC66  F0BB         	call	_ringBufS_put_dma	;wreg free
 21021                           
 21022                           ; _putch: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize
      +                           = 1, vargsize = 0
 21023  018CF6  52E5               	movf	postdec1,f,c
 21024  018CF8  0012               	return		;funcret
 21025  018CFA                     __end_of_putch:
 21026                           	opt callstack 0
 21027                           
 21028 ;; *************** function _ringBufS_put_dma *****************
 21029 ;; Defined at:
 21030 ;;		line 67 in file "ringbufs.c"
 21031 ;; Parameters:    Size  Location     Type
 21032 ;;  _this           2  [STACK] PTR struct ringBufS_t
 21033 ;;		 -> ring_buf1(67), 
 21034 ;;  c               1  [STACK] const unsigned char 
 21035 ;; Auto vars:     Size  Location     Type
 21036 ;;		None
 21037 ;; Return value:  Size  Location     Type
 21038 ;;                  1  [STACK] void 
 21039 ;; Registers used:
 21040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11
 21041 ;; Tracked objects:
 21042 ;;		On entry : 0/4
 21043 ;;		On exit  : 0/0
 21044 ;;		Unchanged: 0/0
 21045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21046 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21047 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21048 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21049 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21050 ;;Total ram usage:        0 bytes
 21051 ;; Hardware stack levels used:    1
 21052 ;; Hardware stack levels required when called:    6
 21053 ;; This function calls:
 21054 ;;		Nothing
 21055 ;; This function is called by:
 21056 ;;		_putch
 21057 ;; This function uses a reentrant model
 21058 ;;
 21059                           
 21060                           	psect	text71
 21061  0176CC                     __ptext71:
 21062                           	opt callstack 0
 21063  0176CC                     _ringBufS_put_dma:
 21064                           	opt callstack 13
 21065                           
 21066                           ;ringbufs.c: 67: void ringBufS_put_dma(ringBufS_t *_this, const uint8_t c);ringbufs.c: 6
      +                          8: {;ringbufs.c: 69:  if (_this->count < 64) {
 21067                           ;stkvar	__this @ sp[(0)+-2]
 21068                           
 21069                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21070                           ;incstack = 0
 21071  0176CC  0EFE               	movlw	-2
 21072  0176CE  006F FF8C  F03F    	movff	plusw1,btemp+10
 21073  0176D4  0EFF               	movlw	-1
 21074  0176D6  006F FF8C  F040    	movff	plusw1,btemp+11
 21075  0176DC  0E42               	movlw	66
 21076  0176DE  243F               	addwf	(btemp+10)^0,w,c
 21077  0176E0  6ED9               	movwf	fsr2l,c
 21078  0176E2  0E00               	movlw	0
 21079  0176E4  2040               	addwfc	(btemp+11)^0,w,c
 21080  0176E6  6EDA               	movwf	fsr2h,c
 21081  0176E8  0E40               	movlw	64
 21082  0176EA  60DF               	cpfslt	indf2,c
 21083  0176EC  D040               	goto	l1465
 21084                           
 21085                           ;ringbufs.c: 70:   _this->buf[_this->head] = c;
 21086                           ;stkvar	_c @ sp[(0)+-3]
 21087                           ;stkvar	__this @ sp[(0)+-2]
 21088  0176EE  0EFE               	movlw	-2
 21089  0176F0  006F FF8C  F03F    	movff	plusw1,btemp+10
 21090  0176F6  0EFF               	movlw	-1
 21091  0176F8  006F FF8C  F040    	movff	plusw1,btemp+11
 21092  0176FE  0E40               	movlw	64
 21093  017700  243F               	addwf	(btemp+10)^0,w,c
 21094  017702  6ED9               	movwf	fsr2l,c
 21095  017704  0E00               	movlw	0
 21096  017706  2040               	addwfc	(btemp+11)^0,w,c
 21097  017708  6EDA               	movwf	fsr2h,c
 21098  01770A  50DF               	movf	indf2,w,c
 21099  01770C  6E40               	movwf	(btemp+11)^0,c
 21100                           
 21101                           ;stkvar	__this @ sp[(0)+-2]
 21102  01770E  0EFE               	movlw	-2
 21103  017710  006F FF8C  F03D    	movff	plusw1,btemp+8
 21104  017716  0EFF               	movlw	-1
 21105  017718  006F FF8C  F03E    	movff	plusw1,btemp+9
 21106  01771E  5040               	movf	(btemp+11)^0,w,c
 21107  017720  243D               	addwf	(btemp+8)^0,w,c
 21108  017722  6ED9               	movwf	fsr2l,c
 21109  017724  0E00               	movlw	0
 21110  017726  203E               	addwfc	(btemp+9)^0,w,c
 21111  017728  6EDA               	movwf	fsr2h,c
 21112  01772A  0EFD               	movlw	-3
 21113  01772C  006F FF8F FFDF     	movff	plusw1,indf2
 21114                           
 21115                           ;ringbufs.c: 71:   ++_this->head;
 21116                           ;stkvar	__this @ sp[(0)+-2]
 21117  017732  0EFE               	movlw	-2
 21118  017734  006F FF8C  F03F    	movff	plusw1,btemp+10
 21119  01773A  0EFF               	movlw	-1
 21120  01773C  006F FF8C  F040    	movff	plusw1,btemp+11
 21121  017742  0E40               	movlw	64
 21122  017744  243F               	addwf	(btemp+10)^0,w,c
 21123  017746  6ED9               	movwf	fsr2l,c
 21124  017748  0E00               	movlw	0
 21125  01774A  2040               	addwfc	(btemp+11)^0,w,c
 21126  01774C  6EDA               	movwf	fsr2h,c
 21127  01774E  2ADF               	incf	indf2,f,c
 21128                           
 21129                           ;ringbufs.c: 72:   ++_this->count;
 21130                           ;stkvar	__this @ sp[(0)+-2]
 21131  017750  0EFE               	movlw	-2
 21132  017752  006F FF8C  F03F    	movff	plusw1,btemp+10
 21133  017758  0EFF               	movlw	-1
 21134  01775A  006F FF8C  F040    	movff	plusw1,btemp+11
 21135  017760  0E42               	movlw	66
 21136  017762  243F               	addwf	(btemp+10)^0,w,c
 21137  017764  6ED9               	movwf	fsr2l,c
 21138  017766  0E00               	movlw	0
 21139  017768  2040               	addwfc	(btemp+11)^0,w,c
 21140  01776A  6EDA               	movwf	fsr2h,c
 21141  01776C  2ADF               	incf	indf2,f,c
 21142  01776E                     l1465:
 21143                           
 21144                           ; _ringBufS_put_dma: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           3, argsize = 3, vargsize = 0
 21145  01776E  52E5               	movf	postdec1,f,c
 21146  017770  52E5               	movf	postdec1,f,c
 21147  017772  52E5               	movf	postdec1,f,c
 21148  017774  0012               	return		;funcret
 21149  017776                     __end_of_ringBufS_put_dma:
 21150                           	opt callstack 0
 21151                           
 21152 ;; *************** function _atoi *****************
 21153 ;; Defined at:
 21154 ;;		line 4 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/atoi.c"
 21155 ;; Parameters:    Size  Location     Type
 21156 ;;  s               2  [STACK] PTR const unsigned char 
 21157 ;;		 -> STR_32(3), STR_31(3), STR_30(19), STR_29(19), 
 21158 ;;		 -> STR_28(19), STR_27(19), STR_26(19), STR_25(19), 
 21159 ;;		 -> STR_24(24), STR_23(15), STR_22(15), STR_21(15), 
 21160 ;;		 -> STR_20(10), STR_19(10), STR_18(19), STR_17(19), 
 21161 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(18), 
 21162 ;;		 -> STR_10(13), STR_9(13), STR_8(17), STR_6(15), 
 21163 ;;		 -> STR_5(17), STR_4(17), STR_2(15), STR_1(17), 
 21164 ;; Auto vars:     Size  Location     Type
 21165 ;;  n               2  [STACK] int 
 21166 ;;  neg             2  [STACK] int 
 21167 ;; Return value:  Size  Location     Type
 21168 ;;                  2  [STACK] int 
 21169 ;; Registers used:
 21170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl,
      + tblptrh, tblptru, prodl, prodh
 21171 ;; Tracked objects:
 21172 ;;		On entry : 0/4
 21173 ;;		On exit  : 0/0
 21174 ;;		Unchanged: 0/0
 21175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21180 ;;Total ram usage:        0 bytes
 21181 ;; Hardware stack levels used:    1
 21182 ;; Hardware stack levels required when called:    7
 21183 ;; This function calls:
 21184 ;;		_isdigit
 21185 ;;		_isspace
 21186 ;; This function is called by:
 21187 ;;		_vfpfcnvrt
 21188 ;; This function uses a reentrant model
 21189 ;;
 21190                           
 21191                           	psect	text72
 21192  015710                     __ptext72:
 21193                           	opt callstack 0
 21194  015710                     _atoi:
 21195                           	opt callstack 0
 21196                           
 21197                           ; autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21198  015710  0E09               	movlw	9
 21199  015712  26E1               	addwf	fsr1l,f,c
 21200  015714  0E00               	movlw	0
 21201  015716  22E2               	addwfc	fsr1h,f,c
 21202                           
 21203                           ;stkvar	_n @ sp[(-9)+5]
 21204                           
 21205                           ;incstack = 0
 21206  015718  0EFC               	movlw	-4
 21207  01571A  6AE3               	clrf	plusw1,c
 21208  01571C  0EFD               	movlw	-3
 21209  01571E  6AE3               	clrf	plusw1,c
 21210                           
 21211                           ;stkvar	_neg @ sp[(-9)+7]
 21212  015720  0EFE               	movlw	-2
 21213  015722  6AE3               	clrf	plusw1,c
 21214  015724  0EFF               	movlw	-1
 21215  015726  6AE3               	clrf	plusw1,c
 21216  015728  D011               	goto	l7665
 21217  01572A                     l7663:
 21218                           
 21219                           ;stkvar	_s @ sp[(-9)+-2]
 21220  01572A  0EF5               	movlw	-11
 21221  01572C  50E3               	movf	plusw1,w,c
 21222  01572E  0F01               	addlw	1
 21223  015730  6E35               	movwf	btemp^0,c
 21224  015732  0EF5               	movlw	-11
 21225  015734  0060  F0D7  FFE3   	movff	btemp,plusw1
 21226  01573A  6A35               	clrf	btemp^0,c
 21227  01573C  0EF6               	movlw	-10
 21228  01573E  50E3               	movf	plusw1,w,c
 21229  015740  2035               	addwfc	btemp^0,w,c
 21230  015742  6E35               	movwf	btemp^0,c
 21231  015744  0EF6               	movlw	-10
 21232  015746  0060  F0D7  FFE3   	movff	btemp,plusw1
 21233  01574C                     l7665:
 21234                           
 21235                           ;stkvar	_atoi$4762 @ sp[(-9)+4]
 21236  01574C  0EFB               	movlw	-5
 21237  01574E  6AE3               	clrf	plusw1,c
 21238  015750  2AE3               	incf	plusw1,f,c
 21239                           
 21240                           ;stkvar	_s @ sp[(-9)+-2]
 21241  015752  50E1               	movf	fsr1l,w,c
 21242  015754  0FF5               	addlw	-11
 21243  015756  6ED9               	movwf	fsr2l,c
 21244  015758  50E2               	movf	fsr1h,w,c
 21245  01575A  6EDA               	movwf	fsr2h,c
 21246  01575C  0EFF               	movlw	255
 21247  01575E  22DA               	addwfc	fsr2h,f,c
 21248  015760  006F FF7B FFF6     	movff	postinc2,tblptrl
 21249  015766  006F FF77 FFF7     	movff	postdec2,tblptrh
 21250  01576C                     	if	0	;tblptru may be non-zero
 21251  01576C                     	endif
 21252  01576C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21253  01576C  0E00               	movlw	low (__mediumconst shr (0+16))
 21254  01576E  6EF8               	movwf	tblptru,c
 21255  015770                     	endif
 21256  015770  0008               	tblrd		*
 21257  015772  50F5               	movf	tablat,w,c
 21258  015774  0A20               	xorlw	32
 21259  015776  B4D8               	btfsc	status,2,c
 21260  015778  D023               	goto	l7673
 21261  01577A  0EF7               	movlw	247
 21262  01577C  6E3F               	movwf	(btemp+10)^0,c
 21263  01577E  0EFF               	movlw	255
 21264  015780  6E40               	movwf	(btemp+11)^0,c
 21265                           
 21266                           ;stkvar	_s @ sp[(-9)+-2]
 21267  015782  50E1               	movf	fsr1l,w,c
 21268  015784  0FF5               	addlw	-11
 21269  015786  6ED9               	movwf	fsr2l,c
 21270  015788  50E2               	movf	fsr1h,w,c
 21271  01578A  6EDA               	movwf	fsr2h,c
 21272  01578C  0EFF               	movlw	255
 21273  01578E  22DA               	addwfc	fsr2h,f,c
 21274  015790  006F FF7B FFF6     	movff	postinc2,tblptrl
 21275  015796  006F FF77 FFF7     	movff	postdec2,tblptrh
 21276  01579C                     	if	0	;tblptru may be non-zero
 21277  01579C                     	endif
 21278  01579C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21279  01579C  0E00               	movlw	low (__mediumconst shr (0+16))
 21280  01579E  6EF8               	movwf	tblptru,c
 21281  0157A0                     	endif
 21282  0157A0  0008               	tblrd		*
 21283  0157A2  50F5               	movf	tablat,w,c
 21284  0157A4  6E3D               	movwf	(btemp+8)^0,c
 21285  0157A6  6A3E               	clrf	(btemp+9)^0,c
 21286  0157A8  503F               	movf	(btemp+10)^0,w,c
 21287  0157AA  263D               	addwf	(btemp+8)^0,f,c
 21288  0157AC  5040               	movf	(btemp+11)^0,w,c
 21289  0157AE  223E               	addwfc	(btemp+9)^0,f,c
 21290  0157B0  503E               	movf	(btemp+9)^0,w,c
 21291  0157B2  E104               	bnz	u7640
 21292  0157B4  0E05               	movlw	5
 21293  0157B6  5C3D               	subwf	(btemp+8)^0,w,c
 21294  0157B8  A0D8               	btfss	status,0,c
 21295  0157BA  D002               	goto	l7673
 21296  0157BC                     u7640:
 21297                           
 21298                           ;stkvar	_atoi$4762 @ sp[(-9)+4]
 21299  0157BC  0EFB               	movlw	-5
 21300  0157BE  6AE3               	clrf	plusw1,c
 21301  0157C0                     l7673:
 21302                           
 21303                           ;stkvar	_atoi$4762 @ sp[(-9)+4]
 21304  0157C0  0EFB               	movlw	-5
 21305  0157C2  50E3               	movf	plusw1,w,c
 21306  0157C4  6E3F               	movwf	(btemp+10)^0,c
 21307  0157C6  6A40               	clrf	(btemp+11)^0,c
 21308                           
 21309                           ;stkvar	_atoi$4761 @ sp[(-9)+2]
 21310  0157C8  0EF9               	movlw	-7
 21311  0157CA  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21312  0157D0  0EFA               	movlw	-6
 21313  0157D2  0060  F103  FFE3   	movff	btemp+11,plusw1
 21314                           
 21315                           ;stkvar	_atoi$4761 @ sp[(-9)+2]
 21316  0157D8  0EF9               	movlw	-7
 21317  0157DA  006F FF8C  F035    	movff	plusw1,btemp
 21318  0157E0  0EFA               	movlw	-6
 21319  0157E2  50E3               	movf	plusw1,w,c
 21320  0157E4  1035               	iorwf	btemp^0,w,c
 21321  0157E6  B4D8               	btfsc	status,2,c
 21322  0157E8  D01F               	goto	l7683
 21323  0157EA  D79F               	goto	l7663
 21324  0157EC                     l7679:
 21325  0157EC  0E01               	movlw	1
 21326  0157EE  6E3F               	movwf	(btemp+10)^0,c
 21327  0157F0  0E00               	movlw	0
 21328  0157F2  6E40               	movwf	(btemp+11)^0,c
 21329                           
 21330                           ;stkvar	_neg @ sp[(-9)+7]
 21331  0157F4  0EFE               	movlw	-2
 21332  0157F6  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21333  0157FC  0EFF               	movlw	-1
 21334  0157FE  0060  F103  FFE3   	movff	btemp+11,plusw1
 21335  015804                     l7681:
 21336                           
 21337                           ;stkvar	_s @ sp[(-9)+-2]
 21338  015804  0EF5               	movlw	-11
 21339  015806  50E3               	movf	plusw1,w,c
 21340  015808  0F01               	addlw	1
 21341  01580A  6E35               	movwf	btemp^0,c
 21342  01580C  0EF5               	movlw	-11
 21343  01580E  0060  F0D7  FFE3   	movff	btemp,plusw1
 21344  015814  6A35               	clrf	btemp^0,c
 21345  015816  0EF6               	movlw	-10
 21346  015818  50E3               	movf	plusw1,w,c
 21347  01581A  2035               	addwfc	btemp^0,w,c
 21348  01581C  6E35               	movwf	btemp^0,c
 21349  01581E  0EF6               	movlw	-10
 21350  015820  0060  F0D7  FFE3   	movff	btemp,plusw1
 21351  015826  D053               	goto	l7689
 21352  015828                     l7683:
 21353                           
 21354                           ;stkvar	_s @ sp[(-9)+-2]
 21355  015828  50E1               	movf	fsr1l,w,c
 21356  01582A  0FF5               	addlw	-11
 21357  01582C  6ED9               	movwf	fsr2l,c
 21358  01582E  50E2               	movf	fsr1h,w,c
 21359  015830  6EDA               	movwf	fsr2h,c
 21360  015832  0EFF               	movlw	255
 21361  015834  22DA               	addwfc	fsr2h,f,c
 21362  015836  006F FF7B FFF6     	movff	postinc2,tblptrl
 21363  01583C  006F FF77 FFF7     	movff	postdec2,tblptrh
 21364  015842                     	if	0	;tblptru may be non-zero
 21365  015842                     	endif
 21366  015842                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21367  015842  0E00               	movlw	low (__mediumconst shr (0+16))
 21368  015844  6EF8               	movwf	tblptru,c
 21369  015846                     	endif
 21370  015846  0008               	tblrd		*
 21371  015848  50F5               	movf	tablat,w,c
 21372  01584A  6E3F               	movwf	(btemp+10)^0,c
 21373  01584C  6A40               	clrf	(btemp+11)^0,c
 21374                           
 21375                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 21376                           ; Switch size 1, requested type "simple"
 21377                           ; Number of cases is 1, Range of values is 0 to 0
 21378                           ; switch strategies available:
 21379                           ; Name         Instructions Cycles
 21380                           ; simple_byte            4     3 (average)
 21381                           ;	Chosen strategy is simple_byte
 21382  01584E  5040               	movf	(btemp+11)^0,w,c
 21383  015850  0A00               	xorlw	0	; case 0
 21384  015852  A4D8               	btfss	status,2,c
 21385  015854  D03C               	goto	l7689
 21386                           
 21387                           ; Switch size 1, requested type "simple"
 21388                           ; Number of cases is 2, Range of values is 43 to 45
 21389                           ; switch strategies available:
 21390                           ; Name         Instructions Cycles
 21391                           ; simple_byte            7     4 (average)
 21392                           ;	Chosen strategy is simple_byte
 21393  015856  503F               	movf	(btemp+10)^0,w,c
 21394  015858  0A2B               	xorlw	43	; case 43
 21395  01585A  B4D8               	btfsc	status,2,c
 21396  01585C  D7D3               	goto	l7681
 21397  01585E  0A06               	xorlw	6	; case 45
 21398  015860  B4D8               	btfsc	status,2,c
 21399  015862  D7C4               	goto	l7679
 21400  015864  D034               	goto	l7689
 21401  015866                     l7685:
 21402                           
 21403                           ;stkvar	_n @ sp[(-9)+5]
 21404  015866  0EFC               	movlw	-4
 21405  015868  006F FF8C  F03F    	movff	plusw1,btemp+10
 21406  01586E  0EFD               	movlw	-3
 21407  015870  006F FF8C  F040    	movff	plusw1,btemp+11
 21408  015876  0E0A               	movlw	10
 21409  015878  023F               	mulwf	(btemp+10)^0,c
 21410  01587A  006F FFCC  F03D    	movff	prodl,btemp+8
 21411  015880  006F FFD0  F03E    	movff	prodh,btemp+9
 21412  015886  0240               	mulwf	(btemp+11)^0,c
 21413  015888  50F3               	movf	prodl,w,c
 21414  01588A  263E               	addwf	(btemp+9)^0,f,c
 21415                           
 21416                           ;stkvar	_s @ sp[(-9)+-2]
 21417  01588C  50E1               	movf	fsr1l,w,c
 21418  01588E  0FF5               	addlw	-11
 21419  015890  6ED9               	movwf	fsr2l,c
 21420  015892  50E2               	movf	fsr1h,w,c
 21421  015894  6EDA               	movwf	fsr2h,c
 21422  015896  0EFF               	movlw	255
 21423  015898  22DA               	addwfc	fsr2h,f,c
 21424  01589A  006F FF7B FFF6     	movff	postinc2,tblptrl
 21425  0158A0  006F FF77 FFF7     	movff	postdec2,tblptrh
 21426  0158A6                     	if	0	;tblptru may be non-zero
 21427  0158A6                     	endif
 21428  0158A6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21429  0158A6  0E00               	movlw	low (__mediumconst shr (0+16))
 21430  0158A8  6EF8               	movwf	tblptru,c
 21431  0158AA                     	endif
 21432  0158AA  0008               	tblrd		*
 21433  0158AC  50F5               	movf	tablat,w,c
 21434  0158AE  5E3D               	subwf	(btemp+8)^0,f,c
 21435  0158B0  0E00               	movlw	0
 21436  0158B2  5A3E               	subwfb	(btemp+9)^0,f,c
 21437  0158B4  0E30               	movlw	48
 21438  0158B6  263D               	addwf	(btemp+8)^0,f,c
 21439  0158B8  0E00               	movlw	0
 21440  0158BA  223E               	addwfc	(btemp+9)^0,f,c
 21441                           
 21442                           ;stkvar	_n @ sp[(-9)+5]
 21443  0158BC  0EFC               	movlw	-4
 21444  0158BE  0060  F0F7  FFE3   	movff	btemp+8,plusw1
 21445  0158C4  0EFD               	movlw	-3
 21446  0158C6  0060  F0FB  FFE3   	movff	btemp+9,plusw1
 21447  0158CC  D79B               	goto	l7681
 21448  0158CE                     l7689:
 21449  0158CE  0ED0               	movlw	208
 21450  0158D0  6E3F               	movwf	(btemp+10)^0,c
 21451  0158D2  0EFF               	movlw	255
 21452  0158D4  6E40               	movwf	(btemp+11)^0,c
 21453                           
 21454                           ;stkvar	_s @ sp[(-9)+-2]
 21455  0158D6  50E1               	movf	fsr1l,w,c
 21456  0158D8  0FF5               	addlw	-11
 21457  0158DA  6ED9               	movwf	fsr2l,c
 21458  0158DC  50E2               	movf	fsr1h,w,c
 21459  0158DE  6EDA               	movwf	fsr2h,c
 21460  0158E0  0EFF               	movlw	255
 21461  0158E2  22DA               	addwfc	fsr2h,f,c
 21462  0158E4  006F FF7B FFF6     	movff	postinc2,tblptrl
 21463  0158EA  006F FF77 FFF7     	movff	postdec2,tblptrh
 21464  0158F0                     	if	0	;tblptru may be non-zero
 21465  0158F0                     	endif
 21466  0158F0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21467  0158F0  0E00               	movlw	low (__mediumconst shr (0+16))
 21468  0158F2  6EF8               	movwf	tblptru,c
 21469  0158F4                     	endif
 21470  0158F4  0008               	tblrd		*
 21471  0158F6  50F5               	movf	tablat,w,c
 21472  0158F8  6E3D               	movwf	(btemp+8)^0,c
 21473  0158FA  6A3E               	clrf	(btemp+9)^0,c
 21474  0158FC  503F               	movf	(btemp+10)^0,w,c
 21475  0158FE  263D               	addwf	(btemp+8)^0,f,c
 21476  015900  5040               	movf	(btemp+11)^0,w,c
 21477  015902  223E               	addwfc	(btemp+9)^0,f,c
 21478  015904  503E               	movf	(btemp+9)^0,w,c
 21479  015906  E106               	bnz	u7660
 21480  015908  0E0A               	movlw	10
 21481  01590A  5C3D               	subwf	(btemp+8)^0,w,c
 21482  01590C  B0D8               	btfsc	status,0,c
 21483  01590E  D002               	goto	u7660
 21484  015910  0E01               	movlw	1
 21485  015912  D001               	goto	u7670
 21486  015914                     u7660:
 21487  015914  0E00               	movlw	0
 21488  015916                     u7670:
 21489  015916  6E3F               	movwf	(btemp+10)^0,c
 21490  015918  6A40               	clrf	(btemp+11)^0,c
 21491                           
 21492                           ;stkvar	_atoi$4763 @ sp[(-9)+0]
 21493  01591A  0EF7               	movlw	-9
 21494  01591C  0060  F0FF  FFE3   	movff	btemp+10,plusw1
 21495  015922  0EF8               	movlw	-8
 21496  015924  0060  F103  FFE3   	movff	btemp+11,plusw1
 21497                           
 21498                           ;stkvar	_atoi$4763 @ sp[(-9)+0]
 21499  01592A  0EF7               	movlw	-9
 21500  01592C  006F FF8C  F035    	movff	plusw1,btemp
 21501  015932  0EF8               	movlw	-8
 21502  015934  50E3               	movf	plusw1,w,c
 21503  015936  1035               	iorwf	btemp^0,w,c
 21504  015938  A4D8               	btfss	status,2,c
 21505  01593A  D795               	goto	l7685
 21506                           
 21507                           ;stkvar	_neg @ sp[(-9)+7]
 21508  01593C  0EFE               	movlw	-2
 21509  01593E  006F FF8C  F035    	movff	plusw1,btemp
 21510  015944  0EFF               	movlw	-1
 21511  015946  50E3               	movf	plusw1,w,c
 21512  015948  1035               	iorwf	btemp^0,w,c
 21513  01594A  A4D8               	btfss	status,2,c
 21514  01594C  D00E               	goto	l7699
 21515                           
 21516                           ;stkvar	_n @ sp[(-9)+5]
 21517  01594E  0EFC               	movlw	-4
 21518  015950  006F FF8C  F035    	movff	plusw1,btemp
 21519  015956  1E35               	comf	btemp^0,f,c
 21520  015958  0EFD               	movlw	-3
 21521  01595A  006F FF8C  F036    	movff	plusw1,btemp+1
 21522  015960  1E36               	comf	(btemp+1)^0,f,c
 21523  015962  2A35               	incf	btemp^0,f,c
 21524  015964  B4D8               	btfsc	status,2,c
 21525  015966  2A36               	incf	(btemp+1)^0,f,c
 21526  015968  D008               	goto	l2728
 21527  01596A                     l7699:
 21528                           
 21529                           ;stkvar	_n @ sp[(-9)+5]
 21530  01596A  0EFC               	movlw	-4
 21531  01596C  006F FF8C  F035    	movff	plusw1,btemp
 21532  015972  0EFD               	movlw	-3
 21533  015974  006F FF8C  F036    	movff	plusw1,btemp+1
 21534  01597A                     l2728:
 21535                           
 21536                           ; _atoi: autosize = 9, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize 
      +                          = 2, vargsize = 0
 21537  01597A  0EF5               	movlw	245
 21538  01597C  26E1               	addwf	fsr1l,f,c
 21539  01597E  0EFF               	movlw	255
 21540  015980  22E2               	addwfc	fsr1h,f,c
 21541  015982  0012               	return		;funcret
 21542  015984                     __end_of_atoi:
 21543                           	opt callstack 0
 21544                           
 21545 ;; *************** function _isspace *****************
 21546 ;; Defined at:
 21547 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isspace.c"
 21548 ;; Parameters:    Size  Location     Type
 21549 ;;  c               2  [STACK] int 
 21550 ;; Auto vars:     Size  Location     Type
 21551 ;;		None
 21552 ;; Return value:  Size  Location     Type
 21553 ;;                  2  [STACK] int 
 21554 ;; Registers used:
 21555 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21556 ;; Tracked objects:
 21557 ;;		On entry : 0/0
 21558 ;;		On exit  : 0/0
 21559 ;;		Unchanged: 0/0
 21560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21565 ;;Total ram usage:        0 bytes
 21566 ;; Hardware stack levels used:    1
 21567 ;; Hardware stack levels required when called:    6
 21568 ;; This function calls:
 21569 ;;		Nothing
 21570 ;; This function is called by:
 21571 ;;		_atoi
 21572 ;; This function uses a reentrant model
 21573 ;;
 21574                           
 21575                           	psect	text73
 21576  0182B6                     __ptext73:
 21577                           	opt callstack 0
 21578  0182B6                     _isspace:
 21579                           	opt callstack 0
 21580                           
 21581                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21582  0182B6  52E6               	movf	postinc1,f,c
 21583                           
 21584                           ;stkvar	_isspace$4801 @ sp[(-1)+0]
 21585                           
 21586                           ;incstack = 0
 21587  0182B8  0EFF               	movlw	-1
 21588  0182BA  6AE3               	clrf	plusw1,c
 21589  0182BC  2AE3               	incf	plusw1,f,c
 21590                           
 21591                           ;stkvar	_c @ sp[(-1)+-2]
 21592  0182BE  0EFD               	movlw	-3
 21593  0182C0  006F FF8C  F035    	movff	plusw1,btemp
 21594  0182C6  0E20               	movlw	32
 21595  0182C8  1835               	xorwf	btemp^0,w,c
 21596  0182CA  E104               	bnz	u6550
 21597  0182CC  0EFE               	movlw	-2
 21598  0182CE  50E3               	movf	plusw1,w,c
 21599  0182D0  B4D8               	btfsc	status,2,c
 21600  0182D2  D012               	goto	l7109
 21601  0182D4                     u6550:
 21602                           
 21603                           ;stkvar	_c @ sp[(-1)+-2]
 21604  0182D4  0EFD               	movlw	-3
 21605  0182D6  50E3               	movf	plusw1,w,c
 21606  0182D8  0FF7               	addlw	247
 21607  0182DA  6E3F               	movwf	(btemp+10)^0,c
 21608  0182DC  0EFE               	movlw	-2
 21609  0182DE  006F FF8C  F040    	movff	plusw1,btemp+11
 21610  0182E4  0EFF               	movlw	255
 21611  0182E6  2240               	addwfc	(btemp+11)^0,f,c
 21612  0182E8  5040               	movf	(btemp+11)^0,w,c
 21613  0182EA  E104               	bnz	u6560
 21614  0182EC  0E05               	movlw	5
 21615  0182EE  5C3F               	subwf	(btemp+10)^0,w,c
 21616  0182F0  A0D8               	btfss	status,0,c
 21617  0182F2  D002               	goto	l7109
 21618  0182F4                     u6560:
 21619                           
 21620                           ;stkvar	_isspace$4801 @ sp[(-1)+0]
 21621  0182F4  0EFF               	movlw	-1
 21622  0182F6  6AE3               	clrf	plusw1,c
 21623  0182F8                     l7109:
 21624                           
 21625                           ;stkvar	_isspace$4801 @ sp[(-1)+0]
 21626  0182F8  0EFF               	movlw	-1
 21627  0182FA  50E3               	movf	plusw1,w,c
 21628  0182FC  6E35               	movwf	btemp^0,c
 21629  0182FE  6A36               	clrf	(btemp+1)^0,c
 21630                           
 21631                           ; _isspace: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21632  018300  52E5               	movf	postdec1,f,c
 21633  018302  52E5               	movf	postdec1,f,c
 21634  018304  52E5               	movf	postdec1,f,c
 21635  018306  0012               	return		;funcret
 21636  018308                     __end_of_isspace:
 21637                           	opt callstack 0
 21638                           
 21639 ;; *************** function _isdigit *****************
 21640 ;; Defined at:
 21641 ;;		line 5 in file "/opt/microchip/xc8/v2.10/pic/sources/c99/common/isdigit.c"
 21642 ;; Parameters:    Size  Location     Type
 21643 ;;  c               2  [STACK] int 
 21644 ;; Auto vars:     Size  Location     Type
 21645 ;;		None
 21646 ;; Return value:  Size  Location     Type
 21647 ;;                  2  [STACK] int 
 21648 ;; Registers used:
 21649 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+1, btemp+10, btemp+11
 21650 ;; Tracked objects:
 21651 ;;		On entry : 0/0
 21652 ;;		On exit  : 0/0
 21653 ;;		Unchanged: 0/0
 21654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21659 ;;Total ram usage:        0 bytes
 21660 ;; Hardware stack levels used:    1
 21661 ;; Hardware stack levels required when called:    6
 21662 ;; This function calls:
 21663 ;;		Nothing
 21664 ;; This function is called by:
 21665 ;;		_vfpfcnvrt
 21666 ;;		_atoi
 21667 ;; This function uses a reentrant model
 21668 ;;
 21669                           
 21670                           	psect	text74
 21671  018798                     __ptext74:
 21672                           	opt callstack 0
 21673  018798                     _isdigit:
 21674                           	opt callstack 18
 21675                           
 21676                           ;stkvar	_c @ sp[(0)+-2]
 21677                           
 21678                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21679                           ;incstack = 0
 21680  018798  0EFE               	movlw	-2
 21681  01879A  50E3               	movf	plusw1,w,c
 21682  01879C  0FD0               	addlw	208
 21683  01879E  6E3F               	movwf	(btemp+10)^0,c
 21684  0187A0  0EFF               	movlw	-1
 21685  0187A2  006F FF8C  F040    	movff	plusw1,btemp+11
 21686  0187A8  0EFF               	movlw	255
 21687  0187AA  2240               	addwfc	(btemp+11)^0,f,c
 21688  0187AC  5040               	movf	(btemp+11)^0,w,c
 21689  0187AE  E106               	bnz	u5400
 21690  0187B0  0E0A               	movlw	10
 21691  0187B2  5C3F               	subwf	(btemp+10)^0,w,c
 21692  0187B4  B0D8               	btfsc	status,0,c
 21693  0187B6  D002               	goto	u5400
 21694  0187B8  0E01               	movlw	1
 21695  0187BA  D001               	goto	u5410
 21696  0187BC                     u5400:
 21697  0187BC  0E00               	movlw	0
 21698  0187BE                     u5410:
 21699  0187BE  6E35               	movwf	btemp^0,c
 21700  0187C0  6A36               	clrf	(btemp+1)^0,c
 21701                           
 21702                           ; _isdigit: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsi
      +                          ze = 2, vargsize = 0
 21703  0187C2  52E5               	movf	postdec1,f,c
 21704  0187C4  52E5               	movf	postdec1,f,c
 21705  0187C6  0012               	return		;funcret
 21706  0187C8                     __end_of_isdigit:
 21707                           	opt callstack 0
 21708                           
 21709 ;; *************** function _set_vterm *****************
 21710 ;; Defined at:
 21711 ;;		line 104 in file "mconfig.c"
 21712 ;; Parameters:    Size  Location     Type
 21713 ;;  vterm           1  [STACK] unsigned char 
 21714 ;; Auto vars:     Size  Location     Type
 21715 ;;		None
 21716 ;; Return value:  Size  Location     Type
 21717 ;;                  1  [STACK] unsigned char 
 21718 ;; Registers used:
 21719 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp+11
 21720 ;; Tracked objects:
 21721 ;;		On entry : 0/0
 21722 ;;		On exit  : 3F/4
 21723 ;;		Unchanged: 0/0
 21724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21729 ;;Total ram usage:        0 bytes
 21730 ;; Hardware stack levels used:    1
 21731 ;; Hardware stack levels required when called:    6
 21732 ;; This function calls:
 21733 ;;		Nothing
 21734 ;; This function is called by:
 21735 ;;		_main
 21736 ;;		_check_help
 21737 ;; This function uses a reentrant model
 21738 ;;
 21739                           
 21740                           	psect	text75
 21741  018CC4                     __ptext75:
 21742                           	opt callstack 0
 21743  018CC4                     _set_vterm:
 21744                           	opt callstack 24
 21745                           
 21746                           ;mconfig.c: 104: uint8_t set_vterm(uint8_t vterm);mconfig.c: 105: {;mconfig.c: 106:  D.v
      +                          term = vterm & 0x03;
 21747                           ;stkvar	_vterm @ sp[(0)+-1]
 21748                           
 21749                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21750                           ;incstack = 0
 21751  018CC4  0EFF               	movlw	-1
 21752  018CC6  006F FF8C  F040    	movff	plusw1,btemp+11
 21753  018CCC  0E03               	movlw	3
 21754  018CCE  1640               	andwf	(btemp+11)^0,f,c
 21755  018CD0  0104               	movlb	4	; () banked
 21756  018CD2  51D8               	movf	(_D+216)& (0+255),w,b
 21757  018CD4  1840               	xorwf	(btemp+11)^0,w,c
 21758  018CD6  0BFE               	andlw	-2
 21759  018CD8  1840               	xorwf	(btemp+11)^0,w,c
 21760  018CDA  6FD8               	movwf	(_D+216)& (0+255),b
 21761                           
 21762                           ; BSR set to: 4
 21763                           ; _set_vterm: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 21764  018CDC  52E5               	movf	postdec1,f,c
 21765  018CDE  0012               	return		;funcret
 21766  018CE0                     __end_of_set_vterm:
 21767                           	opt callstack 0
 21768                           
 21769 ;; *************** function _set_temp_display_help *****************
 21770 ;; Defined at:
 21771 ;;		line 208 in file "mconfig.c"
 21772 ;; Parameters:    Size  Location     Type
 21773 ;;  new_response    1  [STACK] const enum E16501
 21774 ;; Auto vars:     Size  Location     Type
 21775 ;;		None
 21776 ;; Return value:  Size  Location     Type
 21777 ;;                  1  [STACK] enum E16501
 21778 ;; Registers used:
 21779 ;;		wreg, fsr1l, fsr1h
 21780 ;; Tracked objects:
 21781 ;;		On entry : 0/4
 21782 ;;		On exit  : 3F/1
 21783 ;;		Unchanged: 0/0
 21784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21789 ;;Total ram usage:        0 bytes
 21790 ;; Hardware stack levels used:    1
 21791 ;; Hardware stack levels required when called:    6
 21792 ;; This function calls:
 21793 ;;		Nothing
 21794 ;; This function is called by:
 21795 ;;		_check_help
 21796 ;; This function uses a reentrant model
 21797 ;;
 21798                           
 21799                           	psect	text76
 21800  018DAE                     __ptext76:
 21801                           	opt callstack 0
 21802  018DAE                     _set_temp_display_help:
 21803                           	opt callstack 23
 21804                           
 21805                           ;mconfig.c: 208: D_CODES set_temp_display_help(const D_CODES new_response_info);mconfig.
      +                          c: 209: {;mconfig.c: 210:  static D_CODES old_info;;mconfig.c: 212:  old_info = V.respon
      +                          se.help_temp;
 21806                           
 21807                           ; BSR set to: 4
 21808                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21809                           ;incstack = 0
 21810  018DAE  0101               	movlb	1	; () banked
 21811  018DB0  51A4               	movf	(_V+164)& (0+255),w,b	;volatile
 21812                           
 21813                           ; BSR set to: 1
 21814                           ;mconfig.c: 213:  V.response.help_temp = new_response_info;
 21815                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21816  018DB2  0EFF               	movlw	-1
 21817  018DB4  006F FF8C  F1A4    	movff	plusw1,_V+164	;volatile
 21818                           
 21819                           ; BSR set to: 1
 21820                           ; _set_temp_display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
 21821  018DBA  52E5               	movf	postdec1,f,c
 21822  018DBC  0012               	return		;funcret
 21823  018DBE                     __end_of_set_temp_display_help:
 21824                           	opt callstack 0
 21825                           
 21826 ;; *************** function _set_display_info *****************
 21827 ;; Defined at:
 21828 ;;		line 197 in file "mconfig.c"
 21829 ;; Parameters:    Size  Location     Type
 21830 ;;  new_response    1  [STACK] const enum E16501
 21831 ;; Auto vars:     Size  Location     Type
 21832 ;;		None
 21833 ;; Return value:  Size  Location     Type
 21834 ;;                  1  [STACK] enum E16986
 21835 ;; Registers used:
 21836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 21837 ;; Tracked objects:
 21838 ;;		On entry : 0/4
 21839 ;;		On exit  : 0/0
 21840 ;;		Unchanged: 0/0
 21841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21846 ;;Total ram usage:        0 bytes
 21847 ;; Hardware stack levels used:    1
 21848 ;; Hardware stack levels required when called:    7
 21849 ;; This function calls:
 21850 ;;		_TimerDone
 21851 ;; This function is called by:
 21852 ;;		_main
 21853 ;;		_check_help
 21854 ;; This function uses a reentrant model
 21855 ;;
 21856                           
 21857                           	psect	text77
 21858  018C30                     __ptext77:
 21859                           	opt callstack 0
 21860  018C30                     _set_display_info:
 21861                           	opt callstack 23
 21862                           
 21863                           ;mconfig.c: 197: D_CODES set_display_info(const D_CODES new_response_info);mconfig.c: 19
      +                          8: {;mconfig.c: 199:  static D_CODES old_info = DIS_STR;;mconfig.c: 201:  if (TimerDone(
      +                          TMR_INFO)) {
 21864                           
 21865                           ; BSR set to: 1
 21866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21867                           ;incstack = 0
 21868  018C30  0E07               	movlw	7
 21869  018C32  6EE6               	movwf	postinc1,c
 21870  018C34  ECA3  F0C5         	call	_TimerDone	;wreg free
 21871  018C38  5035               	movf	btemp^0,w,c
 21872  018C3A  B4D8               	btfsc	status,2,c
 21873  018C3C  D006               	goto	l1602
 21874                           
 21875                           ;mconfig.c: 202:   old_info = V.response.info;
 21876  018C3E  0101               	movlb	1	; () banked
 21877  018C40  51A3               	movf	(_V+163)& (0+255),w,b	;volatile
 21878                           
 21879                           ; BSR set to: 1
 21880                           ;mconfig.c: 203:   V.response.info = new_response_info;
 21881                           ;stkvar	_new_response_info @ sp[(0)+-1]
 21882  018C42  0EFF               	movlw	-1
 21883  018C44  006F FF8C  F1A3    	movff	plusw1,_V+163	;volatile
 21884  018C4A                     l1602:
 21885                           
 21886                           ; _set_display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           1, argsize = 1, vargsize = 0
 21887  018C4A  52E5               	movf	postdec1,f,c
 21888  018C4C  0012               	return		;funcret
 21889  018C4E                     __end_of_set_display_info:
 21890                           	opt callstack 0
 21891                           
 21892 ;; *************** function _mode_lamp_dim *****************
 21893 ;; Defined at:
 21894 ;;		line 13 in file "mconfig.c"
 21895 ;; Parameters:    Size  Location     Type
 21896 ;;  level           2  [STACK] const unsigned short 
 21897 ;; Auto vars:     Size  Location     Type
 21898 ;;		None
 21899 ;; Return value:  Size  Location     Type
 21900 ;;                  1  [STACK] void 
 21901 ;; Registers used:
 21902 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21903 ;; Tracked objects:
 21904 ;;		On entry : 0/1
 21905 ;;		On exit  : 0/0
 21906 ;;		Unchanged: 0/0
 21907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21912 ;;Total ram usage:        0 bytes
 21913 ;; Hardware stack levels used:    1
 21914 ;; Hardware stack levels required when called:    7
 21915 ;; This function calls:
 21916 ;;		_PWM8_LoadDutyValue
 21917 ;; This function is called by:
 21918 ;;		_main
 21919 ;;		_check_help
 21920 ;; This function uses a reentrant model
 21921 ;;
 21922                           
 21923                           	psect	text78
 21924  018D16                     __ptext78:
 21925                           	opt callstack 0
 21926  018D16                     _mode_lamp_dim:
 21927                           	opt callstack 23
 21928                           
 21929                           ;mconfig.c: 13: void mode_lamp_dim(const uint16_t level);mconfig.c: 14: {;mconfig.c: 15:
      +                            PWM8_LoadDutyValue(level);
 21930                           ;stkvar	_level @ sp[(0)+-2]
 21931                           
 21932                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21933                           ;incstack = 0
 21934  018D16  0EFE               	movlw	-2
 21935  018D18  006F FF8F FFE6     	movff	plusw1,postinc1
 21936  018D1E  006F FF8F FFE6     	movff	plusw1,postinc1
 21937  018D24  EC9B  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 21938                           
 21939                           ; _mode_lamp_dim: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2,
      +                           argsize = 2, vargsize = 0
 21940  018D28  52E5               	movf	postdec1,f,c
 21941  018D2A  52E5               	movf	postdec1,f,c
 21942  018D2C  0012               	return		;funcret
 21943  018D2E                     __end_of_mode_lamp_dim:
 21944                           	opt callstack 0
 21945                           
 21946 ;; *************** function _mode_lamp_bright *****************
 21947 ;; Defined at:
 21948 ;;		line 18 in file "mconfig.c"
 21949 ;; Parameters:    Size  Location     Type
 21950 ;;		None
 21951 ;; Auto vars:     Size  Location     Type
 21952 ;;		None
 21953 ;; Return value:  Size  Location     Type
 21954 ;;                  1  [STACK] void 
 21955 ;; Registers used:
 21956 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 21957 ;; Tracked objects:
 21958 ;;		On entry : 0/1
 21959 ;;		On exit  : 0/0
 21960 ;;		Unchanged: 0/0
 21961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 21962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 21966 ;;Total ram usage:        0 bytes
 21967 ;; Hardware stack levels used:    1
 21968 ;; Hardware stack levels required when called:    7
 21969 ;; This function calls:
 21970 ;;		_PWM8_LoadDutyValue
 21971 ;; This function is called by:
 21972 ;;		_check_help
 21973 ;; This function uses a reentrant model
 21974 ;;
 21975                           
 21976                           	psect	text79
 21977  018DCC                     __ptext79:
 21978                           	opt callstack 0
 21979  018DCC                     _mode_lamp_bright:
 21980                           	opt callstack 22
 21981                           
 21982                           ;mconfig.c: 20:  PWM8_LoadDutyValue(300);
 21983                           
 21984                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 21985                           ;incstack = 0
 21986  018DCC  0E2C               	movlw	44
 21987  018DCE  6EE6               	movwf	postinc1,c
 21988  018DD0  0E01               	movlw	1
 21989  018DD2  6EE6               	movwf	postinc1,c
 21990  018DD4  EC9B  F0C2         	call	_PWM8_LoadDutyValue	;wreg free
 21991                           
 21992                           ; _mode_lamp_bright: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 21993  018DD8  0012               	return		;funcret
 21994  018DDA                     __end_of_mode_lamp_bright:
 21995                           	opt callstack 0
 21996                           
 21997 ;; *************** function _PWM8_LoadDutyValue *****************
 21998 ;; Defined at:
 21999 ;;		line 74 in file "mcc_generated_files/pwm8.c"
 22000 ;; Parameters:    Size  Location     Type
 22001 ;;  dutyValue       2  [STACK] unsigned short 
 22002 ;; Auto vars:     Size  Location     Type
 22003 ;;		None
 22004 ;; Return value:  Size  Location     Type
 22005 ;;                  1  [STACK] void 
 22006 ;; Registers used:
 22007 ;;		wreg, fsr1l, fsr1h, status,2, status,0, btemp, btemp+10, btemp+11
 22008 ;; Tracked objects:
 22009 ;;		On entry : 0/1
 22010 ;;		On exit  : 0/0
 22011 ;;		Unchanged: 0/0
 22012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22017 ;;Total ram usage:        0 bytes
 22018 ;; Hardware stack levels used:    1
 22019 ;; Hardware stack levels required when called:    6
 22020 ;; This function calls:
 22021 ;;		Nothing
 22022 ;; This function is called by:
 22023 ;;		_mode_lamp_dim
 22024 ;;		_mode_lamp_bright
 22025 ;; This function uses a reentrant model
 22026 ;;
 22027                           
 22028                           	psect	text80
 22029  018536                     __ptext80:
 22030                           	opt callstack 0
 22031  018536                     _PWM8_LoadDutyValue:
 22032                           	opt callstack 23
 22033                           
 22034                           ;mcc_generated_files/pwm8.c: 74:  void PWM8_LoadDutyValue(uint16_t dutyValue);mcc_genera
      +                          ted_files/pwm8.c: 75:  {;mcc_generated_files/pwm8.c: 77:      PWM8DCH = (dutyValue & 0x0
      +                          3FC)>>2;
 22035                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22036                           
 22037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22038                           ;incstack = 0
 22039  018536  0EFE               	movlw	-2
 22040  018538  006F FF8C  F03F    	movff	plusw1,btemp+10
 22041  01853E  0EFF               	movlw	-1
 22042  018540  006F FF8C  F040    	movff	plusw1,btemp+11
 22043  018546  90D8               	bcf	status,0,c
 22044  018548  3240               	rrcf	(btemp+11)^0,f,c
 22045  01854A  323F               	rrcf	(btemp+10)^0,f,c
 22046  01854C  90D8               	bcf	status,0,c
 22047  01854E  3240               	rrcf	(btemp+11)^0,f,c
 22048  018550  323F               	rrcf	(btemp+10)^0,f,c
 22049  018552  503F               	movf	(btemp+10)^0,w,c
 22050  018554  6E61               	movwf	97,c	;volatile
 22051                           
 22052                           ;mcc_generated_files/pwm8.c: 80:      PWM8DCL = (dutyValue & 0x0003)<<6;
 22053                           ;stkvar	_dutyValue @ sp[(0)+-2]
 22054  018556  0EFE               	movlw	-2
 22055  018558  006F FF8C  F040    	movff	plusw1,btemp+11
 22056  01855E  0E03               	movlw	3
 22057  018560  1640               	andwf	(btemp+11)^0,f,c
 22058  018562  0E06               	movlw	6
 22059  018564  6E35               	movwf	btemp^0,c
 22060  018566                     u8205:
 22061  018566  90D8               	bcf	status,0,c
 22062  018568  3640               	rlcf	(btemp+11)^0,f,c
 22063  01856A  2E35               	decfsz	btemp^0,f,c
 22064  01856C  D7FC               	goto	u8205
 22065  01856E  5040               	movf	(btemp+11)^0,w,c
 22066  018570  6E60               	movwf	96,c	;volatile
 22067                           
 22068                           ; _PWM8_LoadDutyValue: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 2, argsize = 2, vargsize = 0
 22069  018572  52E5               	movf	postdec1,f,c
 22070  018574  52E5               	movf	postdec1,f,c
 22071  018576  0012               	return		;funcret
 22072  018578                     __end_of_PWM8_LoadDutyValue:
 22073                           	opt callstack 0
 22074                           
 22075 ;; *************** function _help_button *****************
 22076 ;; Defined at:
 22077 ;;		line 26 in file "mconfig.c"
 22078 ;; Parameters:    Size  Location     Type
 22079 ;;		None
 22080 ;; Auto vars:     Size  Location     Type
 22081 ;;		None
 22082 ;; Return value:  Size  Location     Type
 22083 ;;                  1  [STACK] _Bool 
 22084 ;; Registers used:
 22085 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22086 ;; Tracked objects:
 22087 ;;		On entry : 0/1
 22088 ;;		On exit  : 0/0
 22089 ;;		Unchanged: 0/0
 22090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22091 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22092 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22093 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22094 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22095 ;;Total ram usage:        0 bytes
 22096 ;; Hardware stack levels used:    1
 22097 ;; Hardware stack levels required when called:    7
 22098 ;; This function calls:
 22099 ;;		_StartTimer
 22100 ;;		_TimerDone
 22101 ;; This function is called by:
 22102 ;;		_check_help
 22103 ;; This function uses a reentrant model
 22104 ;;
 22105                           
 22106                           	psect	text81
 22107  0185F4                     __ptext81:
 22108                           	opt callstack 0
 22109  0185F4                     _help_button:
 22110                           	opt callstack 22
 22111                           
 22112                           ;mconfig.c: 28:  if (!PORTBbits.RB0) {
 22113                           
 22114                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22115                           ;incstack = 0
 22116  0185F4  B0CB               	btfsc	203,0,c	;volatile
 22117  0185F6  D00C               	goto	l1545
 22118                           
 22119                           ;mconfig.c: 29:   V.help = 1;
 22120  0185F8  0101               	movlb	1	; () banked
 22121  0185FA  859B               	bsf	(_V+155)& (0+255),2,b	;volatile
 22122                           
 22123                           ; BSR set to: 1
 22124                           ;mconfig.c: 30:   if (TimerDone(TMR_HELP))
 22125  0185FC  0E08               	movlw	8
 22126  0185FE  6EE6               	movwf	postinc1,c
 22127  018600  ECA3  F0C5         	call	_TimerDone	;wreg free
 22128  018604  5035               	movf	btemp^0,w,c
 22129  018606  B4D8               	btfsc	status,2,c
 22130  018608  D003               	goto	l1545
 22131                           
 22132                           ;mconfig.c: 31:    return 1;
 22133  01860A  0E01               	movlw	1
 22134  01860C  6E35               	movwf	btemp^0,c
 22135  01860E  0012               	return	
 22136  018610                     l1545:
 22137                           
 22138                           ;mconfig.c: 34:  if (!V.help)
 22139  018610  0101               	movlb	1	; () banked
 22140  018612  B59B               	btfsc	(_V+155)& (0+255),2,b	;volatile
 22141  018614  D008               	goto	l8639
 22142                           
 22143                           ; BSR set to: 1
 22144                           ;mconfig.c: 35:   StartTimer(TMR_HELP, 300);
 22145  018616  0E2C               	movlw	44
 22146  018618  6EE6               	movwf	postinc1,c
 22147  01861A  0E01               	movlw	1
 22148  01861C  6EE6               	movwf	postinc1,c
 22149  01861E  0E08               	movlw	8
 22150  018620  6EE6               	movwf	postinc1,c
 22151  018622  ECDC  F0C2         	call	_StartTimer	;wreg free
 22152  018626                     l8639:
 22153                           
 22154                           ;mconfig.c: 37:  return 0;
 22155  018626  0E00               	movlw	0
 22156  018628  6E35               	movwf	btemp^0,c
 22157                           
 22158                           ; _help_button: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, a
      +                          rgsize = 0, vargsize = 0
 22159  01862A  0012               	return		;funcret
 22160  01862C                     __end_of_help_button:
 22161                           	opt callstack 0
 22162                           
 22163 ;; *************** function _TimerDone *****************
 22164 ;; Defined at:
 22165 ;;		line 20 in file "timers.c"
 22166 ;; Parameters:    Size  Location     Type
 22167 ;;  timer           1  [STACK] const unsigned char 
 22168 ;; Auto vars:     Size  Location     Type
 22169 ;;		None
 22170 ;; Return value:  Size  Location     Type
 22171 ;;                  1  [STACK] _Bool 
 22172 ;; Registers used:
 22173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 22174 ;; Tracked objects:
 22175 ;;		On entry : 0/4
 22176 ;;		On exit  : 0/0
 22177 ;;		Unchanged: 0/0
 22178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22183 ;;Total ram usage:        0 bytes
 22184 ;; Hardware stack levels used:    1
 22185 ;; Hardware stack levels required when called:    6
 22186 ;; This function calls:
 22187 ;;		Nothing
 22188 ;; This function is called by:
 22189 ;;		_main
 22190 ;;		_WaitMs
 22191 ;;		_help_button
 22192 ;;		_check_help
 22193 ;;		_set_display_info
 22194 ;; This function uses a reentrant model
 22195 ;;
 22196                           
 22197                           	psect	text82
 22198  018B46                     __ptext82:
 22199                           	opt callstack 0
 22200  018B46                     _TimerDone:
 22201                           	opt callstack 23
 22202                           
 22203                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22204                           ;incstack = 0
 22205  018B46  0004               	clrwdt		;# 
 22206                           
 22207                           ;timers.c: 23:  if (tickCount[timer] == 0) {
 22208                           ;stkvar	_timer @ sp[(0)+-1]
 22209  018B48  0EFF               	movlw	-1
 22210  018B4A  50E3               	movf	plusw1,w,c
 22211  018B4C  0D02               	mullw	2
 22212  018B4E  50F3               	movf	243,w,c
 22213  018B50  0F60               	addlw	low _tickCount
 22214  018B52  6ED9               	movwf	fsr2l,c
 22215  018B54  6ADA               	clrf	fsr2h,c
 22216  018B56  50DE               	movf	postinc2,w,c
 22217  018B58  10DE               	iorwf	postinc2,w,c
 22218  018B5A  A4D8               	btfss	status,2,c
 22219  018B5C  D002               	goto	l8031
 22220                           
 22221                           ;timers.c: 24:   return 1;
 22222  018B5E  0E01               	movlw	1
 22223  018B60  D001               	goto	L22
 22224  018B62                     l8031:
 22225                           
 22226                           ;timers.c: 26:  return 0;
 22227  018B62  0E00               	movlw	0
 22228  018B64                     L22:
 22229  018B64  6E35               	movwf	btemp^0,c
 22230                           
 22231                           ; _TimerDone: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, arg
      +                          size = 1, vargsize = 0
 22232  018B66  52E5               	movf	postdec1,f,c
 22233  018B68  0012               	return		;funcret
 22234  018B6A                     __end_of_TimerDone:
 22235                           	opt callstack 0
 22236                           
 22237 ;; *************** function _StartTimer *****************
 22238 ;; Defined at:
 22239 ;;		line 12 in file "timers.c"
 22240 ;; Parameters:    Size  Location     Type
 22241 ;;  timer           1  [STACK] const unsigned char 
 22242 ;;  count           2  [STACK] const unsigned short 
 22243 ;; Auto vars:     Size  Location     Type
 22244 ;;		None
 22245 ;; Return value:  Size  Location     Type
 22246 ;;                  1  [STACK] void 
 22247 ;; Registers used:
 22248 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh
 22249 ;; Tracked objects:
 22250 ;;		On entry : 0/4
 22251 ;;		On exit  : 0/0
 22252 ;;		Unchanged: 0/0
 22253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22258 ;;Total ram usage:        0 bytes
 22259 ;; Hardware stack levels used:    1
 22260 ;; Hardware stack levels required when called:    6
 22261 ;; This function calls:
 22262 ;;		Nothing
 22263 ;; This function is called by:
 22264 ;;		_main
 22265 ;;		_WaitMs
 22266 ;;		_help_button
 22267 ;;		_check_help
 22268 ;; This function uses a reentrant model
 22269 ;;
 22270                           
 22271                           	psect	text83
 22272  0185B8                     __ptext83:
 22273                           	opt callstack 0
 22274  0185B8                     _StartTimer:
 22275                           	opt callstack 21
 22276                           
 22277                           ;timers.c: 12: __attribute__((inline)) void StartTimer(const uint8_t timer, const uint16
      +                          _t count);timers.c: 13: {;timers.c: 14:  tickCount[timer] = count << 1;
 22278                           ;stkvar	_count @ sp[(0)+-3]
 22279                           
 22280                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22281                           ;incstack = 0
 22282  0185B8  0EFD               	movlw	-3
 22283  0185BA  006F FF8C  F03F    	movff	plusw1,btemp+10
 22284  0185C0  0EFE               	movlw	-2
 22285  0185C2  006F FF8C  F040    	movff	plusw1,btemp+11
 22286  0185C8  90D8               	bcf	status,0,c
 22287  0185CA  343F               	rlcf	(btemp+10)^0,w,c
 22288  0185CC  6E3D               	movwf	(btemp+8)^0,c
 22289  0185CE  3440               	rlcf	(btemp+11)^0,w,c
 22290  0185D0  6E3E               	movwf	(btemp+9)^0,c
 22291                           
 22292                           ;stkvar	_timer @ sp[(0)+-1]
 22293  0185D2  0EFF               	movlw	-1
 22294  0185D4  50E3               	movf	plusw1,w,c
 22295  0185D6  0D02               	mullw	2
 22296  0185D8  50F3               	movf	243,w,c
 22297  0185DA  0F60               	addlw	low _tickCount
 22298  0185DC  6ED9               	movwf	fsr2l,c
 22299  0185DE  6ADA               	clrf	fsr2h,c
 22300  0185E0  0060  F0F7  FFDE   	movff	btemp+8,postinc2
 22301  0185E6  0060  F0FB  FFDD   	movff	btemp+9,postdec2
 22302                           
 22303                           ; _StartTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, ar
      +                          gsize = 3, vargsize = 0
 22304  0185EC  52E5               	movf	postdec1,f,c
 22305  0185EE  52E5               	movf	postdec1,f,c
 22306  0185F0  52E5               	movf	postdec1,f,c
 22307  0185F2  0012               	return		;funcret
 22308  0185F4                     __end_of_StartTimer:
 22309                           	opt callstack 0
 22310                           
 22311 ;; *************** function _display_info *****************
 22312 ;; Defined at:
 22313 ;;		line 187 in file "mconfig.c"
 22314 ;; Parameters:    Size  Location     Type
 22315 ;;		None
 22316 ;; Auto vars:     Size  Location     Type
 22317 ;;		None
 22318 ;; Return value:  Size  Location     Type
 22319 ;;                  1  [STACK] enum E16501
 22320 ;; Registers used:
 22321 ;;		btemp
 22322 ;; Tracked objects:
 22323 ;;		On entry : 0/1
 22324 ;;		On exit  : 0/0
 22325 ;;		Unchanged: 0/0
 22326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22331 ;;Total ram usage:        0 bytes
 22332 ;; Hardware stack levels used:    1
 22333 ;; Hardware stack levels required when called:    6
 22334 ;; This function calls:
 22335 ;;		Nothing
 22336 ;; This function is called by:
 22337 ;;		_check_help
 22338 ;; This function uses a reentrant model
 22339 ;;
 22340                           
 22341                           	psect	text84
 22342  018E3E                     __ptext84:
 22343                           	opt callstack 0
 22344  018E3E                     _display_info:
 22345                           	opt callstack 23
 22346                           
 22347                           ;mconfig.c: 189:  return V.response.info;
 22348                           
 22349                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22350                           ;incstack = 0
 22351  018E3E  0060  F68C  F035   	movff	_V+163,btemp	;volatile
 22352                           
 22353                           ; _display_info: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22354  018E44  0012               	return		;funcret
 22355  018E46                     __end_of_display_info:
 22356                           	opt callstack 0
 22357                           
 22358 ;; *************** function _display_help *****************
 22359 ;; Defined at:
 22360 ;;		line 192 in file "mconfig.c"
 22361 ;; Parameters:    Size  Location     Type
 22362 ;;		None
 22363 ;; Auto vars:     Size  Location     Type
 22364 ;;		None
 22365 ;; Return value:  Size  Location     Type
 22366 ;;                  1  [STACK] enum E16501
 22367 ;; Registers used:
 22368 ;;		btemp
 22369 ;; Tracked objects:
 22370 ;;		On entry : 3F/1
 22371 ;;		On exit  : 0/0
 22372 ;;		Unchanged: 0/0
 22373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22375 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22376 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22377 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22378 ;;Total ram usage:        0 bytes
 22379 ;; Hardware stack levels used:    1
 22380 ;; Hardware stack levels required when called:    6
 22381 ;; This function calls:
 22382 ;;		Nothing
 22383 ;; This function is called by:
 22384 ;;		_check_help
 22385 ;; This function uses a reentrant model
 22386 ;;
 22387                           
 22388                           	psect	text85
 22389  018E46                     __ptext85:
 22390                           	opt callstack 0
 22391  018E46                     _display_help:
 22392                           	opt callstack 23
 22393                           
 22394                           ;mconfig.c: 194:  return V.response.help_temp;
 22395                           
 22396                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22397                           ;incstack = 0
 22398  018E46  0060  F690  F035   	movff	_V+164,btemp	;volatile
 22399                           
 22400                           ; _display_help: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, 
      +                          argsize = 0, vargsize = 0
 22401  018E4C  0012               	return		;funcret
 22402  018E4E                     __end_of_display_help:
 22403                           	opt callstack 0
 22404                           
 22405 ;; *************** function _check_adc_scan *****************
 22406 ;; Defined at:
 22407 ;;		line 56 in file "daq.c"
 22408 ;; Parameters:    Size  Location     Type
 22409 ;;		None
 22410 ;; Auto vars:     Size  Location     Type
 22411 ;;		None
 22412 ;; Return value:  Size  Location     Type
 22413 ;;                  1  [STACK] _Bool 
 22414 ;; Registers used:
 22415 ;;		btemp
 22416 ;; Tracked objects:
 22417 ;;		On entry : 0/4
 22418 ;;		On exit  : 0/0
 22419 ;;		Unchanged: 0/0
 22420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22425 ;;Total ram usage:        0 bytes
 22426 ;; Hardware stack levels used:    1
 22427 ;; Hardware stack levels required when called:    6
 22428 ;; This function calls:
 22429 ;;		Nothing
 22430 ;; This function is called by:
 22431 ;;		_main
 22432 ;; This function uses a reentrant model
 22433 ;;
 22434                           
 22435                           	psect	text86
 22436  018E4E                     __ptext86:
 22437                           	opt callstack 0
 22438  018E4E                     _check_adc_scan:
 22439                           	opt callstack 24
 22440                           
 22441                           ;daq.c: 58:  return R.done;
 22442                           
 22443                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22444                           ;incstack = 0
 22445  018E4E  0060  F338  F035   	movff	_R+43,btemp	;volatile
 22446                           
 22447                           ; _check_adc_scan: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 22448  018E54  0012               	return		;funcret
 22449  018E56                     __end_of_check_adc_scan:
 22450                           	opt callstack 0
 22451                           
 22452 ;; *************** function _SYSTEM_Initialize *****************
 22453 ;; Defined at:
 22454 ;;		line 50 in file "mcc_generated_files/mcc.c"
 22455 ;; Parameters:    Size  Location     Type
 22456 ;;		None
 22457 ;; Auto vars:     Size  Location     Type
 22458 ;;		None
 22459 ;; Return value:  Size  Location     Type
 22460 ;;                  1  [STACK] void 
 22461 ;; Registers used:
 22462 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+11
 22463 ;; Tracked objects:
 22464 ;;		On entry : 0/0
 22465 ;;		On exit  : 3F/3C
 22466 ;;		Unchanged: 0/0
 22467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22468 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22469 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22470 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22471 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22472 ;;Total ram usage:        0 bytes
 22473 ;; Hardware stack levels used:    1
 22474 ;; Hardware stack levels required when called:    8
 22475 ;; This function calls:
 22476 ;;		_ADCC_Initialize
 22477 ;;		_CLKREF_Initialize
 22478 ;;		_DMA1_Initialize
 22479 ;;		_DMA2_Initialize
 22480 ;;		_EXT_INT_Initialize
 22481 ;;		_FVR_Initialize
 22482 ;;		_INTERRUPT_Initialize
 22483 ;;		_OSCILLATOR_Initialize
 22484 ;;		_PIN_MANAGER_Initialize
 22485 ;;		_PMD_Initialize
 22486 ;;		_PWM8_Initialize
 22487 ;;		_SPI1_Initialize
 22488 ;;		_TMR2_Initialize
 22489 ;;		_TMR5_Initialize
 22490 ;;		_TMR6_Initialize
 22491 ;;		_UART1_Initialize
 22492 ;;		_UART2_Initialize
 22493 ;; This function is called by:
 22494 ;;		_main
 22495 ;; This function uses a reentrant model
 22496 ;;
 22497                           
 22498                           	psect	text87
 22499  0183DC                     __ptext87:
 22500                           	opt callstack 0
 22501  0183DC                     _SYSTEM_Initialize:
 22502                           	opt callstack 22
 22503                           
 22504                           ;mcc_generated_files/mcc.c: 52:     INTERRUPT_Initialize();
 22505                           
 22506                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22507                           ;incstack = 0
 22508  0183DC  ECB4  F0BF         	call	_INTERRUPT_Initialize	;wreg free
 22509                           
 22510                           ; BSR set to: 57
 22511                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
 22512  0183E0  ECC4  F0C6         	call	_PMD_Initialize	;wreg free
 22513                           
 22514                           ; BSR set to: 57
 22515                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
 22516  0183E4  EC95  F0BD         	call	_PIN_MANAGER_Initialize	;wreg free
 22517                           
 22518                           ; BSR set to: 58
 22519                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
 22520  0183E8  ECB9  F0C6         	call	_OSCILLATOR_Initialize	;wreg free
 22521                           
 22522                           ; BSR set to: 57
 22523                           ;mcc_generated_files/mcc.c: 56:     FVR_Initialize();
 22524  0183EC  EC2B  F0C7         	call	_FVR_Initialize	;wreg free
 22525                           
 22526                           ; BSR set to: 62
 22527                           ;mcc_generated_files/mcc.c: 57:     ADCC_Initialize();
 22528  0183F0  EC4B  F0BF         	call	_ADCC_Initialize	;wreg free
 22529                           
 22530                           ;mcc_generated_files/mcc.c: 58:     TMR2_Initialize();
 22531  0183F4  EC97  F0C6         	call	_TMR2_Initialize	;wreg free
 22532                           
 22533                           ; BSR set to: 57
 22534                           ;mcc_generated_files/mcc.c: 59:     PWM8_Initialize();
 22535  0183F8  ECAE  F0C6         	call	_PWM8_Initialize	;wreg free
 22536                           
 22537                           ; BSR set to: 63
 22538                           ;mcc_generated_files/mcc.c: 60:     EXT_INT_Initialize();
 22539  0183FC  EC82  F0C3         	call	_EXT_INT_Initialize	;wreg free
 22540                           
 22541                           ; BSR set to: 57
 22542                           ;mcc_generated_files/mcc.c: 61:     TMR6_Initialize();
 22543  018400  EC27  F0C4         	call	_TMR6_Initialize	;wreg free
 22544                           
 22545                           ;mcc_generated_files/mcc.c: 62:     TMR5_Initialize();
 22546  018404  EC11  F0C2         	call	_TMR5_Initialize	;wreg free
 22547                           
 22548                           ;mcc_generated_files/mcc.c: 63:     UART1_Initialize();
 22549  018408  ECE7  F0BF         	call	_UART1_Initialize	;wreg free
 22550                           
 22551                           ; BSR set to: 57
 22552                           ;mcc_generated_files/mcc.c: 64:     UART2_Initialize();
 22553  01840C  EC7B  F0C0         	call	_UART2_Initialize	;wreg free
 22554                           
 22555                           ; BSR set to: 57
 22556                           ;mcc_generated_files/mcc.c: 65:     SPI1_Initialize();
 22557  018410  ECA3  F0C6         	call	_SPI1_Initialize	;wreg free
 22558                           
 22559                           ; BSR set to: 61
 22560                           ;mcc_generated_files/mcc.c: 66:     DMA2_Initialize();
 22561  018414  EC05  F0C1         	call	_DMA2_Initialize	;wreg free
 22562                           
 22563                           ; BSR set to: 59
 22564                           ;mcc_generated_files/mcc.c: 67:     DMA1_Initialize();
 22565  018418  ECE2  F0BE         	call	_DMA1_Initialize	;wreg free
 22566                           
 22567                           ; BSR set to: 59
 22568                           ;mcc_generated_files/mcc.c: 68:     CLKREF_Initialize();
 22569  01841C  EC05  F0C7         	call	_CLKREF_Initialize	;wreg free
 22570                           
 22571                           ; BSR set to: 60
 22572                           ; _SYSTEM_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 22573  018420  0012               	return		;funcret
 22574  018422                     __end_of_SYSTEM_Initialize:
 22575                           	opt callstack 0
 22576                           
 22577 ;; *************** function _UART2_Initialize *****************
 22578 ;; Defined at:
 22579 ;;		line 78 in file "mcc_generated_files/uart2.c"
 22580 ;; Parameters:    Size  Location     Type
 22581 ;;		None
 22582 ;; Auto vars:     Size  Location     Type
 22583 ;;		None
 22584 ;; Return value:  Size  Location     Type
 22585 ;;                  1  [STACK] void 
 22586 ;; Registers used:
 22587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22588 ;; Tracked objects:
 22589 ;;		On entry : 3F/39
 22590 ;;		On exit  : 3F/39
 22591 ;;		Unchanged: 0/0
 22592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22594 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22596 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22597 ;;Total ram usage:        0 bytes
 22598 ;; Hardware stack levels used:    1
 22599 ;; Hardware stack levels required when called:    7
 22600 ;; This function calls:
 22601 ;;		_UART2_SetRxInterruptHandler
 22602 ;;		_UART2_SetTxInterruptHandler
 22603 ;; This function is called by:
 22604 ;;		_SYSTEM_Initialize
 22605 ;; This function uses a reentrant model
 22606 ;;
 22607                           
 22608                           	psect	text88
 22609  0180F6                     __ptext88:
 22610                           	opt callstack 0
 22611  0180F6                     _UART2_Initialize:
 22612                           	opt callstack 22
 22613                           
 22614                           ;mcc_generated_files/uart2.c: 81:     PIE6bits.U2RXIE = 0;
 22615                           
 22616                           ; BSR set to: 60
 22617                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22618                           ;incstack = 0
 22619  0180F6  0139               	movlb	57	; () banked
 22620  0180F8  9596               	bcf	150,2,b	;volatile
 22621                           
 22622                           ; BSR set to: 57
 22623                           ;mcc_generated_files/uart2.c: 82:     UART2_SetRxInterruptHandler(UART2_Receive_ISR);
 22624  0180FA  0E8A               	movlw	low _UART2_Receive_ISR
 22625  0180FC  6EE6               	movwf	postinc1,c
 22626  0180FE  0E8C               	movlw	high _UART2_Receive_ISR
 22627  018100  6EE6               	movwf	postinc1,c
 22628  018102  0E01               	movlw	low (_UART2_Receive_ISR shr (0+16))
 22629  018104  6EE6               	movwf	postinc1,c
 22630  018106  EC8C  F0C4         	call	_UART2_SetRxInterruptHandler	;wreg free
 22631                           
 22632                           ;mcc_generated_files/uart2.c: 83:     PIE6bits.U2TXIE = 0;
 22633  01810A  0139               	movlb	57	; () banked
 22634  01810C  9796               	bcf	150,3,b	;volatile
 22635                           
 22636                           ;mcc_generated_files/uart2.c: 84:     UART2_SetTxInterruptHandler(UART2_Transmit_ISR);
 22637  01810E  0E22               	movlw	low _UART2_Transmit_ISR
 22638  018110  6EE6               	movwf	postinc1,c
 22639  018112  0E88               	movlw	high _UART2_Transmit_ISR
 22640  018114  6EE6               	movwf	postinc1,c
 22641  018116  0E01               	movlw	low (_UART2_Transmit_ISR shr (0+16))
 22642  018118  6EE6               	movwf	postinc1,c
 22643  01811A  EC78  F0C4         	call	_UART2_SetTxInterruptHandler	;wreg free
 22644                           
 22645                           ;mcc_generated_files/uart2.c: 89:     U2P1L = 0x00;
 22646  01811E  013D               	movlb	61	; () banked
 22647  018120  6BD4               	clrf	212,b	;volatile
 22648                           
 22649                           ; BSR set to: 61
 22650                           ;mcc_generated_files/uart2.c: 92:     U2P2L = 0x00;
 22651  018122  6BD6               	clrf	214,b	;volatile
 22652                           
 22653                           ; BSR set to: 61
 22654                           ;mcc_generated_files/uart2.c: 95:     U2P3L = 0x00;
 22655  018124  6BD8               	clrf	216,b	;volatile
 22656                           
 22657                           ; BSR set to: 61
 22658                           ;mcc_generated_files/uart2.c: 98:     U2CON0 = 0xB0;
 22659  018126  0EB0               	movlw	176
 22660  018128  6FDA               	movwf	218,b	;volatile
 22661                           
 22662                           ; BSR set to: 61
 22663                           ;mcc_generated_files/uart2.c: 101:     U2CON1 = 0x80;
 22664  01812A  0E80               	movlw	128
 22665  01812C  6FDB               	movwf	219,b	;volatile
 22666                           
 22667                           ; BSR set to: 61
 22668                           ;mcc_generated_files/uart2.c: 104:     U2CON2 = 0x00;
 22669  01812E  6BDC               	clrf	220,b	;volatile
 22670                           
 22671                           ; BSR set to: 61
 22672                           ;mcc_generated_files/uart2.c: 107:     U2BRGL = 0x82;
 22673  018130  0E82               	movlw	130
 22674  018132  6FDD               	movwf	221,b	;volatile
 22675                           
 22676                           ; BSR set to: 61
 22677                           ;mcc_generated_files/uart2.c: 110:     U2BRGH = 0x06;
 22678  018134  0E06               	movlw	6
 22679  018136  6FDE               	movwf	222,b	;volatile
 22680                           
 22681                           ; BSR set to: 61
 22682                           ;mcc_generated_files/uart2.c: 113:     U2FIFO = 0x00;
 22683  018138  6BDF               	clrf	223,b	;volatile
 22684                           
 22685                           ; BSR set to: 61
 22686                           ;mcc_generated_files/uart2.c: 116:     U2UIR = 0x00;
 22687  01813A  6BE0               	clrf	224,b	;volatile
 22688                           
 22689                           ; BSR set to: 61
 22690                           ;mcc_generated_files/uart2.c: 119:     U2ERRIR = 0x00;
 22691  01813C  6BE1               	clrf	225,b	;volatile
 22692                           
 22693                           ; BSR set to: 61
 22694                           ;mcc_generated_files/uart2.c: 122:     U2ERRIE = 0x00;
 22695  01813E  6BE2               	clrf	226,b	;volatile
 22696                           
 22697                           ; BSR set to: 61
 22698                           ;mcc_generated_files/uart2.c: 126:     uart2TxHead = 0;
 22699  018140  6A2E               	clrf	_uart2TxHead^0,c	;volatile
 22700                           
 22701                           ; BSR set to: 61
 22702                           ;mcc_generated_files/uart2.c: 127:     uart2TxTail = 0;
 22703  018142  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 22704                           
 22705                           ; BSR set to: 61
 22706                           ;mcc_generated_files/uart2.c: 128:     uart2TxBufferRemaining = sizeof(uart2TxBuffer);
 22707  018144  0E40               	movlw	64
 22708  018146  6E2C               	movwf	_uart2TxBufferRemaining^0,c	;volatile
 22709                           
 22710                           ; BSR set to: 61
 22711                           ;mcc_generated_files/uart2.c: 129:     uart2RxHead = 0;
 22712  018148  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 22713                           
 22714                           ; BSR set to: 61
 22715                           ;mcc_generated_files/uart2.c: 130:     uart2RxTail = 0;
 22716  01814A  6A2A               	clrf	_uart2RxTail^0,c	;volatile
 22717                           
 22718                           ; BSR set to: 61
 22719                           ;mcc_generated_files/uart2.c: 131:     uart2RxCount = 0;
 22720  01814C  6A29               	clrf	_uart2RxCount^0,c	;volatile
 22721                           
 22722                           ; BSR set to: 61
 22723                           ;mcc_generated_files/uart2.c: 134:     PIE6bits.U2RXIE = 1;
 22724  01814E  0139               	movlb	57	; () banked
 22725  018150  8596               	bsf	150,2,b	;volatile
 22726                           
 22727                           ; BSR set to: 57
 22728                           ; _UART2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 22729  018152  0012               	return		;funcret
 22730  018154                     __end_of_UART2_Initialize:
 22731                           	opt callstack 0
 22732                           
 22733 ;; *************** function _UART2_SetTxInterruptHandler *****************
 22734 ;; Defined at:
 22735 ;;		line 252 in file "mcc_generated_files/uart2.c"
 22736 ;; Parameters:    Size  Location     Type
 22737 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22738 ;;		 -> UART2_Transmit_ISR(1), 
 22739 ;; Auto vars:     Size  Location     Type
 22740 ;;		None
 22741 ;; Return value:  Size  Location     Type
 22742 ;;                  1  [STACK] void 
 22743 ;; Registers used:
 22744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22745 ;; Tracked objects:
 22746 ;;		On entry : 3F/39
 22747 ;;		On exit  : 0/0
 22748 ;;		Unchanged: 0/0
 22749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22751 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22753 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22754 ;;Total ram usage:        0 bytes
 22755 ;; Hardware stack levels used:    1
 22756 ;; Hardware stack levels required when called:    6
 22757 ;; This function calls:
 22758 ;;		Nothing
 22759 ;; This function is called by:
 22760 ;;		_UART2_Initialize
 22761 ;; This function uses a reentrant model
 22762 ;;
 22763                           
 22764                           	psect	text89
 22765  0188F0                     __ptext89:
 22766                           	opt callstack 0
 22767  0188F0                     _UART2_SetTxInterruptHandler:
 22768                           	opt callstack 22
 22769                           
 22770                           ;mcc_generated_files/uart2.c: 253:     UART2_TxInterruptHandler = InterruptHandler;
 22771                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22772                           
 22773                           ; BSR set to: 57
 22774                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22775                           ;incstack = 0
 22776  0188F0  50E1               	movf	fsr1l,w,c
 22777  0188F2  0FFD               	addlw	-3
 22778  0188F4  6ED9               	movwf	fsr2l,c
 22779  0188F6  50E2               	movf	fsr1h,w,c
 22780  0188F8  6EDA               	movwf	fsr2h,c
 22781  0188FA  0EFF               	movlw	255
 22782  0188FC  22DA               	addwfc	fsr2h,f,c
 22783  0188FE  006F FF78  F010    	movff	postinc2,_UART2_TxInterruptHandler
 22784  018904  006F FF78  F011    	movff	postinc2,_UART2_TxInterruptHandler+1
 22785  01890A  006F FF74  F012    	movff	postdec2,_UART2_TxInterruptHandler+2
 22786                           
 22787                           ; _UART2_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22788  018910  52E5               	movf	postdec1,f,c
 22789  018912  52E5               	movf	postdec1,f,c
 22790  018914  52E5               	movf	postdec1,f,c
 22791  018916  0012               	return		;funcret
 22792  018918                     __end_of_UART2_SetTxInterruptHandler:
 22793                           	opt callstack 0
 22794                           
 22795 ;; *************** function _UART2_SetRxInterruptHandler *****************
 22796 ;; Defined at:
 22797 ;;		line 248 in file "mcc_generated_files/uart2.c"
 22798 ;; Parameters:    Size  Location     Type
 22799 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 22800 ;;		 -> UART2_Receive_ISR(1), 
 22801 ;; Auto vars:     Size  Location     Type
 22802 ;;		None
 22803 ;; Return value:  Size  Location     Type
 22804 ;;                  1  [STACK] void 
 22805 ;; Registers used:
 22806 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 22807 ;; Tracked objects:
 22808 ;;		On entry : 3F/39
 22809 ;;		On exit  : 0/0
 22810 ;;		Unchanged: 0/0
 22811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22815 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22816 ;;Total ram usage:        0 bytes
 22817 ;; Hardware stack levels used:    1
 22818 ;; Hardware stack levels required when called:    6
 22819 ;; This function calls:
 22820 ;;		Nothing
 22821 ;; This function is called by:
 22822 ;;		_UART2_Initialize
 22823 ;; This function uses a reentrant model
 22824 ;;
 22825                           
 22826                           	psect	text90
 22827  018918                     __ptext90:
 22828                           	opt callstack 0
 22829  018918                     _UART2_SetRxInterruptHandler:
 22830                           	opt callstack 22
 22831                           
 22832                           ;mcc_generated_files/uart2.c: 249:     UART2_RxInterruptHandler = InterruptHandler;
 22833                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 22834                           
 22835                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22836                           ;incstack = 0
 22837  018918  50E1               	movf	fsr1l,w,c
 22838  01891A  0FFD               	addlw	-3
 22839  01891C  6ED9               	movwf	fsr2l,c
 22840  01891E  50E2               	movf	fsr1h,w,c
 22841  018920  6EDA               	movwf	fsr2h,c
 22842  018922  0EFF               	movlw	255
 22843  018924  22DA               	addwfc	fsr2h,f,c
 22844  018926  006F FF78  F013    	movff	postinc2,_UART2_RxInterruptHandler
 22845  01892C  006F FF78  F014    	movff	postinc2,_UART2_RxInterruptHandler+1
 22846  018932  006F FF74  F015    	movff	postdec2,_UART2_RxInterruptHandler+2
 22847                           
 22848                           ; _UART2_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 22849  018938  52E5               	movf	postdec1,f,c
 22850  01893A  52E5               	movf	postdec1,f,c
 22851  01893C  52E5               	movf	postdec1,f,c
 22852  01893E  0012               	return		;funcret
 22853  018940                     __end_of_UART2_SetRxInterruptHandler:
 22854                           	opt callstack 0
 22855                           
 22856 ;; *************** function _UART1_Initialize *****************
 22857 ;; Defined at:
 22858 ;;		line 79 in file "mcc_generated_files/uart1.c"
 22859 ;; Parameters:    Size  Location     Type
 22860 ;;		None
 22861 ;; Auto vars:     Size  Location     Type
 22862 ;;		None
 22863 ;; Return value:  Size  Location     Type
 22864 ;;                  1  [STACK] void 
 22865 ;; Registers used:
 22866 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 22867 ;; Tracked objects:
 22868 ;;		On entry : 0/39
 22869 ;;		On exit  : 3F/39
 22870 ;;		Unchanged: 0/0
 22871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 22872 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22875 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 22876 ;;Total ram usage:        0 bytes
 22877 ;; Hardware stack levels used:    1
 22878 ;; Hardware stack levels required when called:    7
 22879 ;; This function calls:
 22880 ;;		_UART1_SetRxInterruptHandler
 22881 ;;		_UART1_SetTxInterruptHandler
 22882 ;; This function is called by:
 22883 ;;		_SYSTEM_Initialize
 22884 ;; This function uses a reentrant model
 22885 ;;
 22886                           
 22887                           	psect	text91
 22888  017FCE                     __ptext91:
 22889                           	opt callstack 0
 22890  017FCE                     _UART1_Initialize:
 22891                           	opt callstack 22
 22892                           
 22893                           ;mcc_generated_files/uart1.c: 82:  PIE3bits.U1RXIE = 0;
 22894                           
 22895                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 22896                           ;incstack = 0
 22897  017FCE  0139               	movlb	57	; () banked
 22898  017FD0  9793               	bcf	147,3,b	;volatile
 22899                           
 22900                           ; BSR set to: 57
 22901                           ;mcc_generated_files/uart1.c: 83:  UART1_SetRxInterruptHandler(UART1_Receive_ISR);
 22902  017FD2  0E6C               	movlw	low _UART1_Receive_ISR
 22903  017FD4  6EE6               	movwf	postinc1,c
 22904  017FD6  0E8C               	movlw	high _UART1_Receive_ISR
 22905  017FD8  6EE6               	movwf	postinc1,c
 22906  017FDA  0E01               	movlw	low (_UART1_Receive_ISR shr (0+16))
 22907  017FDC  6EE6               	movwf	postinc1,c
 22908  017FDE  ECB4  F0C4         	call	_UART1_SetRxInterruptHandler	;wreg free
 22909                           
 22910                           ;mcc_generated_files/uart1.c: 84:  PIE3bits.U1TXIE = 0;
 22911  017FE2  0139               	movlb	57	; () banked
 22912  017FE4  9993               	bcf	147,4,b	;volatile
 22913                           
 22914                           ;mcc_generated_files/uart1.c: 85:  UART1_SetTxInterruptHandler(UART1_Transmit_ISR);
 22915  017FE6  0EF6               	movlw	low _UART1_Transmit_ISR
 22916  017FE8  6EE6               	movwf	postinc1,c
 22917  017FEA  0E87               	movlw	high _UART1_Transmit_ISR
 22918  017FEC  6EE6               	movwf	postinc1,c
 22919  017FEE  0E01               	movlw	low (_UART1_Transmit_ISR shr (0+16))
 22920  017FF0  6EE6               	movwf	postinc1,c
 22921  017FF2  ECA0  F0C4         	call	_UART1_SetTxInterruptHandler	;wreg free
 22922                           
 22923                           ;mcc_generated_files/uart1.c: 90:  U1P1L = 0x00;
 22924  017FF6  013D               	movlb	61	; () banked
 22925  017FF8  6BEC               	clrf	236,b	;volatile
 22926                           
 22927                           ; BSR set to: 61
 22928                           ;mcc_generated_files/uart1.c: 93:  U1P1H = 0x00;
 22929  017FFA  6BED               	clrf	237,b	;volatile
 22930                           
 22931                           ; BSR set to: 61
 22932                           ;mcc_generated_files/uart1.c: 96:  U1P2L = 0x00;
 22933  017FFC  6BEE               	clrf	238,b	;volatile
 22934                           
 22935                           ; BSR set to: 61
 22936                           ;mcc_generated_files/uart1.c: 99:  U1P2H = 0x00;
 22937  017FFE  6BEF               	clrf	239,b	;volatile
 22938                           
 22939                           ; BSR set to: 61
 22940                           ;mcc_generated_files/uart1.c: 102:  U1P3L = 0x00;
 22941  018000  6BF0               	clrf	240,b	;volatile
 22942                           
 22943                           ; BSR set to: 61
 22944                           ;mcc_generated_files/uart1.c: 105:  U1P3H = 0x00;
 22945  018002  6BF1               	clrf	241,b	;volatile
 22946                           
 22947                           ; BSR set to: 61
 22948                           ;mcc_generated_files/uart1.c: 108:  U1CON0 = 0xB0;
 22949  018004  0EB0               	movlw	176
 22950  018006  6FF2               	movwf	242,b	;volatile
 22951                           
 22952                           ; BSR set to: 61
 22953                           ;mcc_generated_files/uart1.c: 111:  U1CON1 = 0x80;
 22954  018008  0E80               	movlw	128
 22955  01800A  6FF3               	movwf	243,b	;volatile
 22956                           
 22957                           ; BSR set to: 61
 22958                           ;mcc_generated_files/uart1.c: 114:  U1CON2 = 0x00;
 22959  01800C  6BF4               	clrf	244,b	;volatile
 22960                           
 22961                           ; BSR set to: 61
 22962                           ;mcc_generated_files/uart1.c: 117:  U1BRGL = 0x82;
 22963  01800E  0E82               	movlw	130
 22964  018010  6FF5               	movwf	245,b	;volatile
 22965                           
 22966                           ; BSR set to: 61
 22967                           ;mcc_generated_files/uart1.c: 120:  U1BRGH = 0x06;
 22968  018012  0E06               	movlw	6
 22969  018014  6FF6               	movwf	246,b	;volatile
 22970                           
 22971                           ; BSR set to: 61
 22972                           ;mcc_generated_files/uart1.c: 123:  U1FIFO = 0x00;
 22973  018016  6BF7               	clrf	247,b	;volatile
 22974                           
 22975                           ; BSR set to: 61
 22976                           ;mcc_generated_files/uart1.c: 126:  U1UIR = 0x00;
 22977  018018  6BF8               	clrf	248,b	;volatile
 22978                           
 22979                           ; BSR set to: 61
 22980                           ;mcc_generated_files/uart1.c: 129:  U1ERRIR = 0x00;
 22981  01801A  6BF9               	clrf	249,b	;volatile
 22982                           
 22983                           ; BSR set to: 61
 22984                           ;mcc_generated_files/uart1.c: 132:  U1ERRIE = 0x00;
 22985  01801C  6BFA               	clrf	250,b	;volatile
 22986                           
 22987                           ; BSR set to: 61
 22988                           ;mcc_generated_files/uart1.c: 136:  uart1TxHead = 0;
 22989  01801E  6A34               	clrf	_uart1TxHead^0,c	;volatile
 22990                           
 22991                           ; BSR set to: 61
 22992                           ;mcc_generated_files/uart1.c: 137:  uart1TxTail = 0;
 22993  018020  6A33               	clrf	_uart1TxTail^0,c	;volatile
 22994                           
 22995                           ; BSR set to: 61
 22996                           ;mcc_generated_files/uart1.c: 138:  uart1TxBufferRemaining = sizeof(uart1TxBuffer);
 22997  018022  0E40               	movlw	64
 22998  018024  6E32               	movwf	_uart1TxBufferRemaining^0,c	;volatile
 22999                           
 23000                           ; BSR set to: 61
 23001                           ;mcc_generated_files/uart1.c: 139:  uart1RxHead = 0;
 23002  018026  6A31               	clrf	_uart1RxHead^0,c	;volatile
 23003                           
 23004                           ; BSR set to: 61
 23005                           ;mcc_generated_files/uart1.c: 140:  uart1RxTail = 0;
 23006  018028  6A30               	clrf	_uart1RxTail^0,c	;volatile
 23007                           
 23008                           ; BSR set to: 61
 23009                           ;mcc_generated_files/uart1.c: 141:  uart1RxCount = 0;
 23010  01802A  6A2F               	clrf	_uart1RxCount^0,c	;volatile
 23011                           
 23012                           ; BSR set to: 61
 23013                           ;mcc_generated_files/uart1.c: 144:  PIE3bits.U1RXIE = 1;
 23014  01802C  0139               	movlb	57	; () banked
 23015  01802E  8793               	bsf	147,3,b	;volatile
 23016                           
 23017                           ; BSR set to: 57
 23018                           ; _UART1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize =
      +                           0, argsize = 0, vargsize = 0
 23019  018030  0012               	return		;funcret
 23020  018032                     __end_of_UART1_Initialize:
 23021                           	opt callstack 0
 23022                           
 23023 ;; *************** function _UART1_SetTxInterruptHandler *****************
 23024 ;; Defined at:
 23025 ;;		line 246 in file "mcc_generated_files/uart1.c"
 23026 ;; Parameters:    Size  Location     Type
 23027 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23028 ;;		 -> UART1_Transmit_ISR(1), 
 23029 ;; Auto vars:     Size  Location     Type
 23030 ;;		None
 23031 ;; Return value:  Size  Location     Type
 23032 ;;                  1  [STACK] void 
 23033 ;; Registers used:
 23034 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23035 ;; Tracked objects:
 23036 ;;		On entry : 3F/39
 23037 ;;		On exit  : 0/0
 23038 ;;		Unchanged: 0/0
 23039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23042 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23043 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23044 ;;Total ram usage:        0 bytes
 23045 ;; Hardware stack levels used:    1
 23046 ;; Hardware stack levels required when called:    6
 23047 ;; This function calls:
 23048 ;;		Nothing
 23049 ;; This function is called by:
 23050 ;;		_UART1_Initialize
 23051 ;; This function uses a reentrant model
 23052 ;;
 23053                           
 23054                           	psect	text92
 23055  018940                     __ptext92:
 23056                           	opt callstack 0
 23057  018940                     _UART1_SetTxInterruptHandler:
 23058                           	opt callstack 22
 23059                           
 23060                           ;mcc_generated_files/uart1.c: 246: void UART1_SetTxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 247: {;mcc_generated_files/uart1.c: 248:  UART
      +                          1_TxInterruptHandler = InterruptHandler;
 23061                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23062                           
 23063                           ; BSR set to: 57
 23064                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23065                           ;incstack = 0
 23066  018940  50E1               	movf	fsr1l,w,c
 23067  018942  0FFD               	addlw	-3
 23068  018944  6ED9               	movwf	fsr2l,c
 23069  018946  50E2               	movf	fsr1h,w,c
 23070  018948  6EDA               	movwf	fsr2h,c
 23071  01894A  0EFF               	movlw	255
 23072  01894C  22DA               	addwfc	fsr2h,f,c
 23073  01894E  006F FF78  F00A    	movff	postinc2,_UART1_TxInterruptHandler
 23074  018954  006F FF78  F00B    	movff	postinc2,_UART1_TxInterruptHandler+1
 23075  01895A  006F FF74  F00C    	movff	postdec2,_UART1_TxInterruptHandler+2
 23076                           
 23077                           ; _UART1_SetTxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23078  018960  52E5               	movf	postdec1,f,c
 23079  018962  52E5               	movf	postdec1,f,c
 23080  018964  52E5               	movf	postdec1,f,c
 23081  018966  0012               	return		;funcret
 23082  018968                     __end_of_UART1_SetTxInterruptHandler:
 23083                           	opt callstack 0
 23084                           
 23085 ;; *************** function _UART1_SetRxInterruptHandler *****************
 23086 ;; Defined at:
 23087 ;;		line 241 in file "mcc_generated_files/uart1.c"
 23088 ;; Parameters:    Size  Location     Type
 23089 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23090 ;;		 -> UART1_Receive_ISR(1), 
 23091 ;; Auto vars:     Size  Location     Type
 23092 ;;		None
 23093 ;; Return value:  Size  Location     Type
 23094 ;;                  1  [STACK] void 
 23095 ;; Registers used:
 23096 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23097 ;; Tracked objects:
 23098 ;;		On entry : 3F/39
 23099 ;;		On exit  : 0/0
 23100 ;;		Unchanged: 0/0
 23101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23106 ;;Total ram usage:        0 bytes
 23107 ;; Hardware stack levels used:    1
 23108 ;; Hardware stack levels required when called:    6
 23109 ;; This function calls:
 23110 ;;		Nothing
 23111 ;; This function is called by:
 23112 ;;		_UART1_Initialize
 23113 ;; This function uses a reentrant model
 23114 ;;
 23115                           
 23116                           	psect	text93
 23117  018968                     __ptext93:
 23118                           	opt callstack 0
 23119  018968                     _UART1_SetRxInterruptHandler:
 23120                           	opt callstack 22
 23121                           
 23122                           ;mcc_generated_files/uart1.c: 241: void UART1_SetRxInterruptHandler(void (* InterruptHan
      +                          dler)(void));mcc_generated_files/uart1.c: 242: {;mcc_generated_files/uart1.c: 243:  UART
      +                          1_RxInterruptHandler = InterruptHandler;
 23123                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23124                           
 23125                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23126                           ;incstack = 0
 23127  018968  50E1               	movf	fsr1l,w,c
 23128  01896A  0FFD               	addlw	-3
 23129  01896C  6ED9               	movwf	fsr2l,c
 23130  01896E  50E2               	movf	fsr1h,w,c
 23131  018970  6EDA               	movwf	fsr2h,c
 23132  018972  0EFF               	movlw	255
 23133  018974  22DA               	addwfc	fsr2h,f,c
 23134  018976  006F FF78  F00D    	movff	postinc2,_UART1_RxInterruptHandler
 23135  01897C  006F FF78  F00E    	movff	postinc2,_UART1_RxInterruptHandler+1
 23136  018982  006F FF74  F00F    	movff	postdec2,_UART1_RxInterruptHandler+2
 23137                           
 23138                           ; _UART1_SetRxInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 23139  018988  52E5               	movf	postdec1,f,c
 23140  01898A  52E5               	movf	postdec1,f,c
 23141  01898C  52E5               	movf	postdec1,f,c
 23142  01898E  0012               	return		;funcret
 23143  018990                     __end_of_UART1_SetRxInterruptHandler:
 23144                           	opt callstack 0
 23145                           
 23146 ;; *************** function _TMR6_Initialize *****************
 23147 ;; Defined at:
 23148 ;;		line 70 in file "mcc_generated_files/tmr6.c"
 23149 ;; Parameters:    Size  Location     Type
 23150 ;;		None
 23151 ;; Auto vars:     Size  Location     Type
 23152 ;;		None
 23153 ;; Return value:  Size  Location     Type
 23154 ;;                  1  [STACK] void 
 23155 ;; Registers used:
 23156 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 23157 ;; Tracked objects:
 23158 ;;		On entry : 3F/39
 23159 ;;		On exit  : 0/0
 23160 ;;		Unchanged: 0/0
 23161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23162 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23163 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23164 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23165 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23166 ;;Total ram usage:        0 bytes
 23167 ;; Hardware stack levels used:    1
 23168 ;; Hardware stack levels required when called:    7
 23169 ;; This function calls:
 23170 ;;		_TMR6_SetInterruptHandler
 23171 ;; This function is called by:
 23172 ;;		_SYSTEM_Initialize
 23173 ;; This function uses a reentrant model
 23174 ;;
 23175                           
 23176                           	psect	text94
 23177  01884E                     __ptext94:
 23178                           	opt callstack 0
 23179  01884E                     _TMR6_Initialize:
 23180                           	opt callstack 22
 23181                           
 23182                           ;mcc_generated_files/tmr6.c: 75:     T6CLKCON = 0x01;
 23183                           
 23184                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23185                           ;incstack = 0
 23186  01884E  0E01               	movlw	1
 23187  018850  6E96               	movwf	150,c	;volatile
 23188                           
 23189                           ;mcc_generated_files/tmr6.c: 78:     T6HLT = 0x00;
 23190  018852  6A95               	clrf	149,c	;volatile
 23191                           
 23192                           ;mcc_generated_files/tmr6.c: 81:     T6RST = 0x00;
 23193  018854  6A97               	clrf	151,c	;volatile
 23194                           
 23195                           ;mcc_generated_files/tmr6.c: 84:     T6PR = 0x7C;
 23196  018856  0E7C               	movlw	124
 23197  018858  6E93               	movwf	147,c	;volatile
 23198                           
 23199                           ;mcc_generated_files/tmr6.c: 87:     T6TMR = 0x00;
 23200  01885A  6A92               	clrf	146,c	;volatile
 23201                           
 23202                           ;mcc_generated_files/tmr6.c: 90:     PIR9bits.TMR6IF = 0;
 23203  01885C  0139               	movlb	57	; () banked
 23204  01885E  91A9               	bcf	169,0,b	;volatile
 23205                           
 23206                           ; BSR set to: 57
 23207                           ;mcc_generated_files/tmr6.c: 93:     PIE9bits.TMR6IE = 1;
 23208  018860  8199               	bsf	153,0,b	;volatile
 23209                           
 23210                           ; BSR set to: 57
 23211                           ;mcc_generated_files/tmr6.c: 96:     TMR6_SetInterruptHandler(TMR6_DefaultInterruptHandl
      +                          er);
 23212  018862  0E68               	movlw	low _TMR6_DefaultInterruptHandler
 23213  018864  6EE6               	movwf	postinc1,c
 23214  018866  0E84               	movlw	high _TMR6_DefaultInterruptHandler
 23215  018868  6EE6               	movwf	postinc1,c
 23216  01886A  0E01               	movlw	low (_TMR6_DefaultInterruptHandler shr (0+16))
 23217  01886C  6EE6               	movwf	postinc1,c
 23218  01886E  ECC8  F0C4         	call	_TMR6_SetInterruptHandler	;wreg free
 23219                           
 23220                           ;mcc_generated_files/tmr6.c: 99:     T6CON = 0xE0;
 23221  018872  0EE0               	movlw	224
 23222  018874  6E94               	movwf	148,c	;volatile
 23223                           
 23224                           ; _TMR6_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23225  018876  0012               	return		;funcret
 23226  018878                     __end_of_TMR6_Initialize:
 23227                           	opt callstack 0
 23228                           
 23229 ;; *************** function _TMR6_SetInterruptHandler *****************
 23230 ;; Defined at:
 23231 ;;		line 192 in file "mcc_generated_files/tmr6.c"
 23232 ;; Parameters:    Size  Location     Type
 23233 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23234 ;;		 -> TMR6_DefaultInterruptHandler(1), 
 23235 ;; Auto vars:     Size  Location     Type
 23236 ;;		None
 23237 ;; Return value:  Size  Location     Type
 23238 ;;                  1  [STACK] void 
 23239 ;; Registers used:
 23240 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23241 ;; Tracked objects:
 23242 ;;		On entry : 3F/39
 23243 ;;		On exit  : 0/0
 23244 ;;		Unchanged: 0/0
 23245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23250 ;;Total ram usage:        0 bytes
 23251 ;; Hardware stack levels used:    1
 23252 ;; Hardware stack levels required when called:    6
 23253 ;; This function calls:
 23254 ;;		Nothing
 23255 ;; This function is called by:
 23256 ;;		_TMR6_Initialize
 23257 ;; This function uses a reentrant model
 23258 ;;
 23259                           
 23260                           	psect	text95
 23261  018990                     __ptext95:
 23262                           	opt callstack 0
 23263  018990                     _TMR6_SetInterruptHandler:
 23264                           	opt callstack 22
 23265                           
 23266                           ;mcc_generated_files/tmr6.c: 193:     TMR6_InterruptHandler = InterruptHandler;
 23267                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23268                           
 23269                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23270                           ;incstack = 0
 23271  018990  50E1               	movf	fsr1l,w,c
 23272  018992  0FFD               	addlw	-3
 23273  018994  6ED9               	movwf	fsr2l,c
 23274  018996  50E2               	movf	fsr1h,w,c
 23275  018998  6EDA               	movwf	fsr2h,c
 23276  01899A  0EFF               	movlw	255
 23277  01899C  22DA               	addwfc	fsr2h,f,c
 23278  01899E  006F FF78  F001    	movff	postinc2,_TMR6_InterruptHandler
 23279  0189A4  006F FF78  F002    	movff	postinc2,_TMR6_InterruptHandler+1
 23280  0189AA  006F FF74  F003    	movff	postdec2,_TMR6_InterruptHandler+2
 23281                           
 23282                           ; _TMR6_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23283  0189B0  52E5               	movf	postdec1,f,c
 23284  0189B2  52E5               	movf	postdec1,f,c
 23285  0189B4  52E5               	movf	postdec1,f,c
 23286  0189B6  0012               	return		;funcret
 23287  0189B8                     __end_of_TMR6_SetInterruptHandler:
 23288                           	opt callstack 0
 23289                           
 23290 ;; *************** function _TMR5_Initialize *****************
 23291 ;; Defined at:
 23292 ;;		line 67 in file "mcc_generated_files/tmr5.c"
 23293 ;; Parameters:    Size  Location     Type
 23294 ;;		None
 23295 ;; Auto vars:     Size  Location     Type
 23296 ;;		None
 23297 ;; Return value:  Size  Location     Type
 23298 ;;                  1  [STACK] void 
 23299 ;; Registers used:
 23300 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1
 23301 ;; Tracked objects:
 23302 ;;		On entry : 0/39
 23303 ;;		On exit  : 0/0
 23304 ;;		Unchanged: 0/0
 23305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23310 ;;Total ram usage:        0 bytes
 23311 ;; Hardware stack levels used:    1
 23312 ;; Hardware stack levels required when called:    7
 23313 ;; This function calls:
 23314 ;;		_TMR5_SetInterruptHandler
 23315 ;; This function is called by:
 23316 ;;		_SYSTEM_Initialize
 23317 ;; This function uses a reentrant model
 23318 ;;
 23319                           
 23320                           	psect	text96
 23321  018422                     __ptext96:
 23322                           	opt callstack 0
 23323  018422                     _TMR5_Initialize:
 23324                           	opt callstack 22
 23325                           
 23326                           ;mcc_generated_files/tmr5.c: 72:  T5GCON = 0x00;
 23327                           
 23328                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23329                           ;incstack = 0
 23330  018422  6A9B               	clrf	155,c	;volatile
 23331                           
 23332                           ;mcc_generated_files/tmr5.c: 75:  T5GATE = 0x00;
 23333  018424  6A9C               	clrf	156,c	;volatile
 23334                           
 23335                           ;mcc_generated_files/tmr5.c: 78:  T5CLK = 0x01;
 23336  018426  0E01               	movlw	1
 23337  018428  6E9D               	movwf	157,c	;volatile
 23338                           
 23339                           ;mcc_generated_files/tmr5.c: 81:  TMR5H = 0x63;
 23340  01842A  0E63               	movlw	99
 23341  01842C  6E99               	movwf	153,c	;volatile
 23342                           
 23343                           ;mcc_generated_files/tmr5.c: 84:  TMR5L = 0xC0;
 23344  01842E  0EC0               	movlw	192
 23345  018430  6E98               	movwf	152,c	;volatile
 23346                           
 23347                           ;mcc_generated_files/tmr5.c: 87:  timer5ReloadVal = (uint16_t) ((TMR5H << 8) | TMR5L);
 23348  018432  5098               	movf	152,w,c	;volatile
 23349  018434  006F FE64  F035    	movff	16281,btemp	;volatile
 23350  01843A  6A36               	clrf	(btemp+1)^0,c
 23351  01843C  0060  F0D4  F036   	movff	btemp,btemp+1
 23352  018442  6A35               	clrf	btemp^0,c
 23353  018444  1035               	iorwf	btemp^0,w,c
 23354  018446  6E26               	movwf	_timer5ReloadVal^0,c	;volatile
 23355  018448  5036               	movf	(btemp+1)^0,w,c
 23356  01844A  6E27               	movwf	(_timer5ReloadVal+1)^0,c	;volatile
 23357                           
 23358                           ;mcc_generated_files/tmr5.c: 90:  PIR8bits.TMR5IF = 0;
 23359  01844C  0139               	movlb	57	; () banked
 23360  01844E  9DA8               	bcf	168,6,b	;volatile
 23361                           
 23362                           ; BSR set to: 57
 23363                           ;mcc_generated_files/tmr5.c: 93:  PIE8bits.TMR5IE = 1;
 23364  018450  8D98               	bsf	152,6,b	;volatile
 23365                           
 23366                           ; BSR set to: 57
 23367                           ;mcc_generated_files/tmr5.c: 96:  TMR5_SetInterruptHandler(TMR5_DefaultInterruptHandler)
      +                          ;
 23368  018452  0E80               	movlw	low _TMR5_DefaultInterruptHandler
 23369  018454  6EE6               	movwf	postinc1,c
 23370  018456  0E8A               	movlw	high _TMR5_DefaultInterruptHandler
 23371  018458  6EE6               	movwf	postinc1,c
 23372  01845A  0E01               	movlw	low (_TMR5_DefaultInterruptHandler shr (0+16))
 23373  01845C  6EE6               	movwf	postinc1,c
 23374  01845E  ECDC  F0C4         	call	_TMR5_SetInterruptHandler	;wreg free
 23375                           
 23376                           ;mcc_generated_files/tmr5.c: 99:  T5CON = 0x31;
 23377  018462  0E31               	movlw	49
 23378  018464  6E9A               	movwf	154,c	;volatile
 23379                           
 23380                           ; _TMR5_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23381  018466  0012               	return		;funcret
 23382  018468                     __end_of_TMR5_Initialize:
 23383                           	opt callstack 0
 23384                           
 23385 ;; *************** function _TMR5_SetInterruptHandler *****************
 23386 ;; Defined at:
 23387 ;;		line 190 in file "mcc_generated_files/tmr5.c"
 23388 ;; Parameters:    Size  Location     Type
 23389 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 23390 ;;		 -> TMR5_DefaultInterruptHandler(1), 
 23391 ;; Auto vars:     Size  Location     Type
 23392 ;;		None
 23393 ;; Return value:  Size  Location     Type
 23394 ;;                  1  [STACK] void 
 23395 ;; Registers used:
 23396 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 23397 ;; Tracked objects:
 23398 ;;		On entry : 3F/39
 23399 ;;		On exit  : 0/0
 23400 ;;		Unchanged: 0/0
 23401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23406 ;;Total ram usage:        0 bytes
 23407 ;; Hardware stack levels used:    1
 23408 ;; Hardware stack levels required when called:    6
 23409 ;; This function calls:
 23410 ;;		Nothing
 23411 ;; This function is called by:
 23412 ;;		_TMR5_Initialize
 23413 ;; This function uses a reentrant model
 23414 ;;
 23415                           
 23416                           	psect	text97
 23417  0189B8                     __ptext97:
 23418                           	opt callstack 0
 23419  0189B8                     _TMR5_SetInterruptHandler:
 23420                           	opt callstack 22
 23421                           
 23422                           ;mcc_generated_files/tmr5.c: 190: void TMR5_SetInterruptHandler(void (* InterruptHandler
      +                          )(void));mcc_generated_files/tmr5.c: 191: {;mcc_generated_files/tmr5.c: 192:  TMR5_Inter
      +                          ruptHandler = InterruptHandler;
 23423                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 23424                           
 23425                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23426                           ;incstack = 0
 23427  0189B8  50E1               	movf	fsr1l,w,c
 23428  0189BA  0FFD               	addlw	-3
 23429  0189BC  6ED9               	movwf	fsr2l,c
 23430  0189BE  50E2               	movf	fsr1h,w,c
 23431  0189C0  6EDA               	movwf	fsr2h,c
 23432  0189C2  0EFF               	movlw	255
 23433  0189C4  22DA               	addwfc	fsr2h,f,c
 23434  0189C6  006F FF78  F098    	movff	postinc2,_TMR5_InterruptHandler
 23435  0189CC  006F FF78  F099    	movff	postinc2,_TMR5_InterruptHandler+1
 23436  0189D2  006F FF74  F09A    	movff	postdec2,_TMR5_InterruptHandler+2
 23437                           
 23438                           ; _TMR5_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 23439  0189D8  52E5               	movf	postdec1,f,c
 23440  0189DA  52E5               	movf	postdec1,f,c
 23441  0189DC  52E5               	movf	postdec1,f,c
 23442  0189DE  0012               	return		;funcret
 23443  0189E0                     __end_of_TMR5_SetInterruptHandler:
 23444                           	opt callstack 0
 23445                           
 23446 ;; *************** function _TMR2_Initialize *****************
 23447 ;; Defined at:
 23448 ;;		line 62 in file "mcc_generated_files/tmr2.c"
 23449 ;; Parameters:    Size  Location     Type
 23450 ;;		None
 23451 ;; Auto vars:     Size  Location     Type
 23452 ;;		None
 23453 ;; Return value:  Size  Location     Type
 23454 ;;                  1  [STACK] void 
 23455 ;; Registers used:
 23456 ;;		wreg, status,2
 23457 ;; Tracked objects:
 23458 ;;		On entry : 0/3E
 23459 ;;		On exit  : 3F/39
 23460 ;;		Unchanged: 0/0
 23461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23466 ;;Total ram usage:        0 bytes
 23467 ;; Hardware stack levels used:    1
 23468 ;; Hardware stack levels required when called:    6
 23469 ;; This function calls:
 23470 ;;		Nothing
 23471 ;; This function is called by:
 23472 ;;		_SYSTEM_Initialize
 23473 ;; This function uses a reentrant model
 23474 ;;
 23475                           
 23476                           	psect	text98
 23477  018D2E                     __ptext98:
 23478                           	opt callstack 0
 23479  018D2E                     _TMR2_Initialize:
 23480                           	opt callstack 23
 23481                           
 23482                           ;mcc_generated_files/tmr2.c: 67:     T2CLKCON = 0x01;
 23483                           
 23484                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23485                           ;incstack = 0
 23486  018D2E  0E01               	movlw	1
 23487  018D30  6EAE               	movwf	174,c	;volatile
 23488                           
 23489                           ;mcc_generated_files/tmr2.c: 70:     T2HLT = 0x00;
 23490  018D32  6AAD               	clrf	173,c	;volatile
 23491                           
 23492                           ;mcc_generated_files/tmr2.c: 73:     T2RST = 0x00;
 23493  018D34  6AAF               	clrf	175,c	;volatile
 23494                           
 23495                           ;mcc_generated_files/tmr2.c: 76:     T2PR = 0x63;
 23496  018D36  0E63               	movlw	99
 23497  018D38  6EAB               	movwf	171,c	;volatile
 23498                           
 23499                           ;mcc_generated_files/tmr2.c: 79:     T2TMR = 0x00;
 23500  018D3A  6AAA               	clrf	170,c	;volatile
 23501                           
 23502                           ;mcc_generated_files/tmr2.c: 82:     PIR4bits.TMR2IF = 0;
 23503  018D3C  0139               	movlb	57	; () banked
 23504  018D3E  95A4               	bcf	164,2,b	;volatile
 23505                           
 23506                           ;mcc_generated_files/tmr2.c: 85:     T2CON = 0xC0;
 23507  018D40  0EC0               	movlw	192
 23508  018D42  6EAC               	movwf	172,c	;volatile
 23509                           
 23510                           ; BSR set to: 57
 23511                           ; _TMR2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23512  018D44  0012               	return		;funcret
 23513  018D46                     __end_of_TMR2_Initialize:
 23514                           	opt callstack 0
 23515                           
 23516 ;; *************** function _SPI1_Initialize *****************
 23517 ;; Defined at:
 23518 ;;		line 64 in file "mcc_generated_files/spi1.c"
 23519 ;; Parameters:    Size  Location     Type
 23520 ;;		None
 23521 ;; Auto vars:     Size  Location     Type
 23522 ;;		None
 23523 ;; Return value:  Size  Location     Type
 23524 ;;                  1  [STACK] void 
 23525 ;; Registers used:
 23526 ;;		wreg, status,2
 23527 ;; Tracked objects:
 23528 ;;		On entry : 3F/39
 23529 ;;		On exit  : 3F/3D
 23530 ;;		Unchanged: 0/0
 23531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23536 ;;Total ram usage:        0 bytes
 23537 ;; Hardware stack levels used:    1
 23538 ;; Hardware stack levels required when called:    6
 23539 ;; This function calls:
 23540 ;;		Nothing
 23541 ;; This function is called by:
 23542 ;;		_SYSTEM_Initialize
 23543 ;; This function uses a reentrant model
 23544 ;;
 23545                           
 23546                           	psect	text99
 23547  018D46                     __ptext99:
 23548                           	opt callstack 0
 23549  018D46                     _SPI1_Initialize:
 23550                           	opt callstack 23
 23551                           
 23552                           ;mcc_generated_files/spi1.c: 68:   SPI1CON1 = 0x40;
 23553                           
 23554                           ; BSR set to: 57
 23555                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23556                           ;incstack = 0
 23557  018D46  0E40               	movlw	64
 23558  018D48  013D               	movlb	61	; () banked
 23559  018D4A  6F15               	movwf	21,b	;volatile
 23560                           
 23561                           ;mcc_generated_files/spi1.c: 70:   SPI1CON2 = 0x03;
 23562  018D4C  0E03               	movlw	3
 23563  018D4E  6F16               	movwf	22,b	;volatile
 23564                           
 23565                           ;mcc_generated_files/spi1.c: 72:   SPI1BAUD = 0x4F;
 23566  018D50  0E4F               	movlw	79
 23567  018D52  6F19               	movwf	25,b	;volatile
 23568                           
 23569                           ; BSR set to: 61
 23570                           ;mcc_generated_files/spi1.c: 74:   SPI1CLK = 0x00;
 23571  018D54  6B1C               	clrf	28,b	;volatile
 23572                           
 23573                           ;mcc_generated_files/spi1.c: 76:   SPI1CON0 = 0x83;
 23574  018D56  0E83               	movlw	131
 23575  018D58  6F14               	movwf	20,b	;volatile
 23576                           
 23577                           ; BSR set to: 61
 23578                           ; _SPI1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23579  018D5A  0012               	return		;funcret
 23580  018D5C                     __end_of_SPI1_Initialize:
 23581                           	opt callstack 0
 23582                           
 23583 ;; *************** function _PWM8_Initialize *****************
 23584 ;; Defined at:
 23585 ;;		line 58 in file "mcc_generated_files/pwm8.c"
 23586 ;; Parameters:    Size  Location     Type
 23587 ;;		None
 23588 ;; Auto vars:     Size  Location     Type
 23589 ;;		None
 23590 ;; Return value:  Size  Location     Type
 23591 ;;                  1  [STACK] void 
 23592 ;; Registers used:
 23593 ;;		wreg, status,2
 23594 ;; Tracked objects:
 23595 ;;		On entry : 3F/39
 23596 ;;		On exit  : 3F/3F
 23597 ;;		Unchanged: 0/0
 23598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23603 ;;Total ram usage:        0 bytes
 23604 ;; Hardware stack levels used:    1
 23605 ;; Hardware stack levels required when called:    6
 23606 ;; This function calls:
 23607 ;;		Nothing
 23608 ;; This function is called by:
 23609 ;;		_SYSTEM_Initialize
 23610 ;; This function uses a reentrant model
 23611 ;;
 23612                           
 23613                           	psect	text100
 23614  018D5C                     __ptext100:
 23615                           	opt callstack 0
 23616  018D5C                     _PWM8_Initialize:
 23617                           	opt callstack 23
 23618                           
 23619                           ;mcc_generated_files/pwm8.c: 62:     PWM8CON = 0x80;
 23620                           
 23621                           ; BSR set to: 61
 23622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23623                           ;incstack = 0
 23624  018D5C  0E80               	movlw	128
 23625  018D5E  6E62               	movwf	98,c	;volatile
 23626                           
 23627                           ;mcc_generated_files/pwm8.c: 65:     PWM8DCH = 0x00;
 23628  018D60  6A61               	clrf	97,c	;volatile
 23629                           
 23630                           ;mcc_generated_files/pwm8.c: 68:     PWM8DCL = 0x40;
 23631  018D62  0E40               	movlw	64
 23632  018D64  6E60               	movwf	96,c	;volatile
 23633                           
 23634                           ;mcc_generated_files/pwm8.c: 71:     CCPTMRS1bits.P8TSEL = 1;
 23635  018D66  013F               	movlb	63	; () banked
 23636  018D68  515F               	movf	95,w,b	;volatile
 23637  018D6A  0B3F               	andlw	-193
 23638  018D6C  0940               	iorlw	64
 23639  018D6E  6F5F               	movwf	95,b	;volatile
 23640                           
 23641                           ; BSR set to: 63
 23642                           ; _PWM8_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 23643  018D70  0012               	return		;funcret
 23644  018D72                     __end_of_PWM8_Initialize:
 23645                           	opt callstack 0
 23646                           
 23647 ;; *************** function _PMD_Initialize *****************
 23648 ;; Defined at:
 23649 ;;		line 89 in file "mcc_generated_files/mcc.c"
 23650 ;; Parameters:    Size  Location     Type
 23651 ;;		None
 23652 ;; Auto vars:     Size  Location     Type
 23653 ;;		None
 23654 ;; Return value:  Size  Location     Type
 23655 ;;                  1  [STACK] void 
 23656 ;; Registers used:
 23657 ;;		None
 23658 ;; Tracked objects:
 23659 ;;		On entry : 3F/39
 23660 ;;		On exit  : 3F/39
 23661 ;;		Unchanged: 0/0
 23662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23666 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23667 ;;Total ram usage:        0 bytes
 23668 ;; Hardware stack levels used:    1
 23669 ;; Hardware stack levels required when called:    6
 23670 ;; This function calls:
 23671 ;;		Nothing
 23672 ;; This function is called by:
 23673 ;;		_SYSTEM_Initialize
 23674 ;; This function uses a reentrant model
 23675 ;;
 23676                           
 23677                           	psect	text101
 23678  018D88                     __ptext101:
 23679                           	opt callstack 0
 23680  018D88                     _PMD_Initialize:
 23681                           	opt callstack 23
 23682                           
 23683                           ;mcc_generated_files/mcc.c: 92:     PMD0 = 0x00;
 23684                           
 23685                           ; BSR set to: 63
 23686                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23687                           ;incstack = 0
 23688  018D88  0139               	movlb	57	; () banked
 23689  018D8A  6BC0               	clrf	192,b	;volatile
 23690                           
 23691                           ;mcc_generated_files/mcc.c: 94:     PMD1 = 0x00;
 23692  018D8C  6BC1               	clrf	193,b	;volatile
 23693                           
 23694                           ;mcc_generated_files/mcc.c: 96:     PMD2 = 0x00;
 23695  018D8E  6BC2               	clrf	194,b	;volatile
 23696                           
 23697                           ;mcc_generated_files/mcc.c: 98:     PMD3 = 0x00;
 23698  018D90  6BC3               	clrf	195,b	;volatile
 23699                           
 23700                           ;mcc_generated_files/mcc.c: 100:     PMD4 = 0x00;
 23701  018D92  6BC4               	clrf	196,b	;volatile
 23702                           
 23703                           ;mcc_generated_files/mcc.c: 102:     PMD5 = 0x00;
 23704  018D94  6BC5               	clrf	197,b	;volatile
 23705                           
 23706                           ;mcc_generated_files/mcc.c: 104:     PMD6 = 0x00;
 23707  018D96  6BC6               	clrf	198,b	;volatile
 23708                           
 23709                           ;mcc_generated_files/mcc.c: 106:     PMD7 = 0x00;
 23710  018D98  6BC7               	clrf	199,b	;volatile
 23711                           
 23712                           ; BSR set to: 57
 23713                           ; _PMD_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 23714  018D9A  0012               	return		;funcret
 23715  018D9C                     __end_of_PMD_Initialize:
 23716                           	opt callstack 0
 23717                           
 23718 ;; *************** function _PIN_MANAGER_Initialize *****************
 23719 ;; Defined at:
 23720 ;;		line 57 in file "mcc_generated_files/pin_manager.c"
 23721 ;; Parameters:    Size  Location     Type
 23722 ;;		None
 23723 ;; Auto vars:     Size  Location     Type
 23724 ;;		None
 23725 ;; Return value:  Size  Location     Type
 23726 ;;                  1  [STACK] void 
 23727 ;; Registers used:
 23728 ;;		wreg, status,2
 23729 ;; Tracked objects:
 23730 ;;		On entry : 3F/39
 23731 ;;		On exit  : 3F/3A
 23732 ;;		Unchanged: 0/0
 23733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23735 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23737 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23738 ;;Total ram usage:        0 bytes
 23739 ;; Hardware stack levels used:    1
 23740 ;; Hardware stack levels required when called:    6
 23741 ;; This function calls:
 23742 ;;		Nothing
 23743 ;; This function is called by:
 23744 ;;		_SYSTEM_Initialize
 23745 ;; This function uses a reentrant model
 23746 ;;
 23747                           
 23748                           	psect	text102
 23749  017B2A                     __ptext102:
 23750                           	opt callstack 0
 23751  017B2A                     _PIN_MANAGER_Initialize:
 23752                           	opt callstack 23
 23753                           
 23754                           ;mcc_generated_files/pin_manager.c: 62:     LATE = 0x07;
 23755                           
 23756                           ; BSR set to: 57
 23757                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23758                           ;incstack = 0
 23759  017B2A  0E07               	movlw	7
 23760  017B2C  6EBE               	movwf	190,c	;volatile
 23761                           
 23762                           ;mcc_generated_files/pin_manager.c: 63:     LATD = 0x00;
 23763  017B2E  6ABD               	clrf	189,c	;volatile
 23764                           
 23765                           ;mcc_generated_files/pin_manager.c: 64:     LATA = 0x00;
 23766  017B30  6ABA               	clrf	186,c	;volatile
 23767                           
 23768                           ;mcc_generated_files/pin_manager.c: 65:     LATF = 0x00;
 23769  017B32  6ABF               	clrf	191,c	;volatile
 23770                           
 23771                           ;mcc_generated_files/pin_manager.c: 66:     LATB = 0x00;
 23772  017B34  6ABB               	clrf	187,c	;volatile
 23773                           
 23774                           ;mcc_generated_files/pin_manager.c: 67:     LATC = 0x07;
 23775  017B36  0E07               	movlw	7
 23776  017B38  6EBC               	movwf	188,c	;volatile
 23777                           
 23778                           ;mcc_generated_files/pin_manager.c: 72:     TRISE = 0x00;
 23779  017B3A  6AC6               	clrf	198,c	;volatile
 23780                           
 23781                           ;mcc_generated_files/pin_manager.c: 73:     TRISF = 0x0F;
 23782  017B3C  0E0F               	movlw	15
 23783  017B3E  6EC7               	movwf	199,c	;volatile
 23784                           
 23785                           ;mcc_generated_files/pin_manager.c: 74:     TRISA = 0xFF;
 23786  017B40  68C2               	setf	194,c	;volatile
 23787                           
 23788                           ;mcc_generated_files/pin_manager.c: 75:     TRISB = 0xBF;
 23789  017B42  0EBF               	movlw	191
 23790  017B44  6EC3               	movwf	195,c	;volatile
 23791                           
 23792                           ;mcc_generated_files/pin_manager.c: 76:     TRISC = 0x90;
 23793  017B46  0E90               	movlw	144
 23794  017B48  6EC4               	movwf	196,c	;volatile
 23795                           
 23796                           ;mcc_generated_files/pin_manager.c: 77:     TRISD = 0x0C;
 23797  017B4A  0E0C               	movlw	12
 23798  017B4C  6EC5               	movwf	197,c	;volatile
 23799                           
 23800                           ;mcc_generated_files/pin_manager.c: 82:     ANSELD = 0x00;
 23801  017B4E  013A               	movlb	58	; () banked
 23802  017B50  6B70               	clrf	112,b	;volatile
 23803                           
 23804                           ; BSR set to: 58
 23805                           ;mcc_generated_files/pin_manager.c: 83:     ANSELC = 0x00;
 23806  017B52  6B60               	clrf	96,b	;volatile
 23807                           
 23808                           ;mcc_generated_files/pin_manager.c: 84:     ANSELB = 0x3C;
 23809  017B54  0E3C               	movlw	60
 23810  017B56  6F50               	movwf	80,b	;volatile
 23811                           
 23812                           ; BSR set to: 58
 23813                           ;mcc_generated_files/pin_manager.c: 85:     ANSELE = 0x00;
 23814  017B58  6B80               	clrf	128,b	;volatile
 23815                           
 23816                           ; BSR set to: 58
 23817                           ;mcc_generated_files/pin_manager.c: 86:     ANSELF = 0x00;
 23818  017B5A  6B90               	clrf	144,b	;volatile
 23819                           
 23820                           ; BSR set to: 58
 23821                           ;mcc_generated_files/pin_manager.c: 87:     ANSELA = 0xFF;
 23822  017B5C  6940               	setf	64,b	;volatile
 23823                           
 23824                           ;mcc_generated_files/pin_manager.c: 92:     WPUD = 0x0C;
 23825  017B5E  0E0C               	movlw	12
 23826  017B60  6F71               	movwf	113,b	;volatile
 23827                           
 23828                           ;mcc_generated_files/pin_manager.c: 93:     WPUF = 0x0F;
 23829  017B62  0E0F               	movlw	15
 23830  017B64  6F91               	movwf	145,b	;volatile
 23831                           
 23832                           ; BSR set to: 58
 23833                           ;mcc_generated_files/pin_manager.c: 94:     WPUE = 0x00;
 23834  017B66  6B81               	clrf	129,b	;volatile
 23835                           
 23836                           ;mcc_generated_files/pin_manager.c: 95:     WPUB = 0x87;
 23837  017B68  0E87               	movlw	135
 23838  017B6A  6F51               	movwf	81,b	;volatile
 23839                           
 23840                           ; BSR set to: 58
 23841                           ;mcc_generated_files/pin_manager.c: 96:     WPUA = 0x00;
 23842  017B6C  6B41               	clrf	65,b	;volatile
 23843                           
 23844                           ;mcc_generated_files/pin_manager.c: 97:     WPUC = 0x97;
 23845  017B6E  0E97               	movlw	151
 23846  017B70  6F61               	movwf	97,b	;volatile
 23847                           
 23848                           ; BSR set to: 58
 23849                           ;mcc_generated_files/pin_manager.c: 102:     ODCONE = 0x00;
 23850  017B72  6B82               	clrf	130,b	;volatile
 23851                           
 23852                           ; BSR set to: 58
 23853                           ;mcc_generated_files/pin_manager.c: 103:     ODCONF = 0x00;
 23854  017B74  6B92               	clrf	146,b	;volatile
 23855                           
 23856                           ; BSR set to: 58
 23857                           ;mcc_generated_files/pin_manager.c: 104:     ODCONA = 0x00;
 23858  017B76  6B42               	clrf	66,b	;volatile
 23859                           
 23860                           ; BSR set to: 58
 23861                           ;mcc_generated_files/pin_manager.c: 105:     ODCONB = 0x00;
 23862  017B78  6B52               	clrf	82,b	;volatile
 23863                           
 23864                           ; BSR set to: 58
 23865                           ;mcc_generated_files/pin_manager.c: 106:     ODCONC = 0x00;
 23866  017B7A  6B62               	clrf	98,b	;volatile
 23867                           
 23868                           ; BSR set to: 58
 23869                           ;mcc_generated_files/pin_manager.c: 107:     ODCOND = 0x00;
 23870  017B7C  6B72               	clrf	114,b	;volatile
 23871                           
 23872                           ; BSR set to: 58
 23873                           ;mcc_generated_files/pin_manager.c: 112:     SLRCONA = 0xFF;
 23874  017B7E  6943               	setf	67,b	;volatile
 23875                           
 23876                           ; BSR set to: 58
 23877                           ;mcc_generated_files/pin_manager.c: 113:     SLRCONB = 0xFF;
 23878  017B80  6953               	setf	83,b	;volatile
 23879                           
 23880                           ; BSR set to: 58
 23881                           ;mcc_generated_files/pin_manager.c: 114:     SLRCONC = 0xFF;
 23882  017B82  6963               	setf	99,b	;volatile
 23883                           
 23884                           ; BSR set to: 58
 23885                           ;mcc_generated_files/pin_manager.c: 115:     SLRCOND = 0xFF;
 23886  017B84  6973               	setf	115,b	;volatile
 23887                           
 23888                           ;mcc_generated_files/pin_manager.c: 116:     SLRCONE = 0x07;
 23889  017B86  0E07               	movlw	7
 23890  017B88  6F83               	movwf	131,b	;volatile
 23891                           
 23892                           ; BSR set to: 58
 23893                           ;mcc_generated_files/pin_manager.c: 117:     SLRCONF = 0xFF;
 23894  017B8A  6993               	setf	147,b	;volatile
 23895                           
 23896                           ;mcc_generated_files/pin_manager.c: 126:     U2RXPPS = 0x0F;
 23897  017B8C  0E0F               	movlw	15
 23898  017B8E  6FE8               	movwf	232,b	;volatile
 23899                           
 23900                           ;mcc_generated_files/pin_manager.c: 127:     SPI1SCKPPS = 0x13;
 23901  017B90  0E13               	movlw	19
 23902  017B92  6FDE               	movwf	222,b	;volatile
 23903                           
 23904                           ;mcc_generated_files/pin_manager.c: 128:     RB6PPS = 0x16;
 23905  017B94  0E16               	movlw	22
 23906  017B96  6F0E               	movwf	14,b	;volatile
 23907                           
 23908                           ;mcc_generated_files/pin_manager.c: 129:     RC3PPS = 0x1E;
 23909  017B98  0E1E               	movlw	30
 23910  017B9A  6F13               	movwf	19,b	;volatile
 23911                           
 23912                           ;mcc_generated_files/pin_manager.c: 130:     INT0PPS = 0x08;
 23913  017B9C  0E08               	movlw	8
 23914  017B9E  6FC0               	movwf	192,b	;volatile
 23915                           
 23916                           ;mcc_generated_files/pin_manager.c: 131:     RD1PPS = 0x10;
 23917  017BA0  0E10               	movlw	16
 23918  017BA2  6F19               	movwf	25,b	;volatile
 23919                           
 23920                           ;mcc_generated_files/pin_manager.c: 132:     INT1PPS = 0x09;
 23921  017BA4  0E09               	movlw	9
 23922  017BA6  6FC1               	movwf	193,b	;volatile
 23923                           
 23924                           ;mcc_generated_files/pin_manager.c: 133:     RC5PPS = 0x1F;
 23925  017BA8  0E1F               	movlw	31
 23926  017BAA  6F15               	movwf	21,b	;volatile
 23927                           
 23928                           ;mcc_generated_files/pin_manager.c: 134:     RC6PPS = 0x13;
 23929  017BAC  0E13               	movlw	19
 23930  017BAE  6F16               	movwf	22,b	;volatile
 23931                           
 23932                           ;mcc_generated_files/pin_manager.c: 135:     U1RXPPS = 0x17;
 23933  017BB0  0E17               	movlw	23
 23934  017BB2  6FE5               	movwf	229,b	;volatile
 23935                           
 23936                           ;mcc_generated_files/pin_manager.c: 136:     SPI1SDIPPS = 0x14;
 23937  017BB4  0E14               	movlw	20
 23938  017BB6  6FDF               	movwf	223,b	;volatile
 23939                           
 23940                           ; BSR set to: 58
 23941                           ; _PIN_MANAGER_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 0, argsize = 0, vargsize = 0
 23942  017BB8  0012               	return		;funcret
 23943  017BBA                     __end_of_PIN_MANAGER_Initialize:
 23944                           	opt callstack 0
 23945                           
 23946 ;; *************** function _OSCILLATOR_Initialize *****************
 23947 ;; Defined at:
 23948 ;;		line 71 in file "mcc_generated_files/mcc.c"
 23949 ;; Parameters:    Size  Location     Type
 23950 ;;		None
 23951 ;; Auto vars:     Size  Location     Type
 23952 ;;		None
 23953 ;; Return value:  Size  Location     Type
 23954 ;;                  1  [STACK] void 
 23955 ;; Registers used:
 23956 ;;		wreg, status,2
 23957 ;; Tracked objects:
 23958 ;;		On entry : 3F/3A
 23959 ;;		On exit  : 3F/39
 23960 ;;		Unchanged: 0/0
 23961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 23962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23965 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 23966 ;;Total ram usage:        0 bytes
 23967 ;; Hardware stack levels used:    1
 23968 ;; Hardware stack levels required when called:    6
 23969 ;; This function calls:
 23970 ;;		Nothing
 23971 ;; This function is called by:
 23972 ;;		_SYSTEM_Initialize
 23973 ;; This function uses a reentrant model
 23974 ;;
 23975                           
 23976                           	psect	text103
 23977  018D72                     __ptext103:
 23978                           	opt callstack 0
 23979  018D72                     _OSCILLATOR_Initialize:
 23980                           	opt callstack 23
 23981                           
 23982                           ;mcc_generated_files/mcc.c: 74:     OSCCON1 = 0x20;
 23983                           
 23984                           ; BSR set to: 58
 23985                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 23986                           ;incstack = 0
 23987  018D72  0E20               	movlw	32
 23988  018D74  0139               	movlb	57	; () banked
 23989  018D76  6FD9               	movwf	217,b	;volatile
 23990                           
 23991                           ; BSR set to: 57
 23992                           ;mcc_generated_files/mcc.c: 76:     OSCCON3 = 0x00;
 23993  018D78  6BDB               	clrf	219,b	;volatile
 23994                           
 23995                           ; BSR set to: 57
 23996                           ;mcc_generated_files/mcc.c: 78:     OSCEN = 0x00;
 23997  018D7A  6BDD               	clrf	221,b	;volatile
 23998                           
 23999                           ;mcc_generated_files/mcc.c: 80:     OSCFRQ = 0x02;
 24000  018D7C  0E02               	movlw	2
 24001  018D7E  6FDF               	movwf	223,b	;volatile
 24002                           
 24003                           ; BSR set to: 57
 24004                           ;mcc_generated_files/mcc.c: 82:     OSCTUNE = 0x00;
 24005  018D80  6BDE               	clrf	222,b	;volatile
 24006  018D82                     l171:
 24007                           
 24008                           ; BSR set to: 57
 24009                           ;mcc_generated_files/mcc.c: 84:     while(PLLR == 0)
 24010  018D82  B1DC               	btfsc	220,0,b	;volatile
 24011  018D84  0012               	return	
 24012  018D86  D7FD               	goto	l171
 24013  018D88                     __end_of_OSCILLATOR_Initialize:
 24014                           	opt callstack 0
 24015                           
 24016 ;; *************** function _INTERRUPT_Initialize *****************
 24017 ;; Defined at:
 24018 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
 24019 ;; Parameters:    Size  Location     Type
 24020 ;;		None
 24021 ;; Auto vars:     Size  Location     Type
 24022 ;;  state           1  [STACK] _Bool 
 24023 ;; Return value:  Size  Location     Type
 24024 ;;                  1  [STACK] void 
 24025 ;; Registers used:
 24026 ;;		wreg, fsr1l, fsr1h, status,2, btemp+11
 24027 ;; Tracked objects:
 24028 ;;		On entry : 0/0
 24029 ;;		On exit  : 3F/39
 24030 ;;		Unchanged: 0/0
 24031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24036 ;;Total ram usage:        0 bytes
 24037 ;; Hardware stack levels used:    1
 24038 ;; Hardware stack levels required when called:    6
 24039 ;; This function calls:
 24040 ;;		Nothing
 24041 ;; This function is called by:
 24042 ;;		_SYSTEM_Initialize
 24043 ;; This function uses a reentrant model
 24044 ;;
 24045                           
 24046                           	psect	text104
 24047  017F68                     __ptext104:
 24048                           	opt callstack 0
 24049  017F68                     _INTERRUPT_Initialize:
 24050                           	opt callstack 0
 24051                           
 24052                           ; BSR set to: 57
 24053                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24054  017F68  52E6               	movf	postinc1,f,c
 24055                           
 24056                           ;mcc_generated_files/interrupt_manager.c: 54:     INTCON0bits.IPEN = 1;
 24057                           
 24058                           ;incstack = 0
 24059  017F6A  8AD2               	bsf	210,5,c	;volatile
 24060                           
 24061                           ;mcc_generated_files/interrupt_manager.c: 56:     _Bool state = (unsigned char)GIE;
 24062  017F6C  AED2               	btfss	16338,7,c	;volatile
 24063  017F6E  D003               	goto	u8320
 24064  017F70  6A40               	clrf	(btemp+11)^0,c
 24065  017F72  2A40               	incf	(btemp+11)^0,f,c
 24066  017F74  D001               	goto	u8338
 24067  017F76                     u8320:
 24068  017F76  6A40               	clrf	(btemp+11)^0,c
 24069  017F78                     u8338:
 24070                           
 24071                           ;stkvar	_state @ sp[(-1)+0]
 24072  017F78  0EFF               	movlw	-1
 24073  017F7A  0060  F103  FFE3   	movff	btemp+11,plusw1
 24074                           
 24075                           ;mcc_generated_files/interrupt_manager.c: 57:     GIE = 0;
 24076  017F80  9ED2               	bcf	16338,7,c	;volatile
 24077                           
 24078                           ;mcc_generated_files/interrupt_manager.c: 58:     IVTLOCK = 0x55;
 24079  017F82  0E55               	movlw	85
 24080  017F84  6ED4               	movwf	212,c	;volatile
 24081                           
 24082                           ;mcc_generated_files/interrupt_manager.c: 59:     IVTLOCK = 0xAA;
 24083  017F86  0EAA               	movlw	170
 24084  017F88  6ED4               	movwf	212,c	;volatile
 24085                           
 24086                           ;mcc_generated_files/interrupt_manager.c: 60:     IVTLOCKbits.IVTLOCKED = 0x00;
 24087  017F8A  90D4               	bcf	212,0,c	;volatile
 24088                           
 24089                           ;mcc_generated_files/interrupt_manager.c: 62:     IVTADU = 0;
 24090  017F8C  0138               	movlb	56	; () banked
 24091  017F8E  6B9F               	clrf	159,b	;volatile
 24092                           
 24093                           ; BSR set to: 56
 24094                           ;mcc_generated_files/interrupt_manager.c: 63:     IVTADH = 0;
 24095  017F90  6B9E               	clrf	158,b	;volatile
 24096                           
 24097                           ; BSR set to: 56
 24098                           ;mcc_generated_files/interrupt_manager.c: 64:     IVTADL = 8;
 24099  017F92  0E08               	movlw	8
 24100  017F94  6F9D               	movwf	157,b	;volatile
 24101                           
 24102                           ; BSR set to: 56
 24103                           ;mcc_generated_files/interrupt_manager.c: 66:     IVTLOCK = 0x55;
 24104  017F96  0E55               	movlw	85
 24105  017F98  6ED4               	movwf	212,c	;volatile
 24106                           
 24107                           ; BSR set to: 56
 24108                           ;mcc_generated_files/interrupt_manager.c: 67:     IVTLOCK = 0xAA;
 24109  017F9A  0EAA               	movlw	170
 24110  017F9C  6ED4               	movwf	212,c	;volatile
 24111                           
 24112                           ; BSR set to: 56
 24113                           ;mcc_generated_files/interrupt_manager.c: 68:     IVTLOCKbits.IVTLOCKED = 0x01;
 24114  017F9E  80D4               	bsf	212,0,c	;volatile
 24115                           
 24116                           ; BSR set to: 56
 24117                           ;mcc_generated_files/interrupt_manager.c: 70:     GIE = state;
 24118                           ;stkvar	_state @ sp[(-1)+0]
 24119  017FA0  0EFF               	movlw	-1
 24120  017FA2  B0E3               	btfsc	plusw1,0,c
 24121  017FA4  D002               	bra	u8345
 24122  017FA6  9ED2               	bcf	16338,7,c	;volatile
 24123  017FA8  D001               	bra	u8346
 24124  017FAA                     u8345:
 24125  017FAA  8ED2               	bsf	16338,7,c	;volatile
 24126  017FAC                     u8346:
 24127                           
 24128                           ;mcc_generated_files/interrupt_manager.c: 72:     IPR2bits.DMA1AIP = 1;
 24129  017FAC  0139               	movlb	57	; () banked
 24130  017FAE  8782               	bsf	130,3,b	;volatile
 24131                           
 24132                           ; BSR set to: 57
 24133                           ;mcc_generated_files/interrupt_manager.c: 73:     IPR2bits.DMA1DCNTIP = 1;
 24134  017FB0  8382               	bsf	130,1,b	;volatile
 24135                           
 24136                           ; BSR set to: 57
 24137                           ;mcc_generated_files/interrupt_manager.c: 74:     IPR2bits.DMA1SCNTIP = 1;
 24138  017FB2  8182               	bsf	130,0,b	;volatile
 24139                           
 24140                           ; BSR set to: 57
 24141                           ;mcc_generated_files/interrupt_manager.c: 75:     IPR2bits.DMA1ORIP = 1;
 24142  017FB4  8582               	bsf	130,2,b	;volatile
 24143                           
 24144                           ; BSR set to: 57
 24145                           ;mcc_generated_files/interrupt_manager.c: 76:     IPR6bits.U2TXIP = 1;
 24146  017FB6  8786               	bsf	134,3,b	;volatile
 24147                           
 24148                           ; BSR set to: 57
 24149                           ;mcc_generated_files/interrupt_manager.c: 77:     IPR6bits.U2RXIP = 1;
 24150  017FB8  8586               	bsf	134,2,b	;volatile
 24151                           
 24152                           ; BSR set to: 57
 24153                           ;mcc_generated_files/interrupt_manager.c: 78:     IPR3bits.U1TXIP = 1;
 24154  017FBA  8983               	bsf	131,4,b	;volatile
 24155                           
 24156                           ; BSR set to: 57
 24157                           ;mcc_generated_files/interrupt_manager.c: 79:     IPR3bits.U1RXIP = 1;
 24158  017FBC  8783               	bsf	131,3,b	;volatile
 24159                           
 24160                           ; BSR set to: 57
 24161                           ;mcc_generated_files/interrupt_manager.c: 80:     IPR1bits.INT0IP = 1;
 24162  017FBE  8181               	bsf	129,0,b	;volatile
 24163                           
 24164                           ; BSR set to: 57
 24165                           ;mcc_generated_files/interrupt_manager.c: 81:     IPR5bits.INT1IP = 1;
 24166  017FC0  8185               	bsf	133,0,b	;volatile
 24167                           
 24168                           ; BSR set to: 57
 24169                           ;mcc_generated_files/interrupt_manager.c: 82:     IPR9bits.TMR6IP = 1;
 24170  017FC2  8189               	bsf	137,0,b	;volatile
 24171                           
 24172                           ; BSR set to: 57
 24173                           ;mcc_generated_files/interrupt_manager.c: 83:     IPR8bits.TMR5IP = 0;
 24174  017FC4  9D88               	bcf	136,6,b	;volatile
 24175                           
 24176                           ; BSR set to: 57
 24177                           ;mcc_generated_files/interrupt_manager.c: 84:     IPR1bits.ADIP = 1;
 24178  017FC6  8581               	bsf	129,2,b	;volatile
 24179                           
 24180                           ; BSR set to: 57
 24181                           ;mcc_generated_files/interrupt_manager.c: 85:     IPR1bits.ADTIP = 1;
 24182  017FC8  8781               	bsf	129,3,b	;volatile
 24183                           
 24184                           ; BSR set to: 57
 24185                           ; _INTERRUPT_Initialize: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsi
      +                          ze = 0, argsize = 0, vargsize = 0
 24186  017FCA  52E5               	movf	postdec1,f,c
 24187  017FCC  0012               	return		;funcret
 24188  017FCE                     __end_of_INTERRUPT_Initialize:
 24189                           	opt callstack 0
 24190                           
 24191 ;; *************** function _FVR_Initialize *****************
 24192 ;; Defined at:
 24193 ;;		line 58 in file "mcc_generated_files/fvr.c"
 24194 ;; Parameters:    Size  Location     Type
 24195 ;;		None
 24196 ;; Auto vars:     Size  Location     Type
 24197 ;;		None
 24198 ;; Return value:  Size  Location     Type
 24199 ;;                  1  [STACK] void 
 24200 ;; Registers used:
 24201 ;;		wreg, status,2
 24202 ;; Tracked objects:
 24203 ;;		On entry : 3F/39
 24204 ;;		On exit  : 3F/3E
 24205 ;;		Unchanged: 0/0
 24206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24211 ;;Total ram usage:        0 bytes
 24212 ;; Hardware stack levels used:    1
 24213 ;; Hardware stack levels required when called:    6
 24214 ;; This function calls:
 24215 ;;		Nothing
 24216 ;; This function is called by:
 24217 ;;		_SYSTEM_Initialize
 24218 ;; This function uses a reentrant model
 24219 ;;
 24220                           
 24221                           	psect	text105
 24222  018E56                     __ptext105:
 24223                           	opt callstack 0
 24224  018E56                     _FVR_Initialize:
 24225                           	opt callstack 23
 24226                           
 24227                           ;mcc_generated_files/fvr.c: 61:     FVRCON = 0xAF;
 24228                           
 24229                           ; BSR set to: 57
 24230                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24231                           ;incstack = 0
 24232  018E56  0EAF               	movlw	175
 24233  018E58  013E               	movlb	62	; () banked
 24234  018E5A  6FC1               	movwf	193,b	;volatile
 24235                           
 24236                           ; BSR set to: 62
 24237                           ; _FVR_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0
      +                          , argsize = 0, vargsize = 0
 24238  018E5C  0012               	return		;funcret
 24239  018E5E                     __end_of_FVR_Initialize:
 24240                           	opt callstack 0
 24241                           
 24242 ;; *************** function _EXT_INT_Initialize *****************
 24243 ;; Defined at:
 24244 ;;		line 90 in file "mcc_generated_files/ext_int.c"
 24245 ;; Parameters:    Size  Location     Type
 24246 ;;		None
 24247 ;; Auto vars:     Size  Location     Type
 24248 ;;		None
 24249 ;; Return value:  Size  Location     Type
 24250 ;;                  1  [STACK] void 
 24251 ;; Registers used:
 24252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24253 ;; Tracked objects:
 24254 ;;		On entry : 3F/3F
 24255 ;;		On exit  : 3F/39
 24256 ;;		Unchanged: 0/0
 24257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24262 ;;Total ram usage:        0 bytes
 24263 ;; Hardware stack levels used:    1
 24264 ;; Hardware stack levels required when called:    7
 24265 ;; This function calls:
 24266 ;;		_INT0_SetInterruptHandler
 24267 ;;		_INT1_SetInterruptHandler
 24268 ;; This function is called by:
 24269 ;;		_SYSTEM_Initialize
 24270 ;; This function uses a reentrant model
 24271 ;;
 24272                           
 24273                           	psect	text106
 24274  018704                     __ptext106:
 24275                           	opt callstack 0
 24276  018704                     _EXT_INT_Initialize:
 24277                           	opt callstack 22
 24278                           
 24279                           ;mcc_generated_files/ext_int.c: 95:  (PIR1bits.INT0IF = 0);
 24280                           
 24281                           ; BSR set to: 62
 24282                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24283                           ;incstack = 0
 24284  018704  0139               	movlb	57	; () banked
 24285  018706  91A1               	bcf	161,0,b	;volatile
 24286                           
 24287                           ;mcc_generated_files/ext_int.c: 96:  (INTCON0bits.INT0EDG = 0);
 24288  018708  90D2               	bcf	210,0,c	;volatile
 24289                           
 24290                           ; BSR set to: 57
 24291                           ;mcc_generated_files/ext_int.c: 98:  INT0_SetInterruptHandler(INT0_DefaultInterruptHandl
      +                          er);
 24292  01870A  0E76               	movlw	low _INT0_DefaultInterruptHandler
 24293  01870C  6EE6               	movwf	postinc1,c
 24294  01870E  0E8E               	movlw	high _INT0_DefaultInterruptHandler
 24295  018710  6EE6               	movwf	postinc1,c
 24296  018712  0E01               	movlw	low (_INT0_DefaultInterruptHandler shr (0+16))
 24297  018714  6EE6               	movwf	postinc1,c
 24298  018716  EC04  F0C5         	call	_INT0_SetInterruptHandler	;wreg free
 24299                           
 24300                           ;mcc_generated_files/ext_int.c: 99:  (PIE1bits.INT0IE = 1);
 24301  01871A  0139               	movlb	57	; () banked
 24302  01871C  8191               	bsf	145,0,b	;volatile
 24303                           
 24304                           ; BSR set to: 57
 24305                           ;mcc_generated_files/ext_int.c: 104:  (PIR5bits.INT1IF = 0);
 24306  01871E  91A5               	bcf	165,0,b	;volatile
 24307                           
 24308                           ; BSR set to: 57
 24309                           ;mcc_generated_files/ext_int.c: 105:  (INTCON0bits.INT1EDG = 0);
 24310  018720  92D2               	bcf	210,1,c	;volatile
 24311                           
 24312                           ;mcc_generated_files/ext_int.c: 107:  INT1_SetInterruptHandler(INT1_DefaultInterruptHand
      +                          ler);
 24313  018722  0E78               	movlw	low _INT1_DefaultInterruptHandler
 24314  018724  6EE6               	movwf	postinc1,c
 24315  018726  0E8E               	movlw	high _INT1_DefaultInterruptHandler
 24316  018728  6EE6               	movwf	postinc1,c
 24317  01872A  0E01               	movlw	low (_INT1_DefaultInterruptHandler shr (0+16))
 24318  01872C  6EE6               	movwf	postinc1,c
 24319  01872E  ECF0  F0C4         	call	_INT1_SetInterruptHandler	;wreg free
 24320                           
 24321                           ;mcc_generated_files/ext_int.c: 108:  (PIE5bits.INT1IE = 1);
 24322  018732  0139               	movlb	57	; () banked
 24323  018734  8195               	bsf	149,0,b	;volatile
 24324                           
 24325                           ; BSR set to: 57
 24326                           ; _EXT_INT_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 24327  018736  0012               	return		;funcret
 24328  018738                     __end_of_EXT_INT_Initialize:
 24329                           	opt callstack 0
 24330                           
 24331 ;; *************** function _INT1_SetInterruptHandler *****************
 24332 ;; Defined at:
 24333 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 24334 ;; Parameters:    Size  Location     Type
 24335 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24336 ;;		 -> INT1_DefaultInterruptHandler(1), 
 24337 ;; Auto vars:     Size  Location     Type
 24338 ;;		None
 24339 ;; Return value:  Size  Location     Type
 24340 ;;                  1  [STACK] void 
 24341 ;; Registers used:
 24342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24343 ;; Tracked objects:
 24344 ;;		On entry : 3F/39
 24345 ;;		On exit  : 0/0
 24346 ;;		Unchanged: 0/0
 24347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24352 ;;Total ram usage:        0 bytes
 24353 ;; Hardware stack levels used:    1
 24354 ;; Hardware stack levels required when called:    6
 24355 ;; This function calls:
 24356 ;;		Nothing
 24357 ;; This function is called by:
 24358 ;;		_EXT_INT_Initialize
 24359 ;; This function uses a reentrant model
 24360 ;;
 24361                           
 24362                           	psect	text107
 24363  0189E0                     __ptext107:
 24364                           	opt callstack 0
 24365  0189E0                     _INT1_SetInterruptHandler:
 24366                           	opt callstack 22
 24367                           
 24368                           ;mcc_generated_files/ext_int.c: 79: void INT1_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 80: {;mcc_generated_files/ext_int.c: 81:  INT1
      +                          _InterruptHandler = InterruptHandler;
 24369                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24370                           
 24371                           ; BSR set to: 57
 24372                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24373                           ;incstack = 0
 24374  0189E0  50E1               	movf	fsr1l,w,c
 24375  0189E2  0FFD               	addlw	-3
 24376  0189E4  6ED9               	movwf	fsr2l,c
 24377  0189E6  50E2               	movf	fsr1h,w,c
 24378  0189E8  6EDA               	movwf	fsr2h,c
 24379  0189EA  0EFF               	movlw	255
 24380  0189EC  22DA               	addwfc	fsr2h,f,c
 24381  0189EE  006F FF78  F016    	movff	postinc2,_INT1_InterruptHandler
 24382  0189F4  006F FF78  F017    	movff	postinc2,_INT1_InterruptHandler+1
 24383  0189FA  006F FF74  F018    	movff	postdec2,_INT1_InterruptHandler+2
 24384                           
 24385                           ; _INT1_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24386  018A00  52E5               	movf	postdec1,f,c
 24387  018A02  52E5               	movf	postdec1,f,c
 24388  018A04  52E5               	movf	postdec1,f,c
 24389  018A06  0012               	return		;funcret
 24390  018A08                     __end_of_INT1_SetInterruptHandler:
 24391                           	opt callstack 0
 24392                           
 24393 ;; *************** function _INT0_SetInterruptHandler *****************
 24394 ;; Defined at:
 24395 ;;		line 52 in file "mcc_generated_files/ext_int.c"
 24396 ;; Parameters:    Size  Location     Type
 24397 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24398 ;;		 -> INT0_DefaultInterruptHandler(1), 
 24399 ;; Auto vars:     Size  Location     Type
 24400 ;;		None
 24401 ;; Return value:  Size  Location     Type
 24402 ;;                  1  [STACK] void 
 24403 ;; Registers used:
 24404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24405 ;; Tracked objects:
 24406 ;;		On entry : 3F/39
 24407 ;;		On exit  : 0/0
 24408 ;;		Unchanged: 0/0
 24409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24414 ;;Total ram usage:        0 bytes
 24415 ;; Hardware stack levels used:    1
 24416 ;; Hardware stack levels required when called:    6
 24417 ;; This function calls:
 24418 ;;		Nothing
 24419 ;; This function is called by:
 24420 ;;		_EXT_INT_Initialize
 24421 ;; This function uses a reentrant model
 24422 ;;
 24423                           
 24424                           	psect	text108
 24425  018A08                     __ptext108:
 24426                           	opt callstack 0
 24427  018A08                     _INT0_SetInterruptHandler:
 24428                           	opt callstack 22
 24429                           
 24430                           ;mcc_generated_files/ext_int.c: 52: void INT0_SetInterruptHandler(void (* InterruptHandl
      +                          er)(void));mcc_generated_files/ext_int.c: 53: {;mcc_generated_files/ext_int.c: 54:  INT0
      +                          _InterruptHandler = InterruptHandler;
 24431                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24432                           
 24433                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24434                           ;incstack = 0
 24435  018A08  50E1               	movf	fsr1l,w,c
 24436  018A0A  0FFD               	addlw	-3
 24437  018A0C  6ED9               	movwf	fsr2l,c
 24438  018A0E  50E2               	movf	fsr1h,w,c
 24439  018A10  6EDA               	movwf	fsr2h,c
 24440  018A12  0EFF               	movlw	255
 24441  018A14  22DA               	addwfc	fsr2h,f,c
 24442  018A16  006F FF78  F019    	movff	postinc2,_INT0_InterruptHandler
 24443  018A1C  006F FF78  F01A    	movff	postinc2,_INT0_InterruptHandler+1
 24444  018A22  006F FF74  F01B    	movff	postdec2,_INT0_InterruptHandler+2
 24445                           
 24446                           ; _INT0_SetInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 p
      +                          arsize = 3, argsize = 3, vargsize = 0
 24447  018A28  52E5               	movf	postdec1,f,c
 24448  018A2A  52E5               	movf	postdec1,f,c
 24449  018A2C  52E5               	movf	postdec1,f,c
 24450  018A2E  0012               	return		;funcret
 24451  018A30                     __end_of_INT0_SetInterruptHandler:
 24452                           	opt callstack 0
 24453                           
 24454 ;; *************** function _DMA2_Initialize *****************
 24455 ;; Defined at:
 24456 ;;		line 61 in file "mcc_generated_files/dma2.c"
 24457 ;; Parameters:    Size  Location     Type
 24458 ;;		None
 24459 ;; Auto vars:     Size  Location     Type
 24460 ;;		None
 24461 ;; Return value:  Size  Location     Type
 24462 ;;                  1  [STACK] void 
 24463 ;; Registers used:
 24464 ;;		wreg, status,2
 24465 ;; Tracked objects:
 24466 ;;		On entry : 3F/3D
 24467 ;;		On exit  : 3F/3B
 24468 ;;		Unchanged: 0/0
 24469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24474 ;;Total ram usage:        0 bytes
 24475 ;; Hardware stack levels used:    1
 24476 ;; Hardware stack levels required when called:    6
 24477 ;; This function calls:
 24478 ;;		Nothing
 24479 ;; This function is called by:
 24480 ;;		_SYSTEM_Initialize
 24481 ;; This function uses a reentrant model
 24482 ;;
 24483                           
 24484                           	psect	text109
 24485  01820A                     __ptext109:
 24486                           	opt callstack 0
 24487  01820A                     _DMA2_Initialize:
 24488                           	opt callstack 23
 24489                           
 24490                           ;mcc_generated_files/dma2.c: 63:     DMA2SSA = 0x001000;
 24491                           
 24492                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24493                           ;incstack = 0
 24494  01820A  0E00               	movlw	0
 24495  01820C  013B               	movlb	59	; () banked
 24496  01820E  6FD9               	movwf	217,b	;volatile
 24497  018210  0E10               	movlw	16
 24498  018212  6FDA               	movwf	218,b	;volatile
 24499  018214  0E00               	movlw	0
 24500  018216  6FDB               	movwf	219,b	;volatile
 24501                           
 24502                           ;mcc_generated_files/dma2.c: 64:     DMA2DSA = 0x3FBB;
 24503  018218  0E3F               	movlw	63
 24504  01821A  6FD1               	movwf	209,b	;volatile
 24505  01821C  0EBB               	movlw	187
 24506  01821E  6FD0               	movwf	208,b	;volatile
 24507                           
 24508                           ;mcc_generated_files/dma2.c: 65:     DMA2CON1 = 0x03;
 24509  018220  0E03               	movlw	3
 24510  018222  6FDD               	movwf	221,b	;volatile
 24511                           
 24512                           ;mcc_generated_files/dma2.c: 66:     DMA2SSZ = 0x0001;
 24513  018224  0E00               	movlw	0
 24514  018226  6FD8               	movwf	216,b	;volatile
 24515  018228  0E01               	movlw	1
 24516  01822A  6FD7               	movwf	215,b	;volatile
 24517                           
 24518                           ;mcc_generated_files/dma2.c: 67:     DMA2DSZ = 0x0001;
 24519  01822C  0E00               	movlw	0
 24520  01822E  6FCF               	movwf	207,b	;volatile
 24521  018230  0E01               	movlw	1
 24522  018232  6FCE               	movwf	206,b	;volatile
 24523                           
 24524                           ;mcc_generated_files/dma2.c: 68:     DMA2SIRQ = 0x46;
 24525  018234  0E46               	movlw	70
 24526  018236  6FDF               	movwf	223,b	;volatile
 24527                           
 24528                           ;mcc_generated_files/dma2.c: 69:     DMA2AIRQ = 0x3D;
 24529  018238  0E3D               	movlw	61
 24530  01823A  6FDE               	movwf	222,b	;volatile
 24531                           
 24532                           ; BSR set to: 59
 24533                           ;mcc_generated_files/dma2.c: 71:     PIR5bits.DMA2DCNTIF =0;
 24534  01823C  0139               	movlb	57	; () banked
 24535  01823E  97A5               	bcf	165,3,b	;volatile
 24536                           
 24537                           ; BSR set to: 57
 24538                           ;mcc_generated_files/dma2.c: 72:     PIR5bits.DMA2SCNTIF =0;
 24539  018240  95A5               	bcf	165,2,b	;volatile
 24540                           
 24541                           ; BSR set to: 57
 24542                           ;mcc_generated_files/dma2.c: 73:     PIR5bits.DMA2AIF =0;
 24543  018242  9BA5               	bcf	165,5,b	;volatile
 24544                           
 24545                           ; BSR set to: 57
 24546                           ;mcc_generated_files/dma2.c: 74:  PIR5bits.DMA2ORIF =0;
 24547  018244  99A5               	bcf	165,4,b	;volatile
 24548                           
 24549                           ; BSR set to: 57
 24550                           ;mcc_generated_files/dma2.c: 76:     PIE5bits.DMA2DCNTIE =0;
 24551  018246  9795               	bcf	149,3,b	;volatile
 24552                           
 24553                           ; BSR set to: 57
 24554                           ;mcc_generated_files/dma2.c: 77:     PIE5bits.DMA2SCNTIE =0;
 24555  018248  9595               	bcf	149,2,b	;volatile
 24556                           
 24557                           ; BSR set to: 57
 24558                           ;mcc_generated_files/dma2.c: 78:     PIE5bits.DMA2AIE =0;
 24559  01824A  9B95               	bcf	149,5,b	;volatile
 24560                           
 24561                           ; BSR set to: 57
 24562                           ;mcc_generated_files/dma2.c: 79:     PIE5bits.DMA2ORIE =0;
 24563  01824C  9995               	bcf	149,4,b	;volatile
 24564  01824E  9ED2               	bcf	16338,7,c	;# 
 24565  018250  0139               	banksel	14831	;# 
 24566  018252  0E55               	movlw	85	;# 
 24567  018254  6FEF               	movwf	14831,b	;# 
 24568  018256  0EAA               	movlw	170	;# 
 24569  018258  6FEF               	movwf	14831,b	;# 
 24570  01825A  81EF               	bsf	14831,0,b	;# 
 24571  01825C  8ED2               	bsf	16338,7,c	;# 
 24572                           
 24573                           ;mcc_generated_files/dma2.c: 92:     DMA2CON0 = 0x00;
 24574  01825E  013B               	movlb	59	; () banked
 24575  018260  6BDC               	clrf	220,b	;volatile
 24576                           
 24577                           ; BSR set to: 59
 24578                           ; _DMA2_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24579  018262  0012               	return		;funcret
 24580  018264                     __end_of_DMA2_Initialize:
 24581                           	opt callstack 0
 24582                           
 24583 ;; *************** function _DMA1_Initialize *****************
 24584 ;; Defined at:
 24585 ;;		line 86 in file "mcc_generated_files/dma1.c"
 24586 ;; Parameters:    Size  Location     Type
 24587 ;;		None
 24588 ;; Auto vars:     Size  Location     Type
 24589 ;;		None
 24590 ;; Return value:  Size  Location     Type
 24591 ;;                  1  [STACK] void 
 24592 ;; Registers used:
 24593 ;;		wreg, status,2
 24594 ;; Tracked objects:
 24595 ;;		On entry : 3F/3B
 24596 ;;		On exit  : 3F/3B
 24597 ;;		Unchanged: 0/0
 24598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24603 ;;Total ram usage:        0 bytes
 24604 ;; Hardware stack levels used:    1
 24605 ;; Hardware stack levels required when called:    6
 24606 ;; This function calls:
 24607 ;;		Nothing
 24608 ;; This function is called by:
 24609 ;;		_SYSTEM_Initialize
 24610 ;; This function uses a reentrant model
 24611 ;;
 24612                           
 24613                           	psect	text110
 24614  017DC4                     __ptext110:
 24615                           	opt callstack 0
 24616  017DC4                     _DMA1_Initialize:
 24617                           	opt callstack 23
 24618                           
 24619                           ;mcc_generated_files/dma1.c: 88:  DMA1SSA = 0x001000;
 24620                           
 24621                           ; BSR set to: 59
 24622                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24623                           ;incstack = 0
 24624  017DC4  0E00               	movlw	0
 24625  017DC6  013B               	movlb	59	; () banked
 24626  017DC8  6FF9               	movwf	249,b	;volatile
 24627  017DCA  0E10               	movlw	16
 24628  017DCC  6FFA               	movwf	250,b	;volatile
 24629  017DCE  0E00               	movlw	0
 24630  017DD0  6FFB               	movwf	251,b	;volatile
 24631                           
 24632                           ;mcc_generated_files/dma1.c: 89:  DMA1DSA = 0x3D11;
 24633  017DD2  0E3D               	movlw	61
 24634  017DD4  6FF1               	movwf	241,b	;volatile
 24635  017DD6  0E11               	movlw	17
 24636  017DD8  6FF0               	movwf	240,b	;volatile
 24637                           
 24638                           ;mcc_generated_files/dma1.c: 90:  DMA1CON1 = 0x03;
 24639  017DDA  0E03               	movlw	3
 24640  017DDC  6FFD               	movwf	253,b	;volatile
 24641                           
 24642                           ;mcc_generated_files/dma1.c: 91:  DMA1SSZ = 0x0001;
 24643  017DDE  0E00               	movlw	0
 24644  017DE0  6FF8               	movwf	248,b	;volatile
 24645  017DE2  0E01               	movlw	1
 24646  017DE4  6FF7               	movwf	247,b	;volatile
 24647                           
 24648                           ;mcc_generated_files/dma1.c: 92:  DMA1DSZ = 0x0001;
 24649  017DE6  0E00               	movlw	0
 24650  017DE8  6FEF               	movwf	239,b	;volatile
 24651  017DEA  0E01               	movlw	1
 24652  017DEC  6FEE               	movwf	238,b	;volatile
 24653                           
 24654                           ;mcc_generated_files/dma1.c: 93:  DMA1SIRQ = 0x15;
 24655  017DEE  0E15               	movlw	21
 24656  017DF0  6FFF               	movwf	255,b	;volatile
 24657                           
 24658                           ; BSR set to: 59
 24659                           ;mcc_generated_files/dma1.c: 94:  DMA1AIRQ = 0x0;
 24660  017DF2  6BFE               	clrf	254,b	;volatile
 24661                           
 24662                           ; BSR set to: 59
 24663                           ;mcc_generated_files/dma1.c: 96:  PIR2bits.DMA1DCNTIF = 0;
 24664  017DF4  0139               	movlb	57	; () banked
 24665  017DF6  93A2               	bcf	162,1,b	;volatile
 24666                           
 24667                           ; BSR set to: 57
 24668                           ;mcc_generated_files/dma1.c: 97:  PIR2bits.DMA1SCNTIF = 0;
 24669  017DF8  91A2               	bcf	162,0,b	;volatile
 24670                           
 24671                           ; BSR set to: 57
 24672                           ;mcc_generated_files/dma1.c: 98:  PIR2bits.DMA1AIF = 0;
 24673  017DFA  97A2               	bcf	162,3,b	;volatile
 24674                           
 24675                           ; BSR set to: 57
 24676                           ;mcc_generated_files/dma1.c: 99:  PIR2bits.DMA1ORIF = 0;
 24677  017DFC  95A2               	bcf	162,2,b	;volatile
 24678                           
 24679                           ; BSR set to: 57
 24680                           ;mcc_generated_files/dma1.c: 101:  PIE2bits.DMA1DCNTIE = 1;
 24681  017DFE  8392               	bsf	146,1,b	;volatile
 24682                           
 24683                           ; BSR set to: 57
 24684                           ;mcc_generated_files/dma1.c: 102:  PIE2bits.DMA1SCNTIE = 1;
 24685  017E00  8192               	bsf	146,0,b	;volatile
 24686                           
 24687                           ; BSR set to: 57
 24688                           ;mcc_generated_files/dma1.c: 103:  PIE2bits.DMA1AIE = 1;
 24689  017E02  8792               	bsf	146,3,b	;volatile
 24690                           
 24691                           ; BSR set to: 57
 24692                           ;mcc_generated_files/dma1.c: 104:  PIE2bits.DMA1ORIE = 1;
 24693  017E04  8592               	bsf	146,2,b	;volatile
 24694                           
 24695                           ; BSR set to: 57
 24696                           ;mcc_generated_files/dma1.c: 106:  ISRPR = 0;
 24697  017E06  6BF1               	clrf	241,b	;volatile
 24698                           
 24699                           ;mcc_generated_files/dma1.c: 107:  MAINPR = 1;
 24700  017E08  0E01               	movlw	1
 24701  017E0A  6FF2               	movwf	242,b	;volatile
 24702                           
 24703                           ;mcc_generated_files/dma1.c: 108:  DMA1PR = 4;
 24704  017E0C  0E04               	movlw	4
 24705  017E0E  6FF3               	movwf	243,b	;volatile
 24706                           
 24707                           ;mcc_generated_files/dma1.c: 109:  DMA2PR = 2;
 24708  017E10  0E02               	movlw	2
 24709  017E12  6FF4               	movwf	244,b	;volatile
 24710                           
 24711                           ;mcc_generated_files/dma1.c: 110:  SCANPR = 3;
 24712  017E14  0E03               	movlw	3
 24713  017E16  6FF7               	movwf	247,b	;volatile
 24714  017E18  9ED2               	bcf	16338,7,c	;# 
 24715  017E1A  0139               	banksel	14831	;# 
 24716  017E1C  0E55               	movlw	85	;# 
 24717  017E1E  6FEF               	movwf	14831,b	;# 
 24718  017E20  0EAA               	movlw	170	;# 
 24719  017E22  6FEF               	movwf	14831,b	;# 
 24720  017E24  81EF               	bsf	14831,0,b	;# 
 24721  017E26  8ED2               	bsf	16338,7,c	;# 
 24722                           
 24723                           ;mcc_generated_files/dma1.c: 123:  DMA1CON0 = 0x00;
 24724  017E28  013B               	movlb	59	; () banked
 24725  017E2A  6BFC               	clrf	252,b	;volatile
 24726                           
 24727                           ; BSR set to: 59
 24728                           ; _DMA1_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24729  017E2C  0012               	return		;funcret
 24730  017E2E                     __end_of_DMA1_Initialize:
 24731                           	opt callstack 0
 24732                           
 24733 ;; *************** function _CLKREF_Initialize *****************
 24734 ;; Defined at:
 24735 ;;		line 58 in file "mcc_generated_files/clkref.c"
 24736 ;; Parameters:    Size  Location     Type
 24737 ;;		None
 24738 ;; Auto vars:     Size  Location     Type
 24739 ;;		None
 24740 ;; Return value:  Size  Location     Type
 24741 ;;                  1  [STACK] void 
 24742 ;; Registers used:
 24743 ;;		wreg, status,2
 24744 ;; Tracked objects:
 24745 ;;		On entry : 3F/3B
 24746 ;;		On exit  : 3F/3C
 24747 ;;		Unchanged: 0/0
 24748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24753 ;;Total ram usage:        0 bytes
 24754 ;; Hardware stack levels used:    1
 24755 ;; Hardware stack levels required when called:    6
 24756 ;; This function calls:
 24757 ;;		Nothing
 24758 ;; This function is called by:
 24759 ;;		_SYSTEM_Initialize
 24760 ;; This function uses a reentrant model
 24761 ;;
 24762                           
 24763                           	psect	text111
 24764  018E0A                     __ptext111:
 24765                           	opt callstack 0
 24766  018E0A                     _CLKREF_Initialize:
 24767                           	opt callstack 23
 24768                           
 24769                           ;mcc_generated_files/clkref.c: 61:     CLKRCLK = 0x00;
 24770                           
 24771                           ; BSR set to: 59
 24772                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24773                           ;incstack = 0
 24774  018E0A  013C               	movlb	60	; () banked
 24775  018E0C  6BE6               	clrf	230,b	;volatile
 24776                           
 24777                           ; BSR set to: 60
 24778                           ;mcc_generated_files/clkref.c: 63:     CLKRCON = 0x94;
 24779  018E0E  0E94               	movlw	148
 24780  018E10  6FE5               	movwf	229,b	;volatile
 24781                           
 24782                           ; BSR set to: 60
 24783                           ; _CLKREF_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 24784  018E12  0012               	return		;funcret
 24785  018E14                     __end_of_CLKREF_Initialize:
 24786                           	opt callstack 0
 24787                           
 24788 ;; *************** function _ADCC_Initialize *****************
 24789 ;; Defined at:
 24790 ;;		line 65 in file "mcc_generated_files/adcc.c"
 24791 ;; Parameters:    Size  Location     Type
 24792 ;;		None
 24793 ;; Auto vars:     Size  Location     Type
 24794 ;;		None
 24795 ;; Return value:  Size  Location     Type
 24796 ;;                  1  [STACK] void 
 24797 ;; Registers used:
 24798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2
 24799 ;; Tracked objects:
 24800 ;;		On entry : 3F/3E
 24801 ;;		On exit  : 0/0
 24802 ;;		Unchanged: 0/0
 24803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24808 ;;Total ram usage:        0 bytes
 24809 ;; Hardware stack levels used:    1
 24810 ;; Hardware stack levels required when called:    7
 24811 ;; This function calls:
 24812 ;;		_ADCC_SetADIInterruptHandler
 24813 ;;		_ADCC_SetADTIInterruptHandler
 24814 ;; This function is called by:
 24815 ;;		_SYSTEM_Initialize
 24816 ;; This function uses a reentrant model
 24817 ;;
 24818                           
 24819                           	psect	text112
 24820  017E96                     __ptext112:
 24821                           	opt callstack 0
 24822  017E96                     _ADCC_Initialize:
 24823                           	opt callstack 22
 24824                           
 24825                           ;mcc_generated_files/adcc.c: 69:     ADLTHL = 0x00;
 24826                           
 24827                           ; BSR set to: 60
 24828                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24829                           ;incstack = 0
 24830  017E96  013E               	movlb	62	; () banked
 24831  017E98  6BDE               	clrf	222,b	;volatile
 24832                           
 24833                           ;mcc_generated_files/adcc.c: 71:     ADLTHH = 0x00;
 24834  017E9A  6BDF               	clrf	223,b	;volatile
 24835                           
 24836                           ;mcc_generated_files/adcc.c: 73:     ADUTHL = 0x00;
 24837  017E9C  6BE0               	clrf	224,b	;volatile
 24838                           
 24839                           ;mcc_generated_files/adcc.c: 75:     ADUTHH = 0x00;
 24840  017E9E  6BE1               	clrf	225,b	;volatile
 24841                           
 24842                           ;mcc_generated_files/adcc.c: 77:     ADSTPTL = 0x00;
 24843  017EA0  6BE4               	clrf	228,b	;volatile
 24844                           
 24845                           ;mcc_generated_files/adcc.c: 79:     ADSTPTH = 0x00;
 24846  017EA2  6BE5               	clrf	229,b	;volatile
 24847                           
 24848                           ;mcc_generated_files/adcc.c: 81:     ADACCU = 0x00;
 24849  017EA4  6BEA               	clrf	234,b	;volatile
 24850                           
 24851                           ; BSR set to: 62
 24852                           ;mcc_generated_files/adcc.c: 83:     ADRPT = 0x40;
 24853  017EA6  0E40               	movlw	64
 24854  017EA8  6FEC               	movwf	236,b	;volatile
 24855                           
 24856                           ; BSR set to: 62
 24857                           ;mcc_generated_files/adcc.c: 85:     ADPCH = 0x00;
 24858  017EAA  6BF1               	clrf	241,b	;volatile
 24859                           
 24860                           ; BSR set to: 62
 24861                           ;mcc_generated_files/adcc.c: 87:     ADACQL = 0x00;
 24862  017EAC  6BF3               	clrf	243,b	;volatile
 24863                           
 24864                           ; BSR set to: 62
 24865                           ;mcc_generated_files/adcc.c: 89:     ADACQH = 0x00;
 24866  017EAE  6BF4               	clrf	244,b	;volatile
 24867                           
 24868                           ; BSR set to: 62
 24869                           ;mcc_generated_files/adcc.c: 91:     ADCAP = 0x00;
 24870  017EB0  6BF5               	clrf	245,b	;volatile
 24871                           
 24872                           ; BSR set to: 62
 24873                           ;mcc_generated_files/adcc.c: 93:     ADPREL = 0x00;
 24874  017EB2  6BF6               	clrf	246,b	;volatile
 24875                           
 24876                           ; BSR set to: 62
 24877                           ;mcc_generated_files/adcc.c: 95:     ADPREH = 0x00;
 24878  017EB4  6BF7               	clrf	247,b	;volatile
 24879                           
 24880                           ; BSR set to: 62
 24881                           ;mcc_generated_files/adcc.c: 97:     ADCON1 = 0x00;
 24882  017EB6  6BF9               	clrf	249,b	;volatile
 24883                           
 24884                           ;mcc_generated_files/adcc.c: 99:     ADCON2 = 0x5B;
 24885  017EB8  0E5B               	movlw	91
 24886  017EBA  6FFA               	movwf	250,b	;volatile
 24887                           
 24888                           ;mcc_generated_files/adcc.c: 101:     ADCON3 = 0x27;
 24889  017EBC  0E27               	movlw	39
 24890  017EBE  6FFB               	movwf	251,b	;volatile
 24891                           
 24892                           ; BSR set to: 62
 24893                           ;mcc_generated_files/adcc.c: 103:     ADSTAT = 0x00;
 24894  017EC0  6BFC               	clrf	252,b	;volatile
 24895                           
 24896                           ;mcc_generated_files/adcc.c: 105:     ADREF = 0x02;
 24897  017EC2  0E02               	movlw	2
 24898  017EC4  6FFD               	movwf	253,b	;volatile
 24899                           
 24900                           ; BSR set to: 62
 24901                           ;mcc_generated_files/adcc.c: 107:     ADACT = 0x00;
 24902  017EC6  6BFE               	clrf	254,b	;volatile
 24903                           
 24904                           ;mcc_generated_files/adcc.c: 109:     ADCLK = 0x02;
 24905  017EC8  0E02               	movlw	2
 24906  017ECA  6FFF               	movwf	255,b	;volatile
 24907                           
 24908                           ;mcc_generated_files/adcc.c: 111:     ADCON0 = 0x94;
 24909  017ECC  0E94               	movlw	148
 24910  017ECE  6FF8               	movwf	248,b	;volatile
 24911                           
 24912                           ; BSR set to: 62
 24913                           ;mcc_generated_files/adcc.c: 114:     PIR1bits.ADIF = 0;
 24914  017ED0  0139               	movlb	57	; () banked
 24915  017ED2  95A1               	bcf	161,2,b	;volatile
 24916                           
 24917                           ; BSR set to: 57
 24918                           ;mcc_generated_files/adcc.c: 116:     PIE1bits.ADIE = 1;
 24919  017ED4  8591               	bsf	145,2,b	;volatile
 24920                           
 24921                           ; BSR set to: 57
 24922                           ;mcc_generated_files/adcc.c: 118:     ADCC_SetADIInterruptHandler(ADCC_DefaultInterruptH
      +                          andler);
 24923  017ED6  0E7A               	movlw	low _ADCC_DefaultInterruptHandler
 24924  017ED8  6EE6               	movwf	postinc1,c
 24925  017EDA  0E8E               	movlw	high _ADCC_DefaultInterruptHandler
 24926  017EDC  6EE6               	movwf	postinc1,c
 24927  017EDE  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24928  017EE0  6EE6               	movwf	postinc1,c
 24929  017EE2  EC2C  F0C5         	call	_ADCC_SetADIInterruptHandler	;wreg free
 24930                           
 24931                           ;mcc_generated_files/adcc.c: 121:     PIR1bits.ADTIF = 0;
 24932  017EE6  0139               	movlb	57	; () banked
 24933  017EE8  97A1               	bcf	161,3,b	;volatile
 24934                           
 24935                           ; BSR set to: 57
 24936                           ;mcc_generated_files/adcc.c: 123:     PIE1bits.ADTIE = 1;
 24937  017EEA  8791               	bsf	145,3,b	;volatile
 24938                           
 24939                           ; BSR set to: 57
 24940                           ;mcc_generated_files/adcc.c: 125:     ADCC_SetADTIInterruptHandler(ADCC_DefaultInterrupt
      +                          Handler);
 24941  017EEC  0E7A               	movlw	low _ADCC_DefaultInterruptHandler
 24942  017EEE  6EE6               	movwf	postinc1,c
 24943  017EF0  0E8E               	movlw	high _ADCC_DefaultInterruptHandler
 24944  017EF2  6EE6               	movwf	postinc1,c
 24945  017EF4  0E01               	movlw	low (_ADCC_DefaultInterruptHandler shr (0+16))
 24946  017EF6  6EE6               	movwf	postinc1,c
 24947  017EF8  EC18  F0C5         	call	_ADCC_SetADTIInterruptHandler	;wreg free
 24948                           
 24949                           ; _ADCC_Initialize: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 24950  017EFC  0012               	return		;funcret
 24951  017EFE                     __end_of_ADCC_Initialize:
 24952                           	opt callstack 0
 24953                           
 24954 ;; *************** function _ADCC_SetADTIInterruptHandler *****************
 24955 ;; Defined at:
 24956 ;;		line 336 in file "mcc_generated_files/adcc.c"
 24957 ;; Parameters:    Size  Location     Type
 24958 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 24959 ;;		 -> adc_int_t_handler(1), ADCC_DefaultInterruptHandler(1), 
 24960 ;; Auto vars:     Size  Location     Type
 24961 ;;		None
 24962 ;; Return value:  Size  Location     Type
 24963 ;;                  1  [STACK] void 
 24964 ;; Registers used:
 24965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 24966 ;; Tracked objects:
 24967 ;;		On entry : 0/0
 24968 ;;		On exit  : 0/0
 24969 ;;		Unchanged: 0/0
 24970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 24971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 24975 ;;Total ram usage:        0 bytes
 24976 ;; Hardware stack levels used:    1
 24977 ;; Hardware stack levels required when called:    6
 24978 ;; This function calls:
 24979 ;;		Nothing
 24980 ;; This function is called by:
 24981 ;;		_ADCC_Initialize
 24982 ;;		_start_adc_scan
 24983 ;; This function uses a reentrant model
 24984 ;;
 24985                           
 24986                           	psect	text113
 24987  018A30                     __ptext113:
 24988                           	opt callstack 0
 24989  018A30                     _ADCC_SetADTIInterruptHandler:
 24990                           	opt callstack 23
 24991                           
 24992                           ;mcc_generated_files/adcc.c: 337:     ADCC_ADTI_InterruptHandler = InterruptHandler;
 24993                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 24994                           
 24995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 24996                           ;incstack = 0
 24997  018A30  50E1               	movf	fsr1l,w,c
 24998  018A32  0FFD               	addlw	-3
 24999  018A34  6ED9               	movwf	fsr2l,c
 25000  018A36  50E2               	movf	fsr1h,w,c
 25001  018A38  6EDA               	movwf	fsr2h,c
 25002  018A3A  0EFF               	movlw	255
 25003  018A3C  22DA               	addwfc	fsr2h,f,c
 25004  018A3E  006F FF78  F004    	movff	postinc2,_ADCC_ADTI_InterruptHandler
 25005  018A44  006F FF78  F005    	movff	postinc2,_ADCC_ADTI_InterruptHandler+1
 25006  018A4A  006F FF74  F006    	movff	postdec2,_ADCC_ADTI_InterruptHandler+2
 25007                           
 25008                           ; _ADCC_SetADTIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 3, argsize = 3, vargsize = 0
 25009  018A50  52E5               	movf	postdec1,f,c
 25010  018A52  52E5               	movf	postdec1,f,c
 25011  018A54  52E5               	movf	postdec1,f,c
 25012  018A56  0012               	return		;funcret
 25013  018A58                     __end_of_ADCC_SetADTIInterruptHandler:
 25014                           	opt callstack 0
 25015                           
 25016 ;; *************** function _ADCC_SetADIInterruptHandler *****************
 25017 ;; Defined at:
 25018 ;;		line 323 in file "mcc_generated_files/adcc.c"
 25019 ;; Parameters:    Size  Location     Type
 25020 ;;  InterruptHan    3  [STACK] PTR FTN()void 
 25021 ;;		 -> adc_int_handler(1), ADCC_DefaultInterruptHandler(1), 
 25022 ;; Auto vars:     Size  Location     Type
 25023 ;;		None
 25024 ;; Return value:  Size  Location     Type
 25025 ;;                  1  [STACK] void 
 25026 ;; Registers used:
 25027 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h
 25028 ;; Tracked objects:
 25029 ;;		On entry : 6/0
 25030 ;;		On exit  : 0/0
 25031 ;;		Unchanged: 0/0
 25032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25037 ;;Total ram usage:        0 bytes
 25038 ;; Hardware stack levels used:    1
 25039 ;; Hardware stack levels required when called:    6
 25040 ;; This function calls:
 25041 ;;		Nothing
 25042 ;; This function is called by:
 25043 ;;		_ADCC_Initialize
 25044 ;;		_start_adc_scan
 25045 ;; This function uses a reentrant model
 25046 ;;
 25047                           
 25048                           	psect	text114
 25049  018A58                     __ptext114:
 25050                           	opt callstack 0
 25051  018A58                     _ADCC_SetADIInterruptHandler:
 25052                           	opt callstack 23
 25053                           
 25054                           ;mcc_generated_files/adcc.c: 324:     ADCC_ADI_InterruptHandler = InterruptHandler;
 25055                           ;stkvar	_InterruptHandler @ sp[(0)+-3]
 25056                           
 25057                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 3, argsize = 3 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25058                           ;incstack = 0
 25059  018A58  50E1               	movf	fsr1l,w,c
 25060  018A5A  0FFD               	addlw	-3
 25061  018A5C  6ED9               	movwf	fsr2l,c
 25062  018A5E  50E2               	movf	fsr1h,w,c
 25063  018A60  6EDA               	movwf	fsr2h,c
 25064  018A62  0EFF               	movlw	255
 25065  018A64  22DA               	addwfc	fsr2h,f,c
 25066  018A66  006F FF78  F007    	movff	postinc2,_ADCC_ADI_InterruptHandler
 25067  018A6C  006F FF78  F008    	movff	postinc2,_ADCC_ADI_InterruptHandler+1
 25068  018A72  006F FF74  F009    	movff	postdec2,_ADCC_ADI_InterruptHandler+2
 25069                           
 25070                           ; _ADCC_SetADIInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 
      +                          0 parsize = 3, argsize = 3, vargsize = 0
 25071  018A78  52E5               	movf	postdec1,f,c
 25072  018A7A  52E5               	movf	postdec1,f,c
 25073  018A7C  52E5               	movf	postdec1,f,c
 25074  018A7E  0012               	return		;funcret
 25075  018A80                     __end_of_ADCC_SetADIInterruptHandler:
 25076                           	opt callstack 0
 25077                           
 25078 ;; *************** function _TMR5_ISR *****************
 25079 ;; Defined at:
 25080 ;;		line 164 in file "mcc_generated_files/tmr5.c"
 25081 ;; Parameters:    Size  Location     Type
 25082 ;;		None
 25083 ;; Auto vars:     Size  Location     Type
 25084 ;;		None
 25085 ;; Return value:  Size  Location     Type
 25086 ;;                  1    wreg      void 
 25087 ;; Registers used:
 25088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp+11, tosl
 25089 ;; Tracked objects:
 25090 ;;		On entry : 0/0
 25091 ;;		On exit  : 0/0
 25092 ;;		Unchanged: 0/0
 25093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25098 ;;Total ram usage:        4 bytes
 25099 ;; Hardware stack levels used:    1
 25100 ;; Hardware stack levels required when called:    5
 25101 ;; This function calls:
 25102 ;;		_TMR5_CallBack
 25103 ;;		_TMR5_WriteTimer
 25104 ;; This function is called by:
 25105 ;;		Interrupt level 1
 25106 ;; This function uses a non-reentrant model
 25107 ;;
 25108                           
 25109                           	psect	text115
 25110  018154                     __ptext115:
 25111                           	opt callstack 0
 25112  018154                     _TMR5_ISR:
 25113                           	opt callstack 12
 25114                           
 25115                           ;incstack = 0
 25116  018154  006F FF60  F0E9    	movff	status,??_TMR5_ISR+2
 25117  01815A  0060  F100  F0EA   	movff	btemp+11,??_TMR5_ISR+3
 25118  018160  EE15  F3AB         	lfsr	1,___intlo_sp
 25119                           
 25120                           ;mcc_generated_files/tmr5.c: 166:  static volatile unsigned int CountCallBack = 0;;mcc_g
      +                          enerated_files/tmr5.c: 169:  PIR8bits.TMR5IF = 0;
 25121  018164  0139               	movlb	57	; () banked
 25122  018166  9DA8               	bcf	168,6,b	;volatile
 25123                           
 25124                           ; BSR set to: 57
 25125                           ;mcc_generated_files/tmr5.c: 170:  TMR5_WriteTimer(timer5ReloadVal);
 25126  018168  0060  F09B  FFE6   	movff	_timer5ReloadVal,postinc1
 25127  01816E  0060  F09F  FFE6   	movff	_timer5ReloadVal+1,postinc1
 25128  018174  ECBC  F0C2         	call	_TMR5_WriteTimer	;wreg free
 25129                           
 25130                           ;mcc_generated_files/tmr5.c: 173:  if (++CountCallBack >= (5 +V.ticker)) {
 25131  018178  0101               	movlb	1	; () banked
 25132  01817A  51A9               	movf	(_V+169)& (0+255),w,b	;volatile
 25133  01817C  0100               	movlb	0	; () banked
 25134  01817E  6FE7               	movwf	??_TMR5_ISR& (0+255),b
 25135  018180  6BE8               	clrf	(??_TMR5_ISR+1)& (0+255),b
 25136  018182  0E05               	movlw	5
 25137  018184  27E7               	addwf	??_TMR5_ISR& (0+255),f,b
 25138  018186  0E00               	movlw	0
 25139  018188  23E8               	addwfc	(??_TMR5_ISR+1)& (0+255),f,b
 25140  01818A  4A24               	infsnz	TMR5_ISR@CountCallBack^0,f,c	;volatile
 25141  01818C  2A25               	incf	(TMR5_ISR@CountCallBack+1)^0,f,c	;volatile
 25142  01818E  51E7               	movf	??_TMR5_ISR& (0+255),w,b
 25143  018190  5C24               	subwf	TMR5_ISR@CountCallBack^0,w,c	;volatile
 25144  018192  51E8               	movf	(??_TMR5_ISR+1)& (0+255),w,b
 25145  018194  5825               	subwfb	(TMR5_ISR@CountCallBack+1)^0,w,c	;volatile
 25146  018196  A0D8               	btfss	status,0,c
 25147  018198  D004               	goto	i1l1045
 25148                           
 25149                           ; BSR set to: 0
 25150                           ;mcc_generated_files/tmr5.c: 175:   TMR5_CallBack();
 25151  01819A  ECB5  F0C5         	call	_TMR5_CallBack	;wreg free
 25152                           
 25153                           ;mcc_generated_files/tmr5.c: 178:   CountCallBack = 0;
 25154  01819E  6A24               	clrf	TMR5_ISR@CountCallBack^0,c	;volatile
 25155  0181A0  6A25               	clrf	(TMR5_ISR@CountCallBack+1)^0,c	;volatile
 25156  0181A2                     i1l1045:
 25157  0181A2  0060  F3A8  F040   	movff	??_TMR5_ISR+3,btemp+11
 25158  0181A8  0060  F3A7  FFD8   	movff	??_TMR5_ISR+2,status
 25159  0181AE  0011               	retfie		f
 25160  0181B0                     __end_of_TMR5_ISR:
 25161                           	opt callstack 0
 25162                           
 25163 ;; *************** function _TMR5_WriteTimer *****************
 25164 ;; Defined at:
 25165 ;;		line 130 in file "mcc_generated_files/tmr5.c"
 25166 ;; Parameters:    Size  Location     Type
 25167 ;;  timerVal        2  [STACK] unsigned short 
 25168 ;; Auto vars:     Size  Location     Type
 25169 ;;		None
 25170 ;; Return value:  Size  Location     Type
 25171 ;;                  1  [STACK] void 
 25172 ;; Registers used:
 25173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 25174 ;; Tracked objects:
 25175 ;;		On entry : 3F/39
 25176 ;;		On exit  : 0/0
 25177 ;;		Unchanged: 0/0
 25178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25183 ;;Total ram usage:        0 bytes
 25184 ;; Hardware stack levels used:    1
 25185 ;; Hardware stack levels required when called:    3
 25186 ;; This function calls:
 25187 ;;		Nothing
 25188 ;; This function is called by:
 25189 ;;		_TMR5_ISR
 25190 ;; This function uses a reentrant model
 25191 ;;
 25192                           
 25193                           	psect	text116
 25194  018578                     __ptext116:
 25195                           	opt callstack 0
 25196  018578                     _TMR5_WriteTimer:
 25197                           	opt callstack 13
 25198                           
 25199                           ;mcc_generated_files/tmr5.c: 130: void TMR5_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr5.c: 131: {;mcc_generated_files/tmr5.c: 132:  if (T5CONbits.NOT_SYNC == 1) {
 25200                           
 25201                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 2, argsize = 2 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25202                           ;incstack = 0
 25203  018578  A49A               	btfss	154,2,c	;volatile
 25204  01857A  D00F               	goto	l8845
 25205                           
 25206                           ;mcc_generated_files/tmr5.c: 134:   T5CONbits.TMR5ON = 0;
 25207  01857C  909A               	bcf	154,0,c	;volatile
 25208                           
 25209                           ;mcc_generated_files/tmr5.c: 137:   TMR5H = (timerVal >> 8);
 25210                           ;stkvar	_timerVal @ sp[(0)+-2]
 25211  01857E  0EFF               	movlw	255
 25212  018580  24E1               	addwf	fsr1l,w,c
 25213  018582  6ED9               	movwf	fsr2l,c
 25214  018584  0EFF               	movlw	255
 25215  018586  20E2               	addwfc	fsr1h,w,c
 25216  018588  6EDA               	movwf	fsr2h,c
 25217  01858A  50DF               	movf	indf2,w,c
 25218  01858C  6E99               	movwf	153,c	;volatile
 25219                           
 25220                           ;mcc_generated_files/tmr5.c: 138:   TMR5L = timerVal;
 25221                           ;stkvar	_timerVal @ sp[(0)+-2]
 25222  01858E  0EFE               	movlw	-2
 25223  018590  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25224                           
 25225                           ;mcc_generated_files/tmr5.c: 141:   T5CONbits.TMR5ON = 1;
 25226  018596  809A               	bsf	154,0,c	;volatile
 25227                           
 25228                           ;mcc_generated_files/tmr5.c: 142:  } else {
 25229  018598  D00C               	goto	l1028
 25230  01859A                     l8845:
 25231                           
 25232                           ;mcc_generated_files/tmr5.c: 144:   TMR5H = (timerVal >> 8);
 25233                           ;stkvar	_timerVal @ sp[(0)+-2]
 25234  01859A  0EFF               	movlw	255
 25235  01859C  24E1               	addwf	fsr1l,w,c
 25236  01859E  6ED9               	movwf	fsr2l,c
 25237  0185A0  0EFF               	movlw	255
 25238  0185A2  20E2               	addwfc	fsr1h,w,c
 25239  0185A4  6EDA               	movwf	fsr2h,c
 25240  0185A6  50DF               	movf	indf2,w,c
 25241  0185A8  6E99               	movwf	153,c	;volatile
 25242                           
 25243                           ;mcc_generated_files/tmr5.c: 145:   TMR5L = timerVal;
 25244                           ;stkvar	_timerVal @ sp[(0)+-2]
 25245  0185AA  0EFE               	movlw	-2
 25246  0185AC  006F FF8F FF98     	movff	plusw1,16280	;volatile
 25247  0185B2                     l1028:
 25248                           
 25249                           ; _TMR5_WriteTimer: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          2, argsize = 2, vargsize = 0
 25250  0185B2  52E5               	movf	postdec1,f,c
 25251  0185B4  52E5               	movf	postdec1,f,c
 25252  0185B6  0012               	return		;funcret
 25253  0185B8                     __end_of_TMR5_WriteTimer:
 25254                           	opt callstack 0
 25255                           
 25256 ;; *************** function _TMR5_CallBack *****************
 25257 ;; Defined at:
 25258 ;;		line 182 in file "mcc_generated_files/tmr5.c"
 25259 ;; Parameters:    Size  Location     Type
 25260 ;;		None
 25261 ;; Auto vars:     Size  Location     Type
 25262 ;;		None
 25263 ;; Return value:  Size  Location     Type
 25264 ;;                  1  [STACK] void 
 25265 ;; Registers used:
 25266 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25267 ;; Tracked objects:
 25268 ;;		On entry : 3F/0
 25269 ;;		On exit  : 0/0
 25270 ;;		Unchanged: 0/0
 25271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25272 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25274 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25275 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25276 ;;Total ram usage:        0 bytes
 25277 ;; Hardware stack levels used:    1
 25278 ;; Hardware stack levels required when called:    4
 25279 ;; This function calls:
 25280 ;;		Absolute function
 25281 ;;		_TMR5_DefaultInterruptHandler
 25282 ;; This function is called by:
 25283 ;;		_TMR5_ISR
 25284 ;; This function uses a reentrant model
 25285 ;;
 25286                           
 25287                           	psect	text117
 25288  018B6A                     __ptext117:
 25289                           	opt callstack 0
 25290  018B6A                     _TMR5_CallBack:
 25291                           	opt callstack 12
 25292                           
 25293                           ;mcc_generated_files/tmr5.c: 185:  if (TMR5_InterruptHandler) {
 25294                           
 25295                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25296                           ;incstack = 0
 25297  018B6A  0100               	movlb	0	; () banked
 25298  018B6C  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25299  018B6E  1199               	iorwf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25300  018B70  119A               	iorwf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25301  018B72  B4D8               	btfsc	status,2,c
 25302  018B74  0012               	return	
 25303                           
 25304                           ; BSR set to: 0
 25305                           ;mcc_generated_files/tmr5.c: 186:   TMR5_InterruptHandler();
 25306  018B76  D801               	call	u866_28
 25307  018B78  0012               	return	
 25308  018B7A                     u866_28:
 25309  018B7A  0005               	push	
 25310  018B7C  6EFA               	movwf	pclath,c
 25311  018B7E  5198               	movf	_TMR5_InterruptHandler& (0+255),w,b
 25312  018B80  6EFD               	movwf	tosl,c
 25313  018B82  5199               	movf	(_TMR5_InterruptHandler+1)& (0+255),w,b
 25314  018B84  6EFE               	movwf	tosh,c
 25315  018B86  519A               	movf	(_TMR5_InterruptHandler+2)& (0+255),w,b
 25316  018B88  6EFF               	movwf	tosu,c
 25317  018B8A  50FA               	movf	pclath,w,c
 25318  018B8C  0012               	return		;indir
 25319  018B8E                     __end_of_TMR5_CallBack:
 25320                           	opt callstack 0
 25321                           
 25322 ;; *************** function _TMR5_DefaultInterruptHandler *****************
 25323 ;; Defined at:
 25324 ;;		line 195 in file "mcc_generated_files/tmr5.c"
 25325 ;; Parameters:    Size  Location     Type
 25326 ;;		None
 25327 ;; Auto vars:     Size  Location     Type
 25328 ;;		None
 25329 ;; Return value:  Size  Location     Type
 25330 ;;                  1  [STACK] void 
 25331 ;; Registers used:
 25332 ;;		wreg, status,2, status,0, btemp+11
 25333 ;; Tracked objects:
 25334 ;;		On entry : 3F/0
 25335 ;;		On exit  : 3F/1
 25336 ;;		Unchanged: 0/0
 25337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25342 ;;Total ram usage:        0 bytes
 25343 ;; Hardware stack levels used:    1
 25344 ;; Hardware stack levels required when called:    3
 25345 ;; This function calls:
 25346 ;;		Nothing
 25347 ;; This function is called by:
 25348 ;;		_TMR5_Initialize
 25349 ;;		_TMR5_CallBack
 25350 ;; This function uses a reentrant model
 25351 ;;
 25352                           
 25353                           	psect	text118
 25354  018A80                     __ptext118:
 25355                           	opt callstack 0
 25356  018A80                     _TMR5_DefaultInterruptHandler:
 25357                           	opt callstack 12
 25358                           
 25359                           ;mcc_generated_files/tmr5.c: 199:  LATEbits.LATE0 = (uint8_t) ~LATEbits.LATE0;
 25360                           
 25361                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25362                           ;incstack = 0
 25363  018A80  A0BE               	btfss	190,0,c	;volatile
 25364  018A82  D002               	goto	u838_20
 25365  018A84  0E01               	movlw	1
 25366  018A86  D001               	goto	u838_26
 25367  018A88                     u838_20:
 25368  018A88  0E00               	movlw	0
 25369  018A8A                     u838_26:
 25370  018A8A  0AFF               	xorlw	255
 25371  018A8C  6E40               	movwf	(btemp+11)^0,c
 25372  018A8E  50BE               	movf	190,w,c	;volatile
 25373  018A90  1840               	xorwf	(btemp+11)^0,w,c
 25374  018A92  0BFE               	andlw	-2
 25375  018A94  1840               	xorwf	(btemp+11)^0,w,c
 25376  018A96  6EBE               	movwf	190,c	;volatile
 25377                           
 25378                           ;mcc_generated_files/tmr5.c: 200:  V.timerint_count++;
 25379  018A98  0E01               	movlw	1
 25380  018A9A  0101               	movlb	1	; () banked
 25381  018A9C  27B7               	addwf	(_V+183)& (0+255),f,b	;volatile
 25382  018A9E  0E00               	movlw	0
 25383  018AA0  23B8               	addwfc	(_V+184)& (0+255),f,b	;volatile
 25384  018AA2  23B9               	addwfc	(_V+185)& (0+255),f,b	;volatile
 25385  018AA4  23BA               	addwfc	(_V+186)& (0+255),f,b	;volatile
 25386                           
 25387                           ; BSR set to: 1
 25388                           ; _TMR5_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25389  018AA6  0012               	return		;funcret
 25390  018AA8                     __end_of_TMR5_DefaultInterruptHandler:
 25391                           	opt callstack 0
 25392                           
 25393 ;; *************** function _INT0_ISR *****************
 25394 ;; Defined at:
 25395 ;;		line 36 in file "mcc_generated_files/ext_int.c"
 25396 ;; Parameters:    Size  Location     Type
 25397 ;;		None
 25398 ;; Auto vars:     Size  Location     Type
 25399 ;;		None
 25400 ;; Return value:  Size  Location     Type
 25401 ;;                  1    wreg      void 
 25402 ;; Registers used:
 25403 ;;		wreg, status,2, status,0, pclath, tosl
 25404 ;; Tracked objects:
 25405 ;;		On entry : 0/0
 25406 ;;		On exit  : 0/0
 25407 ;;		Unchanged: 0/0
 25408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25412 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25413 ;;Total ram usage:        0 bytes
 25414 ;; Hardware stack levels used:    1
 25415 ;; Hardware stack levels required when called:    2
 25416 ;; This function calls:
 25417 ;;		_INT0_CallBack
 25418 ;; This function is called by:
 25419 ;;		Interrupt level 2
 25420 ;; This function uses a non-reentrant model
 25421 ;;
 25422                           
 25423                           	psect	text119
 25424  018DDC                     __ptext119:
 25425                           	opt callstack 0
 25426  018DDC                     _INT0_ISR:
 25427                           	opt callstack 12
 25428                           
 25429                           ; BSR set to: 1
 25430                           ;incstack = 0
 25431  018DDC  EE13  F356         	lfsr	1,___inthi_sp
 25432                           
 25433                           ;mcc_generated_files/ext_int.c: 38:  (PIR1bits.INT0IF = 0);
 25434  018DE0  0139               	movlb	57	; () banked
 25435  018DE2  91A1               	bcf	161,0,b	;volatile
 25436                           
 25437                           ; BSR set to: 57
 25438                           ;mcc_generated_files/ext_int.c: 41:  INT0_CallBack();
 25439  018DE4  ECC7  F0C5         	call	_INT0_CallBack	;wreg free
 25440  018DE8  0011               	retfie		f
 25441  018DEA                     __end_of_INT0_ISR:
 25442                           	opt callstack 0
 25443                           
 25444 ;; *************** function _INT0_CallBack *****************
 25445 ;; Defined at:
 25446 ;;		line 44 in file "mcc_generated_files/ext_int.c"
 25447 ;; Parameters:    Size  Location     Type
 25448 ;;		None
 25449 ;; Auto vars:     Size  Location     Type
 25450 ;;		None
 25451 ;; Return value:  Size  Location     Type
 25452 ;;                  1  [STACK] void 
 25453 ;; Registers used:
 25454 ;;		wreg, status,2, status,0, pclath, tosl
 25455 ;; Tracked objects:
 25456 ;;		On entry : 3F/39
 25457 ;;		On exit  : 0/0
 25458 ;;		Unchanged: 0/0
 25459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25464 ;;Total ram usage:        0 bytes
 25465 ;; Hardware stack levels used:    1
 25466 ;; Hardware stack levels required when called:    1
 25467 ;; This function calls:
 25468 ;;		Absolute function
 25469 ;;		_INT0_DefaultInterruptHandler
 25470 ;; This function is called by:
 25471 ;;		_INT0_ISR
 25472 ;; This function uses a reentrant model
 25473 ;;
 25474                           
 25475                           	psect	text120
 25476  018B8E                     __ptext120:
 25477                           	opt callstack 0
 25478  018B8E                     _INT0_CallBack:
 25479                           	opt callstack 12
 25480                           
 25481                           ;mcc_generated_files/ext_int.c: 47:  if (INT0_InterruptHandler) {
 25482                           
 25483                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25484                           ;incstack = 0
 25485  018B8E  5019               	movf	_INT0_InterruptHandler^0,w,c
 25486  018B90  101A               	iorwf	(_INT0_InterruptHandler+1)^0,w,c
 25487  018B92  101B               	iorwf	(_INT0_InterruptHandler+2)^0,w,c
 25488  018B94  B4D8               	btfsc	status,2,c
 25489  018B96  0012               	return	
 25490                           
 25491                           ;mcc_generated_files/ext_int.c: 48:   INT0_InterruptHandler();
 25492  018B98  D801               	call	u404_48
 25493  018B9A  0012               	return	
 25494  018B9C                     u404_48:
 25495  018B9C  0005               	push	
 25496  018B9E  6EFA               	movwf	pclath,c
 25497  018BA0  5019               	movf	_INT0_InterruptHandler^0,w,c
 25498  018BA2  6EFD               	movwf	tosl,c
 25499  018BA4  501A               	movf	(_INT0_InterruptHandler+1)^0,w,c
 25500  018BA6  6EFE               	movwf	tosh,c
 25501  018BA8  501B               	movf	(_INT0_InterruptHandler+2)^0,w,c
 25502  018BAA  6EFF               	movwf	tosu,c
 25503  018BAC  50FA               	movf	pclath,w,c
 25504  018BAE  0012               	return		;indir
 25505  018BB0                     __end_of_INT0_CallBack:
 25506                           	opt callstack 0
 25507                           
 25508 ;; *************** function _INT0_DefaultInterruptHandler *****************
 25509 ;; Defined at:
 25510 ;;		line 57 in file "mcc_generated_files/ext_int.c"
 25511 ;; Parameters:    Size  Location     Type
 25512 ;;		None
 25513 ;; Auto vars:     Size  Location     Type
 25514 ;;		None
 25515 ;; Return value:  Size  Location     Type
 25516 ;;                  1  [STACK] void 
 25517 ;; Registers used:
 25518 ;;		None
 25519 ;; Tracked objects:
 25520 ;;		On entry : 0/39
 25521 ;;		On exit  : 0/0
 25522 ;;		Unchanged: 0/0
 25523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25524 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25527 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25528 ;;Total ram usage:        0 bytes
 25529 ;; Hardware stack levels used:    1
 25530 ;; This function calls:
 25531 ;;		Nothing
 25532 ;; This function is called by:
 25533 ;;		_EXT_INT_Initialize
 25534 ;;		_INT0_CallBack
 25535 ;; This function uses a reentrant model
 25536 ;;
 25537                           
 25538                           	psect	text121
 25539  018E76                     __ptext121:
 25540                           	opt callstack 0
 25541  018E76                     _INT0_DefaultInterruptHandler:
 25542                           	opt callstack 12
 25543                           
 25544                           ; _INT0_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25545                           
 25546                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25547                           ;incstack = 0
 25548  018E76  0012               	return		;funcret
 25549  018E78                     __end_of_INT0_DefaultInterruptHandler:
 25550                           	opt callstack 0
 25551                           
 25552 ;; *************** function _INT1_ISR *****************
 25553 ;; Defined at:
 25554 ;;		line 63 in file "mcc_generated_files/ext_int.c"
 25555 ;; Parameters:    Size  Location     Type
 25556 ;;		None
 25557 ;; Auto vars:     Size  Location     Type
 25558 ;;		None
 25559 ;; Return value:  Size  Location     Type
 25560 ;;                  1    wreg      void 
 25561 ;; Registers used:
 25562 ;;		wreg, status,2, status,0, pclath, tosl
 25563 ;; Tracked objects:
 25564 ;;		On entry : 0/0
 25565 ;;		On exit  : 0/0
 25566 ;;		Unchanged: 0/0
 25567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25572 ;;Total ram usage:        0 bytes
 25573 ;; Hardware stack levels used:    1
 25574 ;; Hardware stack levels required when called:    2
 25575 ;; This function calls:
 25576 ;;		_INT1_CallBack
 25577 ;; This function is called by:
 25578 ;;		Interrupt level 2
 25579 ;; This function uses a non-reentrant model
 25580 ;;
 25581                           
 25582                           	psect	text122
 25583  018DEC                     __ptext122:
 25584                           	opt callstack 0
 25585  018DEC                     _INT1_ISR:
 25586                           	opt callstack 12
 25587                           
 25588                           ;incstack = 0
 25589  018DEC  EE13  F356         	lfsr	1,___inthi_sp
 25590                           
 25591                           ;mcc_generated_files/ext_int.c: 65:  (PIR5bits.INT1IF = 0);
 25592  018DF0  0139               	movlb	57	; () banked
 25593  018DF2  91A5               	bcf	165,0,b	;volatile
 25594                           
 25595                           ; BSR set to: 57
 25596                           ;mcc_generated_files/ext_int.c: 68:  INT1_CallBack();
 25597  018DF4  ECD8  F0C5         	call	_INT1_CallBack	;wreg free
 25598  018DF8  0011               	retfie		f
 25599  018DFA                     __end_of_INT1_ISR:
 25600                           	opt callstack 0
 25601                           
 25602 ;; *************** function _INT1_CallBack *****************
 25603 ;; Defined at:
 25604 ;;		line 71 in file "mcc_generated_files/ext_int.c"
 25605 ;; Parameters:    Size  Location     Type
 25606 ;;		None
 25607 ;; Auto vars:     Size  Location     Type
 25608 ;;		None
 25609 ;; Return value:  Size  Location     Type
 25610 ;;                  1  [STACK] void 
 25611 ;; Registers used:
 25612 ;;		wreg, status,2, status,0, pclath, tosl
 25613 ;; Tracked objects:
 25614 ;;		On entry : 3F/39
 25615 ;;		On exit  : 0/0
 25616 ;;		Unchanged: 0/0
 25617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25622 ;;Total ram usage:        0 bytes
 25623 ;; Hardware stack levels used:    1
 25624 ;; Hardware stack levels required when called:    1
 25625 ;; This function calls:
 25626 ;;		Absolute function
 25627 ;;		_INT1_DefaultInterruptHandler
 25628 ;; This function is called by:
 25629 ;;		_INT1_ISR
 25630 ;; This function uses a reentrant model
 25631 ;;
 25632                           
 25633                           	psect	text123
 25634  018BB0                     __ptext123:
 25635                           	opt callstack 0
 25636  018BB0                     _INT1_CallBack:
 25637                           	opt callstack 12
 25638                           
 25639                           ;mcc_generated_files/ext_int.c: 74:  if (INT1_InterruptHandler) {
 25640                           
 25641                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25642                           ;incstack = 0
 25643  018BB0  5016               	movf	_INT1_InterruptHandler^0,w,c
 25644  018BB2  1017               	iorwf	(_INT1_InterruptHandler+1)^0,w,c
 25645  018BB4  1018               	iorwf	(_INT1_InterruptHandler+2)^0,w,c
 25646  018BB6  B4D8               	btfsc	status,2,c
 25647  018BB8  0012               	return	
 25648                           
 25649                           ;mcc_generated_files/ext_int.c: 75:   INT1_InterruptHandler();
 25650  018BBA  D801               	call	u406_48
 25651  018BBC  0012               	return	
 25652  018BBE                     u406_48:
 25653  018BBE  0005               	push	
 25654  018BC0  6EFA               	movwf	pclath,c
 25655  018BC2  5016               	movf	_INT1_InterruptHandler^0,w,c
 25656  018BC4  6EFD               	movwf	tosl,c
 25657  018BC6  5017               	movf	(_INT1_InterruptHandler+1)^0,w,c
 25658  018BC8  6EFE               	movwf	tosh,c
 25659  018BCA  5018               	movf	(_INT1_InterruptHandler+2)^0,w,c
 25660  018BCC  6EFF               	movwf	tosu,c
 25661  018BCE  50FA               	movf	pclath,w,c
 25662  018BD0  0012               	return		;indir
 25663  018BD2                     __end_of_INT1_CallBack:
 25664                           	opt callstack 0
 25665                           
 25666 ;; *************** function _INT1_DefaultInterruptHandler *****************
 25667 ;; Defined at:
 25668 ;;		line 84 in file "mcc_generated_files/ext_int.c"
 25669 ;; Parameters:    Size  Location     Type
 25670 ;;		None
 25671 ;; Auto vars:     Size  Location     Type
 25672 ;;		None
 25673 ;; Return value:  Size  Location     Type
 25674 ;;                  1  [STACK] void 
 25675 ;; Registers used:
 25676 ;;		None
 25677 ;; Tracked objects:
 25678 ;;		On entry : 0/39
 25679 ;;		On exit  : 0/0
 25680 ;;		Unchanged: 0/0
 25681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25682 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25685 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25686 ;;Total ram usage:        0 bytes
 25687 ;; Hardware stack levels used:    1
 25688 ;; This function calls:
 25689 ;;		Nothing
 25690 ;; This function is called by:
 25691 ;;		_EXT_INT_Initialize
 25692 ;;		_INT1_CallBack
 25693 ;; This function uses a reentrant model
 25694 ;;
 25695                           
 25696                           	psect	text124
 25697  018E78                     __ptext124:
 25698                           	opt callstack 0
 25699  018E78                     _INT1_DefaultInterruptHandler:
 25700                           	opt callstack 12
 25701                           
 25702                           ; _INT1_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25703                           
 25704                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25705                           ;incstack = 0
 25706  018E78  0012               	return		;funcret
 25707  018E7A                     __end_of_INT1_DefaultInterruptHandler:
 25708                           	opt callstack 0
 25709                           
 25710 ;; *************** function _Default_ISR *****************
 25711 ;; Defined at:
 25712 ;;		line 88 in file "mcc_generated_files/interrupt_manager.c"
 25713 ;; Parameters:    Size  Location     Type
 25714 ;;		None
 25715 ;; Auto vars:     Size  Location     Type
 25716 ;;		None
 25717 ;; Return value:  Size  Location     Type
 25718 ;;                  1    wreg      void 
 25719 ;; Registers used:
 25720 ;;		None
 25721 ;; Tracked objects:
 25722 ;;		On entry : 0/0
 25723 ;;		On exit  : 0/0
 25724 ;;		Unchanged: 0/0
 25725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25726 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25727 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25728 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25729 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25730 ;;Total ram usage:        0 bytes
 25731 ;; Hardware stack levels used:    1
 25732 ;; This function calls:
 25733 ;;		Nothing
 25734 ;; This function is called by:
 25735 ;;		Interrupt level 2
 25736 ;; This function uses a non-reentrant model
 25737 ;;
 25738                           
 25739                           	psect	text125
 25740  018E70                     __ptext125:
 25741                           	opt callstack 0
 25742  018E70                     _Default_ISR:
 25743                           	opt callstack 14
 25744                           
 25745                           ;incstack = 0
 25746  018E70  EE13  F356         	lfsr	1,___inthi_sp
 25747  018E74  0011               	retfie		f
 25748  018E76                     __end_of_Default_ISR:
 25749                           	opt callstack 0
 25750                           
 25751 ;; *************** function _ADCC_ISR *****************
 25752 ;; Defined at:
 25753 ;;		line 314 in file "mcc_generated_files/adcc.c"
 25754 ;; Parameters:    Size  Location     Type
 25755 ;;		None
 25756 ;; Auto vars:     Size  Location     Type
 25757 ;;		None
 25758 ;; Return value:  Size  Location     Type
 25759 ;;                  1    wreg      void 
 25760 ;; Registers used:
 25761 ;;		wreg, status,2, status,0, pclath, btemp+11, tosl
 25762 ;; Tracked objects:
 25763 ;;		On entry : 0/0
 25764 ;;		On exit  : 0/0
 25765 ;;		Unchanged: 0/0
 25766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25769 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25770 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25771 ;;Total ram usage:        1 bytes
 25772 ;; Hardware stack levels used:    1
 25773 ;; Hardware stack levels required when called:    1
 25774 ;; This function calls:
 25775 ;;		Absolute function
 25776 ;;		_ADCC_DefaultInterruptHandler
 25777 ;;		_adc_int_handler
 25778 ;; This function is called by:
 25779 ;;		Interrupt level 2
 25780 ;; This function uses a non-reentrant model
 25781 ;;
 25782                           
 25783                           	psect	text126
 25784  01862C                     __ptext126:
 25785                           	opt callstack 0
 25786  01862C                     _ADCC_ISR:
 25787                           	opt callstack 13
 25788                           
 25789                           ;incstack = 0
 25790  01862C  0060  F100  F055   	movff	btemp+11,??_ADCC_ISR
 25791  018632  EE13  F356         	lfsr	1,___inthi_sp
 25792                           
 25793                           ;mcc_generated_files/adcc.c: 317:     PIR1bits.ADIF = 0;
 25794  018636  0139               	movlb	57	; () banked
 25795  018638  95A1               	bcf	161,2,b	;volatile
 25796                           
 25797                           ; BSR set to: 57
 25798                           ;mcc_generated_files/adcc.c: 319:     if (ADCC_ADI_InterruptHandler)
 25799  01863A  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25800  01863C  1008               	iorwf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25801  01863E  1009               	iorwf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25802  018640  B4D8               	btfsc	status,2,c
 25803  018642  D00C               	goto	i2u434_49
 25804                           
 25805                           ; BSR set to: 57
 25806                           ;mcc_generated_files/adcc.c: 320:             ADCC_ADI_InterruptHandler();
 25807  018644  D801               	call	i2u434_48
 25808  018646  D00A               	goto	i2u434_49
 25809  018648                     i2u434_48:
 25810  018648  0005               	push	
 25811  01864A  6EFA               	movwf	pclath,c
 25812  01864C  5007               	movf	_ADCC_ADI_InterruptHandler^0,w,c
 25813  01864E  6EFD               	movwf	tosl,c
 25814  018650  5008               	movf	(_ADCC_ADI_InterruptHandler+1)^0,w,c
 25815  018652  6EFE               	movwf	tosh,c
 25816  018654  5009               	movf	(_ADCC_ADI_InterruptHandler+2)^0,w,c
 25817  018656  6EFF               	movwf	tosu,c
 25818  018658  50FA               	movf	pclath,w,c
 25819  01865A  0012               	return		;indir
 25820  01865C                     i2u434_49:
 25821  01865C  0060  F154  F040   	movff	??_ADCC_ISR,btemp+11
 25822  018662  0011               	retfie		f
 25823  018664                     __end_of_ADCC_ISR:
 25824                           	opt callstack 0
 25825                           
 25826 ;; *************** function _adc_int_t_handler *****************
 25827 ;; Defined at:
 25828 ;;		line 124 in file "daq.c"
 25829 ;; Parameters:    Size  Location     Type
 25830 ;;		None
 25831 ;; Auto vars:     Size  Location     Type
 25832 ;;		None
 25833 ;; Return value:  Size  Location     Type
 25834 ;;                  1  [STACK] void 
 25835 ;; Registers used:
 25836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+1, btemp+8, btemp+9, btemp+11, prodl, prodh
 25837 ;; Tracked objects:
 25838 ;;		On entry : 3F/39
 25839 ;;		On exit  : 1/0
 25840 ;;		Unchanged: 0/0
 25841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25846 ;;Total ram usage:        0 bytes
 25847 ;; Hardware stack levels used:    1
 25848 ;; Hardware stack levels required when called:    1
 25849 ;; This function calls:
 25850 ;;		_ADCC_DischargeSampleCapacitor
 25851 ;;		_ADCC_StartConversion
 25852 ;; This function is called by:
 25853 ;;		_start_adc_scan
 25854 ;;		_ADCC_ThresholdISR
 25855 ;; This function uses a reentrant model
 25856 ;;
 25857                           
 25858                           	psect	text127
 25859  017966                     __ptext127:
 25860                           	opt callstack 0
 25861  017966                     _adc_int_t_handler:
 25862                           	opt callstack 12
 25863                           
 25864                           ;daq.c: 129:  R.raw_adc[R.scan_index] = ((adc_result_t) ((ADFLTRH << 8) + ADFLTRL));
 25865                           
 25866                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25867                           ;incstack = 0
 25868  017966  013E               	movlb	62	; () banked
 25869  017968  51E6               	movf	230,w,b	;volatile
 25870  01796A  006F FB9C  F035    	movff	16103,btemp	;volatile
 25871  017970  6A36               	clrf	(btemp+1)^0,c
 25872  017972  0060  F0D4  F036   	movff	btemp,btemp+1
 25873  017978  6A35               	clrf	btemp^0,c
 25874  01797A  2635               	addwf	btemp^0,f,c
 25875  01797C  0E00               	movlw	0
 25876  01797E  2236               	addwfc	(btemp+1)^0,f,c
 25877  017980  0100               	movlb	0	; () banked
 25878  017982  51CB               	movf	(_R+40)& (0+255),w,b	;volatile
 25879  017984  0D02               	mullw	2
 25880  017986  50F3               	movf	243,w,c
 25881  017988  0FA3               	addlw	low _R
 25882  01798A  6ED9               	movwf	fsr2l,c
 25883  01798C  6ADA               	clrf	fsr2h,c
 25884  01798E  0060  F0D7  FFDE   	movff	btemp,postinc2
 25885  017994  0060  F0DB  FFDD   	movff	btemp+1,postdec2
 25886  01799A                     l8999:
 25887                           
 25888                           ;daq.c: 131:   if (++R.scan_index > 0XD) {
 25889  01799A  0100               	movlb	0	; () banked
 25890  01799C  2BCB               	incf	(_R+40)& (0+255),f,b	;volatile
 25891  01799E  0E0D               	movlw	13
 25892  0179A0  65CB               	cpfsgt	(_R+40)& (0+255),b	;volatile
 25893  0179A2  D004               	goto	l9007
 25894                           
 25895                           ; BSR set to: 0
 25896                           ;daq.c: 132:    R.done = 1;
 25897  0179A4  0E01               	movlw	1
 25898  0179A6  6FCE               	movwf	(_R+43)& (0+255),b	;volatile
 25899                           
 25900                           ; BSR set to: 0
 25901  0179A8  92BE               	bcf	190,1,c	;volatile
 25902  0179AA  0012               	return	
 25903  0179AC                     l9007:
 25904                           
 25905                           ; BSR set to: 0
 25906                           ;daq.c: 138:  } while (!((R.scan_select >> R.scan_index) &0x1));
 25907  0179AC  0060  F32C  F040   	movff	_R+40,btemp+11	;volatile
 25908  0179B2  EE20  F0CC         	lfsr	2,_R+41	;volatile
 25909  0179B6  006F FF78  F03D    	movff	postinc2,btemp+8
 25910  0179BC  006F FF74  F03E    	movff	postdec2,btemp+9
 25911  0179C2  2A40               	incf	(btemp+11)^0,f,c
 25912  0179C4  D003               	goto	u878_44
 25913  0179C6                     u878_45:
 25914  0179C6  90D8               	bcf	status,0,c
 25915  0179C8  323E               	rrcf	(btemp+9)^0,f,c
 25916  0179CA  323D               	rrcf	(btemp+8)^0,f,c
 25917  0179CC                     u878_44:
 25918  0179CC  2E40               	decfsz	(btemp+11)^0,f,c
 25919  0179CE  D7FB               	goto	u878_45
 25920  0179D0  A03D               	btfss	(btemp+8)^0,0,c
 25921  0179D2  D7E3               	goto	l8999
 25922                           
 25923                           ;daq.c: 139:  ADCC_DischargeSampleCapacitor();
 25924  0179D4  EC1B  F0C7         	call	_ADCC_DischargeSampleCapacitor	;wreg free
 25925                           
 25926                           ; BSR set to: 62
 25927                           ;daq.c: 140:  ADCC_StartConversion(R.scan_index & 0xf);
 25928  0179D8  0100               	movlb	0	; () banked
 25929  0179DA  51CB               	movf	(_R+40)& (0+255),w,b	;volatile
 25930  0179DC  0B0F               	andlw	15
 25931  0179DE  6EE6               	movwf	postinc1,c
 25932  0179E0  ECCE  F0C6         	call	_ADCC_StartConversion	;wreg free
 25933                           
 25934                           ; BSR set to: 62
 25935  0179E4  A2BE               	btfss	190,1,c	;volatile
 25936  0179E6  D002               	goto	u880_40
 25937  0179E8  0E01               	movlw	1
 25938  0179EA  D001               	goto	u880_46
 25939  0179EC                     u880_40:
 25940  0179EC  0E00               	movlw	0
 25941  0179EE                     u880_46:
 25942  0179EE  0AFF               	xorlw	255
 25943  0179F0  6E40               	movwf	(btemp+11)^0,c
 25944  0179F2  4640               	rlncf	(btemp+11)^0,f,c
 25945  0179F4  50BE               	movf	190,w,c	;volatile
 25946  0179F6  1840               	xorwf	(btemp+11)^0,w,c
 25947  0179F8  0BFD               	andlw	-3
 25948  0179FA  1840               	xorwf	(btemp+11)^0,w,c
 25949  0179FC  6EBE               	movwf	190,c	;volatile
 25950                           
 25951                           ; _adc_int_t_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 25952  0179FE  0012               	return		;funcret
 25953  017A00                     __end_of_adc_int_t_handler:
 25954                           	opt callstack 0
 25955                           
 25956 ;; *************** function _ADCC_DefaultInterruptHandler *****************
 25957 ;; Defined at:
 25958 ;;		line 339 in file "mcc_generated_files/adcc.c"
 25959 ;; Parameters:    Size  Location     Type
 25960 ;;		None
 25961 ;; Auto vars:     Size  Location     Type
 25962 ;;		None
 25963 ;; Return value:  Size  Location     Type
 25964 ;;                  1  [STACK] void 
 25965 ;; Registers used:
 25966 ;;		None
 25967 ;; Tracked objects:
 25968 ;;		On entry : 3F/39
 25969 ;;		On exit  : 0/0
 25970 ;;		Unchanged: 0/0
 25971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 25972 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25973 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25975 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 25976 ;;Total ram usage:        0 bytes
 25977 ;; Hardware stack levels used:    1
 25978 ;; This function calls:
 25979 ;;		Nothing
 25980 ;; This function is called by:
 25981 ;;		_ADCC_Initialize
 25982 ;;		_ADCC_ISR
 25983 ;;		_ADCC_ThresholdISR
 25984 ;; This function uses a reentrant model
 25985 ;;
 25986                           
 25987                           	psect	text128
 25988  018E7A                     __ptext128:
 25989                           	opt callstack 0
 25990  018E7A                     _ADCC_DefaultInterruptHandler:
 25991                           	opt callstack 13
 25992                           
 25993                           ; _ADCC_DefaultInterruptHandler: autosize = 0, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 25994                           
 25995                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 25996                           ;incstack = 0
 25997  018E7A  0012               	return		;funcret
 25998  018E7C                     __end_of_ADCC_DefaultInterruptHandler:
 25999                           	opt callstack 0
 26000                           
 26001 ;; *************** function _adc_int_handler *****************
 26002 ;; Defined at:
 26003 ;;		line 114 in file "daq.c"
 26004 ;; Parameters:    Size  Location     Type
 26005 ;;		None
 26006 ;; Auto vars:     Size  Location     Type
 26007 ;;		None
 26008 ;; Return value:  Size  Location     Type
 26009 ;;                  1  [STACK] void 
 26010 ;; Registers used:
 26011 ;;		wreg, status,2, status,0, btemp+11
 26012 ;; Tracked objects:
 26013 ;;		On entry : 3F/39
 26014 ;;		On exit  : 0/0
 26015 ;;		Unchanged: 0/0
 26016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26021 ;;Total ram usage:        0 bytes
 26022 ;; Hardware stack levels used:    1
 26023 ;; This function calls:
 26024 ;;		Nothing
 26025 ;; This function is called by:
 26026 ;;		_start_adc_scan
 26027 ;;		_ADCC_ISR
 26028 ;; This function uses a reentrant model
 26029 ;;
 26030                           
 26031                           	psect	text129
 26032  018C4E                     __ptext129:
 26033                           	opt callstack 0
 26034  018C4E                     _adc_int_handler:
 26035                           	opt callstack 13
 26036                           
 26037                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26038                           ;incstack = 0
 26039                           ;daq.c: 117:  do { LATEbits.LATE2 = ~LATEbits.LATE2; } while(0);
 26040  018C4E  A4BE               	btfss	190,2,c	;volatile
 26041  018C50  D002               	goto	u428_40
 26042  018C52  0E01               	movlw	1
 26043  018C54  D001               	goto	u428_46
 26044  018C56                     u428_40:
 26045  018C56  0E00               	movlw	0
 26046  018C58                     u428_46:
 26047  018C58  0AFF               	xorlw	255
 26048  018C5A  6E40               	movwf	(btemp+11)^0,c
 26049  018C5C  4640               	rlncf	(btemp+11)^0,f,c
 26050  018C5E  4640               	rlncf	(btemp+11)^0,f,c
 26051  018C60  50BE               	movf	190,w,c	;volatile
 26052  018C62  1840               	xorwf	(btemp+11)^0,w,c
 26053  018C64  0BFB               	andlw	-5
 26054  018C66  1840               	xorwf	(btemp+11)^0,w,c
 26055  018C68  6EBE               	movwf	190,c	;volatile
 26056                           
 26057                           ; _adc_int_handler: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 
      +                          0, argsize = 0, vargsize = 0
 26058  018C6A  0012               	return		;funcret
 26059  018C6C                     __end_of_adc_int_handler:
 26060                           	opt callstack 0
 26061                           
 26062 ;; *************** function _ADCC_ThresholdISR *****************
 26063 ;; Defined at:
 26064 ;;		line 327 in file "mcc_generated_files/adcc.c"
 26065 ;; Parameters:    Size  Location     Type
 26066 ;;		None
 26067 ;; Auto vars:     Size  Location     Type
 26068 ;;		None
 26069 ;; Return value:  Size  Location     Type
 26070 ;;                  1    wreg      void 
 26071 ;; Registers used:
 26072 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, btemp+1, btemp+8, btemp+9, btemp+11, tosl, prod
      +l, prodh
 26073 ;; Tracked objects:
 26074 ;;		On entry : 0/0
 26075 ;;		On exit  : 0/0
 26076 ;;		Unchanged: 0/0
 26077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26080 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26081 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26082 ;;Total ram usage:        5 bytes
 26083 ;; Hardware stack levels used:    1
 26084 ;; Hardware stack levels required when called:    2
 26085 ;; This function calls:
 26086 ;;		Absolute function
 26087 ;;		_ADCC_DefaultInterruptHandler
 26088 ;;		_adc_int_t_handler
 26089 ;; This function is called by:
 26090 ;;		Interrupt level 2
 26091 ;; This function uses a non-reentrant model
 26092 ;;
 26093                           
 26094                           	psect	text130
 26095  017F00                     __ptext130:
 26096                           	opt callstack 0
 26097  017F00                     _ADCC_ThresholdISR:
 26098                           	opt callstack 12
 26099                           
 26100                           ;incstack = 0
 26101  017F00  0060  F0D4  F056   	movff	btemp,??_ADCC_ThresholdISR
 26102  017F06  0060  F0D8  F057   	movff	btemp+1,??_ADCC_ThresholdISR+1
 26103  017F0C  0060  F0F4  F058   	movff	btemp+8,??_ADCC_ThresholdISR+2
 26104  017F12  0060  F0F8  F059   	movff	btemp+9,??_ADCC_ThresholdISR+3
 26105  017F18  0060  F100  F05A   	movff	btemp+11,??_ADCC_ThresholdISR+4
 26106  017F1E  EE13  F356         	lfsr	1,___inthi_sp
 26107                           
 26108                           ;mcc_generated_files/adcc.c: 330:     PIR1bits.ADTIF = 0;
 26109  017F22  0139               	movlb	57	; () banked
 26110  017F24  97A1               	bcf	161,3,b	;volatile
 26111                           
 26112                           ; BSR set to: 57
 26113                           ;mcc_generated_files/adcc.c: 332:     if (ADCC_ADTI_InterruptHandler)
 26114  017F26  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26115  017F28  1005               	iorwf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26116  017F2A  1006               	iorwf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26117  017F2C  B4D8               	btfsc	status,2,c
 26118  017F2E  D00C               	goto	i2u882_49
 26119                           
 26120                           ; BSR set to: 57
 26121                           ;mcc_generated_files/adcc.c: 333:         ADCC_ADTI_InterruptHandler();
 26122  017F30  D801               	call	i2u882_48
 26123  017F32  D00A               	goto	i2u882_49
 26124  017F34                     i2u882_48:
 26125  017F34  0005               	push	
 26126  017F36  6EFA               	movwf	pclath,c
 26127  017F38  5004               	movf	_ADCC_ADTI_InterruptHandler^0,w,c
 26128  017F3A  6EFD               	movwf	tosl,c
 26129  017F3C  5005               	movf	(_ADCC_ADTI_InterruptHandler+1)^0,w,c
 26130  017F3E  6EFE               	movwf	tosh,c
 26131  017F40  5006               	movf	(_ADCC_ADTI_InterruptHandler+2)^0,w,c
 26132  017F42  6EFF               	movwf	tosu,c
 26133  017F44  50FA               	movf	pclath,w,c
 26134  017F46  0012               	return		;indir
 26135  017F48                     i2u882_49:
 26136  017F48  0060  F168  F040   	movff	??_ADCC_ThresholdISR+4,btemp+11
 26137  017F4E  0060  F164  F03E   	movff	??_ADCC_ThresholdISR+3,btemp+9
 26138  017F54  0060  F160  F03D   	movff	??_ADCC_ThresholdISR+2,btemp+8
 26139  017F5A  0060  F15C  F036   	movff	??_ADCC_ThresholdISR+1,btemp+1
 26140  017F60  0060  F158  F035   	movff	??_ADCC_ThresholdISR,btemp
 26141  017F66  0011               	retfie		f
 26142  017F68                     __end_of_ADCC_ThresholdISR:
 26143                           	opt callstack 0
 26144                           
 26145 ;; *************** function _UART1_tx_vect_isr *****************
 26146 ;; Defined at:
 26147 ;;		line 199 in file "mcc_generated_files/uart1.c"
 26148 ;; Parameters:    Size  Location     Type
 26149 ;;		None
 26150 ;; Auto vars:     Size  Location     Type
 26151 ;;		None
 26152 ;; Return value:  Size  Location     Type
 26153 ;;                  1    wreg      void 
 26154 ;; Registers used:
 26155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26156 ;; Tracked objects:
 26157 ;;		On entry : 0/0
 26158 ;;		On exit  : 0/0
 26159 ;;		Unchanged: 0/0
 26160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26165 ;;Total ram usage:        0 bytes
 26166 ;; Hardware stack levels used:    1
 26167 ;; Hardware stack levels required when called:    1
 26168 ;; This function calls:
 26169 ;;		Absolute function
 26170 ;;		_UART1_Transmit_ISR
 26171 ;; This function is called by:
 26172 ;;		Interrupt level 2
 26173 ;; This function uses a non-reentrant model
 26174 ;;
 26175                           
 26176                           	psect	text131
 26177  018AA8                     __ptext131:
 26178                           	opt callstack 0
 26179  018AA8                     _UART1_tx_vect_isr:
 26180                           	opt callstack 13
 26181                           
 26182                           ;incstack = 0
 26183  018AA8  EE13  F356         	lfsr	1,___inthi_sp
 26184                           
 26185                           ;mcc_generated_files/uart1.c: 201:  if (UART1_TxInterruptHandler) {
 26186  018AAC  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26187  018AAE  100B               	iorwf	(_UART1_TxInterruptHandler+1)^0,w,c
 26188  018AB0  100C               	iorwf	(_UART1_TxInterruptHandler+2)^0,w,c
 26189  018AB2  B4D8               	btfsc	status,2,c
 26190  018AB4  0011               	retfie		f
 26191                           
 26192                           ;mcc_generated_files/uart1.c: 202:   UART1_TxInterruptHandler();
 26193  018AB6  D801               	call	i2u1068_48
 26194  018AB8  0011               	retfie		f
 26195  018ABA                     i2u1068_48:
 26196  018ABA  0005               	push	
 26197  018ABC  6EFA               	movwf	pclath,c
 26198  018ABE  500A               	movf	_UART1_TxInterruptHandler^0,w,c
 26199  018AC0  6EFD               	movwf	tosl,c
 26200  018AC2  500B               	movf	(_UART1_TxInterruptHandler+1)^0,w,c
 26201  018AC4  6EFE               	movwf	tosh,c
 26202  018AC6  500C               	movf	(_UART1_TxInterruptHandler+2)^0,w,c
 26203  018AC8  6EFF               	movwf	tosu,c
 26204  018ACA  50FA               	movf	pclath,w,c
 26205  018ACC  0012               	return		;indir
 26206  018ACE                     __end_of_UART1_tx_vect_isr:
 26207                           	opt callstack 0
 26208                           
 26209 ;; *************** function _UART1_Transmit_ISR *****************
 26210 ;; Defined at:
 26211 ;;		line 213 in file "mcc_generated_files/uart1.c"
 26212 ;; Parameters:    Size  Location     Type
 26213 ;;		None
 26214 ;; Auto vars:     Size  Location     Type
 26215 ;;		None
 26216 ;; Return value:  Size  Location     Type
 26217 ;;                  1  [STACK] void 
 26218 ;; Registers used:
 26219 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26220 ;; Tracked objects:
 26221 ;;		On entry : 0/0
 26222 ;;		On exit  : 3B/39
 26223 ;;		Unchanged: 0/0
 26224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26229 ;;Total ram usage:        0 bytes
 26230 ;; Hardware stack levels used:    1
 26231 ;; This function calls:
 26232 ;;		Nothing
 26233 ;; This function is called by:
 26234 ;;		_UART1_Initialize
 26235 ;;		_UART1_tx_vect_isr
 26236 ;; This function uses a reentrant model
 26237 ;;
 26238                           
 26239                           	psect	text132
 26240  0187F6                     __ptext132:
 26241                           	opt callstack 0
 26242  0187F6                     _UART1_Transmit_ISR:
 26243                           	opt callstack 13
 26244                           
 26245                           ;mcc_generated_files/uart1.c: 216:  if (sizeof(uart1TxBuffer) > uart1TxBufferRemaining) 
      +                          {
 26246                           
 26247                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26248                           ;incstack = 0
 26249  0187F6  0E40               	movlw	64
 26250  0187F8  6032               	cpfslt	_uart1TxBufferRemaining^0,c
 26251  0187FA  D010               	goto	l581
 26252                           
 26253                           ;mcc_generated_files/uart1.c: 217:   U1TXB = uart1TxBuffer[uart1TxTail++];
 26254  0187FC  0E6C               	movlw	low _uart1TxBuffer
 26255  0187FE  2433               	addwf	_uart1TxTail^0,w,c	;volatile
 26256  018800  6ED9               	movwf	fsr2l,c
 26257  018802  6ADA               	clrf	fsr2h,c
 26258  018804  0E02               	movlw	high _uart1TxBuffer
 26259  018806  22DA               	addwfc	fsr2h,f,c
 26260  018808  50DF               	movf	indf2,w,c
 26261  01880A  013D               	movlb	61	; () banked
 26262  01880C  6FEA               	movwf	234,b	;volatile
 26263                           
 26264                           ; BSR set to: 61
 26265  01880E  2A33               	incf	_uart1TxTail^0,f,c	;volatile
 26266                           
 26267                           ; BSR set to: 61
 26268                           ;mcc_generated_files/uart1.c: 218:   if (sizeof(uart1TxBuffer) <= uart1TxTail) {
 26269  018810  0E3F               	movlw	63
 26270  018812  6433               	cpfsgt	_uart1TxTail^0,c
 26271  018814  D001               	goto	l8797
 26272                           
 26273                           ; BSR set to: 61
 26274                           ;mcc_generated_files/uart1.c: 219:    uart1TxTail = 0;
 26275  018816  6A33               	clrf	_uart1TxTail^0,c	;volatile
 26276  018818                     l8797:
 26277                           
 26278                           ; BSR set to: 61
 26279                           ;mcc_generated_files/uart1.c: 221:   uart1TxBufferRemaining++;
 26280  018818  2A32               	incf	_uart1TxBufferRemaining^0,f,c	;volatile
 26281                           
 26282                           ;mcc_generated_files/uart1.c: 222:  } else {
 26283  01881A  0012               	return	
 26284  01881C                     l581:
 26285                           
 26286                           ;mcc_generated_files/uart1.c: 223:   PIE3bits.U1TXIE = 0;
 26287  01881C  0139               	movlb	57	; () banked
 26288  01881E  9993               	bcf	147,4,b	;volatile
 26289                           
 26290                           ; _UART1_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26291  018820  0012               	return		;funcret
 26292  018822                     __end_of_UART1_Transmit_ISR:
 26293                           	opt callstack 0
 26294                           
 26295 ;; *************** function _UART1_rx_vect_isr *****************
 26296 ;; Defined at:
 26297 ;;		line 206 in file "mcc_generated_files/uart1.c"
 26298 ;; Parameters:    Size  Location     Type
 26299 ;;		None
 26300 ;; Auto vars:     Size  Location     Type
 26301 ;;		None
 26302 ;; Return value:  Size  Location     Type
 26303 ;;                  1    wreg      void 
 26304 ;; Registers used:
 26305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26306 ;; Tracked objects:
 26307 ;;		On entry : 0/0
 26308 ;;		On exit  : 0/0
 26309 ;;		Unchanged: 0/0
 26310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26311 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26314 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26315 ;;Total ram usage:        0 bytes
 26316 ;; Hardware stack levels used:    1
 26317 ;; Hardware stack levels required when called:    1
 26318 ;; This function calls:
 26319 ;;		Absolute function
 26320 ;;		_UART1_Receive_ISR
 26321 ;; This function is called by:
 26322 ;;		Interrupt level 2
 26323 ;; This function uses a non-reentrant model
 26324 ;;
 26325                           
 26326                           	psect	text133
 26327  018AD0                     __ptext133:
 26328                           	opt callstack 0
 26329  018AD0                     _UART1_rx_vect_isr:
 26330                           	opt callstack 13
 26331                           
 26332                           ;incstack = 0
 26333  018AD0  EE13  F356         	lfsr	1,___inthi_sp
 26334                           
 26335                           ;mcc_generated_files/uart1.c: 208:  if (UART1_RxInterruptHandler) {
 26336  018AD4  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26337  018AD6  100E               	iorwf	(_UART1_RxInterruptHandler+1)^0,w,c
 26338  018AD8  100F               	iorwf	(_UART1_RxInterruptHandler+2)^0,w,c
 26339  018ADA  B4D8               	btfsc	status,2,c
 26340  018ADC  0011               	retfie		f
 26341                           
 26342                           ;mcc_generated_files/uart1.c: 209:   UART1_RxInterruptHandler();
 26343  018ADE  D801               	call	i2u1070_48
 26344  018AE0  0011               	retfie		f
 26345  018AE2                     i2u1070_48:
 26346  018AE2  0005               	push	
 26347  018AE4  6EFA               	movwf	pclath,c
 26348  018AE6  500D               	movf	_UART1_RxInterruptHandler^0,w,c
 26349  018AE8  6EFD               	movwf	tosl,c
 26350  018AEA  500E               	movf	(_UART1_RxInterruptHandler+1)^0,w,c
 26351  018AEC  6EFE               	movwf	tosh,c
 26352  018AEE  500F               	movf	(_UART1_RxInterruptHandler+2)^0,w,c
 26353  018AF0  6EFF               	movwf	tosu,c
 26354  018AF2  50FA               	movf	pclath,w,c
 26355  018AF4  0012               	return		;indir
 26356  018AF6                     __end_of_UART1_rx_vect_isr:
 26357                           	opt callstack 0
 26358                           
 26359 ;; *************** function _UART1_Receive_ISR *****************
 26360 ;; Defined at:
 26361 ;;		line 229 in file "mcc_generated_files/uart1.c"
 26362 ;; Parameters:    Size  Location     Type
 26363 ;;		None
 26364 ;; Auto vars:     Size  Location     Type
 26365 ;;		None
 26366 ;; Return value:  Size  Location     Type
 26367 ;;                  1  [STACK] void 
 26368 ;; Registers used:
 26369 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26370 ;; Tracked objects:
 26371 ;;		On entry : 0/0
 26372 ;;		On exit  : 0/0
 26373 ;;		Unchanged: 0/0
 26374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26378 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26379 ;;Total ram usage:        0 bytes
 26380 ;; Hardware stack levels used:    1
 26381 ;; This function calls:
 26382 ;;		Nothing
 26383 ;; This function is called by:
 26384 ;;		_UART1_Initialize
 26385 ;;		_UART1_rx_vect_isr
 26386 ;; This function uses a reentrant model
 26387 ;;
 26388                           
 26389                           	psect	text134
 26390  018C6C                     __ptext134:
 26391                           	opt callstack 0
 26392  018C6C                     _UART1_Receive_ISR:
 26393                           	opt callstack 13
 26394                           
 26395                           ;mcc_generated_files/uart1.c: 232:  uart1RxBuffer[uart1RxHead++] = U1RXB;
 26396                           
 26397                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26398                           ;incstack = 0
 26399  018C6C  0E00               	movlw	low _uart1RxBuffer
 26400  018C6E  2431               	addwf	_uart1RxHead^0,w,c	;volatile
 26401  018C70  6ED9               	movwf	fsr2l,c
 26402  018C72  6ADA               	clrf	fsr2h,c
 26403  018C74  0E05               	movlw	high _uart1RxBuffer
 26404  018C76  22DA               	addwfc	fsr2h,f,c
 26405  018C78  006F F7A3 FFDF     	movff	15848,indf2	;volatile
 26406  018C7E  2A31               	incf	_uart1RxHead^0,f,c	;volatile
 26407                           
 26408                           ;mcc_generated_files/uart1.c: 233:  if (sizeof(uart1RxBuffer) <= uart1RxHead) {
 26409  018C80  2831               	incf	_uart1RxHead^0,w,c
 26410  018C82  B4D8               	btfsc	status,2,c
 26411                           
 26412                           ;mcc_generated_files/uart1.c: 234:   uart1RxHead = 0;
 26413  018C84  6A31               	clrf	_uart1RxHead^0,c	;volatile
 26414                           
 26415                           ;mcc_generated_files/uart1.c: 236:  uart1RxCount++;
 26416  018C86  2A2F               	incf	_uart1RxCount^0,f,c	;volatile
 26417                           
 26418                           ; _UART1_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26419  018C88  0012               	return		;funcret
 26420  018C8A                     __end_of_UART1_Receive_ISR:
 26421                           	opt callstack 0
 26422                           
 26423 ;; *************** function _UART2_tx_vect_isr *****************
 26424 ;; Defined at:
 26425 ;;		line 195 in file "mcc_generated_files/uart2.c"
 26426 ;; Parameters:    Size  Location     Type
 26427 ;;		None
 26428 ;; Auto vars:     Size  Location     Type
 26429 ;;		None
 26430 ;; Return value:  Size  Location     Type
 26431 ;;                  1    wreg      void 
 26432 ;; Registers used:
 26433 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26434 ;; Tracked objects:
 26435 ;;		On entry : 0/0
 26436 ;;		On exit  : 0/0
 26437 ;;		Unchanged: 0/0
 26438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26440 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26441 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26442 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26443 ;;Total ram usage:        0 bytes
 26444 ;; Hardware stack levels used:    1
 26445 ;; Hardware stack levels required when called:    1
 26446 ;; This function calls:
 26447 ;;		Absolute function
 26448 ;;		_UART2_Transmit_ISR
 26449 ;; This function is called by:
 26450 ;;		Interrupt level 2
 26451 ;; This function uses a non-reentrant model
 26452 ;;
 26453                           
 26454                           	psect	text135
 26455  018AF8                     __ptext135:
 26456                           	opt callstack 0
 26457  018AF8                     _UART2_tx_vect_isr:
 26458                           	opt callstack 13
 26459                           
 26460                           ;incstack = 0
 26461  018AF8  EE13  F356         	lfsr	1,___inthi_sp
 26462                           
 26463                           ;mcc_generated_files/uart2.c: 197:     if(UART2_TxInterruptHandler)
 26464  018AFC  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26465  018AFE  1011               	iorwf	(_UART2_TxInterruptHandler+1)^0,w,c
 26466  018B00  1012               	iorwf	(_UART2_TxInterruptHandler+2)^0,w,c
 26467  018B02  B4D8               	btfsc	status,2,c
 26468  018B04  0011               	retfie		f
 26469                           
 26470                           ;mcc_generated_files/uart2.c: 198:     {;mcc_generated_files/uart2.c: 199:         UART2
      +                          _TxInterruptHandler();
 26471  018B06  D801               	call	i2u1072_48
 26472  018B08  0011               	retfie		f
 26473  018B0A                     i2u1072_48:
 26474  018B0A  0005               	push	
 26475  018B0C  6EFA               	movwf	pclath,c
 26476  018B0E  5010               	movf	_UART2_TxInterruptHandler^0,w,c
 26477  018B10  6EFD               	movwf	tosl,c
 26478  018B12  5011               	movf	(_UART2_TxInterruptHandler+1)^0,w,c
 26479  018B14  6EFE               	movwf	tosh,c
 26480  018B16  5012               	movf	(_UART2_TxInterruptHandler+2)^0,w,c
 26481  018B18  6EFF               	movwf	tosu,c
 26482  018B1A  50FA               	movf	pclath,w,c
 26483  018B1C  0012               	return		;indir
 26484  018B1E                     __end_of_UART2_tx_vect_isr:
 26485                           	opt callstack 0
 26486                           
 26487 ;; *************** function _UART2_Transmit_ISR *****************
 26488 ;; Defined at:
 26489 ;;		line 213 in file "mcc_generated_files/uart2.c"
 26490 ;; Parameters:    Size  Location     Type
 26491 ;;		None
 26492 ;; Auto vars:     Size  Location     Type
 26493 ;;		None
 26494 ;; Return value:  Size  Location     Type
 26495 ;;                  1  [STACK] void 
 26496 ;; Registers used:
 26497 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26498 ;; Tracked objects:
 26499 ;;		On entry : 0/0
 26500 ;;		On exit  : 3B/39
 26501 ;;		Unchanged: 0/0
 26502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26507 ;;Total ram usage:        0 bytes
 26508 ;; Hardware stack levels used:    1
 26509 ;; This function calls:
 26510 ;;		Nothing
 26511 ;; This function is called by:
 26512 ;;		_UART2_Initialize
 26513 ;;		_UART2_tx_vect_isr
 26514 ;; This function uses a reentrant model
 26515 ;;
 26516                           
 26517                           	psect	text136
 26518  018822                     __ptext136:
 26519                           	opt callstack 0
 26520  018822                     _UART2_Transmit_ISR:
 26521                           	opt callstack 13
 26522                           
 26523                           ;mcc_generated_files/uart2.c: 216:     if(sizeof(uart2TxBuffer) > uart2TxBufferRemaining
      +                          )
 26524                           
 26525                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26526                           ;incstack = 0
 26527  018822  0E40               	movlw	64
 26528  018824  602C               	cpfslt	_uart2TxBufferRemaining^0,c
 26529  018826  D010               	goto	l701
 26530                           
 26531                           ;mcc_generated_files/uart2.c: 217:     {;mcc_generated_files/uart2.c: 218:         U2TXB
      +                           = uart2TxBuffer[uart2TxTail++];
 26532  018828  0E00               	movlw	low _uart2TxBuffer
 26533  01882A  242D               	addwf	_uart2TxTail^0,w,c	;volatile
 26534  01882C  6ED9               	movwf	fsr2l,c
 26535  01882E  6ADA               	clrf	fsr2h,c
 26536  018830  0E03               	movlw	high _uart2TxBuffer
 26537  018832  22DA               	addwfc	fsr2h,f,c
 26538  018834  50DF               	movf	indf2,w,c
 26539  018836  013D               	movlb	61	; () banked
 26540  018838  6FD2               	movwf	210,b	;volatile
 26541                           
 26542                           ; BSR set to: 61
 26543  01883A  2A2D               	incf	_uart2TxTail^0,f,c	;volatile
 26544                           
 26545                           ; BSR set to: 61
 26546                           ;mcc_generated_files/uart2.c: 219:        if(sizeof(uart2TxBuffer) <= uart2TxTail)
 26547  01883C  0E3F               	movlw	63
 26548  01883E  642D               	cpfsgt	_uart2TxTail^0,c
 26549  018840  D001               	goto	l8819
 26550                           
 26551                           ; BSR set to: 61
 26552                           ;mcc_generated_files/uart2.c: 220:         {;mcc_generated_files/uart2.c: 221:          
      +                             uart2TxTail = 0;
 26553  018842  6A2D               	clrf	_uart2TxTail^0,c	;volatile
 26554  018844                     l8819:
 26555                           
 26556                           ; BSR set to: 61
 26557                           ;mcc_generated_files/uart2.c: 223:         uart2TxBufferRemaining++;
 26558  018844  2A2C               	incf	_uart2TxBufferRemaining^0,f,c	;volatile
 26559                           
 26560                           ;mcc_generated_files/uart2.c: 224:     }
 26561  018846  0012               	return	
 26562  018848                     l701:
 26563                           
 26564                           ;mcc_generated_files/uart2.c: 226:     {;mcc_generated_files/uart2.c: 227:         PIE6b
      +                          its.U2TXIE = 0;
 26565  018848  0139               	movlb	57	; () banked
 26566  01884A  9796               	bcf	150,3,b	;volatile
 26567                           
 26568                           ; _UART2_Transmit_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 0, argsize = 0, vargsize = 0
 26569  01884C  0012               	return		;funcret
 26570  01884E                     __end_of_UART2_Transmit_ISR:
 26571                           	opt callstack 0
 26572                           
 26573 ;; *************** function _UART2_rx_vect_isr *****************
 26574 ;; Defined at:
 26575 ;;		line 203 in file "mcc_generated_files/uart2.c"
 26576 ;; Parameters:    Size  Location     Type
 26577 ;;		None
 26578 ;; Auto vars:     Size  Location     Type
 26579 ;;		None
 26580 ;; Return value:  Size  Location     Type
 26581 ;;                  1    wreg      void 
 26582 ;; Registers used:
 26583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl
 26584 ;; Tracked objects:
 26585 ;;		On entry : 0/0
 26586 ;;		On exit  : 0/0
 26587 ;;		Unchanged: 0/0
 26588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26590 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26591 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26592 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26593 ;;Total ram usage:        0 bytes
 26594 ;; Hardware stack levels used:    1
 26595 ;; Hardware stack levels required when called:    1
 26596 ;; This function calls:
 26597 ;;		Absolute function
 26598 ;;		_UART2_Receive_ISR
 26599 ;; This function is called by:
 26600 ;;		Interrupt level 2
 26601 ;; This function uses a non-reentrant model
 26602 ;;
 26603                           
 26604                           	psect	text137
 26605  018B20                     __ptext137:
 26606                           	opt callstack 0
 26607  018B20                     _UART2_rx_vect_isr:
 26608                           	opt callstack 13
 26609                           
 26610                           ;incstack = 0
 26611  018B20  EE13  F356         	lfsr	1,___inthi_sp
 26612                           
 26613                           ;mcc_generated_files/uart2.c: 205:     if(UART2_RxInterruptHandler)
 26614  018B24  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26615  018B26  1014               	iorwf	(_UART2_RxInterruptHandler+1)^0,w,c
 26616  018B28  1015               	iorwf	(_UART2_RxInterruptHandler+2)^0,w,c
 26617  018B2A  B4D8               	btfsc	status,2,c
 26618  018B2C  0011               	retfie		f
 26619                           
 26620                           ;mcc_generated_files/uart2.c: 206:     {;mcc_generated_files/uart2.c: 207:         UART2
      +                          _RxInterruptHandler();
 26621  018B2E  D801               	call	i2u1074_48
 26622  018B30  0011               	retfie		f
 26623  018B32                     i2u1074_48:
 26624  018B32  0005               	push	
 26625  018B34  6EFA               	movwf	pclath,c
 26626  018B36  5013               	movf	_UART2_RxInterruptHandler^0,w,c
 26627  018B38  6EFD               	movwf	tosl,c
 26628  018B3A  5014               	movf	(_UART2_RxInterruptHandler+1)^0,w,c
 26629  018B3C  6EFE               	movwf	tosh,c
 26630  018B3E  5015               	movf	(_UART2_RxInterruptHandler+2)^0,w,c
 26631  018B40  6EFF               	movwf	tosu,c
 26632  018B42  50FA               	movf	pclath,w,c
 26633  018B44  0012               	return		;indir
 26634  018B46                     __end_of_UART2_rx_vect_isr:
 26635                           	opt callstack 0
 26636                           
 26637 ;; *************** function _UART2_Receive_ISR *****************
 26638 ;; Defined at:
 26639 ;;		line 233 in file "mcc_generated_files/uart2.c"
 26640 ;; Parameters:    Size  Location     Type
 26641 ;;		None
 26642 ;; Auto vars:     Size  Location     Type
 26643 ;;		None
 26644 ;; Return value:  Size  Location     Type
 26645 ;;                  1  [STACK] void 
 26646 ;; Registers used:
 26647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 26648 ;; Tracked objects:
 26649 ;;		On entry : 0/0
 26650 ;;		On exit  : 0/0
 26651 ;;		Unchanged: 0/0
 26652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26657 ;;Total ram usage:        0 bytes
 26658 ;; Hardware stack levels used:    1
 26659 ;; This function calls:
 26660 ;;		Nothing
 26661 ;; This function is called by:
 26662 ;;		_UART2_Initialize
 26663 ;;		_UART2_rx_vect_isr
 26664 ;; This function uses a reentrant model
 26665 ;;
 26666                           
 26667                           	psect	text138
 26668  018C8A                     __ptext138:
 26669                           	opt callstack 0
 26670  018C8A                     _UART2_Receive_ISR:
 26671                           	opt callstack 13
 26672                           
 26673                           ;mcc_generated_files/uart2.c: 236:     uart2RxBuffer[uart2RxHead++] = U2RXB;
 26674                           
 26675                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26676                           ;incstack = 0
 26677  018C8A  0E00               	movlw	low _uart2RxBuffer
 26678  018C8C  242B               	addwf	_uart2RxHead^0,w,c	;volatile
 26679  018C8E  6ED9               	movwf	fsr2l,c
 26680  018C90  6ADA               	clrf	fsr2h,c
 26681  018C92  0E06               	movlw	high _uart2RxBuffer
 26682  018C94  22DA               	addwfc	fsr2h,f,c
 26683  018C96  006F F743 FFDF     	movff	15824,indf2	;volatile
 26684  018C9C  2A2B               	incf	_uart2RxHead^0,f,c	;volatile
 26685                           
 26686                           ;mcc_generated_files/uart2.c: 237:     if(sizeof(uart2RxBuffer) <= uart2RxHead)
 26687  018C9E  282B               	incf	_uart2RxHead^0,w,c
 26688  018CA0  B4D8               	btfsc	status,2,c
 26689                           
 26690                           ;mcc_generated_files/uart2.c: 238:     {;mcc_generated_files/uart2.c: 239:         uart2
      +                          RxHead = 0;
 26691  018CA2  6A2B               	clrf	_uart2RxHead^0,c	;volatile
 26692                           
 26693                           ;mcc_generated_files/uart2.c: 241:     uart2RxCount++;
 26694  018CA4  2A29               	incf	_uart2RxCount^0,f,c	;volatile
 26695                           
 26696                           ; _UART2_Receive_ISR: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize 
      +                          = 0, argsize = 0, vargsize = 0
 26697  018CA6  0012               	return		;funcret
 26698  018CA8                     __end_of_UART2_Receive_ISR:
 26699                           	opt callstack 0
 26700                           
 26701 ;; *************** function _TMR6_ISR *****************
 26702 ;; Defined at:
 26703 ;;		line 171 in file "mcc_generated_files/tmr6.c"
 26704 ;; Parameters:    Size  Location     Type
 26705 ;;		None
 26706 ;; Auto vars:     Size  Location     Type
 26707 ;;		None
 26708 ;; Return value:  Size  Location     Type
 26709 ;;                  1    wreg      void 
 26710 ;; Registers used:
 26711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26712 ;; Tracked objects:
 26713 ;;		On entry : 0/0
 26714 ;;		On exit  : 0/0
 26715 ;;		Unchanged: 0/0
 26716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26720 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26721 ;;Total ram usage:        1 bytes
 26722 ;; Hardware stack levels used:    1
 26723 ;; Hardware stack levels required when called:    2
 26724 ;; This function calls:
 26725 ;;		_TMR6_CallBack
 26726 ;; This function is called by:
 26727 ;;		Interrupt level 2
 26728 ;; This function uses a non-reentrant model
 26729 ;;
 26730                           
 26731                           	psect	text139
 26732  018CFC                     __ptext139:
 26733                           	opt callstack 0
 26734  018CFC                     _TMR6_ISR:
 26735                           	opt callstack 12
 26736                           
 26737                           ;incstack = 0
 26738  018CFC  0060  F0D4  F0E6   	movff	btemp,??_TMR6_ISR
 26739  018D02  EE13  F356         	lfsr	1,___inthi_sp
 26740                           
 26741                           ;mcc_generated_files/tmr6.c: 175:     PIR9bits.TMR6IF = 0;
 26742  018D06  0139               	movlb	57	; () banked
 26743  018D08  91A9               	bcf	169,0,b	;volatile
 26744                           
 26745                           ; BSR set to: 57
 26746                           ;mcc_generated_files/tmr6.c: 179:     TMR6_CallBack();
 26747  018D0A  ECE9  F0C5         	call	_TMR6_CallBack	;wreg free
 26748  018D0E  0060  F398  F035   	movff	??_TMR6_ISR,btemp
 26749  018D14  0011               	retfie		f
 26750  018D16                     __end_of_TMR6_ISR:
 26751                           	opt callstack 0
 26752                           
 26753 ;; *************** function _TMR6_CallBack *****************
 26754 ;; Defined at:
 26755 ;;		line 182 in file "mcc_generated_files/tmr6.c"
 26756 ;; Parameters:    Size  Location     Type
 26757 ;;		None
 26758 ;; Auto vars:     Size  Location     Type
 26759 ;;		None
 26760 ;; Return value:  Size  Location     Type
 26761 ;;                  1  [STACK] void 
 26762 ;; Registers used:
 26763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, btemp, tosl, prodl, prodh
 26764 ;; Tracked objects:
 26765 ;;		On entry : 3F/39
 26766 ;;		On exit  : 0/0
 26767 ;;		Unchanged: 0/0
 26768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26770 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26772 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26773 ;;Total ram usage:        0 bytes
 26774 ;; Hardware stack levels used:    1
 26775 ;; Hardware stack levels required when called:    1
 26776 ;; This function calls:
 26777 ;;		Absolute function
 26778 ;;		_TMR6_DefaultInterruptHandler
 26779 ;; This function is called by:
 26780 ;;		_TMR6_ISR
 26781 ;; This function uses a reentrant model
 26782 ;;
 26783                           
 26784                           	psect	text140
 26785  018BD2                     __ptext140:
 26786                           	opt callstack 0
 26787  018BD2                     _TMR6_CallBack:
 26788                           	opt callstack 12
 26789                           
 26790                           ;mcc_generated_files/tmr6.c: 186:     if(TMR6_InterruptHandler)
 26791                           
 26792                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26793                           ;incstack = 0
 26794  018BD2  5001               	movf	_TMR6_InterruptHandler^0,w,c
 26795  018BD4  1002               	iorwf	(_TMR6_InterruptHandler+1)^0,w,c
 26796  018BD6  1003               	iorwf	(_TMR6_InterruptHandler+2)^0,w,c
 26797  018BD8  B4D8               	btfsc	status,2,c
 26798  018BDA  0012               	return	
 26799                           
 26800                           ;mcc_generated_files/tmr6.c: 187:     {;mcc_generated_files/tmr6.c: 188:         TMR6_In
      +                          terruptHandler();
 26801  018BDC  D801               	call	u863_48
 26802  018BDE  0012               	return	
 26803  018BE0                     u863_48:
 26804  018BE0  0005               	push	
 26805  018BE2  6EFA               	movwf	pclath,c
 26806  018BE4  5001               	movf	_TMR6_InterruptHandler^0,w,c
 26807  018BE6  6EFD               	movwf	tosl,c
 26808  018BE8  5002               	movf	(_TMR6_InterruptHandler+1)^0,w,c
 26809  018BEA  6EFE               	movwf	tosh,c
 26810  018BEC  5003               	movf	(_TMR6_InterruptHandler+2)^0,w,c
 26811  018BEE  6EFF               	movwf	tosu,c
 26812  018BF0  50FA               	movf	pclath,w,c
 26813  018BF2  0012               	return		;indir
 26814  018BF4                     __end_of_TMR6_CallBack:
 26815                           	opt callstack 0
 26816                           
 26817 ;; *************** function _TMR6_DefaultInterruptHandler *****************
 26818 ;; Defined at:
 26819 ;;		line 196 in file "mcc_generated_files/tmr6.c"
 26820 ;; Parameters:    Size  Location     Type
 26821 ;;		None
 26822 ;; Auto vars:     Size  Location     Type
 26823 ;;  i               1  [STACK] unsigned char 
 26824 ;; Return value:  Size  Location     Type
 26825 ;;                  1  [STACK] void 
 26826 ;; Registers used:
 26827 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, prodl, prodh
 26828 ;; Tracked objects:
 26829 ;;		On entry : 0/39
 26830 ;;		On exit  : 0/0
 26831 ;;		Unchanged: 0/0
 26832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26837 ;;Total ram usage:        0 bytes
 26838 ;; Hardware stack levels used:    1
 26839 ;; This function calls:
 26840 ;;		Nothing
 26841 ;; This function is called by:
 26842 ;;		_TMR6_Initialize
 26843 ;;		_TMR6_CallBack
 26844 ;; This function uses a reentrant model
 26845 ;;
 26846                           
 26847                           	psect	text141
 26848  018468                     __ptext141:
 26849                           	opt callstack 0
 26850  018468                     _TMR6_DefaultInterruptHandler:
 26851                           	opt callstack 0
 26852                           
 26853                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 0, argsize = 0 var
      +                          gsize = 0, retsize = 0 argfudge = 0
 26854  018468  52E6               	movf	postinc1,f,c
 26855                           
 26856                           ;mcc_generated_files/tmr6.c: 198:  uint8_t i;;mcc_generated_files/tmr6.c: 203:  for (i =
      +                           0; i < TMR_COUNT; i++) {
 26857                           ;stkvar	_i @ sp[(-1)+0]
 26858                           
 26859                           ;incstack = 0
 26860  01846A  0EFF               	movlw	-1
 26861  01846C  6AE3               	clrf	plusw1,c
 26862  01846E                     l8561:
 26863                           
 26864                           ;mcc_generated_files/tmr6.c: 204:   if (tickCount[i] != 0) {
 26865                           ;stkvar	_i @ sp[(-1)+0]
 26866  01846E  0EFF               	movlw	-1
 26867  018470  50E3               	movf	plusw1,w,c
 26868  018472  0D02               	mullw	2
 26869  018474  50F3               	movf	243,w,c
 26870  018476  0F60               	addlw	low _tickCount
 26871  018478  6ED9               	movwf	fsr2l,c
 26872  01847A  6ADA               	clrf	fsr2h,c
 26873  01847C  50DE               	movf	postinc2,w,c
 26874  01847E  10DE               	iorwf	postinc2,w,c
 26875  018480  B4D8               	btfsc	status,2,c
 26876  018482  D00A               	goto	l8565
 26877                           
 26878                           ;mcc_generated_files/tmr6.c: 205:    tickCount[i]--;
 26879                           ;stkvar	_i @ sp[(-1)+0]
 26880  018484  0EFF               	movlw	-1
 26881  018486  50E3               	movf	plusw1,w,c
 26882  018488  0D02               	mullw	2
 26883  01848A  50F3               	movf	243,w,c
 26884  01848C  0F60               	addlw	low _tickCount
 26885  01848E  6ED9               	movwf	fsr2l,c
 26886  018490  6ADA               	clrf	fsr2h,c
 26887  018492  06DE               	decf	postinc2,f,c
 26888  018494  0E00               	movlw	0
 26889  018496  5ADD               	subwfb	postdec2,f,c
 26890  018498                     l8565:
 26891                           
 26892                           ;mcc_generated_files/tmr6.c: 207:  }
 26893                           ;stkvar	_i @ sp[(-1)+0]
 26894  018498  0EFF               	movlw	-1
 26895  01849A  2AE3               	incf	plusw1,f,c
 26896                           
 26897                           ;stkvar	_i @ sp[(-1)+0]
 26898  01849C  0EFF               	movlw	-1
 26899  01849E  006F FF8C  F035    	movff	plusw1,btemp
 26900  0184A4  0E0B               	movlw	11
 26901  0184A6  6435               	cpfsgt	btemp^0,c
 26902  0184A8  D7E2               	goto	l8561
 26903                           
 26904                           ; _TMR6_DefaultInterruptHandler: autosize = 1, savesize = 0, parsavesize = 0, tempsize =
      +                           0 parsize = 0, argsize = 0, vargsize = 0
 26905  0184AA  52E5               	movf	postdec1,f,c
 26906  0184AC  0012               	return		;funcret
 26907  0184AE                     __end_of_TMR6_DefaultInterruptHandler:
 26908                           	opt callstack 0
 26909                           
 26910 ;; *************** function _DMA1_DMASCNT_ISR *****************
 26911 ;; Defined at:
 26912 ;;		line 126 in file "mcc_generated_files/dma1.c"
 26913 ;; Parameters:    Size  Location     Type
 26914 ;;		None
 26915 ;; Auto vars:     Size  Location     Type
 26916 ;;		None
 26917 ;; Return value:  Size  Location     Type
 26918 ;;                  1    wreg      void 
 26919 ;; Registers used:
 26920 ;;		None
 26921 ;; Tracked objects:
 26922 ;;		On entry : 0/0
 26923 ;;		On exit  : 3F/0
 26924 ;;		Unchanged: 0/0
 26925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26927 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26929 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26930 ;;Total ram usage:        0 bytes
 26931 ;; Hardware stack levels used:    1
 26932 ;; This function calls:
 26933 ;;		Nothing
 26934 ;; This function is called by:
 26935 ;;		Interrupt level 2
 26936 ;; This function uses a non-reentrant model
 26937 ;;
 26938                           
 26939                           	psect	text142
 26940  018DFC                     __ptext142:
 26941                           	opt callstack 0
 26942  018DFC                     _DMA1_DMASCNT_ISR:
 26943                           	opt callstack 14
 26944                           
 26945                           ;incstack = 0
 26946  018DFC  EE13  F356         	lfsr	1,___inthi_sp
 26947                           
 26948                           ;mcc_generated_files/dma1.c: 128:  PIR2bits.DMA1SCNTIF = 0;
 26949  018E00  0139               	movlb	57	; () banked
 26950  018E02  91A2               	bcf	162,0,b	;volatile
 26951                           
 26952                           ;mcc_generated_files/dma1.c: 130:  spi_link.LCD_DATA = 0;
 26953  018E04  0100               	movlb	0	; () banked
 26954  018E06  9778               	bcf	_spi_link& (0+255),3,b	;volatile
 26955                           
 26956                           ; BSR set to: 0
 26957  018E08  0011               	retfie		f
 26958  018E0A                     __end_of_DMA1_DMASCNT_ISR:
 26959                           	opt callstack 0
 26960                           
 26961 ;; *************** function _DMA1_DMADCNT_ISR *****************
 26962 ;; Defined at:
 26963 ;;		line 134 in file "mcc_generated_files/dma1.c"
 26964 ;; Parameters:    Size  Location     Type
 26965 ;;		None
 26966 ;; Auto vars:     Size  Location     Type
 26967 ;;		None
 26968 ;; Return value:  Size  Location     Type
 26969 ;;                  1    wreg      void 
 26970 ;; Registers used:
 26971 ;;		None
 26972 ;; Tracked objects:
 26973 ;;		On entry : 0/0
 26974 ;;		On exit  : 3F/39
 26975 ;;		Unchanged: 0/0
 26976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 26977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 26981 ;;Total ram usage:        0 bytes
 26982 ;; Hardware stack levels used:    1
 26983 ;; This function calls:
 26984 ;;		Nothing
 26985 ;; This function is called by:
 26986 ;;		Interrupt level 2
 26987 ;; This function uses a non-reentrant model
 26988 ;;
 26989                           
 26990                           	psect	text143
 26991  018E14                     __ptext143:
 26992                           	opt callstack 0
 26993  018E14                     _DMA1_DMADCNT_ISR:
 26994                           	opt callstack 14
 26995                           
 26996                           ; BSR set to: 0
 26997                           ;incstack = 0
 26998  018E14  EE13  F356         	lfsr	1,___inthi_sp
 26999                           
 27000                           ;mcc_generated_files/dma1.c: 136:  PIR2bits.DMA1DCNTIF = 0;
 27001  018E18  0139               	movlb	57	; () banked
 27002  018E1A  93A2               	bcf	162,1,b	;volatile
 27003                           
 27004                           ; BSR set to: 57
 27005  018E1C  0011               	retfie		f
 27006  018E1E                     __end_of_DMA1_DMADCNT_ISR:
 27007                           	opt callstack 0
 27008                           
 27009 ;; *************** function _DMA1_DMAA_ISR *****************
 27010 ;; Defined at:
 27011 ;;		line 144 in file "mcc_generated_files/dma1.c"
 27012 ;; Parameters:    Size  Location     Type
 27013 ;;		None
 27014 ;; Auto vars:     Size  Location     Type
 27015 ;;		None
 27016 ;; Return value:  Size  Location     Type
 27017 ;;                  1    wreg      void 
 27018 ;; Registers used:
 27019 ;;		None
 27020 ;; Tracked objects:
 27021 ;;		On entry : 0/0
 27022 ;;		On exit  : 3F/39
 27023 ;;		Unchanged: 0/0
 27024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27025 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27026 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27028 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27029 ;;Total ram usage:        0 bytes
 27030 ;; Hardware stack levels used:    1
 27031 ;; This function calls:
 27032 ;;		Nothing
 27033 ;; This function is called by:
 27034 ;;		Interrupt level 2
 27035 ;; This function uses a non-reentrant model
 27036 ;;
 27037                           
 27038                           	psect	text144
 27039  018E20                     __ptext144:
 27040                           	opt callstack 0
 27041  018E20                     _DMA1_DMAA_ISR:
 27042                           	opt callstack 14
 27043                           
 27044                           ; BSR set to: 57
 27045                           ;incstack = 0
 27046  018E20  EE13  F356         	lfsr	1,___inthi_sp
 27047                           
 27048                           ;mcc_generated_files/dma1.c: 147:  PIR2bits.DMA1AIF = 0;
 27049  018E24  0139               	movlb	57	; () banked
 27050  018E26  97A2               	bcf	162,3,b	;volatile
 27051                           
 27052                           ; BSR set to: 57
 27053  018E28  0011               	retfie		f
 27054  018E2A                     __end_of_DMA1_DMAA_ISR:
 27055                           	opt callstack 0
 27056                           
 27057 ;; *************** function _DMA1_DMAOR_ISR *****************
 27058 ;; Defined at:
 27059 ;;		line 155 in file "mcc_generated_files/dma1.c"
 27060 ;; Parameters:    Size  Location     Type
 27061 ;;		None
 27062 ;; Auto vars:     Size  Location     Type
 27063 ;;		None
 27064 ;; Return value:  Size  Location     Type
 27065 ;;                  1    wreg      void 
 27066 ;; Registers used:
 27067 ;;		None
 27068 ;; Tracked objects:
 27069 ;;		On entry : 0/0
 27070 ;;		On exit  : 3F/39
 27071 ;;		Unchanged: 0/0
 27072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25  BANK2
      +6  BANK27  BANK28  BANK29  BANK30  BANK31
 27073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27074 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27076 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0
 27077 ;;Total ram usage:        0 bytes
 27078 ;; Hardware stack levels used:    1
 27079 ;; This function calls:
 27080 ;;		Nothing
 27081 ;; This function is called by:
 27082 ;;		Interrupt level 2
 27083 ;; This function uses a non-reentrant model
 27084 ;;
 27085                           
 27086                           	psect	text145
 27087  018E2C                     __ptext145:
 27088                           	opt callstack 0
 27089  018E2C                     _DMA1_DMAOR_ISR:
 27090                           	opt callstack 14
 27091                           
 27092                           ; BSR set to: 57
 27093                           ;incstack = 0
 27094  018E2C  EE13  F356         	lfsr	1,___inthi_sp
 27095                           
 27096                           ;mcc_generated_files/dma1.c: 158:  PIR2bits.DMA1ORIF = 0;
 27097  018E30  0139               	movlb	57	; () banked
 27098  018E32  95A2               	bcf	162,2,b	;volatile
 27099                           
 27100                           ; BSR set to: 57
 27101  018E34  0011               	retfie		f
 27102  018E36                     __end_of_DMA1_DMAOR_ISR:
 27103                           	opt callstack 0
 27104                           
 27105                           ;
 27106                           ; Interrupt Vector Table @ 0x8
 27107                           ;
 27108                           
 27109                           	psect	ivt0x8
 27110  000008                     __pivt0x8:
 27111                           	opt callstack 0
 27112  000008                     ivt0x8_base:
 27113                           	opt callstack 0
 27114                           
 27115                           ; Vector 0 : SWINT
 27116  000008  639C               	dw	_Default_ISR shr (0+2)
 27117                           
 27118                           ; Vector 1 : HLVD
 27119  00000A  639C               	dw	_Default_ISR shr (0+2)
 27120                           
 27121                           ; Vector 2 : OSF
 27122  00000C  639C               	dw	_Default_ISR shr (0+2)
 27123                           
 27124                           ; Vector 3 : CSW
 27125  00000E  639C               	dw	_Default_ISR shr (0+2)
 27126                           
 27127                           ; Vector 4 : NVM
 27128  000010  639C               	dw	_Default_ISR shr (0+2)
 27129                           
 27130                           ; Vector 5 : SCAN
 27131  000012  639C               	dw	_Default_ISR shr (0+2)
 27132                           
 27133                           ; Vector 6 : CRC
 27134  000014  639C               	dw	_Default_ISR shr (0+2)
 27135                           
 27136                           ; Vector 7 : IOC
 27137  000016  639C               	dw	_Default_ISR shr (0+2)
 27138                           
 27139                           ; Vector 8 : INT0
 27140  000018  6377               	dw	_INT0_ISR shr (0+2)
 27141                           
 27142                           ; Vector 9 : ZCD
 27143  00001A  639C               	dw	_Default_ISR shr (0+2)
 27144                           
 27145                           ; Vector 10 : AD
 27146  00001C  618B               	dw	_ADCC_ISR shr (0+2)
 27147                           
 27148                           ; Vector 11 : ADT
 27149  00001E  5FC0               	dw	_ADCC_ThresholdISR shr (0+2)
 27150                           
 27151                           ; Vector 12 : CMP1
 27152  000020  639C               	dw	_Default_ISR shr (0+2)
 27153                           
 27154                           ; Vector 13 : SMT1
 27155  000022  639C               	dw	_Default_ISR shr (0+2)
 27156                           
 27157                           ; Vector 14 : SMT1PRA
 27158  000024  639C               	dw	_Default_ISR shr (0+2)
 27159                           
 27160                           ; Vector 15 : SMT1PRW
 27161  000026  639C               	dw	_Default_ISR shr (0+2)
 27162                           
 27163                           ; Vector 16 : DMA1SCNT
 27164  000028  637F               	dw	_DMA1_DMASCNT_ISR shr (0+2)
 27165                           
 27166                           ; Vector 17 : DMA1DCNT
 27167  00002A  6385               	dw	_DMA1_DMADCNT_ISR shr (0+2)
 27168                           
 27169                           ; Vector 18 : DMA1OR
 27170  00002C  638B               	dw	_DMA1_DMAOR_ISR shr (0+2)
 27171                           
 27172                           ; Vector 19 : DMA1A
 27173  00002E  6388               	dw	_DMA1_DMAA_ISR shr (0+2)
 27174                           
 27175                           ; Vector 20 : SPI1RX
 27176  000030  639C               	dw	_Default_ISR shr (0+2)
 27177                           
 27178                           ; Vector 21 : SPI1TX
 27179  000032  639C               	dw	_Default_ISR shr (0+2)
 27180                           
 27181                           ; Vector 22 : SPI1
 27182  000034  639C               	dw	_Default_ISR shr (0+2)
 27183                           
 27184                           ; Vector 23 : I2C1RX
 27185  000036  639C               	dw	_Default_ISR shr (0+2)
 27186                           
 27187                           ; Vector 24 : I2C1TX
 27188  000038  639C               	dw	_Default_ISR shr (0+2)
 27189                           
 27190                           ; Vector 25 : I2C1
 27191  00003A  639C               	dw	_Default_ISR shr (0+2)
 27192                           
 27193                           ; Vector 26 : I2C1E
 27194  00003C  639C               	dw	_Default_ISR shr (0+2)
 27195                           
 27196                           ; Vector 27 : U1RX
 27197  00003E  62B4               	dw	_UART1_rx_vect_isr shr (0+2)
 27198                           
 27199                           ; Vector 28 : U1TX
 27200  000040  62AA               	dw	_UART1_tx_vect_isr shr (0+2)
 27201                           
 27202                           ; Vector 29 : U1E
 27203  000042  639C               	dw	_Default_ISR shr (0+2)
 27204                           
 27205                           ; Vector 30 : U1
 27206  000044  639C               	dw	_Default_ISR shr (0+2)
 27207                           
 27208                           ; Vector 31 : TMR0
 27209  000046  639C               	dw	_Default_ISR shr (0+2)
 27210                           
 27211                           ; Vector 32 : TMR1
 27212  000048  639C               	dw	_Default_ISR shr (0+2)
 27213                           
 27214                           ; Vector 33 : TMR1G
 27215  00004A  639C               	dw	_Default_ISR shr (0+2)
 27216                           
 27217                           ; Vector 34 : TMR2
 27218  00004C  639C               	dw	_Default_ISR shr (0+2)
 27219                           
 27220                           ; Vector 35 : CCP1
 27221  00004E  639C               	dw	_Default_ISR shr (0+2)
 27222                           
 27223                           ; Vector 36 : Undefined
 27224  000050  002B               	dw	ivt0x8_undefint shr (0+2)
 27225                           
 27226                           ; Vector 37 : NCO1
 27227  000052  639C               	dw	_Default_ISR shr (0+2)
 27228                           
 27229                           ; Vector 38 : CWG1
 27230  000054  639C               	dw	_Default_ISR shr (0+2)
 27231                           
 27232                           ; Vector 39 : CLC1
 27233  000056  639C               	dw	_Default_ISR shr (0+2)
 27234                           
 27235                           ; Vector 40 : INT1
 27236  000058  637B               	dw	_INT1_ISR shr (0+2)
 27237                           
 27238                           ; Vector 41 : CMP2
 27239  00005A  639C               	dw	_Default_ISR shr (0+2)
 27240                           
 27241                           ; Vector 42 : DMA2SCNT
 27242  00005C  639C               	dw	_Default_ISR shr (0+2)
 27243                           
 27244                           ; Vector 43 : DMA2DCNT
 27245  00005E  639C               	dw	_Default_ISR shr (0+2)
 27246                           
 27247                           ; Vector 44 : DMA2OR
 27248  000060  639C               	dw	_Default_ISR shr (0+2)
 27249                           
 27250                           ; Vector 45 : DMA2A
 27251  000062  639C               	dw	_Default_ISR shr (0+2)
 27252                           
 27253                           ; Vector 46 : I2C2RX
 27254  000064  639C               	dw	_Default_ISR shr (0+2)
 27255                           
 27256                           ; Vector 47 : I2C2TX
 27257  000066  639C               	dw	_Default_ISR shr (0+2)
 27258                           
 27259                           ; Vector 48 : I2C2
 27260  000068  639C               	dw	_Default_ISR shr (0+2)
 27261                           
 27262                           ; Vector 49 : I2C2E
 27263  00006A  639C               	dw	_Default_ISR shr (0+2)
 27264                           
 27265                           ; Vector 50 : U2RX
 27266  00006C  62C8               	dw	_UART2_rx_vect_isr shr (0+2)
 27267                           
 27268                           ; Vector 51 : U2TX
 27269  00006E  62BE               	dw	_UART2_tx_vect_isr shr (0+2)
 27270                           
 27271                           ; Vector 52 : U2E
 27272  000070  639C               	dw	_Default_ISR shr (0+2)
 27273                           
 27274                           ; Vector 53 : U2
 27275  000072  639C               	dw	_Default_ISR shr (0+2)
 27276                           
 27277                           ; Vector 54 : TMR3
 27278  000074  639C               	dw	_Default_ISR shr (0+2)
 27279                           
 27280                           ; Vector 55 : TMR3G
 27281  000076  639C               	dw	_Default_ISR shr (0+2)
 27282                           
 27283                           ; Vector 56 : TMR4
 27284  000078  639C               	dw	_Default_ISR shr (0+2)
 27285                           
 27286                           ; Vector 57 : CCP2
 27287  00007A  639C               	dw	_Default_ISR shr (0+2)
 27288                           
 27289                           ; Vector 58 : Undefined
 27290  00007C  002B               	dw	ivt0x8_undefint shr (0+2)
 27291                           
 27292                           ; Vector 59 : CWG2
 27293  00007E  639C               	dw	_Default_ISR shr (0+2)
 27294                           
 27295                           ; Vector 60 : CLC2
 27296  000080  639C               	dw	_Default_ISR shr (0+2)
 27297                           
 27298                           ; Vector 61 : INT2
 27299  000082  639C               	dw	_Default_ISR shr (0+2)
 27300                           
 27301                           ; Vector 62 : Undefined
 27302  000084  002B               	dw	ivt0x8_undefint shr (0+2)
 27303                           
 27304                           ; Vector 63 : Undefined
 27305  000086  002B               	dw	ivt0x8_undefint shr (0+2)
 27306                           
 27307                           ; Vector 64 : Undefined
 27308  000088  002B               	dw	ivt0x8_undefint shr (0+2)
 27309                           
 27310                           ; Vector 65 : Undefined
 27311  00008A  002B               	dw	ivt0x8_undefint shr (0+2)
 27312                           
 27313                           ; Vector 66 : Undefined
 27314  00008C  002B               	dw	ivt0x8_undefint shr (0+2)
 27315                           
 27316                           ; Vector 67 : Undefined
 27317  00008E  002B               	dw	ivt0x8_undefint shr (0+2)
 27318                           
 27319                           ; Vector 68 : Undefined
 27320  000090  002B               	dw	ivt0x8_undefint shr (0+2)
 27321                           
 27322                           ; Vector 69 : Undefined
 27323  000092  002B               	dw	ivt0x8_undefint shr (0+2)
 27324                           
 27325                           ; Vector 70 : TMR5
 27326  000094  6055               	dw	_TMR5_ISR shr (0+2)
 27327                           
 27328                           ; Vector 71 : TMR5G
 27329  000096  639C               	dw	_Default_ISR shr (0+2)
 27330                           
 27331                           ; Vector 72 : TMR6
 27332  000098  633F               	dw	_TMR6_ISR shr (0+2)
 27333                           
 27334                           ; Vector 73 : CCP3
 27335  00009A  639C               	dw	_Default_ISR shr (0+2)
 27336                           
 27337                           ; Vector 74 : CWG3
 27338  00009C  639C               	dw	_Default_ISR shr (0+2)
 27339                           
 27340                           ; Vector 75 : CLC3
 27341  00009E  639C               	dw	_Default_ISR shr (0+2)
 27342                           
 27343                           ; Vector 76 : Undefined
 27344  0000A0  002B               	dw	ivt0x8_undefint shr (0+2)
 27345                           
 27346                           ; Vector 77 : Undefined
 27347  0000A2  002B               	dw	ivt0x8_undefint shr (0+2)
 27348                           
 27349                           ; Vector 78 : Undefined
 27350  0000A4  002B               	dw	ivt0x8_undefint shr (0+2)
 27351                           
 27352                           ; Vector 79 : Undefined
 27353  0000A6  002B               	dw	ivt0x8_undefint shr (0+2)
 27354                           
 27355                           ; Vector 80 : CCP4
 27356  0000A8  639C               	dw	_Default_ISR shr (0+2)
 27357                           
 27358                           ; Vector 81 : CLC4
 27359  0000AA  639C               	dw	_Default_ISR shr (0+2)
 27360  0000AC                     ivt0x8_undefint:
 27361                           	opt callstack 0
 27362  0000AC  00FF               	reset	
 27363                           
 27364                           	psect	text146
 27365  000000                     __ptext146:
 27366                           	opt callstack 0
 27367                           
 27368                           	psect	param0
 27369  0000                     
 27370                           	psect	temp
 27371  000035                     btemp:
 27372                           	opt callstack 0
 27373  000035                     	ds	32
 27374  0000                     wtemp0	set	btemp
 27375  0000                     wtemp1	set	btemp+2
 27376  0000                     wtemp2	set	btemp+4
 27377  0000                     wtemp3	set	btemp+6
 27378  0000                     wtemp4	set	btemp+8
 27379  0000                     wtemp5	set	btemp+10
 27380  0000                     wtemp8	set	btemp+1
 27381  0000                     ttemp0	set	btemp
 27382  0000                     ttemp1	set	btemp+3
 27383  0000                     ttemp2	set	btemp+6
 27384  0000                     ttemp3	set	btemp+9
 27385  0000                     ttemp5	set	btemp+1
 27386  0000                     ttemp6	set	btemp+4
 27387  0000                     ttemp7	set	btemp+8
 27388  0000                     ltemp0	set	btemp
 27389  0000                     ltemp1	set	btemp+4
 27390  0000                     ltemp2	set	btemp+8
 27391  0000                     lltemp0	set	btemp
 27392  0000                     lltemp1	set	btemp+8
 27393  0000                     lltemp2	set	btemp+16
 27394  0000                     lltemp3	set	btemp+24
 27395                           tosu	equ	0x3FFF
 27396                           tosh	equ	0x3FFE
 27397                           tosl	equ	0x3FFD
 27398                           stkptr	equ	0x3FFC
 27399                           pclatu	equ	0x3FFB
 27400                           pclath	equ	0x3FFA
 27401                           pcl	equ	0x3FF9
 27402                           tblptru	equ	0x3FF8
 27403                           tblptrh	equ	0x3FF7
 27404                           tblptrl	equ	0x3FF6
 27405                           tablat	equ	0x3FF5
 27406                           prodh	equ	0x3FF4
 27407                           prodl	equ	0x3FF3
 27408                           indf0	equ	0x3FEF
 27409                           postinc0	equ	0x3FEE
 27410                           postdec0	equ	0x3FED
 27411                           preinc0	equ	0x3FEC
 27412                           plusw0	equ	0x3FEB
 27413                           fsr0h	equ	0x3FEA
 27414                           fsr0l	equ	0x3FE9
 27415                           wreg	equ	0x3FE8
 27416                           indf1	equ	0x3FE7
 27417                           postinc1	equ	0x3FE6
 27418                           postdec1	equ	0x3FE5
 27419                           preinc1	equ	0x3FE4
 27420                           plusw1	equ	0x3FE3
 27421                           fsr1h	equ	0x3FE2
 27422                           fsr1l	equ	0x3FE1
 27423                           bsr	equ	0x3FE0
 27424                           indf2	equ	0x3FDF
 27425                           postinc2	equ	0x3FDE
 27426                           postdec2	equ	0x3FDD
 27427                           preinc2	equ	0x3FDC
 27428                           plusw2	equ	0x3FDB
 27429                           fsr2h	equ	0x3FDA
 27430                           fsr2l	equ	0x3FD9
 27431                           status	equ	0x3FD8


Data Sizes:
    Strings     286
    Constant    144
    Data        254
    BSS         1361
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           63      6      58
    BANK0           160      5     139
    BANK1           256      0     251
    BANK2           256      0     252
    BANK3           256      0     198
    BANK4           256      0     218
    BANK5           256      0     255
    BANK6           256      0     255
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          256      0       0
    BANK16          256      0       0
    BANK17          256      0       0
    BANK18          256      0       0
    BANK19          256      0       0
    BANK20          256      0       0
    BANK21          256      0       0
    BANK22          256      0       0
    BANK23          256      0       0
    BANK24          256      0       0
    BANK25          256      0       0
    BANK26          256      0       0
    BANK27          256      0       0
    BANK28          256      0       0
    BANK29          256      0       0
    BANK30          256      0       0
    BANK31          256      0       0

Pointer List with Targets:

    s	PTR const unsigned char  size(2) Largest target is 1
		 -> STR_33(CODE[1]), 

    _r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_67(CODE[3]), STR_63(CODE[3]), STR_58(CODE[3]), STR_53(CODE[3]), 
		 -> STR_48(CODE[3]), STR_44(CODE[3]), 

    _l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    l	PTR const unsigned char  size(2) Largest target is 24
		 -> ct(STACK[3]), STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), 
		 -> STR_29(CODE[19]), STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), 
		 -> STR_25(CODE[19]), STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[15]), STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), 
		 -> STR_17(CODE[19]), STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    a	PTR const unsigned char  size(2) Largest target is 218
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), dbuf(BANK2[80]), 
		 -> STR_16(CODE[9]), STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), 
		 -> T(CODE[144]), STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_39(CODE[4]), STR_38(CODE[4]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_11(CODE[18]), STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), 
		 -> STR_6(CODE[15]), STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[17]), 

    s	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    S4829_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp.buffer	PTR unsigned char  size(2) Largest target is 218
		 -> D(BANK4[218]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    dest	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR unsigned char  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    s	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fmt	PTR const unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cfmt	PTR unsigned char  size(2) Largest target is 24
		 -> STR_32(CODE[3]), STR_31(CODE[3]), STR_30(CODE[19]), STR_29(CODE[19]), 
		 -> STR_28(CODE[19]), STR_27(CODE[19]), STR_26(CODE[19]), STR_25(CODE[19]), 
		 -> STR_24(CODE[24]), STR_23(CODE[15]), STR_22(CODE[15]), STR_21(CODE[15]), 
		 -> STR_20(CODE[10]), STR_19(CODE[10]), STR_18(CODE[19]), STR_17(CODE[19]), 
		 -> STR_14(CODE[3]), STR_13(CODE[3]), STR_12(CODE[3]), STR_11(CODE[18]), 
		 -> STR_10(CODE[13]), STR_9(CODE[13]), STR_8(CODE[17]), STR_6(CODE[15]), 
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_2(CODE[15]), STR_1(CODE[17]), 

    cp	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    ap	PTR PTR void  size(2) Largest target is 2
		 -> ap(STACK[2]), ap(STACK[2]), 

    fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> cfmt(STACK[2]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    s	PTR unsigned char  size(2) Largest target is 2
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), STR_16(CODE[9]), STR_15(CODE[12]), 
		 -> D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), STR_7(CODE[5]), 
		 -> STR_3(CODE[5]), V(BANK1[187]), 

    cp	PTR unsigned char  size(2) Largest target is 7
		 -> ?_printf(COMRAM[2]), ?_sprintf(COMRAM[2]), nuls(STACK[7]), STR_16(CODE[9]), 
		 -> STR_15(CODE[12]), D.lcd(BANK4[216]), D(BANK4[218]), T(CODE[144]), 
		 -> STR_7(CODE[5]), STR_3(CODE[5]), V(BANK1[187]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> f(STACK[6]), NULL(NULL[0]), 

    buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    S3979tm$__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    t_mbmc.__tm_zone	PTR const unsigned char  size(2) Largest target is 0

    build_time	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_16(CODE[9]), 

    build_date	PTR const unsigned char  size(2) Largest target is 12
		 -> STR_15(CODE[12]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    _this	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    sp__memset	PTR void  size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    _this	PTR volatile struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), ring_buf1(BANK3[67]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    strPtr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), V(BANK1[187]), 

    sp__get_vterm_ptr	PTR unsigned char  size(2) Largest target is 218
		 -> D.lcd(BANK4[216]), D(BANK4[218]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), 

    TMR5_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR5_DefaultInterruptHandler(), Absolute function(), 

    S1930spi_link_type$tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    spi_link.tx1a	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf1(BANK3[67]), 

    S1930spi_link_type$tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    spi_link.tx1b	PTR struct ringBufS_t size(2) Largest target is 67
		 -> ring_buf2(BANK3[67]), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), 

    TMR6_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> TMR6_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), 

    UART2_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Receive_ISR(), Absolute function(), 

    UART2_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART2_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), 

    UART1_RxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Receive_ISR(), Absolute function(), 

    UART1_TxInterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> UART1_Transmit_ISR(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADTI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_t_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), 

    ADCC_ADI_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> adc_int_handler(), ADCC_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT1_DefaultInterruptHandler(), Absolute function(), 

    InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(3) Largest target is 1
		 -> INT0_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMR5_ISR in COMRAM

    None.

Critical Paths under _INT0_ISR in COMRAM

    None.

Critical Paths under _INT1_ISR in COMRAM

    None.

Critical Paths under _Default_ISR in COMRAM

    None.

Critical Paths under _ADCC_ISR in COMRAM

    None.

Critical Paths under _ADCC_ThresholdISR in COMRAM

    None.

Critical Paths under _UART1_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART1_rx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_tx_vect_isr in COMRAM

    None.

Critical Paths under _UART2_rx_vect_isr in COMRAM

    None.

Critical Paths under _TMR6_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMASCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMADCNT_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAA_ISR in COMRAM

    None.

Critical Paths under _DMA1_DMAOR_ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _TMR5_ISR in BANK0

    None.

Critical Paths under _INT0_ISR in BANK0

    None.

Critical Paths under _INT1_ISR in BANK0

    None.

Critical Paths under _Default_ISR in BANK0

    None.

Critical Paths under _ADCC_ISR in BANK0

    None.

Critical Paths under _ADCC_ThresholdISR in BANK0

    None.

Critical Paths under _UART1_tx_vect_isr in BANK0

    None.

Critical Paths under _UART1_rx_vect_isr in BANK0

    None.

Critical Paths under _UART2_tx_vect_isr in BANK0

    None.

Critical Paths under _UART2_rx_vect_isr in BANK0

    None.

Critical Paths under _TMR6_ISR in BANK0

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK0

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMR5_ISR in BANK1

    None.

Critical Paths under _INT0_ISR in BANK1

    None.

Critical Paths under _INT1_ISR in BANK1

    None.

Critical Paths under _Default_ISR in BANK1

    None.

Critical Paths under _ADCC_ISR in BANK1

    None.

Critical Paths under _ADCC_ThresholdISR in BANK1

    None.

Critical Paths under _UART1_tx_vect_isr in BANK1

    None.

Critical Paths under _UART1_rx_vect_isr in BANK1

    None.

Critical Paths under _UART2_tx_vect_isr in BANK1

    None.

Critical Paths under _UART2_rx_vect_isr in BANK1

    None.

Critical Paths under _TMR6_ISR in BANK1

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK1

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMR5_ISR in BANK2

    None.

Critical Paths under _INT0_ISR in BANK2

    None.

Critical Paths under _INT1_ISR in BANK2

    None.

Critical Paths under _Default_ISR in BANK2

    None.

Critical Paths under _ADCC_ISR in BANK2

    None.

Critical Paths under _ADCC_ThresholdISR in BANK2

    None.

Critical Paths under _UART1_tx_vect_isr in BANK2

    None.

Critical Paths under _UART1_rx_vect_isr in BANK2

    None.

Critical Paths under _UART2_tx_vect_isr in BANK2

    None.

Critical Paths under _UART2_rx_vect_isr in BANK2

    None.

Critical Paths under _TMR6_ISR in BANK2

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK2

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMR5_ISR in BANK3

    None.

Critical Paths under _INT0_ISR in BANK3

    None.

Critical Paths under _INT1_ISR in BANK3

    None.

Critical Paths under _Default_ISR in BANK3

    None.

Critical Paths under _ADCC_ISR in BANK3

    None.

Critical Paths under _ADCC_ThresholdISR in BANK3

    None.

Critical Paths under _UART1_tx_vect_isr in BANK3

    None.

Critical Paths under _UART1_rx_vect_isr in BANK3

    None.

Critical Paths under _UART2_tx_vect_isr in BANK3

    None.

Critical Paths under _UART2_rx_vect_isr in BANK3

    None.

Critical Paths under _TMR6_ISR in BANK3

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK3

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMR5_ISR in BANK4

    None.

Critical Paths under _INT0_ISR in BANK4

    None.

Critical Paths under _INT1_ISR in BANK4

    None.

Critical Paths under _Default_ISR in BANK4

    None.

Critical Paths under _ADCC_ISR in BANK4

    None.

Critical Paths under _ADCC_ThresholdISR in BANK4

    None.

Critical Paths under _UART1_tx_vect_isr in BANK4

    None.

Critical Paths under _UART1_rx_vect_isr in BANK4

    None.

Critical Paths under _UART2_tx_vect_isr in BANK4

    None.

Critical Paths under _UART2_rx_vect_isr in BANK4

    None.

Critical Paths under _TMR6_ISR in BANK4

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK4

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMR5_ISR in BANK5

    None.

Critical Paths under _INT0_ISR in BANK5

    None.

Critical Paths under _INT1_ISR in BANK5

    None.

Critical Paths under _Default_ISR in BANK5

    None.

Critical Paths under _ADCC_ISR in BANK5

    None.

Critical Paths under _ADCC_ThresholdISR in BANK5

    None.

Critical Paths under _UART1_tx_vect_isr in BANK5

    None.

Critical Paths under _UART1_rx_vect_isr in BANK5

    None.

Critical Paths under _UART2_tx_vect_isr in BANK5

    None.

Critical Paths under _UART2_rx_vect_isr in BANK5

    None.

Critical Paths under _TMR6_ISR in BANK5

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK5

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMR5_ISR in BANK6

    None.

Critical Paths under _INT0_ISR in BANK6

    None.

Critical Paths under _INT1_ISR in BANK6

    None.

Critical Paths under _Default_ISR in BANK6

    None.

Critical Paths under _ADCC_ISR in BANK6

    None.

Critical Paths under _ADCC_ThresholdISR in BANK6

    None.

Critical Paths under _UART1_tx_vect_isr in BANK6

    None.

Critical Paths under _UART1_rx_vect_isr in BANK6

    None.

Critical Paths under _UART2_tx_vect_isr in BANK6

    None.

Critical Paths under _UART2_rx_vect_isr in BANK6

    None.

Critical Paths under _TMR6_ISR in BANK6

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK6

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMR5_ISR in BANK7

    None.

Critical Paths under _INT0_ISR in BANK7

    None.

Critical Paths under _INT1_ISR in BANK7

    None.

Critical Paths under _Default_ISR in BANK7

    None.

Critical Paths under _ADCC_ISR in BANK7

    None.

Critical Paths under _ADCC_ThresholdISR in BANK7

    None.

Critical Paths under _UART1_tx_vect_isr in BANK7

    None.

Critical Paths under _UART1_rx_vect_isr in BANK7

    None.

Critical Paths under _UART2_tx_vect_isr in BANK7

    None.

Critical Paths under _UART2_rx_vect_isr in BANK7

    None.

Critical Paths under _TMR6_ISR in BANK7

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK7

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _TMR5_ISR in BANK8

    None.

Critical Paths under _INT0_ISR in BANK8

    None.

Critical Paths under _INT1_ISR in BANK8

    None.

Critical Paths under _Default_ISR in BANK8

    None.

Critical Paths under _ADCC_ISR in BANK8

    None.

Critical Paths under _ADCC_ThresholdISR in BANK8

    None.

Critical Paths under _UART1_tx_vect_isr in BANK8

    None.

Critical Paths under _UART1_rx_vect_isr in BANK8

    None.

Critical Paths under _UART2_tx_vect_isr in BANK8

    None.

Critical Paths under _UART2_rx_vect_isr in BANK8

    None.

Critical Paths under _TMR6_ISR in BANK8

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK8

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _TMR5_ISR in BANK9

    None.

Critical Paths under _INT0_ISR in BANK9

    None.

Critical Paths under _INT1_ISR in BANK9

    None.

Critical Paths under _Default_ISR in BANK9

    None.

Critical Paths under _ADCC_ISR in BANK9

    None.

Critical Paths under _ADCC_ThresholdISR in BANK9

    None.

Critical Paths under _UART1_tx_vect_isr in BANK9

    None.

Critical Paths under _UART1_rx_vect_isr in BANK9

    None.

Critical Paths under _UART2_tx_vect_isr in BANK9

    None.

Critical Paths under _UART2_rx_vect_isr in BANK9

    None.

Critical Paths under _TMR6_ISR in BANK9

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK9

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _TMR5_ISR in BANK10

    None.

Critical Paths under _INT0_ISR in BANK10

    None.

Critical Paths under _INT1_ISR in BANK10

    None.

Critical Paths under _Default_ISR in BANK10

    None.

Critical Paths under _ADCC_ISR in BANK10

    None.

Critical Paths under _ADCC_ThresholdISR in BANK10

    None.

Critical Paths under _UART1_tx_vect_isr in BANK10

    None.

Critical Paths under _UART1_rx_vect_isr in BANK10

    None.

Critical Paths under _UART2_tx_vect_isr in BANK10

    None.

Critical Paths under _UART2_rx_vect_isr in BANK10

    None.

Critical Paths under _TMR6_ISR in BANK10

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK10

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _TMR5_ISR in BANK11

    None.

Critical Paths under _INT0_ISR in BANK11

    None.

Critical Paths under _INT1_ISR in BANK11

    None.

Critical Paths under _Default_ISR in BANK11

    None.

Critical Paths under _ADCC_ISR in BANK11

    None.

Critical Paths under _ADCC_ThresholdISR in BANK11

    None.

Critical Paths under _UART1_tx_vect_isr in BANK11

    None.

Critical Paths under _UART1_rx_vect_isr in BANK11

    None.

Critical Paths under _UART2_tx_vect_isr in BANK11

    None.

Critical Paths under _UART2_rx_vect_isr in BANK11

    None.

Critical Paths under _TMR6_ISR in BANK11

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK11

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _TMR5_ISR in BANK12

    None.

Critical Paths under _INT0_ISR in BANK12

    None.

Critical Paths under _INT1_ISR in BANK12

    None.

Critical Paths under _Default_ISR in BANK12

    None.

Critical Paths under _ADCC_ISR in BANK12

    None.

Critical Paths under _ADCC_ThresholdISR in BANK12

    None.

Critical Paths under _UART1_tx_vect_isr in BANK12

    None.

Critical Paths under _UART1_rx_vect_isr in BANK12

    None.

Critical Paths under _UART2_tx_vect_isr in BANK12

    None.

Critical Paths under _UART2_rx_vect_isr in BANK12

    None.

Critical Paths under _TMR6_ISR in BANK12

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK12

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _TMR5_ISR in BANK13

    None.

Critical Paths under _INT0_ISR in BANK13

    None.

Critical Paths under _INT1_ISR in BANK13

    None.

Critical Paths under _Default_ISR in BANK13

    None.

Critical Paths under _ADCC_ISR in BANK13

    None.

Critical Paths under _ADCC_ThresholdISR in BANK13

    None.

Critical Paths under _UART1_tx_vect_isr in BANK13

    None.

Critical Paths under _UART1_rx_vect_isr in BANK13

    None.

Critical Paths under _UART2_tx_vect_isr in BANK13

    None.

Critical Paths under _UART2_rx_vect_isr in BANK13

    None.

Critical Paths under _TMR6_ISR in BANK13

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK13

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _TMR5_ISR in BANK14

    None.

Critical Paths under _INT0_ISR in BANK14

    None.

Critical Paths under _INT1_ISR in BANK14

    None.

Critical Paths under _Default_ISR in BANK14

    None.

Critical Paths under _ADCC_ISR in BANK14

    None.

Critical Paths under _ADCC_ThresholdISR in BANK14

    None.

Critical Paths under _UART1_tx_vect_isr in BANK14

    None.

Critical Paths under _UART1_rx_vect_isr in BANK14

    None.

Critical Paths under _UART2_tx_vect_isr in BANK14

    None.

Critical Paths under _UART2_rx_vect_isr in BANK14

    None.

Critical Paths under _TMR6_ISR in BANK14

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK14

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _TMR5_ISR in BANK15

    None.

Critical Paths under _INT0_ISR in BANK15

    None.

Critical Paths under _INT1_ISR in BANK15

    None.

Critical Paths under _Default_ISR in BANK15

    None.

Critical Paths under _ADCC_ISR in BANK15

    None.

Critical Paths under _ADCC_ThresholdISR in BANK15

    None.

Critical Paths under _UART1_tx_vect_isr in BANK15

    None.

Critical Paths under _UART1_rx_vect_isr in BANK15

    None.

Critical Paths under _UART2_tx_vect_isr in BANK15

    None.

Critical Paths under _UART2_rx_vect_isr in BANK15

    None.

Critical Paths under _TMR6_ISR in BANK15

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK15

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _TMR5_ISR in BANK16

    None.

Critical Paths under _INT0_ISR in BANK16

    None.

Critical Paths under _INT1_ISR in BANK16

    None.

Critical Paths under _Default_ISR in BANK16

    None.

Critical Paths under _ADCC_ISR in BANK16

    None.

Critical Paths under _ADCC_ThresholdISR in BANK16

    None.

Critical Paths under _UART1_tx_vect_isr in BANK16

    None.

Critical Paths under _UART1_rx_vect_isr in BANK16

    None.

Critical Paths under _UART2_tx_vect_isr in BANK16

    None.

Critical Paths under _UART2_rx_vect_isr in BANK16

    None.

Critical Paths under _TMR6_ISR in BANK16

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK16

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _TMR5_ISR in BANK17

    None.

Critical Paths under _INT0_ISR in BANK17

    None.

Critical Paths under _INT1_ISR in BANK17

    None.

Critical Paths under _Default_ISR in BANK17

    None.

Critical Paths under _ADCC_ISR in BANK17

    None.

Critical Paths under _ADCC_ThresholdISR in BANK17

    None.

Critical Paths under _UART1_tx_vect_isr in BANK17

    None.

Critical Paths under _UART1_rx_vect_isr in BANK17

    None.

Critical Paths under _UART2_tx_vect_isr in BANK17

    None.

Critical Paths under _UART2_rx_vect_isr in BANK17

    None.

Critical Paths under _TMR6_ISR in BANK17

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK17

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _TMR5_ISR in BANK18

    None.

Critical Paths under _INT0_ISR in BANK18

    None.

Critical Paths under _INT1_ISR in BANK18

    None.

Critical Paths under _Default_ISR in BANK18

    None.

Critical Paths under _ADCC_ISR in BANK18

    None.

Critical Paths under _ADCC_ThresholdISR in BANK18

    None.

Critical Paths under _UART1_tx_vect_isr in BANK18

    None.

Critical Paths under _UART1_rx_vect_isr in BANK18

    None.

Critical Paths under _UART2_tx_vect_isr in BANK18

    None.

Critical Paths under _UART2_rx_vect_isr in BANK18

    None.

Critical Paths under _TMR6_ISR in BANK18

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK18

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _TMR5_ISR in BANK19

    None.

Critical Paths under _INT0_ISR in BANK19

    None.

Critical Paths under _INT1_ISR in BANK19

    None.

Critical Paths under _Default_ISR in BANK19

    None.

Critical Paths under _ADCC_ISR in BANK19

    None.

Critical Paths under _ADCC_ThresholdISR in BANK19

    None.

Critical Paths under _UART1_tx_vect_isr in BANK19

    None.

Critical Paths under _UART1_rx_vect_isr in BANK19

    None.

Critical Paths under _UART2_tx_vect_isr in BANK19

    None.

Critical Paths under _UART2_rx_vect_isr in BANK19

    None.

Critical Paths under _TMR6_ISR in BANK19

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK19

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _TMR5_ISR in BANK20

    None.

Critical Paths under _INT0_ISR in BANK20

    None.

Critical Paths under _INT1_ISR in BANK20

    None.

Critical Paths under _Default_ISR in BANK20

    None.

Critical Paths under _ADCC_ISR in BANK20

    None.

Critical Paths under _ADCC_ThresholdISR in BANK20

    None.

Critical Paths under _UART1_tx_vect_isr in BANK20

    None.

Critical Paths under _UART1_rx_vect_isr in BANK20

    None.

Critical Paths under _UART2_tx_vect_isr in BANK20

    None.

Critical Paths under _UART2_rx_vect_isr in BANK20

    None.

Critical Paths under _TMR6_ISR in BANK20

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK20

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _TMR5_ISR in BANK21

    None.

Critical Paths under _INT0_ISR in BANK21

    None.

Critical Paths under _INT1_ISR in BANK21

    None.

Critical Paths under _Default_ISR in BANK21

    None.

Critical Paths under _ADCC_ISR in BANK21

    None.

Critical Paths under _ADCC_ThresholdISR in BANK21

    None.

Critical Paths under _UART1_tx_vect_isr in BANK21

    None.

Critical Paths under _UART1_rx_vect_isr in BANK21

    None.

Critical Paths under _UART2_tx_vect_isr in BANK21

    None.

Critical Paths under _UART2_rx_vect_isr in BANK21

    None.

Critical Paths under _TMR6_ISR in BANK21

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK21

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _TMR5_ISR in BANK22

    None.

Critical Paths under _INT0_ISR in BANK22

    None.

Critical Paths under _INT1_ISR in BANK22

    None.

Critical Paths under _Default_ISR in BANK22

    None.

Critical Paths under _ADCC_ISR in BANK22

    None.

Critical Paths under _ADCC_ThresholdISR in BANK22

    None.

Critical Paths under _UART1_tx_vect_isr in BANK22

    None.

Critical Paths under _UART1_rx_vect_isr in BANK22

    None.

Critical Paths under _UART2_tx_vect_isr in BANK22

    None.

Critical Paths under _UART2_rx_vect_isr in BANK22

    None.

Critical Paths under _TMR6_ISR in BANK22

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK22

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _TMR5_ISR in BANK23

    None.

Critical Paths under _INT0_ISR in BANK23

    None.

Critical Paths under _INT1_ISR in BANK23

    None.

Critical Paths under _Default_ISR in BANK23

    None.

Critical Paths under _ADCC_ISR in BANK23

    None.

Critical Paths under _ADCC_ThresholdISR in BANK23

    None.

Critical Paths under _UART1_tx_vect_isr in BANK23

    None.

Critical Paths under _UART1_rx_vect_isr in BANK23

    None.

Critical Paths under _UART2_tx_vect_isr in BANK23

    None.

Critical Paths under _UART2_rx_vect_isr in BANK23

    None.

Critical Paths under _TMR6_ISR in BANK23

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK23

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _TMR5_ISR in BANK24

    None.

Critical Paths under _INT0_ISR in BANK24

    None.

Critical Paths under _INT1_ISR in BANK24

    None.

Critical Paths under _Default_ISR in BANK24

    None.

Critical Paths under _ADCC_ISR in BANK24

    None.

Critical Paths under _ADCC_ThresholdISR in BANK24

    None.

Critical Paths under _UART1_tx_vect_isr in BANK24

    None.

Critical Paths under _UART1_rx_vect_isr in BANK24

    None.

Critical Paths under _UART2_tx_vect_isr in BANK24

    None.

Critical Paths under _UART2_rx_vect_isr in BANK24

    None.

Critical Paths under _TMR6_ISR in BANK24

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK24

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _TMR5_ISR in BANK25

    None.

Critical Paths under _INT0_ISR in BANK25

    None.

Critical Paths under _INT1_ISR in BANK25

    None.

Critical Paths under _Default_ISR in BANK25

    None.

Critical Paths under _ADCC_ISR in BANK25

    None.

Critical Paths under _ADCC_ThresholdISR in BANK25

    None.

Critical Paths under _UART1_tx_vect_isr in BANK25

    None.

Critical Paths under _UART1_rx_vect_isr in BANK25

    None.

Critical Paths under _UART2_tx_vect_isr in BANK25

    None.

Critical Paths under _UART2_rx_vect_isr in BANK25

    None.

Critical Paths under _TMR6_ISR in BANK25

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK25

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK25

    None.

Critical Paths under _main in BANK26

    None.

Critical Paths under _TMR5_ISR in BANK26

    None.

Critical Paths under _INT0_ISR in BANK26

    None.

Critical Paths under _INT1_ISR in BANK26

    None.

Critical Paths under _Default_ISR in BANK26

    None.

Critical Paths under _ADCC_ISR in BANK26

    None.

Critical Paths under _ADCC_ThresholdISR in BANK26

    None.

Critical Paths under _UART1_tx_vect_isr in BANK26

    None.

Critical Paths under _UART1_rx_vect_isr in BANK26

    None.

Critical Paths under _UART2_tx_vect_isr in BANK26

    None.

Critical Paths under _UART2_rx_vect_isr in BANK26

    None.

Critical Paths under _TMR6_ISR in BANK26

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK26

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK26

    None.

Critical Paths under _main in BANK27

    None.

Critical Paths under _TMR5_ISR in BANK27

    None.

Critical Paths under _INT0_ISR in BANK27

    None.

Critical Paths under _INT1_ISR in BANK27

    None.

Critical Paths under _Default_ISR in BANK27

    None.

Critical Paths under _ADCC_ISR in BANK27

    None.

Critical Paths under _ADCC_ThresholdISR in BANK27

    None.

Critical Paths under _UART1_tx_vect_isr in BANK27

    None.

Critical Paths under _UART1_rx_vect_isr in BANK27

    None.

Critical Paths under _UART2_tx_vect_isr in BANK27

    None.

Critical Paths under _UART2_rx_vect_isr in BANK27

    None.

Critical Paths under _TMR6_ISR in BANK27

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK27

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK27

    None.

Critical Paths under _main in BANK28

    None.

Critical Paths under _TMR5_ISR in BANK28

    None.

Critical Paths under _INT0_ISR in BANK28

    None.

Critical Paths under _INT1_ISR in BANK28

    None.

Critical Paths under _Default_ISR in BANK28

    None.

Critical Paths under _ADCC_ISR in BANK28

    None.

Critical Paths under _ADCC_ThresholdISR in BANK28

    None.

Critical Paths under _UART1_tx_vect_isr in BANK28

    None.

Critical Paths under _UART1_rx_vect_isr in BANK28

    None.

Critical Paths under _UART2_tx_vect_isr in BANK28

    None.

Critical Paths under _UART2_rx_vect_isr in BANK28

    None.

Critical Paths under _TMR6_ISR in BANK28

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK28

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK28

    None.

Critical Paths under _main in BANK29

    None.

Critical Paths under _TMR5_ISR in BANK29

    None.

Critical Paths under _INT0_ISR in BANK29

    None.

Critical Paths under _INT1_ISR in BANK29

    None.

Critical Paths under _Default_ISR in BANK29

    None.

Critical Paths under _ADCC_ISR in BANK29

    None.

Critical Paths under _ADCC_ThresholdISR in BANK29

    None.

Critical Paths under _UART1_tx_vect_isr in BANK29

    None.

Critical Paths under _UART1_rx_vect_isr in BANK29

    None.

Critical Paths under _UART2_tx_vect_isr in BANK29

    None.

Critical Paths under _UART2_rx_vect_isr in BANK29

    None.

Critical Paths under _TMR6_ISR in BANK29

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK29

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK29

    None.

Critical Paths under _main in BANK30

    None.

Critical Paths under _TMR5_ISR in BANK30

    None.

Critical Paths under _INT0_ISR in BANK30

    None.

Critical Paths under _INT1_ISR in BANK30

    None.

Critical Paths under _Default_ISR in BANK30

    None.

Critical Paths under _ADCC_ISR in BANK30

    None.

Critical Paths under _ADCC_ThresholdISR in BANK30

    None.

Critical Paths under _UART1_tx_vect_isr in BANK30

    None.

Critical Paths under _UART1_rx_vect_isr in BANK30

    None.

Critical Paths under _UART2_tx_vect_isr in BANK30

    None.

Critical Paths under _UART2_rx_vect_isr in BANK30

    None.

Critical Paths under _TMR6_ISR in BANK30

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK30

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK30

    None.

Critical Paths under _main in BANK31

    None.

Critical Paths under _TMR5_ISR in BANK31

    None.

Critical Paths under _INT0_ISR in BANK31

    None.

Critical Paths under _INT1_ISR in BANK31

    None.

Critical Paths under _Default_ISR in BANK31

    None.

Critical Paths under _ADCC_ISR in BANK31

    None.

Critical Paths under _ADCC_ThresholdISR in BANK31

    None.

Critical Paths under _UART1_tx_vect_isr in BANK31

    None.

Critical Paths under _UART1_rx_vect_isr in BANK31

    None.

Critical Paths under _UART2_tx_vect_isr in BANK31

    None.

Critical Paths under _UART2_rx_vect_isr in BANK31

    None.

Critical Paths under _TMR6_ISR in BANK31

    None.

Critical Paths under _DMA1_DMASCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMADCNT_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAA_ISR in BANK31

    None.

Critical Paths under _DMA1_DMAOR_ISR in BANK31

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  323242
                  _SYSTEM_Initialize
                         _StartTimer
                          _TimerDone
                             _WaitMs
                     _check_adc_scan
                         _check_help
                     _clear_adc_scan
                   _convert_adc_data
                _eaDogM_WriteCommand
                     _get_raw_result
                      _get_vterm_ptr
                       _init_display
                      _mode_lamp_dim
                   _set_display_info
                          _set_vterm
                            _sprintf
                              _srand
                     _start_adc_scan
                         _update_lcd
 ---------------------------------------------------------------------------------
 (1) _start_adc_scan                                       0     0      0      66
      _ADCC_DischargeSampleCapacitor
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _srand                                                2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _init_display                                         0     0      0    1268
                      _ringBufS_init
                       _send_lcd_cmd
                  _send_lcd_cmd_long
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd_long                                    1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (2) _send_lcd_cmd                                         1     0      1      88
                  _SPI1_Exchange8bit
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _SPI1_Exchange8bit                                    1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _ringBufS_init                                        2     0      2    1048
                             _memset
 ---------------------------------------------------------------------------------
 (1) _eaDogM_WriteCommand                                  1     0      1   31190
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (1) _convert_adc_data                                     1     1      0   10863
                    _conv_raw_result
                          _lp_filter
 ---------------------------------------------------------------------------------
 (2) _lp_filter                                           10     4      6    5658
                            ___fladd
                            ___flmul
                            ___flsub
 ---------------------------------------------------------------------------------
 (2) _conv_raw_result                                      2     0      2    5116
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
                     _get_raw_result
                               _nanf
 ---------------------------------------------------------------------------------
 (3) _nanf                                                 6     4      2      23
 ---------------------------------------------------------------------------------
 (1) _get_raw_result                                       1     0      1      22
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            10     5      5     322
 ---------------------------------------------------------------------------------
 (1) _clear_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_help                                           1     0      1  186219
                         _StartTimer
                          _TimerDone
                       _display_help
                       _display_info
                      _get_vterm_ptr
                        _help_button
                   _mode_lamp_bright
                      _mode_lamp_dim
                   _set_display_info
              _set_temp_display_help
                          _set_vterm
                            _sprintf
                         _update_lcd
                         _vterm_dump
 ---------------------------------------------------------------------------------
 (2) _vterm_dump                                           0     0      0   92863
                             _WaitMs
            _eaDogM_WriteStringAtPos
                      _get_vterm_ptr
                            _sprintf
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             24    10     14   30137
                           _vfprintf
 ---------------------------------------------------------------------------------
 (1) _get_vterm_ptr                                        2     0      2      44
 ---------------------------------------------------------------------------------
 (3) _WaitMs                                               2     0      2      88
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _update_lcd                                           1     0      1   62814
            _eaDogM_WriteStringAtPos
                      _wait_lcd_done
 ---------------------------------------------------------------------------------
 (2) _eaDogM_WriteStringAtPos                              4     0      4   62550
                 _eaDogM_WriteString
                   _send_lcd_cmd_dma
 ---------------------------------------------------------------------------------
 (3) _send_lcd_cmd_dma                                     1     0      1   31159
                             _printf
                     _ringBufS_flush
                          _start_lcd
                      _wait_lcd_done
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (2) _wait_lcd_done                                        0     0      0      44
                           _wdtdelay
 ---------------------------------------------------------------------------------
 (3) _wdtdelay                                             4     0      4      44
 ---------------------------------------------------------------------------------
 (3) _eaDogM_WriteString                                   2     0      2   31298
                             _printf
                     _ringBufS_flush
                          _start_lcd
                             _strlen
                       _wait_lcd_set
 ---------------------------------------------------------------------------------
 (4) _wait_lcd_set                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _start_lcd                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _ringBufS_flush                                       3     0      3    1172
                             _memset
 ---------------------------------------------------------------------------------
 (5) _memset                                              10     4      6    1017
 ---------------------------------------------------------------------------------
 (4) _printf                                               8     4      4   29912
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   29759
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           45    39      6   29367
                               _atoi
                               _ctoa
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                               _stoa
                            _strncmp
                            _tolower
                               _utoa
                               _xtoa
 ---------------------------------------------------------------------------------
 (7) _xtoa                                                31    20     11    2664
                            _isalpha
                            _isupper
                                _pad
                            _toupper
 ---------------------------------------------------------------------------------
 (8) _toupper                                              4     2      2     134
                            _islower
 ---------------------------------------------------------------------------------
 (9) _islower                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _isalpha                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (7) _utoa                                                24    14     10    2371
                            ___lodiv
                            ___lomod
                                _pad
 ---------------------------------------------------------------------------------
 (8) ___lomod                                             17     1     16     159
 ---------------------------------------------------------------------------------
 (8) ___lodiv                                             25     9     16     162
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             10     4      6     225
 ---------------------------------------------------------------------------------
 (7) _stoa                                                21    17      4    1289
                              _fputc
                             _strlen
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              63    56      7   13777
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              4     2      2     134
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               8     4      4     137
 ---------------------------------------------------------------------------------
 (8) _floorf                                              14    10      4     338
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       10     6      4     135
 ---------------------------------------------------------------------------------
 (8) ___fltol                                              6     2      4     229
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    2007
                            ___fladd
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             12     4      8    1962
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4      45
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             21    13      8    1445
 ---------------------------------------------------------------------------------
 (8) ___flge                                               8     0      8     182
 ---------------------------------------------------------------------------------
 (8) ___fleq                                               8     0      8      90
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             21    13      8    1099
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     296
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     300
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                28    18     10    2978
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _abs                                                  2     0      2      66
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     296
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     300
 ---------------------------------------------------------------------------------
 (7) _ctoa                                                 7     4      3    1750
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 10     4      6    1651
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2      90
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4     674
                              _fputc
 ---------------------------------------------------------------------------------
 (10) _fputc                                               4     0      4     534
                              _putch
 ---------------------------------------------------------------------------------
 (11) _putch                                               1     0      1     217
                   _ringBufS_put_dma
 ---------------------------------------------------------------------------------
 (12) _ringBufS_put_dma                                    3     0      3     186
 ---------------------------------------------------------------------------------
 (7) _atoi                                                11     9      2     411
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              3     1      2      68
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              2     0      2      22
 ---------------------------------------------------------------------------------
 (1) _set_vterm                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (2) _set_temp_display_help                                1     0      1      22
 ---------------------------------------------------------------------------------
 (1) _set_display_info                                     1     0      1      44
                          _TimerDone
 ---------------------------------------------------------------------------------
 (1) _mode_lamp_dim                                        2     0      2      66
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _mode_lamp_bright                                     0     0      0      44
                 _PWM8_LoadDutyValue
 ---------------------------------------------------------------------------------
 (2) _PWM8_LoadDutyValue                                   2     0      2      44
 ---------------------------------------------------------------------------------
 (2) _help_button                                          0     0      0      66
                         _StartTimer
                          _TimerDone
 ---------------------------------------------------------------------------------
 (2) _TimerDone                                            1     0      1      22
 ---------------------------------------------------------------------------------
 (4) _StartTimer                                           3     0      3      44
 ---------------------------------------------------------------------------------
 (2) _display_info                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_help                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _check_adc_scan                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     243
                    _ADCC_Initialize
                  _CLKREF_Initialize
                    _DMA1_Initialize
                    _DMA2_Initialize
                 _EXT_INT_Initialize
                     _FVR_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                    _PWM8_Initialize
                    _SPI1_Initialize
                    _TMR2_Initialize
                    _TMR5_Initialize
                    _TMR6_Initialize
                   _UART1_Initialize
                   _UART2_Initialize
 ---------------------------------------------------------------------------------
 (2) _UART2_Initialize                                     0     0      0      44
        _UART2_SetRxInterruptHandler
        _UART2_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART2_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART2_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _UART1_Initialize                                     0     0      0      44
        _UART1_SetRxInterruptHandler
        _UART1_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _UART1_SetTxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _UART1_SetRxInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR6_Initialize                                      0     0      0      22
           _TMR6_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR6_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR5_Initialize                                      0     0      0      22
           _TMR5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR5_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SPI1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM8_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 1     1      0      23
 ---------------------------------------------------------------------------------
 (2) _FVR_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0      44
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _INT1_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (3) _INT0_SetInterruptHandler                             3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _DMA2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DMA1_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _CLKREF_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADCC_Initialize                                      0     0      0      44
        _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADTIInterruptHandler                         3     0      3      22
 ---------------------------------------------------------------------------------
 (2) _ADCC_SetADIInterruptHandler                          3     0      3      22
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (14) _TMR5_ISR                                            4     4      0      90
                                              1 BANK0      4     4      0
                      _TMR5_CallBack
                    _TMR5_WriteTimer
 ---------------------------------------------------------------------------------
 (15) _TMR5_WriteTimer                                     2     0      2      90
 ---------------------------------------------------------------------------------
 (15) _TMR5_CallBack                                       0     0      0       0
                   Absolute function *
       _TMR5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _TMR5_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT0_ISR                                            0     0      0       0
                      _INT0_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT0_CallBack                                       0     0      0       0
                   Absolute function *
       _INT0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT0_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (18) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _Default_ISR                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ISR                                            1     1      0       0
                                              0 COMRAM     1     1      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                    _adc_int_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_handler                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _ADCC_ThresholdISR                                   5     5      0      22
                                              1 COMRAM     5     5      0
                   Absolute function *
       _ADCC_DefaultInterruptHandler *
                  _adc_int_t_handler *
 ---------------------------------------------------------------------------------
 (18) _adc_int_t_handler                                   0     0      0      22
      _ADCC_DischargeSampleCapacitor
               _ADCC_StartConversion
 ---------------------------------------------------------------------------------
 (19) _ADCC_StartConversion                                1     0      1      22
 ---------------------------------------------------------------------------------
 (19) _ADCC_DischargeSampleCapacitor                       0     0      0       0
 ---------------------------------------------------------------------------------
 (18) _ADCC_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART1_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART1_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART1_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART1_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_tx_vect_isr                                   0     0      0       0
                   Absolute function *
                 _UART2_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Transmit_ISR                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _UART2_rx_vect_isr                                   0     0      0       0
                   Absolute function *
                  _UART2_Receive_ISR *
 ---------------------------------------------------------------------------------
 (18) _UART2_Receive_ISR                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _TMR6_ISR                                            1     1      0      90
                                              0 BANK0      1     1      0
                      _TMR6_CallBack
 ---------------------------------------------------------------------------------
 (18) _TMR6_CallBack                                       0     0      0      90
                   Absolute function *
       _TMR6_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (19) _TMR6_DefaultInterruptHandler                        1     1      0      90
 ---------------------------------------------------------------------------------
 (19) Absolute function(Fake)                              0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMASCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMADCNT_ISR                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAA_ISR                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _DMA1_DMAOR_ISR                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _ADCC_Initialize
       _ADCC_SetADIInterruptHandler
       _ADCC_SetADTIInterruptHandler
     _CLKREF_Initialize
     _DMA1_Initialize
     _DMA2_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
     _FVR_Initialize
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _PWM8_Initialize
     _SPI1_Initialize
     _TMR2_Initialize
     _TMR5_Initialize
       _TMR5_SetInterruptHandler
     _TMR6_Initialize
       _TMR6_SetInterruptHandler
     _UART1_Initialize
       _UART1_SetRxInterruptHandler
       _UART1_SetTxInterruptHandler
     _UART2_Initialize
       _UART2_SetRxInterruptHandler
       _UART2_SetTxInterruptHandler
   _StartTimer
   _TimerDone
   _WaitMs
     _StartTimer
     _TimerDone
   _check_adc_scan
   _check_help
     _StartTimer
     _TimerDone
     _display_help
     _display_info
     _get_vterm_ptr
     _help_button
       _StartTimer
       _TimerDone
     _mode_lamp_bright
       _PWM8_LoadDutyValue
     _mode_lamp_dim
       _PWM8_LoadDutyValue
     _set_display_info
       _TimerDone
     _set_temp_display_help
     _set_vterm
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _atoi
             _isdigit
             _isspace
           _ctoa
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _dtoa
             ___aodiv
             ___aomod
             _abs
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _efgtoa
             ___awdiv
             ___awmod
             ___fladd
             ___fldiv
             ___fleq
             ___flge
             ___flmul
             ___flneg
             ___flsub
               ___fladd
             ___fltol
             ___fpclassifyf
             _floorf
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _strcpy
             _tolower
               _isupper
           _fputc
             _putch
               _ringBufS_put_dma
           _isdigit
           _isupper
           _stoa
             _fputc
               _putch
                 _ringBufS_put_dma
             _strlen
           _strncmp
           _tolower
             _isupper
           _utoa
             ___lodiv
             ___lomod
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
           _xtoa
             _isalpha
             _isupper
             _pad
               _fputc
                 _putch
                   _ringBufS_put_dma
               _fputs
                 _fputc
                   _putch
                     _ringBufS_put_dma
               _strlen
             _toupper
               _islower
     _update_lcd
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _wait_lcd_done
         _wdtdelay
     _vterm_dump
       _WaitMs
         _StartTimer
         _TimerDone
       _eaDogM_WriteStringAtPos
         _eaDogM_WriteString
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _strlen
           _wait_lcd_set
         _send_lcd_cmd_dma
           _printf
             _vfprintf
               _vfpfcnvrt
                 _atoi
                   _isdigit
                   _isspace
                 _ctoa
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _efgtoa
                   ___awdiv
                   ___awmod
                   ___fladd
                   ___fldiv
                   ___fleq
                   ___flge
                   ___flmul
                   ___flneg
                   ___flsub
                     ___fladd
                   ___fltol
                   ___fpclassifyf
                   _floorf
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _strcpy
                   _tolower
                     _isupper
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _isdigit
                 _isupper
                 _stoa
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _strlen
                 _strncmp
                 _tolower
                   _isupper
                 _utoa
                   ___lodiv
                   ___lomod
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                 _xtoa
                   _isalpha
                   _isupper
                   _pad
                     _fputc
                       _putch
                         _ringBufS_put_dma
                     _fputs
                       _fputc
                         _putch
                           _ringBufS_put_dma
                     _strlen
                   _toupper
                     _islower
           _ringBufS_flush
             _memset
           _start_lcd
           _wait_lcd_done
             _wdtdelay
           _wait_lcd_set
       _get_vterm_ptr
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _wait_lcd_done
         _wdtdelay
   _clear_adc_scan
   _convert_adc_data
     _conv_raw_result
       ___fldiv
       ___flmul
       ___flsub
         ___fladd
       ___xxtofl
       _get_raw_result
       _nanf
     _lp_filter
       ___fladd
       ___flmul
       ___flsub
         ___fladd
   _eaDogM_WriteCommand
     _send_lcd_cmd_dma
       _printf
         _vfprintf
           _vfpfcnvrt
             _atoi
               _isdigit
               _isspace
             _ctoa
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _dtoa
               ___aodiv
               ___aomod
               _abs
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
               ___fltol
               ___fpclassifyf
               _floorf
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
                 _ringBufS_put_dma
             _isdigit
             _isupper
             _stoa
               _fputc
                 _putch
                   _ringBufS_put_dma
               _strlen
             _strncmp
             _tolower
               _isupper
             _utoa
               ___lodiv
               ___lomod
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
             _xtoa
               _isalpha
               _isupper
               _pad
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _fputs
                   _fputc
                     _putch
                       _ringBufS_put_dma
                 _strlen
               _toupper
                 _islower
       _ringBufS_flush
         _memset
       _start_lcd
       _wait_lcd_done
         _wdtdelay
       _wait_lcd_set
   _get_raw_result
   _get_vterm_ptr
   _init_display
     _ringBufS_init
       _memset
     _send_lcd_cmd
       _SPI1_Exchange8bit
       _wdtdelay
     _send_lcd_cmd_long
       _SPI1_Exchange8bit
       _wdtdelay
     _wdtdelay
   _mode_lamp_dim
     _PWM8_LoadDutyValue
   _set_display_info
     _TimerDone
   _set_vterm
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           _isdigit
           _isspace
         _ctoa
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _dtoa
           ___aodiv
           ___aomod
           _abs
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
           ___flmul
           ___flneg
           ___flsub
             ___fladd
           ___fltol
           ___fpclassifyf
           _floorf
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
             _ringBufS_put_dma
         _isdigit
         _isupper
         _stoa
           _fputc
             _putch
               _ringBufS_put_dma
           _strlen
         _strncmp
         _tolower
           _isupper
         _utoa
           ___lodiv
           ___lomod
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
         _xtoa
           _isalpha
           _isupper
           _pad
             _fputc
               _putch
                 _ringBufS_put_dma
             _fputs
               _fputc
                 _putch
                   _ringBufS_put_dma
             _strlen
           _toupper
             _islower
   _srand
   _start_adc_scan
     _ADCC_DischargeSampleCapacitor
     _ADCC_SetADIInterruptHandler
     _ADCC_SetADTIInterruptHandler
     _ADCC_StartConversion
   _update_lcd
     _eaDogM_WriteStringAtPos
       _eaDogM_WriteString
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _strlen
         _wait_lcd_set
       _send_lcd_cmd_dma
         _printf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 _isdigit
                 _isspace
               _ctoa
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                 ___fldiv
                 ___fleq
                 ___flge
                 ___flmul
                 ___flneg
                 ___flsub
                   ___fladd
                 ___fltol
                 ___fpclassifyf
                 _floorf
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
                   _ringBufS_put_dma
               _isdigit
               _isupper
               _stoa
                 _fputc
                   _putch
                     _ringBufS_put_dma
                 _strlen
               _strncmp
               _tolower
                 _isupper
               _utoa
                 ___lodiv
                 ___lomod
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
               _xtoa
                 _isalpha
                 _isupper
                 _pad
                   _fputc
                     _putch
                       _ringBufS_put_dma
                   _fputs
                     _fputc
                       _putch
                         _ringBufS_put_dma
                   _strlen
                 _toupper
                   _islower
         _ringBufS_flush
           _memset
         _start_lcd
         _wait_lcd_done
           _wdtdelay
         _wait_lcd_set
     _wait_lcd_done
       _wdtdelay

 _TMR5_ISR (ROOT)
   _TMR5_CallBack
     Absolute function(Fake) *
     _TMR5_DefaultInterruptHandler *
   _TMR5_WriteTimer

 _INT0_ISR (ROOT)
   _INT0_CallBack
     Absolute function(Fake) *
     _INT0_DefaultInterruptHandler *

 _INT1_ISR (ROOT)
   _INT1_CallBack
     Absolute function(Fake) *
     _INT1_DefaultInterruptHandler *

 _Default_ISR (ROOT)

 _ADCC_ISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_handler *

 _ADCC_ThresholdISR (ROOT)
   Absolute function(Fake) *
   _ADCC_DefaultInterruptHandler *
   _adc_int_t_handler *
     _ADCC_DischargeSampleCapacitor
     _ADCC_StartConversion

 _UART1_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Transmit_ISR *

 _UART1_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART1_Receive_ISR *

 _UART2_tx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Transmit_ISR *

 _UART2_rx_vect_isr (ROOT)
   Absolute function(Fake) *
   _UART2_Receive_ISR *

 _TMR6_ISR (ROOT)
   _TMR6_CallBack
     Absolute function(Fake) *
     _TMR6_DefaultInterruptHandler *

 _DMA1_DMASCNT_ISR (ROOT)

 _DMA1_DMADCNT_ISR (ROOT)

 _DMA1_DMAA_ISR (ROOT)

 _DMA1_DMAOR_ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM            1FFF      0       0      69        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK31          100      0       0      67        0.0%
BANK31             100      0       0      68        0.0%
BITBANK30          100      0       0      65        0.0%
BANK30             100      0       0      66        0.0%
BITBANK29          100      0       0      63        0.0%
BANK29             100      0       0      64        0.0%
BITBANK28          100      0       0      61        0.0%
BANK28             100      0       0      62        0.0%
BITBANK27          100      0       0      59        0.0%
BANK27             100      0       0      60        0.0%
BITBANK26          100      0       0      56        0.0%
BANK26             100      0       0      57        0.0%
BITBANK25          100      0       0      54        0.0%
BANK25             100      0       0      55        0.0%
BITBANK24          100      0       0      52        0.0%
BANK24             100      0       0      53        0.0%
BITBANK23          100      0       0      50        0.0%
BANK23             100      0       0      51        0.0%
BITBANK22          100      0       0      48        0.0%
BANK22             100      0       0      49        0.0%
BITBANK21          100      0       0      46        0.0%
BANK21             100      0       0      47        0.0%
BITBANK20          100      0       0      44        0.0%
BANK20             100      0       0      45        0.0%
BITBANK19          100      0       0      42        0.0%
BANK19             100      0       0      43        0.0%
BITBANK18          100      0       0      40        0.0%
BANK18             100      0       0      41        0.0%
BITBANK17          100      0       0      38        0.0%
BANK17             100      0       0      39        0.0%
BITBANK16          100      0       0      36        0.0%
BANK16             100      0       0      37        0.0%
BITBANK15          100      0       0      34        0.0%
BANK15             100      0       0      35        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0      FF      17       99.6%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0      FF      15       99.6%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      DA      13       85.2%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C6      11       77.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FC       9       98.4%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      FB       7       98.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      8B       5       86.9%
BITCOMRAM           3F      0       0       0        0.0%
COMRAM              3F      6      3A       1       92.1%
BITSFR_8             0      0       0     200        0.0%
SFR_8                0      0       0     200        0.0%
BITSFR_7             0      0       0     200        0.0%
SFR_7                0      0       0     200        0.0%
BITSFR_6             0      0       0     200        0.0%
SFR_6                0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     65A      58        0.0%
DATA                 0      0     65A       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Nov 11 04:12:50 2019

                     _SPI1_Exchange8bit 8BF4                __end_of_set_display_info 8C4E  
                                     _C 0200                                       _D 0400  
                                     _P 0094                                       _R 00A3  
                                     _T FE51                                       _V 0100  
      __end_of_TMR5_SetInterruptHandler 89E0                             __CFG_CP$OFF 000000  
               __size_of_ringBufS_flush 0092                  __end_of_FVR_Initialize 8E5E  
                           __CFG_LVP$ON 000000                                     l171 8D82  
                                   l701 8848                                     l581 881C  
                                   l835 8C02                                     _GIE 01FE97  
                                   _abs 8396                                     _pad 6F9C  
               __size_of_PMD_Initialize 0014                         _TMR2_Initialize 8D2E  
                                   prod 003FF3                                     tosl 003FFD  
                                   wreg 003FE8                           _INT0_CallBack 8B8E  
                    _UART1_Transmit_ISR 87F6                           __CFG_BBEN$OFF 000000  
                         _INT1_CallBack 8BB0                            __CFG_ZCD$OFF 000000  
                                  l1028 85B2                                    l1250 427E  
                                  l1242 40D2                                    l1252 4284  
                                  l2305 6838                                    l1329 81BA  
                                  l1602 8C4A                                    l2271 68C6  
                                  l1545 8610                                    l1465 776E  
                                  l1562 71BA                                    l1554 5E96  
                                  l2267 7606                                    l1484 867C  
                                  l1469 7B22                                    l2278 699A  
                                  l1910 4BEA                                    l1558 5FF2  
                                  l1654 3C08                                    l1751 6FF8  
                                  l1807 123A                                    l2545 31CC  
                                  l2626 2A10                                    l1771 3CEC  
                                  l1851 0B1A                                    l1836 066A  
                                  l2557 305C                                    l1925 44C4  
                                  l2590 3746                    _ADCC_StartConversion 8D9C  
                                  l2728 597A                                    l1696 63B0  
                                  l2666 61F0                                    l6107 78EA  
                                  l7003 6998                                    l7011 8326  
                                  l6109 790C                                    l6221 2DD8  
                                  l6141 2AB0                                    l7021 6722  
                                  l2853 7D40                                    l2838 5DDA  
                                  l6223 2DEA                                    l6231 2E24  
                                  l6207 2D46                                    l6135 2A70  
                                  l1975 21E6                                    l2792 6E7A  
                                  l2697 83D6                                    l6321 3128  
                                  l6305 30C4                                    l6217 2DB8  
                                  l6153 2B2E                                    l6145 2AC6  
                                  l6401 653E                                    l2689 6546  
                                  l1889 52BC                                    l2866 7CBC  
                                  l6331 3154                                    l6251 2ED2  
                                  l6227 2DF4                                    l6171 2BE6  
                                  l6147 2AF6                                    l7109 82F8  
                                  l6309 30CA                                    l6165 2BA0  
                                  l7045 67D0                                    l7037 67A4  
                                  l7061 659E                                    l8031 8B62  
                                  l6503 558C                                    l6343 31AC  
                                  l6335 316C                                    l6271 2FE6  
                                  l6255 2EDC                                    l6159 2B60  
                                  l7047 67E6                                    l7039 67C0  
                                  l8111 8686                                    l6601 3360  
                                  l6337 317C                                    l6281 3040  
                                  l6273 300C                                    l6249 2EC0  
                                  l6177 2C08                                    l6169 2BB6  
                                  l6433 4958                                    l7073 6670  
                                  l6515 565E                                    l6603 3390  
                                  l6291 3090                                    l6259 2F0E  
                                  l6419 7D30                                    l6453 4B0E  
                                  l7093 6BD8                                    l7085 6B2C  
                                  l9007 79AC                                    l6551 5B16  
                                  l6543 5A6A                                    l6535 59E2  
                                  l6711 372A                                    l6703 36F2  
                                  l6623 3422                                    l6615 3408  
                                  l6295 309C                                    l6391 64E4  
                                  l6447 4A76                                    l6377 83C6  
                                  l6641 34E8                                    l6633 34B2  
                                  l6609 33CE                                    l6289 307E  
                                  l6457 4B7C                                    l6449 4AC6  
                                  l8161 60D0                                    l6491 54F2  
                                  l6643 34FA                                    l6651 3552  
                                  l6571 322C                                    l6395 64E8  
                                  l6475 7CAC                                    l8171 613A  
                                  l8163 60EE                                    l6901 69FE  
                                  l6709 371A                                    l6581 3282  
                                  l6821 2820                                    l6733 2286  
                                  l8181 616E                                    l8173 6150  
                                  l8157 60AC                                    l8149 6040  
                                  l6663 359C                                    l6591 330A  
                                  l6583 32B2                                    l6815 2804  
                                  l6751 2354                                    l6735 228C  
                                  l6727 2246                                    l8191 61D0  
                                  l8159 60BA                                    l6497 5546  
                                  l6681 3612                                    l6657 3580  
                                  l6649 354E                                    l6577 326C  
                                  l6825 2846                                    l6753 235A  
                                  l6745 2314                                    l6737 22BC  
                                  l8169 611C                                    l9243 6D90  
                                  l6923 6AD8                                    l6915 6AA4  
                                  l6691 3686                                    l6667 35C2  
                                  l6835 2890                                    l6763 23AC  
                                  l6755 238A                                    l9411 022C  
                                  l7715 5C4C                                    l9325 3D26  
                                  l9317 3CDC                                    l6677 360C  
                                  l6597 334A                                    l6853 2950  
                                  l9501 06B8                                    l7717 5CB8  
                                  l8701 3A46                                    l7663 572A  
                                  l9255 7A10                                    l9271 7002  
                                  l6943 6ECE                                    l6935 6EA4  
                                  l6839 2896                                    l9511 077A  
                                  l9407 01EA                                    l9415 0258  
                                  l8711 3BD6                                    l8561 846E  
                                  l7681 5804                                    l7673 57C0  
                                  l7665 574C                                    l9265 6FC8  
                                  l9329 3D44                                    l6961 6F82  
                                  l6953 6F4E                                    l6697 36C2  
                                  l6849 290A                                    l9521 0926  
                                  l9505 06F0                                    l9441 0396  
                                  l9425 02FC                                    l9433 032A  
                                  l9409 0216                                    l8705 3B0E  
                                  l7683 5828                                    l9259 7A4E  
                                  l9275 703E                                    l9291 7BD8  
                                  l9363 4044                                    l9339 3F56  
                                  l6939 6EB6                                    l6867 29BE  
                                  l6859 297A                                    l9451 04D2  
                                  l8565 8498                                    l7685 5866  
                                  l9269 6FF0                                    l9293 7C04  
                                  l6973 75D0                                    l6869 29D8  
                                  l9285 73FA                                    l9621 0FD6  
                                  l9445 0406                                    l8639 8626  
                                  l7679 57EC                                    l9279 7088  
                                  l9359 4008                                    l6895 69DE  
                                  l6991 6914                                    l9623 0FF0  
                                  l9607 0F3A                                    l9543 0B12  
                                  l9535 0A48                                    l9463 0554  
                                  l9447 0470                                    l9703 535E  
                                  l8719 3BE8                                    l8743 625E  
                                  l8735 6232                                    l7689 58CE  
                                  l6889 69C8                                    l6977 7604  
                                  l6969 758E                                    l6985 6884  
                                  l9633 1092                                    l9545 0B34  
                                  l9377 00AC                                    l9713 5414  
                                  l8819 8844                                    l7699 596A  
                                  l6995 6962                                    l9643 10E2  
                                  l9571 0CBA                                    l9483 05F6  
                                  l9475 0594                                    l9467 057C  
                                  l9731 4BDA                                    l8747 6276  
                                  l8845 859A                                    l9485 0602  
                                  l9469 058E                                    l9389 00F0  
                                  l9397 0146                                    l9717 5450  
                                  l9709 53E8                                    l8693 3A14  
                                  l9559 0C32                                    l9831 47F0  
                                  l9807 4680                                    l9815 4706  
                                  l8679 3780                                    l8943 7D50  
                                  l9913 17E0                                    l9905 16F4  
                                  l8689 38EC                                    l9659 119A  
                                  l9579 0D24                                    l9587 0D90  
                                  l9595 0EA2                                    l9739 4C36  
                                  l9771 44B4                                    l8797 8818  
                                  l9749 4E2C                                    l9941 1A7A  
                                  l9917 1834                                    l9853 1326  
                                  l9695 52F2                                    l9679 523E  
                                  l9791 458A                                    l9783 452A  
                                  l9855 1360                                    STR_1 FF66  
                                  STR_2 FF97                                    l9777 44EE  
                                  l9961 1BDA                                    l9937 1A46  
                                  l9929 198E                                    l9857 1376  
                                  STR_3 FFD2                                    STR_4 FF55  
                                  l9699 532E                                    l9971 1C88  
                                  l9875 14A8                                    STR_5 FF77  
                                  STR_6 FF97                                    l9981 1DAA  
                                  l9877 14E2                                    STR_7 FFD2  
                                  STR_8 FF44                                    l8999 799A  
                                  l9991 1E60                                    l9895 165C  
                                  l9879 14F8                                    STR_9 FFA6  
                                  _LATA 003FBA                                    _LATB 003FBB  
                                  _LATC 003FBC                                    _LATD 003FBD  
                                  _LATE 003FBE                                    _LATF 003FBF  
                                  _T2PR 003FAB                                    u5020 3138  
                                  u5120 83AA                                    u5130 6468  
                                  u5300 4A1C                                    u5220 7CEE  
                                  u5060 875C                                    u6030 2888  
                                  u5230 7CF0                                    u5070 875E  
                                  u5135 645E                                    u5400 87BC  
                                  u5320 4AF4                                    u5305 4A12  
                                  u5410 87BE                                    u6210 6EFA  
                                  u5250 48F0                                    _T6PR 003F93  
                                  u5500 5696                                    u6140 6A2A  
                                  u5180 6536                                    u5260 493C  
                                  u4620 878C                                    _PMD0 0039C0  
                                  u5325 4AEA                                    _PMD1 0039C1  
                                  u5430 54EC                                    u6230 6F6E  
                                  u6070 28E4                                    u5190 6538  
                                  u4630 878E                                    u5350 84E6  
                                  _PMD2 0039C2                                    u5175 6518  
                                  u5255 48E6                                    _PMD3 0039C3  
                                  u5520 56E8                                    u6160 6AC4  
                                  u6080 291E                                    u5360 84E8  
                                  _PMD4 0039C4                                    _PMD5 0039C5  
                                  u5450 5542                                    u5610 5B4E  
                                  u6090 2964                                    u6330 8322  
                                  u4730 2D6C                                    u6410 67EE  
                                  u5370 7C6A                                    _PMD6 0039C6  
                                  u6075 28D4                                    _PMD7 0039C7  
                                  u4740 2D8C                                    u6340 6702  
                                  u6500 6B26                                    u5380 7C6C  
                                  u5461 554C                                    u4741 2D86  
                                  u5285 4976                                    u4590 793A  
                                  u5470 5586                                    u5630 5BA0  
                                  u5550 59DC                                    u6270 7600  
                                  u6430 6818                                    u6350 6716  
                                  u5286 497C                                    u6510 6B58  
                                  u5287 498A                                    u5480 55B8  
                                  u6360 6750                                    u6345 66F8  
                                  u6441 655E                                    u5570 5A32  
                                  u5810 3604                                    u4930 30A2  
                                  u4850 2F04                                    u6450 6598  
                                  u6530 6C10                                    u9020 6D84  
                                  u5580 5A64                                    u4780 2E1C  
                                  u9100 7474                                    u6460 65CA  
                                  u8205 8566                                    u4597 792C  
                                  u6365 6746                                    u6550 82D4  
                                  u5590 5A96                                    u4950 30BC  
                                  u4790 2E3C                                    u4758 2D8E  
                                  u4855 2EF4                                    u8320 7F76  
                                  u6560 82F4                                    u9040 6E00  
                                  u6480 66A8                                    u4785 2E0C  
                                  u9210 3D12                                    u5850 3660  
                                  u5770 357A                                    u4890 302E  
                                  u9107 7466                                    u9220 3F6A  
                                  u9140 3C3E                                    u5860 369A  
                                  u9150 3C40                                    u5870 36D6  
                                  u4990 3118                                    u7710 5CE6  
                                  u9231 3F9A                                    u5855 3650  
                                  u7640 57BC                                    u9240 3FB0  
                                  u5960 239A                                    u9400 02A8  
                                  u9320 00DA                                    u8280 6164  
                                  u8345 7FAA                                    u9241 3FAE  
                                  u8346 7FAC                                    u8338 7F78  
                                  u9250 3FC4                                    u9170 3CB0  
                                  u8514 3A2E                                    u8530 6210  
                                  u4995 3108                                    u8515 3A28  
                                  u7660 5914                                    u9260 3FC8  
                                  u9500 05C6                                    u7717 5CD8  
                                  u7670 5916                                    u9190 3CC2  
                                  u9350 0194                                    u7750 5D80  
                                  u8454 376A                                    u5975 252E  
                                  u8455 3764                                    u9280 3FDE  
                                  u9440 050E                                    u9360 0196  
                                  u7760 5DAE                                    u5985 25F6  
                                  u9610 0A18                                    u8474 379A  
                                  u5995 27BE                                    u7755 5D7A  
                                  u8475 3794                                    u9540 0648  
                                  u7757 5D6C                                    u9710 0EE4  
                                  u9470 0562                                    u9390 02A6  
                                  u8494 37BC                                    u7767 5DA0  
                                  u8495 37B6                                    u9800 1170  
                                  _PLLR 01CEE0                                    u9910 5476  
                                  u9770 10B8                                    u9930 4BC0  
                                  u9790 116E                                    u9870 5354  
                                  u9880 539A                                    u9961 4E6E  
                                  u9970 4E84                                    u9971 4E82  
                                  u9980 4E98                                    u9990 4E9C  
                                  u9887 538C                                    _WPUA 003A41  
                                  _WPUB 003A51                                    _WPUC 003A61  
                                  _WPUD 003A71                                    _WPUE 003A81  
                                  _WPUF 003A91                        __end_of_ADCC_ISR 8664  
                         __CFG_FCMEN$ON 000000                                    _dbuf 02AC  
                                  _atoi 5710                                    _ctoa 7BBA  
                                  _main 408E                                    _dtoa 3C0E  
                                  _nanf 8032                                    _seed 009B  
                                  _prec 0020                                    _nout 001C  
                                  fsr0h 003FEA                                    fsr1h 003FE2  
                                  indf0 003FEF                                    fsr2h 003FDA  
                                  fsr0l 003FE9                                    indf1 003FE7  
                                  indf2 003FDF                                    fsr1l 003FE1  
                                  fsr2l 003FD9                                    _stoa 51D2  
                                  btemp 0035                                    _utoa 4BA6  
                                  _xtoa 4480                  __end_of_check_adc_scan 8E56  
                         ___fpclassifyf 63BA                                    prodh 003FF4  
                                  prodl 003FF3                                    start 00AE  
                       _timer5ReloadVal 0026               __end_of_SPI1_Exchange8bit 8C12  
                         __CFG_CSWEN$ON 000000                       _UART1_rx_vect_isr 8AD0  
                          ___param_bank 000000                      ?_UART1_rx_vect_isr 0055  
                      __end_of_INT0_ISR 8DEA                        __end_of_INT1_ISR 8DFA  
        __size_of_OSCILLATOR_Initialize 0016                __end_of_ringBufS_put_dma 7776  
         __end_of_OSCILLATOR_Initialize 8D88                                   l10005 1FDC  
                                 l10025 216E                                   l10019 2114  
                                 l10035 2192                                   l10029 2172  
                                 l10141 7876                                   l10063 503C  
                                 l10303 5F8E                                   l10057 4F7E  
                                 l10091 77E0                                   l10077 5154  
                                 l10069 50A6                                   l10421 42B6  
                                 l10175 70D2                                   l10089 77A0  
                                 l10441 430E                                   l10433 42EA  
                                 l10291 5E66                                   l10451 443A  
                                 l10419 4288                                   l10371 40B4  
                                 l10373 40BC                                   l10463 446E  
                                 l10377 40DA                                   l10379 40EC  
                                 PRLOCK 0039EF                         __end_of___aodiv 5710  
                                 _ADCAP 003EF5                                   _ADACT 003EFE  
                       __end_of___fladd 31D6                                   _ADCLK 003EFF  
                       __end_of___aomod 5BC4                                   _ADPCH 003EF1  
                       __end_of___fldiv 3750                                   _ADREF 003EFD  
                       __end_of___awdiv 6AF2                         __end_of___flneg 8350  
                                 STR_10 FFA6                                   STR_11 FF32  
                                 STR_20 FFBF                                   STR_12 FFFC  
                                 STR_13 FFF9                                   STR_21 FF88  
                                 STR_22 FF88                                   STR_23 FF88  
                                 STR_15 FFB3                                   STR_16 FFC9  
                                 STR_24 FEE1                                   STR_33 FF0B  
                                 STR_17 FF0C                           __CFG_WDTE$OFF 000000  
                                 STR_18 FF0C                                   STR_42 FFEA  
                                 STR_34 FFD7                                   STR_26 FF1F  
                                 STR_51 FFED                                   STR_35 FFDF  
                                 STR_19 FFBF                                   STR_27 FEF9  
                                 STR_44 FFEA                         __end_of___awmod 6F9C  
                                 STR_53 FFED                                   STR_61 FFF6  
                                 STR_46 FFF0                                   STR_38 FFDB  
                                 STR_63 FFF6                                   STR_39 FFE3  
                                 STR_48 FFF0                                   STR_56 FFF3  
                                 _ADRPT 003EEC                                   STR_65 FFE7  
                                 STR_58 FFF3                                   STR_67 FFE7  
                       __end_of___flmul 2A1A                         __end_of___flsub 8396  
                       __end_of___fltol 6842                                   u10010 449A  
                                 u10110 4702                                   u10120 4722  
                                 u10040 4582                                   u10050 45D6  
                                 u10210 13BE                                   u10131 4752  
                                 u10115 46E4                                   u10140 4768  
                                 u10060 45D8                                   u10220 13C0  
                                 u10141 4766                                   u10150 477C  
                                 u10230 13E6                                   u10160 4780  
                                 u10080 4636                                   u10090 4638  
                                 u10330 1748                                   u10260 1540  
                                 u10350 18BC                                   u10270 1542  
                                 u10280 1568                                   u10450 1EB4  
                                 u10530 51C8                         __end_of___lodiv 66D0  
                                 u10380 1B34                                   u10470 2064  
                                 u10390 1B36                                   u10560 7856  
                                 u10650 5FDE                                   _U1P1H 003DED  
                                 u10660 5FE0                                   _U1P2H 003DEF  
                                 _U1P1L 003DEC                                   _U1P3H 003DF1  
                                 _T2CON 003FAC                                   _U1P2L 003DEE  
                                 _U1P3L 003DF0                                   _U2P1L 003DD4  
                                 _U2P2L 003DD6                                   _U2P3L 003DD8  
                                 _T5CLK 003F9D                         __end_of___lomod 6C32  
                                 _T2HLT 003FAD                                   _T5CON 003F9A  
                                 _T6CON 003F94                          __CFG_DEBUG$OFF 000000  
                                 _T6HLT 003F95              _ADCC_ADTI_InterruptHandler 0004  
                                 _T2TMR 003FAA                                   _U1UIR 003DF8  
                                 _T2RST 003FAF                                   _U1RXB 003DE8  
                                 _U2UIR 003DE0                                   _U1TXB 003DEA  
                                 _U2RXB 003DD0                                   _U2TXB 003DD2  
                                 _T6TMR 003F92                                   _T6RST 003F97  
                   ??_UART1_rx_vect_isr 00E6                                   _ISRPR 0039F1  
                                 _OSCEN 0039DD                                   _TMR5H 003F99  
                                 _TMR5L 003F98                                   _TRISA 003FC2  
                                 _TRISB 003FC3                                   _TRISC 003FC4  
                                 _TRISD 003FC5                                   _TRISE 003FC6  
                                 _TRISF 003FC7                             _Default_ISR 8E70  
               __size_of_clear_adc_scan 0006       __size_of_TMR6_SetInterruptHandler 0028  
                     _UART1_tx_vect_isr 8AA8                           __CFG_WRTB$OFF 000000  
                         __CFG_WRTC$OFF 000000                           __CFG_WRTD$OFF 000000  
                      __end_of_TMR5_ISR 81B0                            _DMA1CON0bits 003BFC  
                      __end_of_TMR6_ISR 8D16                            _DMA1CON1bits 003BFD  
                                 _flags 0022                                   _fputc 6D60  
            __size_of_send_lcd_cmd_long 0028                         __end_of_isalpha 84F2  
                                 _fputs 7A00                         __end_of_isdigit 87C8  
                    __CFG_MCLRE$EXTMCLR 000000                      ?_UART1_tx_vect_isr 0055  
                                 _srand 86D0                                   _width 001E  
                                 _putch 8CE0                         __end_of_islower 8768  
                       __end_of_isspace 8308                _INT1_SetInterruptHandler 89E0  
                       __end_of_isupper 8798                                   pclath 003FFA  
                                 tablat 003FF5                                   ltemp0 0035  
                                 ltemp1 0039                                   ltemp2 003D  
              __size_of_DMA1_Initialize 006A                                   plusw1 003FE3  
                                 plusw2 003FDB                                   ttemp0 0035  
                                 ttemp1 0038                                   ttemp2 003B  
                                 ttemp3 003E                                   ttemp5 0036  
                                 ttemp6 0039                                   ttemp7 003D  
                                 status 003FD8     __end_of_UART1_SetRxInterruptHandler 8990  
           _UART1_SetRxInterruptHandler 8968                                   wtemp0 0035  
                                 wtemp1 0037                                   wtemp2 0039  
                                 wtemp3 003B                                   wtemp4 003D  
                                 wtemp5 003F                                   wtemp8 0036  
                       __end_of_sprintf 72C8                         __end_of_tolower 7D4A  
                       __end_of_strncmp 5DE4                         __end_of_toupper 7CC6  
                   ??_UART1_tx_vect_isr 00E6               __size_of_DMA1_DMADCNT_ISR 000A  
             __end_of_UART1_rx_vect_isr 8AF6                __size_of_SPI1_Initialize 0016  
                       _TMR5_Initialize 8422                   __end_of_ringBufS_init 88F0  
                       __initialization 7486                       _UART2_rx_vect_isr 8B20  
                          __end_of_atoi 5984                            __end_of_ctoa 7C42  
                          __end_of_main 4480                            __end_of_dtoa 408E  
                          __end_of_nanf 8094                            __end_of_stoa 5490  
                          __end_of_utoa 4EE6                            __end_of_xtoa 483A  
                        __CFG_SAFEN$OFF 000000                      ?_UART2_rx_vect_isr 0055  
               __end_of_TMR2_Initialize 8D46                __size_of_DMA2_Initialize 005A  
              _TMR5_SetInterruptHandler 89B8                           __activetblptr 000003  
             __size_of_DMA1_DMASCNT_ISR 000E    __size_of_UART1_SetTxInterruptHandler 0028  
                   ??_UART2_rx_vect_isr 00E6               __end_of_UART1_tx_vect_isr 8ACE  
                                INTCON0 003FD2    __size_of_UART2_SetRxInterruptHandler 0028  
                        __CFG_MVECEN$ON 000000                         _TMR6_Initialize 884E  
                       _PWM8_Initialize 8D5C                        _UART1_Initialize 7FCE  
                     _UART2_tx_vect_isr 8AF8                      _UART2_Transmit_ISR 8822  
                                _ADACCU 003EEA                                  _ADACQH 003EF4  
                                _ADACQL 003EF3                                  _ADCON0 003EF8  
                                _ADCON1 003EF9                                  _ADCON2 003EFA  
                                _ADCON3 003EFB                          _start_adc_scan 7E2E  
                                _ADLTHH 003EDF                                  _ADLTHL 003EDE  
                                _ADPREH 003EF7                                  _ADPREL 003EF6  
                                _DMA1PR 0039F3                                  _DMA2PR 0039F4  
                                _ADSTAT 003EFC                                  _ADUTHH 003EE1  
                                _ADUTHL 003EE0                      _PWM8_LoadDutyValue 8536  
                                _ANSELA 003A40                                  _ANSELB 003A50  
                                _ANSELC 003A60                                  _ANSELD 003A70  
                                _ANSELE 003A80                                  _ANSELF 003A90  
                    ?_UART2_tx_vect_isr 0055                                  _U1CON0 003DF2  
                                _U1CON1 003DF3                                  _U1CON2 003DF4  
                                _U1BRGH 003DF6                                  _U1FIFO 003DF7  
                                _U2CON0 003DDA                                  _U2CON1 003DDB  
                                _U1BRGL 003DF5                                  _U2CON2 003DDC  
                                _U2BRGH 003DDE                                  _U2FIFO 003DDF  
                                _U2BRGL 003DDD                                  _T5GATE 003F9C  
                                _T5GCON 003F9B                                  _MAINPR 0039F2  
                                _RC3PPS 003A13                                  _RD1PPS 003A19  
                                _RB6PPS 003A0E                                  i1l1045 81A2  
                                _RC5PPS 003A15                                  _ODCONA 003A42  
                                _ODCONB 003A52                                  _ODCONC 003A62  
                                _RC6PPS 003A16                                  _ODCOND 003A72  
                                _ODCONE 003A82                                  _ODCONF 003A92  
                        __CFG_WDTCCS$SC 000000                                  _FVRCON 003EC1  
                      _mode_lamp_bright 8DCC                                  u404_48 8B9C  
                                _SCANPR 0039F7                                  u406_48 8BBE  
                                u428_40 8C56                                  _IVTADH 00389E  
                                _IVTADL 00389D                                  u428_46 8C58  
                                _IVTADU 00389F            __size_of_eaDogM_WriteCommand 000E  
                                _OSCFRQ 0039DF                                  u838_20 8A88  
                                u838_26 8A8A                                  u863_48 8BE0  
                                u880_40 79EC                                  u880_46 79EE  
                                u866_28 8B7A                                  u878_44 79CC  
                                u878_45 79C6                        __end_of___xxtofl 61FA  
 __end_of_ADCC_DischargeSampleCapacitor 8E3E  __size_of_ADCC_DischargeSampleCapacitor 0008  
         _ADCC_DischargeSampleCapacitor 8E36                __end_of_send_lcd_cmd_dma 82B6  
                   ??_UART2_tx_vect_isr 00E6               __end_of_UART2_rx_vect_isr 8B46  
            __size_of_SPI1_Exchange8bit 001E                  __size_of_DMA1_DMAA_ISR 000A  
                        __CFG_XINST$OFF 000000                       _CLKREF_Initialize 8E0A  
                      _UART2_Initialize 80F6                                  _WaitMs 8664  
                       _conv_raw_result 3750                            _CCPTMRS1bits 003F5F  
  __size_of_ADCC_SetADIInterruptHandler 0028                                  ___flge 6842  
                                ___fleq 754C                       _ADCC_ThresholdISR 7F00  
                        __CFG_STVREN$ON 000000                          _ringBufS_flush 7A98  
                                _efgtoa 0000                                  _floorf 483A  
                    ?_ADCC_ThresholdISR 0055                                  _memset 4EE6  
                  __size_of_help_button 0038                                  clear_0 74D2  
                                clear_1 74E6                                  clear_2 74F8  
                                clear_3 7504                                  clear_4 7510  
                                clear_5 751C                                  clear_6 7528  
                                clear_7 7534                                  _printf 8094  
                    _eaDogM_WriteString 781E                                  _strcpy 73B2  
                             ?_ADCC_ISR 0055                                  _strlen 78C4  
                    __size_of_TimerDone 0024                         _ADCC_Initialize 7E96  
                        _PMD_Initialize 8D88               __end_of_UART2_tx_vect_isr 8B1E  
                                lltemp0 0035                                  lltemp1 003D  
                                lltemp2 0045                                  lltemp3 004D  
                   ??_ADCC_ThresholdISR 0056                  __end_of_start_adc_scan 7E96  
                          __mediumconst FE50                                  preinc2 003FDC  
                                tblptrh 003FF7                                  tblptrl 003FF6  
                                tblptru 003FF8                        __end_of_wdtdelay 820A  
                      __end_of_vfprintf 781E                              _StartTimer 85B8  
         __size_of_INTERRUPT_Initialize 0066                 __end_of_TMR5_Initialize 8468  
                     _SYSTEM_Initialize 83DC                              __accesstop 0060  
               __end_of__initialization 7546                               ?_INT0_ISR 0055  
                             ?_INT1_ISR 0055                    __end_of_display_help 8E4E  
                  __end_of_display_info 8E46               __end_of_CLKREF_Initialize 8E14  
                         ___rparam_used 000000              __size_of_UART1_rx_vect_isr 0026  
                       _TMR5_WriteTimer 8578                   _set_temp_display_help 8DAE  
             __end_of_ADCC_ThresholdISR 7F68                  __end_of_ringBufS_flush 7B2A  
                        __pcstackCOMRAM 0055                              ___inthi_sp 0F56  
                            ___intlo_sp 17AB                            __pidataBANK0 84F2  
                          __pidataBANK1 7610                               ?_TMR5_ISR 0055  
                             ?_TMR6_ISR 0055                          ivt0x8_undefint 00AC  
                         __end_of_fputc 6E84                           __end_of_fputs 7A98  
                         __end_of_srand 8704                   __end_of_TMR5_CallBack 8B8E  
                         __end_of_putch 8CFA                 __end_of_PWM8_Initialize 8D72  
               __end_of_TMR6_Initialize 8878                       _adc_int_t_handler 7966  
                __end_of_PMD_Initialize 8D9C                              ??_ADCC_ISR 0055  
                 __end_of_TMR6_CallBack 8BF4             __size_of_EXT_INT_Initialize 0034  
            __size_of_UART1_tx_vect_isr 0026                           _DMA1_DMAA_ISR 8E20  
                        _clear_adc_scan 8E5E                  __size_of_mode_lamp_dim 0018  
              _UART2_RxInterruptHandler 0013               __end_of_SYSTEM_Initialize 8422  
                       __CFG_PR1WAY$OFF 000000                         __CFG_IVT1WAY$ON 000000  
                            __pbssBANK0 0060                              __pbssBANK1 01BB  
                            __pbssBANK2 0200                              __pbssBANK3 0300  
                            __pbssBANK4 0400                              __pbssBANK5 0500  
                            __pbssBANK6 0600                              _check_help 5DE4  
               __end_of_conv_raw_result 3C0E                   _INT0_InterruptHandler 0019  
                            ??_INT0_ISR 0055                              ??_INT1_ISR 0055  
                     __end_of_TimerDone 8B6A                        _DMA1_DMADCNT_ISR 8E14  
            __size_of_UART2_rx_vect_isr 0026                                 IVTBASEH 003FD6  
                               IVTBASEL 003FD5                                 IVTBASEU 003FD7  
                    __size_of_lp_filter 01C0                   __end_of_wait_lcd_done 8CC4  
                       __CFG_PPS1WAY$ON 000000        __end_of_TMR6_SetInterruptHandler 89B8  
               __end_of_ADCC_Initialize 7EFE                              ??_TMR5_ISR 00E7  
             __end_of_adc_int_t_handler 7A00                              ??_TMR6_ISR 00E6  
                               _ADFLTRH 003EE7                                 _ADFLTRL 003EE6  
                               _DMA1DSA 003BF0                                 _DMA2DSA 003BD0  
                               _DMA1DSZ 003BEE                                 _DMA2DSZ 003BCE  
                               _DMA1SSA 003BF9                                 _DMA2SSA 003BD9  
  __end_of_ADCC_SetADTIInterruptHandler 8A58   __size_of_ADCC_SetADTIInterruptHandler 0028  
          _ADCC_SetADTIInterruptHandler 8A30                                 _DMA1SSZ 003BF7  
                               _DMA2SSZ 003BD7                                 _ADSTPTH 003EE5  
                               _ADSTPTL 003EE4                       _UART1_Receive_ISR 8C6C  
                               _CLKRCLK 003CE6                                 _CLKRCON 003CE5  
                __end_of_clear_adc_scan 8E64                          ?_DMA1_DMAA_ISR 0055  
                      _DMA1_DMASCNT_ISR 8DFC                                 _U1ERRIE 003DFA  
                    __size_of_set_vterm 001C                                 _U1ERRIR 003DF9  
                               _U2ERRIE 003DE2                                 _U2ERRIR 003DE1  
                               _INT0PPS 003AC0                     __CFG_PWRTS$PWRT_OFF 000000  
                               _INT1PPS 003AC1                            ?_Default_ISR 0055  
            __size_of_UART2_tx_vect_isr 0026                                 _U1RXPPS 003AE5  
                               _U2RXPPS 003AE8                                 _OSCCON1 0039D9  
                               _OSCCON3 0039DB                                 _IVTLOCK 003FD4  
                    __size_of_vfpfcnvrt 0FAC                                 _SPI1CLK 003D1C  
                               _SPI1RXB 003D10                                 _SPI1TXB 003D11  
                               _OSCTUNE 0039DE                                 _PWM8DCH 003F61  
                               _PWM8DCL 003F60                                 _PWM8CON 003F62  
                               _SLRCONA 003A43                                 _SLRCONB 003A53  
                               _SLRCONC 003A63                                 _SLRCOND 003A73  
                               _SLRCONE 003A83                                 _SLRCONF 003A93  
                    __size_of_start_lcd 0006                 __end_of_TMR5_WriteTimer 85B8  
     __size_of_INT0_SetInterruptHandler 0028              __size_of_CLKREF_Initialize 000A  
               __size_of_DMA1_DMAOR_ISR 000A                                 __Hparam 0000  
            __size_of_ADCC_ThresholdISR 0068                           _mode_lamp_dim 8D16  
                               __Lparam 0000                __end_of_UART1_Initialize 8032  
                       __size_of_WaitMs 0036                         __size_of___flge 0162  
                       __size_of___fleq 00C4                                 ___aodiv 5490  
                               ___fladd 2A1A                                 ___aomod 5984  
                               ___fldiv 31D6                                 ___awdiv 69A4  
                               ___flneg 8308                                 ___awmod 6E84  
                               ___flmul 21F0                                 ___flsub 8350  
                               ___fltol 66D0                                 ___lodiv 6550  
                               ___lomod 6AF2               __end_of_UART1_Receive_ISR 8C8A  
                       __size_of_efgtoa 1244                         __size_of_floorf 036C  
                  __end_of_init_display 73B2                                 __pcinit 7486  
              __end_of_mode_lamp_bright 8DDA                         __size_of_memset 02EC  
              __size_of_adc_int_handler 001E                     _eaDogM_WriteCommand 8DBE  
                               __ramtop 2000             __size_of_UART1_Transmit_ISR 002C  
                               __ptext0 408E                                 __ptext1 7E2E  
                               __ptext2 8D9C                                 __ptext3 8E36  
                               __ptext4 86D0                                 __ptext5 72C8  
                               __ptext6 8878                                 __ptext7 88A0  
                               __ptext8 8BF4                                 __ptext9 88C8  
                     _UART2_Receive_ISR 8C8A                         __size_of_printf 0062  
                       __CFG_WRTAPP$OFF 000000                         __size_of_strcpy 00D4  
                       __size_of_strlen 00A2                   _OSCILLATOR_Initialize 8D72  
                          __size_of_abs 0046                                 us553999 56FA  
                               us564999 5BB2                            __size_of_pad 0114  
                               us654999 6C22                                 _isalpha 84AE  
                               _isdigit 8798                                 us913999 3C28  
                               us649999 66BA                                 _mode_sw 0028  
                               us982999 51E4                                 us994999 4C0C  
                     __end_of_lp_filter 63BA                                 _islower 8738  
                               _isspace 82B6                         __CFG_WRTSAF$OFF 000000  
                             _T5CONbits 003F9A                __end_of_UART2_Initialize 8154  
                               _isupper 8768              __size_of_SYSTEM_Initialize 0046  
                               _sprintf 71BE                                 _tolower 7CC6  
                 __size_of_display_help 0008                                 _utctime 008C  
                 __size_of_display_info 0008                                 _strncmp 5BC4  
                               _toupper 7C42                    end_of_initialization 7546  
             __size_of_convert_adc_data 007A     __end_of_UART1_SetTxInterruptHandler 8968  
           _UART1_SetTxInterruptHandler 8940     __end_of_UART2_SetRxInterruptHandler 8940  
           _UART2_SetRxInterruptHandler 8918                               i2u1070_48 8AE2  
                             i2u1072_48 8B0A                               i2u1074_48 8B32  
                             i2u1068_48 8ABA                       __end_of_set_vterm 8CE0  
                     __end_of_vfpfcnvrt 21F0                               _SPI1TCNTL 003D12  
                               postdec0 003FED                                 postdec1 003FE5  
                               postdec2 003FDD                                 postinc0 003FEE  
                               postinc1 003FE6                                 postinc2 003FDE  
            __size_of_adc_int_t_handler 009A                     __size_of_StartTimer 003C  
                     __end_of_start_lcd 8E70               __end_of_UART2_Receive_ISR 8CA8  
                        wdtdelay@dcount 0090                   __CFG_WDTCPS$WDTCPS_31 000000  
                       ??_DMA1_DMAA_ISR 00E7                   _INT1_InterruptHandler 0016  
                             _PORTBbits 003FCB                _TMR6_SetInterruptHandler 8990  
                          _display_help 8E46                   _TMR5_InterruptHandler 0098  
                          _display_info 8E3E    __size_of_UART2_SetTxInterruptHandler 0028  
                     __size_of_ADCC_ISR 0038     __end_of_ADCC_SetADIInterruptHandler 8A80  
           _ADCC_SetADIInterruptHandler 8A58                              _update_lcd 70B0  
                __size_of_ringBufS_init 0028                        __CFG_FEXTOSC$ECH 000000  
                       _DMA1_Initialize 7DC4                         _SPI1_Initialize 8D46  
                 __end_of_get_vterm_ptr 87F6                       __size_of_INT0_ISR 000E  
                     __size_of_INT1_ISR 000E                          __end_of_WaitMs 869A  
          __end_of_INTERRUPT_Initialize 7FCE                              _vterm_dump 6C32  
                        __end_of___flge 69A4                          __end_of___fleq 7610  
  __end_of_INT0_DefaultInterruptHandler 8E78   __size_of_INT0_DefaultInterruptHandler 0002  
          _INT0_DefaultInterruptHandler 8E76              __size_of_UART1_Receive_ISR 001E  
                       _DMA2_Initialize 820A                          __end_of_efgtoa 1244  
                     __size_of_TMR5_ISR 005C                       __size_of_TMR6_ISR 001A  
                   __size_of_check_help 0212                          __end_of_floorf 4BA6  
           __size_of_UART2_Transmit_ISR 002C                              floorf@F524 0084  
                        __end_of_memset 51D2                          __end_of_printf 80F6  
              __end_of_DMA1_DMADCNT_ISR 8E1E             __size_of_PWM8_LoadDutyValue 0042  
                 __end_of_INT0_CallBack 8BB0                          __end_of_strcpy 7486  
                        __end_of_strlen 7966                     start_initialization 7486  
  __end_of_TMR5_DefaultInterruptHandler 8AA8   __size_of_TMR5_DefaultInterruptHandler 0028  
          _TMR5_DefaultInterruptHandler 8A80         __size_of_PIN_MANAGER_Initialize 0090  
                           __end_of_abs 83DC                   __end_of_INT1_CallBack 8BD2  
             __size_of_set_display_info 001E                             __end_of_pad 70B0  
                  __size_of_Default_ISR 0006                    __end_of_send_lcd_cmd 88C8  
         __size_of_ADCC_StartConversion 0012                              ivt0x8_base 0008  
                         _uart1RxBuffer 0500                   __end_of___fpclassifyf 6550  
                         _uart2RxBuffer 0600                           _uart1TxBuffer 026C  
              __end_of_DMA1_DMASCNT_ISR 8E0A                           _uart2TxBuffer 0300  
                        _DMA1_DMAOR_ISR 8E2C                        __CFG_LPBOREN$OFF 000000  
                 __size_of_init_display 00EA             __size_of_eaDogM_WriteString 00A6  
                             _TimerDone 8B46                           _ringBufS_init 88C8  
                           __pdataBANK0 00A3                             __pdataBANK1 0100  
            __size_of_UART2_Receive_ISR 001E              __end_of_EXT_INT_Initialize 8738  
                   __end_of_help_button 862C         __end_of_eaDogM_WriteStringAtPos 86D0  
               __end_of_DMA1_Initialize 7E2E                             __pbssCOMRAM 0001  
      __end_of_INT0_SetInterruptHandler 8A30                           __pcstackBANK0 00E6  
              __size_of_TMR2_Initialize 0018                       __size_of___xxtofl 0204  
               __end_of_SPI1_Initialize 8D5C                _UART1_RxInterruptHandler 000D  
              _UART2_TxInterruptHandler 0010                               __end_of_T FEE1  
                      _convert_adc_data 7D4A               __size_of_ringBufS_put_dma 00AA  
                          _init_display 72C8                  __end_of_DMA1_DMAOR_ISR 8E36  
                __size_of_TMR5_CallBack 0024                   _TMR6_InterruptHandler 0001  
                __size_of_TMR6_CallBack 0022                 __end_of_DMA2_Initialize 8264  
                _PIN_MANAGER_Initialize 7B2A                    __end_of_wait_lcd_set 8E6A  
                         __pmediumconst FE50                               __ptext100 8D5C  
                             __ptext101 8D88                               __ptext110 7DC4  
                             __ptext102 7B2A                               __ptext111 8E0A  
                             __ptext103 8D72                               __ptext120 8B8E  
                             __ptext112 7E96                               __ptext104 7F68  
                             __ptext121 8E76                               __ptext113 8A30  
                             __ptext105 8E56                               __ptext130 7F00  
                             __ptext122 8DEC                               __ptext114 8A58  
                             __ptext106 8704                               __ptext131 8AA8  
                             __ptext123 8BB0                               __ptext115 8154  
                             __ptext107 89E0                               __ptext140 8BD2  
                             __ptext132 87F6                               __ptext124 8E78  
                             __ptext116 8578                               __ptext108 8A08  
                             __ptext141 8468                               __ptext133 8AD0  
                             __ptext125 8E70                               __ptext117 8B6A  
                             __ptext109 820A                               __ptext142 8DFC  
                             __ptext134 8C6C                               __ptext126 862C  
                             __ptext118 8A80                               __ptext143 8E14  
                             __ptext135 8AF8                               __ptext127 7966  
                             __ptext119 8DDC                               __ptext144 8E20  
                             __ptext136 8822                               __ptext128 8E7A  
                             __ptext145 8E2C                               __ptext137 8B20  
                             __ptext129 8C4E                               __ptext146 0000  
                             __ptext138 8C8A                               __ptext139 8CFC  
                    __end_of_StartTimer 85F4                       __size_of_wdtdelay 005A  
                     __size_of_vfprintf 00A8                                _ADCC_ISR 862C  
                __CFG_BBSIZE$BBSIZE_512 000000                                _DMA1CON0 003BFC  
                              _DMA1CON1 003BFD                                _DMA1AIRQ 003BFE  
                              _DMA2CON0 003BDC                                _DMA2CON1 003BDD  
                              _DMA2AIRQ 003BDE                                _DMA1SIRQ 003BFF  
                              _DMA2SIRQ 003BDF                 __size_of_get_raw_result 001E  
                __size_of_wait_lcd_done 001C                          __size_of_fputc 0124  
                              _T2CLKCON 003FAE                          __size_of_fputs 0098  
                             _lp_filter 61FA                          __size_of_srand 0034  
                        __size_of_putch 001A                    _INTERRUPT_Initialize 7F68  
                              _T6CLKCON 003F96                         ?_DMA1_DMAOR_ISR 0055  
                              _INT0_ISR 8DDC                                _INT1_ISR 8DEC  
                              _LATCbits 003FBC                                _LATDbits 003FBD  
                              _LATEbits 003FBE       __size_of_INT1_SetInterruptHandler 0028  
                              _IPR1bits 003981                                _IPR2bits 003982  
                              _PIE1bits 003991                                _IPR3bits 003983  
                              _PIE2bits 003992                                _IPR5bits 003985  
                              _PIE3bits 003993                               _tickCount 0060  
                              _IPR6bits 003986                                _PIE5bits 003995  
                              _IPR8bits 003988                                _PIE6bits 003996  
                              _IPR9bits 003989                                _PIE8bits 003998  
                   __CFG_BORV$VBOR_2P45 000000                                _PIE9bits 003999  
                             _ring_buf1 0383                               _ring_buf2 0340  
                              _PIR1bits 0039A1                                i2u434_48 8648  
                              i2u434_49 865C                                _PIR2bits 0039A2  
                              _SPI1BAUD 003D19                                _PIR4bits 0039A4  
                              _SPI1CON0 003D14                                _SPI1CON1 003D15  
                              _SPI1CON2 003D16                                _PIR5bits 0039A5  
                              _PIR8bits 0039A8                                _PIR9bits 0039A9  
                              i2u882_48 7F34                                i2u882_49 7F48  
              __size_of_TMR5_Initialize 0046                               _set_vterm 8CC4  
                   __size_of_update_lcd 010E                             _help_button 85F4  
            __end_of_UART1_Transmit_ISR 8822                                _TMR5_ISR 8154  
                              _TMR6_ISR 8CFC                               _port_data 00D6  
                             _vfpfcnvrt 1244                            _SPI1INTFbits 003D1A  
                         _TMR5_CallBack 8B6A                              _ADCON0bits 003EF8  
                    __end_of_check_help 5FF6                               _start_lcd 8E6A  
               __size_of_FVR_Initialize 0008               __size_of_send_lcd_cmd_dma 0052  
                         _TMR6_CallBack 8BD2                   __size_of_send_lcd_cmd 0028  
     __size_of_TMR5_SetInterruptHandler 0028                        _set_display_info 8C30  
              __size_of_PWM8_Initialize 0016                __size_of_TMR6_Initialize 002A  
                           _INTCON0bits 003FD2                               copy_data0 749A  
                             copy_data1 74BC                _INT0_SetInterruptHandler 8A08  
                   __size_of_vterm_dump 012E                  _uart1TxBufferRemaining 0032  
   __end_of_UART2_SetTxInterruptHandler 8918             _UART2_SetTxInterruptHandler 88F0  
                              __Hparam0 0000                            _uart1RxCount 002F  
                          _uart2RxCount 0029                                __Lparam0 0000  
      __size_of_eaDogM_WriteStringAtPos 0036                 __CFG_RSTOSC$EXTOSC_4PLL 000000  
               __size_of_check_adc_scan 0008                      __CFG_BOREN$SBORDIS 000000  
              __size_of_conv_raw_result 04BE                           _wait_lcd_done 8CA8  
                          _send_lcd_cmd 88A0                        __size_of___aodiv 0280  
                      __size_of___fladd 07BC                        __size_of___aomod 0240  
                       _adc_int_handler 8C4E                        __size_of___fldiv 057A  
                      __size_of___awdiv 014E                        __size_of___flneg 0048  
                      __size_of___awmod 0118                        __size_of___flmul 082A  
                      __size_of___flsub 0046                        __size_of___fltol 0172  
                      __size_of___lodiv 0180                        __size_of___lomod 0140  
                 __end_of_DMA1_DMAA_ISR 8E2A                      ___fpclassifyf@F463 0088  
  __size_of_UART1_SetRxInterruptHandler 0028                         lp_filter@smooth 01BB  
                              ___xxtofl 5FF6                       ?_DMA1_DMADCNT_ISR 0055  
              __size_of_ADCC_Initialize 0068             __end_of_eaDogM_WriteCommand 8DCC  
                      __size_of_isalpha 0044                        __size_of_isdigit 0030  
                              __pivt0x8 0008                        __size_of_islower 0030  
                      __size_of_isspace 0052                      ??_DMA1_DMADCNT_ISR 00E7  
                              __ptext10 8DBE                                __ptext11 7D4A  
                              __ptext20 71BE                                __ptext12 61FA  
                              __ptext21 87C8                                __ptext13 3750  
                              __ptext30 8E6A                                __ptext22 8664  
                              __ptext14 8032                                __ptext31 7A98  
                              __ptext23 70B0                                __ptext15 8C12  
                              __ptext40 4BA6                                __ptext32 4EE6  
                              __ptext24 869A                                __ptext16 5FF6  
                              __ptext41 6AF2                                __ptext33 8094  
                              __ptext25 8264                                __ptext17 8E5E  
                              __ptext50 63BA                                __ptext42 6550  
                              __ptext34 7776                                __ptext26 8CA8  
                              __ptext18 5DE4                                __ptext51 66D0  
                              __ptext43 5BC4                                __ptext35 1244  
                              __ptext27 81B0                                __ptext19 6C32  
                              __ptext60 69A4                                __ptext52 8350  
                              __ptext44 51D2                                __ptext36 4480  
                              __ptext28 781E                                __ptext61 3C0E  
                              __ptext53 2A1A                                __ptext45 0000  
                              __ptext37 7C42                                __ptext29 8E64  
                              __ptext70 8CE0                                __ptext62 8396  
                              __ptext54 8308                                __ptext46 7CC6  
                              __ptext38 8738                                __ptext71 76CC  
                              __ptext63 5984                                __ptext55 21F0  
                              __ptext47 8768                                __ptext39 84AE  
                              __ptext80 8536                                __ptext72 5710  
                              __ptext64 5490                                __ptext56 6842  
                              __ptext48 73B2                                __ptext81 85F4  
                              __ptext73 82B6                                __ptext65 7BBA  
                              __ptext57 754C                                __ptext49 483A  
                              __ptext90 8918                                __ptext82 8B46  
                              __ptext74 8798                                __ptext66 6F9C  
                              __ptext58 31D6                                __ptext91 7FCE  
                              __ptext83 85B8                                __ptext75 8CC4  
                              __ptext67 78C4                                __ptext59 6E84  
                              __ptext92 8940                                __ptext84 8E3E  
                              __ptext76 8DAE                                __ptext68 7A00  
                              __ptext93 8968                                __ptext85 8E46  
                              __ptext77 8C30                                __ptext69 6D60  
                              __ptext94 884E                                __ptext86 8E4E  
                              __ptext78 8D16                                __ptext95 8990  
                              __ptext87 83DC                                __ptext79 8DCC  
                              __ptext96 8422                                __ptext88 80F6  
                              __ptext97 89B8                                __ptext89 88F0  
                              __ptext98 8D2E                                __ptext99 8D46  
                      __size_of_isupper 0030                                us1003999 4500  
                      __size_of_sprintf 010A                        __size_of_tolower 0084  
                      __size_of_strncmp 0220                        __size_of_toupper 0084  
                      _ringBufS_put_dma 76CC                           __size_of_atoi 0274  
                         __size_of_ctoa 0088                           __size_of_main 03F2  
                         __size_of_dtoa 0480                           __size_of_nanf 0062  
                 __size_of_wait_lcd_set 0006                           __size_of_stoa 02BE  
                         __size_of_utoa 0340                           __size_of_xtoa 03BA  
                  __CFG_WDTCWS$WDTCWS_7 000000                       ?_DMA1_DMASCNT_ISR 0055  
                           _IVTLOCKbits 003FD4                __size_of_TMR5_WriteTimer 0040  
             _ADCC_ADI_InterruptHandler 0007                               stoa@F1166 00CF  
                    ??_DMA1_DMASCNT_ISR 00E7            __end_of_ADCC_StartConversion 8DAE  
                              _spi_link 0078                                _wdtdelay 81B0  
            __end_of_UART2_Transmit_ISR 884E                                _vfprintf 7776  
              __end_of_convert_adc_data 7DC4              __end_of_PWM8_LoadDutyValue 8578  
  __end_of_INT1_DefaultInterruptHandler 8E7A   __size_of_INT1_DefaultInterruptHandler 0002  
          _INT1_DefaultInterruptHandler 8E78                           ??_Default_ISR 0055  
                           _uart1RxHead 0031                  __size_of_get_vterm_ptr 002E  
                           _uart1TxHead 0034                             _uart2RxHead 002B  
                           _uart1RxTail 0030                          _get_raw_result 8C12  
                           _uart2TxHead 002E                             _uart1TxTail 0033  
                           _uart2RxTail 002A                             _uart2TxTail 002D  
                          _wait_lcd_set 8E64                      _EXT_INT_Initialize 8704  
  __end_of_TMR6_DefaultInterruptHandler 84AE   __size_of_TMR6_DefaultInterruptHandler 0046  
          _TMR6_DefaultInterruptHandler 8468    __end_of_ADCC_DefaultInterruptHandler 8E7C  
 __size_of_ADCC_DefaultInterruptHandler 0002            _ADCC_DefaultInterruptHandler 8E7A  
                              intlevel1 0000                                intlevel2 0000  
                     _send_lcd_cmd_long 8878          __size_of_set_temp_display_help 0010  
         __end_of_set_temp_display_help 8DBE                       __CFG_CLKOUTEN$OFF 000000  
            __end_of_eaDogM_WriteString 78C4                   __end_of_mode_lamp_dim 8D2E  
               __end_of_adc_int_handler 8C6C                  __size_of_INT0_CallBack 0022  
                            _SPI1SCKPPS 003ADE                              _SPI1SDIPPS 003ADF  
                __size_of_INT1_CallBack 0022                      __end_of_update_lcd 71BE  
                _uart2TxBufferRemaining 002C                          _FVR_Initialize 8E56  
                __end_of_get_raw_result 8C30                        _send_lcd_cmd_dma 8264  
                __size_of___fpclassifyf 0196                   TMR5_ISR@CountCallBack 0024  
      __end_of_INT1_SetInterruptHandler 8A08               __size_of_UART1_Initialize 0064  
                      ??_DMA1_DMAOR_ISR 00E7                _UART1_TxInterruptHandler 000A  
             __end_of_send_lcd_cmd_long 88A0                 __size_of_start_adc_scan 0068  
                   __end_of_Default_ISR 8E76          __end_of_PIN_MANAGER_Initialize 7BBA  
             __size_of_mode_lamp_bright 000E                      __end_of_vterm_dump 6D60  
               _eaDogM_WriteStringAtPos 869A                           _get_vterm_ptr 87C8  
                        _check_adc_scan 8E4E               __size_of_UART2_Initialize 005E  
